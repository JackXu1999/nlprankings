



















































Open Sesame: Getting inside BERT's Linguistic Knowledge


Proceedings of the Second BlackboxNLP Workshop on Analyzing and Interpreting Neural Networks for NLP, pages 241–253
Florence, Italy, August 1, 2019. c©2019 Association for Computational Linguistics

241

Open Sesame: Getting Inside BERT’s Linguistic Knowledge

Yongjie Lina,∗ and Yi Chern Tana,∗ and Robert Frankb
aDepartment of Computer Science, Yale University

bDepartment of Linguistics, Yale University
{yongjie.lin, yichern.tan, robert.frank}@yale.edu

Abstract

How and to what extent does BERT en-
code syntactically-sensitive hierarchical infor-
mation or positionally-sensitive linear infor-
mation? Recent work has shown that contex-
tual representations like BERT perform well
on tasks that require sensitivity to linguis-
tic structure. We present here two studies
which aim to provide a better understanding
of the nature of BERT’s representations. The
first of these focuses on the identification of
structurally-defined elements using diagnostic
classifiers, while the second explores BERT’s
representation of subject-verb agreement and
anaphor-antecedent dependencies through a
quantitative assessment of self-attention vec-
tors. In both cases, we find that BERT en-
codes positional information about word to-
kens well on its lower layers, but switches to
a hierarchically-oriented encoding on higher
layers. We conclude then that BERT’s repre-
sentations do indeed model linguistically rel-
evant aspects of hierarchical structure, though
they do not appear to show the sharp sensitiv-
ity to hierarchical structure that is found in hu-
man processing of reflexive anaphora.1

1 Introduction

Word embeddings have become an important cor-
nerstone in any NLP pipeline. Although such
embeddings traditionally involve context-free dis-
tributed representations of words (Mikolov et al.,
2013; Pennington et al., 2014), recent successes
with contextualized representations (Howard and
Ruder, 2018; Peters et al., 2018; Radford et al.,
2019) have led to a paradigm shift. One promi-
nent architecture is BERT (Devlin et al., 2018), a
Transformer-based model that learns bidirectional
encoder representations for words, on the basis of

∗Equal contribution.
1The code is available at https://github.com/

yongjie-lin/bert-opensesame.

a masked language model and sentence adjacency
training objective. Simply using BERT’s represen-
tations in place of traditional embeddings has re-
sulted in state-of-the-art performance on a range of
downstream tasks including summarization (Liu,
2019), question answering and textual entailment
(Devlin et al., 2018). It is still, however, unclear
why BERT representations perform well.

A flurry of recent work (Linzen et al., 2016;
Gulordava et al., 2018; Marvin and Linzen, 2018;
Lakretz et al., 2019) has explored how recurrent
neural language models perform in cases that re-
quire sensitivity to hierarchical syntactic structure,
and study how they do so, particularly in the do-
main of agreement. In these studies, a pre-trained
language model is asked to predict the next word
in a sentence (a verb in the target sentence) follow-
ing a sequence that may include other intervening
nouns with different grammatical features (e.g.,
“the bear by the trees eats...”). The predicted verb
should agree with the subject noun (bear) and not
the attractors (trees), in spite of the latter’s recency.
Such analyses have revealed that LSTMs exhibit
state tracking and explicit notions of word order
for modeling long term dependencies, although
this effect is diluted when sequential and structural
information in a sentence conflict. Further work
by Gulordava et al. (2018) and others (Linzen
and Leonard, 2018; Giulianelli et al., 2018) ar-
gues that RNNs acquire grammatical competence
in agreement that is more abstract than word col-
locations, although language model performance
that requires sensitivity to the phenomena such as
reflexive anaphora, non-local agreement and neg-
ative polarity remains low (Marvin and Linzen,
2018). Meanwhile, studies evaluating which lin-
guistic phenomena are encoded by contextualized
representations (Goldberg, 2019; Wolf, 2019; Ten-
ney et al., 2019) successfully demonstrate that
purely self-attentive architectures like BERT can

https://github.com/yongjie-lin/bert-opensesame
https://github.com/yongjie-lin/bert-opensesame


242

capture hierarchy-sensitive, syntactic dependen-
cies, and even support the extraction of depen-
dency parses (Hewitt and Manning, 2019). How-
ever, the way in which BERT does this has been
less studied. In this paper, we investigate how and
where the representations produced by pre-trained
BERT models (Devlin et al., 2018) express the hi-
erarchical organization of a sentence.

We proceed in two ways. The first involves the
use of diagnostic classifiers (Hupkes et al., 2018)
to probe the presence of hierarchical and linear
properties in the representations of words. How-
ever, unlike past work, we train these classifiers
using a “poverty of the stimulus” paradigm, where
the training data admit both linear and hierarchi-
cal solutions that can be distinguished by an en-
riched generalization set. This method allows us to
identify what kinds of information are represented
most robustly and transparently in the BERT em-
beddings. We find that as we use embeddings from
higher layers, the prevalence of linear/sequential
information decreases, while the availability of on
hierarchical information increases, suggesting that
with each layer, BERT phases out positional infor-
mation in favor of hierarchical features of increas-
ing complexity.

In the second set of experiments, we explore
a novel approach to the study of BERT’s self-
attention vectors. Past explorations of attention
mechanisms, whether in the domain of vision
(Olah et al., 2018; Carter et al., 2019) or NLP
(Bahdanau et al., 2015; Karpathy et al., 2015;
Young et al., 2018; Voita et al., 2018), have largely
involved a range of visualization techniques or the
study of the general distribution of attention. Our
work takes a quantitative approach to the study
of attention and its encoding of syntactic depen-
dencies. Specifically, we consider the relation-
ships between verbs and the subjects with which
they agree, and reflexive anaphors and their an-
tecedents. Building on past work in psycholin-
guistics, we consider the influence of distractor
noun phrases on the identification of these de-
pendencies. We propose a simple attention-based
metric called the confusion score that captures
BERT’s response to syntactic distortions in an in-
put sentence. This score provides a novel quan-
titative method of evaluating BERT’s syntactic
knowledge as encoded in its attention vectors. We
find that BERT does indeed leverage syntactic re-
lationships between words to preferentially attend

to the “correct” noun phrase for the purposes of
agreement and anaphora, though syntactic struc-
ture does not show the strong categorical effects
we sometimes find in natural language. This result
again points to a representation of syntactically-
relevant hierarchical information in BERT, this
time through attention weightings.

Our analysis thus provides evidence that
BERT’s self-attention layers compose increas-
ingly abstract representations of linguistic struc-
ture without explicit word order information,
and that structural information is expressly fa-
vored over linear information. This explains why
BERT can perform well on downstream NLP
tasks, which typically require complex modeling
of structural relationships.

2 Diagnostic Classification

For our first exploration of the kind of linguistic
information captured in BERT’s embeddings, we
apply diagnostic classifiers to 3 tasks: identify-
ing whether a given word is the sentence’s main
auxiliary, the sentence’s subject noun, and the
sentence’s nth-token. In each task, we assess
how well BERT’s embeddings encode information
about a given linguistic property via the ability of
a simple diagnostic classifier to correctly recover
the presence of that property from the embeddings
of a single word. The three tasks focus on dif-
ferent sorts of information: identifying the main
auxiliary and the subject noun requires sensitivity
to hierarchical or syntactic information, while the
nth-token requires linear information.

For each token in a given sentence, its input rep-
resentation to BERT is a sum of its token, segment
and positional embeddings (Devlin et al., 2018).
We refer to these inputs as pre-embeddings. Note
that by construction, a) the pre-embeddings con-
tain linear but not hierarchical information, and b)
BERT cannot generate new linear information that
is not already in the input. Thus, any linear infor-
mation in BERT’s embeddings ultimately stems
from the pre-embeddings, while any hierarchical
information must be constructed by BERT itself.

2.1 Poverty of the stimulus

To classify an embedding as a sentence’s main
auxiliary or subject noun, the network needs to
have represented structural information about a
word’s role in the sentence. In many cases, such
structural information can be approximated lin-



243

Main auxiliary task Subject noun task

Training, Development
the cat will sleep the bee can sting

the cat will eat the fish that can swim the bee can sting the boy

Generalization
the cat that can meow will sleep (compound noun) the queen bee can sting

the cat that can meow will eat the fish that can swim (possessive) the queen’s bee can sting

Table 1: Representative sentences from the main auxiliary and subject noun tasks. For the latter, the generalization
set contains two types of sentences, compound nouns and possessives, which are evaluated on separately. In each
example, the correct token is underlined, while the distractor (consistent with the incorrect linear rule) is italicized.

early: the main auxiliary or subject noun could be
identified as the first auxiliary or noun in a sen-
tence. Though such a linear generalization may be
falsified if given certain complex examples, it will
succeed over a large range of simple sentences.
Chomsky (1980) argues that the relevant distin-
guishing examples may be very rare for the case
of identifying the main auxiliary (a property that
is necessary in order to form questions), and hence
this is an instance of the “poverty of the stimu-
lus” that motivates the hypothesis of innate bias
toward hierarchical generalizations. However, it
seems clear that distinguishing examples are plen-
tiful for the subject noun case. The question we
are interested in, then, is whether and how BERT’s
embeddings, which result from training on a mas-
sive dataset, encode hierarchical information.

Pursuing the idea of poverty of the stimulus
training (McCoy et al., 2018), we train diagnos-
tic classifiers only on sentences in which the rel-
evant property (main auxiliary or subject noun) is
stateable in either hierarchical or sequential terms,
i.e., the linearly first auxiliary or noun (cf. Section
2.2). The classifiers are then tested on sentences of
greater complexity in which the hierarchical and
linear generalizations can be distinguished. Since
our classifier is a simple perceptron that can access
only one embedding at a time, it cannot compute
complex contingencies among the representations
of multiple words, and cannot succeed unless such
information is already encoded in the individual
embeddings. Thus, success on these tasks would
indicate that BERT robustly represents the words
of a sentence using a feature space where the iden-
tification of hierarchical generalizations is easy.

2.2 Dataset

The main auxiliary and subject noun tasks use syn-
thetic datasets generated from context-free gram-
mars (cf. Appendix A.1) that were designed to iso-
late the relevant syntactic property for a poverty

of the stimulus setup. Typical sentences are high-
lighted in Table 1. In both tasks, the training,
development and generalization sets contained
40000, 10000, and 10000 examples respectively.

Main auxiliary In the training and development
sets, the main auxiliary (will in Table 1) is al-
ways the first auxiliary in the sentence. A classi-
fier that learns the naive linear rule of identifying
the first linearly occurring auxiliary instead of the
correct hierarchical (syntactic) rule still performs
well during training. However, in the generaliza-
tion set, the subject of each sentence is modified
by a relative clause that contains an intervening
auxiliary (that can meow). Since the main auxil-
iary is never the first auxiliary in this case, learning
the hierarchical rule becomes imperative.

Subject noun In the training and development
sets, the subject noun (bee in Table 1) is always the
first noun in the sentence. A classifier that learns
the linear rule of identifying the first linearly oc-
curring noun does well during training, but only
the hierarchical rule gives the right answer at test
time. In the generalization set (both compound
nouns & possessives cases), the subject noun is
the head of the construction (bee) and not the de-
pendent (queen). In the possessives case, we note
that subword tokenization always produces ’s as
a standalone token, e.g. queen’s is tokenized into
[queen] [’s]. Also, we allow sentences to chain an
arbitrary number of possessives via nesting.

nth-token For this experiment, we use sentences
from the Penn Treebank WSJ corpus. Following
the setup of Collins (2002) and filtering for sen-
tences between 10 to 30 tokens BERT tokeniza-
tion, we obtained training, development and gen-
eralization sets of sentences of sizes 21142, 3017
and 2999. We only consider 2 ≤ n ≤ 9. In par-
ticular, we ignore n = 1 since the first token pro-
duced by BERT is always trivially [CLS].



244

2.3 Methods
BERT models In our experiments, we consider
two of Google AI’s pre-trained BERT models
bert-base-uncased (bbu) and bert-large-uncased
(blu) from a PyTorch implementation.2 bbu has
12 layers, 12 attention heads and embedding width
768, while blu has 24 layers, 16 attention heads
and embedding width 1024.

Training For each task, we train a simple per-
ceptron with a sigmoid output to perform binary
classification on individual token embeddings of a
sentence, based on whether the underlying token
possesses the property relevant to the task. This is
similar to the concept of diagnostic classification
by Hupkes et al. (2018); Giulianelli et al. (2018).

the cat will sleep
(BERT) ↓ ↓ ↓ ↓

e1 e2 e3 e4
(Classifier) ↓ ↓ ↓ ↓

ŷ1 ŷ2 ŷ3 ŷ4

Each input sentence is tokenized and processed
by BERT, and the resulting embeddings {ei} are
individually passed to the classifier fθ to produce
a sequence of logits {ŷi}. Supervision is provided
via a one-hot vector of indicators {yi} for the spec-
ified property. For example, in the main auxiliary
task, the above example would have y1 = y2 =
y4 = 0 and y3 = 1, since the third word is the
main auxiliary. The contribution of each example
to the total cross-entropy loss is:

Lθ = −
∑
i

(yi log ŷi+(1− yi) log(1− ŷi)) (1)

Each classifier is trained for a single epoch us-
ing the Adam optimizer (Kingma and Ba, 2014)
with hyperparameters lr = 0.001, β1 = 0.9, β2 =
0.999. We freeze BERT’s weights throughout
training, which allows us to take good classifica-
tion performance as evidence that the information
relevant to the task is being encoded in BERT’s
embeddings in a salient, easily retrievable manner.

Evaluation For each example at test time, after
computing the logits we obtain the index of the
classifier’s most confident guess within the sen-
tence:

i∗ = argmax
i

ŷi (2)

The average yi∗ across the test set is reported as
the classification accuracy.

2https://github.com/huggingface/
pytorch-pretrained-BERT

Figure 1: Layerwise accuracy of diagnostic classifiers
on the generalization set of the main auxiliary task.

Layerwise diagnosis One key aspect of our ex-
periments is the training of layer-specific classi-
fiers for all layers. This yields a layerwise diag-
nosis of the information content in BERT’s em-
beddings, providing a glimpse into how BERT
internally manipulates and composes linguistic
information. We also train classifiers on the
pre-embeddings, which can be considered as the
“zero-th” layer of BERT and hence act as useful
baselines for content present in the input.

2.4 Results

Main auxiliary Classifiers for both models
achieved near-perfect accuracy across all layers on
the development set. In Figure 1, we observe that
on the generalization set, the classifiers for both
models can identify the main auxiliary with over
85% accuracy past layer 5, and bbu in particular
obtains near-perfect accuracy from layers 4 to 11.

As discussed in Section 2.2, the classifiers were
only given training examples where the main aux-
iliary was also the first auxiliary in the sentence.
Although the linear rule “pick the first auxiliary”
is compatible with the training data, the classifier
nonetheless learns the more complex but correct
hierarchical rule “pick the auxiliary of the main
clause”. By our argument from Section 2.1, this
suggests that BERT embeddings encode syntactic
information relevant to whether a token is the main
auxiliary, as a feature salient enough to be recov-
erable by our simple diagnostic classifier.

We found that almost all instances of classifi-
cation errors involved the misidentification of the
linearly first auxiliary (within the relative clause)
as the main auxiliary, e.g. can instead of will in
Table 1. We believe that this stems from the signif-
icance of part-of-speech information for language
modeling. As a result, any word of a different POS
will not be chosen by the classifier.

https://github.com/huggingface/pytorch-pretrained-BERT
https://github.com/huggingface/pytorch-pretrained-BERT


245

Figure 2: Layerwise accuracy of diagnostic classifiers
on the compound noun generalization set of the subject
noun task.

Figure 3: Layerwise accuracy of diagnostic classifiers
on the possessive generalization set of the subject noun
task.

Subject noun As with the previous task, clas-
sifiers for both models achieved near-perfect ac-
curacy across all layers on the development set.
On the compound noun generalization set (Fig-
ure 2), while bbu achieved near-perfect accuracy
in later layers, blu consistently performed poorly.
bbu’s performance suggests that in the classifier
successfully learns a generalization that excludes
the first noun of a compound, as opposed to the
naive linear rule “pick the first noun”. As before,
this suggests that BERT encodes syntactic infor-
mation in its embeddings. However, blu’s perfor-
mance is unexpected: it consistently predicts the
object noun when it makes errors. In contrast, on
the possessive generalization set (Figure 3), both
models perform poorly. We offer an explanation
for this distinctive performance in Section 2.5.

nth token Since this property is entirely deter-
mined by the linear position of a word in a sen-
tence, it directly measures the amount of posi-
tional information encoded in the embeddings.
Here we have two baselines characterizing both
extremes: the normal pre-embeddings (denoted
pE) and a variant (pE – pos) where we exclude the

Figure 4: Layerwise accuracy of diagnostic classifiers
on the generalization set of the nth token task, for the
bbu model only. Note that each line corresponds to a
particular layer’s embeddings as we vary 2 ≤ n ≤ 9.
pE denotes pre-embeddings and pE – pos denotes pre-
embeddings without the positional component.

positional component from its construction. Since
BERT cannot introduce any new positional infor-
mation, we expect these two to represent upper
and lower bounds on the amount of positional in-
formation present in BERT’s embeddings.

In Figure 4, we see a dramatic difference in per-
formance on pE (one of the topmost lines) com-
pared to pE – pos (bottommost line). We note
that performances across all 12 layers fall between
these two extremes, confirming our intuitions from
earlier. Specifically, the classifiers for layers 1 – 3
have near-perfect accuracy on identifying an ar-
bitrary nth token (2 ≤ n ≤ 9). However, from
layer 4 onwards, the accuracy drops sharply as n
increases. This suggests that the positional com-
ponent of pre-embeddings is the primary source of
positional information in BERT, and BERT (bbu)
discards a significant amount of positional infor-
mation between layers 3 and 4, possibly in favor
of hierarchical information.

2.5 Further Analysis

Main auxiliary In Figure 1, we observe that
classification accuracy increases sharply in the
first 4 layers, then plateaus before slowly decreas-
ing. This mirrors a similar layerwise trend ob-
served by Hewitt and Manning (2019). We pos-
tulate that the embeddings reach their “optimal
level of abstraction” with respect to their ability to
predict the main auxiliary halfway through BERT
(about layer 6 for bbu, 12 for blu). At layer 1,
the embedding for each token is a highly localized
representation that contains insufficient sentential
context to determine whether it is the main aux-
iliary of the sentence. As layer depth increases,



246

BERT composes increasingly abstract representa-
tions via self-attention, which allows it to extract
information from other tokens in the sentence. At
some point, the representation becomes abstract
enough to represent the hierarchical concept of a
“main auxiliary”, causing an early increase in clas-
sification accuracy. However, as depth increases
further, the representations become so abstract that
finer linguistic features are increasingly difficult to
recover, e.g., a token embedding at the sentence-
vector level of abstraction may longer be capable
of identifying itself as the main auxiliary, account-
ing for the slowly deteriorating performance to-
wards later layers.

Subject noun Given the similarity of the main
auxiliary and the subject noun classification tasks,
we might expect them to exhibit similar trends
in performance. In Figure 2, we observe a sim-
ilar early increase in diagnostic classification ac-
curacy for the bbu embeddings. The lack of sig-
nificant performance decay on higher layers pos-
sibly reflects the salience of the subject noun fea-
ture even at the sentence-vector level of abstrac-
tion. Strangely, blu performed poorly, even worse
than chance (50%). We are unable to explain why
this happens and leave this for future research.

On the possessive generalization set, the poor
performance of both models seems to contra-
dict the hypothesis that BERT has learned an ab-
stract hierarchical generalization to classify sub-
ject nouns. We conjecture that BERT’s issues in
the possessive case stem from the ambiguity of
the ’s token, which can function either as a pos-
sessive marker or as a contracted auxiliary verb
(e.g.“She’s sleeping”). If BERT takes a possessive
occurrence of ’s as the auxiliary verb, the immedi-
ately preceding noun can be (incorrectly) analyzed
as the subject. If so, this would suggest that BERT
does not represent the syntactic structure of the en-
tire sentence in a unified fashion, but instead uses
local cues to constituency. In Figure 3, the gradu-
ally increasing but still poor performance towards
later layers in both models suggests that the em-
beddings might be trending toward a more abstract
representation, but do not ultimately achieve it.

nth token For each layer k ≥ 3, Figure 4 shows
an asymmetry where the classifier for layer k per-
forms worse at identifying the nth token as n in-
creases. We believe that this may be an artifact of
the distributional properties of natural language:

the distribution of words that occur at the start of a
sentence tends to be concentrated on a small class
of parts of speech that can occur near the begin-
ning of constituents that can begin a sentence. As
n increases, the class of possible parts is no longer
a function of the beginning of the sentence, and
as a result becomes more uniform. As a result, it
is easier for a classifier to predict whether a given
word is the nth token when n is small, since it can
make use of easily accessible part-of-speech infor-
mation in the embeddings to limit its options to
only the tokens likely to occur in a given position.

3 Diagnostic Attention

Our second exploration of BERT’s syntactic
knowledge focuses on the encoding of grammat-
ical relationships instead of the identification of
elements with specific structural properties. We
consider two phenomena: reflexive anaphora and
subject-verb agreement. For each, we deter-
mine the extent to which BERT attends to lin-
guistically relevant elements via the self-attention
mechanism. This gives us further information
about how hierarchy-sensitive syntactic informa-
tion is encoded.

3.1 Quantifying intrusion effects via
attention

Subject-verb and antecedent-anaphor dependen-
cies both involve a dependent element, which we
call the target (the verb or the anaphor) and the el-
ement on which it depends, which we call the trig-
ger (the subject or the antecedent that provides the
interpretation). A considerable body of work in
psycholinguistics has explored how humans pro-
cess such dependencies in the presence of ele-
ments that are not in relevant structural positions
but which linearly intervene between the trigger
and target. Dillon et al. (2013) aim to quantify
this intrusion effect in human reading for the two
dependencies we explore here. Under the assump-
tion that higher reading time and eye movement
regressions indicate an intrusion effect, they con-
clude that intruding noun-phrases have a substan-
tial effect on the processing of subject-verb agree-
ment, but not antecedent-anaphor relations.

We adapt this idea in measuring intrusion ef-
fects in BERT. We propose a simple and novel
metric we term the “confusion score” for quantify-
ing intrusion effects using attention. This quantita-



247

Subject-Verb Agreement

Condition RelativeClause
DN

Number Match Example Sentence
Mean

Confusion Score

A1 7 X the cat near the dog does sleep 0.97
A2 7 7 the cat near the dogs does sleep 0.93
A3 X X the cat that can comfort the dog does sleep 0.85
A4 X 7 the cat that can comfort the dogs does sleep 0.81

Reflexive Anaphora

Condition RelativeClause
DNo

Gender Match
DNr

Gender Match Example Sentence
Mean

Confusion Score

R1 7 X NA the lord could comfort the wizard by himself 1.01
R2 7 7 NA the lord could comfort the witch by himself 0.92
R3 X NA X the lord that can hurt the prince could comfort himself 0.99
R4 X NA 7 the lord that can hurt the princess could comfort himself 0.89
R5 X X X the lord that can hurt the prince could comfort the wizard by himself 1.57
R6 X X 7 the lord that can hurt the princess could comfort the wizard by himself 1.52
R7 X 7 X the lord that can hurt the prince could comfort the witch by himself 1.49
R8 X 7 7 the lord that can hurt the princess could comfort the witch by himself 1.39

Table 2: Representative sentences from the subject-verb agreement and reflexive anaphora datasets for each con-
dition, and corresponding mean confusion scores. DNo: distractor noun as object. DNr: distractor noun in relative
clause.

tive metric allows us to measure the preferable at-
tention of transformer-based self-attention on one
entity as opposed to another. Formally, suppose
X = {xi}ni=1 are linguistic units of interest, i.e.
candidate triggers for the dependency, and Y is the
dependency target. For each layer l and attention
head a, we sum the self-attention weights from the
indices of xi (since each xi may consist of multi-
ple words) on attention head a of layer l − 1 to
Y on layer l, and take the mean over A attention
heads:

attnl(xi, Y ) =
1

A

A∑
a=1

∑
xij∈xi

attnla(xij , Y ) (3)

We finally define the confusion score on layer l as
the binary cross entropy of the normalized atten-
tion distribution between {xi} given Y as follows:

confl(X,Y ) = − log
attnl(x1, Y )∑n
i=1 attnl(xi, Y )

(4)

Note that this equation assumes that each depen-
dency has a unique trigger x1: verbs agree with
a single subject, and anaphors take a single noun
phrase as their antecedent.

Our study focuses on the examples of the forms
shown in Table 2. For subject-verb agreement,
there are two types of examples: with the distrac-
tor within a PP (A1 and A2) and with the distrac-
tor within a RC (A3 and A4). Past psycholinguis-
tic work has shown that distractor noun phrases

within PPs give rise to greater processing diffi-
culty than distractors within RCs (Bock and Cut-
ting, 1992). For each type, we compare confusion
in the case of distractors that share features with
the subject, the true trigger of agreement, (A1 and
A3) with those that do not (A2 and A4). Our ex-
pectation is that distractors that do not share fea-
tures with the target of agreement will yield less
confusion.

For reflexive anaphora, because of the possibil-
ity of ambiguity, we also consider sentences that
include a noun phrase that is a structurally pos-
sible antecedent. For example, condition R1 has
the subject the lord as its antecedent, but the ob-
ject noun phrase the wizard is also grammatically
possible. In contrast, for R2, the mismatch in gen-
der features prevents the object from serving as
an antecedent, which should lead to lower confu-
sion. Sentences R3 and R4 include a distractor
noun phrase within a RC. Since this noun phrase
does not c-command the anaphor, it is grammati-
cally inaccessible and should therefore contribute
less, if at all, to confusion. Sentence types R5
through R8 include both the relative modifier and
the object noun phrase, and systematically vary the
agreement properties of the two distractors.

We hypothesize that attention weights on each
linguistic unit indicate the relative importance of
that entity as a trigger of a linguistic dependency.
As a result, the ideal attention distribution should
put all of the probability mass on the antecedent
noun phrase for reflexive anaphora or on the sub-



248

ject noun phrase for agreement, and zero on the
distractor noun phrases. As a baseline, a uniform
distribution over two noun phrases, one the actual
target and the other a distractor, would lead to a
confusion score of − log 12 = 1; with two dis-
tractors, the uniform probability baseline would be
− log 13 = 1.6.

3.2 Dataset
We construct synthetic datasets using context-
free grammars (shown in Appendix A.1) for both
subject-verb agreement and reflexive anaphora
and compute mean confusion scores across mul-
tiple sentences. This allows us to control for se-
mantic effects on the confusion score. All datasets
for each condition contain 10000 examples.

In the subject-verb agreement datasets, we vary
1) the type of subordinate clause (prepositional
phrase, PP; or relative clause, RC), and 2) the
number on the distractor noun phrase. All condi-
tions should be unambiguous, since only the head
noun phrase can agree with the auxiliary.

In the reflexive anaphora datasets, we vary 1)
the presence of a RC, 2) the gender match be-
tween the RC’s noun phrase and the reflexive 3)
the presence of an object noun phrase, and 4) the
gender match between the object noun and the re-
flexive. All nouns are singular. Conditions R1,
R5, R6 are ambiguous conditions, as they include
an object noun phrase that matches the reflexive
in gender. In other conditions, only the head noun
phrase is the possible antecedent: the object mis-
matches in features and the noun phrase within the
RC is grammatically inaccessible.

3.3 Methods
We use Equation 4 to compute the confusion score
on each layer for the target in each sentence in our
dataset. As in Section 2.3, this yields a layerwise
diagnosis of confusion in BERT’s self-attention
mechanism. We also compute the mean confusion
score across all layers.3 In our experiments, we
compute confusion scores using bbu only.

Note that in conditions R1, R5 and R6, there
are two possible antecedents of the reflexive. We
nonetheless use Equation 4 to calculate confusion
scores relative to a single antecedent (the subject).

To compute the significance of the presence of
different types of distractors and of feature mis-

3We built on Vig (2019)’s BERT attention visualization li-
brary https://github.com/jessevig/bertviz to
implement the attention-based confusion score.

Figure 5: Layerwise confusion scores for each reflexive
anaphora condition listed in Table 2. Conditions R1 to
R4 have one distractor noun phrase, but conditions R5
to R8 have two distractor noun phrases.

Coefficient Estimate p-value

Subject-Verb Agreement

Intercept 1.33± 1.32e−3 < 2e−16
Relative Clause −0.12± 1.03e−3 < 2e−16
DNr Number Match 0.03± 1.03e−3 < 2e−16
Layer −0.06± 1.50e−4 < 2e−16

Reflexive Anaphora

Intercept 0.63± 1.24e−3 < 2e−16
DNo Gender Match 0.60± 9.09e−4 < 2e−16
DNo Gender Mismatch 0.50± 9.09e−4 < 2e−16
DNr Gender Match 0.57± 9.09e−4 < 2e−16
DNr Gender Mismatch 0.49± 9.09e−4 < 2e−16
Layer −0.03± 9.72e−5 < 2e−16

Table 3: Regression estimates and p-values for the co-
efficient effects under reflexive anaphora and subject-
verb agreement. All effects are statistically significant.

match of the distractors, we run a linear regression
to predict confusion score. For subject-verb agree-
ment, the baseline value is the confusion at layer 1
of a sentence with a PP and a mismatch in number
on the distractor noun (condition A2 in Table 2).
For reflexive anaphora, the baseline is the confu-
sion at layer 1 of a sentence with no RC and no
object noun (e.g. “the lord comforts himself”).

3.4 Results

Subject-verb agreement Since sentence types
A1 to A4 are all unambiguous, ideal confusion
scores should be zero. However, Table 2 indi-
cates that the mean confusion scores are instead
closer to the uniform probability baseline con-
fusion score of 1, suggesting that BERT’s self-
attention mechanism is far from able to perfectly
model syntactically-sensitive hierarchical infor-
mation. Nonetheless, from Table 3, we see that
BERT’s attention mechanism is in fact sensitive

https://github.com/jessevig/bertviz


249

to subtleties of linguistic structure: a distractor
within a PP causes more confusion than one within
a relative clause (i.e., the presence of the relative
has a negative coefficient in the linear model), in
agreement with past psycholinguistic work (Bock
and Cutting, 1992). Moreover, the presence of
matching distractors has a significant positive ef-
fect on confusion scores. These findings there-
fore suggest that BERT representations are sensi-
tive to different types of syntactic embedding as
well as the values of number features in comput-
ing subject-verb agreement dependencies.

Reflexive anaphora From Table 2, we see the
major effect of the number of distractor noun
phrases: mean confusion scores for conditions
with one distractor (R1-R4) are lower than those
with two distractors (R5-R8). If BERT were per-
fectly exploiting grammatical structure, we should
expect the presence of a grammatically inacces-
sible distractor noun within a relative clause not
to add to confusion. Thus, we might expect R5
and R6 to have mean confusion scores compara-
ble to R1, as both include single grammatically
viable distractor. However, they both have higher
mean confusion scores than R1 (the same is true
for R7/R8 vs. R2). Moreover, conditions R2 to
R4 and R7 to R8 should have confusion scores of
zero, since the head noun phrase is the only gram-
matically possible antecedent. This, however, is
not so. Taken together, we might conclude that
BERT attends unnecessarily to grammatically in-
accessible or grammatically mismatched distrac-
tor noun phrases, suggesting that it does not accu-
rately model reflexive dependencies.

Nonetheless, if we look more closely at the ef-
fects of the different factors through the linear
model reported in Table 3, we once again find ev-
idence for a sensitivity to both syntactic structure
and grammatical features: the presence of gram-
matically accessible distractors has a (slightly)
larger effect on confusion than grammatically in-
accessible distractors (i.e., DNo vs. DNr), particu-
larly when the distractor matches in features with
the actual antecedent.

3.5 Further Analysis

Layerwise diagnosis Figure 5 and Table 3 show
that confusion is negatively correlated with layer
depth for reflexive anaphora. Confusion scores
for subject-verb agreement exhibit a similar trend.
This provides additional evidence for our con-

jecture that BERT composes increasingly abstract
representations containing hierarchical informa-
tion, with an optimal level of abstraction. Notably,
the observed sensitivity of BERT’s self-attention
values to grammatical distortions suggests that
BERT’s syntactic knowledge is in fact encoded in
its attention matrices. Finally, it is worth noting
that confusion for both reflexives and subject-verb
agreement showed an increase at layer 4. Strik-
ingly, this was the level at which linear informa-
tion was found, through diagnostic classifiers, to
be degraded. We leave for the future an under-
standing of the connection between these.

4 Conclusion

In this paper, we investigated how and to what ex-
tent BERT representations encode syntactically-
sensitive hierarchical information, as opposed to
linear information. Through diagnostic classifi-
cation, we find that positional information is en-
coded in BERT from the pre-embedding level up
through lower layers of the model. At higher
layers, information becomes less positional and
more hierarchical, and BERT encodes increas-
ingly complex representations of sentence units.

We propose a simple and novel method of ob-
serving, for a given syntactic phenomenon, the
intrusion effects of distractors on BERT’s self-
attention mechanism. Through such diagnostic
attention, we find that BERT does encode as-
pects of syntactic structure that are relevant for
subject-verb agreement and reflexive dependen-
cies through attention weights, and that this infor-
mation is represented more accurately on higher
layers. We also find evidence that BERT is re-
sponsive to matching of grammatical features such
as gender and number. However, BERT’s atten-
tion is only incompletely modulated by structural
and featural properties, and attention is sometimes
spread across grammatically irrelevant elements.

We conclude that BERT composes increasingly
abstract hierarchical representations of linguistic
structure using its self-attention mechanism. To
further understand BERT’s syntactic knowledge,
further work can be done to (1) investigate or vi-
sualize layer-on-layer changes in BERT’s struc-
tural and positional information, particularly be-
tween layers 3 and 4 when positional information
is largely phased out, and (2) retrieve the increas-
ingly hierarchical representations of BERT across
layers via the self-attention mechanism.



250

References
Dzmitry Bahdanau, Kyunghyun Cho, and Yoshua Ben-

gio. 2015. Neural machine translation by jointly
learning to align and translate. In International Con-
ference for Learning Representations.

Kathryn Bock and J. Cooper Cutting. 1992. Reg-
ulating mental energy: Performance units in lan-
guage production. Journal of Memory and Lan-
guage, 31(1):99–127.

Shan Carter, Zan Armstrong, Ludwig Schubert,
Ian Johnson, and Chris Olah. 2019. Activa-
tion atlas. https://distill.pub/2019/
activation-atlas [Accessed: 19 Apr 2019].

Noam Chomsky. 1980. Rules and representations. Be-
havioral and Brain Sciences, 3(1):1–15.

Michael Collins. 2002. Discriminative training meth-
ods for hidden Markov models: Theory and experi-
ments with perceptron algorithms. In Proceedings
of the 2002 Conference on Empirical Methods in
Natural Language Processing, pages 1–8. Associ-
ation for Computational Linguistics.

Jacob Devlin, Ming-Wei Chang, Kenton Lee, and
Kristina Toutanova. 2018. BERT: Pre-training
of deep bidirectional transformers for language
understanding. Computing Research Repository,
abs/1810.04805.

Brian Dillon, Alan Mishler, Shayne Sloggett, and Colin
Phillips. 2013. Contrasting intrusion profiles for
agreement and anaphora: Experimental and model-
ing evidence. Journal of Memory and Language,
69(2):85–103.

Mario Giulianelli, Jack Harding, Florian Mohnert,
Dieuwke Hupkes, and Willem Zuidema. 2018. Un-
der the hood: Using diagnostic classifiers to in-
vestigate and improve how language models track
agreement information. In Proceedings of the 2018
EMNLP Workshop BlackboxNLP: Analyzing and In-
terpreting Neural Networks for NLP, pages 240–
248, Brussels, Belgium. Association for Computa-
tional Linguistics.

Yoav Goldberg. 2019. Assessing BERT’s syntac-
tic abilities. Computing Research Repository,
abs/1901.05287.

Kristina Gulordava, Piotr Bojanowski, Edouard Grave,
Tal Linzen, and Marco Baroni. 2018. Colorless
green recurrent networks dream hierarchically. In
Proceedings of the 2018 Conference of the North
American Chapter of the Association for Computa-
tional Linguistics: Human Language Technologies,
Volume 1 (Long Papers), pages 1195–1205, New
Orleans, Louisiana. Association for Computational
Linguistics.

John Hewitt and Christopher Manning. 2019. A struc-
tural probe for finding syntax in word representa-
tions. In International Conference for Learning
Representations.

Jeremy Howard and Sebastian Ruder. 2018. Universal
language model fine-tuning for text classification.
In Proceedings of the 56th Annual Meeting of the
Association for Computational Linguistics (Volume
1: Long Papers), pages 328–339, Melbourne, Aus-
tralia. Association for Computational Linguistics.

Dieuwke Hupkes, Sara Veldhoen, and Willem
Zuidema. 2018. Visualisation and diagnostic clas-
sifiers reveal how recurrent and recursive neural net-
works process hierarchical structure. Journal of Ar-
tificial Intelligence Research, 61:907926.

Andrej Karpathy, Justin Johnson, and Li Fei-Fei. 2015.
Visualizing and understanding recurrent networks.
Computing Research Repository, abs/1506.02078.

Diederik P Kingma and Jimmy Ba. 2014. Adam: A
method for stochastic optimization. Computing Re-
search Repository, abs/1412.6980.

Yair Lakretz, German Kruszewski, Theo Desbordes,
Dieuwke Hupkes, Stanislas Dehaene, and Marco
Baroni. 2019. The emergence of number and syn-
tax units in LSTM language models. Computing Re-
search Repository, abs/1903.07435.

Tal Linzen, Emmanuel Dupoux, and Yoav Goldberg.
2016. Assessing the ability of LSTMs to learn
syntax-sensitive dependencies. Transactions of the
Association for Computational Linguistics, 4:521–
535.

Tal Linzen and Brian Leonard. 2018. Distinct patterns
of syntactic agreement errors in recurrent networks
and humans. In Proceedings of the 40th Annual
Conference of the Cognitive Science Society, pages
690–695.

Yang Liu. 2019. Fine-tune BERT for extractive sum-
marization. In Computing Research Repository, vol-
ume abs/1903.10318.

Rebecca Marvin and Tal Linzen. 2018. Targeted syn-
tactic evaluation of language models. In Proceed-
ings of the 2018 Conference on Empirical Methods
in Natural Language Processing, pages 1192–1202,
Brussels, Belgium. Association for Computational
Linguistics.

R Thomas McCoy, Robert Frank, and Tal Linzen. 2018.
Revisiting the poverty of the stimulus: hierarchical
generalization without a hierarchical bias in recur-
rent neural networks. In Proceedings of the 40th
Annual Conference of the Cognitive Science Society,
pages 2093–2098.

Tomas Mikolov, Ilya Sutskever, Kai Chen, Greg S Cor-
rado, and Jeff Dean. 2013. Distributed representa-
tions of words and phrases and their compositional-
ity. In Advances in Neural Information Processing
Systems, pages 3111–3119.

https://doi.org/10.23915/distill.00015
https://doi.org/10.23915/distill.00015
https://distill.pub/2019/activation-atlas
https://distill.pub/2019/activation-atlas
https://doi.org/10.3115/1118693.1118694
https://doi.org/10.3115/1118693.1118694
https://doi.org/10.3115/1118693.1118694
https://www.aclweb.org/anthology/W18-5426
https://www.aclweb.org/anthology/W18-5426
https://www.aclweb.org/anthology/W18-5426
https://www.aclweb.org/anthology/W18-5426
https://doi.org/10.18653/v1/N18-1108
https://doi.org/10.18653/v1/N18-1108
https://nlp.stanford.edu/pubs/hewitt2019structural.pdf
https://nlp.stanford.edu/pubs/hewitt2019structural.pdf
https://nlp.stanford.edu/pubs/hewitt2019structural.pdf
https://www.aclweb.org/anthology/P18-1031
https://www.aclweb.org/anthology/P18-1031
https://www.aclweb.org/anthology/D18-1151
https://www.aclweb.org/anthology/D18-1151


251

Chris Olah, Arvind Satyanarayan, Ian Johnson, Shan
Carter, Ludwig Schubert, Katherine Ye, and Alexan-
der Mordvintsev. 2018. The building blocks of in-
terpretability. https://distill.pub/2018/
building-blocks [Accessed: 19 Apr 2019].

Jeffrey Pennington, Richard Socher, and Christopher
Manning. 2014. GloVe: Global vectors for word
representation. In Proceedings of the 2014 Con-
ference on Empirical Methods in Natural Language
Processing, pages 1532–1543.

Matthew E Peters, Mark Neumann, Mohit Iyyer,
Matt Gardner, Christopher Clark, Kenton Lee, and
Luke Zettlemoyer. 2018. Deep contextualized word
representations. Computing Research Repository,
abs/1802.05365.

Alec Radford, Jeffrey Wu, Rewon Child, David Luan,
Dario Amodei, and Ilya Sutskever. 2019. Lan-
guage models are unsupervised multitask learners.
https://d4mucfpksywv.cloudfront.
net/better-language-models/
language-models.pdf [Accessed: 19 Apr
2019].

Ian Tenney, Patrick Xia, Berlin Chen, Alex Wang,
Adam Poliak, R Thomas McCoy, Najoung Kim,
Benjamin Van Durme, Samuel R Bowman, Dipan-
jan Das, et al. 2019. What do you learn from con-
text? probing for sentence structure in contextual-
ized word representations. In International Confer-
ence on Learning Representations.

Jesse Vig. 2019. Visualizing attention in transformer-
based language models. Computing Research
Repository, abs/1904.02679.

Elena Voita, Pavel Serdyukov, Rico Sennrich, and Ivan
Titov. 2018. Context-aware neural machine trans-
lation learns anaphora resolution. In Proceedings of
the 56th Annual Meeting of the Association for Com-
putational Linguistics (Volume 1: Long Papers),
pages 1264–1274, Melbourne, Australia. Associa-
tion for Computational Linguistics.

Thomas Wolf. 2019. Some additional experiments
extending the tech report “Assessing BERT’s Syn-
tactic Abilities” by Yoav Goldberg. https:
//huggingface.co/bert-syntax/
extending-bert-syntax.pdf [Accessed:
19 Apr 2019].

Tom Young, Devamanyu Hazarika, Soujanya Poria,
and Erik Cambria. 2018. Recent trends in deep
learning based natural language processing. IEEE
Computational Intelligence Magazine, 13(3):55–75.

https://doi.org/10.23915/distill.00010
https://doi.org/10.23915/distill.00010
https://distill.pub/2018/building-blocks
https://distill.pub/2018/building-blocks
https://d4mucfpksywv.cloudfront.net/better-language-models/language-models.pdf
https://d4mucfpksywv.cloudfront.net/better-language-models/language-models.pdf
https://d4mucfpksywv.cloudfront.net/better-language-models/language-models.pdf
https://openreview.net/forum?id=SJzSgnRcKX
https://openreview.net/forum?id=SJzSgnRcKX
https://openreview.net/forum?id=SJzSgnRcKX
https://www.aclweb.org/anthology/P18-1117
https://www.aclweb.org/anthology/P18-1117
https://huggingface.co/bert-syntax/extending-bert-syntax.pdf
https://huggingface.co/bert-syntax/extending-bert-syntax.pdf
https://huggingface.co/bert-syntax/extending-bert-syntax.pdf


252

A Appendix

A.1 Context-free grammars for dataset
generation

S → NPM VPM
NPM → Det N | Det N Prep Det Nom | Det N RC
NPO → Det Nom | Det Nom Prep Det Nom | Det Nom RC
VPM → Aux VI | Aux VT NPO
RC → Rel Aux VI | Rel Det Nom Aux VT | Rel Aux VT Det Nom
Nom → N | JJ Nom
Det → the | some | my | your | our | her

N → bird | bee | ant | duck | lion | dog | tiger | worm | horse | cat | fish | bear | wolf | birds | bees | ants |ducks | lions | dogs | tigers | worms | horses | cats | fish | bears | wolves
VI → cry | smile | sleep | swim | wait | move | change | read | eat
VT → dress | kick | hit | hurt | clean | love | accept | remember | comfort
Aux → can | will | would | could
Prep → around | near | with | upon | by | behind | above | below
Rel → who | that
JJ → small | little | big | hot | cold | good | bad | new | old | young

Figure 6: Context-free grammar for the main auxiliary dataset.

S → NPM VP
NPM → Det MNom | Det MNom Prep Det Nom | Det MNom RC
NPO → Det Nom | Det Nom Prep Det Nom | Det Nom RC
VP → Aux VI | Aux VT NPO
RC → Rel Aux VI | Rel Det Nom Aux VT | Rel Aux VT Det Nom
Nom → N | JJ Nom
MNom → MNom1 | MNom2
MNom1 → N | JJ MNom1
MNom2 → N | JJ MNom2 | NS Poss MNom2 | Nadj+MN
Det → the | some | my | your | our | her
Poss → ’s
NS → bird | bee | ant | duck | lion | dog | tiger | worm | horse | cat | fish | bear | wolf

N → bird | bee | ant | duck | lion | dog | tiger | worm | horse | cat | fish | bear | wolf | birds | bees | ants |ducks | lions | dogs | tigers | worms | horses | cats | fish | bears | wolves
Nadj+MN → worker bee | worker ant | race horse | queen bee | german dog | house cat
VI → cry | smile | sleep | swim | wait | move | change | read | eat
VT → dress | kick | hit | hurt | clean | love | accept | remember | comfort
Aux → can | will | would | could
Prep → around | near | with | upon | by | behind | above | below
Rel → who | that
JJ → small | little | big | hot | cold | good | bad | new | old | young

Figure 7: Context-free grammar for the subject noun dataset.



253

S → NPsg Agr Auxsg VI | NPpl Agr Auxpl VI
NPsg Agr → Det Nsg | Det Nsg Prep Det N | Det Nsg Prep RCsg
NPpl Agr → Det Npl | Det Npl Prep Det N | Det Npl Prep RCpl
RCsg → Rel Auxsg VI | Rel Auxsg VT Det N | Rel Det Nsg Auxsg VT | Rel Det Npl Auxpl VT
N → Nsg | Npl
RCpl → Rel Auxpl VI | Rel Auxpl VT Det N | Rel Det Nsg Auxsg VT | Rel Det Npl Auxpl VT
Auxsg → does | Modal
Auxpl → do | Modal
Det → the | some | my | your | our | her
Nsg → bird | bee | ant | duck | lion | dog | tiger | worm | horse | cat | fish | bear | wolf
Npl → birds | bees | ants | ducks | lions | dogs | tigers | worms | horses | cats | fish | bears | wolves
VI → cry | smile | sleep | swim | wait | move | change | read | eat
VT → dress | kick | hit | hurt | clean | love | accept | remember | comfort
VS → think | say | hope | know
VD → tell | convince | persuade | inform
Modal → can | will | would | could
Prep → around | near | with | upon | by | behind | above | below
Rel → who | that

Figure 8: Context-free grammar for the subject-verb agreement dataset.

S →
NPM Ant Aux VT ReflM | NPF Ant Aux VT ReflF |
NPM Ant Aux VT Det NF by ReflM | NPF Ant Aux VT Det NM by ReflF |
NPM Ant Aux VT Det NM by ReflM | NPF Ant Aux VT Det NF by ReflF

NPM Ant → Det NM | Det NM RC
NPF Ant → Det NF | Det NF RC
N → NM | NF
RC → Rel Aux VI | Rel Det N Aux VT | Rel Aux VT Det N
ReflM → himself
ReflF → herself
Det → the | some | my | your | our | her

NF → girl | woman | queen | actress | sister | wife | mother | princess | aunt | lady | witch | niece |nun

NM → boy | man | king | actor | brother | husband | father | prince | uncle | lord | wizard | nephew |monk
VI → cry | smile | sleep | swim | wait | move | change | read | eat
VT → dress | kick | hit | hurt | clean | love | accept | remember | comfort
VS → think | say | hope | know
VD → tell | convince | persuade | inform
Aux → can | will | would | could
Prep → around | near | with | upon | by | behind | above | below
Rel → who | that

Figure 9: Context-free grammar for the reflexive anaphora dataset.


