



















































GlossBERT: BERT for Word Sense Disambiguation with Gloss Knowledge


Proceedings of the 2019 Conference on Empirical Methods in Natural Language Processing
and the 9th International Joint Conference on Natural Language Processing, pages 3509–3514,
Hong Kong, China, November 3–7, 2019. c©2019 Association for Computational Linguistics

3509

GlossBERT: BERT for Word Sense Disambiguation
with Gloss Knowledge

Luyao Huang, Chi Sun, Xipeng Qiu∗, Xuanjing Huang
Shanghai Key Laboratory of Intelligent Information Processing, Fudan University

School of Computer Science, Fudan University
825 Zhangheng Road, Shanghai, China

{lyhuang18,sunc17,xpqiu,xjhuang}@fudan.edu.cn

Abstract

Word Sense Disambiguation (WSD) aims to
find the exact sense of an ambiguous word
in a particular context. Traditional supervised
methods rarely take into consideration the lex-
ical resources like WordNet, which are widely
utilized in knowledge-based methods. Recent
studies have shown the effectiveness of incor-
porating gloss (sense definition) into neural
networks for WSD. However, compared with
traditional word expert supervised methods,
they have not achieved much improvement. In
this paper, we focus on how to better leverage
gloss knowledge in a supervised neural WSD
system. We construct context-gloss pairs and
propose three BERT-based models for WSD.
We fine-tune the pre-trained BERT model and
achieve new state-of-the-art results on WSD
task.

1 Introduction

Word Sense Disambiguation (WSD) is a funda-
mental task and long-standing challenge in Nat-
ural Language Processing (NLP), which aims to
find the exact sense of an ambiguous word in a par-
ticular context (Navigli, 2009). Previous WSD ap-
proaches can be grouped into two main categories:
knowledge-based and supervised methods.

Knowledge-based WSD methods rely on lex-
ical resources like WordNet (Miller, 1995) and
usually exploit two kinds of lexical knowledge.
The gloss, which defines a word sense meaning,
is first utilized in Lesk algorithm (Lesk, 1986)
and then widely taken into account in many other
approaches (Banerjee and Pedersen, 2002; Basile
et al., 2014). Besides, structural properties of se-
mantic graphs are mainly used in graph-based al-
gorithms (Agirre et al., 2014; Moro et al., 2014).

Traditional supervised WSD methods (Zhong
and Ng, 2010; Shen et al., 2013; Iacobacci et al.,

∗Corresponding author.

2016) focus on extracting manually designed fea-
tures and then train a dedicated classifier (word ex-
pert) for every target lemma.

Although word expert supervised WSD meth-
ods perform better, they are less flexible than
knowledge-based methods in the all-words WSD
task (Raganato et al., 2017a). Recent neural-based
methods are devoted to dealing with this prob-
lem. Kågebäck and Salomonsson (2016) present
a supervised classifier based on Bi-LSTM, which
shares parameters among all word types except the
last layer. Raganato et al. (2017a) convert WSD
task to a sequence labeling task, thus building a
unified model for all polysemous words. However,
neither of them can totally beat the best word ex-
pert supervised methods.

More recently, Luo et al. (2018b) propose to
leverage the gloss information from WordNet and
model the semantic relationship between the con-
text and gloss in an improved memory network.
Similarly, Luo et al. (2018a) introduce a (hi-
erarchical) co-attention mechanism to generate
co-dependent representations for the context and
gloss. Their attempts prove that incorporating
gloss knowledge into supervised WSD approach
is helpful, but they still have not achieved much
improvement, because they may not make full use
of gloss knowledge.

In this paper, we focus on how to better lever-
age gloss information in a supervised neural WSD
system. Recently, the pre-trained language mod-
els, such as ELMo (Peters et al., 2018) and BERT
(Devlin et al., 2018), have shown their effective-
ness to alleviate the effort of feature engineer-
ing. Especially, BERT has achieved excellent re-
sults in question answering (QA) and natural lan-
guage inference (NLI). We construct context-gloss
pairs from glosses of all possible senses (in Word-
Net) of the target word, thus treating WSD task
as a sentence-pair classification problem. We fine-



3510

Sentence with four targets:
Your research stopped when a convenient assertion could be made.

Context-Gloss Pairs of the target word [research] Label Sense Key
[CLS] Your research ... [SEP] systematic investigation to ... [SEP] Yes research%1:04:00::
[CLS] Your research ... [SEP] a search for knowledge [SEP] No research%1:09:00::
[CLS] Your research ... [SEP] inquire into [SEP] No research%2:31:00::
[CLS] Your research ... [SEP] attempt to find out in a ... [SEP] No research%2:32:00::

Context-Gloss Pairs with weak supervision of the target word [research] Label Sense Key
[CLS] Your “research” ... [SEP] research: systematic investigation to ... [SEP] Yes research%1:04:00::
[CLS] Your “research” ... [SEP] research: a search for knowledge [SEP] No research%1:09:00::
[CLS] Your “research” ... [SEP] research: inquire into [SEP] No research%2:31:00::
[CLS] Your “research” ... [SEP] research: attempt to find out in a ... [SEP] No research%2:32:00::

Table 1: The construction methods. The sentence is taken from SemEval-2007 WSD dataset. The ellipsis “...”
indicates the remainder of the sentence or the gloss.

tune the pre-trained BERT model and achieve new
state-of-the-art results on WSD task. In particular,
our contribution is two-fold:

1. We construct context-gloss pairs and propose
three BERT-based models for WSD.

2. We fine-tune the pre-trained BERT model,
and the experimental results on several English all-
words WSD benchmark datasets show that our ap-
proach significantly outperforms the state-of-the-
art systems.

2 Methodology

In this section, we describe our method in detail.

2.1 Task Definition
In WSD, a sentence s usually consists of a series
of words: {w1, · · · , wm}, and some of the words
{wi1 , · · · , wik} are targets {t1, · · · , tk} need to
be disambiguated. For each target t, its candi-
date senses {c1, · · · , cn} come from entries of its
lemma in a pre-defined sense inventory (usually
WordNet). Therefore, WSD task aims to find the
most suitable entry (symbolized as unique sense
key) for each target in a sentence. See a sentence
example in Table 1.

2.2 BERT
BERT (Devlin et al., 2018) is a new language rep-
resentation model, and its architecture is a multi-
layer bidirectional Transformer encoder. BERT
model is pre-trained on a large corpus and two
novel unsupervised prediction tasks, i.e., masked
language model and next sentence prediction tasks
are used in pre-training. When incorporating
BERT into downstream tasks, the fine-tuning pro-
cedure is recommended. We fine-tune the pre-
trained BERT model on WSD task.

BERT(Token-CLS) Since every target in a sen-
tence needs to be disambiguated to find its exact
sense, WSD task can be regarded as a token-level
classification task. To incorporate BERT to WSD
task, we take the final hidden state of the token
corresponding to the target word (if more than one
token, we average them) and add a classification
layer for every target lemma, which is the same as
the last layer of the Bi-LSTM model (Kågebäck
and Salomonsson, 2016).

2.3 GlossBERT
BERT can explicitly model the relationship of a
pair of texts, which has shown to be beneficial
to many pair-wise natural language understanding
tasks. In order to fully leverage gloss information,
we propose GlossBERT to construct context-gloss
pairs from all possible senses of the target word in
WordNet, thus treating WSD task as a sentence-
pair classification problem.

We describe our construction method with an
example (See Table 1). There are four targets in
this sentence, and here we take target word re-
search as an example:

Context-Gloss Pairs The sentence containing
target words is denoted as context sentence. For
each target word, we extract glosses of all N pos-
sible senses (here N = 4) of the target word
(research) in WordNet to obtain the gloss sen-
tence. [CLS] and [SEP] marks are added to the
context-gloss pairs to make it suitable for the in-
put of BERT model. A similar idea is also used in
aspect-based sentiment analysis (Sun et al., 2019).

Context-Gloss Pairs with Weak Supervision
Based on the previous construction method, we
add weak supervised signals to the context-gloss



3511

Dataset Total Noun Verb Adj Adv
SemCor 226036 87002 88334 31753 18947

SE2 2282 1066 517 445 254
SE3 1850 900 588 350 12

SE07 455 159 296 0 0
SE13 1644 1644 0 0 0
SE15 1022 531 251 160 80

Table 2: Statistics of the different parts of speech anno-
tations in English all-words WSD datasets.

pairs (see the highlighted part in Table 1). The
signal in the gloss sentence aims to point out the
target word, and the signal in the context sentence
aims to emphasize the target word considering the
situation that a target word may occur more than
one time in the same sentence.

Therefore, each target word has N context-gloss
pair training instances (label ∈ {yes, no}). When
testing, we output the probability of label = yes
of each context-gloss pair and choose the sense
corresponding to the highest probability as the pre-
diction label of the target word. We experiment
with three GlossBERT models:

GlossBERT(Token-CLS) We use context-gloss
pairs as input. We highlight the target word by tak-
ing the final hidden state of the token correspond-
ing to the target word (if more than one token,
we average them) and add a classification layer
(label ∈ {yes, no}).

GlossBERT(Sent-CLS) We use context-gloss
pairs as input. We take the final hidden state
of the first token [CLS] as the representation of
the whole sequence and add a classification layer
(label ∈ {yes, no}), which does not highlight the
target word.

GlossBERT(Sent-CLS-WS) We use context-
gloss pairs with weak supervision as input. We
take the final hidden state of the first token [CLS]
and add a classification layer (label ∈ {yes, no}),
which weekly highlight the target word by the
weak supervision.

3 Experiments

3.1 Datasets

The statistics of the WSD datasets are shown in
Table 2.

Training Dataset Following previous work
(Luo et al., 2018a,b; Raganato et al., 2017a,b; Ia-
cobacci et al., 2016; Zhong and Ng, 2010), we

choose SemCor3.0 as training corpus, which is the
largest corpus manually annotated with WordNet
sense for WSD.

Evaluation Datasets We evaluate our method
on several English all-words WSD datasets. For
a fair comparison, we use the benchmark datasets
proposed by Raganato et al. (2017b) which in-
clude five standard all-words fine-grained WSD
datasets from the Senseval and SemEval com-
petitions: Senseval-2 (SE2), Senseval-3 (SE3),
SemEval-2007 (SE07), SemEval-2013 (SE13)
and SemEval-2015 (SE15). Following Luo et al.
(2018a), Luo et al. (2018b) and Raganato et al.
(2017a), we choose SE07, the smallest among
these test sets, as the development set.

WordNet Since Raganato et al. (2017b) map all
the sense annotations in these datasets from their
original versions to WordNet 3.0, we extract word
sense glosses from WordNet 3.0.

3.2 Settings
We use the pre-trained uncased BERTBASE
model1 for fine-tuning, because we find that
BERTLARGE model performs slightly worse than
BERTBASE in this task. The number of Trans-
former blocks is 12, the number of the hidden
layer is 768, the number of self-attention heads
is 12, and the total number of parameters of the
pre-trained model is 110M. When fine-tuning, we
use the development set (SE07) to find the optimal
settings for our experiments. We keep the dropout
probability at 0.1, set the number of epochs to 4.
The initial learning rate is 2e-5, and the batch size
is 64.

3.3 Results
Table 3 shows the performance of our method on
the English all-words WSD benchmark datasets.
We compare our approach with previous methods.

The first block shows the MFS baseline, which
selects the most frequent sense in the training cor-
pus for each target word.

The second block shows two knowledge-based
systems. Leskext+emb (Basile et al., 2014) is a
variant of Lesk algorithm (Lesk, 1986) by calcu-
lating the gloss-context overlap of the target word.
Babelfy (Moro et al., 2014) is a unified graph-
based approach which exploits the semantic net-
work structure from BabelNet.

1https://storage.googleapis.com/bert models/2018 10 18/
uncased L-12 H-768 A-12.zip



3512

Dev Test Datasets Concatenation of Test Datasets
System SE07 SE2 SE3 SE13 SE15 Noun Verb Adj Adv All
MFS baseline 54.5 65.6 66.0 63.8 67.1 67.7 49.8 73.1 80.5 65.5
Leskext+emb 56.7 63.0 63.7 66.2 64.6 70.0 51.1 51.7 80.6 64.2
Babelfy 51.6 67.0 63.5 66.4 70.3 68.9 50.7 73.2 79.8 66.4
IMS 61.3 70.9 69.3 65.3 69.5 70.5 55.8 75.6 82.9 68.9
IMS+emb 62.6 72.2 70.4 65.9 71.5 71.9 56.6 75.9 84.7 70.1
Bi-LSTM - 71.1 68.4 64.8 68.3 69.5 55.9 76.2 82.4 68.4
Bi-LSTM+att.+LEX+POS 64.8 72.0 69.1 66.9 71.5 71.5 57.5 75.0 83.8 69.9
GASext (Linear) - 72.4 70.1 67.1 72.1 71.9 58.1 76.4 84.7 70.4
GASext (Concatenation) - 72.2 70.5 67.2 72.6 72.2 57.7 76.6 85.0 70.6
CANs - 72.2 70.2 69.1 72.2 73.5 56.5 76.6 80.3 70.9
HCAN - 72.8 70.3 68.5 72.8 72.7 58.2 77.4 84.1 71.1
BERT(Token-CLS) 61.1 69.7 69.4 65.8 69.5 72.0 57.8 73.5 84.4 68.6
GlossBERT(Sent-CLS) 69.2 76.5 73.4 75.1 79.5 79.1 65.4 79.3 84.8 75.8
GlossBERT(Token-CLS) 71.9 77.0 75.4 74.6 79.3 78.8 66.8 79.9 85.0 76.3
GlossBERT(Sent-CLS-WS) 72.5 77.7 75.2 76.1 80.4 79.8 67.1 79.6 87.4 77.0

Table 3: F1-score (%) for fine-grained English all-words WSD on the test sets in the framework of Raganato et al.
(2017b) (including the development set SE07). Bold font indicates best systems. The five blocks list the MFS
baseline, two knowledge-based systems, two traditional word expert supervised systems, six recent neural-based
systems and our systems, respectively. Results in first three blocks come from Raganato et al. (2017b), and others
from the corresponding papers.

.

The third block shows two word expert tradi-
tional supervised systems. IMS (Zhong and Ng,
2010) is a flexible framework which trains SVM
classifiers and uses local features. And IMS+emb
(Iacobacci et al., 2016) is the best configuration
of the IMS framework, which also integrates word
embeddings as features.

The fourth block shows several recent neural-
based methods. Bi-LSTM (Kågebäck and Sa-
lomonsson, 2016) is a baseline for neural mod-
els. Bi-LSTM+att.+LEX+POS (Raganato et al.,
2017a) is a multi-task learning framework for
WSD, POS tagging, and LEX with self-attention
mechanism, which converts WSD to a sequence
learning task. GASext (Luo et al., 2018b) is a vari-
ant of GAS which is a gloss-augmented variant of
the memory network by extending gloss knowl-
edge. CANs and HCAN (Luo et al., 2018a) are
sentence-level and hierarchical co-attention neural
network models which leverage gloss knowledge.

In the last block, we report the performance of
our method. BERT(Token-CLS) is our baseline,
which does not incorporate gloss information, and
it performs slightly worse than previous traditional
supervised methods and recent neural-based meth-
ods. It proves that directly using BERT cannot ob-
tain performance growth. The other three methods
outperform other models by a substantial margin,
which proves that the improvements come from
leveraging BERT to better exploit gloss informa-
tion. It is worth noting that our method achieves
significant improvements in SE07 and Verb over
previous methods, which have the highest ambi-

guity level among all datasets and all POS tags re-
spectively according to Raganato et al. (2017b).

Moreover, GlossBERT(Token-CLS) performs
better than GlossBERT(Sent-CLS), which proves
that highlighting the target word in the sentence
is important. However, the weakly highlight-
ing method GlossBERT(Sent-CLS-WS) performs
best in most circumstances, which may result from
its combination of the advantages of the other two
methods.

3.4 Discussion

There are two main reasons for the great improve-
ments of our experimental results. First, we con-
struct context-gloss pairs and convert WSD prob-
lem to a sentence-pair classification task which is
similar to NLI tasks and train only one classifier,
which is equivalent to expanding the corpus. Sec-
ond, we leverage BERT (Devlin et al., 2018) to
better exploit the gloss information. BERT model
shows its advantage in dealing with sentence-pair
classification tasks by its amazing improvement
on QA and NLI tasks. This advantage comes
from both of its two novel unsupervised prediction
tasks.

Compared with traditional word expert super-
vised methods, our GlossBERT shows its effec-
tiveness to alleviate the effort of feature engineer-
ing and does not require training a dedicated clas-
sifier for every target lemma. Up to now, it can
be said that the neural network method can totally
beat the traditional word expert method. Com-
pared with recent neural-based methods, our so-



3513

lution is more intuitive and can make better use of
gloss knowledge. Besides, our approach demon-
strates that when we fine-tune BERT on a down-
stream task, converting it into a sentence-pair clas-
sification task may be a good choice.

4 Conclusion

In this paper, we seek to better leverage gloss
knowledge in a supervised neural WSD system.
We propose a new solution to WSD by construct-
ing context-gloss pairs and then converting WSD
to a sentence-pair classification task. We fine-
tune the pre-trained BERT model and achieve new
state-of-the-art results on WSD task.

Acknowledgments

We would like to thank the anonymous reviewers
for their valuable comments. The research work is
supported by National Natural Science Foundation
of China (No. 61751201 and 61672162), Shang-
hai Municipal Science and Technology Commis-
sion (16JC1420401 and 17JC1404100), Shanghai
Municipal Science and Technology Major Project
(No.2018SHZDZX01) and ZJLab.

References
Eneko Agirre, Oier López de Lacalle, and Aitor Soroa.

2014. Random walks for knowledge-based word
sense disambiguation. Computational Linguistics,
40(1):57–84.

Satanjeev Banerjee and Ted Pedersen. 2002. An
adapted lesk algorithm for word sense disambigua-
tion using wordnet. In International conference on
intelligent text processing and computational lin-
guistics, pages 136–145. Springer.

Pierpaolo Basile, Annalina Caputo, and Giovanni Se-
meraro. 2014. An enhanced lesk word sense dis-
ambiguation algorithm through a distributional se-
mantic model. In Proceedings of COLING 2014,
the 25th International Conference on Computational
Linguistics: Technical Papers, pages 1591–1600.

Jacob Devlin, Ming-Wei Chang, Kenton Lee, and
Kristina Toutanova. 2018. Bert: Pre-training of deep
bidirectional transformers for language understand-
ing. arXiv preprint arXiv:1810.04805.

Ignacio Iacobacci, Mohammad Taher Pilehvar, and
Roberto Navigli. 2016. Embeddings for word sense
disambiguation: An evaluation study. In Proceed-
ings of the 54th Annual Meeting of the Association
for Computational Linguistics (Volume 1: Long Pa-
pers), volume 1, pages 897–907.

Mikael Kågebäck and Hans Salomonsson. 2016. Word
sense disambiguation using a bidirectional lstm.
arXiv preprint arXiv:1606.03568.

Michael Lesk. 1986. Automatic sense disambiguation
using machine readable dictionaries: how to tell a
pine cone from an ice cream cone. In Proceedings of
the 5th annual international conference on Systems
documentation, pages 24–26. Citeseer.

Fuli Luo, Tianyu Liu, Zexue He, Qiaolin Xia, Zhi-
fang Sui, and Baobao Chang. 2018a. Leveraging
gloss knowledge in neural word sense disambigua-
tion by hierarchical co-attention. In Proceedings of
the 2018 Conference on Empirical Methods in Nat-
ural Language Processing, pages 1402–1411.

Fuli Luo, Tianyu Liu, Qiaolin Xia, Baobao Chang,
and Zhifang Sui. 2018b. Incorporating glosses into
neural word sense disambiguation. arXiv preprint
arXiv:1805.08028.

George A Miller. 1995. Wordnet: a lexical database for
english. Communications of the ACM, 38(11):39–
41.

Andrea Moro, Alessandro Raganato, and Roberto Nav-
igli. 2014. Entity linking meets word sense disam-
biguation: a unified approach. Transactions of the
Association for Computational Linguistics, 2:231–
244.

Roberto Navigli. 2009. Word sense disambiguation: A
survey. ACM computing surveys (CSUR), 41(2):10.

Matthew Peters, Mark Neumann, Mohit Iyyer, Matt
Gardner, Christopher Clark, Kenton Lee, and Luke
Zettlemoyer. 2018. Deep contextualized word rep-
resentations. In Proceedings of the 2018 Confer-
ence of the North American Chapter of the Associ-
ation for Computational Linguistics: Human Lan-
guage Technologies, Volume 1 (Long Papers), pages
2227–2237.

Alessandro Raganato, Claudio Delli Bovi, and Roberto
Navigli. 2017a. Neural sequence learning models
for word sense disambiguation. In Proceedings of
the 2017 Conference on Empirical Methods in Nat-
ural Language Processing, pages 1156–1167.

Alessandro Raganato, Jose Camacho-Collados, and
Roberto Navigli. 2017b. Word sense disambigua-
tion: A unified evaluation framework and empiri-
cal comparison. In Proceedings of the 15th Confer-
ence of the European Chapter of the Association for
Computational Linguistics: Volume 1, Long Papers,
pages 99–110.

Hui Shen, Razvan Bunescu, and Rada Mihalcea. 2013.
Coarse to fine grained sense disambiguation in
wikipedia. In Second Joint Conference on Lexical
and Computational Semantics (* SEM), Volume 1:
Proceedings of the Main Conference and the Shared
Task: Semantic Textual Similarity, volume 1, pages
22–31.



3514

Chi Sun, Luyao Huang, and Xipeng Qiu. 2019. Utiliz-
ing bert for aspect-based sentiment analysis via con-
structing auxiliary sentence. In Proceedings of the
2019 Conference of the North American Chapter of
the Association for Computational Linguistics: Hu-
man Language Technologies, Volume 1 (Long and
Short Papers), pages 380–385.

Zhi Zhong and Hwee Tou Ng. 2010. It makes sense:
A wide-coverage word sense disambiguation system
for free text. In Proceedings of the ACL 2010 system
demonstrations, pages 78–83.


