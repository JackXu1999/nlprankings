



















































Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics


Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics, pages 552–561
Vancouver, Canada, July 30 - August 4, 2017. c©2017 Association for Computational Linguistics

https://doi.org/10.18653/v1/P17-1051

Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics, pages 552–561
Vancouver, Canada, July 30 - August 4, 2017. c©2017 Association for Computational Linguistics

https://doi.org/10.18653/v1/P17-1051

MORSE: Semantic-ally Drive-n MORpheme SEgment-er

Tarek Sakakini
University of Illinois

Urbana, IL 61820
sakakini@illinois.edu

Suma Bhat
University of Illinois

Urbana, IL 61820
spbhat2@illinois.edu

Pramod Viswanath
University of Illinois

Urbana, IL 61820
pramodv@illinois.edu

Abstract

In this paper we present a novel frame-
work for morpheme segmentation which
uses the morpho-syntactic regularities pre-
served by word representations, in addi-
tion to orthographic features, to segment
words into morphemes. This framework
is the first to consider vocabulary-wide
syntactico-semantic information for this
task. We also analyze the deficiencies of
available benchmarking datasets and intro-
duce our own dataset that was created on
the basis of compositionality. We validate
our algorithm across different datasets and
languages and present new state-of-the-art
results.

1 Introduction

Morpheme segmentation is a core natural lan-
guage processing (NLP) task used as an inte-
gral component in related-fields such as infor-
mation retrieval (IR) (Zieman and Bleich, 1997;
Kurimo et al., 2007), automatic speech recog-
nition (ASR) (Bilmes and Kirchhoff, 2003; Ku-
rimo et al., 2006), and machine translation (MT)
(Lee, 2004; Virpioja et al., 2007). Most previ-
ous works have relied solely on orthographic fea-
tures (Harris, 1970; Goldsmith, 2000; Creutz and
Lagus, 2002, 2005, 2007), neglecting the under-
lying semantic information. This has led to an
over-segmentation of words because a change of
the surface form pattern is a necessary but insuffi-
cient indication of a morphological change. For
example, the surface form of “freshman”, hints
that it should be segmented to “fresh-man”, al-
though “freshman” does not describe semantically
the compositional meaning of “fresh” and “man”.

To compensate for this lack of semantic knowl-
edge, previous works (Schone and Jurafsky,

2000; Baroni et al., 2002; Narasimhan et al.,
2015) have incorporated semantic knowledge lo-
cally by checking the semantic relatedness of
possibly morphologically related pair of words.
Narasimhan et al. (2015) check for semantic relat-
edness using cosine similarity in word represen-
tations (Mikolov et al., 2013a; Pennington et al.,
2014). A limitation of such an approach is the
inherent “sample noise” in specific word repre-
sentations (exacerbated in the case of rare words).
Moreover, limitation to local comparison enforces
modeling morphological relations via semantic re-
latedness, although it has been shown that differ-
ence vectors model morphological relations more
accurately (Mikolov et al., 2013b). To address this
issue, we introduce a new framework (MORSE),
the first to bring semantics into morpheme seg-
mentation both on a local and a vocabulary-wide
level. That is, when checking for the morpho-
logical relation between two words, we not only
check for the semantic relatedness of the pair at
hand (local), but also check if the difference vec-
tors of pairs showing similar orthographic change
are consistent (vocabulary-wide).

In summary, MORSE clusters pairs of words
which only vary by an affix; for example, pairs
such as (“quick”, “quickly”) and (“hopeful”,
“hopefully”) get clustered together. To verify the
cluster of a specific affix from a semantic corpus-
wide standpoint, we check for the consistency of
the difference vectors (Mikolov et al., 2013b). To
evaluate it from an orthographic corpus-wide per-
spective, we check for the size of each cluster of
an affix. To evaluate each pair in a cluster locally
from a semantic standpoint, we check if a pair of
words in a valid affix cluster are morphologically
related by checking if its difference vector is con-
sistent with other members in the cluster and if
the words in the pair are semantically related (i.e.
close in the vector space). The reason for local

552

https://doi.org/10.18653/v1/P17-1051
https://doi.org/10.18653/v1/P17-1051


evaluations is exemplified by (“on”,“only”) which
belongs to the cluster of a valid affix (“ly”), al-
though they are not (obviously) morphologically
related. We would expect such a pair to fail the
last two local evaluation methods.

Our proposed segmentation algorithm is evalu-
ated using benchmarking datasets from the Mor-
pho Challenge (MC) for multiple languages and a
newly introduced dataset for English which com-
pensates for lack of discriminating capabilities in
the MC dataset. Experiments reveal that our pro-
posed framework not only outperforms the widely
used approach, but also performs better than pub-
lished state-of-the-art results.

The central contribution of this work is a novel
framework that performs morpheme segmentation
resulting in new state-of-the-art results. To the
best of our knowledge this is the first unsupervised
approach to consider the vocabulary-wide seman-
tic knowledge of words and their affixes in addi-
tion to relying on their surface forms. Moreover
we point out the deficiencies in the MC datasets
with respect to the compositionality of morphemes
and introduce our own dataset free of these defi-
ciencies.

2 Related Work

Extensive work has been done in morphology
learning, with tasks such as morphological anal-
ysis (Baayen et al., 1993), morphological reinflec-
tion (Cotterell et al., 2016), and morpheme seg-
mentation. Given the less complex nature of mor-
pheme segmentation in comparison to the other
tasks, most systems developed for morpheme seg-
mentation have been unsupervised or minimally
supervised (mostly for parameter tuning).

Unsupervised morpheme segmentation traces
back to (Harris, 1970), which falls under the
framework of Letter Successor Variety (LSV)
which builds on the hypothesis that predictabil-
ity of successor letters is high within morphemes
and low otherwise. The most dominant pieces
of work on unsupervised morpheme segmentation,
Morfessor (Creutz and Lagus, 2002, 2005, 2007)
and Linguistica (Goldsmith, 2000) adopt the Min-
imum Description Length (MDL) principle (Ris-
sanen, 1998): they aim to minimize describing
the lexicon of morphs as well as minimizing the
description of an input corpus. Morfessor has a
widely used API and has inspired a large body of
following work (Kohonen et al., 2010; Grönroos

et al., 2014).

The unsupervised original implementation was
later adapted (Kohonen et al., 2010; Grönroos
et al., 2014) to allow for minimal supervision. An-
other work on minimally supervised morpheme
segmentation is (Sirts and Goldwater, 2013) which
relies on Adaptor Grammars (AGs) (Johnson et al.,
2006). AGs learn latent tree structures over an in-
put corpus using a nonparametric Bayesian model
(Sirts and Goldwater, 2013).

(Lafferty et al., 2001) use Conditional Random
Fields (CRF) for morpheme segmentation. In this
supervised method, the morpheme segmentation
task is modeled as a sequence-to-sequence learn-
ing problem, whereby the sequence of labels de-
fines the boundaries of morphemes (Ruokolainen
et al., 2013, 2014). In contrast to the previ-
ously mentioned generative approaches of MDL
and AG, this method takes a discriminative ap-
proach and allows for the inclusion of a larger set
of features. In this approach, CRF learns a condi-
tional probability of a segmentation given a word
(Ruokolainen et al., 2013, 2014).

All these morpheme segmenters rely solely on
orthographic features of morphemes. Semantics
were initially introduced to morpheme segmenters
by (Schone and Jurafsky, 2000), using LSA to
generate word representations and then evaluate
if two words are morphologically related based
on semantic relatedness, as well as deterministic
orthographic methods. Similarly, (Baroni et al.,
2002) use edit distance and mutual information as
metrics for semantic and orthographic validity of
a morphological relation between two words. Re-
cent work in (Narasimhan et al., 2015), inspired by
the log-linear model in (Poon et al., 2009) incorpo-
rates semantic relatedness into the model via word
representations. Other systems such as (Üstün and
Can, 2016) rely solely on evaluating two words
from a semantic standpoint by the use of a two-
layer neural network.

MORSE introduces semantic information into
its morpheme segmenters via distributed word rep-
resentations while also relying on orthographic
features. Inspired by the work of (Soricut and Och,
2015), instead of merely evaluating semantic relat-
edness, we are the first to evaluate the morpholog-
ical relationship via the difference vector of mor-
phologically related words. Comparing the differ-
ence vectors of multiple pairs across the corpus
following the same morphological relation, gives

553



MORSE a vocabulary-wide evaluation of morpho-
logical relations learned.

3 System

The key limitation of previous frameworks that
rely solely on orthographic features is the result-
ing over-segmentation. As an example, MDL-
based frameworks segment “sing” to “s-ing” due
to the high frequency of the morphemes: “s” and
“ing”. Our framework combines semantic relat-
edness with orthographic relatedness to eliminate
such error. For the example mentioned, MORSE
validates morphemes such as “s” and “ing” from
an orthographic perspective, yet invalidates the re-
lation between “s” and “sing” from a local and
vocabulary-wide semantic perspective. Hence,
MORSE will segment “jumping” as “jump-ing”,
and perform no segmentations on “sing”.

To bring in semantic understanding into
MORSE, we rely on word representations
(Mikolov et al., 2013a; Pennington et al., 2014).
These word representations capture the semantics
of the vocabulary through statistics over the con-
text in which they appear. Moreover, morpho-
syntactic regularities have been shown over these
word representations, whereby pairs of words
sharing the same relationship exhibit equivalent
difference vectors (Mikolov et al., 2013b). For ex-
ample, it is expected in the vector space of word
representations that ~wjumping ´ ~wjump « ~wplaying ´
~wplay, but ~wsing ´ ~ws ff ~wplaying ´ ~wplay.

As a high level description, we first learn
all possible affix transformations (morphological
rules) in the language from pairs of words from
an orthographic standpoint. For example, the pair
(“jump”, “jumping”) corresponds to the valid affix
transformation φ suffixÝÝÝÑ “ing” (where φ represents
the empty string), and the pair (“slow”, “slogan”)
corresponds to the invalid rule “w” suffixÝÝÝÑ “gan”.
Then we invalidate the rules, such as “w” suffixÝÝÝÑ
“gan”, that do not conform to the linear relation
in the vector space. We also invalidate pairs of
words which, due to randomness, are orthograph-
ically related via a valid rule although they are not
morphologically related, such as (“on”, “only”).

Now we formalize the objects we learn in
MORSE and the scores (orthographic and se-
mantic) used for validation. This constitutes the
training stage. Finally, we formalize the inference
stage, where we use these objects and scores to
perform morpheme segmentation.

3.1 Training Stage

Objects:

• Rule set R made of all possible affix trans-
formations in a language. R is populated via
the following definition: Rsuffix = {aff1 suffixÝÝÝÑ
aff2: D (w1, w2) P V2, stem(w1) = stem(w2),
w1 = stem(w1) + aff1, w2 = stem(w2) + aff2},
Rprefix is defined similarly for prefixes, and R
= Rsuffix Y Rprefix. An example R would be
equal to {φ suffixÝÝÝÑ “ly”, φ prefixÝÝÝÑ “un”, “ing”
suffixÝÝÝÑ “ed”,. . . }.

• Support set SSr for a rule r P R consists
of all pairs of words related via r on a sur-
face level. SSr is populated via the follow-
ing definition: SSr = {(w1, w2): w1, w2 P V,
w1

rÝÑ w2}. An example support set of the
rule “ing” suffixÝÝÝÑ “ed” would be {(“playing”,
“played”), (“crafting”, “crafted”),. . .}.

Scores:

• scorer orth(r) is a vocabulary-wide ortho-
graphic confidence score for rule r P R. It
reflects the validity of an affix transformation
in a language from an orthographic perspec-
tive. This score is evaluated as scorer orth(r)
= |SSr|.
• scorer sem(r) is a vocabulary-wide seman-

tic confidence score for rule r P R. It re-
flects the validity of an affix transformation
in a language from a semantic perspective.
This score is evaluated as: scorer sem(r) =
|clusterr|/|SSr|2 where clusterr = {((w1, w2),
(w3, w4)): (w1, w2), (w3, w4) P SSr, ~w1 ´
~w2 « ~w3 ´ ~w4 }. We consider ~w1 ´ ~w2 «
~w3 ´ ~w4 if cos(~w4, ~w2 ´ ~w1 ` ~w3) ą 0.1.

• scorew sem((w1, w2) P SSr) is a vocabulary-
wide semantic confidence score for a pair of
words (w1, w2). The pair of words is related
via r on an orthographic level, but the score
reflects the validity of the morphological re-
lation via r on a semantic level. This score
is evaluated as: scorew sem((w1, w2) P SSr)
= |{(w3, w4): (w3, w4) P SSr, ~w1 ´ ~w2 «
~w3´ ~w4}|/|SSr|. In other words, it is the frac-
tion of pairs of words in the support set that
exhibit a similar linear relation as (w1, w2) in
the vector space.

554



• scoreloc sem((w1, w2) P SSr) is a local seman-
tic confidence score for a pair of words (w1,
w2). The pair of words is related via r on an
orthographic level, but the score reflects the
semantic relatedness between the pair. The
score is evaluated as: scoreloc sem((w1, w2) P
SSr) = cos(~w1, ~w2).

3.2 Inference Stage
In this stage we perform morpheme segmentation
using the knowledge gained from the first stage.
We begin with some notation: let Radd = {r : r P
R, r = aff1

rÝÑ aff2, aff1 = φ, aff2 ‰ φ }, Rrep =
{r : r P R, r = aff1 rÝÑ aff2, aff1 ‰ φ, aff2 ‰ φ }.
In other words, we divide the rules to those where
an affix is added (Radd) and to those where an affix
is replaced (Rrep).

Given a word w to segment, we search for r˚,
the solution to the following optimization prob-
lem1. The search space is limited to the rules that
include w in their support set, a fairly small search
space and the corresponding computation readily
tractable:

max
r

ÿ

t1

scoret1ppw1, wq P SSrq `
ÿ

t2

scoret2prq

s. t. r P Radd
scorer semprq ą tr sem
scorer orthprq ą tr orth
scorew semppw1, wq P SSrq ą tw sem
scoreloc semppw1, wq P SSrq ą tloc sem

Where t1 = {w sem, loc sem}, t2 = {r sem,
r orth}, and tr sem, tr orth, tw sem, tloc sem are hyper-
parameters of the system. Now given r˚ = φ suffixÝÝÝÑ
suf, w1 is defined as w1 r

˚ÝÑ w. Thus the algorithm
segments w Ñ w1-suf. We treat prefixes simi-
larly. Next, the algorithm iterates over w1. Figure
1 shows the segmentation process of the word “un-
healthy” based on the sequentially retrieved r˚.

The reason we restrict our rule set to Radd in the
optimization problem is to avoid rules such as “er”
suffixÝÝÝÑ “ing” like in (“player”, “playing”) leading to
false segmentations such as “playing” Ñ “player-
ing”. Yet we cannot completely restrict our search
to Radd due to rules such as “y” Ñ “ies” in words
like (“sky”, “skies”). To be able to segment words
such as “skies”, we’d have to consider rules in Rrep

1r and w uniquely identify w1, and thus the search space
is defined only over r.

Figure 1: Illustration of the iterative process of
segmentation in MORSE

but only after searching in Radd. Thus if the first
optimization problem was unfeasible, we repeat it
while replacing Radd with Rrep. The program ter-
minates when both optimization problems are in-
feasible.

4 Experiments

We conduct a variety of experiments to assess
the performance of MORSE, and compare it with
prior works. First, the performance is assessed in-
trinsically on the task of morpheme segmentation
and against the most widely used morpheme seg-
menter: Morfessor 2.0. We evaluate the perfor-
mance across three languages of varying morphol-
ogy levels: English, Turkish, Finnish, with Finnish
being the richest in morphology and English be-
ing the poorest. Second, we show the inadequa-
cies of benchmarking gold datasets for this task
and describe a new dataset that we create to ad-
dress the inadequacy. Third, in order to highlight
the effect of including semantic information, we
compare MORSE against Morfessor on a set of
words which should not be segmented from a se-
mantic perspective although orthographically they
seem to be segmentable (such as “freshman”).

In all of our experiments (unless specified oth-
erwise), we report precision and recall (and corre-
sponding F1 scores) with locations of morpheme
boundaries being considered positives and the rest
of the locations considered negatives. It should be
noted that we disregard starting and ending posi-
tions of words, since they form trivial boundaries
(Virpioja et al., 2011).

4.1 Setup

Both systems, Morfessor and MORSE, were
trained on the same monolingual corpus:
Wikipedia2 (as of September 20, 2016) to con-
trol for affecting factors within the experiment.
For each language considered, the respective
Wikipedia dump was preprocessed using an
available code3. We use Word2Vec (Mikolov

2https://dumps.wikimedia.org
3https://github.com/bwbaugh/

wikipedia-extractor

555



Dataset En Fi Tr
Tuning Data 1000 1000 971

Test Data 686 760 809

Table 1: Morpho Challenge 2010 Dataset Sizes.

et al., 2013a) to train word representations of
300 dimensions and based on a context window
of size 5. Also, for computational efficiency,
MORSE was limited to a vocabulary of size 1M,
a restriction not enforced on Morfessor.

MORSE’s hyperparameters are tuned based on
a tuning set of gold morpheme segmentations. We
have publicly released the source code of a pre-
trained MORSE4 as described in this paper.

4.2 Morpho Challenge Dataset

As our first intrinsic experiment, we consider
the Morpho Challenge (MC) gold segmentations
available online5. For every language, two
datasets are supplied: training and development.
For the purpose of our experiments, all systems
use the development dataset as a test dataset, and
the training dataset is used for tuning MORSE’s
hyperparameters. MC dataset sizes are reported in
Table 1.

4.3 Semantically Driven Dataset

There are a variety of weaknesses in the MC
dataset, specifically related to whether the seg-
mentation is semantically appropriate or not.
We introduce a new semantically driven dataset
(SD17) for morpheme segmentation along with
the methodology used for creation; this new
dataset is publicly available in the canonical6

and non-canonical7 versions (Cotterell and Vieira,
2016).
Non-compositional segmentation: One of the
key requirements of morpheme segmentation is
the compositionality of the meaning of the word
from the meaning of its morphemes. This require-
ment is violated on multiple occasions in the MC
dataset. One example from Table 2 is segment-
ing the word “business” into “busi-ness”, which
falsely assumes that “business” means the act of
being busy. Such a segmentation might be consis-
tent with the historic origin of the word, but with

4https://goo.gl/w4r7vP
5http://research.ics.aalto.fi/events/

morphochallenge2010
6https://goo.gl/MgKfG1
7https://goo.gl/0vTXVt

Word Gold Segmentation
freshman fresh man

airline air line
business’ busi ness ’

ahead a head
adultery adult ery

Table 2: Examples of gold morpheme segmen-
tations from the Morpho Challenge 2010 dataset
deemed invalid from a compositionality view-
point.

radical semantic changes over time, the segmenta-
tion no longer semantically represents the compo-
sitionality of the words’ components (Wijaya and
Yeniterzi, 2011). Not only does such a weakness
contribute to false segmentations, but it also favors
segmentation methods following the MDL princi-
ple.
Trivial instances: The second weakness in the
MC dataset is due to abundance of trivial in-
stances. These instances lack discriminating ca-
pability since all methods can easily predict them
(Baker, 2001). These instances are comprised of
genetive cases (such as teacher’s) as well as hy-
phenated words (such as turning-point). For gene-
tive cases, segmenting at the apostrophe leads to
perfect precision and recall, and thus such in-
stances are deemed trivial. In the case of hyphen-
ated words, segmenting at the hyphen is a correct
segmentation with a very high probability. In the
MC tuning dataset, in 43 times out of 46, the hy-
phen was a correct indication of segmentation.
Other issues exist in the Morpho Challenge
dataset although less abundantly. There are in-
stances of wrong segmentations possibly due to
human error. One example of such instance is
“turning-point” segmented to “turning - point” in-
stead of “turn ing - point”. Another issue, which
is hard to avoid, is ambiguity of segmentation
boundaries. Take for example the word “strafed”,
the segmentations “straf-ed” and “strafe-d” are
equally justified. In such situations, the MC
dataset favors complete affixes rather than com-
plete lemmas. This also favors MDL-based seg-
menters. We note that the MC dataset also pro-
vides segmentations in a canonical version such
as “strafe-ed”, yet for the sake of a fair compar-
ison with Morfessor and all previously evaluated
systems on the MC dataset, we consider only the
former version of segmentations.

556



English Turkish Finnish
P R F1 P R F1 P R F1

Morfessor 74.46 56.66 64.35 40.81 25.00 31.01 43.09 28.16 34.06
MORSE 81.98 61.57 70.32 49.90 30.78 38.07 36.26 9.44 14.98

Table 3: Performance of MORSE on the MC dataset across three languages: English, Turkish, Finnish.

Due to these reasons, we create a new dataset
SD17 for English gold morpheme segmentations
with compositionality guiding the annotations. We
select 2000 words randomly from the 10K most
frequent words in the English Wikipedia dump
and have them annotated by two proficient English
speakers. The segmentation criterion was to seg-
ment the word to the largest extent possible while
preserving its compositionality from the segments.
The inter-annotator agreement reached 91% on a
word level. Based on post annotation discussions,
annotators agreed on 99% of the words, and words
not agreed on were eliminated along with words
containing non-alpha characters to avoid trivial in-
stances.

SD17 is used to evaluate the performance of
both Morfessor and MORSE. We claim that the
performance on SD17 is a better indication of the
performance of a morpheme segmenter. By the
use of SD17 we expect to gain insights on the ex-
tent to which morpheme segmentation is a func-
tion of semantics in addition to orthography.

4.4 Handling Compositionality

We have hypothesized that following the MDL
principle (such as Morfessor) leads to over-
segmentation. This over-segmentation happens
specifically when the meaning of the word does
not follow from the meaning of its morphemes.
Examples include words such as “red head”,
“duck face”, “how ever”, “s ing”. A subset of
these words are defined by linguists as exocentric
compounds (Bauer, 2008). MORSE does not suf-
fer from this issue owing to its use of a semantic
model.

We use a collection of 100 English words which
appear to be segmentable but actually are not (ex-
ample: “however”). Such a collection will high-
light a system’s capability of distinguishing fre-
quent letter sequences from the semantic contri-
bution of this letter sequence in a word. We make
this collection publicly available8.

8https://goo.gl/EFbacj

En Tr Fi
Candidate Rules 27.5M 14.9M 10.8M

Candidate Rel. Pairs 53.3M 25.1M 18.6M

Table 4: Number of candidate rules and candidate
related word pairs detected per language.

5 Results

We compare MORSE with Morfessor, and place
the performance alongside the state-of-the-art
published results.

5.1 Morpho Challenge Dataset

As demonstrated in Table 3, MORSE performs
better than Mofessor on English and Turkish, and
worse on Finnish. Considering English first, us-
ing MORSE instead of Morfessor, resulted in a
6% absolute increase in F1 scores. This sup-
ports our claim for the need of semantic cues in
morpheme segmentation, and also validates the
method used in this paper. Since English is a less
systematic language in terms of the orthographic
structure of words, semantic cues are of greater
need, and hence a system which relies on seman-
tic cues is expected to perform better; indeed this
is the case. Similarly, MORSE performs better
on Turkish with a 7% absolute margin in terms
of F1 score. On the other hand, Morfessor sur-
passes MORSE in performance on Finnish by a
large margin as well, especially in terms of recall.

5.1.1 Discussion
We hypothesize that the richness of morphol-
ogy in Finnish led to suboptimal performance of
MORSE. This is because richness in morphology
leads to word level sparsity which directly leads
to: (1) Degradation of quality of word represen-
tations (2) Increased vocabulary size exacerbat-
ing the issue of limited vocabulary (recall MORSE
was limited to a vocabulary of 1M). In a language
with productive morphology, limiting its vocabu-
lary results in a lower chance of finding morpho-
logically related word pairs. This negatively im-

557



pacts the training stage of MORSE which relies on
the availability of such pairs. In order to detect the
suffix “ly” from the word “cheerfully” MORSE
needs to come across “cheerful” as well. Coming
across “cheerful” is now a lower probability event
due to high sparsity. This is not as much of an is-
sue for Morfessor under the MDL principle, since
it might detect “ly” just by coming across multi-
ple words ending with “ly” even without encoun-
tering the base forms of those words. We show
how the detection of rules is affected by consid-
ering the number of candidate rules detected as
well as the number of candidate morphologically
related word pairs detected. As shown in Table 4,
the number of detected candidate rules and candi-
date related words decreases with the increase in
morphology in a language. This confirms our hy-
pothesis; we note that this issue can be directly at-
tributed to the limited vocabulary size in MORSE.
With the increase in processing power, and thus
larger vocabulary coverage, MORSE is expected
to perform better.

5.2 Semantically Driven Dataset

The performance of MORSE and Morfessor on
SD17 is shown in Table 5. The use of MC
data (which does not adhere to the composition-
ality principle) to tune MORSE to be evaluated
on SD17 (which does adhere to the composition-
ality principle) is not optimal. Thus, we evalu-
ate MORSE on SD17 using 5-fold cross valida-
tion, where 80% of the dataset is used to tune and
20% is used to evaluate. Precision, Recall, and F1
scores are averaged and reported in Table 5 using
the label MORSE-CV.

Based on the results in Table 5, we make the
following observations. Comparing MORSE-CV
to MORSE reflects the fundamental difference be-
tween SD17 and MC datasets. Knowing the ba-
sis of construction of SD17 and the fundamen-
tal weaknesses in MC datasets, we attribute the
performance increase to the lack of composition-
ality in MC dataset. Comparing MORSE-CV to
Morfessor, we observe a significant jump in per-
formance (an increase of 24%). In comparison,
the increase on the MC dataset (6%) shows that
the Morpho Challenge dataset underestimates the
performance gap between Morfessor and MORSE
due its inherent weaknesses.

Since MORSE is equipped with the capability
to retrieve full morphemes even when not present

P R F1
Morfessor 65.95 51.13 57.60
MORSE 75.35 83.60 79.26

MORSE-CV 84.6 78.36 81.29

Table 5: Performance of MORSE against Morfes-
sor on the non-canonical version of SD17

P R F1
Morfessor 65.61 50.87 57.31
MORSE 79.70 82.37 81.01

MORSE-CV 85.08 82.90 83.96

Table 6: Performance of MORSE against Morfes-
sor on the canonical version of SD17

in full orthographically, a capability that Morfes-
sor lacks, we evaluated both systems on the canon-
ical version of SD17. The results are reported in
Table 6. We notice that evaluating on the canoni-
cal form of SD17 gives a further edge for MORSE
over Morfessor. For evaluation on the canonical
version of SD17, we switch to morpheme-level
evaluation instead of boundary-level as a more
suitable method for Morfessor. Morpheme-level
evaluation is distinguished from boundary-level
evaluation in that we evaluate the detection of mor-
phemes instead of the boundary locations in the
segmented word.

We next compare MORSE against published
state-of-the-art results9. As one can see in Ta-
ble 7 MORSE significantly performs better than
published state-of-the-art results, most notably
(Narasimhan et al., 2015) referred to as LLSM in
the Table. Comparison is also made against the top
results in the latest Morpho Challenge: Morfes-
sor S+W and Morfessor S+W+L (Kohonen et al.,
2010), and Base Inference (Lignos, 2010).

P R F1
MORSE 84.6 78.36 81.29
LLSM 80.70 72.20 76.2

Morfessor S+W 65.62 69.28 67.40
Morfessor S+W+L 67.87 66.43 67.14

Base Inference 80.77 53.76 64.55

Table 7: Performance of MORSE against pub-
lished state-of-the-art results

558



Figure 2: Precision (left) and Recall (right) of MORSE as a function of the hyperparameters: tr sem, tw sem

5.3 Handling Compositionality

We compare the performance of MORSE and
Morfessor on a set of words made up of mor-
phemes which don’t compose the meaning of the
word. Since all the boundaries in this dataset are
negative, to evaluate both systems (with MORSE
tuned on SD17), we only report the number of seg-
ments generated. The more segments a system
generates, the worse is its performance.

We find that MORSE generates 7 false mor-
phemes whereas Morfessor generates 43 false
morphemes. This shows MORSE’s robustness
to such examples through its semantic knowl-
edge and validates our claim that Morfessor over-
segments on such examples.

6 Discussion

One of the benefits of MORSE against other
frameworks such as MDL is its ability to identify
the lemma within the segmentation. The lemma
would be the last non-segmented word in the iter-
ative process of segmentation. Hence, an advan-
tage of our framework is its easy adaptability into
a lemmatizer and even a stemmer.

Another key aspect which is not present in some
of the competitive systems is the need for a small
tuning dataset. This is a point in favor of com-
pletely unsupervised systems such as Morfessor.
On the other hand, these hyperparameters could
allow for flexibility. Figure 2 shows how preci-
sion and recall changes as a function of the hy-
perparameter selection10. As one would expect,
increasing the hyperparameters, in general, leads

9The five published state-of-the-art results are on different
datasets

10Only a subset of the hyperparameters is used for display
purposes

to a stricter search space and thus increases preci-
sion and decreases recall. Putting these results in
perspective, the user of MORSE is given the capa-
bility of controlling for precision and recall based
on the needs of the downstream task.

Moreover, to check for the level of dependency
of MORSE on a set of gold morpheme segmen-
tations for tuning, we check for the variation in
performance with respect to size of tuning data.
For the purpose of this experiment we take an 80-
20 split of SD17 and vary the size of the tuning
set. We notice that the performance (81.90% F1)
reaches a steady state at 20% (« 300 gold seg-
mentations) of the tuning data. This reflects the
minimal dependency on a tuning dataset.

Regarding the training stage, homomorphs are
treated as one rule and allomorphs are treated
as separate rules. For example, (“tall”, “taller”)
and (“fast”, “faster”) are wrongly considered to
have the same morphological relation, besides
(“cat”, “cats”) and (“butterfly”, “butterflies”) are
wrongly considered to have different morpholog-
ical relations. The separate clustering of the dif-
ferent forms of a homomorph leads to the under-
estimation of the respective orthographic scores.
Moreover, the clustering of allomorphs together
would lead to the underestimation of the seman-
tic score of the rule as well as the underestimation
of the vocabulary-wide semantic score of word
pairs in the support set of this rule. This does not
significantly affect the performance of MORSE,
since the tuned thresholds are able to distinguish
between the low scores of an invalid rule and
the mediocre underestimated scores of allomorphs
and homomorphs.

As for the inference stage of MORSE, the
greedy inference approach limits its performance.
In other words, a wrong segmentation at the be-

559



ginning will propagate and result in consequent
wrong segmentations. Also, MORSE’s limitation
to concatenative morphology decreases its effi-
cacy on languages that include non-concatenative
morphology. This opens the stage for further re-
search on a more optimal inference stage and a
more global modeling of orthographic morpholog-
ical transformations.

7 Conclusions and Future Work

In this paper, we have presented MORSE, a first
morpheme segmenter to consider semantic struc-
ture at this scale (local and vocabulary-wide).
We show its superiority over state-of-the-art algo-
rithms using intrinsic evaluation on a variety of
languages. We also pinpointed the weaknesses
in current benchmarking datasets, and presented a
new dataset free of these weaknesses. With a rel-
ative increase in performance reaching 24% abso-
lute increase over Morfessor, this work proves the
significance of semantic cues as well as validates
a new state-of-the-art morpheme segmenter. For
future work, we plan to address the limitations of
MORSE: minimal supervision, greedy inference,
and concatenative orthographic model. Moreover,
we plan to computationally optimize the training
stage for the sake of wider adoption by the com-
munity.

Acknowledgements

This work is supported in part by IBM-ILLINOIS
Center for Cognitive Computing Systems Re-
search (C3SR) - a research collaboration as part
of the IBM Cognitive Horizons Network.

References
RH Baayen, R Piepenbrock, and H Van Rijn. 1993.

The CELEX lexical database [cd-rom] Philadelphia:
University of Pennsylvania. Linguistic Data Con-
sortium .

Frank B Baker. 2001. The basics of item response the-
ory. ERIC.

Marco Baroni, Johannes Matiasek, and Harald Trost.
2002. Unsupervised discovery of morphologically
related words based on orthographic and semantic
similarity. In Proceedings of the ACL-02 Work-
shop on Morphological and Phonological Learning-
Volume 6. Association for Computational Linguis-
tics, pages 48–57.

Laurie Bauer. 2008. Exocentric compounds. Morphol-
ogy 18(1):51–74.

Jeff A Bilmes and Katrin Kirchhoff. 2003. Factored
language models and generalized parallel backoff.
In Proceedings of the 2003 Conference of the North
American Chapter of the Association for Compu-
tational Linguistics on Human Language Technol-
ogy: companion volume of the Proceedings of HLT-
NAACL 2003–short papers-Volume 2. Association
for Computational Linguistics, pages 4–6.

Ryan Cotterell, Christo Kirov, John Sylak-Glassman,
David Yarowsky, Jason Eisner, and Mans Hulden.
2016. The SIGMORPHON 2016 shared task—
morphological reinflection. In Proceedings of the
2016 Meeting of SIGMORPHON. Association for
Computational Linguistics, Berlin, Germany.

Ryan Cotterell and Tim Vieira. 2016. A joint model
of orthography and morphological segmentation. In
Proceedings of NAACL-HLT . pages 664–669.

Mathias Creutz and Krista Lagus. 2002. Unsupervised
discovery of morphemes. In Proceedings of the
ACL-02 Workshop on Morphological and Phonolog-
ical Learning-Volume 6. Association for Computa-
tional Linguistics, pages 21–30.

Mathias Creutz and Krista Lagus. 2005. Unsupervised
morpheme segmentation and morphology induction
from text corpora using Morfessor 1.0. Helsinki
University of Technology.

Mathias Creutz and Krista Lagus. 2007. Unsupervised
models for morpheme segmentation and morphol-
ogy learning. ACM Transactions on Speech and
Language Processing (TSLP) 4(1):3.

John Goldsmith. 2000. Linguistica: An automatic mor-
phological analyzer. In Proceedings of 36th meeting
of the Chicago Linguistic Society.

Stig-Arne Grönroos, Sami Virpioja, Peter Smit, and
Mikko Kurimo. 2014. Morfessor Flatcat: An
HMM-based method for unsupervised and semi-
supervised learning of morphology. In COLING.
pages 1177–1185.

Zellig S Harris. 1970. From phoneme to morpheme. In
Papers in Structural and Transformational Linguis-
tics, Springer, pages 32–67.

Mark Johnson, Thomas L Griffiths, and Sharon Gold-
water. 2006. Adaptor grammars: A framework for
specifying compositional nonparametric bayesian
models. In Advances in neural information process-
ing systems. pages 641–648.

Oskar Kohonen, Sami Virpioja, and Krista Lagus.
2010. Semi-supervised learning of concatenative
morphology. In Proceedings of the 11th Meeting of
the ACL Special Interest Group on Computational
Morphology and Phonology. Association for Com-
putational Linguistics, pages 78–86.

Mikko Kurimo, Mathias Creutz, and Ville T Turunen.
2007. Unsupervised morpheme analysis evalua-
tion by IR experiments-Morpho Challenge 2007. In
CLEF (Working Notes).

560



Mikko Kurimo, Mathias Creutz, Matti Varjokallio,
Ebru Arisoy, and Murat Saraçlar. 2006. Unsu-
pervised segmentation of words into morphemes–
challenge 2005: An introduction and evaluation re-
port. In Proceedings of the PASCAL Challenge
Workshop on Unsupervised Segmentation of Words
into Morphemes.

John Lafferty, Andrew McCallum, and Fernando
Pereira. 2001. Conditional random fields: Prob-
abilistic models for segmenting and labeling se-
quence data. In Proceedings of the eighteenth Inter-
national Conference on Machine Learning, ICML.
volume 1, pages 282–289.

Young-Suk Lee. 2004. Morphological analysis for sta-
tistical machine translation. In Proceedings of HLT-
NAACL 2004: Short Papers. Association for Com-
putational Linguistics, pages 57–60.

Constantine Lignos. 2010. Learning from unseen
data. In Proceedings of the Morpho Challenge 2010
Workshop. pages 35–38.

Tomas Mikolov, Kai Chen, Greg Corrado, and Jef-
frey Dean. 2013a. Efficient estimation of word
representations in vector space. arXiv preprint
arXiv:1301.3781 .

Tomas Mikolov, Wen-tau Yih, and Geoffrey Zweig.
2013b. Linguistic regularities in continuous space
word representations. In HLT-NAACL. volume 13,
pages 746–751.

Karthik Narasimhan, Regina Barzilay, and Tommi
Jaakkola. 2015. An unsupervised method for un-
covering morphological chains. Transactions of the
Association for Computational Linguistics 3.

Jeffrey Pennington, Richard Socher, and Christopher D
Manning. 2014. Glove: Global vectors for word
representation. In EMNLP. volume 14, pages 1532–
1543.

Hoifung Poon, Colin Cherry, and Kristina Toutanova.
2009. Unsupervised morphological segmentation
with log-linear models. In Proceedings of Human
Language Technologies: The 2009 Annual Confer-
ence of the North American Chapter of the Associa-
tion for Computational Linguistics. Association for
Computational Linguistics, pages 209–217.

Jorma Rissanen. 1998. Stochastic complexity in statis-
tical inquiry, volume 15. World scientific.

Teemu Ruokolainen, Oskar Kohonen, Sami Virpioja,
and Mikko Kurimo. 2013. Supervised morphologi-
cal segmentation in a low-resource learning setting
using conditional random fields. In CoNLL. pages
29–37.

Teemu Ruokolainen, Oskar Kohonen, Sami Virpioja,
and Mikko Kurimo. 2014. Painless semi-supervised
morphological segmentation using conditional ran-
dom fields. In EACL. pages 84–89.

Patrick Schone and Daniel Jurafsky. 2000.
Knowledge-free induction of morphology us-
ing latent semantic analysis. In Proceedings of
the 2nd workshop on Learning language in logic
and the 4th conference on Computational Natural
Language Learning-Volume 7. Association for
Computational Linguistics, pages 67–72.

Kairit Sirts and Sharon Goldwater. 2013. Minimally-
supervised morphological segmentation using adap-
tor grammars. Transactions of the Association for
Computational Linguistics 1:255–266.

Radu Soricut and Franz Josef Och. 2015. Unsu-
pervised morphology induction using word embed-
dings. In HLT-NAACL. pages 1627–1637.

Ahmet Üstün and Burcu Can. 2016. Unsupervised
morphological segmentation using neural word em-
beddings. In International Conference on Statistical
Language and Speech Processing. Springer, pages
43–53.

Sami Virpioja, Ville T Turunen, Sebastian Spiegler, Os-
kar Kohonen, and Mikko Kurimo. 2011. Empirical
comparison of evaluation methods for unsupervised
learning of morphology. TAL 52(2):45–90.

Sami Virpioja, Jaakko J Väyrynen, Mathias Creutz, and
Markus Sadeniemi. 2007. Morphology-aware statis-
tical machine translation based on morphs induced
in an unsupervised manner. Machine Translation
Summit XI 2007:491–498.

Derry Tanti Wijaya and Reyyan Yeniterzi. 2011. Un-
derstanding semantic change of words over cen-
turies. In Proceedings of the 2011 Interna-
tional Workshop on DETecting and Exploiting Cul-
tural diversiTy on the Social Web. ACM, New
York, NY, USA, DETECT ’11, pages 35–40.
https://doi.org/10.1145/2064448.2064475.

Yuri L Zieman and Howard L Bleich. 1997. Concep-
tual mapping of user’s queries to medical subject
headings. In Proceedings of the AMIA Annual Fall
Symposium. American Medical Informatics Associ-
ation, page 519.

561


	MORSE: Semantic-ally Drive-n MORpheme SEgment-er

