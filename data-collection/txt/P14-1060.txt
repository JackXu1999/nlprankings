



















































Vector space semantics with frequency-driven motifs


Proceedings of the 52nd Annual Meeting of the Association for Computational Linguistics, pages 634–643,
Baltimore, Maryland, USA, June 23-25 2014. c©2014 Association for Computational Linguistics

Vector space semantics with frequency-driven motifs

Shashank Srivastava
Carnegie Mellon University

Pittsburgh, PA 15217
ssrivastava@cmu.edu

Eduard Hovy
Carnegie Mellon University

Pittsburgh, PA 15217
hovy@cmu.edu

Abstract

Traditional models of distributional se-
mantics suffer from computational issues
such as data sparsity for individual lex-
emes and complexities of modeling se-
mantic composition when dealing with
structures larger than single lexical items.
In this work, we present a frequency-
driven paradigm for robust distributional
semantics in terms of semantically cohe-
sive lineal constituents, or motifs. The
framework subsumes issues such as dif-
ferential compositional as well as non-
compositional behavior of phrasal con-
situents, and circumvents some problems
of data sparsity by design. We design
a segmentation model to optimally par-
tition a sentence into lineal constituents,
which can be used to define distributional
contexts that are less noisy, semantically
more interpretable, and linguistically dis-
ambiguated. Hellinger PCA embeddings
learnt using the framework show competi-
tive results on empirical tasks.

1 Introduction

Meaning in language is a confluence of experien-
tially acquired semantics of words or multi-word
phrases, and their semantic composition to create
new meanings. For instance, successfully inter-
preting a sentence such as

The old senator kicked the bucket.

requires the knowledge that the semantic conno-
tations of ‘kicking the bucket’ as a unit are the
same as those for ‘dying’. Short of explicit su-
pervision, such semantic mappings must be in-
ferred by a new language speaker through induc-
tive mechanisms operating on observed linguis-
tic usage. This perspective of acquired meaning

aligns with the ‘meaning is usage’ adage, conso-
nant with Wittgenstein’s view of semantics. At
the same time, the ability to adaptively commu-
nicate elaborate meanings can only be conciled
through Frege’s principle of compositionality, i.e.,
meanings of larger linguistic constructs can be
derived from the meanings of individual compo-
nents, modulated by their syntactic interrelations.
Indeed, most linguistic usage appears composi-
tional. This is supported by the fact even with
very limited vocabulary, children and non-native
speakers can often communicate surprisingly ef-
fectively.

It can be argued that to be sustainable, induc-
tive aspects of meaning must be recurrent enough
to be learnable by new users. That is, a non-
compositional phrase such as ‘kick the bucket’ is
likely to persist in common parlance only if it is
frequently used with its associated semantic map-
ping. If a usage-driven meaning of a motif is not
recurrent enough, learning this mapping is inef-
ficient in two ways. First, the sparseness of ob-
servations would severely limit accurate inductive
acquisition by new observers. Second, the value
of learning a very infrequent semantic mapping
is likely marginal. This motivates the need for
a frequency-driven view of lexical semantics. In
particular, such a perspective can be especially
advantageous for distributional semantics for rea-
sons we outline below.

Distributional semantic models (DSMs) that
represent words as distributions over neighbouring
contexts have been particularly effective in captur-
ing fine-grained lexical semantics (Turney et al.,
2010). Such models have engendered improve-
ments in diverse applications such as selectional
preference modeling (Erk, 2007), word-sense dis-
crimination (McCarthy and Carroll, 2003), auto-
matic dictionary building (Curran, 2003), and in-
formation retrieval (Manning et al., 2008). How-
ever, while conventional DSMs consider colloca-

634



With the bad press in wake of the financial crisis, businesses are leaving our shores .
crisis: <bad, businesses, financial, leaving, press, shores, wake>
financial crisis: <bad press, businesses, in wake of, leaving our shores>

Table 1: Meaning representation by conventional DSMs vs notional ideal

tion strengths (through counts and PMI scores) of
word neighbourhoods, they disregard much of the
regularity in human language. Most significantly,
word tokens that act as latent dimensions are of-
ten derived from arbitrary tokenization. The ex-
ample given in Table 1 succinctly describes this.
The first row in the table shows a representation
of the meaning of the token ‘crisis’ that a conven-
tional DSM might extract from the given sentence
after stopword removal. While helpful, the repre-
sentation seems unsatisfying since words such as
‘press’, ‘wake’ and ‘shores’ seem to have little to
do with a crisis. From a semantic perspective, a
representation similar to the second is more valu-
able: not only does it represent a semantic map-
ping for a more specific meaning, but the latent di-
mensions of the representation have are less noisy
(e.g., while ‘wake’ is semantically ambiguous, its
surrounding context in ‘in wake of’ disambiguates
it) and more intuitive in regards of semantic in-
terepretability. This is the overarching theme of
this work: we present a frequency driven paradigm
for extending distributional semantics to phrasal
and sentential levels in terms of such semantically
cohesive, recurrent lexical units or motifs.

We propose to identify such semantically
cohesive motifs in terms of features inspired
from frequency-characteristics, linguistic idiosyn-
crasies, and shallow syntactic analysis; and ex-
plore both supervised and semi-supervised mod-
els to optimally segment a sentence into such mo-
tifs. Through exploiting regularities in language
usage, the framework can efficiently account for
both compositional and non-compositional word
usage, while avoiding the issue of data-sparsity by
design. Our principal contributions in this paper
are:

• We present a framework for extending dis-
tributional semantics to learn semantic repre-
sentations of both words and phrases in terms
of recurrent motifs, rather than arbitrary word
tokens

• We present a simple model to segment a sen-
tence into such motifs using a feature-set

drawing from frequency statistics, informa-
tion theory, linguistic theories and shallow
syntactic analysis

• Word and phrasal representations learnt
through the approach outperform conven-
tional DSM representations on empirical
tasks

This paper is organized as follows: In Sec-
tion 2, we briefly review related work in the do-
main of compositional distributional semantics,
and motivate our formulation. Section 3 describes
our methodology, which consists of a frequency-
driven segmentation model to partition text into
semantically meaningful recurring lineal-subunits,
a representation learning framework for learning
new semantic embeddings based on this segmen-
tation, and an approach to use such embeddings in
downstream applications. We present experiments
and empirical evaluations for our method in Sec-
tion 4. Finally, we conclude in Section 5 with a
summary of our principal findings, and a discus-
sion of possible directions for future work.

2 Related Work

While DSMs have been valuable in representing
semantics of single words, approaches to extend
them to represent the semantics of phrases and
sentences has met with only marginal success.
While there is considerable variety in approaches
and formulations, existing approaches for phrasal
level and sentential semantics can broadly be par-
titioned into two categories.

2.1 Compositional approaches

These have aimed at using semantic representa-
tions for individual words to learn semantic rep-
resentations for larger linguistic structures. These
methods implicitly make an assumption of com-
positionality, and often include explicit computa-
tional models of compositionality. Notable among
such models are the additive and multiplicative
models of composition by Mitchell and Lapata
(2008), Grefenstette et al. (2010), Baroni and

635



Zamparelli’s (2010) model that differentially mod-
els content and function words for semantic com-
position, and Goyal et al.’s SDSM model (2013)
that incorporates syntactic roles to model seman-
tic composition. Notable among the most effec-
tive distributional representations are the recent
deep-learning approaches by Socher et al. (2012),
that model vector composition through non-linear
transformations. While word embeddings and lan-
guage models from such methods have been use-
ful for tasks such as relation classification, polarity
detection, event coreference and parsing; much of
existing literature on composition is based on ab-
stract linguistic theory and conjecture, and there
is little evidence to support that learnt represen-
tations for larger linguistic units correspond to
their semantic meanings. While works such as
the SDSM model suffer from the problem of spar-
sity in composing structures beyond bigrams and
trigrams, methods such as Mitchell and Lapata
(2008)and (Socher et al., 2012) and Grefenstette
and Sadrzadeh (2011) are restricted by signifi-
cant model biases in representing semantic com-
position by generic algebraic operations. Finally,
the assumption that semantic meanings for sen-
tences could have representations similar to those
for smaller individual tokens is in some sense un-
intuitive, and not supported by linguistic or seman-
tic theories.

2.2 Tree kernels

Tree Kernel methods have gained popularity in
the last decade for capturing syntactic information
in the structure of parse trees (Collins and Duffy,
2002; Moschitti, 2006). Instead of procuring ex-
plicit representations, the kernel paradigm directly
focuses on the larger goal of quantifying semantic
similarity of larger linguistic units. Structural ker-
nels for NLP are based on matching substructures
within two parse trees , consisting of word-nodes
with similar labels. These methods have been use-
ful for eclectic tasks such as parsing, NER, se-
mantic role labeling, and sentiment analysis. Re-
cent approaches such as by Croce et al. (2011)
and Srivastava et al. (2013) have attempted to pro-
vide formulations to incorporate semantics into
tree kernels through the use of distributional word
vectors at the individual word-nodes. While this
framework is attractive in the lack of assumptions
on representation that it makes, the use of distri-
butional embeddings for individual tokens means

that it suffers from the same shortcomings as de-
scribed for the example in Table 1, and hence these
methods model semantic relations between word-
nodes very weakly. Figure 1 shows an example of
the shortcomings of this general approach.

Figure 1: Tokenwise syntactic and semantic simi-
larities don’t imply sentential semantic similarity

While the two sentences in consideration have
near-identical syntax and could be argued to have
semantically aligned words in similar positions,
the semantics of the complete sentences are widely
divergent. Specifically, the ‘bag of words’ as-
sumption in tree kernels doesn’t suffice for these
lexemes, and a stronger semantic model is needed
to capture phrasal semantics as well as diverging
inter-word relations such as in ‘coffee table’ and
‘water table’. Our hypothesis is that a model that
can even weakly identify recurrent motifs such as
‘water table’ or ‘breaking a fall’ would be help-
ful in building more effective semantic represen-
tations. A significant advantage of a frequency
driven view is that it makes the concern of com-
positionality of recurrent phrases immaterial. If a
motif occurs frequently enough in common par-
lance, its semantics could be captured with distri-
butional models irrespective of whether its associ-
ated semantics are compositional or acquired.

2.3 Identifying multi-word expressions
Several approaches have focused on supervised
identification of multi-word expressions (MWEs)
through statistical (Pecina, 2008; Villavicencio et
al., 2007) and linguistically motivated (Piao et al.,
2005) techniques. More recently, hybrid methods
based on both statistical as well as linguistic fea-
tures have been popular (Tsvetkov and Wintner,
2011). Ramisch et al. (2008) demonstrate that
adding part-of-speech tags to frequency counts
substantially improves performance. Other meth-
ods have attempted to exploit morphological, syn-
tactic and semantic characteristics of MWEs. In

636



particular, approaches such as Bannard (2007) use
syntactic rigidity to characterize MWEs. While
existing work has focused on the classification
task of categorizing a phrasal constituent as a
MWE or a non-MWE, the general ideas of most
of these works are in line with our current frame-
work, and the feature-set for our motif segmen-
tation model is designed to subsume most of
these ideas. It is worthwhile to point out that
the task of motif segmentation is slightly differ-
ent from MWE identification. Specifically, the
onus on recurrent occurrences means that non-
decomposibility is not an essential consideration
for a word to be considered a motif. In line with
the proposed paradigm, typical MWEs such as
‘shoot the breeze’, ‘sour note’ and ‘hot dog’ would
be considered valid lineal motifs. 1 In addition,
even decomposable recurrent lineal phrases such
as ‘love story’, ‘federal government’, and ‘mil-
lions of people’ are marked as meaningful recur-
rent motifs. Finally, and least interestingly, we
include common named entities such as ‘United
States’ and ‘Java Virtual Machine’ within the am-
bit of motifs.

3 Method

In this section, we define our frequency-driven
framework for distributional semantics in detail.
As just described above, our definition for motifs
is less specific than MWEs. With such a working
definition, contiguous motifs are likely to make
distributional representations less noisy and also
assist in disambiguating context. Also, the lack of
specificity ensures that such motifs are common
enough to meaningfully influence distributional
representation beyond single tokens. A method
towards frequency-driven distributional semantics
could involve the following principal components:

3.1 Linear segmentation model

The segmentation model forms the core of the
framework. Ideally, it fragments a given sen-
tence into non-overlapping, semantically mean-
ingful, empirically frequent contiguous sub-units
or motifs. The model accounts for possible seg-
mentations of a sentence into potential motifs, and
prefers recurrent and cohesive motifs through fea-
tures that capture frequency-based and statistical

1We note that since we take motifs as lineal units,
the current method doesn’t subsume several common non-
contiguous MWEs such as ‘let off’ in ‘let him off’.

features, as well as linguistic idiosyncracies. This
is accomplished using a very simple linear chain
model and a rich feature set consisting of a combi-
nation of frequency-driven, information theoretic
and linguistically motivated features.

Let an observed sentence be denoted by x, with
the individual tokens xi denoting the i’th token in
the sentence. The segmentation model is a chain
LVM (latent variable model) that aims to maxi-
mize a linear objective defined by:

J =
∑

i

wifi(yk, yk−1,x)

where fi are arbitrary Markov features that can
depend on segments (potential motifs) of the ob-
served sentence x, and contiguous latent states.
The features are chosen so as to best represent
frequency-based, statistical as well as linguistic
considerations for treating a segment as an ag-
glutinative unit, or a motif. In specific, these
features could encode characteristics such as fre-
quency statistics, collocation strengths and syn-
tactic distinctness, or inflectional rigidity of the
considered segments; described in detail in Sec-
tion 3.2. The model is an instantiation of a sim-
ple featurized HMM, and the weighted sum of fea-
tures corresponding to a segment is cognate with
an affinity score for the ‘stickiness’ of the segment,
i.e., the affinity for the segment to be treated as
holistic unit or a single motif.

We also associate a penalizing cost for each non
unary-motif to avoid aggressive agglutination of
tokens. In particular, for an ngram occurrence to
be considered a motif, the marginal contribution
due to the affinity of the prospective motif should
at minimum exceed this penalty. The weights for
the affinity functions as well as these penalties are
learnt from data using full as well as partial anno-
tations. The latent state-variables yk denotes the
membership of the token xk to a unary or a larger
motif; and the state-sequence collectively gives
the segmentation of the sentence. An individual
state-variable yk encodes a pairing of the size of
the encompassing ngram motif, and the position
of the word xk within it. For instance, yk = T3
denotes that the token xk is the final position in a
trigram motif.

3.1.1 Inference of optimal segmentation
If the optimal weights wi are known, inference
for the best motif segmentation can be performed

637



in linear time (in the number of tokens) follow-
ing the generalized Viterbi algorithm. A slightly
modified version of Viterbi could also be used to
find segmentations that are constrained to agree
with some given motif boundaries, but can seg-
ment other parts of the sentence optimally under
these constraints. This is necessary for the sce-
nario of semi-supervised learning of weights with
partially annotated sentences, as described later.

3.2 Learning motif affinities and penalties

We briefly discuss data-driven learning of weights
for features that define the motif affinity scores
and penalties. We describe learning of the model
parameters with fully annotated training data, as
well as an approach for learning motif segmenta-
tion that requires only partial supervision.

Supervised learning: In the supervised case, op-
timal state sequences y(k) are fully observed for
the training set. For this purpose, we created a
dataset of 1000 sentences from the Simple En-
glish Wikipedia and the Gigaword Corpus, and
manually annotated it with motif boundaries us-
ing BRAT (Stenetorp et al., 2012). In this case,
learning can follow the online structured percep-
tron learning procedure by Collins (2002), where
weights updates for the k’th training example
(x(k),y(k)) are given as:

wi ← wi + α(fi(x(k),y(k))− fi(x(k),y′))

Here y′ = Decode(x(k),w) is the optimal
Viterbi decoding using the current estimates of
the weights. Updates are run for a large number
of iterations until the change in objective drops
below a threshold, and the learning rate α is
adaptively modified as described in Collins et al.
Implicitly, the weight learning algorithm can be
seen as a gradient descent procedure minimizing
the difference between the scores of highest
scoring (Viterbi) state sequences, and the label
state sequences.

Semi-supervised learning: In the semi-
supervised case, the labels y(k)i are known
only for some of the tokens in x(k). This is a
commonplace scenario, where a part of a sentence
has clear motif-boundaries, whereas the rest of the
sentence is not annotated. For accumulating such
data, we looked for occurrences of 2500 expres-
sions from the WikiMWE dataset in sentences

from the combined Simple English Wikipedia
and Gigaword corpora. The query expressions in
the retrieved sentences were marked with motif
boundaries, while the remaining tokens in the
sentences were left unannotated.

While the Viterbi algorithm can be used for tag-
ging optimal state-sequences given the weights,
the structured perceptron can learn optimal model
weights given gold-standard sequence labels.
Hence, in this case, we use a variation of the hard
EM algorithm for learning. The algorithm pro-
ceeds as follows: in the E-step, we use the current
values of weights to compute hard-expectations,
i.e., the best scoring Viterbi sequences among
those consistent with the observed state labels. In
the M-step, we take the decoded state-sequences
in the E-step as observed, and run perceptron
learning to update feature weightswi. Pseudocode
of the learning algorithm for the partially labeled
case is given in Algorithm 1.

Algorithm 1
1: Input: Partially labeled data D = {(x, y)i}
2: Output: Weights w
3: Initialization: Set wi randomly, ∀i
4: for i : 1 to maxIter do
5: Decode D with current w to find optimal

Viterbi paths that agree with (partial) ground
truths.

6: Run Structured Perceptron algorithm with de-
coded tag-sequences to update weights w

7: end for
8: return w

The semi-supervised approach enables incor-
poration of significantly more training data. In
particular, this method could be used in conjunc-
tion with a supervised approach. This would in-
volve initializing the weights prior to the semi-
supervised procedure with the weights from the
supervised learning model, so as to seed the semi-
supervised approach with reasonable model, and
use the partially annotated data to fine-tune the su-
pervised model. The sequential approach, akin to
annealing weights, can efficiently utilize both full
and partial annotations.

3.2.1 Feature engineering
In this section, we describe the principal features
used in the segmentation model
Transitional features and penalties:

• Transitional features ftrans(yi−1, yi) =

638



Iyi−1,yi
2 describing the transitional affinities

of state pairs. Since our state definitions pre-
clude certain transitions (such as from state
T2 to T1), these weights are initialized to−∞
to expedite training.

• N-gram penalties: fngram We define a
penalty for tagging each non-unary motif as
described before. For a motif to be tagged,
the improvement in objective score should at
least exceed the corresponding penalty. e.g.,
fqgram(yi) = Iyi=Q4 denotes the penalty for
tagging a tetragram. 3

Frequency-based, information theoretic, and POS
features:

• Absolute and log-normalized motif frequen-
cies fngram(xi−n+1, ...xi−1, xi, yi). This
feature is associated with a particular token-
sequence and ngram-tag, and takes the
value of the motif-frequency if the motif
token-sequence matches the feature token-
sequence, and is marked as with a match-
ing tag. e.g., fbgram(xi−1 = love, xi =
story, yi = B2).

• Absolute and log-normalized motif frequen-
cies for a particular POS-sequence. This
feature is associated with a particular POS-
tag sequence and ngram-tag, and takes the
value of the motif-frequency if the motif
token-sequence gets a matching tag, and is
marked as with a matching ngram tag. e.g.,
fbgram(pi−1 = V B, pi = NN, yi = B2).

• Medians and maxima of pairwise collocation
statistics for tokens for a particular size of
ngram motifs: we use the following statis-
tics: pointwise mutual information, Chi-
square statistic, and conditional probability.
We also used POS sensitive versions of these,
which performed much better than plain ver-
sions in our evaluations.

• Histogram counts of inflectional forms of to-
ken sequence for the corresponding ngram
motif and POS sequence: this features takes
the value of the count of inflectional forms
of an ngram that account for 90% of occur-
rences of all inflectional forms.

2Here, I denotes the indicator function
3It is straightforward to preclude partial n-gram annota-

tions near sentence boundaries with prohibitive penalties.

• Entropies of histogram distributions of inflec-
tional variants (described above).

• Features encoding syntactic rigidity: ratios
and log-ratios of frequencies of an ngram mo-
tif and variations by replacing a token using
near synonyms from its synset.

Additionally, a few feature for the segmenta-
tions model contained minor orthographic features
based on word shape (length and capitalization
patterns). Also, all numbers, URLs, and cur-
rency symbols were normalized to the special NU-
MERIC, URL, and CURRENCY tokens respec-
tively. Finally, a gazetteer feature checked for oc-
currences of motifs in a gazetteer of named enti-
ties.

3.3 Representation learning

With the segmentation model described in the pre-
vious section, we process text from the English Gi-
gaword corpus and the Simple English Wikipedia
to partition sentences into motifs. Since the seg-
mentation model accounts for the contexts of the
entire sentence in determining motifs, different in-
stances of the same token could evoke different
meaning representations. Consider the following
sentences tagged by the segmentation model, that
would correspond to different representations of
the token ‘remains’: once as a standalone motif,
and once as part of an encompassing bigram motif
(‘remains classified’).

Hog prices have declined sharply , while the
cost of corn remains relatively high.

Even with the release of such documents, ques-
tions are not answered, since only the agency
knows what remains classified

Given constituent motifs of each sentence in the
data, we can now define neighbourhood distribu-
tions for unary or phrasal motifs in terms of other
motifs (as envisioned in Table 1). In our experi-
ments, we use a window-length of 5 adjoining mo-
tifs on either side to define the neighbourhood of
a constituent. Naturally, in the presence of multi-
word motifs, the neighbourhood boundary could
be more extended than in a conventional DSM.

With such neighbourhood contexts, the distri-
butional paradigm posits that semantic similarity
between a pair of motifs can be given by a sense
of ‘distance’ between the two distributions. Most
popularly, traditional measures of vector distance

639



such as the cosine similarity, Euclidean distance
and City-block distance have been used in sev-
eral distributional approaches. Additionally, sev-
eral distance measures between discrete distribu-
tions exist in statistical literature, most famously
the Kullback Leibler divergence, Bhattacharyya
distance and the Hellinger distance. Recent work
(Lebret and Lebret, 2013) has shown that the
Hellinger distance is an especially effective mea-
sure in learning distributional embeddings, with
Hellinger PCA being much more computationally
inexpensive than neural language modeling ap-
proaches, while performing much better than stan-
dard PCA, and competitive with the state-of-the-
art in downstream evaluations. Hence, we use the
Hellinger measure between neighbourhood motif
distributions in learning representations.

The Hellinger distance between two categorical
distributions P = (p1...pk) and Q = (q1...qk) is
defined as:

H(P,Q) =
1√
2

√√√√ k∑
i=1

(
√
pi −√qi)2

=
1√
2

∥∥∥√P −√Q∥∥∥
2

The Hellinger measure has intuitively desir-
able properties: specifically, it can be seen
as the Euclidean distance between the square-
roots transformed distributions, where both vec-
tors
√
P and

√
Q are length-normalized under the

same(Euclidean) norm. Finally, we perform SVD
on the motif similarity matrix (with size of the or-
der of the total vocabulary in the corpus), and re-
tain the first k principal eigenvectors to obtain low-
dimensional vector representations that are more
convenient to work with. In our preliminary ex-
periments, we found that k = 300 gave quanti-
tatively good results, with marginal change with
added dimensionality. We use this setting for all
our experiments.

4 Experiments

In this section, we describe some experimental
evaluations and findings for our approach. We first
quantitatively and qualitatively analyze the perfor-
mance of the segmentation model, and then evalu-
ate the distributional motif representations learnt
by the model through two downstream applica-
tions.

4.1 Motif segmentation
In an evaluation of the motif segmentations model
within the perspective of our framework, we be-
lieve that exact correspondence to human judg-
ment is unrealistic, since guiding principles for
defining motifs, such as semantic cohesion, are
hard to define and only serve as working princi-
ples. However, for purposes of relative compar-
ison, we quantitatively evaluate the performance
of the motif segmentation models on the fully an-
notated dataset. For this experiment, the gold-
annotated corpus was split into a training and test
sets in a 9:1 proportion. A small fraction of the
training split was set apart for development and
validation. For this evaluation, we considered a
motif boundary as correct only for an exact match,
i.e., when both its boundaries (left and right) were
correctly predicted. Also, since a majority of mo-
tifs are unary tokens, including them into consider-
ation artificially boosts the accuracy, whereas we
are more interested in the prediction of larger n-
gram tokens. Hence we report results on the per-
formance on only non-unary motifs.

P R F
Rule-based baseline 0.85 0.10 0.18
Supervised 0.62 0.28 0.39
Semi-supervised 0.30 0.17 0.22
Supervised + annealing 0.69 0.38 0.49

Table 2: Results for motif segmentations

Table 2 shows the performance of the segmen-
tation model with the three proposed learning ap-
proaches described earlier. For a baseline, we
consider a rule-based model that simply learns all
ngram segmentations seen in the training data, and
marks any occurrence of a matching token se-
quence as a motif; without taking neighbouring
context into account. We observe that this model
has a very high precision (since many token se-
quences marked as motifs would recur in simi-
lar contexts, and would thus have the same mo-
tif boundaries). However, the rule-based method
has a very row recall due to lack of generaliza-
tion capabilities. We see that while all three learn-
ing algorithms perform better than the baseline,
the performance of the purely unsupervised sys-
tem is inferior to supervised approaches. This is
not unexpected: the supervision provided to the
model is very weak due to a lack of negative ex-
amples (which leads to spurious motif taggings,

640



While men often (openly or privately) sympathized with Prince Charles when the princess went public
about her rotten marriage , women cheered her on.

The healthcare initiative has become a White elephant for the federal government.

Chirac and Juppe have made a bad situation worse by seeking to meet Maastricht criteria not by
cutting spending, but by raising taxes still further.

Now , say Vatican observers , Pope John Paul II wants to show the world that many church members
did resist the Third Reich and paid the price.

Table 3: Examples of output from sentence segmentation model

leading to a low precision), as well as no examples
of transitions between adjacent motifs (to learn
transitional weights and penalties). The super-
vised model expectedly outperforms both the rule-
based and the semi-supervised systems. However,
the supervised learning model with subsequent an-
nealing outperforms the supervised model in terms
of both precision and recall; showing the utility of
the semi-supervised method when seeded with a
good initial model, and the additive value of par-
tially labeled data.

Qualitative analysis of motif-segmented sen-
tences shows that our designed feature-set is effec-
tive and helpful in identifying semantically cohe-
sive ngrams. Table 3 provides four examples. The
first example correctly identifies ‘went public’,
while missing out on the potential motif ‘cheered
her on’. In general, these examples illustrate that
the model can identify idiomatic and idiosyncratic
themes as well as commonly recurrent ngrams (in
the second example, the model picks out ‘has be-
come’ which is highly recurrent, but doesn’t have
the semantic cohesiveness of some of the other
motifs). In particular, consider the second exam-
ple, where the model picks ‘white elephant’ as a
motif. In such cases, the disambiguating influence
of context incorporated by the motif is apparent.

Elephant White elephant
tusks expensive
trunk spend

african biggest
white the project
indian very high
baby multibillion dollar

The above table shows some of the top results
for the unary token ‘elephant’ by frequency, and
frequent unary and non-unary motifs for the mo-
tif ‘white elephant’ retrieved by the segmentation
model.

4.2 Distributional representations

For evaluating distributional representations for
motifs (in terms of other motifs) learnt by the
framework, we test these representations in two
downstream tasks: sentence polarity classification
and metaphor detection. For sentence polarity, we
consider the Cornell Sentence Polarity corpus by
Pang and Lee (2005), where the task is to classify
the polarity of a sentence as positive or negative.
The data consists of 10662 sentences from movie
reviews that have been annotated as either posi-
tive or negative. For composing the motifs repre-
sentations to get judgments on semantic similarity
of sentences, we use our recent Vector Tree Ker-
nel approach The VTK approach defines a convo-
lutional kernel over graphs defined by the depen-
dency parses of sentences, using a vector repre-
sentation at each graph node that representing a
single lexical token. For our purposes, we mod-
ify the approach to merge the nodes of all tokens
that constitute a motif occurrence, and use the mo-
tif representation as the vector associated with the
node. Table 4 shows results for the sentence polar-
ity task.

P R F1
DSM 0.56 0.50 0.53
AVM 0.55 0.53 0.54
MVM 0.55 0.49 0.52
VTK 0.65 0.58 0.62
VTK + MotifDSM 0.66 0.60 0.63

Table 4: Results for Sentence Polarity detection

For this task, the motif based distributional em-
beddings vastly outperform a conventional distri-
butional model (DSM) based on token distribu-
tions, as well as additive (AVM) and multiplica-
tive (MVM) models of vector compositionality, as

641



proposed by Lapata et al. The model is compet-
itive with the state-of-the-art VTK (Srivastava et
al., 2013) that uses the SENNA neural embeddings
by Collobert et al. (2011).

P R F1
CRF 0.74 0.50 0.59
SVM+DSM 0.63 0.80 0.71
VTK+ SENNA 0.67 0.87 0.76
VTK+ MotifDSM 0.70 0.87 0.78

Table 5: Results for Metaphor identification

On the metaphor detection task, we use the
Metaphor dataset (Hovy et al., 2013). The data
consists of sentences with defined phrases, and
the task consists of identifying the linguistic use
in these phrases as metaphorical or literal. For
this task, the motif based model is expected to
perform well as common metaphorical usage is
generally through idiosyncratic MWEs, which the
motif based models is specially geared to capture
through the features of the segmentation model.
For this task, we again use the VTK formalism
for combining vector representations of the indi-
vidual motifs. Table 5 shows that the motif-based
DSM does better than discriminative models such
as CRFs and SVMs, and also slightly improves on
the VTK kernel with distributional embeddings.

5 Conclusion

We have presented a new frequency-driven frame-
work for distributional semantics of not only lex-
ical items but also longer cohesive motifs. The
theme of this work is a general paradigm of seek-
ing motifs that are recurrent in common parlance,
are semantically coherent, and are possibly non-
compositional. Such a framework for distribu-
tional models avoids the issue of data sparsity
in learning of representations for larger linguis-
tic structures. The approach depends on drawing
features from frequency statistics, statistical cor-
relations, and linguistic theories; and this work
provides a computational framework to jointly
model recurrence and semantic cohesiveness of
motifs through compositional penalties and affin-
ity scores in a data driven way.

While being deliberately vague in our work-
ing definition of motifs, we have presented simple
efficient formulations to extract such motifs that
uses both annotated as well as partially unanno-
tated data. The qualitative and quantitative analyis

of results from our preliminary motif segmenta-
tion model indicate that such motifs can help to
disambiguate contexts of single tokens, and pro-
vide cleaner, more interpretable representations.
Finally, we obtain motif representations in form
of low-dimensional vector-space embeddings, and
our experimental findings indicate value of the
learnt representations in downstream applications.
We believe that the approach has considerable the-
oretical as well as practical merits, and provides a
simple and clean formulation for modeling phrasal
and sentential semantics.

In particular, we believe that ours is the first
method that can invoke different meaning repre-
sentations for a token depending on textual context
of the sentence. The flexibility of having separate
representations to model different semantic senses
has considerable valuable, as compared with ex-
tant approaches that assign a single representation
to each token, and are hence constrained to con-
flate several semantic senses into a common repre-
sentation. The approach also elegantly deals with
the problematic issue of differential compositional
and non-compositional usage of words. Future
work can focus on a more thorough quantitative
evaluation of the paradigm, as well as extension to
model non-contiguous motifs.

References
Colin Bannard. 2007. A measure of syntactic flexibil-

ity for automatically identifying multiword expres-
sions in corpora. In Proceedings of the Workshop
on a Broader Perspective on Multiword Expressions,
pages 1–8. Association for Computational Linguis-
tics.

Marco Baroni and Roberto Zamparelli. 2010. Nouns
are vectors, adjectives are matrices: Representing
adjective-noun constructions in semantic space. In
Proceedings of the 2010 Conference on Empirical
Methods in Natural Language Processing, pages
1183–1193. Association for Computational Linguis-
tics.

Michael Collins and Nigel Duffy. 2002. New rank-
ing algorithms for parsing and tagging: Kernels over
discrete structures, and the voted perceptron. In Pro-
ceedings of the 40th annual meeting on association
for computational linguistics, pages 263–270. Asso-
ciation for Computational Linguistics.

Michael Collins. 2002. Discriminative training meth-
ods for hidden markov models: Theory and exper-
iments with perceptron algorithms. In Proceedings
of the ACL-02 conference on Empirical methods in
natural language processing-Volume 10, pages 1–8.
Association for Computational Linguistics.

642



Ronan Collobert, Jason Weston, Léon Bottou, Michael
Karlen, Koray Kavukcuoglu, and Pavel Kuksa.
2011. Natural language processing (almost) from
scratch. The Journal of Machine Learning Re-
search, 12:2493–2537.

Danilo Croce, Alessandro Moschitti, and Roberto
Basili. 2011. Structured lexical similarity via con-
volution kernels on dependency trees. In Proceed-
ings of the Conference on Empirical Methods in Nat-
ural Language Processing, pages 1034–1046. Asso-
ciation for Computational Linguistics.

James Richard Curran. 2003. From Distributional to
Semantic Similarity. Ph.D. thesis, Institute for Com-
municating and Collaborative Systems School of In-
formatics University of Edinburgh.

Katrin Erk. 2007. A simple, similarity-based model
for selectional preferences. In ACL.

Kartik Goyal, Sujay Kumar Jauhar, Huiying Li, Mrin-
maya Sachan, Shashank Srivastava, and Eduard
Hovy. 2013. A structured distributional semantic
model: Integrating structure with semantics. ACL
2013, page 20.

Edward Grefenstette and Mehrnoosh Sadrzadeh. 2011.
Experimental support for a categorical composi-
tional distributional model of meaning. In Proceed-
ings of the Conference on Empirical Methods in Nat-
ural Language Processing, pages 1394–1404. Asso-
ciation for Computational Linguistics.

Edward Grefenstette, Mehrnoosh Sadrzadeh, Stephen
Clark, Bob Coecke, and Stephen Pulman. 2010.
Concrete sentence spaces for compositional dis-
tributional models of meaning. arXiv preprint
arXiv:1101.0309.

Dirk Hovy, Shashank Srivastava, Sujay Kumar Jauhar,
Mrinmaya Sachan, Kartik Goyal, Huiying Li, Whit-
ney Sanders, and Eduard Hovy. 2013. Identifying
metaphorical word use with tree kernels. Meta4NLP
2013, page 52.

Rémi Lebret and Ronan Lebret. 2013. Word
emdeddings through hellinger pca. arXiv preprint
arXiv:1312.5542.

Christopher D Manning, Prabhakar Raghavan, and
Hinrich Schütze. 2008. Introduction to information
retrieval, volume 1. Cambridge University Press
Cambridge.

Diana McCarthy and John Carroll. 2003. Disam-
biguating nouns, verbs, and adjectives using auto-
matically acquired selectional preferences. Compu-
tational Linguistics, 29(4):639–654.

Jeff Mitchell and Mirella Lapata. 2008. Vector-based
models of semantic composition. In ACL, pages
236–244.

Alessandro Moschitti. 2006. Efficient convolution ker-
nels for dependency and constituent syntactic trees.
In Machine Learning: ECML 2006, pages 318–329.
Springer.

Bo Pang and Lillian Lee. 2005. Seeing stars: Exploit-
ing class relationships for sentiment categorization
with respect to rating scales. In ACL.

Pavel Pecina. 2008. A machine learning approach to
multiword expression extraction. In Proceedings of
the LREC MWE 2008 Workshop, pages 54–57. Cite-
seer.

Scott Songlin Piao, Paul Rayson, Dawn Archer, and
Tony McEnery. 2005. Comparing and combining
a semantic tagger and a statistical tool for mwe ex-
traction. Computer Speech & Language, 19(4):378–
397.

Carlos Ramisch, Paulo Schreiner, Marco Idiart, and
Aline Villavicencio. 2008. An evaluation of meth-
ods for the extraction of multiword expressions.
In Proceedings of the LREC Workshop-Towards
a Shared Task for Multiword Expressions (MWE
2008), pages 50–53.

Richard Socher, Brody Huval, Christopher D Manning,
and Andrew Y Ng. 2012. Semantic compositional-
ity through recursive matrix-vector spaces. In Pro-
ceedings of the 2012 Joint Conference on Empiri-
cal Methods in Natural Language Processing and
Computational Natural Language Learning, pages
1201–1211. Association for Computational Linguis-
tics.

Shashank Srivastava, Dirk Hovy, and Eduard H. Hovy.
2013. A walk-based semantically enriched tree
kernel over distributed word representations. In
EMNLP, pages 1411–1416.

Pontus Stenetorp, Sampo Pyysalo, Goran Topić,
Tomoko Ohta, Sophia Ananiadou, and Jun’ichi Tsu-
jii. 2012. Brat: a web-based tool for nlp-assisted
text annotation. In Proceedings of the Demonstra-
tions at the 13th Conference of the European Chap-
ter of the Association for Computational Linguistics,
pages 102–107. Association for Computational Lin-
guistics.

Yulia Tsvetkov and Shuly Wintner. 2011. Identifica-
tion of multi-word expressions by combining mul-
tiple linguistic information sources. In Proceedings
of the Conference on Empirical Methods in Natural
Language Processing, pages 836–845. Association
for Computational Linguistics.

Peter D Turney, Patrick Pantel, et al. 2010. From
frequency to meaning: Vector space models of se-
mantics. Journal of artificial intelligence research,
37(1):141–188.

Aline Villavicencio, Valia Kordoni, Yi Zhang, Marco
Idiart, and Carlos Ramisch. 2007. Validation and
evaluation of automatically acquired multiword ex-
pressions for grammar engineering. In EMNLP-
CoNLL, pages 1034–1043.

643


