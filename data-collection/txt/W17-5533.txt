



















































Enabling robust and fluid spoken dialogue with cognitively impaired users


Proceedings of the SIGDIAL 2017 Conference, pages 273–283,
Saarbrücken, Germany, 15-17 August 2017. c©2017 Association for Computational Linguistics

Enabling robust and fluid spoken dialogue with cognitively impaired users

Ramin Yaghoubzadeh
CITEC, Bielefeld University

P. O. Box 10 01 31
33501 Bielefeld, Germany

ryaghoubzadeh@uni-bielefeld.de

Stefan Kopp
CITEC, Bielefeld University

P. O. Box 10 01 31
33501 Bielefeld, Germany

skopp@techfak.uni-bielefeld.de

Abstract

We present the flexdiam dialogue man-
agement architecture, which was devel-
oped in a series of projects dedicated to
tailoring spoken interaction to the needs
of users with cognitive impairments in an
everyday assistive domain, using a multi-
modal front-end. This hybrid DM archi-
tecture affords incremental processing of
uncertain input, a flexible, mixed-initiative
information grounding process that can
be adapted to users’ cognitive capacities
and interactive idiosyncrasies, and generic
mechanisms that foster transitions in the
joint discourse state that are understand-
able and controllable by those users, in or-
der to effect a robust interaction for users
with varying capacities.

1 Introduction

In recent years, politics and society have placed
emphasis on ways to enable an autonomous and
self-determined life for those who were previously
automatic recipients of stationary care. This is
most overtly the case for older adults whose capac-
ities start to degrade but are still sufficient to orga-
nize their life given some help; but also for peo-
ple with general cognitive impairments, who until
twenty or thirty years ago were often regarded as
unable of being afforded a lifestyle with a work-
place and an independent living space, tailored to
their individual strenghths and capacities.

In order to support these individuals in those ar-
eas where deficits might manifest, use of mobile
personal help for organization and management is
regularly employed. There has been heightened
interest in offsetting some of the burden of com-
mon routine tasks to technological implementa-
tions. Most unexperienced users report spoken in-

teraction to be their preferred modality, which they
are also used to in those domains, due to inter-
actions with personnel. Human-computer interac-
tions have to be designed in a way that suits their
experience and preferences, their prior and their
attainable special knowledge, and their other ca-
pacities. There is regular comorbidity with im-
paired articulation which can complicate interac-
tions (Young and Mihailidis, 2010) – although for
mild cases automated speech recognition software
has caught up in recent years to ensure suitable
operation. Additionally, their capacity of adhering
to a recommended interaction style, or their gen-
eral capacity for learning, might be reduced. In-
formation density in interaction is another issue:
tightly-packed information might be overwhelm-
ing and lead to incomplete appreciation and inad-
equate reflection of the contents (Yaghoubzadeh
et al., 2013). At the same time, and especially
if comorbidity with impulse control disorders is
present (Swaffer and Hollin, 2000), the frustration
tolerance in adverse situations might be lowered,
although their stakes – of obtaining assistance –
can provide extrinsic motivation.

Altogether, we have to address several areas
which assistive systems for these user groups have
to be aware of and cope with: less reliable input,
idiosyncratic interaction style such as verbosity,
limitations to cognitive processing and adaptation
on the user side, and less reliable adherence to im-
plicit system expectations and overt instruction.

In this paper, we will first look at systems that
aim to provide assistance or company for these
people in their everyday life, and address existing
approaches to dialogue management with respect
to the above properties. Then, we will describe our
approach to dialogue management that is tailored
to meet these requirements. Finally, we present
initial results from an evaluation with older adults
and people with cognitive impairments.

273



2 Related work

2.1 Assistive and accompanying systems
Technical assistance can be provided to the afore-
mentioned user groups in several domains, striv-
ing to improve their quality of life: in enabling
their control of their environment, in enabling
them to communicate more readily, in aiding self-
organization, in supporting and tracking therapeu-
tic efforts, in ameliorating the effects of ennui and
social isolation, among others. In the following
overview, we omit those technologies that rely on
physical support or that use non-interactive spo-
ken control (keyword commands for smart homes
etc.). However, there has been relevant work in do-
mains that transcend these limited scenarios, and
evaluations relating to all mentioned aspects.

If speech is chosen as a modality for an assis-
tive system, the role of personification, involun-
tary attribution, and the social effect of help ren-
dered must not be underestimated, Meis (2013)
commented that older subjects, having interacted
with a spoken-dialogue scheduling helper for an
extended time, first and foremost wished for it to
be given a name and to react contingently to social
affordances such as expressions of gratitude.

Bickmore et al. (2013) analyzed month-long
phases of interactions of older adults with a per-
sonified exercise coaching system – it used spo-
ken language, but user input was selected from
sets of touchscreen buttons. Sidner et al. (2013)
addressed the social support aspect, attempting to
identify preferred domains of conversation or joint
activity based on the same system design.

An autonomous spoken dialogue prototype with
a humanoid assistive agent for older adults and
people with cognitive impairments has been ana-
lyzed by Yaghoubzadeh et al. (2015); they found
that users with terse interaction styles from both
groups were able to successfully ground informa-
tion with their system, their earlier studies show-
ing that explicit confirmation patterns and a prefer-
ence for packing all pieces of information in sepa-
rate utterances helped the latter user group in par-
ticular in detecting and repairing system errors.

More recently, Wargnier et al. (2016) have eval-
uated a low-level attention monitoring and man-
agement module with a small sample of older
adults with mild cognitive impairment; their sys-
tem performed as well as with the control group.

The two latter teams also mentioned that inter-
actions were unsuccessful for only their respective

participant with the most overtly noticeable im-
pairments. However, spoken interaction with users
with cognitive impairments seems, in general, to
be feasible and accepted by the user group.

2.2 Relation to other DM approaches

As a preliminary, we want to establish what we
consider the bounds of the safe action space for
a robust, noise-resistant communication system –
particularly, the case of potential categorial con-
fusion of positive and negative evidence in key
issues of ensuring mutual understanding. Clark
and Schaefer (1989) stated that positive evidence
for understanding generally arrives in five cate-
gories of increasing strength: ‘continued atten-
tion’ (i.e. without any repair initiation), ‘initi-
ation of the relevant next contribution’, explicit
‘acknowledgment’ (possibly via back channels or
multimodal signals), as well as ‘demonstration’
and ‘display’, referring to (partial) paraphrase or
cooperative completion and verbatim repetition,
respectively. However, for the assessment of the
strength of evidence, a system has to take into ac-
count the risk of confusion with conflicting cat-
egories. In particular, we posit that in the case
of verbatim display – nominally providing the
strongest evidence – there is significant structural
overlap with possible ‘bare revisions’ (i.e. un-
marked other-repairs containing only the corrected
information – which are abundant and should be
handled by an SDS, cf. Larsson (2015)) or even
incredulous return questions. These ambiguities
only disappear if the confidence values (or suitable
correlates) of the ASR process are on the level of
near-certainty – and can be trusted – and, in the
case of unmarked questions, prosody is also con-
sidered. In terms of negative evidence of success-
ful grounding, spontaneous repairs and repeated
requests are examples of explicit evidence, while
multimodal modulations that indicate confusion or
surprise (furrowed brows, ‘double-checking’ gaze
patterns) are more subtle signals.

For a comparison of the present work to exist-
ing approaches and implementations of dialogue
systems, we will consider the following taxo-
nomical properties: globally accessible versus lo-
cally encapsulated state; rule-based versus statisti-
cally grounded decision making; human-authored
vs. learned policies; approaches with or without
strictly disjoint modeling of task and discourse
models, with or without incremental processing,

274



and with or without modeling of probabilistic as-
pects or uncertainty in either their input, inner
state, and/or output. Centrally, implementations
differ in their presentation and modeling of revi-
sions and repairs from the system or the user side.

With the information-state-update (ISU) ap-
proach, Traum and Larsson (2003) proposed a
generic mechanism for the concurrent matching
of a set of update rules to the current state of
a globally accessible information blackboard –
in contrast to plan-based or finite state machine-
based approaches. flexdiam employs a hybrid
approach, independent entry points can operate
solely on the global state or in relation to their an-
cestors and children in the hierarchy. The designer
and the domain define an emphasis on reliance on
the global context for one globally active set of
rules (flexible, but harder to scrutinize) or classi-
cal graph-based traversals (predictable, but rather
rigid) – or a hybrid of both. The global context
does not contain an additional logic-based repre-
sentation of internal – or attributed – plans.

Larsson (2002) modeled the grounding process
on earlier work by Ginzburg, implementing the
‘questions under discussion’ in the form of ‘is-
sues’, with an explicit propositional model of the
common ground between the parties and the sys-
tem’s short-term agenda and longer-term plan, and
explicit signals on three levels (contact, semantic,
and pragmatic understanding).

Skantze (2007) considered the effects of un-
certainty on the grounding process, particularly
in ‘real-world’ ASR scenarios. The approach in-
cluded disjoint modules of (abstract) NLU and
(contextualized) discourse model that performed
contextual integration, and generic clarification re-
quest and display actions based on word and con-
cept level estimations of confidence, driven by a
rule-based decision policy. flexdiam features
a similar dichotomy of NLU and discourse mod-
els for incremental processing, opting for hierar-
chical situative interpretation – enabling partial in-
terpretation in the most specific context and addi-
tional interpretation (and forward-looking expan-
sion) in the more general ones. Since we found
our ASR to yield word confidence scores with
domain dependent baselines, we decided to start
with a pessimistic strategy to minimize the false-
positive rate for assuming “certain” interpretation
– thus, ambiguous slots from the lattice of hy-
potheses were weighted equally, producing the

primary source of inherent low-level uncertainty.
The basic grounding criterion for our first evalua-
tions was likewise a rule-based one, operating on
concept entropy values.

Bohus and Rudnicky (2009), with RavenClaw,
proposed an logic-based approach that separated
the task domain model, provided in a domain spe-
cific language to yield a hierarchical description
of tasks and dependent subtasks, and a generic
dialogue engine, configured with the task model
and capable of employing two strategies for re-
solving detected ambiguity (‘misunderstandings’)
and several more for non-understanding, includ-
ing declaration of non-understanding, requests, re-
prompts, and help messages. flexdiam does
also provide hierarchical task modeling, repairs
and grounding strategy selection are however en-
capsulated in a library of reusable, specialized pat-
terns that are configured1 for specific situations.

Baumann and Schlangen (2012), with InproTK,
provide a fully incremental dialogue management
toolkit that builds a fine-grained graphical repre-
sentation of sequences of incremental information
in the system, including revoked and revised paths
– that can thus also encode a full implicit discourse
history. Notably, input and output sides can oper-
ate in an incremental fashion. In flexdiam, in-
put and processing modules operate incrementally,
but there is currently no provision for incremen-
tal adaptation in the NLG (although other output
modalities do operate in an incremental fashion).

Skantze and Moubayed (2012), with IrisTK,
presented another hybrid approach that combined
a generic ‘attention manager’ with a hierarchical
task and dialogue model (IrisFlow) based on a
generalized, extended version of Harel statecharts,
which can be conveniently authored. Their exten-
sion does take into account, and attempts to inte-
grate, the asynchronous character of the relation
of intention and actual spoken interaction. It has
been employed in the autonomous robotic head
FurHat. In flexdiam, authoring cannot be un-
dertaken using an abstract modeling description
that automatically transfers to code, as in IrisTK
or RavenClaw. However, since it is written in
Python, there is arguably little difference between
the two anyway; graphical authoring might be at-
tractive, though, especially since the existing live
and off-line visualizations could serve as a basis.

1The system is tailored to incremental, multimodal refer-
ential behavior, hence the dynamics of promoting and retract-
ing references is quite dependent on the domain.

275



Lison and Kennington (2015), with Open-
Dial, proposed another hybrid approach, combin-
ing logical and statistical methods. Probabilis-
tic logical dialogue rules are parametrized with
respect to probabilities of their outcomes and
their estimated utility, and selected under con-
sideration of uncertainty in their respective pre-
conditions. The strength of the approach is the
particular suitability for combining (or gradually
replacing/adapting) hand-crafted parameters with
learned ones. flexdiam presently foregoes any
general representation of post-condition success
estimations (although local planners are free to
factor this in their plans opaquely). There is how-
ever a clearly defined way for monitoring the state
of asynchronous output – and the user’s closing
of contingency pairs (or failure to) can be handled
in the hierarchical situation model. Uncertainty in
input and derived data is also represented.

As did most of the previous work, we also as-
sert that our present system is a relatively loose
framework that enables more than one philosophy
to thrive within, though maybe not simultaneously.

3 Architecture and processing

flexdiam is an interaction framework that aims
to unify the features of incrementality (to quickly
update and relay discussed information), provi-
sions for representation and resolution of uncer-
tainty (resulting from input and unclear ground-
ing) with explicit representation of topics, struc-
tured hierarchically in units intuitive to laymen.

The system is built on top of the IPAACA
middleware, a distributed, platform-independent
implementation Schlangen et al. (2010) of the
‘general, abstract model for incremental dialogue
processing’ proposed by Schlangen and Skantze
(2011). This provides the back-end for the con-
nection of the core DM components to input
(including ASR, tagger and parser, eye tracker,
keyboard/mouse/touch etc.) and output modules
(NLG, synthesis, graphical components / GUI
changes, control of animated characters etc.).

An overview of the DM architecture is provided
in Fig. 1. Temporal information, and the repre-
sentation of Events is maintained in a function-
ally tiered structure called TimeBoard. Event-
driven observers are used to derive events from
interval relations between existing ones, and trig-
ger higher-level functions, most centrally the di-
alogue manager proper, but also the contribution

manager, which schedules queued communicative
intentions when the floor situation allows.

Propositional information is, in the general
case, resident in the global VariableContext
(subsequently ‘Context’), containing a rewindable
representation of certain and uncertain (distribu-
tion) variables with generic metrics – like entropy
– that serve as the basis for local decision heuris-
tics. Other types of variables include watchdogs
that update their state based on other values; one
such use case is the recalculation of possible ref-
erents in a certain domain whenever information
restricts or extends its determining variables.

In flexdiam, there is generally a single joint
task and discourse model for both interactants (i.e.
no explicit full Theory of Mind-like simulation of
the other party); its presence in the actual com-
mon ground is on the other hand promoted by
the update heuristics, below. The basic structure
of the joint task and discourse model is a forest
of independent but hierarchically interdependent
agents termed Issues2, as well as generic update
rules to transform this forest after DM invocations.
An Issue I := I(Pattern) with Pattern :=
(Cls, name, config) is defined by a functional
class Cls that implements its input handling and
planning dynamics, an abstract name (used e.g.
for mapping to specific verbalizations in the NLG
module), and a configuration that defines its ini-
tial internal state. If Pattern is identical for any
Issues I1, I2, they are defined to match function-
ally. When an Issue is instantiated, it is at the
same time made a child of the Issue that effected
its creation. Issues can have zero or one parent
(root / non-root) and any number of children.

Any path from a leaf Issue to the root of its
tree corresponds to a specific (sub-)topic of dis-
cussion. Any number of topics can be active at
any one time and will be considered valid points
of reference in parallel, if applicable according to
their grounding state. Any Issue can be in one of
five canonical states that correspond to its status
with respect to the common ground and its contin-
ued relevance: NEW (it is on the system’s agenda,
but has never been raised by successful commu-
nication by the system or relevant contribution
of the user), ENTERED (an initial communica-
tion attempt has been completed to introduce it to
the common ground; it is presently considered a

2Terminology adapted from Ginzburg, via Larsson (albeit
in a slightly less rigorous sense) – since the basal Issues do in
fact correspond to grounding and acceptance questions.

276



Issues VariableContext t

 
Tier
Tier
Tier

IPAACA 

observer

Tier

NLP, Sensors,
Feedback, ...

Behavior Planners,
Behavior Realizer

observer

TimeBoard t

invocations
proposed
changes

DM
proper

changes

Figure 1: Overview of the architecture

valid target for DM invocations), FULFILLED or
FAILED (terminal states decided locally by the Is-
sue) or OBSOLETE (a terminal state which means
that a replanning process in an ancestor has invali-
dated this instance explicitly, or implicitly through
an intermediate ancestor).

3.1 Processing proper and plans
An invocation of the dialogue manager proper,
triggered by the event structure on the TimeBoard,
relays input records to all valid entry points. These
refer to active topics (non-terminated leaves, see
above), stored together with access time informa-
tion to produce an implicit priority queue, similar
to the ‘partially ordered set’ in Ginzburg (2012);
however, rank is defined solely at invocation time
since locally estimated utility is factored in.

Invocations that trigger processing in Issues
come in two flavors: input handling and struc-
ture update handling. Under the umbrella of input
handling, any abstract category of information can
trigger a DM invocation (and Issues will decide
along their local path in the hierarchy, and based
on the current global Context, whether they can
provide a plan to handle it). Two basic input cat-
egories for a general flexdiam-based SDS are
prompt_request and nluparse, referring to
calls for action at suitable points for contributions
by the system, and partial incremental parses of
user ASR, respectively. Under the umbrella of
structure update handling, parent Issues are in-
formed, and given the opportunity to contribute (or
re-plan), when a plan is generated that involves ei-
ther a child transitioning to a terminal state, or a
child marking that it has made progress that might
merit re-evaluation of the parent. Child Issues are
informed, and given the opportunity for a final
contribution, when they are invalidated (marked
OBSOLETE) by an ancestor; the final contribu-
tions are usually limited to cleanup – especially
retractions of situated referential behaviors.

For any invocation on an entry point Ex, start-
ing at Issue Ix at time t, an individual clone over-

lay (‘clover’) CIy is generated for any contribut-
ing Issue Iy (Copy-on-Write access) (cf. Fig. 2);
the global Context C (t) is also accessed via a
CoW overlay C + ∆CIx . This enables the gen-
eration of competing plans involving a common
subset of Issues. Any modifications to the inter-
nal state of Issues is made to the clovers instead
and later merged in after the DM commits to a
plan. Prior to any overlay production and pro-
cessing (handle_), Issues may make a shallow as-
sessment of the capability of handling the input
in the given situation (can_handle_), for reasons
of economy. For any invocation with input i that
an Issue Iy can handle, it produces a partial plan
PIy = {CIy , OIy} – with C the new ‘clover’ of
the Issue, and O its output record. The latter may
contain the following: a local utility estimate; a
flag that signals significant progress to the ances-
tors; a preference for propagation of the input; a
list of proposed new child issues; a list of obso-
lete children that are to be invalidated if the plan
is selected; and, centrally, the current communica-
tive intentions. The partial plans PI... contribute
to the full plan for this input and entry point,
P(Ex, i) = {(CIz , OIz) for all contributing Iz}.
Additionally, Issues may annotate (or even trans-
form) the input record (primarily marking input
keys as used and ‘accounted for’, thus also mark-
ing interpretation coverage). The modified record
i′ is reused for all contributions by other issues to
the same plan. The Context overlay C + ∆CIx is
also reused, progressively accumulating changes
from all contributions to the same plan.

If an Issue cannot handle an input handling in-
vocation locally, a preference is marked to let its
parent handle it instead. Partial localized process-
ing does not preclude propagation, if flagged in the
output record. A DM can enforce certain require-
ments beyond the marked propagation preferences
in order to guarantee post-conditions (e.g. maxi-
mize opportunities that any prompt is generated).

Progressive propagation from the leaves

277



OS1OI2OI3

I4

I3

I2

S1

I1

I5

I6

CI4

CI3 CS1 CI6

Root

CI2

OI4
∆!I4

OI6

ii

∆!I6
Context  !(t)

Figure 2: Invocation of the DM proper with input i
leading to alternative plans starting at entry points
I4 and I6, each yielding i′, ∆C , {(CIx , OIx)}.
This example corresponds to two open topics
(possible jump), the plan for I4 includes de-
duced forward-looking agenda CS1, contributed
by shadow S1.

through the ancestors thus allows for situated
partial interpretation and processing; this is most
specific and situation-dependent in the leaves, and
most generic and general in the roots of the forest.

3.2 User-initiated agenda changes

Any Issue Ix can elect to define a set of anticipated
Issue patterns that are not immediately on its local
agenda (i.e. not actual children), but well-defined
with respect to their arising at any time during the
active life of Ix. This might include possible fu-
ture child Issues, but also, crucially, anticipations
about user behavior that stands outside the typical
traversal though the local planning of Ix. In the
former case, this is equivalent to defining precisely
the opportunities of mixed-initiative approaches to
subplan initiation. In the latter case, it simply af-
fords offloading resources (and from the develop-
ers’ perspective, code duplication and implemen-
tation time) to reusable patterns that are jointly ser-
vicing any number of issues with overlapping ex-
pectations. The anticipated patterns, implemented
internally as specially-flagged Issues, are called
shadows. Subtrees spanned by shadows must
be cycle-free, and functionally matching shad-
ows present in children and parents alike will al-
ways match only at the most specific location (the
child). All shadows, leaf and non-leaf, are also
defined to be valid entry points.

If a user contribution does not fit well into any
active Issue, save for an existing shadow, a dis-
course transition based on user initiative can be as-

sumed to have taken place. Depending on the situ-
ation, this could be construed as either a forward-
looking contribution (if anticipated by the cur-
rently invoked entrance point or a direct ancestor)
or a real topic jump (when the shadow matches
at another side branch of the current tree, opens
a whole deep side branch, or belongs to an en-
tirely different tree in the forest). From the point
of time of plan selection using the DM policy, all
employed shadows are copied into real instances
and transplanted into their parents as proper chil-
dren. The new branch is marked ENTERED and
moved to the top of the entry point priority queue.

3.3 Decision making
The set of (non-empty) plans {P(Ex, i)}
for all entry points Ex, with P(Ex, i) =
{(CIz , OIz) for all contributing Iz}, are ranked
by a central policy using weighted criteria:

• local utility estimations placed in OIz by Iz ,
• the coverage of the annotated input i′, pro-

portionally to the original,

• the recency of the topic, i.e. the latest invo-
cation timestamp on the path from Ex to its
root (freshly instantiated Issues are not con-
sidered),

• special rules (e.g. acting on estimated topic
jumps can be deferred during an incremental
interpretation phase).

The plan with the highest rank is selected for
execution, which entails:

• merging the context overlay ∆CIx into C ,
producing the new global context (recalling
that prior states remain accessible by obtain-
ing a rewound view),

• merging the whole internal state of all clovers
CIz into their respective Issue Iz – this also
updates its canonical / grounding state,

• scheduling all communicative intentions
from all OIz for the contribution manager
to pick up, instantiate and post for asyn-
chrononous micro-planning and execution,

• updating the winning entry point with the
most recent invocation time, and

• instantiating any newly proposed children,
and adding new entry points for them.

278



4 Summary of approach

In terms of the basic approach, and in relation to
existing work, discourse modeling in flexdiam
most closely resembles Ginzburg’s approach and
its incarnations, in a formally less rigorous fash-
ion. Some features of the info-state approach are
present in the system (and it can in principle be
employed as such), but the structural confinement
afforded by the forest of hierarchical Issue agents
helps to alleviate problems of inscrutability when
the domain size increases, while still remaining
very flexible. The present system is most suited
to quick, interactive approaches to spoken interac-
tion (and notably not designed for rigorous logical
representation or explicit simulation of the inter-
locutor’s mind), and to modeling real-world appli-
cations with limited domains. Manual extension
is quite straightforward and seems to scale if ‘best
practices’ are honored3. Incremental processing
and the handling of uncertain input and informa-
tion derived from it has received special focus,
the ‘output’ side employs a similar notion of in-
determinate state until evidence for communica-
tive success provides a precondition for grounding
being attested. Communicative plans are capable
of employing several modalities and the (small)
implemented suite of basic Issues for grounding
problems can be fine-tuned to cover a wide space
of varying explicitness, verbosity, and conversa-
tional styles, which will be used in upcoming long-
term experiments to seed user models that best
suit the estimated capabilities and preferences of
participants. This extends to information den-
sity (configurable via different options for pack-
aging and different approaches to confirmation re-
quests), but also discourse structure: explicit ratifi-
cation for topic jumps beyond a distance threshold
(and implicit acceptance by means of contingent
continuation by the user) is currently in develop-
ment. The system is modular; the central decision
policy is exchangeable and could in the future be
parametrized using machine learning.

5 Initial evaluation

We have recently performed an initial evaluation
of the described architecture in a setup for diverse
user groups. For this experiment, we recruited 44
participants: 19 older adults (SEN), aged about
75+, with age-typical perception and cognition; 15

3Proper provisions for authoring are on the wish list for a
future open release of the framework.

Figure 3: Scene from the first evaluation study
with the present system; subject anonymized, and
scene enhanced for clarity.

cognitively impaired adults (CIM) of working age;
and 10 university controls (CTL).

Participants were asked to enter at least five
items into a fictional weekly schedule at their
leisure, in spoken interaction with a virtual assis-
tant agent who also offered external activity sug-
gestions. The agent was presented alongside a
graphical calendar; the DM was able to generate
dynamic references in the calendar and referential
behavior for the agent (Fig. 3).

We selected the activity / scheduling domain
because it was on the one hand the support do-
main most requested by our corporate partner,
von Bodelschwinghsche Stiftungen Bethel, a large
health care provider, but also by merit of its inter-
esting properties: it can be reasonably well con-
strained in certain dimensions (days, times, in-
tervals), while being potentially boundless in an-
other (the activity being discussed) - though pos-
sibly constrained implicitly by priming and sug-
gestions. This provides a relatively safe start-
ing point for shallow, heuristic understanding of
the only unconstrained dimension, because attri-
bution to the other domains is fairly exclusive.
(On the down side, out-of-domain discrimination
would then amount to deep pragmatic understand-
ing, so prior instruction about the restrictedness
of the system capacities were necessary). A full
dictation language model was used for ASR (pro-
vided via Dragon Client SDK 12.5) 4 to realize the
free-form entering of the appointment. NLU per-
formed heuristic extraction of best guesses for this
slot from ASR hypotheses. Specifically, the parser
identified sentences that might contain an appoint-
ment declaration, both in elliptic form (such as
"<day> <time> <comment>") and various explicit

4Our health care partner required that a client-only, offline
solution be employed in the project to guarantee privacy.

279



forms (such as "I was planning to <comment> on
Monday"). The rule-based heuristics attempted to
reduce the comment to a coherent sequence of V-
N or N-N, optionally with declared participants
("with <proper-name>").

Aside from the scaffolding of social interaction
and calendar entry commitment, we designed
the grounding problem for the schedule items in
three Issues: VariableSetGrounding,
for accepting in free form, and integrat-
ing in a frame-like manner, the variables of
day of the week (dow), the start and end
times, and the activity (what) alongside many
types of revisions, marked and unmarked;
VariableSetSequentialRephrase, rep-
resenting a situation where the system rephrased
the previously uttered understood partial informa-
tion; and VariableValueConfirmation,
for explicit need for ratification and disambigua-
tion when information was too uncertain to
proceed silently. For the agent-initiated sugges-
tions, the same approach was used, but pre-seeded
with one variable (the agent’s suggestion), and
with the additional possibility of handling outright
rejection of the suggestion. A final ratification
with full multimodal presentation was also re-
quired before any activity was actually committed
to the schedule.

The autonomous dialogue system was overseen
by an experimenter, who had three options to aid
the system in strategy selection: initiate the raising
of an auto-generated partial suggestion (“Would
you like to do something on Saturday?”); proceed
to two fully-formed possible activities if the user
had stated, or was assumed, to be done with their
entries; or initiate the final valediction sequence.

All subjects managed to enter at least the re-
quired number of appointments into the calendar.
The number of negotiated entries ranged between
5 and 18; the number of final entries averaged
10.4, 8.5, and 8.9 for CTL, SEN and CIM, respec-
tively (including up to two agent-recommended
items). The older adults spent 15% longer on av-
erage on a topic compared to controls, while the
group with impairments spent 23% longer; some
participants from the CIM group made long hes-
itations in isolated instances (up to tens of sec-
onds). The number of required utterances was
initially high especially for the older adults, but
started to converge; most subjects from the CIM
group relied slightly more on reacting to dynam-

��
��
��
��
��
��
��

���
���

� � � � � � �

��

����

��

����

��

����

� � � � � � �

Figure 4: Top: user utterances per topic (for the
first seven entered items, due to sample size); bot-
tom: number of system variable prompts. User
groups, ordered: CTL, pale; SEN, dark; CIM, red.

ically generated prompts, their performance com-
pared to CTL indicates that the afforded structure
was suitable for them (Fig. 4). As expected by
us, most time per entry was spent on correcting
the topic (what) of an activity, due to the heuris-
tic extraction of possible topics from a multitude
of alternative ASR hypotheses, which caused the
majority of challenging situations. For the future,
we aim to add deeper NLU capabilities to the sys-
tem to better constrain the set of relevant candi-
dates – currently, we are exploring the use of word
embeddings to this effect.

The experiment was conducted to gain qualita-
tive insight into the repair, revision and metacom-
municative patterns exhibited by the user groups;
as such, there was no clearly delineated ‘right’ and
‘wrong’ with respect to final entries (hence there
was no baseline reference to match). Detailed con-
versational analysis has only recently started (see
appendix for two example situations with a view
of DM internals)5; a statistical description of the
language used - and of word error rates - can only
be sensibly made based on a comprehensive tran-
scription of the corpus, which is still pending at
the time of writing. For upcoming experiments,
we are currently scaling up the possible activities
to include revisions and removal of older entries,

5Additional material will be made available here:
https://purl.org/net/ramin/sigdial2017/

280



queries about specific topics or time ranges, and
installing and managing reminders.

6 Discussion and conclusion

We have presented the principal approach and cur-
rent state of our dialogue management framework
flexdiam, which is being used to evaluate spo-
ken interaction with people with cognitive impair-
ments, informed by prior work in this domain. It is
designed to handle uncertainty, interruptions, and
many kinds of revisions in a robust manner in or-
der to provide a stable interaction in task-oriented
domains. The approach makes for flexible inter-
action dynamics that are also straightforward to
analyze and scrutinize in detail by humans. With
respect to the requirements for the specific user
groups, confusion due to e.g. problems in artic-
ulation is resolved in place using generic recipes,
information density can be configured for spe-
cific users, and the system can cope both with
increased and reduced pace. Regarding idiosyn-
crasies in floor behavior, we observed long hesi-
tations in specific users, which from the point of
view of the system primarily entails non-standard
assumptions in assessing engagement and disen-
gagement; in previous work (Yaghoubzadeh and
Kopp (2016)), we conversely explored multimodal
preemptive floor management to reduce user ver-
bosity in a socially acceptable manner; this mod-
ule has been integrated into the architecture but not
employed in the present study.

We regard our architectural requirements to be
fulfilled and will integrate the results from the
emerging qualitative analysis to refine the recipes
in the system.

We strove to highlight the mechanics of
flexdiam, and its novel combination of fea-
tures for the target user groups, in comparison to
existing approaches, and we have performed an
initial evaluation with the target user groups in
which subjects were generally able to solve the
set task, and the system was able to reach suc-
cessful grounding of the desired contents in most
cases. Implementation of the domain and com-
municative behavior was straightforward, and has
already been scaled up to include competing al-
ternative actions. We would also like to employ
learning approaches to seed and adapt utility esti-
mations and policy weights in the system.

Acknowledgments

This research was partially supported by the
German Federal Ministry of Education and Re-
search (BMBF) in the project ‘KOMPASS’ (FKZ
16SV7271K) and by the Deutsche Forschungs-
gemeinschaft (DFG) in the Cluster of Excellence
‘Cognitive Interaction Technology’ (CITEC).

References
Timo Baumann and David Schlangen. 2012. The

InproTK 2012 release. In NAACL-HLT Work-
shop on Future Directions and Needs in the
Spoken Dialog Community: Tools and Data.
Association for Computational Linguistics, Strouds-
burg, PA, USA, SDCTD ’12, pages 29–32.
http://dl.acm.org/citation.cfm?id=2390444.2390464.

Timothy W. Bickmore, Rebecca A. Silliman, Ker-
rie Nelson, Debbie M. Cheng, Michael Win-
ter, Lori Henault, and Michael K. Paasche-Orlow.
2013. A randomized controlled trial of an auto-
mated exercise coach for older adults. Journal of
the American Geriatrics Society 61(10):1676–1683.
http://dx.doi.org/10.1111/jgs.12449.

Dan Bohus and Alexander I. Rudnicky. 2009. The
RavenClaw dialog management framework: Archi-
tecture and systems. Computer Speech and Lan-
guage 23.

Herbert H. Clark and Edward F. Schaefer. 1989. Con-
tributing to discourse. Cognitive Science 13(2):259–
294.

Jonathan Ginzburg. 2012. The Interactive Stance. Ox-
ford University Press, Oxford, UK.

Staffan Larsson. 2002. Issue-Based Dialogue Man-
agement. Ph.D. thesis, University of Gothenburg,
Gothenburg, SE.

Staffan Larsson. 2015. The state of the art in dealing
with user answers. In Proceedings of SemDial 2015.
pages 190–191.

Pierre Lison and Casey Kennington. 2015. Developing
spoken dialogue systems with the OpenDial toolkit.
In Proceedings of SemDial 2015. pages 194–195.

Markus Meis. 2013. Nutzerzentrierte Entwicklung
eines Erinnerungsassistenten. Abschlusssympo-
sium Niedersächsischer Forschungsverbund Gestal-
tung altersgerechter Lebenswelten.

David Schlangen, Timo Baumann, Hendrik
Buschmeier, Okko Buß, Stefan Kopp, Gabriel
Skantze, and Ramin Yaghoubzadeh. 2010. Middle-
ware for incremental processing in conversational
agents. In Proceedings of the SIGDIAL 2010
Conference, The 11th Annual Meeting of the Special
Interest Group on Discourse and Dialogue, 24-15
September 2010, Tokyo, Japan. pages 51–54.
http://www.aclweb.org/anthology/W10-4308.

281



David Schlangen and Gabriel Skantze. 2011. A gen-
eral, abstract model of incremental dialogue pro-
cessing. Dialogue and Discourse 2(1):83–111.

Candace Sidner, Timothy Bickmore, Charles Rich,
Barbara Barry, Lazlo Ring, Morteza Behrooz, and
Mohammad Shayganfar. 2013. An always-on com-
panion for isolated older adults. In 14th Annual SIG-
dial meeting on discourse and dialogue.

Gabriel Skantze. 2007. Error Handling in Spoken Di-
alogue Systems. Ph.D. thesis, KTH.

Gabriel Skantze and Samer Al Moubayed. 2012.
IrisTK: a statechart-based toolkit for multi-party
face-to-face interaction. In Proceedings of ICMI
’12.

Tracey Swaffer and Clive R. Hollin. 2000. Anger and
impulse control. In Rob Newell and Kevin Gour-
nay, editors, Mental health nursing, Churchill Liv-
ingstone, chapter 15, pages 265–289.

David R. Traum and Staffan Larsson. 2003. The in-
formation state approach to dialogue management.
Current and new directions in discourse and dia-
logue pages 325–353.

P. Wargnier, G. Carletti, Y. Laurent-Corniquet, S. Ben-
veniste, P. Jouvelot, and A. S. Rigaud. 2016. Field
evaluation with cognitively-impaired older adults of
attention management in the embodied conversa-
tional agent Louise. In 2016 IEEE International
Conference on Serious Games and Applications for
Health (SeGAH). pages 1–8.

Ramin Yaghoubzadeh and Stefan Kopp. 2016. To-
wards graceful turn management in human-agent
interaction for people with cognitive impairments.
In Proceedings of the 7th Workshop on Speech
and Language Processing for Assistive Technologies
(SLPAT 2016).

Ramin Yaghoubzadeh, Marcel Kramer, Karola Pitsch,
and Stefan Kopp. 2013. Virtual agents as daily as-
sistants for elderly or cognitively impaired people -
studies on acceptance and interaction feasibility. In
Intelligent Virtual Agents - 13th International Con-
ference, IVA 2013, Edinburgh, UK, August 29-31,
2013. Proceedings. Edinburg, UK, pages 79–91.

Ramin Yaghoubzadeh, Karola Pitsch, and Stefan Kopp.
2015. Adaptive grounding and dialogue manage-
ment for autonomous conversational assistants for
elderly users. In Proceedings of the 15th Inter-
national Conference on Intelligent Virtual Agents.
Delft, The Netherlands.

Victoria Young and Alex Mihailidis. 2010. Difficulties
in automatic speech recognition of dysarthric speak-
ers and implications for speech-based applications
used by the elderly: A literature review. Assistive
Technology 22(2):99–112.

282



A Example interactions

Figure 5: Example situation (via HTML transcript generated by flexdiam, and translated to English):
top: user initiated new appointment, note that two possible start times were generated from the first
fragment, and overridden by the second; bottom: final ratification phase after last information provided.

Figure 6: User with impaired articulation: cooperative repair. Prior to the blue cursor position (left),
two equally valid hypotheses were generated for dow from the user’s preceding utterance. The user
provides negative evidence by rejection for the first grounding attempt, but their subsequent correction is
not recognized – the system continues with the next hypothesis.

283


