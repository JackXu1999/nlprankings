












































Comparing Attention-Based Convolutional and Recurrent Neural Networks: Success and Limitations in Machine Reading Comprehension


Proceedings of the 22nd Conference on Computational Natural Language Learning (CoNLL 2018), pages 108–118
Brussels, Belgium, October 31 - November 1, 2018. c©2018 Association for Computational Linguistics

108

Comparing Attention-based Convolutional and Recurrent Neural
Networks: Success and Limitations in Machine Reading Comprehension

Matthias Blohm, Glorianna Jagfeld, Ekta Sood, Xiang Yu, Ngoc Thang Vu
Institute for Natural Language Processing (IMS)

Universität Stuttgart, Germany
{blohmms,jagfelga,soodea,xiangyu,thangvu}

@ims.uni-stuttgart.de

Abstract

We propose a machine reading comprehension
model based on the compare-aggregate frame-
work with two-staged attention that achieves
state-of-the-art results on the MovieQA ques-
tion answering dataset. To investigate the lim-
itations of our model as well as the behavioral
difference between convolutional and recur-
rent neural networks, we generate adversarial
examples to confuse the model and compare to
human performance. Furthermore, we assess
the generalizability of our model by analyz-
ing its differences to human inference, draw-
ing upon insights from cognitive science.

1 Introduction

Current state-of-the-art deep learning (DL) mod-
els outperform other techniques in many tasks
including computer vision (Krizhevsky et al.,
2012), speech recognition (Hinton et al., 2012)
and more recently natural language processing
(NLP) (Collobert et al., 2011). Neural-based
NLP systems often use word embeddings (Ben-
gio et al., 2003; Collobert and Weston, 2008;
Mikolov et al., 2013) which are then fed into
a convolutional neural network (CNN) (LeCun
et al., 1990; Waibel et al., 1990) or a recurrent
neural network (RNN) (Elman, 1990; Hochre-
iter and Schmidhuber, 1997) for further classifica-
tion. These approaches proved to be successful for
many NLP tasks (Mikolov et al., 2010; Kim, 2014;
Hu et al., 2014; Bahdanau et al., 2014). Along
with the success of DL in a wide range of appli-
cations, adversarial examples (Goodfellow et al.,
2014) - that aim to confuse the system - have
gained popularity in a wide range of research com-
munities such as computer vision and NLP, since
they can reveal the limitations in the generalizabil-
ity of the models. As opposed to adversarial ex-
amples in computer vision, which are computed

on continuous data and can thus easily be imper-
ceptible if desired, adversarial attacks in NLP en-
tail the necessity to perform discrete and percep-
tible changes to the data. Thus, attack methods
for computer vision such as the Fast Gradient Sign
Method (FGSM) (Goodfellow et al., 2014) cannot
be directly applied to NLP.

Machine comprehension has recently received
increased interest in the NLP community (Yang
et al., 2015; Tapaswi et al., 2016; Rajpurkar et al.,
2016; Chen et al., 2016). Neural network models
perform reasonably well on many data sets with
different question answering setups, e.g. multi-
ple choice or answer generation (Wang and Jiang,
2016; Liu et al., 2017; Yu et al., 2018).

Among others, Wang and Jiang (2016) pro-
posed the compare-aggregate framework, which
uses an attention mechanism (Luong et al., 2015)
to compare the question and candidate answers,
and a CNN to aggregate information. However,
there is still an ongoing debate whether CNNs or
RNNs are more suitable to NLP (Yin et al., 2017),
and the behavioral differences between them are
still under research. Many papers reported re-
markable gains when combining these two models
in ensembles (Deng and Platt, 2014; Zhou et al.,
2015; Vu et al., 2016), since they process informa-
tion in different ways and thus are complimentary
to each other.

Despite the seemingly high accuracies of many
models on machine comprehension tasks, Jia and
Liang (2017) argued that many questions in such
datasets are easily solvable by superficial cues.
They showed with adversarial examples that most
models can be easily tricked by modifications on
the data which do not confuse humans. Similarly,
Sanchez et al. (2018) performed controlled exper-
iments on the robustness of several Natural Lan-
guage Inference models by altering hypernym, hy-
ponym, and antonym relations in the data. Both



109

studies revealed a major weakness of the mod-
els: They largely rely on pattern matching in-
stead of human decision-making processes as re-
quired in the tasks, including heuristics (Gigeren-
zer and Gaissmaier, 2011) and elimination by as-
pects (Tversky, 1972).

In this paper, we implement two machine
comprehension models based on the compare-
aggregate framework with a hierarchical atten-
tion structure using CNNs and RNNs. First we
show that we achieve state-of-the-art results on
the MovieQA multiple choice question answering
dataset (Tapaswi et al., 2016) outperforming other
systems by a large margin.1 Second, we investi-
gate the different behavior of the two systems ap-
plying adversarial attacks in a systematic way. To
our best knowledge, this is the first work explor-
ing the difference between CNNs and RNNs by
such an approach. Third, we present a detailed
comparison between human and machine reading
comprehension, giving insights when and why our
systems fail. Therefore, these insights are im-
portant for future research towards enhancing ma-
chine comprehension systems loosely inspired by
human processing. All code necessary to repro-
duce our experimental results is made available.2

2 Hierarchical Attention-based
Compare-Aggregate Model

The basis for our model is the compare-aggregate
model with attention (Wang and Jiang, 2016) that
has been shown effective for reading comprehen-
sion. We extend the model in two aspects that lead
to significant improvements.

Given a preprocessed matrix-representation of
the question Q, a text (movie plot) P , and k an-
swer candidates A1 . . . Ak, the main idea of Wang
and Jiang (2016)’s compare-aggregate model is to
compare P to Q and each Aj and then aggregate
this information into a vector to derive a confi-
dence score cj for each answer candidate.

Wang and Jiang (2016) concatenate all plot sen-
tences and do not leverage the inherent structur-
ing of the text into sentences. Inspired by the re-
cent success of hierarchical models in NLP (Sor-
doni et al., 2015; Yang et al., 2016; Liu et al.,
2017) we extend the model to perform compar-
ison and aggregation on the word and sentence

1See MovieQA leaderboard, http://movieqa.cs.
toronto.edu/leaderboard/

2https://github.com/DigitalPhonetics/
reading-comprehension

level separately (see Figure 1). Specifically, we
first apply the compare-aggregate model to each
plot sentence Pi individually to obtain question
and answer-weighted representations Twqi , T

w
aij for

each sentence. We then run the aggregation op-
eration on each sentence representation individu-
ally to obtain sentence vector representations rpij .
The sentence representations are concatenated to
obtain a plot representation rpj , which enters the
sentence level of comparison and aggregation that
mirrors the word level architecture.

As a second modification of the base model,
we implement an RNN-based aggregation func-
tion to replace the CNN-based aggregation orig-
inally proposed by Wang and Jiang (2016). In the
following we detail the building blocks of our hier-
archical attention-based compare-aggregate model
as depicted in Figure 1.

Preprocessing We represent the words in the
question q, the plot sentences pi and the answer
candidates aj by pretrained embeddings to obtain
matrices Q,P ,Aj . We project them to lower di-
mensional Q,P,Aj via the following operation:

X = σ
(
W iX + bi

)
� tanh

(
W uX + bu

)
(1)

Attention The attention operation weights the
plot regarding the question or a candidate answer.

G = softmax
(
XTP

)
(2)

H = XG, (3)

where X on the word level represents Q or an
answer candidate Aj and on the sentence level rq
or raj .

3

Comparison The comparison operation per-
forms an element-wise comparison of each hl
in H with its counterparts ql/ajl on the word level
and rq/raj on the sentence level, respectively.
Wang and Jiang (2016) compared many compar-
ison functions. Here we use only the SUBMULT
function since it performed best for MovieQA:

tl = ReLU(W
[
(xl − hl)� (xl − hl)

xl � hl

]
+ b)

where � denotes element-wise multiplication
and xl corresponds to entries of Q/Aj or rq/raj .

3Different from Wang and Jiang (2016) we use dot-
product attention instead of general attention (Luong et al.,
2015) because we found no benefit of the additional parame-
ters of general attention in preliminary experiments.

http://movieqa.cs.toronto.edu/leaderboard/
http://movieqa.cs.toronto.edu/leaderboard/
https://github.com/DigitalPhonetics/reading-comprehension
https://github.com/DigitalPhonetics/reading-comprehension


110

Q Pi Aj

attentionw attentionw

Hwqi H
w
aij

comparew comparew

Q|Q Twqi |T
w
aij Aj |Aj

aggregatew aggregatew aggregatew

rq raj

rpnj
rp2jrp1j . .

.

concatenate

Rpj

attentions attentions

Hsq H
s
aj

compares compares

T sq |T saj

aggregates

rsj

prediction

cj

w
or

d
le

ve
l(

w
)

se
nt

en
ce

le
ve

l(
s)

Figure 1: Hierarchical compare-aggregate model to
compute the confidence score cj of a preprocessed an-
swer candidate Aj given question Q and plot P =
P1 . . . Pn.

Aggregation The goal of the aggregation oper-
ation is to condense the information of a variable-
length sequence into a single vector. Wang and
Jiang (2016) implemented the aggregation opera-
tion as a single-layer CNN following Kim (2014).
Specifically, they used a 1D convolution with filter
sizes {1,3,5}, to capture unigrams, trigrams and 5-
grams.

aggregateCNN = CNN([z1 . . . zm]) (4)

where [z1 . . . zm] on the word level corresponds

to the sequence of row vectors of Q,Tw =
Twqi |T

w
aij , Aj , and on the sentence level to that

of T s = T sq |T saj .
While CNNs are effective in modeling location-

independent n-gram patterns, they cannot capture
longer-range dependencies. Yet, we argue that it
is important to also consider the context of the
matched phrases. This motivates our proposed se-
quential aggregation function based on a single-
layer unidirectional RNN with Long Short-Term
Memory (LSTM) units (Hochreiter and Schmid-
huber, 1997).

aggregateRNN-LSTM = RNN([z1 . . . zm]) (5)

By performing 1-max pooling over the outputs
of aggregateCNN or aggregateRNN-LSTM

4 we obtain
a single vector r (representing rq, rpij , raj on the
word level, or rsj on the sentence level):

r = max pool(aggregate([z1 . . . zm])) (6)

We share the weights between the comparison
and aggregation operations within the word and
sentence level but not across levels.

Prediction We map each aggregated answer-
specific plot representation rsj to a confidence
score cj by two dense layers with shared weights
for all answer candidates and of which the first
uses tanh activation and the second one no activa-
tion function. The confidence scores are normal-
ized to form a probability distribution p1 . . . pk by
a softmax operation.

3 Experimental Set-Up

The hyperparameters for our models are provided
in §A.1 in the appendix.

3.1 Data
We evaluate our models on the MovieQA
dataset (Tapaswi et al., 2016) that contains
14,944 multiple-choice questions on 408 movies
collected by human annotators. The questions
vary from simple “who” or “when” to more com-
plex “why” or “how” question types. Each ques-
tion is provided along with five candidate answers
of which only one is correct.

While the dataset contains multiple sources of
information about the movie contents such as

4Using only the last RNN output for aggregateRNN-LSTM
did not provide convincing results.



111

videos, subtitles, and movie scripts, here we fo-
cus on answering the questions only from plot syn-
opses. Plot synopses are summaries of the movies
collected from Wikipedia that mostly describe the
actions happening in the story. They were used
as references for the question collection and so far
yield the best results on the dataset according to
the MovieQA leaderboard. Figure 2 shows a sam-
ple question together with its candidate answers
and an excerpt of the corresponding movie plot
which contains the necessary information to an-
swer the question. The dataset is split into 9,848
training, 1,958 development and 3,138 test ques-
tions, respectively. Note that the test set accura-
cies can only be evaluated by submitting the pre-
dictions to the server.

Plot: . . . Aragorn is crowned King of Gondor
and taking Arwen as his queen before all
present at his coronation bowing before Frodo
and the other Hobbits. The Hobbits return to
the Shire where Sam marries Rosie Cotton. . . .

Question: Where does Sam marry Rosie?

Candidate Answers: 0) Grey Havens
1) Gondor 2) The Shire 3) Erebor 4) Mordor

Figure 2: MovieQA example question (Wang and Jiang,
2016).

4 Results

We train 11 models with different random initial-
izations for both the CNN and RNN-LSTM aggre-
gation function and form majority-vote ensembles
of the nine models with the highest validation ac-
curacy. Table 1 shows the accuracies of ensembles
of our proposed model variations in comparison to
the published results on the MovieQA validation
and test set. To the best of our knowledge, the re-
sults of Wang and Jiang (2016) and Dzendzik et al.
(2017) were achieved by single models, while the
results of Liu et al. (2017) corresponds to an en-
semble of multiple models.

All our hierarchical single and ensemble mod-
els outperform the previous state of the art on both
the validation and test set. With a test accuracy
of 85.12, the RNN-LSTM ensemble achieves a
new state of the art that is more than five percent-
age points above the previous best result.

The hierarchical structure is crucial for the
model’s success. Adding it to the CNN that oper-

Systems Val. Test

Wang and Jiang (2016) 72.10 72.90
Liu et al. (2017) 79.00 79.99
Dzendzik et al. (2017) - 80.02

Proposed models

CNN word level only 76.51 -
CNN 79.62 -
CNN ensemble 82.58 82.73
RNN-LSTM 83.14 -
RNN-LSTM ensemble 84.37 85.12

CNN RNN-LSTM ensemble 84.78 84.70

Table 1: MovieQA accuracies for previously published
results and our proposed single models (best out of 11)
and ensembles (nine best out of 11).

ates only at word level5 causes a pronounced im-
provement on the validation set.

Furthermore, the RNN-LSTM aggregation
function is superior to aggregation via CNNs, im-
proving the validation accuracy by 1.5 percent-
age points. While this improvement is statis-
tically significant,6 combining both aggregation
functions by ensembling the nine best CNN and
RNN-LSTM models each, yields a small but sta-
tistically insignificant improvement of 0.41 per-
centage points over the RNN-LSTM ensemble on
the validation set. This might explain why the
RNN-LSTM ensemble even outperforms the CNN
RNN-LSTM ensemble on the test set by a small
margin. The difference in test set performance
between these two ensembles is likely not signif-
icant. We cannot test this as the test set is not re-
leased and only accuracy values can be obtained
for model evaluation on the test set.

4.1 Impact of Sentence Attention

The sentence attention allows us to get more in-
sight into the models’ inner state. For example, it
allows us to check whether the model actually fo-
cuses on relevant sentences in order to answer the
questions. The MovieQA dataset provides human
annotations of the minimal set of plot sentences re-
quired to answer a question. In average, 1.15/1.11
sentences in the training/validation set are marked
as containing the clue to the answer. We leverage

5The CNN word level only model essentially corresponds
to our reimplementation of Wang and Jiang (2016). The per-
formance gain on the validation set might be due to using
consistent random initializations for unknown words.

6McNemar test (McNemar, 1947), p < 0.05.



112

Systems CNN RNN-LSTM

All questions 71.45 71.31
- Correctly solved 80.86 79.35
- Incorrectly solved 35.73 34.49

Table 2: Percentage of questions in which the plot sen-
tences containing the clues for the answer are ranked
highest according to the model’s sentence attention dis-
tribution (relative to its selected answer) on the valida-
tion set (averaged results of nine models).

this information and compute the ranks of these
relevant plot sentences according to the models’
sentence attention distribution. We extract the plot
sentence relevance scores after the sentence-level
comparison operation as average of T sq and T

s
aj ,

where aj corresponds to the selected answer of
the model. As Table 2 reveals, both model vari-
ants pay most attention to the relevant plot sen-
tences for 70% of the cases. Identifying the rele-
vant sentences is an important success factor: Rel-
evant sentences are ranked highest only in 35% of
the incorrectly solved questions.

5 Limitations

To help us identifying the models’ weaknesses, we
design a series of systematic adversarial attacks.
These attacks are defined in different categories
depending on the linguistic level (word vs. sen-
tence level) and the knowledge of the adversaries
(black-box vs. white-box). According to the tax-
onomy proposed by Yuan et al. (2017), black-box
and white-box attacks differ in the access of the
adversary to the trained neural network model. In
black-box settings, the adversary acts as a stan-
dard user that has only access to the output of the
model in form of labels or confidence scores. In
contrast, the adversary in white-box settings has
access to all the details of the models such as train-
ing data, network architectures and hyperparame-
ters. In this work, the white-box adversary has ac-
cess to the attention weights of the model at the
word and sentence level. We apply all our attacks
to the nine selected models (see §4) for each ag-
gregation type.

5.1 Word-level Black-box Attack

Adversarial examples for image recognition are
typically created by adding some imperceptible
noise (Szegedy et al., 2014; Goodfellow et al.,
2015), yet this is difficult to do for natural lan-

Systems Average Ensemble

CNN 78.74 81.72
RNN-LSTM 81.53 83.76
CNN RNN-LSTM 81.14 84.27

Table 3: Adversarial accuracies on the validation set
under the word-level black-box attack based on manual
lexical substitutions in questions.

guage because of its discrete nature. The closest
analogue would be paraphrasing but high-quality
paraphrases are difficult to obtain automatically:
Recent attempts with a sophisticated paraphrase-
generation system based on a large paraphrase
database yielded about 20% contradicting adver-
sarial examples (Iyyer et al., 2018).

Thus, we designed an adversarial black-box at-
tack on the questions based on manual lexical sub-
stitution. We inspected the 106 most frequent
words of the validation set questions and manually
defined lexical substitutions of single words and
multiword expressions of up to two tokens wher-
ever applicable. We made sure that the lexical sub-
stitutions were meaning preserving and resulted in
grammatical sentences in all contexts.7 Our final
set of 51 substitution rules resulted in a modifica-
tion of 25% of the validation set questions.

As can be seen from Table 3, the models are
quite robust against meaning-preserving lexical
substitutions: The accuracy drops by less than one
percentage point for all ensembles. Although the
differences are small, the RNN-LSTM and CNN
RNN-LSTM ensembles are even less affected by
lexical substitutions than the CNN ensemble. By
only modifying the questions, we have likely re-
duced their lexical overlap with the answer candi-
dates and the plots. The robustness of the mod-
els against this attack can probably be attributed
to the pretrained GloVe embeddings, which allow
it to generalize for semantically equivalent lexical
choices. Stronger attacks involving substitutions
with more infrequent words that do not appear in
the pretrained embeddings could show the limita-
tion of the models in this respect. We leave the au-
tomatic generation of further-reaching adversarial
examples based on paraphrases to future work.

7We only substituted with words contained in the pre-
trained GloVe embeddings used by the models to avoid in-
troducing unknown words. Even though we did not restrict
the substitutes to words from the training set vocabulary, it
turned out that all selected words and multiword expressions
were indeed contained in the training set vocabulary already,
except for the synonym buddy for friend.



113

1 2 3 5 10 20 40

20

40

60

80

100

replaced words k

ac
cu

ra
cy

(%
)

human
CNN

RNN-LSTM
chance

Figure 3: Adversarial accuracies on the validation set
under the word-level white-box attack based on word
exchange. k is the number of words that are modified
in the plot sentence with most attention (average accu-
racies over nine models). Human evaluation is based
on 20 randomly sampled questions with plots attacked
for a single CNN model (single annotator, one of the
authors of this paper).

5.2 Word-level White-box Attack

We performed a word-level white-box adversarial
attack in which we used the models’ internal atten-
tion distributions to explicitly target the plot words
they base their decision on. More precisely, in this
experiment we leveraged the models’ sentence-
level attention distribution to find the plot sentence
it gave most weight to conditioned on the correct
answer. In this sentence, the k words that received
most attention were then exchanged by randomly
chosen words from the MovieQA vocabulary.

As Figure 3 reveals, already modifying the sin-
gle most important word in the most important
sentence has a large effect on the average perfor-
mance of both the CNN and RNN-LSTM mod-
els. For increasing k, the RNN-LSTM versions
appeared to be a bit more robust against the at-
tack, but for k ≥ 10 the difference shrinks and the
accuracy of both models drops to only about 30%.
This experiment shows that manipulating the most
relevant plot information by removing important
words makes the model fail quickly, since it is
no longer able to draw correct conclusions for the
questions without the necessary plot context. Al-
though the human annotator proved more robust
against this attack for a small number of replaced
words, increasing k beyond five showed the same
drastic decline in performance.

Systems Orig. AddC AddQ AddQA

Without optimization

CNN 76.87 76.67 76.66 76.33
RNN-LSTM 81.11 81.11 81.05 81.05

After two optimization epochs

CNN N/A 73.38 57.39 13.61
RNN-LSTM N/A 79.94 68.05 23.22

Table 4: Adversarial accuracies on 200 random vali-
dation questions under the sentence-level black-box at-
tacks (averaged results of nine models).

5.3 Sentence-level Black-box Attacks

In order to find out to which extent our models are
susceptible to distracting information added to the
plot, we adapt the AddAny attack by Jia and Liang
(2017) originally designed for the SQuAD read-
ing comprehension dataset. This adversarial attack
consists of adding a distractor sentence s at the
end of the plot, regardless of grammaticality. The
word sequence s = w1w2 . . . w10 is initialized by
ten common English words. Then each word is
greedily changed from a pool of 20 random com-
mon words (AddC) to minimize the model’s con-
fidence score for the correct answer. We refer the
reader to Jia and Liang (2017) for the full details
of this attack. Likewise we generate adversarial
sentences using a pool of ten random common
words for each wi in conjunction with all ques-
tion words (AddQ) or additionally the words from
all incorrect answer candidates (AddQA). While
these attacks do not take any particular measures
to prevent the added sentence from contradicting
the correct answer, this is very unlikely given the
ungrammatical nature of the generated word se-
quences.

The first two rows in Table 4 show the effect of
appending a random sentence to the plot.8 The im-
pact on performance is fairly small indicating the
robustness of both models. However, after only
two epochs of optimizing the selected words in the
added sentence, the performance drops markedly
under all variants of the sentence-level black-box
attacks as displayed in the two bottom rows of
Table 4. While composing the sentence of just
common English words (AddC) does not affect the
models too much, adding words from the question

8As this attack is computationally very expensive we only
ran it on a random subset of 200 validation questions for two
optimization epochs of the distractor sentence.



114

Attack optimized for
Evaluated systems CNN RNN-LSTM

CNN 13.61 21.50
RNN-LSTM 22.06 23.22

Table 5: AddQA attack results when testing models on
adversarial examples optimized to fool another model
(averaged results of nine models).

and incorrect answers (AddQA) is most detrimen-
tal and causes both models to perform at or even
below chance level. The models’ performance un-
der AddQ, where the distractor sentence does not
contain answer candidate words, is much higher
than under AddQA. We observe that the models
can be easily distracted by adding a single se-
quence of significant words, even though it bears
no semantic relation to the rest of the plot. This
suggests that both models heavily rely on the con-
tent of the provided answer candidates and might
just perform matching of learned patterns to select
the right answer.

Another observation is that the RNN-LSTM
models outperform the CNN models by a large
margin under all attacks. The stronger the attack,
the larger is the performance gap, indicating that
RNNs depend less on pattern matching and are
less prone to this kind of attack. Figure 5 and 6 in
the appendix provide an example of the sentence
and word attention distributions of a CNN model
before and after the AddQA attack.

To test the transferability of the adversarial ex-
amples across models, we test the CNN models
on the adversarial examples optimized to fool the
RNN models and vice versa. As Table 5 shows,
the performance of both models is degraded to the
same level independent of the model the attack
was optimized for. This suggests that both mod-
els suffer from similar weaknesses.

A straightforward way to try to improve the
models’ robustness against adversarial attacks is
to mix some adversarial examples into the train-
ing data. Jia and Liang (2017) evaluated this
for the AddAny attack on SQuAD and found that
training on a mix of adversarial and original sam-
ples indeed improves the performance with respect
to this specific adversarial attack. Yet a slight
change of the attack, e.g. adding the distracting
sentence as first instead of last sentence, made
the adversarially-trained models to fail almost as
badly as without adversarial training. Therefore,

Systems Average Ensemble

CNN 31.59 32.07
RNN-LSTM 32.61 32.17

Table 6: Adversarial accuracies on the validation set
under the sentence-level white-box attack based on re-
moval of the plot sentence with highest attention (aver-
aged results of nine models).

we argue that it is more promising to look for gen-
eral improvements of the model than training on
adversarial examples generated by a specific at-
tack.

5.4 Sentence-level White-box Attack

Instead of modifying the words in the sentence we
also attempted to attack the model by removing
the whole plot sentence with the highest attention.
In this experiment, we wanted to test (1) if the
model really focuses on the most important sen-
tence, so it would become more difficult to answer
the question, and (2) if the model is able to pick
up more subtle cues or perform answer elimina-
tion to still be able to infer the correct answer with
some confidence. As can be seen from Table 6, the
accuracy decreases dramatically for both models
by removing only one plot sentence. This proves
that the model indeed focuses on the correct sen-
tence where the hint to answer a question is given.
These results correspond to those of the white-box
attack at word level with a large number k of mod-
ified words. For the remaining 30% of correctly
answered questions we observed that sometimes
the models still were able to answer correctly be-
cause of the context information provided in other
plot sentences.

We also measured human performance under
this attack on 20 randomly sampled questions
on distinct plots, where the sentence containing
the answer information was removed. A sin-
gle annotator (one of the authors of this paper)
achieved 55% accuracy on this task, which is way
above chance level and the models’ performance.
The human reported to be able to answer nine
questions with reasonable confidence by deduc-
ing from other information distributed across the
plots; two answers were correct by guessing. An-
swering the questions under this attack took a lot
of time and effort. This highlights the weakness of
the model to give answers in more complex sce-
narios where the answer is less obvious.



115

6 Human vs. Machine Processing

In order to gain insights how to further improve
machine reading comprehension, we performed a
case study in which a human was asked to answer
difficult questions that none of 11 CNN or RNN-
LSTM models solved correctly. The human eval-
uator obtained the plots and the questions with the
corresponding five answer candidates; having ac-
cess to the information in the same manner as the
models. There are clear motifs in the type of rea-
soning and logic required, inherent to human cog-
nition. In this light, we aim at inferring the gap
between the model’s and human cognitive infor-
mation processing to identify problems followed
by potential solutions.

Since we were especially interested in getting
insights on human strategies for the cases where
our models failed, 50 difficult questions of the
CNN models in the validation set were analyzed
by a human evaluator. All of the questions were
correctly answered by the human evaluator notic-
ing several key postulates: textual entailment,
choice by elimination, referential knowledge and
their combination (Hummel and Holyoak, 2005).

Textual entailment is required to solve 60%
of the questions, such as the question “What do
Matt, Steve, and Andrew record themselves do-
ing weeks after their experience in the woods?”
with the relevant sentence “Weeks later, Andrew,
Matt, and Steve record themselves as they display
telekinetic abilities, but begin bleeding from their
noses when they overexert themselves”. The hu-
man predicts the correct answer, “Moving objects
with their mind”, based on world knowledge of
the word telekinetic. A further example in this re-
gard is the question “Do the robbers take people in
the bank as hostage?” with the relevant sentence
“They seize control of a Manhattan bank and take
the employees and patrons hostage.” The human
picks the correct answer “Yes, they do”, as peo-
ple in the bank is a hypernym of employees and
patrons in this context. Lacking notion of these
semantic relations, the model answers incorrectly.

The process of elimination and heuristics
proved essential to solve 44% of the questions.
One example is “Where is New Penzance lo-
cated?” with the relevant sentence “In September
1965, on a New England island called New Pen-
zance, 12-year-old orphan Sam Shakusky is at-
tending Camp Ivanhoe [. . . ]”. The human could
not infer the answer “Off the coast of North Car-

olina” from reading the plot alone, as this re-
gion is not inherently known to be associated with
New England, the location mentioned in the plot.
However, by using the process of elimination and
heuristics, the annotator was able to deduce the
likely answer with the certainty that the other
candidates are less likely correct. Additionally,
with the ranking of keywords, humans can infer
the correct answer in examples such as the ques-
tion “What kind of classes does Toula take up?”,
with the relevant sentence “After some persuasion
by his wife, Maria [. . . ], Gus reluctantly permits
Toula to begin taking computer classes at a lo-
cal community college [. . . ]”. In this case, the
human identified the keywords classes and Toula.
The word classes obtains a higher ranking as it ap-
pears in three of the five possible answers. Ul-
timately, the correct prediction was made using
ranking and the main keyword to find the correct
answer, “Computer classes”.

Referential knowledge is presumed in 36% of
the questions, e.g. in the question “What does Stig-
man do with the money?” with the relevant sen-
tence “After the heist, Stigman follows orders to
betray Trench and escape with the money, man-
aging to pull his gun right as Trench is about to
pull his own”. The human chooses the correct an-
swer “He takes it”, however the models select ei-
ther “He splits it with Trench” or “He leaves it in
the vault”. When analyzing the plot, we can see
that the two pronouns, He and it, are ambiguous to
the models but clear to the human, leading to in-
correct model predictions. The variance is due to
the notion that humans have the ability to under-
stand the referents from the plot. Another exam-
ple where lack of referential knowledge effects the
models’ performances, but not the human, can be
observed with the question “What happens to any
human who is encountered in Narnia?” with the
relevant sentence “If a human is encountered they
are to be brought to her”. The human is able to
select the correct answer, “They are to be brought
to the White Witch”, even though the plot refers to
the character by the pronoun her.

Furthermore, it is apparent that many questions
expect a combination of various reasoning skills.
The question “What is Xavier’s mutant ability?”
with the relevant sentence “Present are Lehnsherr,
now known as Magneto, and the telepathic Profes-
sor Charles Xavier, who privately discuss their dif-
fering views on the relationship between humans



116

and mutants”, depicts this phenomena. The hu-
man reports that she utilized the keywords Xavier,
mutant and ability, raking Xavier more predomi-
nantly. By identifying Professor Charles Xavier
in the plot as referent of the most important key-
word, she could eliminate the incorrect answers.

The human evaluator also conducted an exten-
sive comparison of the baseline word-level mod-
els with the hierarchical CNN models. In particu-
lar, she looked at those questions where the perfor-
mance of both model types differed most (in terms
of the number of models out of 11 that solved
the question correctly). There are 101 validation
questions which the majority of hierarchical CNN
models solved correctly but only a minority (at
least six less) word-level models did so. These
were compared to the 28 validation questions on
which the word-level models outperformed the hi-
erarchical ones.

No prevailing pattern could be identified for
the few instances where the word-level models
did better than the hierarchical ones. Yet, we
found some evidence that the hierarchical models
seem to do better for questions requiring match-
ing longer answer candidates and handling lexical
variation. An example for such a more complex
question is “What happens to Deon in the end?”.
The relevant plot sentence is “He then transfers
the dying Deon’s consciousness into a spare robot
through the modified MOOSE helmet”, and the
correct answer “His consciousness is transferred
into a robot”. All answer candidates consist of at
least five words; the lexical overlap between the
question and correct answer with the plot sentence
is just {into, a, robot}. While only two baseline
models identify the correct answer, all but one of
the hierarchical models do so.

Additionally, among the 101 questions where
the hierarchical models do far better than the
word-level models there are only very few (18)
questions where none of the word-level models
predicted the correct answer. It seems to be the
case that the hierarchical structure helps the model
to gain confidence, causing more models to make
the correct prediction. An example for this is the
question “What does Lucius tell Harry?, where
the relevant sentence is “Lucius reveals that Harry
only saw a dream of Sirius being tortured; it was a
method to lure Harry into the Death Eaters’ grasp,
not an actual situation., and the correct answer is
“His vision of Sirius being tortured was a dream

used to lure Harry to the Death . The majority
of the word-level models predicted an incorrect
answer “His vision of Sirius being tortured was
true, and only five of them selected the correct an-
swer. In contrast, all hierarchical models solved
this question correctly.

The same comparison was conducted between
the hierarchical CNN and RNN-LSTM models.
Although there are improvements, which indicate
that sequential processing is better suited for QA
tasks, the RNN-LSTM models exhibit the same
fundamental drawbacks. They suffer from co-
reference errors, lack the entailment ability, and
are inefficient at keyword elimination. This obser-
vation reveals the fundamental weaknesses of our
proposed network architecture and indicates direc-
tions for future improvements.

7 Conclusion

We proposed a machine reading comprehension
model based on the compare-aggregate framework
with a hierarchical attention structure that achieves
state-of-the-art results on the MovieQA question
answering dataset, greatly outperforming previ-
ous models. Then, we explored the limitations of
our models and the behavioral difference between
CNNs and RNN-LSTMs with adversarial exam-
ples generated at different linguistic levels (word
vs. sentence level) and from different adversary’s
knowledge (black-box vs. white-box). In general,
RNN-LSTM models outperformed CNN models,
but our results for sentence-level black-box attacks
indicate they might share the same weaknesses.

Finally, our intensive analysis on the differences
between the model and human inference suggest
that both models seem to learn matching patterns
to select the right answer rather than performing
plausible inferences as humans do. The results of
these studies also imply that other human like pro-
cessing mechanism such as referential relations,
implicit real world knowledge, i.e., entailment,
and answer by elimination via ranking plausibil-
ity (Hummel and Holyoak, 2005) should be inte-
grated in the system to further advance machine
reading comprehension.

References
Dzmitry Bahdanau, Kyunghyun Cho, and Yoshua Ben-

gio. 2014. Neural machine translation by jointly
learning to align and translate. arXiv preprint
arXiv:1409.0473.



117

Yoshua Bengio, Réjean Ducharme, Pascal Vincent, and
Christian Jauvin. 2003. A neural probabilistic lan-
guage model. Journal of machine learning research,
3(Feb):1137–1155.

Danqi Chen, Jason Bolton, and Christopher D Man-
ning. 2016. A thorough examination of the
cnn/daily mail reading comprehension task. arXiv
preprint arXiv:1606.02858.

Ronan Collobert and Jason Weston. 2008. A Uni-
fied Architecture for Natural Language Processing:
Deep Neural Networks with Multitask Learning. In
Proceedings of the 25th International Conference
on Machine Learning, ICML ’08, New York, New
York, USA. ACM.

Ronan Collobert, Jason Weston, Léon Bottou, Michael
Karlen, Koray Kavukcuoglu, and Pavel Kuksa.
2011. Natural language processing (almost) from
scratch. Journal of Machine Learning Research,
12(Aug):2493–2537.

Li Deng and John C Platt. 2014. Ensemble deep learn-
ing for speech recognition. In Fifteenth Annual Con-
ference of the International Speech Communication
Association.

Daria Dzendzik, Carl Vogel, and Qun Liu. 2017. Who
framed roger rabbit? multiple choice questions an-
swering about movie plot.

Jeffrey L Elman. 1990. Finding Structure in Time.
Cognitive science, 14(2).

Gerd Gigerenzer and Wolfgang Gaissmaier. 2011.
Heuristic decision making. Annual review of psy-
chology, 62:451–482.

Xavier Glorot and Yoshua Bengio. 2010. Understand-
ing the difficulty of training deep feedforward neu-
ral networks. In Proceedings of the Thirteenth
International Conference on Artificial Intelligence
and Statistics, volume 9 of Proceedings of Machine
Learning Research, pages 249–256, Chia Laguna
Resort, Sardinia, Italy. PMLR.

Ian Goodfellow, Jonathon Shlens, and Christian
Szegedy. 2015. Explaining and harnessing adversar-
ial examples. In International Conference on Learn-
ing Representations.

Ian J Goodfellow, Jonathon Shlens, and Christian
Szegedy. 2014. Explaining and harnessing adver-
sarial examples. arXiv preprint arXiv:1412.6572.

Geoffrey Hinton, Li Deng, Dong Yu, George E Dahl,
Abdel-rahman Mohamed, Navdeep Jaitly, Andrew
Senior, Vincent Vanhoucke, Patrick Nguyen, Tara N
Sainath, et al. 2012. Deep neural networks for
acoustic modeling in speech recognition: The shared
views of four research groups. IEEE Signal Process-
ing Magazine, 29(6):82–97.

Sepp Hochreiter and Jürgen Schmidhuber. 1997. Long
Short-Term Memory. Neural Computation, 9(8).

Baotian Hu, Zhengdong Lu, Hang Li, and Qingcai
Chen. 2014. Convolutional neural network architec-
tures for matching natural language sentences. In
Advances in neural information processing systems,
pages 2042–2050.

John E Hummel and Keith J Holyoak. 2005. Relational
reasoning in a neurally plausible cognitive architec-
ture: An overview of the lisa project. Current Di-
rections in Psychological Science, 14(3):153–157.

Mohit Iyyer, John Wieting, Kevin Gimpel, and Luke
Zettlemoyer. 2018. Adversarial example generation
with syntactically controlled paraphrase networks.
arXiv preprint arXiv:1804.06059.

Robin Jia and Percy Liang. 2017. Adversarial exam-
ples for evaluating reading comprehension systems.
In Proceedings of the 2017 Conference on Empiri-
cal Methods in Natural Language Processing, pages
2021–2031.

Yoon Kim. 2014. Convolutional neural networks for
sentence classification. In Proceedings of the 2014
Conference on Empirical Methods in Natural Lan-
guage Processing (EMNLP), pages 1746–1751.

Alex Krizhevsky, Ilya Sutskever, and Geoffrey E Hin-
ton. 2012. Imagenet classification with deep con-
volutional neural networks. In Advances in neural
information processing systems, pages 1097–1105.

Yann LeCun, Bernhard E Boser, John S Denker, Don-
nie Henderson, Richard E Howard, Wayne E Hub-
bard, and Lawrence D Jackel. 1990. Handwritten
digit recognition with a back-propagation network.
In Advances in neural information processing sys-
tems, pages 396–404.

Tzu-Chien Liu, Yu-Hsueh Wu, and Hung-yi Lee.
2017. Attention-based CNN matching net. CoRR,
abs/1709.05036.

Thang Luong, Hieu Pham, and Christopher D. Man-
ning. 2015. Effective approaches to attention-based
neural machine translation. In Proceedings of the
2015 Conference on Empirical Methods in Natural
Language Processing, EMNLP 2015, Lisbon, Portu-
gal, September 17-21, 2015, pages 1412–1421.

Quinn McNemar. 1947. Note on the sampling error
of the difference between correlated proportions or
percentages. Psychometrika, 12(2):153–157.

Tomas Mikolov, Kai Chen, Greg Corrado, and Jeffrey
Dean. 2013. Efficient Estimation of Word Represen-
tations in Vector Space. CoRR, abs/1301.3781.

Tomáš Mikolov, Martin Karafiát, Lukáš Burget, Jan
Černockỳ, and Sanjeev Khudanpur. 2010. Recur-
rent neural network based language model. In
Eleventh Annual Conference of the International
Speech Communication Association.



118

Jeffrey Pennington, Richard Socher, and Christo-
pher D. Manning. 2014. Glove: Global vectors for
word representation. In Empirical Methods in Nat-
ural Language Processing (EMNLP), pages 1532–
1543.

Pranav Rajpurkar, Jian Zhang, Konstantin Lopyrev, and
Percy Liang. 2016. Squad: 100,000+ questions for
machine comprehension of text. In Proceedings of
the 2016 Conference on Empirical Methods in Nat-
ural Language Processing, pages 2383–2392. Asso-
ciation for Computational Linguistics.

Ivan Sanchez, Jeff Mitchell, and Sebastian Riedel.
2018. Behavior analysis of nli models: Uncovering
the influence of three factors on robustness. In Pro-
ceedings of the 2018 Conference of the North Amer-
ican Chapter of the Association for Computational
Linguistics: Human Language Technologies, Vol-
ume 1 (Long Papers), volume 1, pages 1975–1985.

Alessandro Sordoni, Yoshua Bengio, Hossein Vahabi,
Christina Lioma, Jakob Grue Simonsen, and Jian-
Yun Nie. 2015. A hierarchical recurrent encoder-
decoder for generative context-aware query sugges-
tion. In Proceedings of the 24th ACM International
on Conference on Information and Knowledge Man-
agement, CIKM ’15.

Christian Szegedy, Wojciech Zaremba, Ilya Sutskever,
Joan Bruna, Dumitru Erhan, Ian Goodfellow, and
Rob Fergus. 2014. Intriguing properties of neural
networks. In International Conference on Learning
Representations.

Makarand Tapaswi, Yukun Zhu, Rainer Stiefelhagen,
Antonio Torralba, Raquel Urtasun, and Sanja Fidler.
2016. Movieqa: Understanding stories in movies
through question-answering. In Proceedings of the
IEEE Conference on Computer Vision and Pattern
Recognition, pages 4631–4640.

Amos Tversky. 1972. Elimination by aspects: A theory
of choice. Psychological review, 79(4):281.

Ngoc Thang Vu, Heike Adel, Pankaj Gupta, and Hin-
rich Schütze. 2016. Combining recurrent and convo-
lutional neural networks for relation classification.
In Proceedings of NAACL HLT.

Alexander Waibel, Toshiyuki Hanazawa, Geoffrey
Hinton, Kiyohiro Shikano, and Kevin J Lang. 1990.
Phoneme recognition using time-delay neural net-
works. In Readings in speech recognition, pages
393–404. Elsevier.

Shuohang Wang and Jing Jiang. 2016. A compare-
aggregate model for matching text sequences.
CoRR, abs/1611.01747.

Yi Yang, Wen-tau Yih, and Christopher Meek. 2015.
Wikiqa: A challenge dataset for open-domain ques-
tion answering. In Proceedings of the 2015 Con-
ference on Empirical Methods in Natural Language
Processing, pages 2013–2018.

Zichao Yang, Diyi Yang, Chris Dyer, Xiaodong He,
Alexander J. Smola, and Eduard H. Hovy. 2016. Hi-
erarchical Attention Networks for Document Classi-
fication. In HLT-NAACL.

Wenpeng Yin, Katharina Kann, Mo Yu, and Hinrich
Schütze. 2017. Comparative study of cnn and rnn
for natural language processing. arXiv preprint
arXiv:1702.01923.

Adams Wei Yu, David Dohan, Quoc Le, Thang Luong,
Rui Zhao, and Kai Chen. 2018. Fast and accurate
reading comprehension by combining self-attention
and convolution. In International Conference on
Learning Representations.

Xiaoyong Yuan, Pan He, Qile Zhu, Rajendra Rana
Bhat, and Xiaolin Li. 2017. Adversarial exam-
ples: Attacks and defenses for deep learning. arXiv
preprint arXiv:1712.07107.

Chunting Zhou, Chonglin Sun, Zhiyuan Liu, and Fran-
cis Lau. 2015. A c-lstm neural network for text clas-
sification. arXiv preprint arXiv:1511.08630.


