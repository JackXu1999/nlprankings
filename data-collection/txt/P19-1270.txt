



















































Joint Effects of Context and User History for Predicting Online Conversation Re-entries


Proceedings of the 57th Annual Meeting of the Association for Computational Linguistics, pages 2809–2818
Florence, Italy, July 28 - August 2, 2019. c©2019 Association for Computational Linguistics

2809

Joint Effects of Context and User History
for Predicting Online Conversation Re-entries

Xingshan Zeng1,2, Jing Li3∗, Lu Wang4, Kam-Fai Wong1,2
1The Chinese University of Hong Kong, Hong Kong

2MoE Key Laboratory of High Confidence Software Technologies, China
3Tencent AI Lab, Shenzhen, China

4Northeastern University, Boston, MA, United States
1,2{xszeng,kfwong}@se.cuhk.edu.hk

3ameliajli@tencent.com, 4luwang@ccs.neu.edu

Abstract

As the online world continues its exponen-
tial growth, interpersonal communication has
come to play an increasingly central role in
opinion formation and change. In order to help
users better engage with each other online, we
study a challenging problem of re-entry pre-
diction foreseeing whether a user will come
back to a conversation they once participated
in. We hypothesize that both the context of the
ongoing conversations and the users’ previous
chatting history will affect their continued in-
terests in future engagement. Specifically, we
propose a neural framework with three main
layers, each modeling context, user history,
and interactions between them, to explore how
the conversation context and user chatting his-
tory jointly result in their re-entry behavior.
We experiment with two large-scale datasets
collected from Twitter and Reddit. Results
show that our proposed framework with bi-
attention achieves an F1 score of 61.1 on Twit-
ter conversations, outperforming the state-of-
the-art methods from previous work.

1 Introduction

Interpersonal communication plays an important
role in information exchange and idea sharing in
our daily life. We are involved in a wide variety
of dialogues every day, ranging from kitchen ta-
ble conversations to online discussions, all help us
make decisions, better understand important social
issues, and form personal ideology. However, in-
dividuals have limited attentions to engage in the
massive amounts of online conversations. There
thus exists a pressing need to develop automatic
conversation management tools to keep track of
the discussions one would like to keep engaging
in. To meet such demand, we study the prob-
lem of predicting online conversation re-entries,

∗ Jing Li is the corresponding author.

……
H1: Is there literally no one on twitter who 
wants to talk about LET ME IN with me? :(

H2: I think the change in overall tone was 
enough to let LMI stand on it's own. Love 
Giacchino's score too.

H3: I think if i had seen LMI again before 
making my top ten it would have made the 
cut. Oh well.

H4: it's not as bad as I remembered on the 
blu-ray. Looks like shit next to Avatar, but 
so does everything lol
……

User History of U1 Conversation 1

Conversation 2

T1[U2]: Instead of focusing on when Oscars got it 
wrong... Let's talk about when the Oscars got it 
right…
T2[U1]: The Hurt Locker, The Departed, NCFOM, 
LOTR, Schindler's List, Braveheart, Gladiator, 
The Godfather Part 1 & 2.
......

……
T1[U3]: Almost fell asleep in the first hour of 
INCEPTION. In the theatre.
T2[U4]: lol do you not like it?
T3[U5]: Meh. MEMENTO = far better film.
T4[U1]: apples and oranges, plain and simple.
……
T5[U1]: Inception and Memento. Same filmmaker, 
but completely different scope, themes, ideas, 
genres, etc.

Figure 1: Sample tweets in the chatting history of user
U1 and two Twitter conversation snippets U1 engaged
in. Hi: the i-th tweet in U1’s history. Ti[Uj]: the i-th
turn posted by Uj. First entries by U1 are highlighted
in blue in both conversations. U1 only returns to the
second one.

where we aim to forecast whether the users will
return to a discussion they once entered.

What will draw a user back? To date, prior ef-
forts for re-entry prediction mainly focus on mod-
eling users engagement patterns in the ongoing
conversations (Backstrom et al., 2013) or rely on
the social network structure (Budak and Agrawal,
2013), largely ignoring the rich information in
users’ previous chatting history.

Here we argue that effective prediction of one’s
re-entry behavior requires the understanding of
both the conversation context—what has been
discussed in the dialogue under consideration, and
user chatting history (henceforth user history)—
what conversation topics the users are actively in-
volved in. In Figure 1, we illustrate how the two
factors together affect a user’s re-entry behavior.
Along with two conversations that user U1 partici-
pated in, also shown is their chatting history in pre-
vious discussions. U1 comes back to the second
conversation since it involves topics on movies
(e.g. mentioning Memento and Inception) and thus
suits their interests according to the chatting his-



2810

tory, which also talked about movies.
In this work, we would like to focus on the joint

effects of conversation context and user history, ig-
noring other information. It would be a more chal-
lenging yet general task, since information like so-
cial networks may be not available in some certain
scenarios. To study how conversation context and
user history jointly affect user re-entries, we pro-
pose a novel neural framework that incorporates
and aligns the indicative representations from the
two information source. To exploit the joint ef-
fects, four mechanisms are employed here: sim-
ple concatenation of the two types of representa-
tion, attention mechanism over turns in context,
memory networks (Sukhbaatar et al., 2015) — able
to learn context attentions in aware of user his-
tory, and bi-attention (Seo et al., 2016) — further
capturing interactions from two directions (con-
text to history and history to context). More im-
portantly, our framework enables the re-entry pre-
diction and corresponding representations to be
learned in an end-to-end manner. On the contrary,
previous methods for the same task rely on hand-
crafted features (Backstrom et al., 2013; Budak
and Agrawal, 2013), which often require labor-
intensive and time-consuming feature engineering
processes. To the best of our knowledge, we are
the first to explore the joint effect of conversation
context and user history on predicting re-entry be-
havior in a neural network framework.

We experiment with two large-scale datasets,
one from Twitter (Zeng et al., 2018), the other
from Reddit which is newly collected1. Our
framework with bi-attention significantly outper-
forms all the comparing methods including the
previous state of the art (Backstrom et al., 2013).
For instance, our model achieves an F1 score of
61.1 on Twitter conversations, compared to an
F1 score of 57.0 produced by Backstrom et al.
(2013), which is based on a rich set of handcrafted
features. Further experiments also show that the
model with bi-attention can consistently outper-
form comparisons given varying lengths of con-
versation context. It shows that bi-attention mech-
anism can well align users’ personal interests and
conversation context in varying scenarios.

After probing into the proposed neural frame-
work with bi-attention, we find that meaningful
representations are learned via exploring the joint

1The datasets and codes are released at: https://
github.com/zxshamson/re-entry-prediction

effect of conversation context and user history,
which explains the effectiveness of our framework
in predicting re-entry behavior. Finally, we carry
out a human study, where we ask two humans
to perform on the same task of first re-entry pre-
diction. The model with bi-attention outperforms
both humans, suggesting the difficulty of the task
as well as the effectiveness of our proposed frame-
work.

2 Related Work

Response Prediction. Previous work on re-
sponse prediction mainly focuses on predicting
whether users will respond to a given social media
post or thread. Efforts have been made to measure
the popularity of a social media post via modeling
the response patterns in replies or retweets (Artzi
et al., 2012; Zhang et al., 2015). Some stud-
ies investigate post recommendation by predict-
ing whether a response will be made by a given
user (Chen et al., 2012; Yan et al., 2012; Hong
et al., 2013; Alawad et al., 2016).

In addition to post-level prediction, other
studies focus on response prediction at the
conversation-level. Zeng et al. (2018) investigate
microblog conversation recommendation by ex-
ploiting latent factors of topics and discourse with
a Bayesian model, which often requires domain
expertise for customized learning algorithms. Our
neural framework can automatically acquire the
interactions among important components that
contribute to the re-entry prediction problem, and
can be easily adapted to new domains. For the
prediction of re-entry behavior in online conver-
sations, previous methods rely on the extraction of
manually-crafted features from both the conversa-
tion context and the user’s social network (Back-
strom et al., 2013; Budak and Agrawal, 2013).
Here we tackle a more challenging task, where the
re-entries are predicted without using any infor-
mation from social network structure, which en-
sures the generalizability of our framework to sce-
narios where such information is unavailable.

Online Conversation Behavior Understanding.
Our work is also in line with conversational be-
havior understanding, including how users inter-
act in online discourse (Ritter et al., 2010) and
how such behavior signals the future trajectory,
including their continued engagement (Backstrom
et al., 2013; Jiao et al., 2018) and the appear-
ance of impolite behavior (Zhang et al., 2018). To

https://github.com/zxshamson/re-entry-prediction
https://github.com/zxshamson/re-entry-prediction


2811

t1 a1

Turn 
Encoder

LSTM

.  .  .  .  .  .

. . .

m1

Turn 
Encoder

m|u|

Turn 
Encoder

. . . . . .

. . . . . ..  .  .  .  .  . 

Interaction Modeling Layer for Combining 
Context and User History

rO

Linear + Sigmoid

Context Modeling Layer User History Modeling Layer

Embedding

H"#

LSTM LSTM

t|c| a|c|

H|%|# H"& H|'|&

((*, ,)

Turn 
Encoder

Embedding Embedding Embedding

Figure 2: The generic framework for re-entry predic-
tion. We implement it with three encoders (Average
Embedding, CNN, and BiLSTM) for turn modeling
and four mechanisms (Simple Concatenation, Atten-
tion, Memory Networks, and Bi-attention) for model-
ing interactions between context and user history.

better understand the structure of conversations,
Recurrent Neural Network (RNN)-based methods
have been exploited to capture temporal dynam-
ics (Cheng et al., 2017; Zayats and Ostendorf,
2018; Jiao et al., 2018). Different from the above
work, our model not only utilizes the conversa-
tions themselves, but also leverages users’ prior
posts in other discussions.

3 Neural Re-entry Prediction Combining
Context and User History

This section describes our neural network-based
conversation re-entry prediction framework ex-
ploring the joint effects of context and user his-
tory. Figure 2 shows the overall architecture of our
framework, consisting of three main layers: con-
text modeling layer, user history modeling layer,
and interaction modeling layer to learn how in-
formation captured by the previous two layers in-
teract with each other and make decisions condi-
tioned on their joint effects. Here we adopt four
mechanisms for interaction modeling: simple con-
catenation, attention, memory networks, and bi-
attention, which will be described later.

3.1 Input and Output
We start with formulating model input and output.
At input layer, our model is fed with two types
of information, the chatting history of the target
user u and the observed context of the target con-
versation c. The goal of our model is to output
a Bernoulli distribution p(u, c) indicating the es-
timated likelihood of whether u will re-engage in

the conversation c. Below gives more details.
Formally, we formulate the context of c as

a sequence of chronologically ordered turns
〈t1, t2, · · · , t|c|〉, where the last turn t|c| is posted
by u (we then predict u’s re-entries afterwards).
Each turn t is represented by a sequence of words
wt, and an auxiliary triple, at = 〈it, rt, ut〉, where
it, rt, and ut are three indexes indicating the posi-
tion of turn t, which turn t replies to, and the au-
thor of t, respectively. Here at is used to record the
replying structures as well as the user’s involve-
ment pattern.

For the user history, we formulate it
as a collection of u’s chatting messages
{m1,m2, · · · ,m|u|}, all posted before the
time t|c| occurs. Each message m is denoted as its
word sequence, wm.

In the following, we explain how the aforemen-
tioned representations are processed by our model
to make predictions. The three main layers in Fig-
ure 2 are described in Sections 3.2, 3.3, and 3.4,
respectively. The learning objective is presented
in Section 3.5.

3.2 Context Modeling Layer

The context modeling layer captures representa-
tions from the observed context for the target con-
versation c. To this end, we jointly model the
content in each turn (henceforth turn modeling)
and the turn interactions in conversation structure
(henceforth structure modeling).

Turn Modeling. The turn representations are
modeled via turn-level word sequence with a turn
encoder. We exploit three encoders here: Aver-
age Embedding (Averaging each word’s embed-
ding representation), CNN (Convolutional Neu-
ral Networks), and BiLSTM (Bidirectional Long
Short-Term Memory). BiLSTM’s empirical per-
formance turns out to be slightly better (will be
reported in Table 2).

Concretely, given the conversation turn t, each
word wi of t is represented as a vector mapped by
an embedding layer I(·), which is initialized by
pre-trained embeddings and updated during train-
ing. The embedded vector I(wi) is then fed into
the turn encoder, yielding the turn representation
for t, denoted by HTt .

2

2For all the BiLSTM encoders in this work, without other-
wise specified, we take the concatenation of all hidden states
from both the directions as its learned representations.



2812

Structure Modeling. To learn the conversa-
tional structure representations for c, our model
applies BiLSTM, namely structure encoder, to
capture the interactions between adjacent turns in
its context. Each state of this structure encoder se-
quentially takes t’s turn representation, HTt , con-
catenated with the auxiliary triple, at, as input to
produce the structure representation HC . Our in-
tuition is that HC should capture both the content
of the conversation and interaction patterns among
its participants. Then HC , considered as the con-
text representation for c, is sent to interaction mod-
eling layer as part of its input.

3.3 User History Modeling Layer

To encode the user history for target user u, in
this layer, we first apply the same encoder in turn
modeling to encode each chatting message m by
u, as they both explore the post-level representa-
tions. The turn encoder is sequentially fed with the
embedded word in m, and produce the message-
level representation HMm . All messages in u’s user
history are further concatenated into a matrix HU ,
serving as u’s user history representation and the
input of the next layer.

3.4 Interaction Modeling Layer

To capture whether the discussion points in c
match the interests of u, HC (from context mod-
eling) and HU (from user history modeling) are
merged through an interaction modeling mecha-
nism over the two sources of information. We hy-
pothesize that users will be likely to come back
to a conversation if its topic fits their own inter-
ests. Here, we explore four different mechanisms
for interaction modeling. Their learned interac-
tion representation, denoted as rO, is fed into a
sigmoid-activated neural perceptron (Glorot et al.,
2011), for predicting final output p(u, c). It indi-
cates how likely the target user u will re-engage
in the target conversation c. We then describe the
four mechanisms to learn rO in turn below.

Simple Concatenation. Here we simply put
context representation (last state) and user rep-
resentations (with average pooling) side by side,
yielding rO = [HC|c|;

∑|u|
j H

U
j /|u|] as the interac-

tion representation for re-entry prediction.

Attention. To capture the context information
useful for re-entry prediction, we exploit an at-
tention mechanism (Luong et al., 2015) over HC .

Attentions are employed to “soft-address” impor-
tant context turns according to their similarity with
user representation (with average pooling). Here
we adopt dot attention weights and define the at-
tended interaction representation as:

rO =

|c|∑
i

αi ·HCi , αi = softmax(HCi ·
|u|∑
j

HUj /|u|) (1)

Memory Networks. To further recognize in-
dicative chatting messages in user history,
we also apply end-to-end memory networks
(MemN2N) (Sukhbaatar et al., 2015) for interac-
tion modeling. It can be seen as a recurrent atten-
tion mechanism over chatting messages (stored in
memory). Hence fed with context representation,
memory networks will yield a memory-aware vec-
tor as interaction representation:

rO =

|u|∑
j

αj ·fturn(HUj ), αj = softmax(HC|c| ·HUj ) (2)

where fturn(·) denotes the unit function used for
turn modeling.

Here we adopt multi-hop memory mechanism
to allow deep user interests to be learned from
chatting history. For more details, we refer the
readers to Sukhbaatar et al. (2015).

Bi-attention. Inspired by Seo et al. (2016), we
also apply bi-attention mechanism to explore the
joint effects of context and user history. Intu-
itively, the bi-attention mechanism looks for evi-
dence, if any, indicating the topics of the current
conversation that align with the user’s interests
from two directions (i.e. context to history and his-
tory to context), such as the names of two movies
Inception and Let Me In shown in Figure 1. Con-
cretely, bi-attention mechanism captures context-
aware attention over user history messages:

αUij =
exp(fscore(H

C
i , H

U
j ))∑|u|

j′=1 exp(fscore(H
C
i , H

U
j′ ))

(3)

where the alignment score function takes a form of
fscore(H

C
i , H

U
j ) =Wbi−att[H

C
i ;H

U
j ;H

C
i ◦HUj ].

It captures the similarity of the i-th context turn
and the j-th user history message. The weight vec-
tor Wbi−att is learnable in training.

Likewise, we compute user-aware attention
over context turns. Afterwards, the bi-directional
attended representations are concatenated and
passed into a ReLU-activated multilayer percep-
tron (MLP), yielding representation r. r, as turn-
level representation, is then sequentially fed into a
two-layer BiLSTM, to produce the interaction rep-
resentation rO.



2813

3.5 Learning Objective
For parameter learning in our model, we design
the objective function based on cross-entropy loss
as following:

L = −
∑
i

[
λyi log(ŷi) + µ(1− yi) log(1− ŷi)

]
(4)

where the two terms reflect the prediction on pos-
itive and negative instances, respectively. More-
over, to take the potential data imbalance into ac-
count, we adopt two trade-off weights λ and µ.
The parameter values are set based on the pro-
portion of positive and negative instances in the
training set (see Section 4). ŷi denotes the re-entry
probability estimated from p(u, c) for the i-th in-
stance, and yi is the corresponding binary ground-
truth label (1 for re-entry and 0 for the opposite).

4 Experimental Setup

Data Collection and Statistic Analysis. To
study re-entry behavior in online conversations,
we collected two datasets: one is released by
Zeng et al. (2018) containing Twitter conversa-
tions formed by tweets from the TREC 2011 mi-
croblog track data3 (henceforth Twitter), and the
other is newly collected from Reddit (henceforth
Reddit), a popular online forum. In our datasets,
the conversations from Twitter concern diverse
topics, while those from Reddit focus on the po-
litical issues. Both datasets are in English.

To build the Reddit dataset, we first downloaded
a large corpus publicly available on Reddit plat-
form.4 Then, we selected posts and comments in
subreddit “politics” posted from Jan to Dec 2008.
Next, we formed Reddit posts and comments into
conversations with replying relations revealed by
the “parent id” of each comment. Last, we re-
moved conversations with only one turn.

In our main experiment, we focus on first re-
entry prediction, i.e. we predict whether a user u
will come back to a conversation c, given current
turns until u’s first entry in c as context and u’s
past chatting messages (posted before u engaging
in c). For model training and evaluation, we ran-
domly select 80%, 10%, and 10% conversations to
form training, development, and test sets.

The statistics of the two datasets are shown in
Table 1. As can be seen, users participate twice on

3https://trec.nist.gov/data/tweets/
4https://www.reddit.com/r/datasets/

comments/3bxlg7/i_have_every_publicly_
available_reddit_comment/

Twitter Reddit
# of users 10,122 13,134
# of conversations 7,500 29,477
# of re-entry instances 5,875 12,780
# of non re-entry instances 8,677 39,988
Avg. # of convs per user 1.7 5.9
Avg. # of msgs in user history 3.9 8.4
Avg. # of entries per user per conv 2.0 1.3
Avg. # of turns per conv 5.2 3.7
Avg. # of users per conv 2.3 2.6

Table 1: Statistics of two datasets.

2^0

2^4

2^8

2^12

2^16

0 10 20 30 40 50

# 
of

 u
se

rs
# of msgs in user history

Twitter
Reddit

>

(a) User history

2^0

2^4

2^8

2^12

2^16

2 9 16 23 >30

# 
of

 c
on

vs

# of turns in conv. context

Twitter
Reddit

(b) Conversation context

Figure 3: Distributions of message number in user his-
tory and turn number in conversation context on the two
datasets.

average in Twitter conversations, and the number
is only 1.3 on Reddit. This results in the severe im-
balance over instances of re-entry and non re-entry
(negative samples where users do not come back)
on both datasets. Therefore, strategies should be
adopted for alleviating the data imbalance issue,
as done in Eq. (4). It indicates the sparse user ac-
tivity in conversations, where most users engage
in a conversation only once or twice. Thus pre-
dicting user re-entries only with context will not
perform well, and the complementary information
underlying user history should be leveraged.

We further study the distributions of message
number in user history and turn number in con-
versation context on both datasets. As shown in
Figure 3, there exists severe sparsity in either user
history or conversation context. Thus combining
them both might help alleviate the sparsity in one
information source. We also notice that Twitter
and Reddit users exhibit different conversation be-
haviors. Reddit users tend to engage in more con-
versations, resulting in more messages in user his-
tory (as shown in Figure 3(a)). Twitter users are
more likely to stay within each conversation, lead-
ing to lengthy discussions and larger re-entry fre-
quencies on average, as shown in Figure 3(b) and
Table 1.

https://trec.nist.gov/data/tweets/
https://www.reddit.com/r/datasets/comments/3bxlg7/i_have_every_publicly_ available_reddit_comment/
https://www.reddit.com/r/datasets/comments/3bxlg7/i_have_every_publicly_ available_reddit_comment/
https://www.reddit.com/r/datasets/comments/3bxlg7/i_have_every_publicly_ available_reddit_comment/


2814

Data Preprocessing and Model Setting. For
preprocessing Twitter data, we applied Glove
tweet preprocessing toolkit (Pennington et al.,
2014).5 For the Reddit dataset, we first ap-
plied the open source natural language toolkit
(NLTK) (Loper and Bird, 2002) for word to-
kenization. Then, we replaced links with the
generic tag “URL” and removed all the non-
alphabetic tokens. For both datasets, a vocabulary
was built and maintained in experiments with all
the tokens (including emoticons and punctuation)
from training data.

For model setups, we initialize the embed-
ding layer with 200-dimensional Glove embed-
ding (Pennington et al., 2014), where Twitter ver-
sion is used for our Twitter dataset and the Com-
mon Crawl version applied on Reddit dataset.6 All
the hyper-parameters are tuned on the develop-
ment set by grid search. The batch size is set to
32. Adam optimizer (Kingma and Ba, 2014) is
adopted for parameter learning with initial learn-
ing rate selected among {10−3, 10−4, 10−5}. For
the BiLSTM encoders, we set the size of their hid-
den states to 200 (100 for each direction). For the
CNN encoders, we use filter windows of 2, 3, and
4, each with 50 feature maps. In MemN2N inter-
action mechanism, we set hop numbers to 3. In the
learning loss, we set µ = 1 and λ = 2, the weights
to tackle data imbalance. For re-entry prediction,
a user is considered to come back if the estimated
probability for re-entry is larger than 0.5.

Baselines and Comparisons. For comparisons,
we consider three baselines. RANDOM baseline:
randomly pick up a “yes-or-no” answer. HISTORY
baseline: predict based on users’ history re-entry
rate before current conversation, which will an-
swer “yes” if the rate exceeds a pre-defined thresh-
old (set on development data), and “no” other-
wise. (For users who lack such information be-
fore current conversation, it predicts “yes or no”
randomly.) ALL-YES baseline: always answers
“yes” in re-entry prediction. Its assumption is that
users tend to be drawn back to the conversations
they once participated by the platform’s auto mes-
sages inviting them to return.

For supervised models, we compare with
CCCT, the state-of-the-art method proposed by

5https://nlp.stanford.edu/projects/
glove/preprocess-twitter.rb

6https://nlp.stanford.edu/projects/
glove/

Backstrom et al. (2013), where the bagged deci-
sion tree with manually-crafted features (including
arrival patterns, timing effects, most related terms,
etc.) are employed for re-entry prediction. We
do not compare with Budak and Agrawal (2013),
since most of its features are related to social net-
works or Twitter group information, which is un-
available in our data.

In our proposed neural framework, we further
compare varying encoders for turn modeling and
mechanisms to model the interactions between
user history and conversation context. We first
compare three turn encoders — AVG-EMBED (av-
erage embedding), CNN, and BILSTM, to exam-
ine their performance in turn representation learn-
ing. Their results are compared on our variant
only with context modeling layer and the best en-
coder (turned out to be BILSTM) is applied on the
full model. For the interaction modeling layer, we
also study the effectiveness of four mechanisms
to combine user history and conversation context
— simple concatenation (CON), attention (ATT),
memory networks (MEM), and bi-attention (BIA).

5 Results and Analysis

This section first discusses prediction results of
first re-entry in Section 5.1. We then present the
results of the second and third re-entry predic-
tion in Section 5.2, as well as an analysis on user
history effects. Section 5.3 then provides expla-
nations on what we learn from the joint effects
from context and user history, indicative of user
re-entries. Finally, we conduct a human study
to compare human performance on the same task
with our best model (Section 5.4).

5.1 First Re-entry Prediction Results

In main experiment, we adopt the automatic eval-
uation metrics — AUC, F1 score, precision, and
recall, and focus on the prediction of the major
re-entry type — first re-entry, where conversation
context up to user’s first participation is given. As
shown in Table 1, most users, if re-entry, only re-
turn once to a conversation. Also, in conversation
management, the prediction of first re-entry is a
challenging yet practical problem. We will dis-
cuss second and third re-entry prediction later in
Section 5.2. The comparison results are reported
in Table 2. On both datasets, we observe:

• First re-entry prediction is challenging. All
models produce AUC and F1 scores below 70.

https://nlp.stanford.edu/projects/glove/preprocess-twitter.rb
https://nlp.stanford.edu/projects/glove/preprocess-twitter.rb
https://nlp.stanford.edu/projects/glove/
https://nlp.stanford.edu/projects/glove/


2815

Models Twitter RedditAUC F1 Score Precision Recall AUC F1 Score Precision Recall
Baselines
RANDOM 51.0 45.0 40.3 50.9 49.4 32.6 24.5 48.7
HISTORY 50.1 46.4 42.2 51.4 50.7 35.2 26.9 50.9
ALL-YES 50.0 54.9 37.9 100.0 50.0 38.5 23.8 100.0
S.O.T.A
CCCT 57.7 57.0 45.5 76.4 59.9 39.8 44.7 36.0
W/O History
AVG-EMBED 60.4 59.0 43.5 91.8 63.7 42.4 31.0 67.2
CNN 58.8 59.1 43.2 93.5 64.0 42.8 31.1 68.5
BILSTM 60.4 59.4 45.8 85.0 64.1 43.1 31.4 69.5
With History
BILSTM+CON 51.0 58.0 40.9 100.0 50.1 38.6 24.0 98.3
BILSTM+ATT 58.4 59.0 44.6 87.3 60.3 41.3 27.8 82.4
BILSTM+MEM 61.3 59.9 45.7 87.5 65.5 43.7 31.8 69.9
BILSTM+BIA 62.7 61.1 47.0 87.7 67.1 45.4 33.9 68.9

Table 2: Results on first re-entry prediction. The best results in each column are in bold. Model BILSTM+BIA
yields significantly better AUC and F1 scores than all other comparisons (p < 0.05, paired t-test).

In particular, models built on rules and features
with shallow content and network features per-
form poorly, suggesting the need of better under-
standing of conversations or more information like
user’s chatting history. We also observe that HIS-
TORY yields only slightly better results than RAN-
DOM. It suggests that users’ re-entries depend on
not only their past re-entry patterns, but also the
conversation context.

• Well-encoded user chatting history is effec-
tive. Among neural models, our BILSTM+MEM
and BILSTM+BIA models outperform other
comparisons by successfully modeling users’ pre-
vious messages and their alignment with the top-
ics of ongoing conversations. However, the oppo-
site observation is drawn for BILSTM+CON and
BILSTM+ATT. It is because the interactions be-
tween context and user history are effective yet
complex, requiring well-designed merging mech-
anisms to exploit their joint effects.

• Bi-attention mechanism better aligns the
users’ interests and the conversation topics. BIL-
STM+BIA achieves the best AUC and F1 scores,
significantly outperforming all other comparison
models on both datasets. In particular, it beats
BILSTM+MEM, which also able to learn the in-
teraction between user history and conversation
content, indicating the effectiveness of bi-attention
over memory networks in this task.

Interestingly, comparing the results on the two
datasets, we notice all models yield better recall
and F1 on Twitter than Reddit. This is due to the

50 

60 

70 

80 

90 

100 

1 2 3

All-Yes
CCCT
BiLSTM
BiLSTM+MEM
BiLSTM+BiA

(a) Twitter Dataset

30 

40 

50 

60 

70 

80 

1 2 3

All-Yes
CCCT
BiLSTM
BiLSTM+MEM
BiLSTM+BiA

(b) Reddit Dataset

Figure 4: F1 scores for prediction on the first, second,
and third re-entries (given the conversation context un-
til the last entry). X-axis: # of turns in the given con-
versation context. Both figures, from left to right, show
the F1 scores by ALL-YES, CCCT, BILSTM, BIL-
STM+MEM, and BILSTM+BIA.

fact that Reddit users are more likely to abandon
conversations, reflected as the fewer number of en-
tries in Table 1. Twitter users, on the other hand,
tend to stay longer in the conversations, which en-
courages all models to predict the return of users.

5.2 Predicting Re-entries with Varying
Context and User History

Here we study the effects of varying conversation
context and user history over re-entry prediction.

Results with Varying Context. We first dis-
cuss model performance given different amounts
of conversation context by varying the number of
user entries. Figure 4 shows the F1 scores for pre-
dicting the first, second, and third re-entries. For
predicting second or third re-entries, turns of cur-
rent context until given user’s second or third entry



2816

30

40

50

60

70

80

90

100

# of msgs in user history

Twitter
Reddit

Figure 5: F1 scores of model BILSTM+BIA on first
re-entry prediction, with varying numbers of chatting
messages given in user history.

will be given. As can be seen, all models’ perfor-
mance monotonically increases when more con-
text is observed. Our BILSTM+BIA uniformly
outperforms other methods in all setups. Interest-
ingly, baseline ALL-YES achieves the most per-
formance gain when additional context is given.
This implies that the more a user contributes to a
conversation, the more likely they will come back.

Results with Varying User History. We further
analyze how model performance differs when dif-
ferent amounts of messages are given in the user
history. From Figure 5, we can see that it generally
yields better F1 scores when more messages are
available for the user history, suggesting the use-
fulness of chatting history to signal user re-entries.
The performance on Reddit does not increase as
fast as observed on Twitter, which may mainly be-
cause the context from Reddit conversations is of-
ten limited.

5.3 Further Discussion

We further discuss our models with an ablation
study and a case study to understand and interpret
their prediction results.

Ablation Study. To examine the contribution of
each component in our framework, we present an
ablation study on first re-entry prediction task. Ta-
ble 3 shows the results of our best full model
(BILSTM+BIA) together with its variant without
using turn-level auxiliary meta at (defined in Sec-
tion 3.1 to record user activity and replying rela-
tions in context), and that without structure mod-
eling layer (to capture conversation discourse in
context described in Section 3.2); also compared
are variants without using user chatting history
(described in Section 3.3).

Our full model yields the best F1 scores, show-

Models Twitter RedditF1 Pre Rec F1 Pre Rec
W/O History
W/O SML 58.8 42.6 95.1 39.6 25.2 92.9
With SML 59.4 45.9 85.0 43.1 31.4 69.5
With History
W/O SML 57.5 43.2 86.7 43.8 31.3 74.4
W/O Meta 60.4 46.6 86.1 44.3 31.3 75.8
Full model 61.1 47.0 87.7 45.4 33.9 68.9

Table 3: Results of our variants. SML: structure mod-
eling layer. Meta: auxiliary triples at. Our full model
BILSTM+BIA obtains the best F1.

Models Conv. 1 (C1) Conv. 2 (C2)
CCCT 1.0 1.0
BILSTM 0.386 0.480
BILSTM+MEM 0.583 0.712
BILSTM+BIA 0.460 0.581

Table 4: Predicted probabilities by different models for
user U1’s re-entry to conversations C1 and C2 in Fig-
ure 1. CCCT can only yield binary outputs. For other
neural models, predicting threshold is 0.5.

ing the joint effects of context and user history can
usefully indicate user re-entries. We also see that
auxiliary triples, though conveying simple meta
data for context turns, are helpful in our task.
In addition, interestingly, conversation structure
looks more effective in models leveraging user his-
tory, because they can learn deeper semantic rela-
tions between context turns and user chatting mes-
sages.

Case Study. We further utilize a case study
based on the sample conversations shown in Fig-
ure 1 to demonstrate what our model learns. Ta-
ble 4 displays the outputs from different models on
estimating how likely U1 will re-engage in con-
versation 1 (C1) and conversation 2 (C2), where
U1 returns to the latter. All neural models suc-
cessfully forecast that U1 is more likely to re-
engage in C2, while only BILSTM+BIA yields
correct results (given threshold 0.5).

We further visualize the attention weights out-
put by BILSTM+BIA’s bi-attention mechanism
with a heatmap in Figure 6. As can be seen, it as-
signs higher attention values to turns T2 and T3
in conversation C2, due to their topical similar-
ity with user U1’s interests, i.e. movies, as in-
ferred from their previous messages about Let Me
In. The attention weights then guide the final pre-
diction for higher chance of re-entry to C2 rather
than C1.



2817

Conv.	1 Conv.	2

T1[U2]		T2[U1]	 T1[U3]	 T2[U4]	 T3[U5]		T4[U1]

H1

H2

H3

H4

Figure 6: Attention output of model BILSTM+BIA
for the two sample conversations in Figure 1.

Predictor Twitter Reddit
Human 1 26 (29) 30 (30)
Human 2 25 (28) 28 (29)
BILSTM+BIA 35 33

Table 5: Numbers of correct predictions made by hu-
mans, reading conversation context only and further
seeing users’ chatting history (boldfaced numbers),
compared to the results of our best model in same set-
ting. A random guess gives 25 (out of 50 pairs).

5.4 Comparing with Humans

We are also interested in how human performs for
the first re-entry prediction task, in order to find
out how challenging such a task is. To achieve
this, we design a human evaluation. Concretely,
from each dataset, we randomly sample 50 users
who have been involved in at least 4 conversations,
with both re-entry and non re-entry behaviors ex-
hibited. Then for each user u, we construct paired
samples based on randomly selected conversations
c1 and c2, where u re-engage in one but not the
other. The rest of the conversations that u partic-
ipated in are collected as their user history. Then,
we invite two humans who are fluent speakers of
English, to predict which conversation user u will
re-engage, after reading the context up to user’s
first participation in the paired conversations c1
and c2. They are requested to make a second pre-
diction after reading user’s chatting history.

Humans’ prediction performance is shown in
Table 5 along with BILSTM+BIA model’s out-
put on the same data. As can be seen, humans can
only give marginally better predictions than a ran-
dom guess, i.e., 25 out of 50 pairs. Their perfor-
mance improves after reading the user’s previous
posts, however, still falls behind our model’s pre-
dictions. This indicates the ability of our model
to learn from large-scaled data and align users’
interests with conversation content. In addition,

we notice that humans yield better performance on
Reddit conversations than Twitter. It might be due
to the fact that Reddit conversations are more fo-
cused, and it is easier for humans to identify the
discussion points. While for Twitter discussions,
the informal language usage further hinders hu-
mans’ judgment.

6 Conclusion

We study the joint effects of conversation context
and user chatting history for re-entry prediction.
A novel neural framework is proposed for learn-
ing the interactions between two source of infor-
mation. Experimental results on two large-scale
datasets from Twitter and Reddit show that our
model with bi-attention yields better performance
than the previous state of the art. Further discus-
sions show that the model learns meaningful rep-
resentations from conversation context and user
history and hence exhibits consistent better per-
formance given varying lengths of context or his-
tory. We also conduct a human study on the first
re-entry prediction task. Our proposed model is
observed to outperform humans, benefiting from
its effective learning from large-scaled data.

Acknowledgements

This work is partly supported by HK RGC
GRF (14232816, 14209416, 14204118), NSFC
(61877020). Lu Wang is supported in part by
National Science Foundation through Grants IIS-
1566382 and IIS-1813341. We thank the three
anonymous reviewers for the insightful sugges-
tions on various aspects of this work.

References
Noor Aldeen Alawad, Aris Anagnostopoulos, Stefano

Leonardi, Ida Mele, and Fabrizio Silvestri. 2016.
Network-aware recommendations of novel tweets.
In Proceedings of the 39th International ACM SI-
GIR Conference on Research and Development in
Information Retrieval, pages 913–916. ACM.

Yoav Artzi, Patrick Pantel, and Michael Gamon. 2012.
Predicting responses to microblog posts. In Pro-
ceedings of the 2012 Conference of the North Amer-
ican Chapter of the Association for Computational
Linguistics: Human Language Technologies, pages
602–606. Association for Computational Linguis-
tics.

Lars Backstrom, Jon M. Kleinberg, Lillian Lee, and
Cristian Danescu-Niculescu-Mizil. 2013. Charac-
terizing and curating conversation threads: expan-



2818

sion, focus, volume, re-entry. In Sixth ACM Inter-
national Conference on Web Search and Data Min-
ing, WSDM 2013, Rome, Italy, February 4-8, 2013,
pages 13–22.

Ceren Budak and Rakesh Agrawal. 2013. On participa-
tion in group chats on Twitter. In Proceedings of the
22nd International Conference on World Wide Web,
pages 165–176. ACM.

Kailong Chen, Tianqi Chen, Guoqing Zheng, Ou Jin,
Enpeng Yao, and Yong Yu. 2012. Collaborative per-
sonalized tweet recommendation. In Proceedings of
the 35th international ACM SIGIR Conference on
Research and development in information retrieval,
pages 661–670. ACM.

Hao Cheng, Hao Fang, and Mari Ostendorf. 2017. A
factored neural network model for characterizing
online discussions in vector space. In Proceedings
of the 2017 Conference on Empirical Methods in
Natural Language Processing, pages 2296–2306.

Xavier Glorot, Antoine Bordes, and Yoshua Bengio.
2011. Deep sparse rectifier neural networks. In Pro-
ceedings of the fourteenth international conference
on artificial intelligence and statistics, pages 315–
323.

Liangjie Hong, Aziz S Doumith, and Brian D Davison.
2013. Co-factorization machines: modeling user in-
terests and predicting individual decisions in Twit-
ter. In Proceedings of the sixth ACM International
Conference on Web Search and Data Mining, pages
557–566. ACM.

Yunhao Jiao, Cheng Li, Fei Wu, and Qiaozhu Mei.
2018. Find the conversation killers: A predictive
study of thread-ending posts. In Proceedings of the
2018 World Wide Web Conference on World Wide
Web, pages 1145–1154. International World Wide
Web Conferences Steering Committee.

Diederik P Kingma and Jimmy Ba. 2014. Adam: A
method for stochastic optimization. arXiv preprint
arXiv:1412.6980.

Edward Loper and Steven Bird. 2002. Nltk: The natu-
ral language toolkit. In Proceedings of the ACL-02
Workshop on Effective tools and methodologies for
teaching natural language processing and computa-
tional linguistics-Volume 1, pages 63–70. Associa-
tion for Computational Linguistics.

Minh-Thang Luong, Hieu Pham, and Christopher D
Manning. 2015. Effective approaches to attention-
based neural machine translation. arXiv preprint
arXiv:1508.04025.

Jeffrey Pennington, Richard Socher, and Christo-
pher D. Manning. 2014. Glove: Global vectors for
word representation. In Empirical Methods in Nat-
ural Language Processing (EMNLP), pages 1532–
1543.

Alan Ritter, Colin Cherry, and Bill Dolan. 2010. Un-
supervised modeling of Twitter conversations. In
Human Language Technologies: Conference of the
North American Chapter of the Association of Com-
putational Linguistics, pages 172–180.

Minjoon Seo, Aniruddha Kembhavi, Ali Farhadi, and
Hannaneh Hajishirzi. 2016. Bidirectional attention
flow for machine comprehension. arXiv preprint
arXiv:1611.01603.

Sainbayar Sukhbaatar, Jason Weston, Rob Fergus, et al.
2015. End-to-end memory networks. In Advances
in neural information processing systems, pages
2440–2448.

Rui Yan, Mirella Lapata, and Xiaoming Li. 2012.
Tweet recommendation with graph co-ranking. In
Proceedings of the 50th Annual Meeting of the
Association for Computational Linguistics: Long
Papers-Volume 1, pages 516–525. Association for
Computational Linguistics.

Victoria Zayats and Mari Ostendorf. 2018. Conver-
sation modeling on reddit using a graph-structured
LSTM. TACL, 6:121–132.

Xingshan Zeng, Jing Li, Lu Wang, Nicholas
Beauchamp, Sarah Shugars, and Kam-Fai Wong.
2018. Microblog conversation recommendation via
joint modeling of topics and discourse. In Proceed-
ings of the Conference of the North American Chap-
ter of the Association for Computational Linguistics:
Human Language Technologies, NAACL-HLT 2018,
Volume 1 (Long Papers), pages 375–385.

Justine Zhang, Jonathan P Chang, Cristian Danescu-
Niculescu-Mizil, Lucas Dixon, Yiqing Hua, Nithum
Thain, and Dario Taraborelli. 2018. Conversations
gone awry: Detecting early signs of conversational
failure. arXiv preprint arXiv:1805.05345.

Qi Zhang, Yeyun Gong, Ya Guo, and Xuanjing Huang.
2015. Retweet behavior prediction using hierarchi-
cal Dirichlet process. In AAAI, pages 403–409.

http://www.aclweb.org/anthology/D14-1162
http://www.aclweb.org/anthology/D14-1162

