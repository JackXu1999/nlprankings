



















































Incorporating Syntactic and Semantic Information in Word Embeddings using Graph Convolutional Networks


Proceedings of the 57th Annual Meeting of the Association for Computational Linguistics, pages 3308–3318
Florence, Italy, July 28 - August 2, 2019. c©2019 Association for Computational Linguistics

3308

Incorporating Syntactic and Semantic Information in
Word Embeddings using Graph Convolutional Networks

Shikhar Vashishth1 Manik Bhandari1∗ Prateek Yadav2∗
Piyush Rai3 Chiranjib Bhattacharyya1 Partha Talukdar1

1Indian Institute of Science
2Microsoft Research, 3IIT Kanpur

{shikhar,manikb,chiru,ppt}@iisc.ac.in

t-pryad@microsoft.com, piyush@cse.iitk.ac.in

Abstract
Word embeddings have been widely adopted
across several NLP applications. Most exist-
ing word embedding methods utilize sequen-
tial context of a word to learn its embedding.
While there have been some attempts at uti-
lizing syntactic context of a word, such meth-
ods result in an explosion of the vocabulary
size. In this paper, we overcome this prob-
lem by proposing SynGCN, a flexible Graph
Convolution based method for learning word
embeddings. SynGCN utilizes the dependency
context of a word without increasing the vo-
cabulary size. Word embeddings learned by
SynGCN outperform existing methods on var-
ious intrinsic and extrinsic tasks and provide
an advantage when used with ELMo. We also
propose SemGCN, an effective framework for
incorporating diverse semantic knowledge for
further enhancing learned word representa-
tions. We make the source code of both
models available to encourage reproducible re-
search.

1 Introduction

Representing words as real-valued vectors is an
effective and widely adopted technique in NLP.
Such representations capture properties of words
based on their usage and allow them to generalize
across tasks. Meaningful word embeddings have
been shown to improve performance on several
relevant tasks, such as named entity recognition
(NER) (Bengio et al., 2013), parsing (Socher et al.,
2013), and part-of-speech (POS) tagging (Ma and
Hovy, 2016). Using word embeddings for initial-
izing Deep Neural Networks has also been found
to be quite useful (Collobert et al., 2011; Johnson
et al., 2017; Strubell et al., 2018).

Most popular methods for learning word em-
beddings are based on the distributional hypoth-
esis, which utilizes the co-occurrence statistics

∗Contributed equally to the work.

from sequential context of words for learning
word representations (Mikolov et al., 2013a; Pen-
nington et al., 2014). More recently, this approach
has been extended to include syntactic contexts
(Levy and Goldberg, 2014) derived from depen-
dency parse of text. Higher order dependencies
have also been exploited by Komninos and Man-
andhar (2016); Li et al. (2018). Syntax-based
embeddings encode functional similarity (in-place
substitutable words) rather than topical similarity
(topically related words) which provides an advan-
tage on specific tasks like question classification
(Komninos and Manandhar, 2016). However, cur-
rent approaches incorporate syntactic context by
concatenating words with their dependency rela-
tions. For instance, in Figure 1 scientists_subj,
water_obj, and mars_nmod needs to be included
as a part of vocabulary for utilizing the depen-
dency context of discover. This severely expands
the vocabulary, thus limiting the scalability of
models on large corpora. For instance, in Levy
and Goldberg (2014) and Komninos and Man-
andhar (2016), the context vocabulary explodes
to around 1.3 million for learning embeddings of
220k words.

Incorporating relevant signals from semantic
knowledge sources such as WordNet (Miller,
1995), FrameNet (Baker et al., 1998), and Para-
phrase Database (PPDB) (Pavlick et al., 2015) has
been shown to improve the quality of word embed-
dings. Recent works utilize these by incorporat-
ing them in a neural language modeling objective
function (Yu and Dredze, 2014; Alsuhaibani et al.,
2018), or as a post-processing step (Faruqui et al.,
2014; Mrkšić et al., 2016). Although existing ap-
proaches improve the quality of word embeddings,
they require explicit modification for handling dif-
ferent types of semantic information.

Recently proposed Graph Convolutional Net-
works (GCN) (Defferrard et al., 2016; Kipf and



3309

Scientists

discover

water

on

Context
Embedding

GCN
Embedding

SynGCN (Sentence-level)

Mars

obj

water
apple

chair

Output
Layer

WTarget

Sentence

nmod

subj

case

Figure 1: Overview of SynGCN: SynGCN employs Graph Convolution Network for utilizing dependency context
for learning word embeddings. For each word in vocabulary, the model learns its representation by aiming to
predict each word based on its dependency context encoded using GCNs. Please refer Section 5 for more details.

Welling, 2016) have been found to be useful for
encoding structural information in graphs. Even
though GCNs have been successfully employed
for several NLP tasks such as machine transla-
tion (Bastings et al., 2017), semantic role labeling
(Marcheggiani and Titov, 2017), document dat-
ing (Vashishth et al., 2018a) and text classifica-
tion (Yao et al., 2018), they have so far not been
used for learning word embeddings, especially
leveraging cues such as syntactic and semantic in-
formation. GCNs provide flexibility to represent
diverse syntactic and semantic relationships be-
tween words all within one framework, without
requiring relation-specific special handling as in
previous methods. Recognizing these benefits, we
make the following contributions in this paper.

1. We propose SynGCN, a Graph Convolution
based method for learning word embeddings.
Unlike previous methods, SynGCN utilizes
syntactic context for learning word representa-
tions without increasing vocabulary size.

2. We also present SemGCN, a framework for in-
corporating diverse semantic knowledge (e.g.,
synonymy, antonymy, hyponymy, etc.) in
learned word embeddings, without requiring
relation-specific special handling as in previous
methods.

3. Through experiments on multiple intrinsic and
extrinsic tasks, we demonstrate that our pro-
posed methods obtain substantial improvement
over state-of-the-art approaches, and also yield

an advantage when used in conjunction with
methods such as ELMo (Peters et al., 2018).

The source code of both the methods has
been made available at http://github.com/
malllabiisc/WordGCN.

2 Related Work

Word Embeddings: Recently, there has been
much interest in learning meaningful word repre-
sentations such as neural language modeling (Ben-
gio et al., 2003) based continuous-bag-of-words
(CBOW) and skip-gram (SG) models (Mikolov
et al., 2013a). This is further extended by Pen-
nington et al. (2014) which learns embeddings by
factorizing word co-occurrence matrix to lever-
age global statistical information. Other formula-
tions for learning word embeddings include multi-
task learning (Collobert et al., 2011) and ranking
frameworks (Ji et al., 2015).

Syntax-based Embeddings: Dependency
parse context based word embeddings is first
introduced by Levy and Goldberg (2014). They
allow encoding syntactic relationships between
words and show improvements on tasks where
functional similarity is more relevant than topical
similarity. The inclusion of syntactic context is
further enhanced through second-order (Komni-
nos and Manandhar, 2016) and multi-order (Li
et al., 2018) dependencies. However, in all these
existing approaches, the word vocabulary is
severely expanded for incorporating syntactic

http://github.com/malllabiisc/WordGCN
http://github.com/malllabiisc/WordGCN


3310

relationships.
Incorporating Semantic Knowledge Sources:

Semantic relationships such as synonymy,
antonymy, hypernymy, etc. from several semantic
sources have been utilized for improving the
quality of word representations. Existing methods
either exploit them jointly (Xu et al., 2014; Kiela
et al., 2015; Alsuhaibani et al., 2018) or as a
post-processing step (Faruqui et al., 2014; Mrkšić
et al., 2016). SynGCN falls under the latter
category and is more effective at incorporating
semantic constraints (Section 9.3 and 9.2).

Graph Convolutional Networks: In this pa-
per, we use the first-order formulation of GCNs
via a layer-wise propagation rule as proposed by
(Kipf and Welling, 2016). Recently, some vari-
ants of GCNs have also been proposed (Yadav
et al., 2019; Vashishth et al., 2019). A detailed
description of GCNs and their applications can
be found in Bronstein et al. (2017). In NLP,
GCNs have been utilized for semantic role la-
beling (Marcheggiani and Titov, 2017), machine
translation (Bastings et al., 2017), and relation ex-
traction (Vashishth et al., 2018b). Recently, Yao
et al. (2018) use GCNs for text classification by
jointly embedding words and documents. How-
ever, their learned embeddings are task specific
whereas in our work we aim to learn task agnostic
word representations.

3 Background: Graph Convolutional
Networks

In this section, we will provide a brief overview
of Graph Convolutional Networks (GCNs) (Def-
ferrard et al., 2016; Kipf and Welling, 2016) and
its extension to directed labeled graphs.

3.1 GCN on Directed Labeled Graphs
Let G = (V, E ,X ) be a directed graph where V is
the set of nodes (|V| = n), E indicates the edge
set, and X ∈ Rn×d denotes the d-dimensional in-
put node features. An edge from node u to v with
label luv is denoted by (u, v, luv). As the infor-
mation need not always propagate only along the
direction of the edge, following Marcheggiani and
Titov (2017), we include inverse edges (v, u, l−1uv )
in E . Embedding hk+1v ∈ Rd of a node v after
k-GCN layers is given as follows.

hk+1v = f

 ∑
u∈N+(v)

(
W kluvh

k
u + b

k
luv

)

Here, W kluv ∈ R
d×d and bluv ∈ Rd are label

specific model parameters, N+(v) = N (v) ∪ {v}
is the set of immediate neighbors of v (including
v itself), and hku ∈ Rd is hidden representation of
node u after k − 1 layers.

Edge Label Gating Mechanism: In real-world
graphs, some of the edges might be erroneous or
irrelevant for the downstream task. This is pre-
dominant in automatically constructed graphs like
dependency parse of text. To address this issue,
we employ edge-wise gating (Marcheggiani and
Titov, 2017) in GCNs. For each node v, we calcu-
late a relevance score gkluv ∈ R for all the edges in
which v participates. The score is computed inde-
pendently for each layer as shown below.

gkluv = σ
(
Ŵ kluvh

k
u + b̂

k
luv

)
Here, Ŵ kluv ∈ R

1×d and b̂kluv ∈ R are trainable
parameters and σ(·) is the sigmoid function. The
updated GCN propagation rule for the kth layer
can be written as shown below.

hk+1v = f

 ∑
u∈N+(v)

gkluv ×
(
W kluvh

k
u + b

k
luv

) (1)
4 Methods Overview

The task of learning word representations in an
unsupervised setting can be formulated as fol-
lows: Given a text corpus, the aim is to learn
a d-dimensional embedding for each word in the
vocabulary. Most of the distributional hypothesis
based approaches (Mikolov et al., 2013b; Penning-
ton et al., 2014) only utilize sequential context for
each word in the corpus. However, this becomes
suboptimal when the relevant context words lie be-
yond the window size. For instance in Figure 1, a
relevant context word discover for Mars is missed if
the chosen window size is less than 3. On the con-
trary, a large window size might allow irrelevant
words to influence word embeddings negatively.

Using dependency based context helps to alle-
viate this problem. However, all existing syntactic
context based methods (Levy and Goldberg, 2014;
Komninos and Manandhar, 2016; Li et al., 2018)
severely expand vocabulary size (as discussed in
Section 1) which limits their scalability to a large
corpus. To eliminate this drawback, we propose
SynGCN which employs Graph Convolution Net-
works (Defferrard et al., 2016; Kipf and Welling,



3311

2016) to better encode syntactic information in
embeddings. We prefer GCNs over other graph
encoding architectures such as Tree LSTM (Tai
et al., 2015) as GCNs do not restrict graphs to be
trees and have been found to be more effective at
capturing global information (Zhang et al., 2018).
Moreover, they give substantial speedup as they do
not involve recursive operations which are difficult
to parallelize. The overall architecture is shown in
Figure 1, for more details refer to Section 5.

Enriching word embeddings with semantic
knowledge helps to improve their quality for sev-
eral NLP tasks (Faruqui et al., 2014; Mrkšić et al.,
2016). Existing approaches are either incapable
of utilizing these diverse relations or need to be
explicitly modeled for exploiting them. In this
paper, we propose SemGCN which automatically
learns to utilize multiple semantic constraints by
modeling them as different edge types. SemGCN
can be used as a post-processing method similar
to Faruqui et al. (2014); Mrkšić et al. (2016). We
describe it in more detail in Section 6.

5 SynGCN

In this section, we provide a detailed descrip-
tion of our proposed method, SynGCN. Follow-
ing Mikolov et al. (2013b); Levy and Goldberg
(2014); Komninos and Manandhar (2016), we sep-
arately define target and context embeddings for
each word in the vocabulary as parameters in the
model. For a given sentence s = (w1, w2, . . . , wn),
we first extract its dependency parse graph Gs =
(Vs, Es) using Stanford CoreNLP parser (Manning
et al., 2014). Here, Vs = {w1, w2, . . . , wn} and Es
denotes the labeled directed dependency edges of
the form (wi, wj , lij), where lij is the dependency
relation of wi to wj .

Similar to Mikolov et al. (2013b)’s continuous-
bag-of-words (CBOW) model, which defines the
context of a word wi as Cwi = {wi+j : −c ≤ j ≤
c, j 6= 0} for a window of size c, we define the
context as its neighbors in Gs, i.e., Cwi = N (wi).
Now, unlike CBOW which takes the sum of the
context embedding of words in Cwi to predict wi,
we apply directed Graph Convolution Network (as
defined in Section 3) on Gs with context embed-
dings of words in s as input features. Thus, for
each word wi in s, we obtain a representation hk+1i
after k-layers of GCN using Equation 1 which we
reproduce below for ease of readability (with one

exception as described below).

hk+1i = f

 ∑
j∈N (i)

gklij ×
(
W klijh

k
j + b

k
lij

)
Please note that unlike in Equation 1, we use

N (i) instead of N+(i) in SynGCN, i.e., we do not
include self-loops in Gs. This helps to avoid over-
fitting to the initial embeddings, which is unde-
sirable in the case of SynGCN as it uses random
initialization. We note that similar strategy has
been followed by Mikolov et al. (2013b). Further-
more, to handle erroneous edges in automatically
constructed dependency parse graph, we perform
edge-wise gating (Section 3.1) to give importance
to relevant edges and suppress the noisy ones. The
embeddings obtained are then used to calculate the
loss as described in Section 7.

Contrary to the standard word-embedding ap-
proaches (Mikolov et al., 2013b; Pennington et al.,
2014) which rely on sequential context, SynGCN
utilizes syntactic context to learn more meaningful
word representations. We validate this in Section
9.1. Note that, the word vocabulary remains un-
changed during the entire learning process, this
makes SynGCN more scalable compared to the
existing approaches.

Theorem 1. SynGCN is a generalization of
Continuous-bag-of-words (CBOW) model.

Proof. The reduction can be obtained as follows. For a
given sentence s, take the neighborhood of each word
wi in Gs as it sequential context, i.e.,N (wi) = {wi+j :
−c ≤ j ≤ c, j 6= 0} ∀wi ∈ s. Now, if the number of
GCN layers are restricted to 1 and the activation func-
tion is taken as identity (f(x) = x), then Equation 1
reduces to

hi =
∑

−c≤j≤c,j 6=0

(
glij ×

(
Wlijhj + b

k
lij

))
.

Finally, W klij and b
k
lij

can be fixed to an identity matrix
(I) and a zero vector (0), respectively, and edge-wise
gating (glij ) can be set to 1. This gives

hi =
∑

−c≤j≤c,j 6=0

(I · hj + 0) =
∑

−c≤j≤c,j 6=0

hj ,

which is the hidden layer equation of CBOW model.



3312

6 SemGCN

In this section, we propose another Graph Con-
volution based framework, SemGCN, for incor-
porating semantic knowledge in pre-trained word
embeddings. Most of the existing approaches like
Faruqui et al. (2014); Mrkšić et al. (2016) are re-
stricted to handling symmetric relations like syn-
onymy and antonymy. On the other hand, although
recently proposed (Alsuhaibani et al., 2018) is ca-
pable of handling asymmetric information, it still
requires manually defined relation strength func-
tion which can be labor intensive and suboptimal.

SemGCN is capable of incorporating both
symmetric as well as asymmetric information
jointly. Unlike SynGCN, SemGCN operates on
a corpus-level directed labeled graph with words
as nodes and edges representing semantic relation-
ship among them from different sources. For in-
stance, in Figure 2, semantic relations such as hy-
ponymy, hypernymy and synonymy are represented
together in a single graph. Symmetric informa-
tion is handled by including a directed edge in
both directions. Given the corpus level graph G,
the training procedure is similar to that of Syn-
GCN, i.e., predict the word w based on its neigh-
bors in G. Inspired by Faruqui et al. (2014), we
preserve the semantics encoded in pre-trained em-
beddings by initializing both target and context
embeddings with given word representations and
keeping target embeddings fixed during training.
SemGCN uses Equation 1 to update node embed-
dings. Please note that in this case N+(v) is used
as the neighborhood definition to preserve the ini-
tial learned representation of the words.

7 Training Details

Given the GCN representation (ht) of a word (wt),
the training objective of SynGCN and SemGCN is
to predict the target word given its neighbors in the
graph. Formally, for each method we maximize
the following objective1.

E =

|V |∑
t=1

logP (wt|wt1, wt2 . . . wtNt)

1We also experimented with joint SynGCN and SemGCN
model but our preliminary experiments gave suboptimal per-
formance as compared to the sequential model. This can be
attributed to the fact that syntactic information is orders of
magnitude greater than the semantic information available.
Hence, the semantic constraints are not effectively utilized.
We leave the analysis of the joint model as a future work.

SemGCN (Corpus-level)

w
a
te
r

fo
o
d

sn
o
w

aqua

H2O

water

WTarget

ocean

liquid

synonym hyponym

hypernymsynonym synonym

Figure 2: Overview of SemGCN, our proposed Graph
Convolution based framework for incorporating di-
verse semantic information in learned embeddings.
Double-headed edges denote two edges in both direc-
tions. Please refer to Section 6 for more details.

where, wt is the target word and wt1, wt2 . . . wtNt
are its neighbors in the graph. The probability
P (wt|wt1, wt2 . . . wtNt) is calculated using the soft-
max function, defined as

P (wt|wt1, wt2 . . . wtNt) =
exp(vTwtht)∑|V |
i=1 exp(v

T
wiht)

.

Hence, E reduces to

E =

|V |∑
t=1

vTwtht − log |V |∑
i=1

exp(vTwiht)

 , (2)
where, ht is the GCN representation of the target
word wt and vwt is its target embedding.

The second term in Equation 2 is computa-
tionally expensive as the summation needs to be
taken over the entire vocabulary. This can be
overcome using several approximations like noise-
contrastive estimation (Gutmann and Hyvärinen,
2010) and hierarchical softmax (Morin and Ben-
gio, 2005). In our methods, we use negative sam-
pling as used by Mikolov et al. (2013b).

8 Experimental Setup

8.1 Dataset and Training
In our experiments, we use Wikipedia2 corpus for
training the models. After discarding too long and
too short sentences, we get an average sentence
length of nearly 20 words. The corpus consists of

2https://dumps.wikimedia.org/enwiki/20180301/



3313

57 million sentences with 1.1 billion tokens and 1
billion syntactic dependencies.

8.2 Baselines
For evaluating SynGCN (Section 5), we compare
against the following baselines:
• Word2vec is continuous-bag-of-words model

originally proposed by Mikolov et al. (2013b).
• GloVe (Pennington et al., 2014), a log-bilinear

regression model which leverages global co-
occurrence statistics of corpus.

• Deps (Levy and Goldberg, 2014) is a modifica-
tion of skip-gram model which uses dependency
context in place of sequential context.

• EXT (Komninos and Manandhar, 2016) is an
extension of Deps which utilizes second-order
dependency context features.

SemGCN (Section 6) model is evaluated against
the following methods:
• Retro-fit (Faruqui et al., 2014) is a post-

processing procedure which uses similarity con-
straints from semantic knowledge sources.

• Counter-fit (Mrkšić et al., 2016), a method
for injecting both antonym and synonym con-
straints into word embeddings.

• JointReps (Alsuhaibani et al., 2018), a joint
word representation learning method which si-
multaneously utilizes the corpus and KB.

8.3 Evaluation method
To evaluate the effectiveness of our proposed
methods, we compare them against the baselines
on the following intrinsic and extrinsic tasks3:
• Intrinsic Tasks:

Word Similarity is the task of evaluating close-
ness between semantically similar words. Fol-
lowing Komninos and Manandhar (2016); Pen-
nington et al. (2014), we evaluate on Simlex-
999 (Hill et al., 2015), WS353 (Finkelstein
et al., 2001), and RW (Luong et al., 2013)
datasets.
Concept Categorization involves grouping nom-
inal concepts into natural categories. For in-
stance, tiger and elephant should belong to mam-
mal class. In our experiments, we evalute on AP
(Almuhareb, 2006), Battig (Baroni and Lenci,
2010), BLESS (Baroni and Lenci, 2011), ESSLI
(Baroni et al., 2008) datasets.
Word Analogy task is to predict word b2, given
three words a1, a2, and b1, such that the relation
3Details of hyperparameters are in supplementary.

b1 : b2 is same as the relation a1 : a2. We com-
pare methods on MSR (Mikolov et al., 2013c)
and SemEval-2012 (Jurgens et al., 2012).
• Extrinsic Tasks:

Named Entity Recognition (NER) is the task of
locating and classifying entity mentions into
categories like person, organization etc. We
use Lee et al. (2018)’s model on CoNLL-2003
dataset (Tjong Kim Sang and De Meulder,
2003) for evaluation.
Question Answering in Stanford Question An-
swering Dataset (SQuAD) (Rajpurkar et al.,
2016) involves identifying answer to a question
as a segment of text from a given passage. Fol-
lowing Peters et al. (2018), we evaluate using
Clark and Gardner (2018)’s model.
Part-of-speech (POS) tagging aims at associating
with each word, a unique tag describing its syn-
tactic role. For evaluating word embeddings, we
use Lee et al. (2018)’s model on Penn Treebank
POS dataset (Marcus et al., 1994).
Co-reference Resolution (Coref) involves identi-
fying all expressions that refer to the same entity
in the text. To inspect the effect of embeddings,
we use Lee et al. (2018)’s model on CoNLL-
2012 shared task dataset (Pradhan et al., 2012).

9 Results

In this section, we attempt to answer the following
questions.
Q1. Does SynGCN learn better word embeddings

than existing approaches? (Section 9.1)

Q2. Does SemGCN effectively handle diverse
semantic information as compared to other
methods? (Section 9.2)

Q3. How does SemGCN perform compared to
other methods when provided with the same
semantic constraints? (Section 9.3)

Q4. Does dependency context based embedding
encode complementary information com-
pared to ELMo? (Section 9.4)

9.1 SynGCN Evaluation

The evaluation results on intrinsic tasks – word
similarity, concept categorization, and analogy –
are summarized in Table 1. We report Spear-
man correlation for word similarity and analogy
tasks and cluster purity for concept categorization
task. Overall, we find that SynGCN, our proposed
method, outperforms all the existing word embed-



3314

Word Similarity Concept Categorization Word Analogy

Method WS353S WS353R SimLex999 RW AP Battig BLESS ESSLI SemEval2012 MSR

Word2vec 71.4 52.6 38.0 30.0 63.2 43.3 77.8 63.0 18.9 44.0
GloVe 69.2 53.4 36.7 29.6 58.0 41.3 80.0 59.3 18.7 45.8
Deps 65.7 36.2 39.6 33.0 61.8 41.7 65.9 55.6 22.9 40.3
EXT 69.6 44.9 43.2 18.6 52.6 35.0 65.2 66.7 21.8 18.8

SynGCN 73.2 45.7 45.5 33.7 69.3 45.2 85.2 70.4 23.4 52.8

Table 1: SynGCN Intrinsic Evaluation: Performance on word similarity (Spearman correlation), concept cate-
gorization (cluster purity), and word analogy (Spearman correlation). Overall, SynGCN outperforms other existing
approaches in 9 out of 10 settings. Please refer to Section 9.1 for more details.

Method POS SQuAD NER Coref

Word2vec 95.0±0.1 78.5±0.3 89.0±0.2 65.1±0.3
GloVe 94.6±0.1 78.2±0.2 89.1±0.1 64.9±0.2
Deps 95.0±0.1 77.8±0.3 88.6±0.3 64.8±0.1
EXT 94.9±0.2 79.6±0.1 88.0±0.1 64.8±0.1

SynGCN 95.4±0.1 79.6±0.2 89.5±0.1 65.8±0.1

Table 2: SynGCN Extrinsic Evaluation: Comparison
on parts-of-speech tagging (POS), question answering
(SQuAD), named entity recognition (NER), and co-
reference resolution (Coref). SynGCN performs com-
parable or outperforms all existing approaches on all
tasks. Refer Section 9.1 for details.

ding approaches in 9 out of 10 settings. The in-
ferior performance of SynGCN and other depen-
dency context based methods on WS353R dataset
compared to sequential context based methods is
consistent with the observation reported in Levy
and Goldberg (2014); Komninos and Manandhar
(2016). This is because the syntactic context based
embeddings capture functional similarity rather
than topical similarity (as discussed in Section
1). On average, we obtain around 1.5%, 5.7%
and 7.5% absolute increase in performance on
word similarity, concept categorization and anal-
ogy tasks compared to the best performing base-
line. The results demonstrate that the learned em-
beddings from SynGCN more effectively capture
semantic and syntactic properties of words.

We also evaluate the performance of different
word embedding approaches on the downstream
tasks as defined in Section 8.3. The experimen-
tal results are summarized in Table 2. Overall, we
find that SynGCN either outperforms or performs
comparably to other methods on all four tasks.
Compared to the sequential context based meth-
ods, dependency based methods perform superior
at question answering task as they effectively en-
code syntactic information. This is consistent with
the observation of Peters et al. (2018).

Method POS SQuAD NER Coref

X = SynGCN 95.4±0.1 79.6±0.2 89.5±0.1 65.8±0.1
Retro-fit (X,1) 94.8±0.1 79.6±0.1 88.8±0.1 66.0±0.2
Counter-fit (X,2) 94.7±0.1 79.8±0.1 88.3±0.3 65.7±0.3
JointReps (X,4) 95.4±0.1 79.4±0.3 89.1±0.3 65.6±0.1

SemGCN (X,4) 95.5±0.1 80.4±0.1 89.5±0.1 66.1±0.1

Table 3: SemGCN Extrinsic Evaluation: Compari-
son of different methods for incorporating diverse se-
mantic constraints in SynGCN embeddings on all ex-
trinsic tasks. Refer Section 9.3 of paper for details.

9.2 Evaluation with Diverse Semantic
Information

In this section, we compare SemGCN against the
methods listed in Section 8.2 for incorporating di-
verse semantic information in pre-trained embed-
dings. We use hypernym, hyponym, and antonym re-
lations from WordNet, and synonym relations from
PPDB as semantic information. For each method,
we provide the semantic information that it can
utilize, e.g., Retro-fit can only make use of syn-
onym relation4. In our results, M(X, R) denotes the
fine-tuned embeddings obtained using method M
while taking X as initialization embeddings. R de-
notes the types of semantic information used as
defined below.
• R=1: Only synonym information.
• R=2: Synonym and antonym information.
• R=4: Synonym, antonym, hypernym and hy-

ponym information.
For instance, Counter-fit (GloVe, 2) represents
GloVe embeddings fine-tuned by Counter-fit using
synonym and antonym information.

Similar to Section 9.1, the evaluation is per-
formed on the three intrinsic tasks. Due to space
limitations, we report results on one representa-
tive dataset per task. The results are summarized

4Experimental results controlling for semantic informa-
tion are provided in Section 9.3.



3315

Init Embeddings (=X) Word2vec GloVe Deps EXT SynGCN

Datasets WS353 AP MSR WS353 AP MSR WS353 AP MSR WS353 AP MSR WS353 AP MSR

Performance of X 63.0 63.2 44.0 58.0 60.4 45.8 55.6 64.2 40.3 59.3 53.5 18.8 61.7 69.3 52.8

Retro-fit (X,1) 63.4 67.8 46.7 58.5 61.1 47.2 54.8 64.7 41.0 61.6 55.1 40.5 61.2 67.1 51.4
Counter-fit (X,2) 60.3 62.9 31.4 53.7 62.5 29.6 46.9 60.4 33.4 52.0 54.4 35.8 55.2 66.4 31.7
JointReps (X,4) 60.9 61.1 28.5 59.2 55.5 37.6 54.8 58.7 38.0 58.8 54.8 20.6 60.9 68.2 24.9

SemGCN (X,4) 64.8 67.8 36.8 63.3 63.2 44.1 62.3 69.3 41.1 62.9 67.1 52.1 65.3 69.3 54.4

Table 4: SemGCN Intrinsic Evaluation: Evaluation of different methods for incorporating diverse semantic
constraints initialized using various pre-trained embeddings (X). M(X, R) denotes the fine-tuned embeddings using
method M taking X as initialization embeddings. R denotes the type of semantic relations used as defined in
Section 9.2. SemGCN outperforms other methods in 13 our of 15 settings. SemGCN with SynGCN gives the best
performance across all tasks (highlighted using · ). Please refer Section 9.2 for details.

F1 score

X = SynGCN

Retro-fit (X,1)

Counter-fit (X,1)

JointReps (X,1)

SemGCN (X,1)

79.0 79.6 80.2 80.8

Figure 3: Comparison of different methods when pro-
vided with the same semantic information (synonym)
for fine tuning SynGCN embeddings. Results denote
the F1-score on SQuAD dataset. SemGCN gives con-
siderable improvement in performance. Please refer
Section 9.3 for details.

in Table 4. We find that in 13 out of 15 settings,
SemGCN outperforms other methods. Overall, we
observe that SemGCN, when initialized with Syn-
GCN, gives the best performance on all the tasks
(highlighted by · in Table 4).

For comparing performance on the extrinsic
tasks, we first fine-tune SynGCN embeddings us-
ing different methods for incorporating semantic
information. The embeddings obtained by this
process are then evaluated on extrinsic tasks, as in
Section 9.1. The results are shown in Table 3. We
use the same M(X,R) notation to represent meth-
ods as in Section 9.2. We observe that while the
other methods do not always consistently give im-
provement over the baseline SynGCN, SemGCN
is able to improve upon SynGCN in all settings
(better or comparable). Overall, we observe that
SynGCN along with SemGCN is the most suit-
able method for incorporating both syntactic and
semantic information.

Method POS SQuAD NER Coref

ELMo (E) 96.1±0.1 81.8±0.2 90.3±0.3 67.8±0.1
E+SemGCN(SynGCN, 4) 96.2±0.1 82.4±0.1 90.9±0.1 68.3±0.1

Table 5: Comparison of ELMo with SynGCN and
SemGCN embeddings on multiple extrinsic tasks. For
each task, models use a linear combination of the pro-
vided embeddings whose weights are learned. Results
show that our proposed methods encode complemen-
tary information which is not captured by ELMo.

9.3 Evaluation with Same Semantic
Information

In this section, we compare SemGCN against
other baselines when provided with the same se-
mantic information: synonyms from PPDB. Sim-
ilar to Section 9.2, we compare both on intrinsic
and extrinsic tasks with different initializations.
The evaluation results of fine-tuned SynGCN em-
beddings by different methods on SQuAD are
shown in the Figure 3. The remaining results
are included in the supplementary (Table S1 and
S2). We observe that compared to other meth-
ods, SemGCN is most effective at incorporating
semantic constraints across all the initializations
and outperforms others at both intrinsic and ex-
trinsic tasks.

9.4 Comparison with ELMo

Recently, ELMo (Peters et al., 2018) has been pro-
posed which fine-tunes word embedding based on
sentential context. In this section, we evaluate
SynGCN and SemGCN when given along with
pre-trained ELMo embeddings. The results are
reported in Table 5. The results show that de-
pendency context based embeddings encode com-
plementary information which is not captured by
ELMo as it only relies on sequential context.
Hence, our proposed methods serves as an effec-
tive combination with ELMo.



3316

10 Conclusion

In this paper, we have proposed SynGCN, a graph
convolution based approach which utilizes syntac-
tic context for learning word representations. Syn-
GCN overcomes the problem of vocabulary explo-
sion and outperforms state-of-the-art word embed-
ding approaches on several intrinsic and extrinsic
tasks. We also propose SemGCN, a framework
for jointly incorporating diverse semantic infor-
mation in pre-trained word embeddings. The com-
bination of SynGCN and SemGCN gives the best
overall performance. We make the source code of
both models available to encourage reproducible
research.

Acknowledgements

We thank the anonymous reviewers for their con-
structive comments. This work is supported in part
by the Ministry of Human Resource Development
(Government of India) and Google PhD Fellow-
ship.

References
Abdulrahman Almuhareb. 2006. Attributes in lexical

acquisition.

Mohammed Alsuhaibani, Danushka Bollegala,
Takanori Maehara, and Ken-ichi Kawarabayashi.
2018. Jointly learning word embeddings using
a corpus and a knowledge base. PLOS ONE,
13(3):1–26.

Collin F. Baker, Charles J. Fillmore, and John B. Lowe.
1998. The berkeley framenet project. In Proceed-
ings of the 36th Annual Meeting of the Association
for Computational Linguistics, ACL ’98, pages 86–
90.

Marco Baroni, Stefan Evert, and Alessandro Lenci.
2008. Esslli 2008 workshop on distributional lexi-
cal semantics. Association for Logic, Language and
Information.

Marco Baroni and Alessandro Lenci. 2010. Distribu-
tional memory: A general framework for corpus-
based semantics. Comput. Linguist., 36(4):673–721.

Marco Baroni and Alessandro Lenci. 2011. How we
blessed distributional semantic evaluation. In Pro-
ceedings of the GEMS 2011 Workshop on GEometri-
cal Models of Natural Language Semantics, GEMS
’11, pages 1–10, Stroudsburg, PA, USA. Association
for Computational Linguistics.

Joost Bastings, Ivan Titov, Wilker Aziz, Diego
Marcheggiani, and Khalil Simaan. 2017. Graph

convolutional encoders for syntax-aware neural ma-
chine translation. In Proceedings of the 2017 Con-
ference on Empirical Methods in Natural Language
Processing, pages 1957–1967. Association for Com-
putational Linguistics.

Y. Bengio, A. Courville, and P. Vincent. 2013. Repre-
sentation learning: A review and new perspectives.
IEEE Transactions on Pattern Analysis and Machine
Intelligence, 35(8):1798–1828.

Yoshua Bengio, Réjean Ducharme, Pascal Vincent, and
Christian Janvin. 2003. A neural probabilistic lan-
guage model. J. Mach. Learn. Res., 3:1137–1155.

M. M. Bronstein, J. Bruna, Y. LeCun, A. Szlam, and
P. Vandergheynst. 2017. Geometric deep learning:
Going beyond euclidean data. IEEE Signal Process-
ing Magazine, 34(4):18–42.

Christopher Clark and Matt Gardner. 2018. Simple
and effective multi-paragraph reading comprehen-
sion. In Proceedings of the 56th Annual Meeting of
the Association for Computational Linguistics (Vol-
ume 1: Long Papers), pages 845–855. Association
for Computational Linguistics.

Ronan Collobert, Jason Weston, Léon Bottou, Michael
Karlen, Koray Kavukcuoglu, and Pavel Kuksa.
2011. Natural language processing (almost) from
scratch. J. Mach. Learn. Res., 12:2493–2537.

Michaël Defferrard, Xavier Bresson, and Pierre Van-
dergheynst. 2016. Convolutional neural networks on
graphs with fast localized spectral filtering. CoRR,
abs/1606.09375.

Manaal Faruqui, Jesse Dodge, Sujay Kumar Jauhar,
Chris Dyer, Eduard H. Hovy, and Noah A. Smith.
2014. Retrofitting word vectors to semantic lexi-
cons. CoRR, abs/1411.4166.

Lev Finkelstein, Evgeniy Gabrilovich, Yossi Matias,
Ehud Rivlin, Zach Solan, Gadi Wolfman, and Eytan
Ruppin. 2001. Placing search in context: The con-
cept revisited. In Proceedings of the 10th Interna-
tional Conference on World Wide Web, WWW ’01,
pages 406–414, New York, NY, USA. ACM.

Michael Gutmann and Aapo Hyvärinen. 2010. Noise-
contrastive estimation: A new estimation principle
for unnormalized statistical models. In Proceedings
of the Thirteenth International Conference on Arti-
ficial Intelligence and Statistics, volume 9 of Pro-
ceedings of Machine Learning Research, pages 297–
304, Chia Laguna Resort, Sardinia, Italy. PMLR.

Felix Hill, Roi Reichart, and Anna Korhonen. 2015.
Simlex-999: Evaluating semantic models with gen-
uine similarity estimation. Comput. Linguist.,
41(4):665–695.

Shihao Ji, Hyokun Yun, Pinar Yanardag, Shin Mat-
sushima, and S. V. N. Vishwanathan. 2015. Wor-
drank: Learning word embeddings via robust rank-
ing. CoRR, abs/1506.02761.

https://doi.org/10.1371/journal.pone.0193094
https://doi.org/10.1371/journal.pone.0193094
https://doi.org/10.3115/980845.980860
https://doi.org/10.1162/coli_a_00016
https://doi.org/10.1162/coli_a_00016
https://doi.org/10.1162/coli_a_00016
http://dl.acm.org/citation.cfm?id=2140490.2140491
http://dl.acm.org/citation.cfm?id=2140490.2140491
http://aclweb.org/anthology/D17-1209
http://aclweb.org/anthology/D17-1209
http://aclweb.org/anthology/D17-1209
https://doi.org/10.1109/TPAMI.2013.50
https://doi.org/10.1109/TPAMI.2013.50
http://dl.acm.org/citation.cfm?id=944919.944966
http://dl.acm.org/citation.cfm?id=944919.944966
https://doi.org/10.1109/MSP.2017.2693418
https://doi.org/10.1109/MSP.2017.2693418
http://aclweb.org/anthology/P18-1078
http://aclweb.org/anthology/P18-1078
http://aclweb.org/anthology/P18-1078
http://dl.acm.org/citation.cfm?id=1953048.2078186
http://dl.acm.org/citation.cfm?id=1953048.2078186
http://arxiv.org/abs/1606.09375
http://arxiv.org/abs/1606.09375
http://arxiv.org/abs/1411.4166
http://arxiv.org/abs/1411.4166
https://doi.org/10.1145/371920.372094
https://doi.org/10.1145/371920.372094
http://proceedings.mlr.press/v9/gutmann10a.html
http://proceedings.mlr.press/v9/gutmann10a.html
http://proceedings.mlr.press/v9/gutmann10a.html
https://doi.org/10.1162/COLI_a_00237
https://doi.org/10.1162/COLI_a_00237
http://arxiv.org/abs/1506.02761
http://arxiv.org/abs/1506.02761
http://arxiv.org/abs/1506.02761


3317

Melvin Johnson, Mike Schuster, Quoc V. Le, Maxim
Krikun, Yonghui Wu, Zhifeng Chen, Nikhil Thorat,
Fernanda Viégas, Martin Wattenberg, Greg Corrado,
Macduff Hughes, and Jeffrey Dean. 2017. Google’s
multilingual neural machine translation system: En-
abling zero-shot translation. Transactions of the As-
sociation for Computational Linguistics, 5:339–351.

David A. Jurgens, Peter D. Turney, Saif M. Moham-
mad, and Keith J. Holyoak. 2012. Semeval-2012
task 2: Measuring degrees of relational similarity.
In Proceedings of the First Joint Conference on Lex-
ical and Computational Semantics - Volume 1: Pro-
ceedings of the Main Conference and the Shared
Task, and Volume 2: Proceedings of the Sixth In-
ternational Workshop on Semantic Evaluation, Se-
mEval ’12, pages 356–364, Stroudsburg, PA, USA.
Association for Computational Linguistics.

Douwe Kiela, Felix Hill, and Stephen Clark. 2015.
Specializing word embeddings for similarity or re-
latedness. In Proceedings of the 2015 Conference
on Empirical Methods in Natural Language Pro-
cessing, pages 2044–2048. Association for Compu-
tational Linguistics.

Thomas N. Kipf and Max Welling. 2016. Semi-
supervised classification with graph convolutional
networks. CoRR, abs/1609.02907.

Alexandros Komninos and Suresh Manandhar. 2016.
Dependency based embeddings for sentence classi-
fication tasks.

Kenton Lee, Luheng He, and Luke Zettlemoyer. 2018.
Higher-order coreference resolution with coarse-to-
fine inference. In Proceedings of the 2018 Confer-
ence of the North American Chapter of the Associ-
ation for Computational Linguistics: Human Lan-
guage Technologies, Volume 2 (Short Papers), pages
687–692. Association for Computational Linguis-
tics.

Omer Levy and Yoav Goldberg. 2014. Dependency-
based word embeddings. In Proceedings of the 52nd
Annual Meeting of the Association for Computa-
tional Linguistics (Volume 2: Short Papers), pages
302–308. Association for Computational Linguis-
tics.

Chen Li, Jianxin Li, Yangqiu Song, and Ziwei
Lin. 2018. Training and evaluating improved
dependency-based word embeddings. In AAAI.

Minh-Thang Luong, Richard Socher, and Christo-
pher D. Manning. 2013. Better word representations
with recursive neural networks for morphology. In
CoNLL, Sofia, Bulgaria.

Xuezhe Ma and Eduard H. Hovy. 2016. End-to-end
sequence labeling via bi-directional lstm-cnns-crf.
CoRR, abs/1603.01354.

Christopher D. Manning, Mihai Surdeanu, John Bauer,
Jenny Finkel, Steven J. Bethard, and David Mc-
Closky. 2014. The Stanford CoreNLP natural lan-
guage processing toolkit. In Association for Compu-
tational Linguistics (ACL) System Demonstrations,
pages 55–60.

Diego Marcheggiani and Ivan Titov. 2017. Encoding
sentences with graph convolutional networks for se-
mantic role labeling. In Proceedings of the 2017
Conference on Empirical Methods in Natural Lan-
guage Processing, pages 1506–1515. Association
for Computational Linguistics.

Mitchell Marcus, Grace Kim, Mary Ann
Marcinkiewicz, Robert MacIntyre, Ann Bies,
Mark Ferguson, Karen Katz, and Britta Schas-
berger. 1994. The penn treebank: Annotating
predicate argument structure. In Proceedings of
the Workshop on Human Language Technology,
HLT ’94, pages 114–119, Stroudsburg, PA, USA.
Association for Computational Linguistics.

Tomas Mikolov, Ilya Sutskever, Kai Chen, Greg Cor-
rado, and Jeffrey Dean. 2013a. Distributed repre-
sentations of words and phrases and their composi-
tionality. In Proceedings of the 26th International
Conference on Neural Information Processing Sys-
tems - Volume 2, NIPS’13, pages 3111–3119, USA.
Curran Associates Inc.

Tomas Mikolov, Scott Wen-tau Yih, and Geoffrey
Zweig. 2013b. Linguistic regularities in continu-
ous space word representations. In Proceedings of
the 2013 Conference of the North American Chap-
ter of the Association for Computational Linguis-
tics: Human Language Technologies (NAACL-HLT-
2013). Association for Computational Linguistics.

Tomas Mikolov, Wen-tau Yih, and Geoffrey Zweig.
2013c. Linguistic regularities in continuous space
word representations. In Proceedings of the 2013
Conference of the North American Chapter of the
Association for Computational Linguistics: Human
Language Technologies, pages 746–751. Associa-
tion for Computational Linguistics.

George A. Miller. 1995. Wordnet: A lexical database
for english. Commun. ACM, 38(11):39–41.

Frederic Morin and Yoshua Bengio. 2005. Hierarchi-
cal probabilistic neural network language model. In
Proceedings of the Tenth International Workshop on
Artificial Intelligence and Statistics, AISTATS 2005,
Bridgetown, Barbados, January 6-8, 2005.

Nikola Mrkšić, Diarmuid Ó Séaghdha, Blaise Thom-
son, Milica Gašić, Lina M. Rojas-Barahona, Pei-
Hao Su, David Vandyke, Tsung-Hsien Wen, and
Steve Young. 2016. Counter-fitting word vectors to
linguistic constraints. In Proceedings of the 2016
Conference of the North American Chapter of the
Association for Computational Linguistics: Human
Language Technologies, pages 142–148. Associa-
tion for Computational Linguistics.

http://aclweb.org/anthology/Q17-1024
http://aclweb.org/anthology/Q17-1024
http://aclweb.org/anthology/Q17-1024
http://dl.acm.org/citation.cfm?id=2387636.2387693
http://dl.acm.org/citation.cfm?id=2387636.2387693
https://doi.org/10.18653/v1/D15-1242
https://doi.org/10.18653/v1/D15-1242
http://arxiv.org/abs/1609.02907
http://arxiv.org/abs/1609.02907
http://arxiv.org/abs/1609.02907
http://aclweb.org/anthology/N18-2108
http://aclweb.org/anthology/N18-2108
https://doi.org/10.3115/v1/P14-2050
https://doi.org/10.3115/v1/P14-2050
http://www.aclweb.org/anthology/P/P14/P14-5010
http://www.aclweb.org/anthology/P/P14/P14-5010
http://aclweb.org/anthology/D17-1159
http://aclweb.org/anthology/D17-1159
http://aclweb.org/anthology/D17-1159
https://doi.org/10.3115/1075812.1075835
https://doi.org/10.3115/1075812.1075835
http://dl.acm.org/citation.cfm?id=2999792.2999959
http://dl.acm.org/citation.cfm?id=2999792.2999959
http://dl.acm.org/citation.cfm?id=2999792.2999959
https://www.microsoft.com/en-us/research/publication/linguistic-regularities-in-continuous-space-word-representations/
https://www.microsoft.com/en-us/research/publication/linguistic-regularities-in-continuous-space-word-representations/
http://aclweb.org/anthology/N13-1090
http://aclweb.org/anthology/N13-1090
https://doi.org/10.1145/219717.219748
https://doi.org/10.1145/219717.219748
http://www.gatsby.ucl.ac.uk/aistats/fullpapers/208.pdf
http://www.gatsby.ucl.ac.uk/aistats/fullpapers/208.pdf
https://doi.org/10.18653/v1/N16-1018
https://doi.org/10.18653/v1/N16-1018


3318

Ellie Pavlick, Pushpendre Rastogi, Juri Ganitkevitch,
Benjamin Van Durme, and Chris Callison-Burch.
2015. Ppdb 2.0: Better paraphrase ranking, fine-
grained entailment relations, word embeddings, and
style classification. In In Proceedings of the Asso-
ciation for Computational Linguistics (ACL-2015),
pages 425–430. Association for Computational Lin-
guistics.

Jeffrey Pennington, Richard Socher, and Christo-
pher D. Manning. 2014. Glove: Global vectors for
word representation. In Empirical Methods in Nat-
ural Language Processing (EMNLP), pages 1532–
1543.

Matthew E. Peters, Mark Neumann, Mohit Iyyer, Matt
Gardner, Christopher Clark, Kenton Lee, and Luke
Zettlemoyer. 2018. Deep contextualized word rep-
resentations. In Proc. of NAACL.

Sameer Pradhan, Alessandro Moschitti, Nianwen Xue,
Olga Uryupina, and Yuchen Zhang. 2012. Conll-
2012 shared task: Modeling multilingual unre-
stricted coreference in ontonotes. In Joint Confer-
ence on EMNLP and CoNLL - Shared Task, CoNLL
’12, pages 1–40, Stroudsburg, PA, USA. Association
for Computational Linguistics.

Pranav Rajpurkar, Jian Zhang, Konstantin Lopyrev, and
Percy Liang. 2016. Squad: 100,000+ questions for
machine comprehension of text. In Proceedings of
the 2016 Conference on Empirical Methods in Nat-
ural Language Processing, pages 2383–2392. Asso-
ciation for Computational Linguistics.

Richard Socher, John Bauer, Christopher D. Manning,
and Andrew Y. Ng. 2013. Parsing With Composi-
tional Vector Grammars. In ACL.

Emma Strubell, Patrick Verga, Daniel Andor,
David Weiss, and Andrew McCallum. 2018.
Linguistically-informed self-attention for semantic
role labeling. In Proceedings of the 2018 Confer-
ence on Empirical Methods in Natural Language
Processing, pages 5027–5038. Association for
Computational Linguistics.

Kai Sheng Tai, Richard Socher, and Christopher D.
Manning. 2015. Improved semantic representations
from tree-structured long short-term memory net-
works. In Proceedings of the 53rd Annual Meet-
ing of the Association for Computational Linguis-
tics and the 7th International Joint Conference on
Natural Language Processing (Volume 1: Long Pa-
pers), pages 1556–1566. Association for Computa-
tional Linguistics.

Erik F. Tjong Kim Sang and Fien De Meulder.
2003. Introduction to the conll-2003 shared task:
Language-independent named entity recognition. In
Proceedings of the Seventh Conference on Natural
Language Learning at HLT-NAACL 2003 - Volume
4, CONLL ’03, pages 142–147, Stroudsburg, PA,
USA. Association for Computational Linguistics.

Shikhar Vashishth, Shib Sankar Dasgupta,
Swayambhu Nath Ray, and Partha Talukdar.
2018a. Dating documents using graph convolution
networks. In Proceedings of the 56th Annual
Meeting of the Association for Computational
Linguistics (Volume 1: Long Papers), pages 1605–
1615. Association for Computational Linguistics.

Shikhar Vashishth, Rishabh Joshi, Sai Suman Prayaga,
Chiranjib Bhattacharyya, and Partha Talukdar.
2018b. Reside: Improving distantly-supervised
neural relation extraction using side information.
In Proceedings of the 2018 Conference on Empiri-
cal Methods in Natural Language Processing, pages
1257–1266. Association for Computational Linguis-
tics.

Shikhar Vashishth, Prateek Yadav, Manik Bhandari,
and Partha Talukdar. 2019. Confidence-based graph
convolutional networks for semi-supervised learn-
ing. In Proceedings of Machine Learning Research,
volume 89 of Proceedings of Machine Learning Re-
search, pages 1792–1801. PMLR.

Chang Xu, Yalong Bai, Jiang Bian, Bin Gao, Gang
Wang, Xiaoguang Liu, and Tie-Yan Liu. 2014. Rc-
net: A general framework for incorporating knowl-
edge into word representations.

Prateek Yadav, Madhav Nimishakavi, Naganand Ya-
dati, Shikhar Vashishth, Arun Rajkumar, and Partha
Talukdar. 2019. Lovasz convolutional networks. In
Proceedings of Machine Learning Research, vol-
ume 89 of Proceedings of Machine Learning Re-
search, pages 1978–1987. PMLR.

Liang Yao, Chengsheng Mao, and Yuan Luo. 2018.
Graph Convolutional Networks for Text Classifica-
tion. ArXiv e-prints, page arXiv:1809.05679.

Mo Yu and Mark Dredze. 2014. Improving lexical
embeddings with semantic knowledge. In Proceed-
ings of the 52nd Annual Meeting of the Associa-
tion for Computational Linguistics (Volume 2: Short
Papers), pages 545–550. Association for Computa-
tional Linguistics.

Yuhao Zhang, Peng Qi, and Christopher D. Manning.
2018. Graph convolution over pruned dependency
trees improves relation extraction. In Proceedings of
the 2018 Conference on Empirical Methods in Nat-
ural Language Processing, pages 2205–2215. Asso-
ciation for Computational Linguistics.

https://doi.org/10.3115/v1/P15-2070
https://doi.org/10.3115/v1/P15-2070
https://doi.org/10.3115/v1/P15-2070
http://www.aclweb.org/anthology/D14-1162
http://www.aclweb.org/anthology/D14-1162
http://dl.acm.org/citation.cfm?id=2391181.2391183
http://dl.acm.org/citation.cfm?id=2391181.2391183
http://dl.acm.org/citation.cfm?id=2391181.2391183
https://doi.org/10.18653/v1/D16-1264
https://doi.org/10.18653/v1/D16-1264
http://aclweb.org/anthology/D18-1548
http://aclweb.org/anthology/D18-1548
https://doi.org/10.3115/v1/P15-1150
https://doi.org/10.3115/v1/P15-1150
https://doi.org/10.3115/v1/P15-1150
https://doi.org/10.3115/1119176.1119195
https://doi.org/10.3115/1119176.1119195
http://aclweb.org/anthology/P18-1149
http://aclweb.org/anthology/P18-1149
http://aclweb.org/anthology/D18-1157
http://aclweb.org/anthology/D18-1157
http://proceedings.mlr.press/v89/vashishth19a.html
http://proceedings.mlr.press/v89/vashishth19a.html
http://proceedings.mlr.press/v89/vashishth19a.html
https://www.microsoft.com/en-us/research/publication/rc-net-a-general-framework-for-incorporating-knowledge-into-word-representations/
https://www.microsoft.com/en-us/research/publication/rc-net-a-general-framework-for-incorporating-knowledge-into-word-representations/
https://www.microsoft.com/en-us/research/publication/rc-net-a-general-framework-for-incorporating-knowledge-into-word-representations/
http://proceedings.mlr.press/v89/yadav19a.html
http://arxiv.org/abs/1809.05679
http://arxiv.org/abs/1809.05679
https://doi.org/10.3115/v1/P14-2089
https://doi.org/10.3115/v1/P14-2089
http://aclweb.org/anthology/D18-1244
http://aclweb.org/anthology/D18-1244

