



















































Cost-sensitive Regularization for Label Confusion-aware Event Detection


Proceedings of the 57th Annual Meeting of the Association for Computational Linguistics, pages 5278–5283
Florence, Italy, July 28 - August 2, 2019. c©2019 Association for Computational Linguistics

5278

Cost-sensitive Regularization for Label Confusion-aware Event Detection

Hongyu Lin1,3, Yaojie Lu1,3, Xianpei Han1,2,∗, Le Sun1,2
1Chinese Information Processing Laboratory 2State Key Laboratory of Computer Science

Institute of Software, Chinese Academy of Sciences, Beijing, China
3University of Chinese Academy of Sciences, Beijing, China

{hongyu2016,yaojie2017,xianpei,sunle}@iscas.ac.cn

Abstract

In supervised event detection, most of the mis-
labeling occurs between a small number of
confusing type pairs, including trigger-NIL
pairs and sibling sub-types of the same coarse
type. To address this label confusion problem,
this paper proposes cost-sensitive regulariza-
tion, which can force the training procedure
to concentrate more on optimizing confusing
type pairs. Specifically, we introduce a cost-
weighted term into the training loss, which pe-
nalizes more on mislabeling between confus-
ing label pairs. Furthermore, we also propose
two estimators which can effectively measure
such label confusion based on instance-level
or population-level statistics. Experiments on
TAC-KBP 2017 datasets demonstrate that the
proposed method can significantly improve the
performances of different models in both En-
glish and Chinese event detection.

1 Introduction

Automatic event extraction is a fundamental task
in information extraction. Event detection, aim-
ing to identify trigger words of specific types of
events, is a vital step of event extraction. For ex-
ample, from sentence “Mary was injured, and then
she died”, an event detection system is required
to detect a Life:Injure event triggered by “injured”
and a Life:Die event triggered by “died”.

Recently, neural network-based supervised
models have achieved promising progress in even-
t detection (Nguyen and Grishman, 2015; Chen
et al., 2015; Ghaeini et al., 2016). Commonly,
these methods regard event detection as a word-
wise classification task with one NIL class for to-
kens do not trigger any event. Specifically, a neu-
ral network automatically extracts high-level fea-
tures and then feed them into a classifier to cate-
gorize words into their corresponding event sub-
∗Corresponding author.

BC CT CR MT NIL CC
BC 41.3 14.4 2.1 1.6 39.0 1.7
CT 8.5 42.7 4.7 2.6 40.6 0.9
CR 5.7 7.3 50.0 1.1 32.3 2.9
MT 3.0 7.7 6.1 28.7 51.3 3.2

Table 1: Prediction percentage heatmap of triggers with
Contact coarse type. Row labels are the golden la-
bel and the column labels indicate the prediction. BC:
Broadcast; CT: Conctact(sub-type); CR: Correspon-
dence; MT: Meet; CC: Other cross coarse-type errors.

types (or NIL). Optimization criteria of such mod-
els often involves in minimizing cross-entropy
loss, which equals to maximize the likelihood of
making correct predictions on the training data.

However, we find that in supervised even-
t detection, most of the mislabeling occurs be-
tween a small number of confusing type pairs.
We refer to this phenomenon as label confusion.
Specifically, there are mainly two types of la-
bel confusion in event detection: 1) trigger/NIL
confusion; 2) sibling sub-types confusion. For
example, both Transaction:Transfer-money and
Transaction:Transfer-ownership events are fre-
quently triggered by word “give”. Besides, in
many cases “give” does not serve as a trigger
word. Table 1 shows the classification results of a
state-of-the-art event detection model (Chen et al.,
2015) on all event triggers with coarse type of
Contact on TAC-KBP 2017 English Event Detec-
tion dataset. We can see that the model severe-
ly suffers from two types of label confusion men-
tioned above: more than 50% mislabeling happens
between trigger/NIL decision due to the ambigui-
ty of natural language. Furthermore, the majority
of remaining errors are between sibling sub-types
of the same coarse type because of their seman-
tic relatedness (Liu et al., 2017b). Similar results
are also observed in other event detection datasets
such as ACE2005 (Liu et al., 2018a). Therefore,



5279

it is critical to enhance the supervised event detec-
tion models by taking such label confusion prob-
lem into consideration.

In this paper, inspired by cost-sensitive learn-
ing (Ling and Sheng, 2011), we introduce cost-
sensitive regularization to model and exploit the
label confusion during model optimization, which
can make the training procedure more sensitive to
confusing type pairs. Specifically, the proposed
regularizer reshapes the loss function of model
training by penalizing the likelihood of making
wrong predictions with a cost-weighted term. If
instances of class i are more frequently misclas-
sified into class j, we assign a higher cost to
this type pair to make the model intensively learn
to distinguish between them. Consequently, the
training procedure of models not only considers
the probability of making correct prediction, but
also tries to separate confusing type pairs with a
larger margin. Furthermore, in order to estimate
such cost automatically, this paper proposes two
estimators based on population-level or instance-
level statistics.

We conducted experiments on TAC-KBP 2017
Event Nugget Detection datasets. Experiments
show that our method can significantly reduce the
errors between confusing type pairs, and therefore
leads to better performance of different models in
both English and Chinese event detection. To the
best of our knowledge, this is the first work which
tackles with the label confusion problem of event
detection and tries to address it in a cost-sensitive
regularization paradigm.

2 Cost-sensitive Regularization for
Neural Event Detection

2.1 Neural Network Based Event Detection
The state-of-the-art neural network models com-
monly transform event detection into a word-
wise classification task. Formally, let D =
{(xi, yi)|i = 1, 2, ..., n} denote n training in-
stances, P (y|x; θ) is the neural network model pa-
rameterized by θ, which takes representation (fea-
ture) x as input and outputs the probability that x
is a trigger of event sub-type y (or NIL). Training
procedure of such models commonly involves in
minimizing following cross-entropy loss:

LCE(θ) = −
∑

(xi,yi)∈D

logP (yi|xi; θ) (1)

which corresponds to maximize the log-likelihood
of the model making the correct prediction on all

training instances and does not take the confusion
between different type pairs into consideration.

2.2 Cost-sensitive Regularization

As discussed above, the key to improve event de-
tection performance is to solve the label confusion
problem, i.e., to guide the training procedure to
concentrate on distinguishing between more con-
fusing type pairs such as trigger/NIL pairs and
sibling sub-event pairs. To this end, we propose
cost-sensitive regularization, which reshapes the
training loss with a cost-weighted term of the log-
likelihood of making wrong prediction. Formally,
the proposed regularizer is defined as:

LCS(θ) =
∑

(xi,yi)∈D

∑
yj 6=yi

C(yi, yj ;xi) logP (yj |xi; θ)

(2)

where C(yi, yj ;x) is a positive cost of mislabel-
ing an instance x with golden label yi into label
yj . A higher C(yi, yj ;x) is assigned if yi and yj is
a more confusing type pair (i.e., more easily mis-
labeled by the current model). Therefore, the cost-
sensitive regularizer will make the training pro-
cedure pay more attention to distinguish between
confusing type pairs because they have larger im-
pact on the training loss. Finally, the entire opti-
mization objective can be written as:

L(θ) = LCE(θ) + λLCS(θ) (3)

where λ is a hyper-parameter that controls the rel-
ative impact of our cost-sensitive regularizer.

3 Cost Estimation

Obviously it is critical for the proposed cost-
sensitive regularization to have an accurate esti-
mation of the cost C(yi, yj ;x). In this section,
we propose two approaches for this issue based on
population-level or instance-level statistics.

3.1 Population-level Estimator

A straightforward approach for measuring such
costs is to use the relative mislabeling risk on the
dataset. Therefore our population-level cost esti-
mator is defined as:

CPOP (yi, yj ;xi) =
#(yi, yj)∑
j #(yi, yj)

(4)

where #(yi, yj) is the number of instances with
golden label yi but being classified into class yj
in the corpus. These statistics can be computed
either on the training set or on the development set.
This paper uses statistics on development set due



5280

to its compact size. And the estimators are updated
every epoch during the training procedure.

3.2 Instance-level Estimator
The population-level estimators requires large
computation cost to predict on the entire dataset
when updating the estimators. To handle this is-
sue, we propose another estimation method based
directly on instance-level statistics. Inspire by Lin
et al. (2017), the probability P (yj |xi; θ) of clas-
sifying instance xi into the wrong class yj can be
directly regarded as the mislabeling risk of that in-
stance. Therefore our instance-level estimator is:

CINS(yi, yj ;xi) = P (yj |xi; θ) (5)

Then cost-sensitive regularizer for each training
instance can be written as:

LINS(xi; θ) =
∑

yj 6=yi

P (yj |xi; θ) logP (yj |xi; θ) (6)

Note that if the probability of making correc-
t prediction (i.e., P (yi|xi; θ)) is fixed, LINS(xi; θ)
achieves its minimum when the probabilities of
mislabeling xi into all incorrect classes are equal.
This is equivalent to maximize the margin between
the probability of golden label and that of any oth-
er class. In this circumstance, the loss L(θ) can
be regarded as a combination of maximizing both
the likelihood of correct prediction and the margin
between correct and incorrect classes.

4 Experiments

4.1 Experimental Settings
We conducted experiments on both English
and Chinese on TAC-KBP 2017 Event Nugget
Detection Evaluation datasets (LDC2017E55).
For English, previously released RichERE cor-
pus, including LDC2015E29, LDC2015E68, LD-
C2016E31 and the English part of LDC2017E02,
were used for training. For Chinese, LD-
C2015E105, LDC2015E112, LDC2015E78 and
the Chinese part of LDC2017E02 were used. For
both English and Chinese, we sampled 20 doc-
uments from LDC2017E02 as the developmen-
t set. Finally, there were 866/20/167 documents
and 506/20/167 documents in English and Chinese
train/development/test set respectively.

We conducted experiments on two state-of-the-
art neural network event detection models to verify
the portability of our method. One is DMCNN
model proposed by Chen et al. (2015). Another is

Model English Chinese
P R F1 P R F1

LSTM
CE 73.46 34.23 46.70 70.35 35.43 47.13
Focal 69.20 38.71 49.64 68.10 35.76 46.90
Hinge 62.51 44.36 51.89 58.34 43.40 49.77
Sampling 58.57 48.26 52.92 57.61 44.54 50.24
CR-POP 62.35 46.98 53.58 53.18 49.55 51.30
CR-INS 58.64 49.55 53.71 49.19 55.83 52.30

DMCNN
CE 75.15 34.16 47.00 73.50 35.81 48.16
Focal 70.68 37.63 49.11 69.04 38.87 49.74
Hinge 67.49 42.67 52.28 60.27 45.50 51.85
Sampling 64.05 45.08 52.91 54.85 50.35 52.50
CR-POP 64.82 45.73 53.63 55.89 50.81 53.23
CR-INS 64.74 46.14 53.88 54.91 51.93 53.38

Table 2: Overall results. CR-POP and CR-INS are our
method with population-level and instance-level esti-
mators. All F1 improvements made by CR-POP and
CR-INS are statistically significant with p < 0.05.

a LSTM model by Yang and Mitchell (2017). Due
to page limitation, please refer to original papers
for details.

4.2 Baselines1

Following baselines were compared:
1) Cross-entropy Loss (CE), the vanilla loss.
2) Focal Loss (Focal) (Lin et al., 2017), which

is an instance-level method that rescales the loss
with a factor proportional to the mislabeling prob-
ability to enhance the learning on hard instances.

3) Hinge Loss (Hinge), which tries to separate
the correct and incorrect predictions with a margin
larger than a constant and is widely used in many
machine learning tasks.

4) Under-sampling (Sampling), a representa-
tive cost-sensitive learning approaches which sam-
ples instances balance the model learning and is
widely used in event detection to deal with imbal-
ance (Chen et al., 2015).

We also compared our methods with the top sys-
tems in TAC-KBP 2017 Evaluation. We evaluated
all systems with micro-averaged Precision(P), Re-
call(R) and F1 using the official toolkit2.

4.3 Overall Results
Table 2 shows the overall performance on TAC-
KBP 2017 datasets. We can see that:

1) Cost-sensitive regularization can signif-
icantly improve the event detection perfor-
mance by taking mislabeling costs into consid-
eration. The proposed CR-INS and the CR-POP

1Our source code and hyper-parameter configures are
openly available at github.com/sanmusunrise/CSR.

2github.com/hunterhector/EvmEval

github.com/sanmusunrise/CSR
github.com/hunterhector/EvmEval


5281

56.19 

50.37 50.14 

56.40 55.90 

0.64 
0.67

49

51

53

55

57

TAC-KBP 2017 English

CR_INS

Baseline

KBP2017

50.64 

46.76 

42.14 

52.50 
50.24 

0.88

2.06

40

43

46

49

52

TAC-KBP 2017 Chinese

CR_INS

Baseline

KBP2017

Figure 1: Comparison with the top systems in TAC-
KBP 2017. CR is our CR-INS method. The srcb sys-
tem in English used additional CRF based models to
deal with multi-word triggers in English, which is not
considered in our model and leads to a significant high-
er recall than other competitors.

steadily outperform corresponding baselines. Be-
sides, compared with population-level estimators,
instance-level cost estimators are more effective.
This may because instance-level estimators can be
updated every batch while population-level esti-
mators are updated every epoch, which leads to
a more accurate estimation.

2) Cost-sensitive regularization is robust to
different languages and models. We can see
that cost-sensitive regularization achieves signifi-
cant improvements on both English and Chinese
datasets with both CNN and RNN models. This
indicates that our method is robust and can be ap-
plied to different models and datasets.

3) Data imbalance is not the only reason be-
hind label confusion. Even Focal and Sampling
baselines deals with the data imbalance problem,
they still cannot achieve comparable performance
with CR-POP and CR-INS. This means that there
are still other reasons which are not fully resolved
by conventional methods for data imbalance.

4.4 Comparing with State-of-the-art Systems

Figure 1 compares our models with the top sys-
tems in TAC-KBP 2017 Evaluation. To achieve a
strong baseline3, we also incorporate ELMOs (Pe-
ters et al., 2018) to English system for better rep-
resentations. We can see that CR-INS can fur-
ther gain significant improvements over all strong
baselines which have already achieved compara-
ble performance with top systems. In both English
and Chinese, CR-INS achieves the new SOTA per-
formance, which demonstrates its effectiveness.

3Top systems in the evaluation are commonly ensembling
models with additional resources, while reported in-house re-
sults are of single model.

Error Rate (%) SP CR ∆
Total Error 42.97 38.84 -9.6%
- Trigger/NIL 33.39 31.15 -6.7%
- Sibling Sub-types 8.15 6.25 -23.3%
- Other 1.43 1.44 +0.6%

Table 3: Error rates (CNN) on trigger words on the Chi-
nese test set with Sampling(SP) and CR-INS(CR).

4.5 Error Analysis

To clearly show where the improvement of our
method comes from, we compared the mislabel-
ing made by Sampling and our CR-INS method.
Table 3 shows the results. We can first see that
trigger/NIL mislabeling and sibling sub-types mis-
labeling make up most of errors of CE baseline.
This further verifies our motivation. Besides, cost-
sensitive regularization significantly reduces these
two kinds of errors without introducing more other
types of mislabeling, which clearly demonstrates
the effectiveness of our method.

5 Related Work

Neural Network based Event Detection. Re-
cently, neural network based methods have
achieved promising progress in event detection, e-
specially with CNNs (Chen et al., 2015; Nguyen
and Grishman, 2015) and Bi-LSTMs (Zeng et al.,
2016; Yang and Mitchell, 2017) based models as
automatic feature extractors. Improvements have
been made by incorporating arguments knowl-
edge (Nguyen et al., 2016; Liu et al., 2017a; N-
guyen and Grishman, 2018; Hong et al., 2018) or
capturing larger scale of contexts with more com-
plicated architectures (Feng et al., 2016; Nguyen
and Grishman, 2016; Ghaeini et al., 2016; Lin
et al., 2018a,b; Liu et al., 2018a,b; Sha et al., 2018;
Chen et al., 2018).
Cost-sensitive Learning. Cost-sensitive learning
has long been studied in machine learning (Elka-
n, 2001; Zhou, 2011; Ling and Sheng, 2011). It
can be applied both at algorithm-level (Anand
et al., 1993; Domingos, 1999; Sun et al., 2007;
Krawczyk et al., 2014; Kusner et al., 2014) or data-
level (Ting, 2002; Zadrozny et al., 2003; Mirza
et al., 2013), which has achieved great success es-
pecially in learning with imbalanced data.

6 Conclusions

In this paper, we propose cost-sensitive regulariza-
tion for neural event detection, which introduces
a cost-weighted term of mislabeling likelihood



5282

to enhance the training procedure to concentrate
more on confusing type pairs. Experiments show
that our methods significantly improve the perfor-
mance of neural network event detection models.

Acknowledgments

We sincerely thank the reviewers for their insight-
ful comments and valuable suggestions. More-
over, this work is supported by the National Natu-
ral Science Foundation of China under Grants no.
61433015, 61572477 and 61772505; the Projects
of the Chinese Language Committee under Grants
no. WT135-24; and the Young Elite Scientists
Sponsorship Program no. YESS20160177.

References
Rangachari Anand, Kishan G Mehrotra, Chilukuri K

Mohan, and Sanjay Ranka. 1993. An improved al-
gorithm for neural network classification of imbal-
anced training sets. IEEE Transactions on Neural
Networks, 4(6):962–969.

Yubo Chen, Liheng Xu, Kang Liu, Daojian Zeng,
and Jun Zhao. 2015. Event extraction via dynam-
ic multi-pooling convolutional neural networks. In
Proceedings of ACL 2015.

Yubo Chen, Hang Yang, Kang Liu, Jun Zhao, and Yan-
tao Jia. 2018. Collective event detection via a hier-
archical and bias tagging networks with gated multi-
level attention mechanisms. In Proceedings of the
2018 Conference on Empirical Methods in Natural
Language Processing, pages 1267–1276. Associa-
tion for Computational Linguistics.

Pedro M. Domingos. 1999. Metacost: A general
method for making classifiers cost-sensitive. In KD-
D.

Charles Elkan. 2001. The foundations of cost-sensitive
learning. In IJCAI 2001, volume 17, pages 973–978.
Lawrence Erlbaum Associates Ltd.

Xiaocheng Feng, Lifu Huang, Duyu Tang, Bing
Qin, Heng Ji, and Ting Liu. 2016. A language-
independent neural network for event detection. In
Proceedings of ACL 2016.

Reza Ghaeini, Xiaoli Z Fern, Liang Huang, and
Prasad Tadepalli. 2016. Event nugget detection with
forward-backward recurrent neural networks. In
Proceedings of ACL 2016.

Yu Hong, Wenxuan Zhou, Jingli Zhang, Qiaoming
Zhu, and Guodong Zhou. 2018. Self-regulation:
Employing a generative adversarial network to im-
prove event detection. In Proceedings of the 56th
Annual Meeting of the Association for Computation-
al Linguistics, pages 515–526. Association for Com-
putational Linguistics.

Bartosz Krawczyk, Michał Woźniak, and Gerald
Schaefer. 2014. Cost-sensitive decision tree ensem-
bles for effective imbalanced classification. Applied
Soft Computing, 14:554–562.

Matt J Kusner, Wenlin Chen, Quan Zhou, Zhixiang Ed-
die Xu, Kilian Q Weinberger, and Yixin Chen.
2014. Feature-cost sensitive learning with submod-
ular trees of classifiers. In AAAI 2014.

Hongyu Lin, Yaojie Lu, Xianpei Han, and Le Sun.
2018a. Adaptive scaling for sparse detection
in information extraction. arXiv preprint arX-
iv:1805.00250.

Hongyu Lin, Yaojie Lu, Xianpei Han, and Le Sun.
2018b. Nugget proposal networks for chinese event
detection. arXiv preprint arXiv:1805.00249.

Tsung-Yi Lin, Priya Goyal, Ross Girshick, Kaiming
He, and Piotr Dollár. 2017. Focal loss for dense ob-
ject detection. arXiv preprint arXiv:1708.02002.

Charles X Ling and Victor S Sheng. 2011. Cost-
sensitive learning. In Encyclopedia of machine
learning, pages 231–235. Springer.

Jian Liu, Yubo Chen, Kang Liu, and Jun Zhao. 2018a.
Event detection via gated multilingual attention
mechanism. In Proceedings of AAAI2018.

Shulin Liu, Yubo Chen, Kang Liu, and Jun Zhao.
2017a. Exploiting argument information to improve
event detection via supervised attention mechanism-
s. In Proceedings of ACL2017.

Shulin Liu, Yubo Chen, Kang Liu, Jun Zhao, Zhunchen
Luo, and Wei Luo. 2017b. Improving event de-
tection via information sharing among related event
types. In CCL 2017, pages 122–134.

Xiao Liu, Zhunchen Luo, and Heyan Huang. 2018b.
Jointly multiple events extraction via attention-
based graph information aggregation. In Proceed-
ings of the 2018 Conference on Empirical Methods
in Natural Language Processing, pages 1247–1256.
Association for Computational Linguistics.

Bilal Mirza, Zhiping Lin, and Kar-Ann Toh. 2013.
Weighted online sequential extreme learning ma-
chine for class imbalance learning. Neural process-
ing letters.

Thien Huu Nguyen, Kyunghyun Cho, and Ralph Gr-
ishman. 2016. Joint event extraction via recurren-
t neural networks. In Proceedings of NAACL-HLT
2016.

Thien Huu Nguyen and Ralph Grishman. 2015. Event
detection and domain adaptation with convolutional
neural networks. In Proceedings of ACL 2015.

Thien Huu Nguyen and Ralph Grishman. 2016. Mod-
eling skip-grams for event detection with convolu-
tional neural networks. In Proceedings of EMNLP
2016.



5283

Thien Huu Nguyen and Ralph Grishman. 2018.
Graph convolutional networks with argument-aware
pooling for event detection. In Proceedings of
AAAI2018.

Matthew E Peters, Mark Neumann, Mohit Iyyer, Matt
Gardner, Christopher Clark, Kenton Lee, and Luke
Zettlemoyer. 2018. Deep contextualized word rep-
resentations. arXiv preprint arXiv:1802.05365.

Lei Sha, Feng Qian, Baobao Chang, and Zhifang Sui.
2018. Jointly extracting event triggers and argu-
ments by dependency-bridge rnn and tensor-based
argument interaction. In Proceedings of AAAI2018.

Yanmin Sun, Mohamed S Kamel, Andrew KC Wong,
and Yang Wang. 2007. Cost-sensitive boosting for
classification of imbalanced data. Pattern Recogni-
tion, 40(12):3358–3378.

Kai Ming Ting. 2002. An instance-weighting method
to induce cost-sensitive trees. IEEE Transactions on
Knowledge and Data Engineering, 14(3):659–665.

Bishan Yang and Tom Mitchell. 2017. Leveraging
knowledge bases in lstms for improving machine
reading. In Proceedings of ACL2017.

Bianca Zadrozny, John Langford, and Naoki Abe.
2003. Cost-sensitive learning by cost-proportionate
example weighting. In ICDM 2003, pages 435–442.

Ying Zeng, Honghui Yang, Yansong Feng, Zheng
Wang, and Dongyan Zhao. 2016. A convolution bil-
stm neural network model for chinese event extrac-
tion. In Proceedings of NLPCC-ICCPOL 2016.

Zhi-Hua Zhou. 2011. Cost-sensitive learning. In In-
ternational Conference on Modeling Decisions for
Artificial Intelligence, pages 17–18. Springer.


