Proceedings of the 23rd International Conference on Computational Linguistics (Coling 2010), pages 1083–1091,

Beijing, August 2010

1083

extracting CCG derivations from the Penn Chinese Treebank

Chinese CCGbank:

Daniel Tse and James R. Curran
School of Information Technologies
{dtse6695,james}@it.usyd.edu.au

University of Sydney

Abstract

Automated conversion has allowed the de-
velopment of wide-coverage corpora for a
variety of grammar formalisms without the
expense of manual annotation. Analysing
new languages also tests formalisms, ex-
posing their strengths and weaknesses.
We present Chinese CCGbank, a 760,000
word corpus annotated with Combinatory
Categorial Grammar (CCG) derivations, in-
duced automatically from the Penn Chi-
nese Treebank (PCTB). We design parsimo-
nious CCG analyses for a range of Chinese
syntactic constructions, and transform the
PCTB trees to produce them. Our process
yields a corpus of 27,759 derivations, cov-
ering 98.1% of the PCTB.
Introduction

1
An annotated corpus is typically used to develop
statistical parsers for a given formalism and lan-
guage. An alternative to the enormous cost of
hand-annotating a corpus for a speciﬁc formalism
is to convert from an existing corpus.
The Penn Treebank (PTB; Marcus et al., 1994)
has been converted to HPSG (Miyao et al., 2004),
LFG (Cahill et al., 2002), LTAG (Xia, 1999), and
CCG (Hockenmaier, 2003). Dependency corpora,
e.g. the German Tiger corpus, have also been con-
verted (Hockenmaier, 2006). The Penn Chinese
Treebank (PCTB; Xue et al., 2005) provides analy-
ses for 770,000 words of Chinese. Existing PCTB
conversions have targeted TAG (Chen et al., 2005)
and LFG (Burke and Lam, 2004; Guo et al., 2007).
We present Chinese CCGbank, a Chinese cor-
pus of CCG derivations automatically induced from
the PCTB. Combinatory Categorial Grammar (CCG;
Steedman, 2000) is a lexicalised grammar formal-
ism offering a uniﬁed account of local and non-
local dependencies. We harness the facilities of

CCG to provide analyses of Chinese syntax includ-
ing topicalisation, pro-drop, zero copula, extrac-
tion, and the 把 ba- and 被 bei-constructions.
Pushing the boundaries of formalisms by sub-
jecting them to unfamiliar syntax also tests their
universality claims. The freer word order of Turk-
ish (Hoffman, 1996) and the complex morphology
of Korean (Cha et al., 2002) led to the development
of extensions to the CCG formalism.
We present our analysis of Chinese syntax un-
der CCG, and provide an algorithm, modelled af-
ter Hockenmaier and Steedman (2007), to incre-
mentally transform PCTB trees into CCG derivations.
The algorithm assigns CCG categories which di-
rectly encode head and subcategorisation informa-
tion. Instances of Chinese syntax demanding spe-
cial analysis, such as extraction, pro-drop or topi-
calisation, are pin-pointed and given elegant anal-
yses which exploit the expressivity of CCG.
Our conversion yields CCG analyses for 27,759
PCTB trees (98.1%). Coverage on lexical items,
evaluated by 10-fold cross-validation, is 94.46%
(by token) and 73.38% (by type).
We present the ﬁrst CCG analysis of Chinese
syntax and obtain a wide-coverage CCG corpus of
Chinese. Highly efﬁcient statistical parsing using
a CCGbank has recently been demonstrated for
English (Clark and Curran, 2007). Our Chinese
CCGbank will enable the development of similarly
efﬁcient wide-coverage CCG parsers for Chinese.
2 Combinatory Categorial Grammar
CCG (Steedman, 2000) is a lexicalised grammar
formalism, with a transparent syntax-semantics in-
terface, a ﬂexible view of constituency enabling
concise accounts of various phenomena, and a con-
sistent account of local/non-local dependencies.
It consists of categories, which encode the type
and number of arguments taken by lexical items,
and combinators, which govern the possible inter-
actions between categories.

1084

那
that

部 电影
MW movie
(/)/  

我
I

2

已经
already

(5\2)/(5\2)

看
see

了
SFP
(5[@?]\2)/2 (5\2)\(5\2) 5\5

过
EXP

(5[@?]\2)/2

<B×

>

/



2

5/(5/2)

>

Ttop

>T
5/(5\2)

(5[@?]\2)/2

5[@?]/2

5[@?]

5[@?]

>B
>B

>

<

A CCG grammar deﬁnes atomic categories, e.g.
NP and S, which may be recursively constructed
into complex categories, e.g. N/N and S\NP.1
Figure 1 shows how combinators govern the inter-
action of categories for lexical items, while slashes
specify argument directionality.
The combinators allow us to reduce lexical am-
biguity, by preserving a word’s canonical category
even when displaced from its canonical position.
This facility is a strength of CCG, but elevates its
generative power to mild context-sensitivity.
Some combinators may be disabled in a given
language – the multi-modal CCG (Baldridge, 2002)
allows these distinctions to be lexically speciﬁed.
Introducing non-CCG rules decrease categorial
ambiguity at the expense of deviating from the for-
malism. Hockenmaier and Steedman (2002) show
that these greatly improve lexical coverage. Their
analysis of English employs non-CCG rules to co-
erce a verb phrase headed by a participle (category
S[ng]\NP) to a post-nominal modiﬁer:
5[C]\2 −→ 2\2

Figure 1: Chinese CCG derivation: “That movie, I’ve already seen.”
3 Penn Chinese Treebank
Xue et al. (2005) developed the Penn Chinese
Treebank (PCTB), the ﬁrst syntactically annotated
corpus for Chinese. The corpus includes newswire
text, magazine articles, and transcribed speech.2
Xue et al. establishes several principles for a
more disciplined and consistent style of annota-
tion compared to the original PTB. These princi-
ples include complement/adjunct marking: allow-
ing the recovery of predicate-argument structure;
limited semantic role marking: the annotation of
modiﬁer phrases with semantic roles; covert ar-
gument marking: the retention of traces of argu-
ments deleted through pro-drop; and NP internal
structure: bracketing of NP structure where the in-
tended interpretation is clear.
The one   relation   per   bracketing principle
unambiguously encodes a grammatical relation
(chieﬂy, predication, adjunction, or complementa-
tion) through the conﬁguration of a node and its
children. Xue et al. developed this principle to as-
sist conversions from the PTB, e.g. Hockenmaier
(2003), in resolving argument/adjunct distinctions.
pre-
tokenised, and POS tagged. Owing to the dearth
of morphology in Chinese, the concept of part
of speech is more ﬂuid than that of English – the
word 比较 bijiao ‘compare’ might be glossed
as a verb, adjective, adverb, or noun depending
on its context. Noun/verb mis-taggings are a
frequent error case for PCFG parsing on PCTB data,
compounded in Chinese by the lack of function
words   and   morphology   (Levy   and   Manning,
2003). This ambiguity is better handled by the
adaptive multitagging approach used by Clark and
Curran (2007) for CCG supertagging, in which each
lexical item is tagged with a set of CCG categories.
We present our CCG analysis of Chinese syntax
below, followed by our conversion algorithm.

(1)
This frees verbs from having to possess a dis-
tinct category in each position, thus trading off lex-
ical ambiguity for derivational ambiguity. Honni-
bal and Curran (2009) extended CCG with hat cat-
egories, enabling the lexical speciﬁcation of these
unary type-change rules.
Hockenmaier and Steedman (2002, 2007) de-
veloped CCGbank, the ﬁrst wide-coverage English
CCG corpus, by converting 1.2 million words from
the Wall Street Journal section of the PTB. CCG-
bank has made possible the development of wide-
coverage statistical parsers for CCG in English, no-
tably C&C (Clark and Curran, 2007).

1Abbreviations in this paper: The directionless slash |
stands for one of {/;\}. We also use the verbal category ab-
breviations VP ≡ S\NP and TV ≡ (S\NP)/NP.

PCTB derivations   are   pre-segmented,

2We use the Penn Chinese Treebank 6.0 (LDC2007T36).

1085

4 The syntax of Chinese
4.1 Basic clause structure
Chinese is typologically SVO, with some OV el-
ements (relative clauses, adjunct PPs and noun
modiﬁers precede their heads). Numbers and de-
terminers may not modify nouns directly; a mea-
sure word must intervene.
The category structure of the grammar may
be inferred directly from headedness information.
Heads subcategorise for the type, number and di-
rectionality of their arguments, while adjuncts re-
ceive modiﬁer categories of the form X | X.
(2) 我I
NP
了
PERF
VP\VP
I bought a box of eggs at the supermarket.

超市supermarket
NP
盒box:MW
M

在at
(VP/VP)/NP

一one
(N/N)/M

买buy
VP/NP

鸡蛋eggs
N

4.2 Topicalisation
In topic-prominent languages, the topic refers to
information which the speaker assumes is known
by the listener. In Mandarin, topicalisation mani-
fests as left-dislocation of the topic phrase (Li and
Thompson, 1989). We distinguish gap and non-
gap topicalisation depending on whether the topic
is co-referent with a gap in the sentence.3
For gapped topicalisation (cf. Figure 1), we
adopt the Steedman (1987) topicalisation analysis:
6 → 5/(5/6 ) for parametrically licensed 6 (3)
For non-gap topicalisation (Example 5), we use
a variation of the analysis described in Hocken-
maier and Steedman (2005), which treats the topi-
calised constituent as a sentential modiﬁer. Under
this analysis, the determiner in a topicalised NP re-
ceives (S/S)/N instead of its canonical category
NP/N. Instead, we propose a unary rule:
6 → 5/5 for topicalisation candidate 6

(4)
This delays the coercion to sentential modiﬁer type
(i.e. NP → S/S) until after the NP has been con-
solidated, allowing the words under the topicalised
NP to preserve their canonical categories.

3Non-gap topicalisation is also known as the double sub-

ject construction (Li and Thompson, 1989).

(5) (As for) trade, it has developed rapidly.

贸易
trade development

发展

2
T
5/5

2

>T
5/(5\2)

快
很
fast
very
8 2/8 2 8 2
>

5\2

5

>

>

5

Topicalisation is far less marked in Chinese
than in English, and the structure of topicalised
constituents is potentially quite complex. The
additional categorial ambiguity in Hockenmaier
and Steedman (2005) compounds the data sparsity
problem, leading us to prefer the unary rule.
4.3 Pro-drop
Since Chinese exhibits radical pro-drop (Neele-
man and Szendr}oi, 2007), in which the viability of
the pro-drop is not conditioned on the verb, the cat-
egorial ambiguity resulting from providing an ad-
ditional argument-dropped category for every verb
is prohibitive.
Rather than engendering sparsity on verbal cate-
gories, we prefer derivational ambiguity by choos-
ing the unary rule analysis S[dcl] | NP → S[dcl] to
capture Chinese pro-drop.
4.4 Zero copula
Although the Chinese copula 是 shi is obligatory
when equating NPs, it may be omitted when equat-
ing an NP and a QP or PP (Tiee and Lance, 1986).4
(6) 她NP

今年VP/VP
this-year

十八
(S\NP)/M
18
3SG
She is 18 this year.

岁M
years-old

A solution   involving   a   binary   rule
NP QP → S[dcl]
is   not   properly   headed, and
thus   violates   the   Principle   of   Lexical   Head
Government (Steedman, 2000). Conversely, a
solution where, for example, 十八 ‘18’ would
have to receive the category (S[dcl]\NP)/M in-
stead of its canonical category QP/M would lead
to both data sparsity and over-generation, with
VP modiﬁers becoming able to modify the QP
directly. Tentatively, we ignore the data sparsity
consequences, and have 十八 ‘18’ receive the
category (S[dcl]\NP)/M in this context.

4The copula is ungrammatical in predication on an adjec-
tival verb, such as 高兴 ‘happy’. However, we analyse such
words as verbs proper, with category S[dcl]\NP.

1086

4.5 把 ba- and 被 bei-constructions
被 bei and 把 ba introduce a family of passive-like
constructions in Chinese. Although superﬁcially
similar, the resulting constructions exhibit distinct
syntax, as our CCG analysis reﬂects and clariﬁes.
In the 被 bei-construction, the patient argument
of a verb moves to subject position, while the agent
either becomes the complement of a particle 被 bei
(the long passive), or disappears (the short pas-
sive; Yip and Rimmington, 1997). Although the
two constructions are superﬁcially similar (appar-
ently differing only by the deletion of the agent
NP), they behave differently in more complex con-
texts (Huang et al., 2008).
The long passive occurs with or without an ob-
ject gap (deleted by identity with the subject of
the matrix verb). We analyse this construction by
assigning 被 bei a category which permutes the
surface positions of the agent and patient. Co-
indexation of heads allows us to express long-
distance dependencies.
((S\NPy)/((S\NPx)/NPy))/NPx
in   the   gapped   case   (cf.   Example 7)   and
((S\NP)/(S\NPx))/NPx in the non-gapped case.
(7) Zhangsan was beaten by Lisi.

receives

Bei

李四
L.

打了

beat-PERF

被
BEI

张三
Z.
2 (8 2/68 )/2O

(5\2N)/((5\2O)/2N)

>

2

68

>

<

5\2N

5

Short passives also occur with or without an
object gap, receiving (S\NPx)/((S\NP)/NPx) in
the gapped case and (S\NP)\(S\NP) in the non-
gapped case. Our analysis agrees with Huang et al.
(2008)’s observation that short-bei is isomorphic
to English tough-movement: our short-bei cate-
gory is the same as Hockenmaier and Steedman
(2005)’s category for English tough-adjectives.
In the 把 ba construction, a direct object be-
comes the complement of the morpheme 把 ba,
and gains semantics related to “being affected,
dealt with, or disposed of” (Huang et al., 2008). As
for 被 bei, we distinguish two variants depending
on whether the object is deleted under coreference
with the complement of 把 ba.
((S\NPy)/((S\NPy)/NPx))/NPx
in   the   gapped   case   (cf.   Example 8),
and
((S\NPy)/(S\NPy))/NP in the non-gapped case.
As Levy and Manning (2003) suggest, we re-
shape the PCTB analysis of the ba-construction so

receives

Ba

Tag Headedness
Example
head-ﬁnal
规划 建设 ‘plan [then] build’
VSB
right-adjunction 煮 熟 ‘cook done’
VRD
head-initial
确认 为 ‘conﬁrm as’
VCP
appositive
投资 设厂 ‘invest [&] build-factory’
VCD
special
去 不 去 ‘go [or] not go’
VNV
special
离 得 开 ‘leave able away’
VPT
Table 1: Verb compounds in PCTB

that ba subcategorises for its NP and VP, rather
than subcategorising for an IP sibling, which al-
lows the NP to undergo extraction.
(8) The criminals were arrested by the police.

警察
police

2

将
BA

犯人
逮捕了
criminal arrest-PERF

(8 2/68 )/2
(5\2O)/((5\2O)/2N)

2

>

5\2O

5

68

<

<

4.6 Verbal compounding
Verbs resulting from compounding strategies are
tagged and internally bracketed. Table 1 lists the
types distinguished by the PCTB, and the headed-
ness we assign to compounds of each type.
Modiﬁer-head compounds (PCTB tag VSB) ex-
hibit clear head-ﬁnal semantics, with the ﬁrst verb
81 causally or temporally preceding 82. Verb coor-
dination compounds (VCD) project multiple heads,
like ordinary lexical coordination.
In a resultative compound (VRD), the result or
direction of 81 is indicated by 82, which we treat as
a post-verbal modiﬁer. The V-not-V construction
(VNV) forms a yes/no question where 81 = 82. In
the V-bu/de-V or potential verb construction (VPT),
a disyllabic verb 8 = 8182 receives the inﬁx 得 de
or 不 bu with the meaning can/cannot 8. In both
these cases, it is the inﬁxed particle 得 de or 不 bu
which collects its arguments on either side.
4.7 Extraction
In the Chinese relative clause construction, the par-
ticle 的 de links a sentence with a subject or ob-
ject gap with a NP to which that gap co-refers,
in an analysis similar to the English construction
described by Hockenmaier and Steedman (2005),
mediated by the relative pronoun that.
As in the English object extraction case, forward
type-raising on the subject argument, and forward
composition into the verbal category allows us to
obtain the correct object gap category S/NP.

1087

4.8 Right node raising
Two coordinated verbs may share one or more con-
tiguous arguments under right node raising. This
analysis follows directly from the CCG deﬁnition of
coordination, requiring no new lexical categories.
(9) Scholars have formulated and are releasing
the documents.

学者 制定
和
scholar formulate and

推出
release
8 2/2 ?  8 2/2
⟨(cid:8)′⟩
(8 2/2)[? ]
⟨(cid:8)′′⟩

2

8 2/2

5\2

文件

document

2

>

<

5

4.9 Apposition
Apposition is the juxtaposition of two phrases re-
ferring to the same entity. Unlike noun modiﬁca-
tion, no clear modiﬁcation relationship holds be-
tween the two phrases. The direct juxtaposition
rules out Hockenmaier’s (2003) analysis where a
delimiting comma mediates the apposition. Chi-
nese also allows full sentence/NP apposition:
(10) (用户(users 浪费waste 水)5water)5
This gives rise to the Chinese apposition binary

事件2
incident2
incidents of users wasting water

rules NP NP → NP and S[dcl] NP → NP.
5 The translation pipeline
5.1 Tagging
Each PCTB internal node structurally encodes a con-
ﬁguration, which lets us distinguish head-initial
and head-ﬁnal complementation from adjunction
and predication (Xue et al., 2000).
The tagging mechanism annotates the PCTB tag
of each internal node with a marker, which pre-
serves this headedness information, even after the
nodes are re-structured in the binarisation phase.
Hockenmaier’s   (2003)   conversion   algorithm
uses the Magerman (1994) head-ﬁnding heuristics,
a potential source of noise. Fortunately, the PCTB
encodes gold standard headedness data.
if
a node and its children unify with one of the
schemata below, then the markers (e.g. :l or :n)
are attached to its children. The markers l and r
indicate complements left, or right of the head h;
adjuncts are marked with a.

The tagging algorithm is straightforward:

Head-initial, -ﬁnal complementation

XP
YP:r

X:h

ZP:r : : :

: : : YP:l

Adjunction, predication

XP
ZP:l

X:h

XP
ZP:a

IP
XP-SBJ:l

: : : YP:a

XP:h

Topicalisation (gap and non-gap)

YP:h

ZP-TPC(-i):T(t)

Coordination

IP
XP-SBJ:l

YP:r

({CC,PU})

(XP:c

XP
{CC,PU})+

XP:c

Others identify nodes with special syntax, such
as topicalisation (t/T), apposition (A) or coordina-
tion (c), for special treatment in following phases.
NP internal structure
To speed annotation, NP internal structure is often
left underspeciﬁed in PCTB (Xue et al., 2005), as in
the Penn Treebank. As a result, 68% of non-trace
NPs in PCTB have only a ﬂat bracketing.
We assume that the internal structure of ﬂat NPs
is right-branching and head-ﬁnal (Li and Thomp-
son, 1989), following Hockenmaier and Steedman
(2005), who assume this structure for English. A
re-analysis of PCTB, like Vadas and Curran (2007)
for the PTB, could restore this structure, and allow
our conversion algorithm to yield the correct CCG
analysis with no further modiﬁcations.
To obtain this default analysis, each node under
NP internal structure receives the marker n, except
the the ﬁnal node, the head, which receives N.
5.2 Binarisation
CCG combinators take at most two categories, in-
ducing binary derivation trees. As such, PCTB trees
must be re-shaped to accommodate a CCG analysis.
Our markers control the shape of the binarised
structure: head-initial complementation yields a
left-branching tree, while head-ﬁnal complemen-
tation, adjunction, predication, coordination, and
NP internal   structure   all   yield   right-branching
trees. Following Hockenmaier (2003), sentence-
ﬁnal punctuation is attached high.
Although the distinction between word-level
tags (such as NN, VA) and phrasal tags (such as NP,
VP, LCP) enables the conﬁgurational encoding of
grammatical relations, it leaves a large number of

1088

VP ← VV,VE,VA,VRD
ADVP ← AD, CS
LCP ← LC
LST ← OD
FLR ← any node

ADJP ← JJ
CLP ← M
DP ← DT, OD
INTJ ← IJ
PP ← P
Figure 2: Pruned unary projections

LCP Localiser phrase
M Measure word
N Bare noun
NP Noun phrase

Prepositional phrase
Sentence

PP
QP Quantiﬁer phrase
S
conj Conjunction word

Table 2: Chinese CCGbank atomic category set

unary projections. While an intransitive verb (e.g.
睡觉 ‘sleep’) would carry the verbal PCTB tag VV,
and a transitive verb combined with its object (e.g.
吃了晚饭 ‘ate dinner’) is annotated as VP, under
CCG’s freer concept of constituency, both receive
the category S\NP.
Pruning the unary projections in Fig. 2 prevents
spurious category labellings in the next phase.
5.3 Labelling
We label each node of the binarised tree with CCG
categories, respecting the headedness information
encoded in the markers.
Atomic categories
The chosen mapping from PCTB tags to categories
deﬁnes the atomic category set for the grammar.
The richer representation in CCG categories permits
some constituents to be expressed using a smaller
set of atoms (e.g. an adjective is simply a noun
modiﬁer – N/N). Despite their critical importance
in controlling the degree of under-/over-generation
in the corpus, little guidance exists as to the selec-
tion of atomic categories in a CCG grammar. We
observed the following principles:
Modiﬁer proliferation: when   two   classes   of
words can be modiﬁed by the same class of modi-
ﬁers, they should receive a single category;
Over-generation: the atom set should not over-
generalise to accept ungrammatical examples;
Efﬁciency: the representation may be motivated
by the needs of applications such as parsers.
Table 2 shows the eight atomic categories cho-
sen for our corpus. Two of these categories: LCP
(localisers) and M (measure words) have variously
been argued to be special sub-classes of nouns
(Huang et al., 2008). However, based on our over-
generation criterion, we decided to represent these
as atomic categories.
We adopt the bare/non-bare noun distinction
from Hockenmaier and Steedman (2007) on pars-
ing efﬁciency grounds. Although they roughly
correspond to English PPs, the distributional dif-
ferences between PPs, LCPs and QPs justify their

inclusion as atoms in Chinese. Future work in
training a wide-coverage parser on Chinese CCG-
bank will evaluate the impact of these choices.
Labelling algorithm
We developed a recursive algorithm which applies
one of several labelling functions based on the
markers on a node and its children.
The algorithm proceeds top-down and assigns
a CCG category to every node. The markers on a
node’s children are matched against the schema
of Table 3, applying the categories of the match-
ing schema to the children. The algorithm is then
called recursively on each child. If the algorithm
is called on an unlabelled node, the mapping from
PCTB tags is used to assign a CCG category.
C
Cp
C
pC
C
C[conj]

Left   absorp-
tion
Right
absorption

Right
adjunction

Coordination

Predication

Adjunction

C:c

C

L

Head-initial

Head-ﬁnal

Partial
coordination

Apposition

C[conj]
C:c
conj

NP
XP:A

NP

C

C
C\L
C
C/C:a
C
C\C:a
C
C/R:h
C
C\L:h

R

L

Table 3: Category labelling schemata

Left- and right-absorption are non-CCG rules
which functionally ignore punctuation, assuming
that they project no dependencies and combine to
yield the same category as their non-punctuation
sibling (Hockenmaier and Steedman, 2007). In the
schema, p represents a PCTB punctuation POS tag.
NPs receive a head-ﬁnal bracketing (by our
right-branching assumption), respecting NP inter-
nal structure where provided by PCTB:

N

N/N

中国 China
(N/N)/(N/N)

银行 bank

N/N

组织 org.

N/N

N
结构 struct.

N

1089

6 Post-processing
A number of cases remain which are either not
covered by the general translation algorithm, or
otherwise could be improved in a post-processing
step. The primary disharmony at this stage is the
presence of traces, the empty categories which
the PCTB annotation style uses to mark the canoni-
cal position of extraposed or deleted constituents.
19,781 PCTB derivations (69.9%) contain a trace.
Since CCG aims to provide a transparent inter-
face between surface string syntax and semantics,
traces are expressly disallowed (Steedman, 2000).
Hence, we eliminate traces from the annotation, by
devising alternate analyses in terms of categories
and combinatory rules.
Subject/object extraction
8966 PCTB derivations (31.7%) contain a subject
extraction, while 3237 (11.4%) contain an object
extraction. Figure 3 shows the canonical represen-
tation of subject extraction in the PCTB annotation
style. The PCTB annotation follows the :
′ analysis
of the relative clause construction as described by
Wu (2004), which we transform into an equivalent,
trace-free CCG analysis.

NP (N)

CP (N/N)

CP (N/N)

IP (S[dcl])

WHNP-E

NP-SBJ (NP)

VP (S[dcl]\NP)
规范
市場
VV std.ize

*T*-E

*OP*
NP document
Figure 3: ‘the document which standardises the
market’

NP market

的
DEC

文件

First, the 5FA? trace, WHNP-E, coindexed with
the extracted argument(s), is deleted. Next, the
extracted argument(s) with matching indices are
deleted, and category structure is adjusted to gen-
erate the correct gap category.
Modiﬁer categories
Under our analysis, aspect particles such as 了 le
(perfective) and 过 guo (experiential) are verbal
post-modiﬁers, corresponding to right adjunction
in Table 3. Accordingly, an aspect particle fol-
lowing a transitive verb VP/NP will receive the
modiﬁer category (VP/NP)\(VP/NP). Under this
analysis, every verbal category gives rise to one
possible modiﬁer category for each aspect particle,
leading to detrimental categorial ambiguity.

However,

the   generalised   backward   crossed
composition combinator (Steedman, 2000) lets
aspect particles retain their canonical category
(S\NP)\(S\NP) regardless of the arity of the verb
they modify.
Transformations
The PCTB annotation style posits traces to account
for gapping, control/raising, argument sharing,
pro-drop and topicalisation. To effect the parsimo-
nious CCG analyses of Section 4, structural trans-
formations on the original PCTB trees are necessary
to accommodate the new analyses.
We developed a tgrep-like language which
identiﬁes instances of Chinese constructions, such
as right node raising and pro-drop, whose PCTB an-
notation posits traces. The local trees are then re-
shaped to accommodate trace-free CCG analyses.
7 Evaluation
This section explores the coverage characteris-
tics of Chinese CCGbank,
in comparison with
the English and German CCGbanks generated by
Hockenmaier. Our analysis follows Hockenmaier
(2006) in establishing coverage as the metric re-
ﬂecting how well the target corpus has accounted
for constructions in the source corpus.
7.1 Corpus coverage
The Chinese CCGbank conversion algorithm com-
pletes for 28,227 of the 28,295 (99.76%) PCTB
trees. Annotation noise, and rare but legitimate
syntax, such as ellipsis, account for the coverage
lost in this phase. Following Hockenmaier and
Steedman (2005), we adjust the PCTB annotation
only for systematic tagging errors that lead to cat-
egory mis-assignments, maintaining as far as pos-
sible the PCTB bracketing.
269   derivations   (0.95%)   contain   unresolved
traces, resulting from annotation noise and rare
constructions (such as ellipsis) not currently han-
dled by our translation algorithm. In 468 (1.66%)
derivations, residues of PCTB tags not eliminated by
the translation algorithm generate malformed cate-
gories outside the allowed set (Table 2). Excluding
these cases, our conversion algorithm results in a
corpus of 27,759 (98.1%) valid derivations.
7.2 Category set
The Chinese CCGbank category set is compared
against existing CCG corpora derived from similar
automatic corpus conversions, to determine how

1090

well we have generalised over syntactic phenom-
ena in the source corpus.
A total of 1197 categories appear in the ﬁnal
corpus, of which 329 occur at least ten times, and
478 are attested only once. By comparison, En-
glish CCGbank, contains 1286 categories, 425 of
which occur at least ten times, and 440 only once,
while German CCGbank has a category inventory
of 2506 categories, with 1018 attested only once.5
7.3 Lexicon coverage
Lexical item coverage establishes the extent to
which data sparsity due to unseen words is prob-
lematic in the source corpus, and hence in any cor-
pus derived from it. Hockenmaier and Steedman
(2001) showed that formalisms with rich tagsets,
such as CCG, are particularly sensitive to this spar-
sity – while a lexical item may be attested in the
training data, it may lack the necessary category.
We divided the 27,759 valid derivations into
ten contiguous sections, performing ten-fold cross-
validation to determine the coverage of lexical
items and CCG categories in the resulting corpus.
Average coverage on lexical items is 73.38%,
while average coverage on categories is 88.13%.
94.46% of token types from the held-out set are
found in the training set. These ﬁgures compare to
86.7% lexical coverage (by type) and 92% (by to-
ken) in German CCGbank (Hockenmaier, 2006).
Although lexical coverage by token is comparable
to the German corpus, we observe a marked differ-
ence in coverage by type.
To explain this, we examine the most frequent
POS tags among the missing tokens. These are NN
(common nouns; 16,552 tokens), NR (proper noun;
8458), VV (verb; 6879), CD (numeral; 1814) and JJ
(adjective; 1257). The 100 most frequent missing
tokens across the ten folds comprise 48 NR tokens,
46 NR, 3 NT (temporal nouns), 2 JJ (adjectives) and
one VA (verbal adjective). Personal names are also
not tokenised into surnames and forenames in the
PCTB, increasing unseen NR tokens.
The missing VVs (verbs) include 1342 four-
character compounds, fossilised idiomatic expres-
sions which are considered atomic verbs in the
PCTB annotation. Another source of verb spar-
sity stems from the PCTB analysis of verbal inﬁx-
ation. Given a polysyllabic verb (e.g. 离开 leave-
away “leave”), we can add the adverbial inﬁx
5All German verbs having at least two categories to ac-
count for German verbal syntax contributes to the greater size
of the category set (Hockenmaier, 2006).

不 not to form a potential verb 离不开 leave-not-
away “unable to leave”.
In the PCTB annotation,
however, this results in lexical items for the two
cleaved parts, even though 离 leave can no longer
stand alone as a verb in modern Chinese. In this
case, a morphologically decomposed representa-
tion which does not split the lexical item could mit-
igate against this sparsity. Alternatively, candidate
verbs for this construction could have the ﬁrst verb
fragment subcategorise for the second.
8 Conclusion
We have developed the ﬁrst analysis of Chinese
with Combinatory Categorial Grammar, crafting
novel CCG analyses for a range of constructions in-
cluding topicalisation, pro-drop, zero copula, verb
compounding, and the long-range dependencies
resulting from the 把 ba- and 被 bei-constructions.
We have presented an elegant and economical
account of Chinese syntax that exploits the power
of CCG combinatory rules, supporting Steedman’s
claim to its language-independence.
We have designed a conversion algorithm to ex-
tract this analysis from an existing treebank, avoid-
ing the massive cost of hand re-annotation, creat-
ing a corpus of 27,759 CCG derivations, covering
98.1% of the PCTB. The corpus will be publicly re-
leased, together with the converter, providing the
tools to create CCGbanks in new languages.
At release, Chinese CCGbank will include gold-
standard head co-indexation data, as required for
the training and evaluation of head-driven depen-
dency parsers. Co-indexation analyses, like those
provided for the 把 ba- and 被 bei-constructions,
will be extended to all categories.
Future reﬁnements which could be brought to
bear on Chinese CCGbank include the integra-
tion of PropBank data into CCGbank (Honnibal
and Curran, 2007; Boxwell and White, 2008) us-
ing Chinese PropBank (Xue, 2008). The hat cat-
egories of Honnibal and Curran (2009) may bet-
ter handle form/function discrepancies such as
the Chinese zero copula construction, leading to
cleaner, more general analyses.
We have presented a wide-coverage Chinese
corpus which exploits the strengths of CCG to anal-
yse a range of challenging Chinese constructions.
We are now ready to develop rich NLP tools, includ-
ing efﬁcient, wide-coverage CCG parsers, to ad-
dress the ever-increasing volumes of Chinese text
now available.

1091

Acknowledgements
James Curran was supported by Australian Re-
search Council (ARC) Discovery grant DP1097291
and the Capital Markets Cooperative Research
Centre.
References
Jason Baldridge. 2002. Lexically Speciﬁed Derivational Con-
trol in Combinatory Categorial Grammar. Ph.D. thesis,
University of Edinburgh.

Stephen Boxwell and Michael White. 2008. Projecting Prop-
bank roles onto the CCGbank. Proceedings of LREC 2008.
Michael Burke and Olivia Lam. 2004. Treebank-based ac-
quisition of a Chinese lexical-functional grammar. In Pro-
ceedings of the 18th Paciﬁc Asia Conference on Language,
Information and Computation, pages 161–172.

Aoife Cahill, Mairead McCarthy, Josef van Genabith, and
Andy Way. 2002. Automatic annotation of the Penn
Treebank with LFG F-structure information.
In LREC
2002 Workshop on Linguistic Knowledge Acquisition and
Representation-Bootstrapping Annotated Language Data,
pages 8–15.

Jeongwon Cha, Geunbae Lee, and Jonghyeok Lee. 2002. Ko-
rean combinatory categorial grammar and statistical pars-
ing. Computers and the Humanities, 36(4):431–453.

John   Chen, Srinivas   Bangalore, and   K. Vijay-Shanker.
2005. Automated extraction of Tree-Adjoining Gram-
mars from treebanks. Natural Language Engineering,
12(03):251–299.

Stephen Clark and James R. Curran. 2007. Wide-Coverage
Efﬁcient Statistical Parsing with CCG and Log-Linear
Models. In Computational Linguistics, volume 33, pages
493–552.

Yuqing Guo, Josef van Genabith, and Haifeng Wang. 2007.
Treebank-based acquisition of LFG resources for Chinese.
In Proceedings of LFG07 Conference, pages 214–232.

Julia Hockenmaier. 2003. Data and Models for Statistical
Parsing with Combinatory Categorial Grammar. Ph.D.
thesis, University of Edinburgh.

Julia Hockenmaier. 2006. Creating a CCGbank and a wide-
coverage CCG lexicon for German.
In Proceedings of
the 21st International Conference on Computational Lin-
guistics and the 44th annual meeting of the ACL, pages
505–512. Morristown, NJ, USA.

Julia Hockenmaier and Mark Steedman. 2001. Generative
models for statistical parsing with combinatory catego-
rial grammar. In ACL ’02: Proceedings of the 40th An-
nual Meeting on Association for Computational Linguis-
tics, pages 335–342. Association for Computational Lin-
guistics, Morristown, NJ, USA.

Julia Hockenmaier and Mark Steedman. 2002. Acquiring
compact lexicalized grammars from a cleaner treebank. In
Proceedings of the Third International Conference on Lan-
guage Resources and Evaluation, pages 1974–1981.

Julia Hockenmaier and Mark Steedman. 2005. CCGbank:
Users’ manual. Technical report, MS-CIS-05-09, Com-
puter and Information Science, University of Pennsylva-
nia.

Julia Hockenmaier and Mark Steedman. 2007. CCGbank: A
Corpus of CCG Derivations and Dependency Structures
Extracted from the Penn Treebank. Computational Lin-
guistics, 33(3):355–396.

Beryl Hoffman. 1996. The computational analysis of the syn-
tax and interpretation of free word order in Turkish. Ph.D.
thesis, University of Pennsylvania, Philadelphia, PA.

Matthew Honnibal and James R. Curran. 2007.

Improving
the complement/adjunct distinction in CCGbank. In Pro-
ceedings of the 10th Conference of the Paciﬁc Associa-
tion for Computational Linguistics (PACLING-07), pages
210–217.

Matthew Honnibal and James R. Curran. 2009. Fully Lex-
icalising CCGbank with Hat Categories. In Proceedings
of the 2009 Conference on Empirical Methods in Natural
Language Processing, pages 1212–1221.

C.-T. James Huang, Y.-H. Audrey Li, and Yafei Li. 2008. The

syntax of Chinese. Cambridge University Press.

Roger Levy and Christopher Manning. 2003. Is it harder to
parse Chinese, or the Chinese Treebank? In Annual Meet-
ing of the Association for Computational Linguistics, vol-
ume 1, pages 439–446. Morristown, NJ, USA.

Charles N. Li and Sandra A. Thompson. 1989. Mandarin Chi-
nese: A functional reference grammar. University of Cal-
ifornia Press.

David M. Magerman. 1994. Natural language parsing as sta-
tistical pattern recognition. Ph.D. thesis, Stanford Univer-
sity.

Mitchell P.   Marcus, Beatrice   Santorini, and   Mary Ann
Marcinkiewicz. 1994. Building a Large Annotated Corpus
of English: The Penn Treebank. Computational Linguis-
tics, 19(2):313–330.

Yusuke Miyao, Takashi Ninomiya, and Jun’ichi Tsujii. 2004.
Corpus-Oriented Grammar Development for Acquiring a
Head-Driven Phrase Structure Grammar from the Penn
Treebank. pages 684–693.

Ad Neeleman and Kriszta Szendr}oi. 2007. Radical pro drop
Linguistic Inquiry,

and the morphology of pronouns.
38(4):671–714.

Mark Steedman. 1987. Combinatory grammars and par-
Natural Language & Linguistic Theory,

asitic gaps.
5(3):403–439.

Mark Steedman. 2000. The Syntactic Process. MIT Press.

Cambridge, MA, USA.

Henry H.Y. Tiee and Donald M. Lance. 1986. A reference
grammar of Chinese sentences with exercises. University
of Arizona Press.

David Vadas and James R. Curran. 2007. Adding noun phrase
structure to the Penn Treebank. In Association for Com-
putational Linguistics, volume 45, page 240.

Xiu-Zhi Zoe Wu. 2004. Grammaticalization and language

change in Chinese: A formal view. Routledge.

Fei Xia. 1999. Extracting tree adjoining grammars from
bracketed corpora. In Proceedings of Natural Language
Processing Paciﬁc Rim Symposium ’99, pages 398–403.
Nianwen Xue. 2008. Labeling chinese predicates with seman-

tic roles. Computational Linguistics, 34(2):225–255.

Nianwen Xue, Fei Xia, Fu-Dong Chiou, and Martha Palmer.
2005. The Penn Chinese TreeBank: Phrase structure an-
notation of a large corpus. Natural Language Engineering,
11(02):207–238.

Nianwen Xue, Fei Xia, Shizhe Huang, and Anthony Kroch.
2000. The Bracketing Guidelines for the Penn Chinese
Treebank (3.0). IRCS Report 00-08, University of Penn-
sylvania.

Po Ching Yip and Don Rimmington. 1997. Chinese: An es-

sential grammar. Routledge.

