



















































Multimodal Hierarchical Reinforcement Learning Policy for Task-Oriented Visual Dialog


Proceedings of the SIGDIAL 2018 Conference, pages 140–150,
Melbourne, Australia, 12-14 July 2018. c©2018 Association for Computational Linguistics

140

Multimodal Hierarchical Reinforcement Learning Policy for
Task-Oriented Visual Dialog

Jiaping Zhang
University of California, Davis
jpzhang@ucdavis.edu

Tiancheng Zhao
Carnegie Mellon University
tianchez@cs.cmu.edu

Zhou Yu
University of California, Davis

joyu@ucdavis.edu

Abstract

Creating an intelligent conversational sys-
tem that understands vision and language
is one of the ultimate goals in Artificial
Intelligence (AI) (Winograd, 1972). Ex-
tensive research has focused on vision-to-
language generation, however, limited re-
search has touched on combining these
two modalities in a goal-driven dialog con-
text. We propose a multimodal hierar-
chical reinforcement learning framework
that dynamically integrates vision and lan-
guage for task-oriented visual dialog. The
framework jointly learns the multimodal
dialog state representation and the hierar-
chical dialog policy to improve both dia-
log task success and efficiency. We also
propose a new technique, state adaptation,
to integrate context awareness in the dia-
log state representation. We evaluate the
proposed framework and the state adapta-
tion technique in an image guessing game
and achieve promising results.

1 Introduction

The interplay between vision and language has
created a range of interesting applications, in-
cluding image captioning (Karpathy and Fei-
Fei, 2015), visual question generation (VQG)
(Mostafazadeh et al., 2016), visual question an-
swering (VQA) (Antol et al., 2015), and refer-
ence expressions (Hu et al., 2016). Visual dia-
log (Das et al., 2017b) extends the VQA problem
to multi-turn visual-grounded conversations with-
out specific goals. In this paper, we study the
task-oriented visual dialog setting that requires the
agent to learn the multimodal representation and
dialog policy for decision making. We argue that a
task-oriented visual intelligent conversational sys-

tem should not only acquire vision and language
understanding but also make appropriate decisions
efficiently in a situated environment. Specifically,
we designed a 20 images guessing game using the
Visual Dialog dataset (Das et al., 2017a). This
game is the visual analog of the popular 20 ques-
tion game. The agent aims to learn a dialog policy
that can guess the correct image through question
answering using the minimum number of turns.

Previous work on visual dialogs (Das et al.,
2017a,b; Chattopadhyay et al., 2017) focused
mainly on vision-to-language understanding and
generation instead of dialog policy learning. They
let an agent ask a fixed number of questions to
rank the images or let humans make guesses at
the end of the conversations. However, such set-
ting is not realistic in real-world task-oriented ap-
plications, because in task-oriented applications,
not only completing the task successfully is impor-
tant but also completing it efficiently. In addition,
the agent should also be informed of the wrong
guesses, so that it becomes more aware of the vi-
sion context. However, solving such real-world
setting is a challenge. The system needs to handle
the large dynamically updated multimodal state-
action space and also leverage the signals in the
feedback loop coming from different sub-tasks.

We propose a multimodal hierarchical rein-
forcement learning framework that allows learn-
ing visual dialog state tracking and dialog policy
jointly to complete visual dialog tasks efficiently.
The framework we propose takes inspiration from
feudal reinforcement learning (FRL) (Dayan and
Hinton, 1993), where levels of hierarchy within
an agent communicate via explicit goals in a top-
down fashion. In our case, it decomposes the de-
cision into two steps: a first step where a mas-
ter policy selects between verbal task (information
query) and vision task (image retrieval), and a sec-
ond step where a primitive action (question or im-



141

age) is chosen from the selected task. Hierarchical
RL that relies on space abstraction, such as FRL,
is useful to address the challenge of large discrete
action space and has been shown to be effective
in dialog systems, especially for large domain dia-
log management(Casanueva et al., 2018). Besides,
we propose a new technique called state adapta-
tion in order to make the multimodal dialog state
more aware of the constantly changing visual con-
text. We demonstrate the efficacy of this technique
through ablation analysis.

2 Related Work

2.1 Visual Dialog

Visual dialog requires the agent to hold a multi-
turn conversation about visual content. Sev-
eral visual dialog tasks have been developed,
including image grounded conversation genera-
tion (Mostafazadeh et al., 2017). Guess What?!
(De Vries et al., 2017) involves locating visual ob-
jects using dialogs. VisDial (Das et al., 2017a) sit-
uates an answer-bot (A-Bot) to answer questions
from a question-bot (Q-Bot) about an image. Das
et al. (2017b) applied reinforcement learning (RL)
to the VisDial task to learn the policies for the
Q/A-Bots to collaboratively rank the correct image
among a set of candidates. However, their Q-Bot
can only ask questions and cannot make guesses.
Chattopadhyay et al. (2017) further evaluated the
pre-trained A-bot in a similar setting to answer
human generated questions. Since humans are
tasked to ask questions, the policy learning of Q-
Bot is not investigated. Finally, (Manuvinakurike
et al., 2017) proposed a incremental dialogue pol-
icy learning method for image guessing. However,
their dialog state only used language information
and did not include visual information. We build
upon prior works and propose a framework that
learns an optimal dialog policy for the Q-Bot to
perform both question selection and image guess-
ing through exploiting multimodal information.

2.2 Reinforcement Learning

RL is a popular approach to learn an optimal dia-
log policy for task-oriented dialog systems (Singh
et al., 2002; Williams and Young, 2007; Georgila
and Traum, 2011; Lee and Eskenazi, 2012; Yu
et al., 2017). The deep Q-Network (DQN) intro-
duced by Mnih et al. (2015) achieved human-level
performance in Atari games based on deep neu-
ral networks. Deep RL was then used to jointly

learn the dialog state tracking and policy optimiza-
tion in an end-to-end manner (Zhao and Eskenazi,
2016). In our framework, we use a DQN to learn
the higher level policy for question selection or
image guessing. Van Hasselt et al. (2016) pro-
posed a double DQN to overcome the overestima-
tion problem in the Q-Learning and Schaul et al.
(2015) suggested prioritized experience replay to
improve the data sampling efficiency for training
DQN. We apply both techniques in our implemen-
tation. One limitation of DQNs is that they can-
not handle unbounded action space, which is often
the case for natural language interaction. He et al.
(2015) proposed Deep Reinforcement Relevance
Network (DRRN) that can handle inherently large
discrete natural language action space. Specifi-
cally, the DRRN takes both the state and natural
language actions as inputs and computes a Q-value
for each state action pair. Thus, we use a DRRN
as our question selection policy to approximate the
value function for any question candidate.

Our work is also related to hierarchical rein-
forcement learning (HRL) which often decom-
poses the problem into several sub-problems and
achieves better learning convergence rate and gen-
eralization compared to flat RL (Sutton et al.,
1999; Dietterich, 2000). HRL has been ap-
plied to dialog management (Lemon et al., 2006;
Cuayáhuitl et al., 2010; Budzianowski et al., 2017)
which decomposes the dialog policy with respect
to system goals or domains. When the system
enters a sub-task, the selected dialog policy will
be used and continue to operate until the sub-
problem is solved, however the terminate condi-
tion for a subproblem has to be predefined. Dif-
ferent from prior work, our proposed architecture
uses hierarchical dialog policy to combine two RL
architectures within a control flow, i.e., DQN and
DRRN, in order to jointly learn multimodal dialog
state representation and dialog policy. Note that
our HRL framework resembles the FRL hierarchy
(Dayan and Hinton, 1993) that exploits space ab-
straction, state sharing and sequential execution.

3 Proposed Framework

Figure 2 shows an overview of the multimodal hi-
erarchical reinforcement learning framework and
the simulated environment. There are four main
modules in the framework. The visual dialog se-
mantic embedding module learns a multimodal
dialog state representation to support the visual



142

Figure 1: The information flow of the multimodal hierarchical reinforcement learning framework

dialog state tracking module with attention sig-
nals. Then the hierarchical policy learning mod-
ule takes the visual dialog state as the input to op-
timize the high-level control policy between ques-
tion selection and image retrieval.

3.1 Visual Dialog Semantic Embedding

This module learns the multimodal representation
for the downstream visual dialog state tracking.
Figure 3 shows the network architecture for pre-
training the visual dialog semantic embedding. A
VGG-19 CNN (Simonyan and Zisserman, 2014)
and a multilayer perceptron (MLP) with L2 nor-
malization are used to encode visual information
(images) as a vector I ∈ Rk. We use a dialog-
conditioned attentive encoder (Lu et al., 2017) to
encode textual information as a vector T ∈ Rk
where k is the joint embedding size. The image
caption(c) is encoded with a LSTM to get a vector
mc and each QA pair (H0, ...,Ht) is encoded sep-
arately with another LSTM as Mht ∈ Rd×t where
t is the turn index and d is the LSTM embedding
size. Conditioned on the image caption embed-
ding, the model attends to the dialog history:

zht = w
T
a tanh(WhM

h
t + (Wcm

c
t)1

T ) (1)

αht = softmax(z
h
t ) (2)

where 1 is a vector with all elements set to 1,
Wh,Wc ∈ Rt×d and wa ∈ Rk are parameters
to be learned. α ∈ Rk is the attention weight
over history. The attended history feature m̂ht is
the weighted sum of each column of Mht with α

h
t .

Then m̂ht is concatenated withm
c and encoded via

MLP and l2 norm to get the final textual embed-
ding (T ). We train the network with pairwise rank-
ing loss (Kiros et al., 2014) on cosine similarities
between the textual and visual embedding. The
pretraining step allows the module to have bet-
ter generalization and improve convergence per-
formance in the RL training.

Figure 2: Pretraining scheme of the visual dialog
semantic embedding module

Given the QA pairs from the simulated environ-



143

ment, the output of this module can also be used
for the image retrieval sub-task. To verify the qual-
ity of this module, we perform a sanity check on an
image retrieval task, similar to (Das et al., 2017b).
We used the output of the module to rank the 20
images in the game setting. Among 1000 games,
we achieved 96.8% accuracy for recall@1 (the tar-
get image ranked the highest), which means that
this embedding module can provide reliable re-
ward signal in an image retrieval task for the RL
training if given the relevant dialog history.

3.2 Visual Dialog State Tracking

This module utilizes the output from the visual
dialog semantic embedding to formulate the final
dialog state representation. We track three types
of state information, the dialog meta information
(META), the vision belief (V B) and the vision
context (V C). The dialog meta information in-
cludes the number of questions asked, the number
of images guessed and the last action. The vision
belief state is the output of the visual dialog se-
mantic embedding module, which captures the in-
ternal multimodal information of the agent. We
initialize the VB with only the encoding of the im-
age caption and update it with each new incoming
QA pair. The vision context state represents the
visual information of the environment. In order to
make the agent more aware of the dynamic visual
context and which images to attend more, we in-
troduce a new technique called state adaptation as
it updates the vision context state with the atten-
tion scores. The V C is initialized as the average
of image vectors and updated as follows:

αr,t,i = sigmoid(VBr,t · Ir,i) (3)

VCr,t =
∑20

i=1 αr,t,iIr,i∑20
i=1 αi

(4)

where r, t and i refer to episode, dialog turn and
image index. The V C is then adjusted based on
the attention scores (see equation 4). The atten-
tion scores calculated by dot product in the equa-
tion 3 represent the affinity between the current
vision belief state and each image vector. In the
case of wrong guesses (informed by the simula-
tor), we set the attention score for that wrong im-
age to zero. This method is inspired by Tian et al.
(2017) who explicitly weights context vectors by
context-query relevance for encoding dialog con-
text. The question selection sub-task also takes the

vision context state as input and the vision belief
state is used in the image retrieval sub-task.

3.3 Hierarchical Policy Learning

The goal is to learn a dialog policy that makes de-
cisions based on the current visual dialog state,
i.e, asking a question about the image or making a
guess about the image that the user is thinking of.
As the agent is situated in a dynamically chang-
ing vision context to update its internal decision-
making model (approximated by the belief state)
with new dialog exchange, we treat such envi-
ronment as a Partially Observable Markov Deci-
sion Process (POMDP) and solve it using deep re-
inforcement learning. We now describe the key
components:
Dialog State comes from the visual dialog state
tracking module as mentioned in Section 3.2
Policy Learning: Given the above dialog state, we
introduce a hierarchical dialog policy that contains
a high-level control policy and a low-level ques-
tion selection policy. We learn the control policy
with a Double DQN that decides between “ques-
tion” or “guess” at a game step.

If the high-level action is a “question”, then
the control is passed over to the low-level policy,
which needs to select a question. One challenge
is that the list of candidate questions are differ-
ent for every game, and the number of candidate
questions for different images is also different as
well. This prohibits us using a standard DQN
with fixed number of actions. He et al. (2015)
showed that modeling state embedding and action
embedding separately in DRRN has superior per-
formance than per-action DQN as well as other
DQN variants for dealing with natural language
action spaces. Therefore, we use the DRRN to
solve this problem, which computes a matching
score between the shared current vision context
state and the embedding of each question candi-
date. We use a softmax selection strategy as the
exploration policy during the learning stage. The
hierarchical policy learning algorithm is described
in the Appendix Algorithm 1.

If the high-level action is “guess”, then an im-
age is retrieved using cosine distance between
each image vector and the vision belief vector. It
is worth mentioning that although the action space
of the image retrieval sub-task can be incorporated
into a flat DRRN combined with text-based in-
puts,the training is unstable and does not converge



144

within this flat RL framework. We suspect this is
due to the sample efficiency problem with large
multimodal action space for which the question
action or guess action typically results in differ-
ent reward signals. Therefore, we did not compare
our proposed method against a flat RL model.
Rewards: The reward function is decomposed as
R = RG + RQ + RI where RG means the final
game reward(win/loss= ±10), RI refers to wrong
guess penalty (-3). We define RQ as the pseudo
reward for the sub-task of question selection as

RQ = At −At−1 (5)
At = sigmoid(VBr,t · Itarget) (6)

where t refers to the dialog turn and affinity scores
(At andAt−1) are the outputs of the sigmoid func-
tion that scales the similarity score (0-1) of the vi-
sion belief state and the target image vector. The
intuition is that different questions provide various
information gains for the agent. The integration of
RQ is a reward shaping (Ng et al., 1999) technique
that aims to provide immediate rewards to make
the RL training more efficient. At each turn, if the
verbal task (question selection) is chosen, the RQ
would serve as immediate reward for training the
DQN and DRRN while if the vision task (image
retrieval) is chosen, only the RI is available for
training DQN. At the end of a game, the reward
function varies based on the primitive action and
the final game result.

3.4 Question Selection
The question selection module selects the best
question in order to acquire relevant information
to update the image belief state. As discussed in
Section 3.3, we used a discriminative approach to
select the next question for the agent by learning
the policy in a DRRN. It leverages the existing
question candidate pool that is constructed differ-
ently with respect to different experiment settings
in Section 4.4. Ideally we would like to generate
realistic questions online towards a specific goal
(Zhang et al., 2017) and we leave this generative
approach for future study.

4 Experiments

We first describe the simulation of the environ-
ment. Then, we talk about different dialog pol-
icy models and implementation details. Finally,
we discuss three different experimental settings to
evaluate the proposed framework.

4.1 Simulator Construction

We constructed a simulator for 20 images guess-
ing game using the VisDial dataset. Each image
corresponds to a dialog consisting of ten rounds
of question answering generated by humans. To
make the task setting meaningful and the training
time manageable, we pre-process and select 1000
sets of games consisting of 20 similar images. The
simulator provides the reward signals and answers
related to the target image. It also tracks the inter-
nal game state. A game is terminated when one
of the three conditions is fulfilled: 1) the agent
guesses the correct answer, 2) the max number of
guesses is reached (three guesses) or 3) the max
number of dialog turns is reached. The agent wins
the game when it guesses the correct image. If
the agent wins the game, it gets a reward of 10,
and if the agent loses the game, it gets a reward
of −10. The agent also receives a −3 penalty for
each wrong guess.

4.2 Policy Models

To evaluate the contribution of each technique in
the multimodal hierarchical framework: the hier-
archical policy, the state adaptation, and the re-
ward shaping, we evaluate five different policy
models and perform ablation analysis. We de-
scribe each model as follows:
- Random Policy (Rnd): The agent randomly se-
lects a question or makes a guess at any step.
- Random Question+DQN (Rnd+DQN): The
agent randomly selects a question but a DQN is
used to optimize the hierarchical decision of mak-
ing a guess or asking a question.
- DRRN+DQN (HRL): Similar to Rnd+ DQN, ex-
cept that a DRRN is used to optimize the question
selection process
- DRRN+DQN+State Apdation (HRL+SA): Simi-
lar to HRL, except incorporating the state adapta-
tion, which is similar to the attention re-weighting
concept in the vision context state.
- DRRN+DQN+State Apdation+Reward Shaping
(HRL+SAR): Similar to HRL+SA, except that re-
ward shaping is applied.

4.3 Implementation Details

The details about data pre-processing and training
hyper-parameters are described in the Appendix.
During the training, the DQN uses the �-greedy
policy and the DRRN uses the softmax policy for
exploration, where � is linearly decreased from 1



145

to 0.1. The resulting framework was trained up
to 20,000 iterations for Experiment 1 and 95,000
iterations for Experiment 2 and 3, and evaluated at
every 1000 iterations with greedy policy. At each
evaluation we record the performance of different
models with a greedy policy for 100 independent
games. The evaluation metrics are the win rate and
the average number of dialog turns.

4.4 Experimental Setting

We conduct three sets of experiments to explore
the effectiveness of the proposed multimodal hi-
erarchical reinforcement learning framework in a
real-world scenario step by step. The first exper-
iment constrains the agent to select among the 10
human generated question-answer pairs. This set-
ting enables us to assess the effectiveness of the
framework in a less error-prone setting. The sec-
ond experiment does not require a human to gen-
erate the answer to emulate a more realistic en-
vironment. Specifically, we enlarge the number of
questions by including 200 human generated ques-
tions for the 20 images, and use a pre-trained vi-
sual question answer model to generate answers
with respect to the target image. In the last exper-
iment, we further automate the process by gener-
ating questions given the 20 images using a pre-
trained visual question generation model. So the
agent does not require any human input with re-
spect to any image for training.

5 Results

We evaluate the models described in Section 4.2
under the settings described in Section 4.4 and re-
port results as following.

5.1 Experiment 1: Human Generated
Question-Answer Pairs

The agent selects the next question among the
10 question-answer pairs human generated and
want to identify the targeted image accurately
and efficiently through natural language conver-
sation. We terminate the dialog after ten turns.
Each model’s performance is shown in Table 1.
HRL+SAR achieves the best win rate with statis-
tical significance. The HRL+SAR policy model
performs much better than methods without hier-
archical control structure and state adaptation. The
learning curves in Figure 4 and 5 reveal that the
HRL+SAR converges faster. We further perform
bootstrap tests by resampling the game results

from each experiment with replacement 1,000
times. Then we calculate the probability of signif-
icance level for the difference of average win rates
or average turn length to check whether the rela-
tive performance improvement from the last base-
line is statistically significant. The result shows
that the question selection (DRRN) and state adap-
tation bring the most significant performance im-
provements (p < 0.01) while reward shaping has
less impact (p < 0.05). We also observe that
the average number of turns with hierarchical pol-
icy learning (HRL) is slightly longer than that of
Rnd+DQN but with less statistically significant
difference. This is probably because this setting
provides the 10 predefined question-answer pairs
with a smaller action space, the DQN model tends
to encourage the agent to make guesses quicker,
while policy models with hierarchical structures
tends to optimize the overall task completion rate.

Win Rate(%) Avg Turn
Random Policy 28.3 5.13
Random Question
+ DQN

42.7 *** 6.68 ***

DRRN + DQN 51.5 *** 6.97 *
DRRN + DQN
+ State adaptation

71.3 *** 7.12

DRRN + DQN
+ State adaptation
+ Reward Shaping

76.3 ** 7.22

***(p < 0.01), **(p < 0.05) and *(p < 0.1)

Table 1: Model Performance in Experiment 1

Figure 3: Learning curves of win rates for five dif-
ferent policy policies in Experiment 1

We find that RL methods (DQN & DRRN) sig-
nificantly improve the win rate as they learn to se-
lect the optimal list of questions to ask. We also
observe that our proposed state adaptation method



146

Figure 4: Learning curves of final rewards for five
different dialog policies in Experiment 1

for vision context state helps achieve the largest
performance improvement. The hierarchical con-
trol architecture and the state abstraction shar-
ing (Dietterich, 2000) also improve both learning
speed and agent performance. This aligns with the
observation in Budzianowski et al. (2017).

Moreover, on average, we observe that after
seven turns, the agent was able to select the tar-
get image with a sufficiently high success rate.
We further explore if the proposed hierarchi-
cal framework enables efficient decision-making
when compared to the agent that keeps asking
questions and only makes the guess at the end of
the dialog. We refer to such models as the ora-
cle baselines. For example, the Oracle@7 makes
the guess at the 7th turn based on the previous
dialog history with the correct order of question-
answer pairs in the dataset. The oracle baselines
are strong, since they represent the best perfor-
mance the model can get given the optimal ques-
tion order provided by human.

number of rounds win rate(%)

Oracle
Baselines

7 69.7
8 77.5
9 87.8
10 92.4

Table 2: Oracle baselines Performance

Table 2 shows the performance of the oracle
baselines with various fixed turns. We performed
significance tests between each oracle baseline
and the hierarchical framework. Since our hierar-
chical framework requires on average 7.22 turns to
complete, so we compared it with Oracle@7 and
Oracle@8. We found that the proposed method
outperforms Oracle@7 with p − value < 0.01,
and similar to Oracle@8 (significant difference

(p − value > 0.1). The reason that the hierarchi-
cal framework can outperform Oracle@7 is that
it learns to make a guess whenever the agent is
confident enough, therefore achieving better win
rate. Oracle@8 in general receives more informa-
tion as the dialogs are longer, therefore has an ad-
vantage over the hierarchical method. However,
it still performs similar to the proposed method,
which demonstrates that by learning the hierarchi-
cal decision, it enables the agent to achieve the
goal more efficiently. One thing we need to point
out is that the proposed method also received ex-
tra information about whether the guess is correct
or not from the environment. Oracle baselines do
not have such information, as it can only make a
guess at the end of the dialog. Oracle@9 and @10
are better than the hierarchical framework statis-
tically, because they acquire much more informa-
tion by having longer turns.

5.2 Experiment 2: Questions Generated by
Human and Answers Generated
Automatically

To make the experimental setting more realistic,
we select 200 questions generated by a human
with respect to 20 images provided and create a
user simulator that generates the answers related
to the target image. Here, as the questions space is
larger, we terminate the dialog after 20 turns. We
follow the supervised training scheme discussed
in (Das et al., 2017b) to train the visual question
generation module offline.

Win Rate(%) Avg Turn
Random Policy 15.6 5.67
Random Question
+ DQN

34.8 *** 18.81 ***

DRRN + DQN 48.7 *** 18.78
DRRN + DQN
+ State adaptation

62.4 *** 16.93 **

DRRN + DQN
+ State adaptation
+ Reward Shaping

67.3 ** 16.68

***(p < 0.01), **(p < 0.05) and *(p < 0.1)

Table 3: Model Performance in Experiment 2

Results in Table 3 indicate that HRL+SAR sig-
nificantly outperforms Rnd and Rnd+DQN in both
win rate and average number of dialog turns. The
setting in Experiment 2 is more challenging than
that of Experiment 1, because the visual ques-



147

tion module introduces noise that can influence
the policy learning. However, the noise also sim-
ulates the real-world scenario that a user might
have an implicit goal that may change within the
task. A user can also accidentally make errors in
answering the question. The proposed hierarchi-
cal framework (HRL+SAR) with state adaptation
and reward shaping achieves the best win rate and
the least number of dialog turns in this noisy ex-
periment setting. As compared to Experiment 1,
the policy models with hierarchical structures can
both optimize the overall task completion rate and
the dialog turns. We did not report oracle baselines
results, since the oracle order of all the questions
(ideally generated by humans) was not available.

5.3 Experiment 3: Question-Answer Pairs
Generated Automatically

In this setting, both questions and answers are
generated automatically through pre-trained visual
question and answer generation models (Das et al.,
2017b). Such setting enables the agent to play the
guessing game given any image as no human input
of the image is needed. Notice that the answers
should be generated with respect to a target image
for our task setting. In this setting, we also set the
maximum number of dialog turns to be 20.

Win Rate(%) Avg Turn
Random Policy 12.4 5.79
Random Question
+ DQN

18.4 ** 19.43 ***

DRRN + DQN 35.6 *** 19.33
DRRN + DQN
+ State adaptation

44.8 ** 18.84 *

DRRN + DQN
+ State adaptation
+ Reward Shaping

48.3 ** 18.77

***(p < 0.01), **(p < 0.05) and *(p < 0.1)

Table 4: Model Performance in Experiment 3

The results in Table 4 show that the perfor-
mance of the three policies significantly dropped
compared to Experiment 2. Such observation is
expected, as the noise coming from both the vi-
sual question and answer generation module in-
creases the task difficulty. However, the proposed
HRL+SAR is still more resilient to the noise and
achieves a higher win rate and less average num-
ber of turns compared to other baselines. Figure
5 from the Appendix shows that in Experiment 2

the agent tends select relevant questions faster to
ask although the answers can be misleading. On
the other hand, in Experiment 3, the agent reacts
to the generated question and answers slower to
complete the task. The model performance de-
creases when we increase the task difficulty in or-
der to emulate the real-world scenarios. It hints
that there is a possible limitation of using the Vis-
Dial dataset, because the dialog is constructed by
users who casually talk about MS COCO images
(Chen et al., 2015) instead of exchanging with an
explicit contextual goal in the dialog.

6 Discussion and Future Work

We develop a framework for task-oriented visual
dialog systems and demonstrate the efficacy of in-
tegrating multimodal state representation with hi-
erarchical decision learning in an image guessing
game. We also introduce a new technique called
state adaptation to further improve the task per-
formance through integrating context awareness.
We also test the proposed framework in various
noisy settings to simulate real-world scenarios and
achieve robust results.

The proposed framework is practical and ex-
tensible for real-world applications. For exam-
ple, the designed system can act as a fashion
shopping assistant to help customers pick clothes
through strategically inquiring their preferences
while leveraging vision intelligence. In another
application, such as criminology practice, the
agent can communicate with witnesses to identify
suspects from a large face database.

Although games provide a rich domain for mul-
timodal learning research, admittedly it is chal-
lenging to evaluate a multimodal dialog system
due to the data scarcity problem. In future work,
we would like to extend and apply the proposed
framework for human studies in a situated real-
world application, such as a shopping scenario.
We also plan to incorporate domain knowledge
and database interactions into the system frame-
work design, which will make the dialog system
more flexible and effective. Another possible ex-
tension of the framework is to update the off-line
question and answer generation modules with an
online generative version and retrain the module
with reinforcement learning.



148

References
Stanislaw Antol, Aishwarya Agrawal, Jiasen Lu, Mar-

garet Mitchell, Dhruv Batra, C Lawrence Zitnick,
and Devi Parikh. 2015. Vqa: Visual question an-
swering. In Proceedings of the IEEE International
Conference on Computer Vision, pages 2425–2433.

Pawel Budzianowski, Stefan Ultes, Pei-Hao Su, Nikola
Mrksic, Tsung-Hsien Wen, Inigo Casanueva, Lina
Rojas-Barahona, and Milica Gasic. 2017. Sub-
domain modelling for dialogue management with
hierarchical reinforcement learning. arXiv preprint
arXiv:1706.06210.

Iñigo Casanueva, Paweł Budzianowski, Pei-Hao Su,
Stefan Ultes, Lina Rojas-Barahona, Bo-Hsiang
Tseng, and Milica Gašić. 2018. Feudal reinforce-
ment learning for dialogue management in large do-
mains. arXiv preprint arXiv:1803.03232.

Prithvijit Chattopadhyay, Deshraj Yadav, Viraj Prabhu,
Arjun Chandrasekaran, Abhishek Das, Stefan Lee,
Dhruv Batra, and Devi Parikh. 2017. Evaluating vi-
sual conversational agents via cooperative human-ai
games. arXiv preprint arXiv:1708.05122.

Xinlei Chen, Hao Fang, Tsung-Yi Lin, Ramakr-
ishna Vedantam, Saurabh Gupta, Piotr Dollár, and
C Lawrence Zitnick. 2015. Microsoft coco captions:
Data collection and evaluation server. arXiv preprint
arXiv:1504.00325.

Heriberto Cuayáhuitl, Steve Renals, Oliver Lemon, and
Hiroshi Shimodaira. 2010. Evaluation of a hierar-
chical reinforcement learning spoken dialogue sys-
tem. Computer Speech & Language, 24(2):395–
429.

Abhishek Das, Satwik Kottur, Khushi Gupta, Avi
Singh, Deshraj Yadav, José MF Moura, Devi Parikh,
and Dhruv Batra. 2017a. Visual dialog. In Proceed-
ings of the IEEE Conference on Computer Vision
and Pattern Recognition, volume 2.

Abhishek Das, Satwik Kottur, José MF Moura, Stefan
Lee, and Dhruv Batra. 2017b. Learning cooperative
visual dialog agents with deep reinforcement learn-
ing. arXiv preprint arXiv:1703.06585.

Peter Dayan and Geoffrey E Hinton. 1993. Feudal re-
inforcement learning. In Advances in neural infor-
mation processing systems, pages 271–278.

Harm De Vries, Florian Strub, Sarath Chandar, Olivier
Pietquin, Hugo Larochelle, and Aaron Courville.
2017. Guesswhat?! visual object discovery through
multi-modal dialogue. In Proc. of CVPR.

Thomas G Dietterich. 2000. Hierarchical reinforce-
ment learning with the maxq value function decom-
position. J. Artif. Intell. Res.(JAIR), 13(1):227–303.

Kallirroi Georgila and David Traum. 2011. Reinforce-
ment learning of argumentation dialogue policies in
negotiation. In Twelfth Annual Conference of the In-
ternational Speech Communication Association.

Ji He, Jianshu Chen, Xiaodong He, Jianfeng Gao, Li-
hong Li, Li Deng, and Mari Ostendorf. 2015. Deep
reinforcement learning with a natural language ac-
tion space. arXiv preprint arXiv:1511.04636.

Ronghang Hu, Huazhe Xu, Marcus Rohrbach, Jiashi
Feng, Kate Saenko, and Trevor Darrell. 2016. Nat-
ural language object retrieval. In Computer Vision
and Pattern Recognition (CVPR), 2016 IEEE Con-
ference on, pages 4555–4564. IEEE.

Andrej Karpathy and Li Fei-Fei. 2015. Deep visual-
semantic alignments for generating image descrip-
tions. In Proceedings of the IEEE conference
on computer vision and pattern recognition, pages
3128–3137.

Ryan Kiros, Ruslan Salakhutdinov, and Richard S
Zemel. 2014. Unifying visual-semantic embeddings
with multimodal neural language models. arXiv
preprint arXiv:1411.2539.

Sungjin Lee and Maxine Eskenazi. 2012. Pomdp-
based let’s go system for spoken dialog challenge.
In Spoken Language Technology Workshop (SLT),
2012 IEEE, pages 61–66. IEEE.

Oliver Lemon, Xingkun Liu, Daniel Shapiro, and Carl
Tollander. 2006. Hierarchical reinforcement learn-
ing of dialogue policies in a development environ-
ment for dialogue systems: Reall-dude. In BRAN-
DIAL06, Proceedings of the 10th Workshop on the
Semantics and Pragmatics of Dialogue, pages 185–
186.

Jiasen Lu, Anitha Kannan, Jianwei Yang, Devi Parikh,
and Dhruv Batra. 2017. Best of both worlds: Trans-
ferring knowledge from discriminative learning to a
generative visual dialog model. In Advances in Neu-
ral Information Processing Systems, pages 313–323.

Ramesh Manuvinakurike, David DeVault, and Kallir-
roi Georgila. 2017. Using reinforcement learning to
model incrementality in a fast-paced dialogue game.
In Proceedings of the 18th Annual SIGdial Meeting
on Discourse and Dialogue, pages 331–341.

Volodymyr Mnih, Koray Kavukcuoglu, David Silver,
Andrei A Rusu, Joel Veness, Marc G Bellemare,
Alex Graves, Martin Riedmiller, Andreas K Fidje-
land, Georg Ostrovski, et al. 2015. Human-level
control through deep reinforcement learning. Na-
ture, 518(7540):529.

Nasrin Mostafazadeh, Chris Brockett, Bill Dolan,
Michel Galley, Jianfeng Gao, Georgios P Sp-
ithourakis, and Lucy Vanderwende. 2017. Image-
grounded conversations: Multimodal context for
natural question and response generation. arXiv
preprint arXiv:1701.08251.

Nasrin Mostafazadeh, Ishan Misra, Jacob Devlin, Mar-
garet Mitchell, Xiaodong He, and Lucy Vander-
wende. 2016. Generating natural questions about an
image. arXiv preprint arXiv:1603.06059.



149

Andrew Y Ng, Daishi Harada, and Stuart Russell.
1999. Policy invariance under reward transforma-
tions: Theory and application to reward shaping. In
ICML, volume 99, pages 278–287.

Tom Schaul, John Quan, Ioannis Antonoglou, and
David Silver. 2015. Prioritized experience replay.
arXiv preprint arXiv:1511.05952.

Karen Simonyan and Andrew Zisserman. 2014. Very
deep convolutional networks for large-scale image
recognition. arXiv preprint arXiv:1409.1556.

Satinder Singh, Diane Litman, Michael Kearns, and
Marilyn Walker. 2002. Optimizing dialogue man-
agement with reinforcement learning: Experiments
with the njfun system. Journal of Artificial Intelli-
gence Research, 16:105–133.

Richard S Sutton, Doina Precup, and Satinder Singh.
1999. Between mdps and semi-mdps: A framework
for temporal abstraction in reinforcement learning.
Artificial intelligence, 112(1-2):181–211.

Zhiliang Tian, Rui Yan, Lili Mou, Yiping Song, Yan-
song Feng, and Dongyan Zhao. 2017. How to make
context more useful? an empirical study on context-
aware neural conversational models. In Proceed-
ings of the 55th Annual Meeting of the Association
for Computational Linguistics (Volume 2: Short Pa-
pers), volume 2, pages 231–236.

Hado Van Hasselt, Arthur Guez, and David Silver.
2016. Deep reinforcement learning with double q-
learning. In AAAI, volume 16, pages 2094–2100.

Jason D Williams and Steve Young. 2007. Partially
observable markov decision processes for spoken
dialog systems. Computer Speech & Language,
21(2):393–422.

Terry Winograd. 1972. Understanding natural lan-
guage. Cognitive psychology, 3(1):1–191.

Zhou Yu, Alan W Black, and Alexander I Rudnicky.
2017. Learning conversational systems that inter-
leave task and non-task content. IJCAI.

Junjie Zhang, Qi Wu, Chunhua Shen, Jian Zhang, Jian-
feng Lu, and Anton van den Hengel. 2017. Asking
the difficult questions: Goal-oriented visual question
generation via intermediate rewards. arXiv preprint
arXiv:1711.07614.

Tiancheng Zhao and Maxine Eskenazi. 2016. To-
wards end-to-end learning for dialog state tracking
and management using deep reinforcement learning.
arXiv preprint arXiv:1606.02560.

A Data Pre-Processing and Training
Details

After data pre-processing, we had a vocabulary
size of 8,957 and image vector dimension of

4,096. To pre-train the visual dialog semantic em-
bedding, we used the following parameters: the
size of word embedding is 300; the size of LSTMs
is 512; 0.2 dropout rate and the final embedding
size 1024 with MLP and l2 norm. We fixed the
visual dialog semantic embedding during the RL
training. The high-level policy learning module -
Double DQN was trained with the following hy-
perparameters: three MLP layers of sizes 1000,
500 and 50 with tanh activation respectively. For
hyper-parameters of DQN, the behavior network
was updated every 5 steps and the interval for up-
dating the target network is 500. �-greedy explo-
ration was used for training, where � is linearly
decreased from 1 to 0.1. The question selection
module - DRRN encodes the context vector and
question vector separately with two MLP layers of
sizes 256 and 128 and dot product was used as the
interaction function. The experience replay buffer
sizes are 25,000 for DQN and 50,000 for DRRN.
Both RL networks were trained through RMSProp
with batch size 64. Bootstrapping and prioritized
replay were also used to facilitate RL training. The
reward discount factor was set to be 0.99.

B Sample Dialog

See Figure 5.

C Hierarchical Policy Learning
Algorithm

See Algorithm 1.



150

Figure 5: A successful dialog from Experiment 2 and a failure dialog from Experiment 3

Algorithm 1 Hierarchical Policy Learning
1: Initialize Double DQN(online network parameters θ and target network parameters θ−) and

DRRN(network parameters θ+) with small random weights and corresponding replay memory
EDQN and EDRRN to capacity N.

2: Initialize game simulator and load dictionary.
3: for episode r = 1, ..., M do
4: Restart game simulator.
5: Receive image caption and candidate images from the simulator, and convert them to represen-

tation via pre-trained visual dialog semantic embedding layer, denoted as initial state Sr,0
6: for t = 1, ..., T do
7: sample high-level action from DQN, At ∼ πDQN (Sr,t)
8: if Ar,t = Q(asking a question) then
9: Compute Q(V Ct, qi) for the list of questions Qr,t using DRRN forward activation and

select the question qr,t with the max Q-value, and keep track the next available question pool Qr,t+1
10: if Ar,t = G (guessing an image) then
11: Select the image gr,t with the smallest cosine distance between an image vector Ii and

current image belief state VBr,t
12: Execute action qr,t or gr,t in the simulator and get the next visual dialog state representation

Sr,t+1 and reward signal Rr,t
13: Store the transition (Sr,t, Ar,t, Sr,t+1, Rr,t) into EDQN and if asking a question, also store

the transition (V Cr,t, qr,t, V Cr,t+1, Rr,t, Qr,t+1) into EDRRN
14: Sample random mini-batch of transitions (Sk, Ak, Sk+1, Rk) from EDQN

15: Set yDQN =

{
Rk if terminal state
Rk + γQDQN (Sk+1, argmaxa′Q(Sk+1, a

′; θ); θ−) if else
16: Sample random mini-batch of transitions (V Cl, ql, V Cl+1, Rl, Ql+1) from EDRRN

17: Set yDRRN =

{
Rl if terminal state
Rl + γmaxa′∈Ql+1QDRRN (V Cl+1, a

′; θ+) if else
18: Perform gradient steps for DQN with loss ‖ yDQN −QDQN (Sk, Ak; θ) ‖2 with respect to θ

and DRRN with loss ‖ yDRRN −QDRRN (V Cl, ql; θ+) ‖2 with respect to θ+
19: Replace target parameters θ− ← θ for every N steps.

end for
end for


