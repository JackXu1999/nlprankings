



















































Unsupervised Cross-lingual Transfer of Word Embedding Spaces


Proceedings of the 2018 Conference on Empirical Methods in Natural Language Processing, pages 2465–2474
Brussels, Belgium, October 31 - November 4, 2018. c©2018 Association for Computational Linguistics

2465

Unsupervised Cross-lingual Transfer of Word Embedding Spaces

Ruochen Xu, Yiming Yang, Naoki Otani, Yuexin Wu
Carnegie Mellon University

{ruochenx, yiming, notani, yuexinw }@cs.cmu.edu

Abstract

Cross-lingual transfer of word embeddings
aims to establish the semantic mappings
among words in different languages by learn-
ing the transformation functions over the cor-
responding word embedding spaces. Suc-
cessfully solving this problem would benefit
many downstream tasks such as to translate
text classification models from resource-rich
languages (e.g. English) to low-resource lan-
guages. Supervised methods for this problem
rely on the availability of cross-lingual super-
vision, either using parallel corpora or bilin-
gual lexicons as the labeled data for training,
which may not be available for many low re-
source languages. This paper proposes an un-
supervised learning approach that does not re-
quire any cross-lingual labeled data. Given
two monolingual word embedding spaces for
any language pair, our algorithm optimizes
the transformation functions in both direc-
tions simultaneously based on distributional
matching as well as minimizing the back-
translation losses. We use a neural network
implementation to calculate the Sinkhorn dis-
tance, a well-defined distributional similarity
measure, and optimize our objective through
back-propagation. Our evaluation on bench-
mark datasets for bilingual lexicon induction
and cross-lingual word similarity prediction
shows stronger or competitive performance of
the proposed method compared to other state-
of-the-art supervised and unsupervised base-
line methods over many language pairs.

1 Introduction

Word embeddings are well known to capture
meaningful representations of words based on
large text corpora (Mikolov et al., 2013; Pen-
nington et al., 2014). Training word vectors us-
ing monolingual corpora is a common practice
in various NLP tasks. However, how to estab-
lish cross-lingual semantic mapping among mono-

lingual embeddings remain an open challenge as
the availability of resources and benchmarks are
highly imbalanced across languages.

Recently, increasing effort of research has been
motivated to address this challenge. Success-
ful cross-lingual word mapping will benefit many
cross-lingual learning tasks, such as transform-
ing text classification models trained in resource-
rich languages to low-resource languages. Down-
stream applications include word alignment, text
classification, named entity recognition, depen-
dency parsing, POS-tagging, and more (Søgaard
et al., 2015). Most methods for cross-lingual
transfer of word embeddings are based on super-
vised or semi-supervised learning, i.e., they re-
quire cross-lingual supervision such as human-
annotated bilingual lexicons and parallel cor-
pora (Lu et al., 2015; Smith et al., 2017; Artetxe
et al., 2016). Such a requirement may not be met
for many language pairs in the real world.

This paper proposes an unsupervised approach
to the cross-lingual transfer of monolingual word
embeddings, which requires zero cross-lingual su-
pervision. The key idea is to optimize the mapping
in both directions for each language pair (say A
and B), in the way that the word embedding trans-
lated from language A to language B will match
the distribution of word embedding in language B.
And when translated back from B to A, the word
embedding after two steps of transfer will be max-
imally close to the original word embedding. A
similar property holds for the other direction of
the loop (from B to A and then from A back to
B). Specifically, we use the Sinkhorn distance (Cu-
turi, 2013) to capture the distributional similarity
between two set of embeddings after transforma-
tion, which we found empirically superior to the
KL-divergence (Zhang et al., 2017a) and distance
to nearest neighbor (Artetxe et al., 2017; Conneau
et al., 2017) with regards to the quality of learned



2466

transformation as well as the robustness under dif-
ferent training conditions.

Our novel contributions in the proposed work
include:

• We propose an unsupervised learning frame-
work which incorporates the Sinkhorn dis-
tance as a distributional similarity measure in
the back-translation loss function.
• We use a neural network to optimize our

model, especially to implement the Sinkhorn
distance whose calculation itself is an opti-
mization problem.
• Unlike previous models which only consider

cross-lingual transformation in a single direc-
tion, our model jointly learns the word em-
bedding transfer in both directions for each
language pair.
• We present an intensive comparative evalua-

tion where our model achieved the state-of-
the-art performance for many language pairs
in cross-lingual tasks.

2 Related Work

We divide the related work into supervised and un-
supervised categories. Representative methods in
both categories are included in our comparative
evaluation (Section 3.4). We also discuss some
related work in unsupervised domain transfer in
addition.

Supervised Methods: There is a rich body of su-
pervised methods for learning cross-lingual trans-
fer of word embeddings based on bilingual dic-
tionaries (Mikolov et al., 2013; Faruqui and Dyer,
2014; Artetxe et al., 2016; Xing et al., 2015;
Duong et al., 2016; Gouws and Søgaard, 2015),
sentence-aligned corpora (Kočiskỳ et al., 2014;
Hermann and Blunsom, 2014; Gouws et al., 2015)
and document-aligned corpora (Vulić and Moens,
2016; Søgaard et al., 2015). The most relevant
line of work is that by Mikolov et al. (2013)
where they showed monolingual word embed-
dings are likely to share similar geometric prop-
erties across languages although they are trained
separately and hence cross-lingual mapping can
be captured by a linear transformation across em-
bedding spaces. Several follow-up studies tried to
improve the cross-lingual transformation in vari-
ous ways (Faruqui and Dyer, 2014; Artetxe et al.,
2016; Xing et al., 2015; Duong et al., 2016; Am-
mar et al., 2016; Artetxe et al., 2016; Zhang et al.,

2016; Shigeto et al., 2015). Nevertheless, all these
methods require bilingual lexicons for supervised
learning. Vulić and Korhonen (2016) showed that
5000 high-quality bilingual lexicons are sufficient
for learning a reasonable cross-lingual mapping.

Unsupervised Methods have been studied to es-
tablish cross-lingual mapping without any human-
annotated supervision. Earlier work simply re-
lied on word occurrence information only (Rapp,
1995; Fung, 1996) while later efforts have con-
sidered more sophisticated statistics in addition
(Haghighi et al., 2008). The main difficulty in
unsupervised learning of cross-lingual mapping
is the formulation of the objective function, i.e.,
how to measure the goodness of an induced map-
ping without any supervision is a non-trivial ques-
tion. Cao et al. (2016) tried to match the mean
and standard deviation of the embedded word vec-
tors in two different languages after mapping the
words in the source language to the target lan-
guage. However, such an approach has shown
to be sub-optimal because the objective function
only carries the first and second order statistics of
the mapping. Artetxe et al. (2017) tried to im-
pose an orthogonal constraint to their linear trans-
formation model and minimize the distance be-
tween the transferred source-word embedding and
its nearest neighbor in the target embedding space.
Their method, however, requires a seed bilingual
dictionary as the labeled training data and hence
is not fully unsupervised. (Zhang et al., 2017a;
Barone, 2016) adapted a generative adversarial
network (GAN) to make the transferred embed-
ding of each source-language word indistinguish-
able from its true translation in the target embed-
ding space (Goodfellow et al., 2014). The adver-
sarial model could be optimized in a purely un-
supervised manner but is often suffered from un-
stable training, i.e. the adversarial learning does
not always improve the performance over simpler
baselines. Zhang et al. (2017b), Conneau et al.
(2017) and Artetxe et al. (2017) also tried adver-
sarial approaches for the induction of seed bilin-
gual dictionaries, as a sub-problem in the cross-
lingual transfer of word embedding.

Unsupervised Domain Transfer: Generally
speaking, learning the cross-lingual transfer of
word embedding can be viewed as a domain trans-
fer problem, where the domains are word sets in
different languages. Thus various work in the



2467

field of unsupervised domain adaptation or unsu-
pervised transfer learning can shed light on our
problem. For example, He et al. (2016) proposed
a semi-supervised method for machine transla-
tion to utilize large monolingual corpora. Shen
et al. (2017) used unsupervised learning to trans-
fer sentences of different sentiments. Recent work
in computer vision addresses the problem of im-
age style transfer without any annotated training
data (Zhu et al., 2017; Taigman et al., 2016; Yi
et al., 2017). Among those, our work is mostly
inspired by the work on CycleGAN (Zhu et al.,
2017), and we adopt their cycled consistent loss
over images into our back-translation loss. One
key difference of our method from CycleGAN is
that they used the training loss of an adversarial
classifier as an indicator of the distributional dis-
tance, but instead, we introduce the Sinkhorn dis-
tance in our objective function and demonstrate its
superiority over the representative method using
adversarial loss (Zhang et al., 2017a).

3 Proposed Method

Our system takes two sets of monolingual word
embeddings of dimension d as input, which are
trained separately on two languages. We denote
them as X = {xi}ni=1, Y = {yj}mj=1, xi, yj ∈ Rd.
During the training of monolingual word embed-
ding for X and Y , we also have the access to the
word frequencies, represented by vectors r ∈ Nn
and c ∈ Nm for X and Y , respectively. Specifi-
cally, ri is the frequency for word (embedding) xi
and similarly for cj of yj . As illustrated in Fig-
ure 3, our model has two mappings: G : X → Y
and F : Y → X . We further denote transferred
embedding from X as G(X) := {G(xi)}ni=1 and
correspondingly for F (Y ).

In the unsupervised setting, the goal is to learn
the mapping G and F without any paired word
translation. To achieve this, our loss function
consists of two parts: Sinkhorn distance (Cuturi,
2013) for matching the distribution of transferred
embedding to its target embedding distribution;
and a back-translation loss for preventing degen-
erated transformation.

3.1 Sinkhorn Distance

3.1.1 Definition
Sinkhorn distance is a recently proposed distance
between probability distributions. We use the
Sinkhorn distance to measure the closeness be-

𝑋

𝐹(𝑌)

𝐺(𝑋)

𝑌

𝐹(𝐺 𝑋 )

𝐺(𝐹 𝑌 )

𝐹

𝐺

𝐺

𝐹

Sinkhorn Distance Sinkhorn Distance

Back Trans. Loss

Back Trans. Loss

Figure 1: The model takes monolingual word embed-
ding X and Y as input. G and F are embedding trans-
fer functions parameterized by a neural network, which
are represented by solid arrows. The dashed lines in-
dicate the input for our objective losses, namely the
Sinkhorn distance and back-translation loss

.

tween G(X) and Y , and also between F (Y ) and
X . During the training, our model optimizes
G and F for lower Sinkhorn distance to make
the transferred embeddings match the distribution
of the target embeddings. Here we only illus-
trate the Sinkhorn distance between G(X) and Y ,
the derivation for F (Y ) and X is very similar.
Although the vocabulary sizes of two languages
could be different, we are able to sample mini-
batches of equal size from G(X) and Y . therefore
we assume n = m in the following derivation.

To compute Sinkhorn distance, we firstly com-
pute a distance matrix M (G) ∈ Rn×m between
G(X) and Y where M (G)ij is the distance measure
between G(xi) and yj . The superscript on M (G)

indicates the distance that depends on a parameter-
ized transformation G. For instance, if we choose
Euclidean distance as a measure (see Section 3.1.3
for more discussions), we will have

M
(G)
ij = ‖G(xi)− yj‖2.

Given the distance matrix, the Sinkhorn dis-
tance between PG(X) and PY is defined as:

dsh(G) := min
P∈Uα(r,c)

〈P,M (G)〉 (1)

where 〈·, ·〉 is the Forbenius dot-product and
Uα(r, c) is an entropy constrained transport poly-



2468

Algorithm 1 Computation of Sinkhorn Distance
dsh(G)

1: procedure SINKHORN(M (G), r, c, λ, I)
2: K(G) := e−λM

(G)

3: v = 1m/m . normalized one vector
4: i = 0
5: while i < I do . iterate for I times
6: u = r./K(G)v

7: v = c./K(G)
T
u

8: i = i+ 1

9: dsh(G) = u
T ((K(G) ⊗M (G))v)

10: return dsh(G) . The Sinkhorn distance

tope, defined as

Uα(r, c) = {P ∈ R+n×m|P1m = r, P T1n = c,
h(P ) ≤ h(r) + h(c)− α} (2)

Note that P is non-negative and the first two con-
straints make its element-wise sum be 1. There-
fore, P can be seen as a set of probability distri-
butions. The same applies for r and c since they
are frequencies. h is the entropy function defined
on any probability distributions and α is a hyper-
parameter to choose. For any probabilistic matrix
P ∈ Uα(r, c), it can be viewed as the joint proba-
bility of (G(X), Y ). The first two constraints en-
sure that P has marginal distribution on G(X) as
PG(X) and on Y as PY . We can also view Pij as
the evidence for establishing a translation between
word vector xi and word vector yj .

An intuitive interpretation of equation (1) is that
we are trying to find the optimal transport proba-
bility P under the entropy constraint such that the
total distance to transport from G(X) to Y is min-
imized.

3.1.2 Computing Sinkhorn Distance dsh(G)
Cuturi (2013) showed that the optimal solu-
tion of formula (1) has the form P ∗ =
diag(u)Kdiag(v) , where u and v are some non-
negative vectors and K(G) := e−λM

(G)
; λ is the

Lagrange multiplier for the entropic constraint in
2 and each α in Equation (1) has one correspond-
ing λ. The Sinkhorn distance can be efficiently
computed by a matrix scaling algorithm. We
present the pseudo code in Algorithm 1. Note that
the computation of dsh(G) only requires matrix-
vector multiplication. Therefore, we can compute
and back propagate the gradient of dsh(G) with re-
gards to the parameters in G using standard deep

learning libraries. We show our implementation
details in Section 3.4 and supplementary material.

3.1.3 Choice of the Distance Metric
In Section 3.1.1, we used the Euclidean distance
of vector pairs to define M (G) and Sinkhorn dis-
tance dsh(G). However, in our preliminary exper-
iment, we found that Euclidean distance of unnor-
malized vectors gave poor performance. There-
fore, following the common practice, we normal-
ize all word embedding vectors to have a unit L2
norm in the construction of M (G).

As pointed out in Theorem 1 of Cuturi (2013),
M (G) must be a valid metric in order to make
dsh(G) a valid metric. For example, the com-
monly used cosine distance, which is defined as
CosDist(a, b) = 1− cos(a, b), is not a valid met-
ric because it does not satisfy triangle inequality
1. Thus, for constructing M (G), we propose the
square root cosine distance (SqrtCosDist) be-
low:

SqrtCosDist(a, b) :=
√
2− 2cos(a, b) (3)

M
(G)
ij = SqrtCosDist(G(xi), yj) (4)

Theorem 1. SqrtCosDist is a valid metric.

Proof. ∀a, b ∈ Rd, let â = a‖a‖ , b̂ =
b
‖b‖ . We have

cos(a, b) = 〈â, b̂〉 and 〈â, â〉 = 〈b̂, b̂〉 = 1. Then

SqrtCosDist(a, b) =
√
2− 2cos(a, b)

=

√
〈â, â〉+ 〈b̂, b̂〉 − 2〈â, b̂〉

=

√
〈â− b̂, â− b̂〉

= ‖â− b̂‖

Obviously, the last term is the Euclidean distance
between normalized input vectors â and b̂. Since
Euclidean distance is a valid metric, it follows that
SqrtCosDist satisfies all the axioms for a valid
metric.

3.2 Objective Function
Given enough capacity, G is capable to trans-
fer X to Y for arbitrary word-to-word mappings.
To ensure that, we learn a meaningful translation
and also to regularize the search space of possible
transformations, we enforce the word embedding
after the forward and the backward transformation

1If we select a = [1, 0], b = [
√
2

2
,
√
2
2
], c = [0, 1] We have

CosDist(a, c) ≥ CosDist(a, b) + CosDist(b, c) , which
violates the triangle inequality.



2469

should not diverge much from its original direc-
tion. We simply choose the back-translation loss
based on the cosine similarity:

dbt(G,F ) =
∑
i

1− cos(xi, F (G(xi)))+∑
j

1− cos(yi, G(F (yi))) (5)

where cos is the cosine similarity.
Putting everything together, we minimize the

following objective function.

LX,Y,r,c(G,F ) = dsh(G)+ dsh(F )+ βdbt(G,F )
(6)

where hyper-parameter β controls the relative
weight of the last term against the first two terms
in the objective function. By definition, computa-
tion of dsh(G) or dsh(F ) involves another mini-
mization problem as shown in Equation (1). We
solve it using the matrix scaling algorithm in Sec-
tion 3.1.2, and treat dsh(G) as a deterministic and
differentiable function of parameters in G. The
same holds for dsh(F ) and F .

3.3 Wasserstein GAN Training for Good
Initial Point

In preliminary experiments, we found that our ob-
jective 6 is sensitive to the initialization of the
weight in G and F in the purely unsupervised
setting. It requires a good initial setting of the
parameters to avoid getting stuck in the poor lo-
cal minimal. To address this sensitivity issue, we
employed a similar approach as in (Zhang et al.,
2017b; Aldarmaki et al., 2018) to firstly used an
adversarial training approach to learnG and F and
use them as the initial point for training our full
objective 6. More specifically, we choose to mini-
mize the optimal transport distance below.

dot(G) := min
P∈U(r,c)

〈P,M (G)〉 (7)

U is the transport polytope without entropy con-
straint, defined as follows.

U = {P ∈ R+n×m|P1m = r, P T1n = c} (8)

We optimize the distance above by its dual form
and through adversarial training, which is also
known as Wasserstein GAN (WGAN) (Arjovsky
et al., 2017). We applied the optimization trick
proposed by Gulrajani et al. (2017).

Although the first phase of adversarial training
could be unstable, and the performance is lower
than using the Sinkhorn distance, the adversarial
training narrows down the search space of model
parameters and boosting the training of our pro-
posed model.

3.4 Implementation

We implemented transformation G and F by a
linear transformation. The dimension of the in-
put and output are the same with the word em-
bedding dimension d.2 For all the experiments in
the subsequent section, the β in (6) was set to be
0.1. For hyper-parameters from the computation
of Sinkhorn distance, we choose λ = 10 and run
the matrix scaling algorithm for 20 iterations. Due
to the space constraint, a detailed implementation
description is presented in the supplementary ma-
terial. The code of our implementation is publicly
available 3.

4 Experiments

We conducted an evaluation of our approach
in comparison with state-of-the-art super-
vised/unsupervised methods on several evaluation
benchmarks for bilingual lexicon induction (Task
1) and word similarity prediction (Task 2). We
include our main results in this section and report
the ablation study in the supplementary material.

4.1 Data

4.1.1 Monolingual Word Embedding Data
All the methods being evaluated in both tasks take
monolingual word embedding in each language
as the input data. We use publicly available pre-
trained word embeddings trained on Wikipedia ar-
ticles: (1) a smaller set of word embeddings of
dimension 50 trained on comparable Wikipedia
dump in five languages (Zhang et al., 2017a)4 and
(2) a larger set of word embeddings of dimen-
sion 300 trained on Wikipedia dump in 294 lan-
guages (Bojanowski et al., 2016)5. For conve-

2We tried more complex non-linear transformations for
G and F . The performance is slightly worse than the linear
case.

3Our implementation https:
//github.com/xrc10/
unsup-cross-lingual-embedding-transfer

4Available at http://nlp.csai.tsinghua.edu.
cn/˜zm/UBiLexAT

5Available at https://github.com/
facebookresearch/fastText/blob/master/
pretrained-vectors.md

https://github.com/xrc10/unsup-cross-lingual-embedding-transfer
https://github.com/xrc10/unsup-cross-lingual-embedding-transfer
https://github.com/xrc10/unsup-cross-lingual-embedding-transfer
http://nlp.csai.tsinghua.edu.cn/~zm/UBiLexAT
http://nlp.csai.tsinghua.edu.cn/~zm/UBiLexAT
https://github.com/facebookresearch/fastText/blob/master/pretrained-vectors.md
https://github.com/facebookresearch/fastText/blob/master/pretrained-vectors.md
https://github.com/facebookresearch/fastText/blob/master/pretrained-vectors.md


2470

nience, we name the two sets WE-Z and WE-C,
respectively.

4.1.2 Bilingual Lexicon Data
We need true translation pairs of words for eval-
uating methods in bilingual lexicon induction
(Task 1). We followed previous studies and pre-
pared two datasets below.

LEX-Z: Zhang et al. (2017a) constructed the
bilingual lexicons from various resources. Since
their ground truth word pairs are not released, we
followed their procedure, crawled bilingual dictio-
naries and randomly separated them into the train-
ing and testing set of equal size.6 Note that our
proposed method did not utilize the training set. It
was only used by supervised baseline methods de-
scribed in Section 4.2. There are eight language
pairs (order counted); the corresponding dataset
statistics are summarized in Table 1. We use WE-
Z embeddings in this dataset.

LEX-C: This lexicon was constructed by Conneau
et al. (2017) and contains more translation pairs
than LEX-Z. They divided them into training and
testing set. We run our model and the baseline
methods on 16 language pairs. For each language
pair, the training set contains 5, 000 unique query
words and the testing set has 1, 500 query words.
We followed Conneau et al. (2017) and set the
search space of candidate translations to be the
200, 000 most frequent words in each target lan-
guage. We use WE-C embeddings in this dataset.

4.1.3 Bilingual Word Similarity Data
For bilingual word similarity prediction (Task 2)
we need the true labels for evaluation. Fol-
lowing Conneau et al. (2017), we used the Se-
mEval 2017 competition dataset, where human
annotators measured the cross-lingual similarity
of nominal word pairs according to the five-point
Likert scale. This dataset contains word pairs
across five languages: English (en), German (de),
Spanish (es), Italian (it), and Farsi (fa). Each lan-
guage pair has about 1,000 word pairs annotated
with a real similarity score ranging from 0 to 4.

4.2 Baseline Methods

We evaluated the same set of supervised and un-
supervised baselines for comparative evaluation in

6The bilingual dictionaries we crawled are submitted as
supplementary material.

# tokens vocab. size bi. lex. size

tr-en
tr 6m 7,482 18,404
en 28m 13,220 27,327

es-en
es 61m 4,774 3,482
en 95m 6,637 10,772

zh-en
zh 21m 3,349 54,170
en 53m 5,154 51,375

it-en
it 73m 8,490 4,999
en 93m 6,597 11,812

Table 1: The statistics of LEX-Z. The languages are
Spanish (es), French (fr), Chinese (zh), Turkish (tr) and
English (en). Number of tokens is the size of training
corpus of WE-Z. The bilingual lexicon size means the
number of unique words of a language in the gold bilin-
gual lexicons.

both Task 1 and Task 2. The supervised base-
lines include the methods of Shigeto et al. (2015);
Zhang et al. (2016); Artetxe et al. (2016); Xing
et al. (2015); Mikolov et al. (2013); Artetxe et al.
(2017).7 We fed all the supervised methods with
the bilingual dictionaries in the training portions
of the LEX-Z and LEX-C datasets, respectively.

For unsupervised baselines we include the
methods of Zhang et al. (2017a) and Conneau et al.
(2017), whose source code is publicly available as
provided by the authors.8

4.3 Results in Bilingual Lexicons Induction
(Task 1)

Bilingual lexicon induction is a task to induce a
translation in the target language for each query
word in the source language. After the query word
and the target-language words are represented in
the same embedding space (or after our system
maps the query word from the source embedding
space to the target embedding space), the k near-
est target words are retrieved based on their cosine
similarity scores with respect to the query vector.
If the k retrieved target words contain any valid
translation according to the gold bilingual lexicon,
the translation (retrieval) is considered success-
ful. The fraction of the correctly translated source
words in the test set is defined as accuracy@k,

7The implementations are available from https://
github.com/artetxem/vecmap.

8We used implementation by Zhang et al. (2017a)
from http://nlp.csai.tsinghua.edu.cn/˜zm/
UBiLexAT and that of Conneau et al. (2017) from https:
//github.com/facebookresearch/MUSE

https://github.com/artetxem/vecmap.
https://github.com/artetxem/vecmap.
http://nlp.csai.tsinghua.edu.cn/~zm/UBiLexAT
http://nlp.csai.tsinghua.edu.cn/~zm/UBiLexAT
https://github.com/facebookresearch/MUSE
https://github.com/facebookresearch/MUSE


2471

Methods tr-en en-tr es-en en-es zh-en en-zh it-en en-it

Supervised

Mikolov et al. (2013) 19.41 10.81 68.73 41.19 45.88 45.37 59.83 41.26
Zhang et al. (2016) 23.39 11.07 72.36 41.19 48.01 42.66 63.19 40.37
Xing et al. (2015) 24.00 10.78 71.92 41.02 48.10 42.90 62.81 40.43
Shigeto et al. (2015) 26.56 8.52 72.23 37.80 49.95 38.15 63.14 35.63
Artetxe et al. (2016) 23.49 10.74 71.98 41.12 48.01 42.66 63.14 40.28
Artetxe et al. (2017) 22.88 10.78 72.61 41.62 47.54 42.82 61.32 39.63

Unsupervised
Conneau et al. (2017) 4.09 1.41 60.16 33.58 41.98 34.70 26.98 15.47
Zhang et al. (2017a) 15.83 7.41 63.41 37.73 42.08 41.26 54.75 37.17
Ours 23.29 9.96 73.05 41.95 49.03 44.63 61.42 39.63

Table 2: The accuracy@k scores of all methods in bilingual lexicon induction on LEX-Z. The best score for each
language pair is bold-faced for the supervised and unsupervised categories, respectively. Language pair ”A-B”
means query words are in language A and the search space of word translations is in language B. Languages are
paired among English(en), Turkish (tr), Spanish (es), Chinese (zh) and Italian (it).

Methods bg-en en-bg ca-en en-ca sv-en en-sv lv-en en-lv

Supervised

Mikolov et al. (2013) 44.80 48.47 57.73 66.20 43.73 63.73 26.53 28.93
Zhang et al. (2016) 50.60 39.73 63.40 58.73 50.87 53.93 34.53 22.87
Xing et al. (2015) 50.33 40.00 63.40 58.53 51.13 53.73 34.27 21.60
Shigeto et al. (2015) 61.00 33.80 69.33 53.60 61.27 41.67 42.20 13.87
Artetxe et al. (2016) 53.27 43.40 65.27 60.87 54.07 55.93 35.80 26.47
Artetxe et al. (2017) 47.27 34.40 61.27 56.73 38.07 44.20 24.07 12.20

Unsupervised
Conneau et al. (2017) 26.47 13.87 41.00 33.07 24.27 24.47 - -
Zhang et al. (2017a) - - - - - - - -
Ours 50.33 34.27 58.60 54.60 48.13 50.47 27.73 13.53

Table 3: The accuracy@k scores of all methods in bilingual lexicon induction on LEX-C. The best score for
each language pair is bold-faced for the supervised and unsupervised categories, respectively. Languages are
paired among English(en), Bulgarian(bg), Catalan(ca), Swedish(sv) and Latvian(lv). ”-” means that during the
training time, the model failed to converge to reasonable local minimal and hence the result is omitted in the table.

which is conventional metric in benchmark evalu-
ations.

Table 2 shows the accuracy@1 for all the meth-
ods on LEX-Z in our evaluation. We can see that
our method outperformed the other unsupervised
baselines by a large margin on all the eight lan-
guage pairs. Compared with the supervised meth-
ods, our method is still competitive (the best or the
second-best scores on four out of eight language
pairs), even ours does not require cross-lingual su-
pervision. Also, we notice the performance vari-
ance over different language pairs. Our method
outperforms all the methods (supervised and un-
supervised combined) on the English-Spanish (en-
es) pair, perhaps for the reasons that these two lan-
guages are most similar to each other, and that
the monolingual word embeddings for this pair

in the comparable corpus are better aligned than
the other language pairs. On the other hand, all
the methods including ours have the worst perfor-
mance on the English-Turkish (en-tr) pair. An-
other observation is the performance differences in
the two directions of the language pair. For exam-
ple, the performance of it-en is better than en-it for
all methods in table 2. A part of the reason is that
there are more unique English words than non-
English words in the evaluation set. This would
cause direction “xx-en” to be easier than ”en-xx”
because there are often multiple valid ground truth
English translations for each query in “xx”. But
the same may not hold for the opposite direction of
“en-xx”. Nevertheless, the relative performance of
our method compared to others is quite robust over
different language pairs and different directions of



2472

Methods de-en en-de es-en en-es fr-en en-fr it-en en-it

Supervised

Mikolov et al. (2013) 61.93 73.07 74.00 80.73 71.33 82.20 68.93 77.60
Zhang et al. (2016) 67.67 69.87 77.27 78.53 76.07 78.20 72.40 73.40
Xing et al. (2015) 67.73 69.53 77.20 78.60 76.33 78.67 72.00 73.33
Shigeto et al. (2015) 71.07 63.73 81.07 74.53 79.93 73.13 76.47 68.13
Artetxe et al. (2016) 69.13 72.13 78.27 80.07 77.73 79.20 73.60 74.47
Artetxe et al. (2017) 68.07 69.20 75.60 78.20 74.47 77.67 70.53 71.67

Unsupervised Conneau et al. (2017) 69.87 71.53 78.53 79.40 77.67 78.33 74.60 75.80
Zhang et al. (2017a) - - - - - - - -
Ours 67.00 69.33 77.80 79.53 75.47 77.93 72.60 73.47

Table 4: The accuracy@k scores of all methods in bilingual lexicon induction on LEX-C. The best score for each
language pair is bold-faced for the supervised and unsupervised categories, respectively. Languages are paired
among English (en), German (de), Spanish (es), French (fr) and Italian (it). ”-” means that during the training
time, the model failed to converge to reasonable local minimal and hence the result is omitted in the table.

translation.
Table 3 and Table 4 summarize the results of

all the methods on the LEX-C dataset. Several
points may be worth noticing. Firstly, the perfor-
mance scores on LEX-C are not necessarily con-
sistent with those on LEX-Z (Table 2) even if the
methods and the language pairs are the same; this
is not surprising as the two datasets differ in query
words, word embedding quality, and training-set
sizes. Secondly, the performance gap between
the best supervised methods and the best unsu-
pervised methods in both Table 3 and Table 4 are
larger than that in Table 2. This is attributed to
the large amount of good-quality supervision in
LEX-C (5,000 human-annotated word pairs) and
the larger candidate size in WE-C (200, 000 can-
didates). Thirdly, the average performance in Ta-
ble 3 is lower than that in Table 4, indicating that
the language pairs in the former are more difficult
than that in the latter. Nevertheless, we can see that
our method has much stronger performance than
other unsupervised methods in Table 3, i.e., on the
harder language pairs, and that it performed com-
parably with the model by Conneau et al. (2017)
in Table 4 on the easier language pairs. Combin-
ing all these observations, we see that our method
is highly robust for various language pairs and un-
der different training conditions.

4.4 Results in Cross-lingual Word Similarity
Prediction (Task 2)

We evaluate models on cross-lingual word similar-
ity prediction (Task 2) to measure how much the
predicted cross-language word similarities match

Methods de-en es-en fa-en it-en

Supervised

Mikolov et al. (2013) 0.71 0.72 0.68 0.71
Zhang et al. (2016) 0.71 0.71 0.69 0.71
Xing et al. (2015) 0.72 0.71 0.69 0.72
Shigeto et al. (2015) 0.72 0.72 0.69 0.71
Artetxe et al. (2016) 0.73 0.72 0.70 0.73
Artetxe et al. (2017) 0.70 0.70 0.67 0.71

Unsupervised
Conneau et al. (2017) 0.71 0.71 0.68 0.71
Zhang et al. (2017a) - - - -
Ours 0.71 0.71 0.67 0.71

Table 5: Performance (measured using Pearson cor-
relation) of all the methods in cross-lingual seman-
tic word similarity prediction on the benchmark data
from Conneau et al. (2017). The best score in the su-
pervised and unsupervised category is bold-faced, re-
spectively. The languages include English (en), Ger-
man (de), Spanish (es), Persian (fa) and Italian (it). ”-”
means that the model failed to converge to reasonable
local minimal during the training process.

the ground truth annotated by humans. Follow-
ing the convention in benchmark evaluations for
this task, we compute the Pearson correlation be-
tween the model-induced similarity scores and
the human-annotated similarity scores over testing
word pairs for each language pair. A higher cor-
relation score with the ground truth represents the
better quality of induced embeddings. All systems
use the cosine similarity between the transformed
embedding of each query and the word embedding
of its paired translation as the predicted similarity
score.

Table 5 summarizes the performance of all the
methods in cross-lingual word similarity predic-
tion. We can see that the unsupervised methods,



2473

including ours, perform equally well as the super-
vised methods, which is highly encouraging.

5 Conclusion

In this paper, we presented a novel method for
cross-lingual transformation of monolingual em-
beddings in an unsupervised manner. By simul-
taneously optimizing the bi-directional mappings
w.r.t. Sinkhorn distances and back-translation
losses on both ends, our model enjoys its predic-
tion power as well as robustness, with the impres-
sive performance on multiple evaluation bench-
marks. For future work, we would like to extend
this work in the semi-supervised setting where in-
sufficient bilingual dictionaries are available.

Acknowledgments

We thank the reviewers for their helpful com-
ments. This work is supported in part by De-
fense Advanced Research Projects Agency Infor-
mation Innovation Oce (I2O), the Low Resource
Languages for Emergent Incidents (LORELEI)
Program, Issued by DARPA/I2O under Contract
No. HR0011-15-C-0114, and in part by the Na-
tional Science Foundation (NSF) under grant IIS-
1546329.

References
Aldarmaki, H., Mohan, M., and Diab, M. (2018). Un-

supervised word mapping using structural similari-
ties in monolingual embeddings. Transactions of the
Association for Computational Linguistics, 6:185–
196.

Ammar, W., Mulcaire, G., Tsvetkov, Y., Lample, G.,
Dyer, C., and Smith, N. A. (2016). Massively
multilingual word embeddings. arXiv preprint
arXiv:1602.01925.

Arjovsky, M., Chintala, S., and Bottou, L. (2017).
Wasserstein gan. arXiv preprint arXiv:1701.07875.

Artetxe, M., Labaka, G., and Agirre, E. (2016). Learn-
ing principled bilingual mappings of word embed-
dings while preserving monolingual invariance. In
Proceedings of the 2016 Conference on Empirical
Methods in Natural Language Processing, pages
2289–2294.

Artetxe, M., Labaka, G., and Agirre, E. (2017). Learn-
ing bilingual word embeddings with (almost) no
bilingual data. In Proceedings of the 55th Annual
Meeting of the Association for Computational Lin-
guistics (Volume 1: Long Papers), volume 1, pages
451–462.

Barone, A. V. M. (2016). Towards cross-lingual dis-
tributed representations without parallel text trained
with adversarial autoencoders. arXiv preprint
arXiv:1608.02996.

Bojanowski, P., Grave, E., Joulin, A., and Mikolov, T.
(2016). Enriching word vectors with subword infor-
mation. arXiv preprint arXiv:1607.04606.

Cao, H., Zhao, T., Zhang, S., and Meng, Y. (2016). In
Proceedings of the 26th International Conference on
Computational Linguistics, pages 1818–1827.

Conneau, A., Lample, G., Ranzato, M., Denoyer, L.,
and Jégou, H. (2017). Word translation without par-
allel data. arXiv preprint arXiv:1710.04087.

Cuturi, M. (2013). Sinkhorn distances: Lightspeed
computation of optimal transport. In Advances in
neural information processing systems, pages 2292–
2300.

Duong, L., Kanayama, H., Ma, T., Bird, S., and
Cohn, T. (2016). Learning crosslingual word em-
beddings without bilingual corpora. arXiv preprint
arXiv:1606.09403.

Faruqui, M. and Dyer, C. (2014). Improving vector
space word representations using multilingual cor-
relation. In Proceedings of the 14th Conference of
the European Chapter of the Association for Com-
putational Linguistics, pages 462–471.

Fung, P. (1996). Compiling Bilingual Lexicon En-
tries From a Non-Parallel English-Chinese Corpus
A Non-parallel Corpus of Chinese and English. In
Proceedings of the Third Workshop on Very Large
Corpora, pages 173–183.

Goodfellow, I., Pouget-Abadie, J., Mirza, M., Xu, B.,
Warde-Farley, D., Ozair, S., Courville, A., and Ben-
gio, Y. (2014). Generative adversarial nets. In
Advances in neural information processing systems,
pages 2672–2680.

Gouws, S., Bengio, Y., and Corrado, G. (2015).
Bilbowa: Fast bilingual distributed representations
without word alignments. In International Confer-
ence on Machine Learning, pages 748–756.

Gouws, S. and Søgaard, A. (2015). Simple task-
specific bilingual word embeddings. In Proceed-
ings of the 2015 Conference of the North Ameri-
can Chapter of the Association for Computational
Linguistics: Human Language Technologies, pages
1386–1390.

Gulrajani, I., Ahmed, F., Arjovsky, M., Dumoulin, V.,
and Courville, A. C. (2017). Improved training of
wasserstein gans. In Advances in Neural Informa-
tion Processing Systems, pages 5769–5779.

Haghighi, A., Liang, P., Berg-Kirkpatrick, T., and
Klein, D. (2008). Learning bilingual lexicons from
monolingual corpora. Proceedings of ACL-08: Hlt,
pages 771–779.



2474

He, D., Xia, Y., Qin, T., Wang, L., Yu, N., Liu, T.,
and Ma, W.-Y. (2016). Dual learning for machine
translation. In Advances in Neural Information Pro-
cessing Systems, pages 820–828.

Hermann, K. M. and Blunsom, P. (2014). Multilin-
gual models for compositional distributed seman-
tics. arXiv preprint arXiv:1404.4641.

Kočiskỳ, T., Hermann, K. M., and Blunsom, P.
(2014). Learning bilingual word representations
by marginalizing alignments. arXiv preprint
arXiv:1405.0947.

Lu, A., Wang, W., Bansal, M., Gimpel, K., and
Livescu, K. (2015). Deep multilingual correlation
for improved word embeddings. In Proceedings of
the 2015 Conference of the North American Chap-
ter of the Association for Computational Linguistics:
Human Language Technologies, pages 250–256.

Mikolov, T., Chen, K., Corrado, G., and Dean, J.
(2013). Efficient estimation of word representations
in vector space. arXiv preprint arXiv:1301.3781.

Pennington, J., Socher, R., and Manning, C. (2014).
Glove: Global vectors for word representation. In
Proceedings of the 2014 conference on empirical
methods in natural language processing (EMNLP),
pages 1532–1543.

Rapp, R. (1995). Identifying Word Translations in
Non-Parallel Texts. In Proceedings of the 33rd An-
nual Meeting of the Association for Computational
Linguistics, pages 320–322.

Shen, T., Lei, T., Barzilay, R., and Jaakkola, T.
(2017). Style transfer from non-parallel text by
cross-alignment. In Advances in Neural Information
Processing Systems, pages 6833–6844.

Shigeto, Y., Suzuki, I., Hara, K., Shimbo, M., and Mat-
sumoto, Y. (2015). Ridge regression, hubness, and
zero-shot learning. In Joint European Conference
on Machine Learning and Knowledge Discovery in
Databases, pages 135–151. Springer.

Smith, S. L., Turban, D. H., Hamblin, S., and Ham-
merla, N. Y. (2017). Offline bilingual word vectors,
orthogonal transformations and the inverted soft-
max. arXiv preprint arXiv:1702.03859.

Søgaard, A., Agić, Ž., Alonso, H. M., Plank, B.,
Bohnet, B., and Johannsen, A. (2015). Inverted in-
dexing for cross-lingual nlp. In The 53rd Annual
Meeting of the Association for Computational Lin-
guistics and the 7th International Joint Conference
of the Asian Federation of Natural Language Pro-
cessing (ACL-IJCNLP 2015).

Taigman, Y., Polyak, A., and Wolf, L. (2016). Un-
supervised cross-domain image generation. arXiv
preprint arXiv:1611.02200.

Vulić, I. and Korhonen, A. (2016). On the role of seed
lexicons in learning bilingual word embeddings. In
Proceedings of the 54th Annual Meeting of the Asso-
ciation for Computational Linguistics (ACL), pages
247–257, Berlin, Germany. Association for Compu-
tational Linguistics.

Vulić, I. and Moens, M.-F. (2016). Bilingual
distributed word representations from document-
aligned comparable data. Journal of Artificial In-
telligence Research, 55:953–994.

Xing, C., Wang, D., Liu, C., and Lin, Y. (2015). Nor-
malized word embedding and orthogonal transform
for bilingual word translation. In Proceedings of the
2015 Conference of the North American Chapter of
the Association for Computational Linguistics: Hu-
man Language Technologies, pages 1006–1011.

Yi, Z., Zhang, H., Tan, P., and Gong, M. (2017). Dual-
gan: Unsupervised dual learning for image-to-image
translation. arXiv preprint.

Zhang, M., Liu, Y., Luan, H., and Sun, M. (2017a).
Adversarial training for unsupervised bilingual lex-
icon induction. In Proceedings of the 55th Annual
Meeting of the Association for Computational Lin-
guistics (Volume 1: Long Papers), volume 1, pages
1959–1970.

Zhang, M., Liu, Y., Luan, H., and Sun, M. (2017b).
Earth mover’s distance minimization for unsuper-
vised bilingual lexicon induction. In Proceedings of
the 2017 Conference on Empirical Methods in Nat-
ural Language Processing, pages 1934–1945.

Zhang, Y., Gaddy, D., Barzilay, R., and Jaakkola, T.
(2016). Ten pairs to tag-multilingual pos tagging via
coarse mapping between embeddings. Association
for Computational Linguistics.

Zhu, J.-Y., Park, T., Isola, P., and Efros, A. A. (2017).
Unpaired image-to-image translation using cycle-
consistent adversarial networks. arXiv preprint
arXiv:1703.10593.


