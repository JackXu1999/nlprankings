



















































Automatic Domain Adaptation Outperforms Manual Domain Adaptation for Predicting Financial Outcomes


Proceedings of the 57th Annual Meeting of the Association for Computational Linguistics, pages 346–359
Florence, Italy, July 28 - August 2, 2019. c©2019 Association for Computational Linguistics

346

Automatic Domain Adaptation Outperforms Manual Domain Adaptation
for Predicting Financial Outcomes

Marina Sedinkina1 Nikolas Breitkopf2 Hinrich Schütze1
1Center for Information & Language Processing, LMU Munich

2Institute for Finance & Banking, LMU Munich
sedinkina@cis.uni-muenchen.de

Abstract

In this paper, we automatically create senti-
ment dictionaries for predicting financial out-
comes. We compare three approaches: (i)
manual adaptation of the domain-general dic-
tionary H4N, (ii) automatic adaptation of H4N
and (iii) a combination consisting of first man-
ual, then automatic adaptation. In our experi-
ments, we demonstrate that the automatically
adapted sentiment dictionary outperforms the
previous state of the art in predicting the finan-
cial outcomes excess return and volatility. In
particular, automatic adaptation performs bet-
ter than manual adaptation. In our analysis,
we find that annotation based on an expert’s
a priori belief about a word’s meaning can
be incorrect – annotation should be performed
based on the word’s contexts in the target do-
main instead.

1 Introduction

Since 1934, the U.S. Securities and Exchange
Commission (SEC) mandates that public compa-
nies disclose information in form of public fil-
ings to ensure that adequate information is avail-
able to investors. One such filing is the 10-K,
the company’s annual report. It contains financial
statements and information about business strat-
egy, risk factors and legal issues. For this reason,
10-Ks are an important source of information in
the field of finance and accounting.

A common method employed by finance and
accounting researchers is to evaluate the “tone”
of a text based on the Harvard Psychosociologi-
cal Dictionary, specifically, on the Harvard-IV-4
TagNeg (H4N) word list.1 However, as its name
suggests, this dictionary is from a domain that is
different from finance, so many words (e.g., “lia-
bility”, “tax”) that are labeled as negative in H4N
are in fact not negative in finance.

1http://www.wjh.harvard.edu/˜inquirer

In a pioneering study, Loughran and Mcdon-
ald (2011) manually reclassified the words in H4N
for the financial domain. They applied the result-
ing dictionaries2 to 10-Ks and predicted financial
variables such as excess return and volatility. We
will refer to the sentiment dictionaries created by
Loughran and Mcdonald (2011) as L&M.

In this work, we also create sentiment dictio-
naries for the finance domain, but we adapt them
from the domain-general H4N dictionary automat-
ically. We first learn word embeddings from a
corpus of 10-Ks and then reclassify them – us-
ing SVMs trained on H4N labels – as negative vs.
non-negative. We refer to the resulting domain-
adapted dictionary as H4NRE.

In our experiments, we demonstrate that the au-
tomatically adapted financial sentiment dictionary
H4NRE performs better at predicting excess return
and volatility than dictionaries of Loughran and
Mcdonald (2011) and Theil et al. (2018).

We make the following contributions. (i)
We demonstrate that automatic domain adapta-
tion performs better at predicting financial out-
comes than previous work based on manual do-
main adaptation. (ii) We perform an analysis of the
differences between the classifications of L&M
and those of our sentiment dictionary H4NRE that
sheds light on the superior performance of H4NRE.
For example, H4NRE is much smaller than L&M,
consisting mostly of frequent words, suggesting
H4NRE is more robust and less prone to overfitting.
(iii) In a further detailed analysis, we investigate
words classified by L&M as negative, litigious and
uncertain that our embedding classifier classifies
otherwise; and common (i.e., non-negative) words
from H4N that L&M did not include in the cat-
egories negative, litigious and uncertain, but that
our embedding classifier classifies as belonging to
these classes. Our analysis suggests that manual

2https://sraf.nd.edu/textual-analysis/
resources

http://www.wjh.harvard.edu/~inquirer
https://sraf.nd.edu/textual-analysis/resources
https://sraf.nd.edu/textual-analysis/resources


347

adaptation of dictionaries is error-prone if annota-
tors are not given access to corpus contexts.

Our paper primarily addresses a finance appli-
cation. In empirical finance, a correct sentiment
classification decision is not sufficient – the de-
cision must also be interpretable and statistically
sound. That is why we use ordinary least squares
(OLS) – an established method in empirical fi-
nance – and sentiment dictionaries. Models based
on sentiment dictionaries are transparent and in-
terpretable: by looking at the dictionary words oc-
curring in a document we can trace the classifica-
tion decision back to the original data and, e.g.,
understand the cause of a classification error. OLS
is a well-understood statistical method that allows
the analysis of significance, effect size and depen-
dence between predictor variables, inter alia.

While we focus on finance here, three impor-
tant lessons of our work also apply to many other
domains. (1) An increasing number of applica-
tions require interpretable analysis; e.g., the Euro-
pean Union mandates that systems used for sen-
sitive applications provide explanations of deci-
sions. Decisions based on a solid statistical foun-
dation are more likely to be trusted than those
by black boxes. (2) Many NLP applications are
domain-specific and require domain-specific re-
sources including lexicons. Should such lexicons
be built manually from scratch or adapted from
generic lexicons? We provide evidence that au-
tomatic adaptation works better. (3) Words often
have specific meanings in a domain and this in-
creases the risk that a word is misjudged if only the
generic meaning is present to the annotator. This
seems to be the primary reason for the problems
of manual lexicons in our experiments. Thus, if
manual lexicon creation is the only option, then
it is important to present words in context, not in
isolation, so that the domain-specific sense can be
recognized.

2 Related Work

In empirical finance, researchers have exploited
various text resources, e.g., news (Kazemian et al.,
2016), microblogs (Cortis et al., 2017), twitter
(Zamani and Schwartz, 2017) and company dis-
closures (Nopp and Hanbury, 2015; Kogan et al.,
2009). Deep learning has been used for learn-
ing document representations (Ding et al., 2015;
Akhtar et al., 2017). However, the methodol-
ogy of empirical finance requires interpretable re-

sults. Thus, a common approach is to define fea-
tures for statistical models like Ordinary Least
Squares (Lee et al., 2014; Rekabsaz et al., 2017).
Frequently, lexicons like H4N TagNeg3 (Tetlock
et al., 2007) are used. It includes a total of
85,221 words, 4188 of which are labeled negative.
The remaining words are labeled “common”, i.e.,
non-negative. Loughran and Mcdonald (2011) ar-
gue that many words from H4N have a special-
ized meaning when appearing in an annual report.
For instance, domain-general negative words such
as “tax”, “cost”, “liability” and “depreciation” –
which predominate in 10-Ks – do not typically
have negative sentiment in 10-Ks. So Loughran
and Mcdonald (2011) constructed subjective fi-
nancial dictionaries manually, by examining all
words that appear in at least 5% of 10-Ks and clas-
sifying them based on their assessment of most
likely usage. More recently, other finance-specific
lexicons were created (Wang et al., 2013). Build-
ing on L&M, Tsai and Wang (2014) and Theil
et al. (2018) show that the L&M dictionaries can
be further improved by adding most similar neigh-
bors to words manually labeled by L&M.

Seed-based methods generalize a set of seeds
based on corpus (e.g., distributional) evidence.
Models use syntactic patterns (Hatzivassiloglou
and McKeown, 1997; Widdows and Dorow,
2002), cooccurrence (Turney, 2002; Igo and
Riloff, 2009) or label propagation on lexical
graphs derived from cooccurrence (Velikovich
et al., 2010; Huang et al., 2014).

Supervised methods start with a larger train-
ing set, not just a few seeds (Mohammad et al.,
2013). Distributed word representations (Tang
et al., 2014; Amir et al., 2015; Vo and Zhang,
2016; Rothe et al., 2016) are beneficial in this ap-
proach. For instance, Tang et al. (2014) incorpo-
rate in word embeddings a document-level senti-
ment signal. Wang and Xia (2017) also integrate
document and word levels. Hamilton et al. (2016)
learn domain-specific word embeddings and de-
rive word lists specific to domains, including the
finance domain.

Dictionary-based approaches (Takamura
et al., 2005; Baccianella et al., 2010; Vicente
et al., 2014) use hand-curated lexical resources –
often WordNet (Fellbaum, 1998) – for construct-
ing lexicons. Hamilton et al. (2016) argue that
dictionary-based approaches generate better re-

3http://www.wjh.harvard.edu/˜inquirer/

http://www.wjh.harvard.edu/~inquirer/


348

sults due to the quality of hand-curated resources.
We compare two ways of using a hand-curated
resource in this work – a general-domain resource
that is automatically adapted to the specific
domain vs. a resource that is manually created for
the specific domain – and show that automatic
domain adaptation performs better.

Apart from domain adaptation work on dic-
tionaries, many other approaches to generic do-
main adaptation have been proposed. Most of
this work adopts the classical domain adaptation
scenario: there is a large labeled training set
available in the source domain and an amount of
labeled target data that is insufficient for train-
ing a high-performing model on its own (Blitzer
et al., 2006; Chelba and Acero, 2006; Daumé III,
2009; Pan et al., 2010; Glorot et al., 2011; Chen
et al., 2012). More recently, the idea of domain-
adversarial training was introduced for the same
scenario (Ganin et al., 2016). In contrast to this
work, we do not transfer any parameters or model
structures from source to target. Instead, we use
labels from the source domain and train new mod-
els from scratch based on these labels: first em-
bedding vectors, then a classifier that is trained
on source domain labels and finally a regression
model that is trained on the classification decisions
of the classifier. This approach is feasible in our
problem setting because the divergence between
source and target sentiment labels is relatively mi-
nor, so that training target embeddings with source
labels gives good results.

The motivation for this different setup is that
our work primarily addresses a finance application
where explainability is of high importance. For
this reason, we use a model based on sentiment
dictionaries that allows us to provide explanations
of the model’s decisions and predictions.

3 Methodology

3.1 Empirical finance methodology

In this paper, we adopt Ordinary Least Squares
(OLS), a common research method in empirical
finance: a dependent variable of interest (e.g., ex-
cess return, volatility) is predicted based on a lin-
ear combination of a set of explanatory variables.

The main focus of this paper is to investigate
text-based explanatory variables: we would like
to know to what extent a text variable such as oc-
currence of negative words in a 10-K can predict
a financial variable like volatility. Identifying the

economic drivers of such a financial outcome is
of central interest in the field of finance. Some
of these determinants may be correlated with sen-
timent. To understand the role of sentiment in
explaining financial variables we therefore need
to isolate the complementary information of our
text variables. This is achieved by including in
our regressions – as control variables – a standard
set of financial explanatory variables such as firm
size and book-to-market ratio. These control vari-
ables are added as additional explanatory variables
in the regression specification besides the textual
sentiment variables. This experimental setup al-
lows us to assess the added benefit of text-based
variables in a realistic empirical finance scenario.

The approach is motivated by previous studies
in the finance literature (e.g., Loughran and Mc-
donald (2011)), which show that characteristics of
financial firms can explain variation in excess re-
turns and volatility. By including these control
variables in the regression we are able to deter-
mine whether sentiment factors have incremental
explanatory power beyond the already established
financial factors. Since the inclusion of these con-
trol variables is not primarily driven by the as-
sumption that firms with different characteristics
use different language, our approach differs from
other NLP studies, such as Hovy (2015), who ac-
counts for non-textual characteristics by training
group-specific embeddings.

Each text variable we use is based on a dictio-
nary. Its value for a 10-K is the proportion of to-
kens in the 10-K that are members of the dictio-
nary. For example, if the 10-K is 5000 tokens long
and 50 of those tokens are contained in the L&M
uncertainty dictionary, then the value of the L&M
uncertainty text variable for this 10-K is 0.01.

In the type of analysis of stock market data we
conduct, there are two general forms of depen-
dence in the residuals of a regression, which arise
from the panel structure of our data set where a
single firm is repeatedly observed over time and
multiple firms are observed at the same point in
time. Firm effect: Time-series dependence as-
sumes that the residuals of a given firm are cor-
related across years. Time effect: Cross-sectional
dependence assumes that the residuals of a given
year are correlated across different firms. These
properties violate the i.i.d. assumption of resid-
uals in standard OLS. We therefore model data
with both firm and time effects and run a two-



349

way robust cluster regression, i.e., an OLS re-
gression with standard errors that are clustered on
two dimensions (Gelbach et al., 2009), the dimen-
sions of firm and time.4 We apply this regression-
based methodology to test the explanatory power
of financial dictionaries with regard to two depen-
dent variables: excess return and volatility. This
approach allows us to compare the explanatory
power of different sentiment dictionaries and in
the process test the hypothesis that negative senti-
ment is associated with subsequently lower stock
returns and higher volatility. We now introduce
the regression specifications for these tests.

3.1.1 Excess return

The dependent variable excess return is defined
as the firm’s buy-and-hold stock return minus the
value-weighted buy-and-hold market index return
during the 4-day event window starting on the
10-K filing date, computed from prices by the
Center for Research in Security Prices (CRSP)5

(both expressed as a percentage). In addition to the
independent text variables (see §4 for details), we
include the following financial control variables.
(i) Firm size: the log of the book value of total
assets. (ii) Alpha of a Fama-French regression
(Fama and French, 1993) calculated from days
[-252 -6];6 this represents the “abnormal” return
of the asset, i.e., the part of the return not due to
common risk factors like market and firm size. (iii)
Book-to-market ratio: the log of the book value
of equity divided by the market value of equity.
(iv) Share turnover: the volume of shares traded
in days [-252 -6] divided by shares outstanding on
the filing date. (v) Earnings surprise, computed by
IBES from Thomson Reuters;7 this variable cap-
tures whether the reported financial performance
was better or worse than expected by financial an-
alysts.8

4Loughran and Mcdonald (2011) use the method of Fama
and MacBeth (1973) instead. This method assumes that the
yearly estimates of the coefficient are independent of each
other. However, this is not true when there is a firm effect.

5http://www.crsp.com
6[-252 -6] is the notation for the 252 days prior to the fil-

ing date with the last 5 days prior to the filing date excluded.
7http://www.thomsonreuters.com
8Our setup largely mirrors, but is not identical to the one

used by Loughran and Mcdonald (2011) because not all data
they used are publicly available and because we use a larger
time window (1994-2013) compared to theirs (1994-2008).

dictionary size
neglm 2355
unclm 297
litlm 903
negADD 2340
uncADD 240
litADD 984
negRE 1205
uncRE 96
litRE 208
H4NORG 4188
H4NRE 338

Table 1: Number of words per dictionary

3.1.2 Volatility
The dependent variable volatility is defined as the
post-filing root-mean-square error (RMSE) of a
Fama-French regression calculated from days [6
252]. The RMSE captures the idiosyncratic com-
ponent of the total volatility of the firm, since it
picks up the stock price variation that cannot be
explained by fluctuations of the common risk fac-
tors of the Fama-French model. The RMSE is
therefore a measure of the financial uncertainty of
the firm. In addition to the independent text vari-
ables (see §4 for details), we include the following
financial control variables. (i) Pre-filing RMSE
and (ii) pre-filing alpha of a Fama-French regres-
sion calculated from days [-252 -6]; these char-
acterize the financial uncertainty and abnormal re-
turn of the firm in the past (see §3.1.1 for alpha and
first sentence of this section for RMSE). (iii) Fil-
ing abnormal return; the value of the buy-and-hold
return in trading days [0 3] minus the buy-and-
hold return of the market index. (iv) Firm size and
(v) book-to-market ratio (the same as in §3.1.1).
(vi) Calendar year dummies and Fama-French 48-
industry dummies to allow for time and industry
fixed effects.9

3.2 NLP methodology

There are two main questions we want to answer:
Q1. Is a manually domain-adapted or an au-

tomatically domain-adapted dictionary a more ef-
fective predictor of financial outcomes?

Q2. L&M adapted H4N for the financial do-
main and showed that this manually adapted dic-
tionary is more effective than H4N for prediction.
Can we further improve L&M’s manual adaptation

9We do not include in the regression a Nasdaq dummy
variable indicating whether the firm is traded on Nasdaq.
Since Nasdaq mainly lists tech companies, the Nasdaq effect
is already captured by industry dummies.

http://www.crsp.com
http://www.thomsonreuters.com


350

by automatic domain adaptation?
The general methodology we employ for do-

main adaptation is based on word embeddings.
We train CBOW word2vec (Mikolov et al., 2013)
word embeddings on a corpus of 10-Ks for all
words of H4N that occur in the corpus – see §4
for details. We consider two adaptations: ADD
and RE. ADD is only used to answer question Q2.

ADD. For adapting the L&M dictionary, we
train an SVM on an L&M dictionary in which
words are labeled +1 if they are marked for the
category by L&M and labeled -1 otherwise (where
the category is negative, uncertain or litigious).
Each word is represented as its embedding. We
then run the SVM on all H4N words that are not
contained in the L&M dictionary. We also ignore
H4N words that we do not have embeddings for
because their frequency is below the word2vec fre-
quency threshold. Thus, we obtain an ADD dictio-
nary which is not a superset of the L&M lexicon
because it includes only new additional words that
are not part of the original dictionary.

SVM scores are converted into probabilities via
logistic regression. We define a confidence thresh-
old θ – we only want to include words in the ADD
dictionary that are reliable indicators of the cate-
gory of interest. A word is added to the dictionary
if its converted SVM score is greater than θ.

RE. We train SVMs as for ADD, but this time
in a five-fold cross validation setup. Again, SVM
scores are converted into probabilities via logistic
regression. A word w becomes a member of the
adapted dictionary if its converted SVM score of
the SVM that was not trained on the fold that con-
tains w is greater than θ.

To answer our first question Q1: “Is automatic
or manual adaptation better?”, we apply adapta-
tion method RE to H4N and compare the results
to the L&M dictionaries.

To answer our second question Q2: “Can man-
ual adaptation be further improved by automatic
adaptation?”, we apply adaptation methods RE
and ADD to the three dictionaries compiled by
L&M and compare results for original and adapted
L&M dictionaries: (i) negative (abbreviated as
“neg”), (ii) uncertain (abbreviated as “unc”), (iii)
litigious (abbreviated as “lit”). Our goals here
are to improve the in-domain L&M dictionaries
by relabeling them using adaptation method RE
and to find new additional words using adaptation
method ADD.

Table 1 gives dictionary sizes.

4 Experiments and results

We downloaded 206,790 10-Ks for years 1994 to
2013 from the SEC’s database EDGAR.10 Table of
contents, page numbers, links and numeric tables
are removed in preprocessing and only the main
body of the text is retained. Documents are split
into sections. Sections that are not useful for tex-
tual analysis (e.g., boilerplate) are deleted.

To construct the final sample, we apply the fil-
ters defined by L&M (Loughran and Mcdonald,
2011): we require a match with CRSP’s perma-
nent identifier PERMNO, the stock to be common
equity, a stock pre-filing price of greater than $3,
a positive book-to-market, as well as CRSP’s mar-
ket capitalization and stock return data available
at least 60 trading days before and after the fil-
ing date. We only keep firms traded on Nasdaq,
NYSE or AMEX and whose filings contain at least
2000 words. This procedure results in a corpus
of 60,432 10-Ks. We tokenize (using NLTK) and
lowercase this corpus and remove punctuation.

We use word2vec CBOW with hierarchical soft-
max to learn word embeddings from the corpus.
We set the size of word vectors to 400 and run one
training iteration; otherwise we use word2vec’s
default hyperparameters. SVMs are trained on
word embeddings as described in §3.2. We set the
threshold θ to 0.8, so only words with converted
SVM scores greater than 0.8 will be added to dic-
tionaries.11

As described in §3, we compare manually
adapted and automatically adapted dictionaries
(Q1) and investigate whether automatic adaptation
of manually adapted dictionaries further improves
performance (Q2). Our experimental setup is Or-
dinary Least Squares (OLS), more specifically, a
two-way robust cluster regression for the time and
firm effects. The dependent financial variable is
excess return or volatility. We include several in-
dependent financial variables in the regression as
well as one or more text variables. The value of
the text variable for a category is the proportion of
tokens from the category that occur in a 10-K.

To assess the utility of a text variable for pre-
dicting a financial outcome, we look at signifi-
cance and the standardized regression coefficient

10https://www.sec.gov/edgar.shtml
11We choose this threshold because the proportion of nega-

tive, litigious and uncertain words in 10-Ks for 0.8 is roughly
the same as when using L&M dictionaries.



351

var coeff std coeff t R2

neglm -0.202** -0.080 -2.56 1.02
litlm -0.0291 -0.026 -0.83 1.00
unclm -0.215* -0.064 -1.91 1.01
H4NRE -0.764*** -0.229 -3.04 1.05

*p ≤ 0.05, **p ≤ 0.01, ***p ≤ 0.001

Table 2: Excess return regression results for L&M dic-
tionaries and reclassified H4N dictionary. For all ta-
bles in this paper, significant t values are bolded and
best standard coefficients per category are in italics.

var coeff std coeff t R2

H4NRE -0.88** -0.264 -2.19 1.05
neglm 0.062 0.024 0.48
H4NRE -0.757*** -0.227 -2.90 1.05
litlm -0.351 -0.315 -0.013
H4NRE -0.746*** -0.223 -2.89 1.05
unclm -0.45 -0.135 -0.45

*p ≤ 0.05, **p ≤ 0.01, ***p ≤ 0.001

Table 3: Excess return regression results for multiple
text variables. This table shows results for three regres-
sions that combine H4NRE with each of the three L&M
dictionaries.

(the product of regression coefficient and standard
deviation). If a result is significant, then it is un-
likely that the result is due to chance. The stan-
dardized coefficient measures the effect size, nor-
malized for different value ranges of variables. It
can be interpreted as the expected change in the
dependent variable if the independent variable in-
creases by one standard deviation. The standard-
ized coefficient allows a fair comparison between
a text variable that, on average, has high values
(many tokens per document) with one that, on av-
erage, has low values (few tokens per document).

4.1 Excess Return

Table 2 gives regression results for excess re-
turn, comparing H4NRE (our automatic adaptation
of the general Harvard dictionary) with the three
manually adapted L&M dictionaries. As expected
the coefficients are negatively signed – 10-Ks con-
taining a high percentage of pessimistic words are
associated with negative excess returns.

L&M designed the dictionary neglm specifically
for measuring negative information in a 10-K that
may have a negative effect on outcomes like ex-
cess return. So it is not surprising that neglm is
the best performing dictionary of the three L&M
dictionaries: it has the highest standard coefficient
(-0.080) and the highest significance (-2.56). unclm
performs slightly worse, but is also significant.

var coeff std coeff t R2

neglm -0.202** -0.080 -2.56 1.02
negspec 0.0102 0.0132 0.27 1.00
negRE -0.37*** -0.111 -2.96 1.03
negADD -0.033 -0.0231 -1.03 1.00
negRE+ADD -0.08** -0.072 -2.19 1.03
litlm -0.0291 -0.026 -0.83 1.00
litRE -0.056 -0.028 -0.55 1.00
litADD -0.0195 -0.0156 -0.70 1.00
litRE+ADD -0.0163 -0.0211 -0.69 1.00
unclm -0.215* -0.064 -1.91 1.01
uncRE -0.377*** -0.075 -2.77 1.02
uncADD 0.0217 0.0065 0.21 1.00
uncRE+ADD -0.0315 -0.0157 -0.45 1.00

*p ≤ 0.05, **p ≤ 0.01, ***p ≤ 0.001

Table 4: Excess return regression results for L&M, RE
and ADD dictionaries

However, when comparing the three L&M dic-
tionaries with H4NRE, the automatically adapted
Harvard dictionary, we see that H4NRE performs
clearly better: it is highly significant and its stan-
dard coefficient is larger by a factor of more than
2 compared to neglm. This evidence suggests that
the automatically created H4NRE dictionary has a
higher explanatory power for excess returns than
the manually created L&M dictionaries. This pro-
vides an initial answer to question Q1: in this case,
automatic adaptation beats manual adaptation.

Table 3 shows manual plus automatic experi-
ments with multiple text variables in one regres-
sion, in particular, the combination of H4NRE with
each of the L&M dictionaries. We see that the
explanatory power of L&M variables is lost after
we additionally include H4NRE in a regression: all
three L&M variables are not significant. In con-
trast, H4NRE continues to be significant in all ex-
periments, with large standard coefficients. More
manual plus automatic experiments can be found
in the appendix. These experiments further con-
firm that automatic is better than manual adapta-
tion.

Table 4 shows results for automatically adapt-
ing the L&M dictionaries.12 The subscript
“RE+ADD” refers to a dictionary that merges RE
and ADD; e.g., negRE+ADD is the union of negRE
and negADD.

We see that for each category (neg, lit and unc),
the automatically adapted dictionary performs bet-
ter than the original manually adapted dictionary;
e.g., the standard coefficient of negRE is -0.111,

12Experiments with multiple text variables in one regres-
sion (manual plus automatic experiments) are presented in
the appendix.



352

var coeff std coeff t R2

neglm 0.118*** 0.0472 3.30 60.1
litlm -0.0081 -0.0073 -0.62 60.0
unclm 0.119* 0.0356 2.25 60.0
H4NRE 0.577*** 0.173 4.40 60.3

*p ≤ 0.05, **p ≤ 0.01, ***p ≤ 0.001

Table 5: Volatility regression results for L&M dictio-
naries and reclassified H4N dictionary

var coeff std coeff t R2

H4NRE 0.748*** 0.224 4.44 1.11
neglm -0.096* -0.038 -2.55
H4NRE 0.642*** 0.192 4.28 1.11
litlm -0.041* -0.037 -2.54
H4NRE 0.695*** 0.208 4.54 1.11
unclm -0.931** -0.279 -2.73

*p ≤ 0.05, **p ≤ 0.01, ***p ≤ 0.001

Table 6: Volatility regression results for multiple text
variables

clearly better than that of neglm (-0.080). Results
are significant for negRE (-2.96) and uncRE (-2.77).
We also evaluate negspec, the negative word list of
Hamilton et al. (2016). negspec does not perform
well: it is not significant.

These results provide a partial answer to ques-
tion Q2: for excess return, automatic adaptation of
L&M’s manually adapted dictionaries further im-
proves their performance.

4.2 Volatility

Table 5 compares H4NRE and L&M regression re-
sults for volatility. Except for litigious, the coef-
ficients are positive, so the greater the number of
pessimistic words, the greater the volatility.

Results for neglm, unclm and H4NRE are statis-
tically significant. The best L&M dictionary is
again neglm with standard coefficient 0.0472 and
t = 3.30. However, H4NRE has the highest ex-
planatory value for volatility. Its standard coeffi-
cient (0.173) is more than three times as large as
that of neglm.

The higher effect size demonstrates that H4NRE
better explains volatility than the L&M dictionar-
ies. Again, this indicates – answering question Q1
– that automatic outperforms manual adaptation.
Table 6 confirms this. We see that for manual
plus automatic experiments each combination of
H4NRE with one of the L&M dictionaries provides
significant results for H4NRE. In contrast, L&M
dictionaries become negatively signed meaning
that more uncertain words decrease volatility, sug-

var coeff std coeff t R2

neglm 0.118*** 0.0472 3.30 60.1
negspec -0.038 -0.0494 -2.73 60.1
negRE 0.219*** 0.0657 3.57 60.1
negADD 0.032*** 0.0224 4.06 60.0
negRE+ADD 0.038*** 0.0342 4.32 60.1
litlm -0.0081 -0.0073 -0.62 60.0
litRE 0.0080 0.0040 0.20 60.0
litADD 0.028 0.0224 1.07 60.0
litRE+ADD 0.015 0.0195 0.81 60.0
unclm 0.119* 0.0356 2.25 60.0
uncspec -0.043 -0.0344 -1.56 60.0
uncRE 0.167* 0.0334 2.30 60.0
uncADD -0.013 -0.0039 -0.17 60.0
uncRE+ADD 0.035 0.0175 0.68 60.0

*p ≤ 0.05, **p ≤ 0.01, ***p ≤ 0.001

Table 7: Volatility regression results for L&M, RE and
ADD dictionaries

gesting that they are not indicative of the true re-
lationship between volatility and negative tone in
10-Ks in this regression setup. Our results of addi-
tional manual plus automatic experiments support
this observation as well. See the appendix for an
illustration.

Table 7 gives results for automatically adapting
the L&M dictionaries.13 For neg, the standard co-
efficient of negRE is 0.0657, better by about 40%
than neglm’s standard coefficient of 0.0472. negspec
does not provide significant results and has the
negative sign, i.e., an increase of negative words
decreases volatility. The lit dictionaries are not
significant (neither L&M nor adapted dictionar-
ies). For unc, uncRE performs worse than unclm,
but only slightly by 0.0344 vs. 0.0356 for the
standard coefficients. The overall best result is
negRE (standard coefficient 0.0657). Even though
L&M designed the unclm dictionary specifically
for volatility, our results indicate that neg dictio-
naries perform better than unc dictionaries, both
for L&M dictionaries (neglm) and their automatic
adaptations (e.g., negRE).

Table 7 also evaluates uncspec, the uncertainty
dictionary of Theil et al. (2018). uncspec does not
perform well: it is not significant and the coeffi-
cient has the “wrong” sign.14

The main finding supported by Table 7 is that

13Experiments with multiple text variables in one regres-
sion (manual plus automatic experiments) are presented in
the appendix.

14Theil et al. (2018) define volatility for the time period [6
28] whereas our definition is [6 252], based on (Loughran and
Mcdonald, 2011). Larger time windows allow more reliable
estimates and account for the fact that information disclosures
can influence volatility for long periods (Belo et al., 2016).



353

ADDneg missing, diminishment, disabling, overuse
ADDunc reevaluate, swings, expectation, estimate
ADDlit lender, assignors, trustee, insurers
REneg confusion, unlawful, convicted, breach
REunc variability, fluctuation, variations, variation
RElit courts, crossclaim, conciliation, abeyance
H4NRE compromise, issues, problems, impair, hurt

Table 8: Word classification examples from automati-
cally adapted dictionaries

the best automatic adaptation of an L&M dictio-
nary gives rise to more explanatory power than the
best L&M dictionary, i.e., negRE performs better
than neglm. This again confirms our answer to Q2:
we can further improve manual adaptation by au-
tomatic domain adaptation.

5 Analysis and discussion

5.1 Qualitative Analysis

Our dictionaries outperform L&M. In this section,
we perform a qualitative analysis to determine the
reasons for this discrepancy in performance.

Table 8 shows words from automatically
adapted dictionaries. Recall that the ADD method
adds words that L&M classified as nonrelevant for
a category. So words like “missing” (neg), “reeval-
uate” (unc) and “assignors” (lit) were classified as
relevant terms and seem to connote negativity, un-
certainty and litigiousness, respectively, in finan-
cial contexts.

In L&M’s classification scheme, a word can be
part of several different categories. For instance,
L&M label “unlawful”, “convicted” and “breach”
both as litigious and as negative. When apply-
ing our RE method, these words were only classi-
fied as negative, not as litigious. Similarly, L&M
label “confusion” as negative and uncertain, but
automatic RE adaptation labels it only negative.
This indicates that there is strong distributional ev-
idence in the corpus for the category negativity,
but weaker distributional evidence for litigious and
uncertain. For our application, only “negative”
litigious/uncertain words are of interest – “acquit-
tal” (positive litigious) and “suspense” (positive
uncertain) are examples of positive words that may
not help in predicting financial variables. This
could explain why the negative category fares bet-
ter in our adaptation than the other two.

An interesting case study for RE is “abeyance”.
L&M classify it as uncertain, automatic adapta-
tion as litigious. Even though “abeyance” has a

domain-general uncertain sense (“something that
is waiting to be acted upon”), it is mostly used
in legal contexts in 10-Ks: “held in abeyance”,
“appeal in abeyance”. The nearest neighbors of
“abeyance” in embedding space are also litigious
words: “stayed”, “hearings”, “mediation”.

H4NRE contains 74 words that are “common” in
H4N. Examples include “compromise”, “serious”
and “god”. The nearest neighbors of “compro-
mise” in the 10-K embedding space are the neg-
ative terms “misappropriate”, “breaches”, “jeop-
ardize”. In a general-domain embedding space,15

the nearest neighbors of “compromise” include
“negotiated settlement”, “accord” and “modus
vivendi”. This example suggests that “compro-
mise” is used in 10-Ks in negative contexts and
in the general domain in positive contexts. This
also illustrates the importance of domain-specific
word embeddings that capture domain-specific in-
formation.

Another interesting example is the word “god”;
it is frequently used in 10-Ks in the phrase “act
of God”. Its nearest neighbors in the 10-K em-
bedding space are “terrorism” and “war”. This
example clearly demonstrates that annotators are
likely to make mistakes when they annotate words
for sentiment without seeing their contexts. Most
annotators would annotate “god” as positive, but
when presented with the typical context in 10-Ks
(“act of God”), they would be able to correctly
classify it.

We conclude that manual annotation of words
without context based on the prior belief an an-
notator has about word meanings is error-prone.
Our automatic adaptation is performed based on
the word’s contexts in the target domain and there-
fore not susceptible to this type of error.

5.2 Quantitative Analysis

Table 9 presents a quantitative analysis of the dis-
tribution of words over dictionaries. For a row
dictionary dr and a column dictionary dc, a cell
gives |dr ∩ dc|/|dr| as a percentage. (Diagonal
entries are all equal to 100% and are omitted for
space reasons.) For example, 49% of the words
in neglm are also members of negRE (row “neglm”,
column “negRE”). This analysis allows us to ob-
tain insights into the relationship between differ-
ent dictionaries and into the relationship between

15https://code.google.com/archive/p/
word2vec/

https://code.google.com/archive/p/word2vec/
https://code.google.com/archive/p/word2vec/


354

ne
g l

m
lit

lm
un

c l
m

ne
g A

D
D

lit
A

D
D

un
c A

D
D

ne
g R

E
lit

R
E

un
c R

E

H
4N

ne
g

H
4N

cm
n

H
4N

R
E

neglm 7 2 0 0 0 49 2 0 48 52 12
litlm 17 0 0 0 0 6 20 0 7 93 1
unclm 14 0 0 0 0 18 2 30 16 84 2
negADD 0 0 0 0 0 0 0 0 18 82 2
litADD 0 0 0 0 0 0 0 0 1 99 0
uncADD 0 0 0 0 0 0 0 0 3 97 0
negRE 95 5 4 0 0 0 0 1 52 48 21
litRE 18 86 2 0 0 0 0 0 7 93 0
uncRE 11 2 92 0 0 0 10 0 13 87 3
H4Nneg 27 2 1 10 0 0 15 0 0 0 6
H4Ncmn 2 1 0 2 1 0 1 0 0 0 0
H4NRE 79 2 2 17 0 0 74 0 1 78 22

Table 9: Quantitative analysis of dictionaries. For a
row dictionary dr and a column dictionary dc, a cell
gives |dr ∩ dc|/|dr| as a percentage. Diagonal entries
(all equal to 100%) omitted for space reasons. cmn =
common

the categories negative, litigious and uncertain.
Looking at rows neglm, litlm and unclm first, we

see how L&M constructed their dictionaries. neglm
words come from H4Nneg and H4Ncmn in about
equal proportions; i.e., many words that are “com-
mon” in ordinary usage were classified as nega-
tive by L&M for financial text. Relatively few litlm
and unclm words are taken from H4Nneg, most are
from H4Ncmn. Only 12% of neglm words were au-
tomatically classified as negative in domain adap-
tation and assigned to H4NRE. This is a surpris-
ingly low number. Given that H4NRE performs
better than neglm in our experiments, this statistic
casts serious doubt on the ability of human anno-
tators to correctly classify words for the type of
sentiment analysis that is performed in empirical
finance if the actual corpus contexts of the words
are not considered. We see two types of failures
in the human annotation. First, as discussed in
§5.1, words like “god” are misclassified because
the prevalent context in 10-Ks (“act of God”) is
not obvious to the annotator. Second, the utility
of a word is not only a function of its sentiment,
but also of the strength of this sentiment. Many
words in neglm that were deemed neutral in auto-
matic adaptation are probably words that may be
slightly negative, but that do not contribute to ex-
plaining financial variables like excess return. The
strength of sentiment of a word is difficult to judge
by human annotators. Looking at the row H4NRE,
we see that most of its words are taken from neglm
(79%) and a few from litlm and unclm (2% each).
We can interpret this statistic as indicating that

L&M had high recall (they found most of the re-
liable indicators), but low precision (see the previ-
ous paragraph: only 12% of their negative words
survive in H4NRE). The distribution of H4NRE
words over H4Nneg and H4Ncmn is 78:22. This
confirms the need for domain adaptation: many
general-domain common words are negative in the
financial domain.

We finally look at how dictionaries for negative,
litigious and uncertain overlap, separately for the
L&M, ADD and RE dictionaries. litlm and unclm
have considerable overlap with neglm (17% and
14%), but they do not overlap with each other.
The three ADD dictionaries – negADD, litADD and
uncADD – do not overlap at all. As for RE, 10%
of the words of uncRE are also in negRE, otherwise
there is no overlap between RE dictionaries. Com-
paring the original L&M dictionaries and the au-
tomatically adapted ADD and RE dictionaries, we
see that the three categories – negative, litigious
and uncertain – are more clearly distinguished af-
ter adaptation. L&M dictionaries overlap more,
ADD and RE dictionaries overlap less.

6 Conclusion

In this paper, we automatically created sentiment
dictionaries for predicting financial outcomes. In
our experiments, we demonstrated that the au-
tomatically adapted sentiment dictionary H4NRE
outperforms the previous state of the art in pre-
dicting the financial outcomes excess return and
volatility. In particular, automatic adaptation per-
forms better than manual adaptation. Our quan-
titative and qualitative study provided insight into
the semantics of the dictionaries. We found that
annotation based on an expert’s a priori belief
about a word’s meaning can be incorrect – annota-
tion should be performed based on the word’s con-
texts in the target domain instead. In the future, we
plan to investigate whether there are changes over
time that significantly impact the linguistic charac-
teristics of the data, in the simplest case changes in
the meaning of a word. Another interesting topic
for future research is the comparison of domain
adaptation based on our domain-specific word em-
beddings vs. based on word embeddings trained
on much larger corpora.

Acknowledgments

We are grateful for the support of the European
Research Council for this work (ERC #740516).



355

References
Md Shad Akhtar, Abhishek Kumar, Deepanway

Ghosal, Asif Ekbal, and Pushpak Bhattacharyya.
2017. A multilayer perceptron based ensemble tech-
nique for fine-grained financial sentiment analysis.
In Proceedings of the 2017 Conference on Empiri-
cal Methods in Natural Language Processing, pages
540–546. Association for Computational Linguis-
tics.

Silvio Amir, Wang Ling, Ramón Fernández Astudillo,
Bruno Martins, Mário J. Silva, and Isabel Tran-
coso. 2015. INESC-ID: A regression model for
large scale twitter sentiment lexicon induction. In
SemEval@NAACL-HLT, pages 613–618. The Asso-
ciation for Computer Linguistics.

Stefano Baccianella, Andrea Esuli, and Fabrizio Sebas-
tiani. 2010. Sentiwordnet 3.0: An enhanced lexical
resource for sentiment analysis and opinion mining.
In LREC. European Language Resources Associa-
tion.

Frederico Belo, Jun Li, Xiaoji Lin, and Xiaofei Zhao.
2016. Complexity and information content of finan-
cial disclosures: Evidence from evolution of uncer-
tainty following 10-k filings. SSRN.

John Blitzer, Ryan McDonald, and Fernando Pereira.
2006. Domain adaptation with structural correspon-
dence learning. In Proceedings of the 2006 confer-
ence on empirical methods in natural language pro-
cessing, pages 120–128. Association for Computa-
tional Linguistics.

Ciprian Chelba and Alex Acero. 2006. Adaptation of
maximum entropy capitalizer: Little data can help a
lot. Computer Speech & Language, 20(4):382–399.

Minmin Chen, Zhixiang Xu, Kilian Weinberger, and
Fei Sha. 2012. Marginalized denoising autoen-
coders for domain adaptation. arXiv preprint
arXiv:1206.4683.

Keith Cortis, André Freitas, Tobias Daudert, Manuela
Huerlimann, Manel Zarrouk, Siegfried Handschuh,
and Brian Davis. 2017. Semeval-2017 task 5: Fine-
grained sentiment analysis on financial microblogs
and news. In Proceedings of the 11th International
Workshop on Semantic Evaluation (SemEval-2017),
pages 519–535. Association for Computational Lin-
guistics.

Hal Daumé III. 2009. Frustratingly easy domain adap-
tation. arXiv preprint arXiv:0907.1815.

Xiao Ding, Yue Zhang, Ting Liu, and Junwen Duan.
2015. Deep learning for event-driven stock predic-
tion. In Proceedings of the 24th International Con-
ference on Artificial Intelligence, IJCAI’15, pages
2327–2333. AAAI Press.

Eugene F. Fama and Kenneth R. French. 1993. Com-
mon risk factors in the returns on stocks and bonds.
Journal of Financial Economics, 33(1):3 – 56.

Eugene F Fama and James D MacBeth. 1973. Risk,
return, and equilibrium: Empirical tests. Journal
ter%20Dictionaryof political economy, 81(3):607–
636.

Christiane Fellbaum, editor. 1998. WordNet: an elec-
tronic lexical database. MIT Press.

Yaroslav Ganin, Evgeniya Ustinova, Hana Ajakan,
Pascal Germain, Hugo Larochelle, François Lavi-
olette, Mario Marchand, and Victor Lempitsky.
2016. Domain-adversarial training of neural net-
works. The Journal of Machine Learning Research,
17(1):2096–2030.

Jonah B Gelbach, Doug Miller, et al. 2009. Robust in-
ference with multi-way clustering. Technical report,
National Bureau of Economic Research.

Xavier Glorot, Antoine Bordes, and Yoshua Bengio.
2011. Domain adaptation for large-scale sentiment
classification: A deep learning approach. In Pro-
ceedings of the 28th international conference on ma-
chine learning (ICML-11), pages 513–520.

William L. Hamilton, Kevin Clark, Jure Leskovec, and
Dan Jurafsky. 2016. Inducing domain-specific sen-
timent lexicons from unlabeled corpora. CoRR,
abs/1606.02820.

Vasileios Hatzivassiloglou and Kathleen R. McKeown.
1997. Predicting the semantic orientation of ad-
jectives. In Proceedings of the Eighth Conference
on European Chapter of the Association for Com-
putational Linguistics, EACL ’97, pages 174–181,
Stroudsburg, PA, USA. Association for Computa-
tional Linguistics.

Dirk Hovy. 2015. Demographic factors improve clas-
sification performance. In Proceedings of the 53rd
Annual Meeting of the Association for Computa-
tional Linguistics and the 7th International Joint
Conference on Natural Language Processing (Vol-
ume 1: Long Papers), volume 1, pages 752–762.

Sheng Huang, Zhendong Niu, and Chongyang Shi.
2014. Automatic construction of domain-specific
sentiment lexicon based on constrained label prop-
agation. Knowl.-Based Syst., 56:191–200.

Sean P. Igo and Ellen Riloff. 2009. Corpus-based se-
mantic lexicon induction with web-based corrobora-
tion. In Proceedings of the Workshop on Unsuper-
vised and Minimally Supervised Learning of Lexi-
cal Semantics, UMSLLS ’09, pages 18–26, Strouds-
burg, PA, USA. Association for Computational Lin-
guistics.

Siavash Kazemian, Shunan Zhao, and Gerald Penn.
2016. Evaluating sentiment analysis in the context
of securities trading. In ACL (1). The Association
for Computer Linguistics.

Shimon Kogan, Dimitry Levin, Bryan R. Routledge,
Jacob S. Sagi, and Noah A. Smith. 2009. Predict-
ing risk from financial reports with regression. In

https://doi.org/10.18653/v1/D17-1057
https://doi.org/10.18653/v1/D17-1057
http://nmis.isti.cnr.it/sebastiani/Publications/LREC10.pdf
http://nmis.isti.cnr.it/sebastiani/Publications/LREC10.pdf
https://doi.org/10.18653/v1/S17-2089
https://doi.org/10.18653/v1/S17-2089
https://doi.org/10.18653/v1/S17-2089
http://dl.acm.org/citation.cfm?id=2832415.2832572
http://dl.acm.org/citation.cfm?id=2832415.2832572
https://doi.org/https://doi.org/10.1016/0304-405X(93)90023-5
https://doi.org/https://doi.org/10.1016/0304-405X(93)90023-5
https://doi.org/10.3115/979617.979640
https://doi.org/10.3115/979617.979640
http://dl.acm.org/citation.cfm?id=1641968.1641971
http://dl.acm.org/citation.cfm?id=1641968.1641971
http://dl.acm.org/citation.cfm?id=1641968.1641971


356

HLT-NAACL, pages 272–280. The Association for
Computational Linguistics.

Heeyoung Lee, Mihai Surdeanu, Bill MacCartney, and
Dan Jurafsky. 2014. On the importance of text anal-
ysis for stock price prediction. In Proceedings of
the 9th International Conference on Language Re-
sources and Evaluation, LREC 2014, pages 1170–
1175. European Language Resources Association
(ELRA).

Tim Loughran and Bill Mcdonald. 2011. When is a
liability not a liability? textual analysis, dictionaries,
and 10-ks. The Journal of Finance, 66(1):35–65.

Tomas Mikolov, Ilya Sutskever, Kai Chen, Greg S Cor-
rado, and Jeff Dean. 2013. Distributed representa-
tions of words and phrases and their composition-
ality. In C. J. C. Burges, L. Bottou, M. Welling,
Z. Ghahramani, and K. Q. Weinberger, editors, Ad-
vances in Neural Information Processing Systems
26, pages 3111–3119. Curran Associates, Inc.

Saif Mohammad, Svetlana Kiritchenko, and Xiaodan
Zhu. 2013. Nrc-canada: Building the state-of-the-
art in sentiment analysis of tweets. In Second Joint
Conference on Lexical and Computational Seman-
tics (*SEM), Volume 2: Proceedings of the Sev-
enth International Workshop on Semantic Evalua-
tion (SemEval 2013), pages 321–327. Association
for Computational Linguistics.

Clemens Nopp and Allan Hanbury. 2015. Detecting
risks in the banking system by sentiment analysis.
In Proceedings of the 2015 Conference on Empiri-
cal Methods in Natural Language Processing, pages
591–600. Association for Computational Linguis-
tics.

Sinno Jialin Pan, Xiaochuan Ni, Jian-Tao Sun, Qiang
Yang, and Zheng Chen. 2010. Cross-domain senti-
ment classification via spectral feature alignment. In
Proceedings of the 19th international conference on
World wide web, pages 751–760. ACM.

Navid Rekabsaz, Mihai Lupu, Artem Baklanov,
Alexander Dür, Linda Andersson, and Allan Han-
bury. 2017. Volatility prediction using financial dis-
closures sentiments with word embedding-based IR
models. In Proceedings of the 55th Annual Meet-
ing of the Association for Computational Linguis-
tics, ACL 2017, Vancouver, Canada, July 30 - August
4, Volume 1: Long Papers, pages 1712–1721.

Sascha Rothe, Sebastian Ebert, and Hinrich Schütze.
2016. Ultradense word embeddings by orthogonal
transformation. In Proceedings of the 2016 Confer-
ence of the North American Chapter of the Associ-
ation for Computational Linguistics: Human Lan-
guage Technologies, pages 767–777. Association for
Computational Linguistics.

Hiroya Takamura, Takashi Inui, and Manabu Okumura.
2005. Extracting semantic orientations of words us-
ing spin model. In Proceedings of the 43rd An-

nual Meeting on Association for Computational Lin-
guistics, ACL ’05, pages 133–140, Stroudsburg, PA,
USA. Association for Computational Linguistics.

Duyu Tang, Furu Wei, Bing Qin, Ming Zhou, and Ting
Liu. 2014. Building large-scale twitter-specific sen-
timent lexicon : A representation learning approach.
In COLING.

Paul C. Tetlock, Maytal Saar-tsechansky, and Sofus
Macskassy. 2007. More than words: Quantifying
language to measure firms ’ fundamentals.

Christoph Kilian Theil, Sanja Stajner, and Heiner
Stuckenschmidt. 2018. Word embeddings-based un-
certainty detection in financial disclosures. In Pro-
ceedings of the First Workshop on Economics and
Natural Language Processing, pages 32–37. Asso-
ciation for Computational Linguistics.

Ming-Feng Tsai and Chuan-Ju Wang. 2014. Finan-
cial keyword expansion via continuous word vector
representations. In Proceedings of the 2014 Con-
ference on Empirical Methods in Natural Language
Processing (EMNLP), pages 1453–1458. Associa-
tion for Computational Linguistics.

Peter D. Turney. 2002. Thumbs up or thumbs down?:
Semantic orientation applied to unsupervised classi-
fication of reviews. In Proceedings of the 40th An-
nual Meeting on Association for Computational Lin-
guistics, ACL ’02, pages 417–424, Stroudsburg, PA,
USA. Association for Computational Linguistics.

Leonid Velikovich, Sasha Blair-Goldensohn, Kerry
Hannan, and Ryan T. McDonald. 2010. The vi-
ability of web-derived polarity lexicons. In HLT-
NAACL.

Iñaki San Vicente, Rodrigo Agerri, and German Rigau.
2014. Simple, robust and (almost) unsupervised
generation of polarity lexicons for multiple lan-
guages. In EACL.

Duy Tin Vo and Yue Zhang. 2016. Don’t count, pre-
dict! an automatic approach to learning sentiment
lexicons for short text. In Proceedings of the 54th
Annual Meeting of the Association for Computa-
tional Linguistics (Volume 2: Short Papers), pages
219–224. Association for Computational Linguis-
tics.

Chuan-Ju Wang, Ming-Feng Tsai, Tse Liu, and Chin-
Ting Chang. 2013. Financial sentiment analysis for
risk prediction. In Proceedings of the Sixth Interna-
tional Joint Conference on Natural Language Pro-
cessing, pages 802–808. Asian Federation of Natu-
ral Language Processing.

Leyi Wang and Rui Xia. 2017. Sentiment lexicon con-
struction with representation learning based on hi-
erarchical sentiment supervision. In Proceedings of
the 2017 Conference on Empirical Methods in Nat-
ural Language Processing, pages 502–510. Associ-
ation for Computational Linguistics.

https://doi.org/10.1111/j.1540-6261.2010.01625.x
https://doi.org/10.1111/j.1540-6261.2010.01625.x
https://doi.org/10.1111/j.1540-6261.2010.01625.x
http://papers.nips.cc/paper/5021-distributed-representations-of-words-and-phrases-and-their-compositionality.pdf
http://papers.nips.cc/paper/5021-distributed-representations-of-words-and-phrases-and-their-compositionality.pdf
http://papers.nips.cc/paper/5021-distributed-representations-of-words-and-phrases-and-their-compositionality.pdf
http://aclweb.org/anthology/S13-2053
http://aclweb.org/anthology/S13-2053
https://doi.org/10.18653/v1/D15-1071
https://doi.org/10.18653/v1/D15-1071
https://doi.org/10.18653/v1/P17-1157
https://doi.org/10.18653/v1/P17-1157
https://doi.org/10.18653/v1/P17-1157
https://doi.org/10.18653/v1/N16-1091
https://doi.org/10.18653/v1/N16-1091
https://doi.org/10.3115/1219840.1219857
https://doi.org/10.3115/1219840.1219857
http://aclweb.org/anthology/W18-3104
http://aclweb.org/anthology/W18-3104
https://doi.org/10.3115/v1/D14-1152
https://doi.org/10.3115/v1/D14-1152
https://doi.org/10.3115/v1/D14-1152
https://doi.org/10.3115/1073083.1073153
https://doi.org/10.3115/1073083.1073153
https://doi.org/10.3115/1073083.1073153
https://doi.org/10.18653/v1/P16-2036
https://doi.org/10.18653/v1/P16-2036
https://doi.org/10.18653/v1/P16-2036
http://aclweb.org/anthology/I13-1097
http://aclweb.org/anthology/I13-1097
https://doi.org/10.18653/v1/D17-1052
https://doi.org/10.18653/v1/D17-1052
https://doi.org/10.18653/v1/D17-1052


357

Dominic Widdows and Beate Dorow. 2002. A graph
model for unsupervised lexical acquisition. In Pro-
ceedings of the 19th International Conference on
Computational Linguistics - Volume 1, COLING
’02, pages 1–7, Stroudsburg, PA, USA. Association
for Computational Linguistics.

Mohammadzaman Zamani and H Andrew Schwartz.
2017. Using twitter language to predict the real
estate market. In Proceedings of the 15th Confer-
ence of the European Chapter of the Association for
Computational Linguistics: Volume 2, Short Papers,
pages 28–33.

https://doi.org/10.3115/1072228.1072342
https://doi.org/10.3115/1072228.1072342


358

A Appendix

A.1 Excess return regression results for
multiple text variables

var coeff std coeff t R2

H4NRE -0.88** -0.264 -2.19 1.05
neglm 0.062 0.024 0.48
H4NRE -0.739** -0.221 -2.23 1.05
alllm -0.008 -0.008 -0.21
H4NRE -0.836** -0.25 -2.15 1.05
neg unclm 0.027 0.016 0.28
H4NRE -0.755** -0.226 -2.56 1.05
neg litlm -0.003 -0.004 -0.12

*p ≤ 0.05, **p ≤ 0.01, ***p ≤ 0.001

Table 10: This table shows results for regressions that
combine H4NRE with single-feature manual L&M lists.

var coeff std coeff t R2

neglm -0.202** -0.080 -2.56 1.02
negRE -0.37*** -0.111 -2.96 1.02
negADD -0.033 -0.0231 -1.03 1.00
neglm -0.0607 -0.0242 -0.38 1.02
negRE -0.274 -0.0822 -1.11
negRE -0.416*** -0.124 -2.85 1.02
negADD 0.0298 0.0208 0.80
neglm -0.0421 -0.0168 -0.27 1.02
negRE -0.346 -0.1037 -1.35
negADD 0.0277 0.0193 0.76

*p ≤ 0.05, **p ≤ 0.01, ***p ≤ 0.001

Table 11: This table shows results for regressions that
combine RE, ADD and L&M dictionaries for the neg-
ative category.

var coeff std coeff t R2

unclm -0.215* -0.064 -1.91 1.01
uncRE -0.377*** -0.075 -2.77 1.02
uncADD 0.0217 0.0065 0.21 1.00
unclm 0.209 0.0626 0.45 1.01
uncRE -0.668 -0.133 -1.05
uncRE -0.643*** -0.128 -3.14 1.03
uncADD 0.198 0.0594 1.42
unclm -0.233 -0.0699 -0.42 1.03
uncRE -0.368 -0.0736 -0.54
uncADD 0.234 0.0702 1.42

*p ≤ 0.05, **p ≤ 0.01, ***p ≤ 0.001

Table 12: This table shows results for regressions that
combine RE, ADD and L&M dictionaries for the un-
certain category.

var coeff std coeff t R2

litlm -0.0291 -0.026 -0.83 1.00
litRE -0.056 -0.028 -0.55 1.02
litADD -0.0195 -0.0156 -0.70 1.00
litlm -0.0759 -0.0683 -0.95 1.00
litRE 0.154 0.077 0.67
litRE -0.0261 -0.0130 -0.20 1.00
litADD -0.0136 -0.0108 -0.39
litlm -0.0753 -0.0677 -0.94 1.00
litRE 0.155 0.0775 0.66
litADD -0.00107 -0.0008 -0.03

*p ≤ 0.05, **p ≤ 0.01, ***p ≤ 0.001

Table 13: This table shows results for regressions that
combine RE, ADD and L&M dictionaries for the liti-
gious category.



359

A.2 Volatility regression results for multiple
text variables

var coeff std coeff t R2

H4NRE 0.748*** 0.224 4.44 60.3
neglm -0.096* -0.038 -2.55
H4NRE 0.741*** 0.222 4.30 60.3
alllm -0.0438** -0.0481 -2.95
H4NRE 0.696*** 0.208 4.88 60.3
neg unclm -0.054 -0.032 -1.86
H4NRE 0.693*** 0.207 4.24 60.3
neg litlm -0.034** -0.037 -2.70

*p ≤ 0.05, **p ≤ 0.01, ***p ≤ 0.001

Table 14: This table shows results for regressions that
combine H4NRE with single-feature manual L&M lists.

var coeff std coeff t R2

neglm 0.118*** 0.0472 3.30 60.1
negRE 0.219*** 0.0657 3.57 60.1
negADD 0.032*** 0.0224 4.06 60.0
neglm 0.0014 0.0005 0.02 60.1
negRE 0.217* 0.065 1.96
negRE 0.233** 0.0699 2.96 60.1
negADD -0.0087 -0.006 -0.65
neglm 0.00069 0.0002 0.01 60.1
negRE 0.232* 0.0696 1.97
negADD -0.0087 -0.006 -0.66

*p ≤ 0.05, **p ≤ 0.01, ***p ≤ 0.001

Table 15: This table shows results for regressions that
combine RE, ADD and L&M dictionaries for the neg-
ative category.

var coeff std coeff t R2

unclm 0.119* 0.0356 2.25 60.0
uncRE 0.167* 0.0334 2.30 60.0
uncADD -0.013 -0.0039 -0.17 60.0
unclm 0.0432 0.012 0.28 60.0
uncRE 0.112 0.0224 0.53
uncRE 0.222*** 0.0444 3.48 60.1
uncADD -0.088 -0.0263 -1.09
unclm 0.151 0.0453 1.11 60.1
uncRE 0.0419 0.0083 0.20
uncADD -0.111 -0.0332 -1.41

*p ≤ 0.05, **p ≤ 0.01, ***p ≤ 0.001

Table 16: This table shows results for regressions that
combine RE, ADD and L&M dictionaries for the un-
certain category.

var coeff std coeff t R2

litlm -0.0081 -0.0073 -0.62 60.0
litRE 0.0080 0.004 0.20 60.0
litADD 0.028 0.0224 1.07 60.0
litlm -0.0635** -0.057 -2.93 60.0
litRE 0.181* 0.0905 2.46
litRE -0.362 -0.181 -0.91 60.0
litADD 0.041 0.0328 1.50
litlm -0.087*** -0.078 -3.65 60.1
litRE 0.174* 0.087 2.42
litADD 0.066* 0.0528 2.23

*p ≤ 0.05, **p ≤ 0.01, ***p ≤ 0.001

Table 17: This table shows results for regressions that
combine RE, ADD and L&M dictionaries for the liti-
gious category.


