



















































Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics


Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics (Short Papers), pages 231–236
Vancouver, Canada, July 30 - August 4, 2017. c©2017 Association for Computational Linguistics

https://doi.org/10.18653/v1/P17-2036

Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics (Short Papers), pages 231–236
Vancouver, Canada, July 30 - August 4, 2017. c©2017 Association for Computational Linguistics

https://doi.org/10.18653/v1/P17-2036

How to Make Context More Useful?
An Empirical Study on Context-Aware Neural Conversational Models

Zhiliang Tian,1 Rui Yan,2∗ Lili Mou,3 Yiping Song,4 Yansong Feng,2 Dongyan Zhao2
1Baidu Inc., China tianzhiliang@baidu.com

2Institute of Computer Science and Technology, Peking University, China
3Key Laboratory of High Confidence Software Technologies, MoE, China

Institute of Software, Peking University, China
4Institute of Network Computing and Information Systems, Peking University, China

{ruiyan,songyiping,yansong,zhaody}@pku.edu.cn doublepower.mou@gmail.com

Abstract

Generative conversational systems are at-
tracting increasing attention in natural lan-
guage processing (NLP). Recently, re-
searchers have noticed the importance of
context information in dialog processing,
and built various models to utilize context.
However, there is no systematic compar-
ison to analyze how to use context effec-
tively. In this paper, we conduct an empir-
ical study to compare various models and
investigate the effect of context informa-
tion in dialog systems. We also propose a
variant that explicitly weights context vec-
tors by context-query relevance, outper-
forming the other baselines.

1 Introduction

Recently, human-computer conversation is attract-
ing increasing attention due to its promising poten-
tials and alluring commercial values. Researchers
have proposed both retrieval methods (Ji et al.,
2014; Yan et al., 2016) and generative meth-
ods (Ritter et al., 2011; Shang et al., 2015) for
automatic conversational systems. With the suc-
cess of deep learning techniques, neural networks
have demonstrated powerful capability of learning
human dialog patterns; given a user-issued utter-
ance as an input query q, the network can gen-
erate a reply r, which is usually accomplished
in a sequence-to-sequence (Seq2Seq) manner
(Shang et al., 2015).

In the literature, there are two typical research
setups for dialog systems: single-turn and multi-
turn. Single-turn conversation is, perhaps, the sim-
plest setting where the model only takes q into
consideration when generating r (Shang et al.,

∗Corresponding author.

2015; Mou et al., 2016). However, most real-
world dialogs comprise multiple turns. Previous
utterances (referred to as context in this paper)
could also provide useful information about the di-
alog status and are the key to coherent multi-turn
conversation.

Existing studies have realized the importance
of context, and proposed several context-aware
conversational systems. For example, Yan et al.
(2016) directly concatenate context utterances
and the current query; others use hierarchical
models, first capturing the meaning of individ-
ual utterances and then integrating them as dis-
courses (Serban et al., 2016). There could be
several ways of combining context and the cur-
rent query, e.g., pooling or concatenation (Sordoni
et al., 2015). Unfortunately, previous literature
lacks a systematic comparison of the above meth-
ods.

In this paper, we conduct an empirical study
on context modeling in Seq2Seq-like conversa-
tional systems. We emphasize the following re-
search questions:
• RQ1. How can we make better use of con-

text information? Our study shows that hier-
archical models are generally better than non-
hierarchical ones. We also propose a variant
of context integration that explicitly weights
a context vector by its relevance measure,
outperforming simple vector pooling or con-
catenation.
• RQ2. What is the effect of context on neural

dialog systems? We find context information
is useful to neural conversational models. It
yields longer, more informative and diversi-
fied replies.

To sum up, the contributions of this paper are
two-fold: (1) We conduct a systematic study on
context modeling in neural conversational mod-
els. (2) We further propose an explicitly con-

231

https://doi.org/10.18653/v1/P17-2036
https://doi.org/10.18653/v1/P17-2036


text weighting approach, outperforming the other
baselines.

2 Models

2.1 Non-Hierarchical Model

To model a few utterances before the current
query, several studies directly concatenate these
sentences together and use a single model to cap-
ture the meaning of context and the query (Yan
et al., 2016; Sordoni et al., 2015). They are re-
ferred to as non-hierarchical models in our pa-
per. Such method is also used in other NLP
tasks, e.g., document-level sentiment analysis (Xu
et al., 2016) and machine comprehension (Wang
and Jiang, 2017).

Following the classic encode-decoder frame-
work, we use a Seq2Seq network, which trans-
forms the query and context into a fixed-length
vector venc by a recurrent neural network (RNN)
during encoding; then, in the decoding phase, it
generates a reply r with another RNN in a word-
by-word fashion. (See Figure 1a.)

In our study, we adopt RNNs with gated re-
current units (Cho et al., 2014, GRUs), which al-
leviates the long propagation problem of vanilla
RNNs. When decoding, we apply beam search
with a size of 5.

2.2 Hierarchical Model

A more complicated approach to context model-
ing is to build hierarchical models with a two-step
strategy: an utterance-level model captures the
meaning of each individual sentences, and then an
inter-utterance model integrates context and query
information (Figure 1b).

Researchers have tried different ways of com-
bining information during inter-utterance model-
ing; this paper evaluates several prevailing meth-
ods.

Sum pooling. Sum pooling (denoted as Sum)
integrates information over a candidate set by
summing the values in each dimension (Figure
2a). Given context vectors vc1 , · · · ,vcn and the
query vector vq, the encoded vector venc is

venc =

n∑

i=1

vci + vq (1)

Sum pooling is used in Sordoni et al. (2015),
where bag-of-words (BoW) features of context

(a) Non-hierarchical model.

(b) Hierarchical model.

Figure 1: Seq2Seq-like neural networks generate
a reply r based on context C = {c1, . . . , cn} and
the current query q with (a) non-hierarchical or (b)
hierarchical models.

and the query are simply added. In our experi-
ments, sum pooling operates on the features ex-
tracted by sentence-level RNNs of context and
query utterances, as modern neural networks pre-
serve more information than BoW features.

Concatenation. Concatenation (Concat) is
yet another method used in Sordoni et al. (2015).
This strategy concatenates every utterance-level
vectors vci and vq as a long vector, i.e., venc =
[vc0 ; . . . ;vcn ;vq]. (See Figure 2b.)

Compared with sum pooling, vector concatena-
tion can distinguish different roles of the context
and query, as this operation keeps input separately.
One potential shortcoming, however, is that con-
catenation only works with fixed-length context.

Sequential integration. Yao et al. (2015) and
Serban et al. (2015) propose hierarchical dialog
systems, where an inter-utterance RNN is built
upon utterance-level RNNs’ features (last hidden
state). Training is accomplished by end-to-end
gradient propagation, and the process is illustrated
in Figure 2c.

Using an RNN to integrate context and query
vectors in a sequential manner enables compli-
cated information interaction. Based on the
RNN’s hidden states, Sum and Concat could
also be applied to obtain the encoded vector venc.

232



(a) Sum pooling. (b) Concatenation.

(c) Sequential Integration.

(d) Weighted Sequential Integration.

Figure 2: The inter-utterance modeling in hierar-
chical models. vci and vq are the utterance-level
vectors, hci and hq are the utterance-level hidden
states, αci and αq are the explicitly weights and
venc is the output of the encoder.

However, we found their performance is worse
than only using the last hidden state (denoted as
Seq). One plausible reason might be that the
inter-sentence RNN is not long and that RNN can
preserve these information well. Therefore, this
variant is adopted in our experiments, as shown in
Figure 2c.

2.3 Explicitly Weighting by Context-Query
Relevance

In conversation, context utterances may vary in
content and semantics: context utterances that are
relevant to the query may be useful, while irrele-
vant ones may bring more about noise. Following
this intuition, we propose a variant that explicitly
weights the context vector by an attention score of
context-query relevance.

First, we compute the similarity between the
context and query by the cosine measure

sci = sim(ci, q) =
eci · eq
‖eci‖ · ‖eq‖

(2)

where

eci =
∑

w∈ci
ew and eq =

∑

w′∈q
ew′ (3)

that is, the sentence embedding is the sum of word
embeddings.

Following the spirit of attention mecha-
nisms (Bahdanau et al., 2014), we would like to
normalize these similarities by a softmax function
and obtain attention probabilities:

αci =
exp(sci)∑n

j=0 exp(scj ) + exp(sq)
(4)

αq =
exp(sq)∑n

j=0 exp(scj ) + exp(sq)
(5)

where sq is computed in the same manner as sci
and is always 1, which is the cosine of two same
vectors. The intuition is that, if the context is less
relevant, we should mainly focus on the query it-
self, but if the context is relevant, we should focus
more evenly across context and the query.

In other words, our explicitly weighting ap-
proach could be viewed as heuristic attention.
Akin to Subsection 2.2, we aggregate the weighted
context and query vectors by pooling and concate-
nation, resulting in the following two variants.

• WSeq (sum), where weighted vectors are
summed together

venc =
n∑

i=0

αcihci + αqhq (6)

• WSeq (concat), where weighted vectors
are concatenated

venc = [αc0hc0 ; . . . ;αcnhcn ;αqhq] (7)

Notice that the explicitly weighting approach
can also be applied to sentence embeddings (with-
out inter-sentence RNN). We denote the variants
by WSum and WConcat, respectively; details are
not repeated. They are included for comparison in
Section 3.2.

3 Experiments

3.1 Setup
We conducted all experiments on a Chinese
dataset crawled from an online free chatting plat-
form, Baidu Tieba.1 To facilitate the research
of context’s effect, we established a multi-turn
conversational corpus following Sordoni et al.
(2015) and Serban et al. (2015). A data sam-
ple contains three utterances, being a triple
〈last context, query, reply〉. In total, we had

1https://tieba.baidu.com

233



Method BLEU-1 BLEU-2 BLEU-3 BLEU-4

Context-Insensitive 4.611 1.488 0.657 0.311

Non-Hierarchical 4.805 1.507 0.678 0.343

Hierarchical

Sum 4.440 1.367 0.505 0.042
WSum 5.055 1.667 0.741 0.378
Concat 5.107 1.688 0.747 0.420
WConcat 5.181 1.763 0.745 0.342
Seq 5.355 1.771 0.916 0.387
WSeq (sum) 5.134 1.586 0.7429 0.4359
WSeq (concat) 5.322 1.883 0.9966 0.6897

Table 1: Performance of different models.

500,000 samples for training, 2000 for validation,
and 4000 for testing. The hyperparameters of
neural networks were mainly derived from Shang
et al. (2015) and Song et al. (2016): embeddings
620d and hidden states 1000d; we used AdaDelta
for optimization.

3.2 Results and Analysis

We evaluated model performance by BLEU
scores. As this paper compares various models,
it is unaffordable for us to hire workers to man-
ually annotate their satisfaction. BLEU scores,
albeit imperfect for open-domain dialog systems,
exhibits more or less correlation with human sat-
isfaction (Liu et al., 2016; Tao et al., 2017). We
present in Table 1 the overall performance of the
models introduced in Section 2, and answer our
research questions as follows.

RQ1: How can we make better use of context in-
formation?

We first observe that context-aware methods
generally outperform the context-insensitive one.
This implies context is indeed useful in open-
domain, chit-chat-style dialog systems. The re-
sults are consistent with previous studies (Sordoni
et al., 2015; Serban et al., 2015).

Among context-aware neural conversational
models, we have the following findings.

• Hierarchical structures outperform the non-
hierarchical one.

Comparing the non-hierarchical and hierar-
chical structures, we find it obvious that
(most) hierarchical models outperform the
non-hierarchical one by a large margin. The
results show that, dialog systems are differ-

ent from other NLP applications, e.g., com-
prehension (Wang and Jiang, 2017), where
non-hierarchical recurrent neural networks
are adopted to better integrate information
across different sentences. A plausible expla-
nation, as indicated by Meng et al. (2017), is
that conversational sentences are not neces-
sarily uttered by a same speaker, and litera-
ture shows consistent evidence of the effec-
tiveness of hierarchical RNNs in dialog sys-
tems.

• Keeping the roles of different utterances sep-
arately is important.

As mentioned in Section 2, the concatena-
tion operation (Concat) distinguishes the
roles of different utterances, while sum pool-
ing Sum aggregates information in a homo-
geneous way. We see that the former outper-
forms the latter in both sentence-embedding
and inter-sentence RNN levels, showing that
sum pooling is not suitable for treating dialog
context. Our conjecture is that sum pooling
buries illuminating query information under
less important context. Hence, keeping them
separately will generally help.

• The context-query relevance score benefits
conversational systems.

Our explicitly weighting approach computes
an attention probability by context-query rel-
evance. In all variants (Sum, Concat, and
Seq), explicitly weighting improves the per-
formance by a large margin (except BLEU-1
for Seq). The results indicate that context-
query relevance is useful, as it emphasizes

234



Method Length Entropy Diversity

Context-Insensitive 4.008 7.648 0.917
Context-Aware 4.204 7.863 0.927

Ground Truth 9.735 9.277 0.949

Table 2: The length, entropy, and diversity of
the replies on the context-insensitive and context-
aware (WSeq,concat) methods.

relevant context utterances as well as weak-
ens irrelevant contexts.

RQ2: What is the effect of context on neural dia-
log systems?

We are now curious about how context informa-
tion affects neural conversational systems. In Ta-
ble 2, we present three auxiliary metrics, i.e., sen-
tence length, entropy, and diversity. The former
two are used in Serban et al. (2016) and Mou et al.
(2016), whereas the latter one is used in Zhang and
Hurley (2008).

As shown, content-aware conversational mod-
els tend to generate longer, more meaningful and
diverse replies compared with content-insensitive
models, given that they also improve BLEU
scores.2

This shows an interesting phenomenon of neu-
ral sequence generation: an encoder-decoder
framework needs sufficient source information for
meaningful generation of the target; it simply does
not fall into meaningful content from less mean-
ingful input. A similar phenomenon is also re-
ported in our previous work (Mou et al., 2016);
we show that, a same network will generate more
meaningful sentences if it starts from a given
(meaningful) keyword. These results also partially
explain why a seq2seq neural network tends
to generate short and universally relevant replies
in open-domain conversation, despite its success
in machine translation, abstractive summarization,
etc.

4 Conclusion

In this work, we analyzed the effect of context in
generative conversational models. We conducted
a systematic comparison among existing meth-

2This condition is important when we draw conclusions.
The length, entropy and diversity metrics do not make sense
by themselves alone, because a system can achieve very high
scores by repetitively generating random words.

ods and our newly proposed variant that explic-
itly weights context vectors by context-query rele-
vance.

We show that hierarchical RNNs generally out-
perform non-hierarchical ones, and that explicitly
weighting context information can emphasize the
relevant context utterances and weaken less rele-
vant ones.

Our experiments also reveal an interesting phe-
nomenon: with context information, neural net-
works tend to generate longer, more meaningful
and diverse replies, which sheds light on neural
sequence generation.

Acknowledgments

We thank the reviewers for insightful com-
ments. This research is partially supported by
863 Grant No. 2015AA015403 and NSFC Grant
No. 61672058.

References
Dzmitry Bahdanau, Kyunghyun Cho, and Yoshua Ben-

gio. 2014. Neural machine translation by jointly
learning to align and translate. In Proceedings of
the International Conference on Learning Represen-
tations.

Kyunghyun Cho, Bart Van Merriënboer, Dzmitry Bah-
danau, and Yoshua Bengio. 2014. On the properties
of neural machine translation: Encoder-decoder ap-
proaches. arXiv preprint arXiv:1409.1259 .

Zongcheng Ji, Zhengdong Lu, and Hang Li. 2014. An
information retrieval approach to short text conver-
sation. arXiv preprint arXiv:1408.6988 .

Chia-Wei Liu, Ryan Lowe, Iulian Serban, Mike Nose-
worthy, Laurent Charlin, and Joelle Pineau. 2016.
How NOT to evaluate your dialogue system: An
empirical study of unsupervised evaluation metrics
for dialogue response generation. In Proceedings
of the 2016 Conference on Empirical Methods in
Natural Language Processing. pages 2122–2132.
https://doi.org/10.18653/v1/D16-1230.

Zhao Meng, Lili Mou, and Zhi Jin. 2017. Hierar-
chical RNN with static sentence-level attention for
text-based speaker change detection. arXiv preprint
arXiv:1703.07713 .

Lili Mou, Yiping Song, Rui Yan, Ge Li, Lu Zhang,
and Zhi Jin. 2016. Sequence to backward and
forward sequences: A content-introducing ap-
proach to generative short-text conversation. In
Proceedings of the 26th International Conference
on Computational Linguistics. pages 3349–3358.
http://aclweb.org/anthology/C16-1316.

235



Alan Ritter, Colin Cherry, and William B Dolan. 2011.
Data-driven response generation in social media. In
Proceedings of the Conference on Empirical Meth-
ods in Natural Language Processing. pages 583–
593. http://aclweb.org/anthology/D11-1054.

Iulian V Serban, Alessandro Sordoni, Yoshua Bengio,
Aaron Courville, and Joelle Pineau. 2015. Building
end-to-end dialogue systems using generative hier-
archical neural network models. In Proceedings of
the 30th AAAI Conference on Artificial Intelligence.
pages 3776–3783.

Iulian Vlad Serban, Alessandro Sordoni, Ryan Lowe,
Laurent Charlin, Joelle Pineau, Aaron Courville,
and Yoshua Bengio. 2016. A hierarchical latent
variable encoder-decoder model for generating di-
alogues. arXiv preprint arXiv:1605.06069 .

Lifeng Shang, Zhengdong Lu, and Hang Li. 2015.
Neural responding machine for short-text conver-
sation. In Proceedings of the 53rd Annual Meet-
ing of the Association for Computational Linguistics
and the 7th International Joint Conference on Natu-
ral Language Processing (Volume 1: Long Papers).
pages 1577–1586. https://doi.org/10.3115/v1/P15-
1152.

Yiping Song, Rui Yan, Xiang Li, Dongyan Zhao, and
Ming Zhang. 2016. Two are better than one: An en-
semble of retrieval-and generation-based dialog sys-
tems. arXiv preprint arXiv:1610.07149 .

Alessandro Sordoni, Michel Galley, Michael Auli,
Chris Brockett, Yangfeng Ji, Margaret Mitchell,
Jian-Yun Nie, Jianfeng Gao, and Bill Dolan. 2015.
A neural network approach to context-sensitive gen-
eration of conversational responses. In Proceed-
ings of the 2015 Conference of the North Ameri-
can Chapter of the Association for Computational
Linguistics: Human Language Technologies. pages
196–205. https://doi.org/10.3115/v1/N15-1020.

Chongyang Tao, Lili Mou, Dongyan Zhao, and Rui
Yan. 2017. RUBER: An unsupervised method for
automatic evaluation of open-domain dialog sys-
tems. arXiv preprint arXiv:1701.03079 .

Shuohang Wang and Jing Jiang. 2017. Machine com-
prehension using match-LSTM and answer pointer.
In Proceedings of the International Conference on
Learning Representations.

Jiacheng Xu, Danlu Chen, Xipeng Qiu, and Xuanjing
Huang. 2016. Cached long short-term memory neu-
ral networks for document-level sentiment classifi-
cation. In Proceedings of the Conference on Empiri-
cal Methods in Natural Language Processing. pages
1660–1669. https://doi.org/10.18653/v1/D16-1172.

Rui Yan, Yiping Song, and Hua Wu. 2016. Learning
to respond with deep neural networks for retrieval-
based human-computer conversation system. In
Proceedings of the 39th International ACM SIGIR
Conference on Research and Development in Infor-
mation Retrieval. pages 55–64.

Kaisheng Yao, Geoffrey Zweig, and Baolin Peng.
2015. Attention with intention for a neural network
conversation model. In NIPS Workshop.

Mi Zhang and Neil Hurley. 2008. Avoiding monotony:
Improving the diversity of recommendation lists. In
Proceedings of the 2008 ACM Conference on Rec-
ommender Systems. pages 123–130.

236


	How to Make Context More Useful? An Empirical Study on Context-Aware Neural Conversational Models

