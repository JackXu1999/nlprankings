



















































Multi-Granularity Self-Attention for Neural Machine Translation


Proceedings of the 2019 Conference on Empirical Methods in Natural Language Processing
and the 9th International Joint Conference on Natural Language Processing, pages 887–897,
Hong Kong, China, November 3–7, 2019. c©2019 Association for Computational Linguistics

887

Multi-Granularity Self-Attention for Neural Machine Translation

Jie Hao∗
Florida State University

haoj8711@gmail.com

Xing Wang
Tencent AI Lab

brightxwang@tencent.com

Shuming Shi
Tencent AI Lab

shumingshi@tencent.com

Jinfeng Zhang
Florida State University

jinfeng@stat.fsu.edu

Zhaopeng Tu
Tencent AI Lab

zptu@tencent.com

Abstract

Current state-of-the-art neural machine trans-
lation (NMT) uses a deep multi-head self-
attention network with no explicit phrase in-
formation. However, prior work on statis-
tical machine translation has shown that ex-
tending the basic translation unit from words
to phrases has produced substantial improve-
ments, suggesting the possibility of improv-
ing NMT performance from explicit model-
ing of phrases. In this work, we present
multi-granularity self-attention (MG-SA): a
neural network that combines multi-head self-
attention and phrase modeling. Specifically,
we train several attention heads to attend to
phrases in either n-gram or syntactic for-
malism. Moreover, we exploit interactions
among phrases to enhance the strength of
structure modeling – a commonly-cited weak-
ness of self-attention. Experimental results
on WMT14 English-to-German and NIST
Chinese-to-English translation tasks show the
proposed approach consistently improves per-
formance. Targeted linguistic analysis reveals
that MG-SA indeed captures useful phrase in-
formation at various levels of granularities.

1 Introduction

Recently, TRANSFORMER (Vaswani et al., 2017),
implemented as deep multi-head self-attention
networks (SANs), has become the state-of-the-art
neural machine translation (NMT) model in recent
years. The popularity of SANs lies in its high par-
allelization in computation, and flexibility in mod-
eling dependencies regardless of distance by ex-
plicitly attending to all the signals.

More recently, an in-depth study (Raganato and
Tiedemann, 2018) reveals that SANs generally
focus on disperse words and ignore continuous
phrase patterns, which have proven essential in
both statistical machine translation (SMT, Koehn

∗Work done when interning at Tencent AI Lab.

et al., 2003; Chiang, 2005; Liu et al., 2006) and
NMT (Eriguchi et al., 2016; Wang et al., 2017;
Yang et al., 2018; Zhao et al., 2018).

To alleviate this problem, in this work we pro-
pose multi-granularity self-attention (MG-SA),
which offers SANs the ability to model phrases
and meanwhile maintain their simplicity and flex-
ibility. The starting point for our approach is an
observation: the power of multiple heads in SANs
is not fully exploited. For example, Li et al. (2018)
show that different attention heads generally at-
tend to the same positions, and Voita et al. (2019)
reveal that only specialized attention heads do the
heavy lifting while the rest can be pruned. Accord-
ingly, we spare several attention heads for model-
ing phrase patterns for SANs.

Specifically, we use two representative types
of phrases that are widely-used in SMT models:
n-gram phrases (Koehn et al., 2003) to use sur-
face of adjacent words, and syntactic phrases (Liu
et al., 2006) induced from syntactic trees to rep-
resent well-formed structural information. We
first partition the input sentence into phrase frag-
ments at different levels of granularity. For ex-
ample, we can split a sentence into 2-grams or 3-
grams. Then, we assign an attention head to at-
tend over phrase fragments at each granularity. In
this way, MG-SANs provide a lightweight strat-
egy to explicitly model phrase structures. Fur-
thermore, we also model the interactions among
phrases to enhance structure modeling, which
is one commonly-cited weakness of SANs (Tran
et al., 2018; Hao et al., 2019b).

We evaluate the proposed model on two
widely-used translation tasks: WMT14 English-
to-German and NIST Chinese-to-English. Experi-
mental results demonstrate that our approach con-
sistently improves translation performance over
strong TRANSFORMER baseline model (Vaswani
et al., 2017) across language pairs, while



888

speeds marginally decrease. Analysis on multi-
granularity label prediction tasks reveals that MG-
SA indeed captures and stores the information of
different granularity phrases as expected.

2 Background

Multi-Head Self-attention Instead of perform-
ing a single attention, Multi-Head Self-attention
Networks (MH-SA), which are the defaults set-
ting in TRANSFORMER (Vaswani et al., 2017),
project the queries, keys and values into multiple
subspaces and performs attention on the projected
queries, keys and values in each subspace. In the
standard MH-SA, it jointly attends to information
from different representation subspaces at differ-
ent positions. Specifically, MH-SA transform in-
put layer H = h1, ..., hn ∈ Rn×d into h-th sub-
space with different linear projections:

Qh,Kh,Vh = HWhQ,HW
h
K ,HW

h
V , (1)

where {Qh,Kh,Vh} ∈ Rn×dh are respectively
the query, key, and value representations of the h-
th head, {WhQ,WhK ,WhV ∈ Rd×dh} denote pa-
rameter matrices associated with the h-th head, d
and dh represent the dimensionality of the model
and h-th head subspace. Moreover, N attention
functions are applied to generate the output states
{O1, ...,ON} in parallel, among them:

Oh = ATT(Qh,Kh) Vh. (2)

Finally, the output states are concatenated to pro-
duce the final state. Here ATT denotes attention
models, which can be implemented as either ad-
ditive attention or dot-product attention. In this
work, we use dot-product attention which is ef-
ficient and effective compared with its additive
counterpart (Vaswani et al., 2017):

ATT(Qh,Kh) = softmax(
QhKh

T

√
dh

), (3)

where
√
dh is the scaling factor.

Motivation We demonstrate our motivation
from two aspects. On the one hand, the conven-
tional MH-SA model the individual word depen-
dencies, in such scenario the query directly at-
tends all words in memory without considering
the latent structure of the input sentence. We ar-
gue that self-attention can be further improved by
taking phrase pattern into account. On the other

hand, recent study (Vaswani et al., 2017) implic-
itly hint that attention heads are underutilized as
increasing number of heads from 4 to 8 or even 16
can hardly improve the translation performance.
Several attention heads can be further exploited
under specific guidance to improve the perfor-
mance (Strubell et al., 2018). We expect the induc-
tive bias for multi-granularity phrase can further
improve the performance of SANs and meanwhile
maintain its simplicity and flexibility.

3 Multi-Granularity Self-Attention

We first introduce the framework of the proposed
MG-SA. Then we describe the approaches of gen-
erating multi-granularity representation on a cer-
tain granularity representation. Finally, we intro-
duce the training objective of our model with aux-
iliary supervision.

3.1 Framework
The proposed MG-SA aims at improving the ca-
pability of MH-SA by modeling both word and
phrase. We introduce various phrase granularity
over the conventional word-level memory to gen-
erate phrase level memory.

Specifically, we first transform the input layer
H to a phrase level memory by function Fh in cer-
tain attention head:

Hg = Fh(H), (4)

where Hg is the generated phrase level memory, h
denotes the h-th head which is used to generate a
certain granularity of phrase memory, and Fh is a
representation function with its own trainable pa-
rameters. The details for Fh will be described in
Section 3.2.

Then we perform attention on phrase level
memory Hg:

Qh,Kh,Vh = HWhQ,HgW
h
K ,HgW

h
V (5)

Oh = ATT(Qh,Kh) Vh, (6)

where Qh ∈ Rn×dh ,Kh ∈ Rp×dh ,Vh ∈ Rp×dh ,
the pmeans the length of the key and value vectors
which is decided by the granularity of phrase.

Based on the single head self-attention, the final
output of MG-SA can be expressed as follows:

MG-SA(H) = [O1, ...,ON], (7)

where N denotes the number of heads. One head
conducts either conventional word level attention
or a certain granularity of phrase attention.



889

(a) Syntactic phrase partition

(b) Multi-Granularity Self-Attention on syntactic phrase partition

Figure 1: Illustration of the proposed MG-SA model for syntactic phrase partition. In this example, we partition
the sentence with top two layers in the constituent parse tree and obtain the syntactic phrase partitions (“Bush”,
“held a talk with Sharon”), (“Bush”, “held”, “a talk”, “with Sharon”). Under the syntactic partition, multi-head
attention in MG-SA attends the phrase memory (heads j and k ) as well as the conventional word memory (head
i ). The approach of phrase memory representation is described in Section 3.2. Best viewed in colour.

3.2 Multi-Granularity Representation

As seen in Figure 1, multi-granularity phrases are
simultaneously modeled by different heads. To
obtain the multi-granularity phrase representation,
we first introduce phrase partition and composi-
tion strategies. Then, we describe phrase tag su-
pervision and phrase interaction to further enhance
the structure modeling on phrase representation.

Phrase Partition Partially inspired by Shen
et al. (2018), we split the entire sequence into
N-grams without overlaps. Such N-gram phrases
are expressed as structurally adjacent and contin-
uous items in the sequence. Formally, let x =
(x1, ..., xT ) be a sequence, the phrases sequence
of x can be denoted as is Px = (p1, ..., pM ),M =
T/n, where pm = (xn×(m−1), ..., xn×m), 1 ≤
m ≤ M , and n denotes the length of the phrase
which is a hyper-parameter. Padding is applied to
the last phrase if necessary.

In addition, syntactic information has proven
helpful in both SMT and NMT. We further intro-
duce a syntactic phrase partition to represent well-
formed structural information. Syntactic phrases
organize words into nested constituents by using

constituent parse tree. To obtain phrases in the
view syntax, we break down the nodes at top K
layers in the parse tree to capture top K levels of
granularity for phrases, as illustrated in Figure 1
(a). Formally, one phrase in a certain layer of the
parse tree can be defined as pm = (x1, ..., xl), l
is the length of the phrase which is decided by the
parse tree. The phrase sequence of the given input
x is Px = (p1, ..., pM ),M is the number of phrase
in the sequence.

Composition Strategies Given phrase sequence
Px = (p1, ..., pM ) of input sequence, to cap-
ture local structure and context dependency inside
each phrase and further generate phrase represen-
tation QM , we adopt phrase composition function
to each phrase in the phrase sequence:

gm = COM(pm), (8)

where COM is the composition function with
shared parameters to all phrases, gm ∈ R1×dh
is the phrase representation after composition.
There general choices of composition function are
Convolution Neural Networks (CNNs), Recurrent
Neural Networks (RNNs) and Self-attention Net-



890

works (SANs). For CNNs we only apply the Max-
pooling layer. For RNNs, we use the last hid-
den state of Long Short-term Memory Networks
(LSTM) as phrase representation. For SANs, we
use max pooling vector of the phrase to serve as
the query for extracting inside phrase features to
generate phrase representation. Then the phrase
level memory of the input sequence can be de-
noted as Gx = (g1, ..., gM ).

Phrase Tag Supervision Recent study shows
auxiliary supervision on heads of SANs can
further improve semantic role labeling perfor-
mance (Strubell et al., 2018). In this work, we
leverage tag information as the auxiliary supervi-
sion on syntactic phrase representation. We argue
that the proposed framework provide a natural way
to incorporate syntactic tag signal of phrase rep-
resentation. In detail, given phrase level memory
Gx = (g1, ..., gM ) after phrase composition, we
predict the phrase tag of each phrase representa-
tion. We extract the node of each phrase in the
constituent parsing tree to generate the phrase tag
sequence Tx = (t1, ..., tM ). ti denotes the tag
for each phrase. For example, “NP” is the tag of
the phrase “a talk” in second layer of parse tree, as
shown in Figure 1 (a). We use the phrase represen-
tation to compute the probability of phrase tags:

pθi = softmax(Wtgi + bt), i = 1, ...,M, (9)

where Wt and bt are parameters of tag generator.
Formally, the phrase tag loss can be written as:

Ltag = −
M∑
i=1

ti log pθi(ti). (10)

The loss is equivalent to maximizing the condi-
tional probability of tag sequence Tx given phrase
representation Gx.

Phrase Interaction We introduce phrase inter-
action approach to better model dependencies be-
tween phrase representation. Since recurrence
has proven important for capturing structure in-
formation (Tran et al., 2018; Hao et al., 2019b),
we propose to introduce recurrence to interact
phrases and further model latent structure among
phrases. Specifically, we apply the recurrence
function REC(·) on the output of phrase compo-
sition Gx = (g1, ..., gM ) in order to model the
latent structure of the phrase sequence.

Hg = REC(Gx), (11)

where Hg is the final phrase level memory for the
input layer H. One general choice for REC(·) is
Long Short-term Memory Networks (LSTM). Re-
cently, Shen et al. (2018) introduce a new syntax-
oriented inductive bias, namely ordered neurons,
which enables LSTM models to perform tree-like
composition without breaking its sequential form,
and propose an advanced LSTM variant – Ordered
Neurons LSTM (ON-LSTM). Hao et al. (2019a)
demonstrate the effectiveness of ON-LSTM on
modeling structure in NMT. Accordingly, we fur-
ther use ON-LSTM for REC(·), and expect ON-
LSTM can capture the latent structure under such
syntax-oriented inductive bias between phrases.

Finally, the representation function Fh in Equa-
tion 4 of the framework can be summarized by the
following components: 1). Phrase partition. 2).
Phrase composition. 3). Phrase interaction.

3.3 Training

The training loss for a single training instance
x = (x1, ..., xT ),y = (y1, ..., yL) is defined as a
weighted sum of the negative conditional log like-
lihood and the phrase tag loss. The total loss func-
tion can be written as:

L = −
L∑
i=1

yilogPω(yi) + λLtag, (12)

where λ is the coefficient to balance two loss func-
tions and Ltag follows Equation 10. The hyperpa-
rameter λ is empirically set to 0.001 in this work.

4 Experiments

In this section, we conduct experiments and make
analysis to answer the following three questions:

Q1. Does the integration of the proposed MG-SA
into the state-of-the-art TRANSFORMER im-
prove the translation quality in terms of the
BLEU score?

Q2. Does the proposed MG-SA promote the gen-
eration of the target phrases?

Q3. Does MG-SA capture more phrase informa-
tion at the various granularity levels?

In Section 4.1, we demonstrate that inte-
grating the proposed MG-SA into the TRANS-
FORMER consistently improves the translation
quality on both WMT14 English⇒German and



891

NIST Chinese⇒English (Q1). Further analysis re-
veals that our approach has stronger ability of cap-
turing the phrase information and promoting the
generation of the target phrases (Q2).

In Section 4.2, we conduct experiments on the
multi-granularity label prediction tasks (Shi et al.,
2016), and investigate the representations of NMT
encoders trained on both translation data and the
training data of the label prediction tasks. Experi-
mental results show that the proposed MG-SA in-
deed captures useful phrase information at various
levels of granularities in both scenarios (Q3).

4.1 Machine Translation

Implementation Detail We conduct the ex-
periments on the WMT14 English-to-German
(En⇒De) and NIST Chinese-to-English (Zh⇒En)
translation tasks.

For En⇒De, the training dataset consists of
4.56M sentence pairs. We use the newstest2013
and newstest2014 as development set and test set
respectively. For Zh⇒En, the training dataset
consists of about 1.25M sentence pairs. We
used NIST MT02 dataset as development set, and
MT 03-06 datasets as test sets. Byte pair en-
coding (BPE) toolkit1 (Sennrich et al., 2016) is
used with 32K merge operations. We used case-
sensitive NIST BLEU score (Papineni et al., 2002)
as the evaluation metric, and bootstrap resam-
pling (Koehn et al., 2003) for statistical signifi-
cance test. We use the Stanford parser (Klein and
Manning, 2003) to parse the sentences and obtain
the relevant tags.

We test both Base and Big models, which dif-
fer at hidden size (512 vs. 1024), filter size (2048
vs. 4096) and the number of attention heads
(8 vs. 16). All models are trained on eight
NVIDIA Tesla P40 GPUs where each is allocated
with a batch size of 4096 tokens. We imple-
ment the proposed approaches on top of TRANS-
FORMER (Vaswani et al., 2017) – a state-of-the-
art SANs-based model on machine translation, and
followed the setting in previous work (Vaswani
et al., 2017) to train the models.

We incorporate the proposed model into the en-
coder. In each of our model variant, we main-
tain a quarter of heads for vanilla word level self-
attention. For N-gram phrase models, we arrange
the rest 3 quarters of heads for 2-gram, 3-gram and
4-gram respectively. For syntactic based models,

1https://github.com/rsennrich/subword-nmt

Phrase Modeling # Para. Speed BLEU
n/a 88.0M 1.28 27.31

MAX-POOLING 88.0M 1.27 27.56
SANs 90.4M 1.26 27.69
LSTM 96.1M 1.14 27.58

Table 1: Evaluation of various phrase composi-
tion strategies under N-gram phrase partition. “#
Para” denotes the trainable parameter size of each
model (M=million), “Speed” denotes the training speed
(steps/second).

Encoder Layers # Para. Speed BLEU
[1− 6] 90.4M 1.26 27.69
[1− 3] 89.2M 1.27 27.74

[1] 88.4M 1.28 27.83

Table 2: Evaluation of different layers in the encoder,
which are implemented as self-attention with SANs
phrase composition under N-gram partition. “1” de-
notes the bottom layer.

we use the top 3 levels of granularity for phrases
generated from constituent parse tree, each gran-
ularity of phrase modeled in a quarter of heads.
There are many possible ways to implement the
general idea of MG-SA. The aim of this paper is
not to explore this whole space but simply to show
that some fairly straightforward implementations
work well.

Table 1, 2 and 3 show the results on
WMT14 English⇒German translation task with
TRANSFORMER-BASE. These results show the
evaluation on the impact of different components.

Phrase Composition We investigate the effect
of different phrase composition strategies with N-
gram phrase partition. As seen in Table 1, all pro-
posed phrase composition methods consistently
outperform TRANSFORMER-BASE baseline, val-
idating the importance of introducing multi-
granularity phrase in TRANSFORMER. Compared
with other two models, SANs achieve best perfor-
mance with its strong representational powers in-
side the phrase, while only marginally increase the
parameters and decrease the speed. We use SANs
phrase composition strategy as the default setting
in subsequent experiments.

Encoder Layers Recent works (Shi et al., 2016;
Peters et al., 2018) show that different layers in en-
coder tend to capture different syntax and seman-
tic features. Hence, there may have different needs



892

# Model Architecture # Para. Speed BLEU ∆
1 TRANSFORMER-BASE 88.0M 1.28 27.31 -
2 + N-gram Phrase 88.4M 1.28 27.83 +0.52
3 + Syntactic Phrase 88.4M 1.24 28.01 +0.70
4 + Syntactic Phrase + Ltag 88.4M 1.23 28.07 +0.76
5 + LSTM Interaction 89.5M 1.20 28.14 +0.83
6 + ON-LSTM Interaction 89.9M 1.19 28.28 +0.97

Table 3: Evaluation of phrase partition, tag supervision and interaction strategies.

for modeling phrase structure in each layer. In this
experiment, we investigate the question of which
layers should be applied with MG-SA. We apply
MG-SA on different combination of layers. As
shown in Table 2, reducing the applied layers from
high-level to low-level consistently increase trans-
lation quality in terms of BLEU score as well as
the training speed. The results reveal that the bot-
tom layer in encoder, which is directly taking word
embedding as input, benefits more from modeling
phrase structure. This phenomena verifies it is un-
necessary to apply the phrase structure modeling
to all layers. Accordingly, we only apply MG-SA
in the bottom layer in the following experiments.

Phrase Partition and Tag Supervision As seen
in Table 3, syntactic phrase partition (Row 3) im-
proves the model performance over the N-gram
phrase partition (Row 2), showing that the syn-
tactic phrase benefits to translation quality. In
addition, incorporating tag loss (Row 4) in train-
ing stage can further boost the translation perfor-
mance. This indicates the auxiliary syntax objec-
tive is necessary, which is consistent with the re-
sults in other NLP task (Strubell et al., 2018). We
use syntactic phrase partition with tag supervision
as the default setting for subsequent experiments
unless otherwise stated.

Phrase Interaction As observed in Table 3,
phrase interaction (Row 5-6) consistently im-
proves performance of translation, proving the
effectiveness and necessity of enhancing phrase
level dependencies on phrase representation. ON-
LSTM based interaction (Row 6) outperforms its
LSTM counterpart (Row 5). We attribute the im-
provement of ON-LSTM to the stronger ability to
perform syntax-oriented dependencies on phrase
representation. We apply ON-LSTM as the default
setting for phrase interaction.

G
ap

 o
f B

LE
U

 S
co

re

0.0

0.2

0.4

0.6

0.8

1.0

N-Gram

1 2 3 4 5 6 7 8

Syntactic Phrase+Interaction
Syntactic Phrase
N-gram Phrase

Figure 2: Performance improvement according to N-
gram. Y-axis denotes the gap of BLEU score between
our models and the baseline.

Main Results Table 4 lists the results on
WMT14 En⇒De and NIST Zh⇒En translation
tasks. Our baseline models, outperform the re-
ported results on the same data (Vaswani et al.,
2017; Zhang et al., 2019), which we believe make
the evaluation convincing. As seen, in terms of
BLEU score, the proposed MG-SA consistently
improves translation performance across language
pairs, which demonstrates the effectiveness and
universality of the proposed approach.

Phrasal Pattern Evaluation As aforemen-
tioned, the proposed MG-SA aims to simulta-
neously model different granularities of phrases
with different heads in SANs. To investigate
whether the proposed MG-SA improves the gen-
eration of phrases in the output, we calculate the
improvement of the proposed models over mul-
tiple N-grams, as shown in Figure 2. The re-
sults are reported on En⇒De validation set with
TRANSFORMER-BASE.

Clearly, the proposed models consistently out-
perform the baseline model on all N-grams, indi-
cating that the proposed MG-SA has stronger abil-
ity of capturing the phrase information and pro-



893

Architecture En⇒De Zh⇒En
# Para. BLEU # Para. MT03 MT04 MT05 MT06 Avg

Existing NMT systems
Vaswani et al. (2017) 213M 28.4 n/a n/a n/a n/a n/a n/a
Zhang et al. (2019) n/a n/a n/a 40.45 42.76 40.09 39.67 40.74

Our NMT systems
TRANSFORMER-BASE 88.0M 27.31 73.4M 41.88 44.48 42.21 41.93 42.60

+MG-SA 89.9M 28.28⇑ 75.3M 43.98⇑ 45.60⇑ 44.28⇑ 44.00⇑ 44.46
TRANSFORMER-BIG 264.1M 28.58 234.8M 45.30 46.49 45.21 44.87 45.47

+MG-SA 271.5M 29.01↑ 242.2M 45.76↑ 46.81↑ 45.77↑ 46.48⇑ 46.21

Table 4: Comparing with the existing NMT systems on WMT14 En⇒De and NIST Zh⇒En test sets. “↑ / ⇑”:
significant over the conventional self-attention counterpart (p < 0.05/0.01), tested by bootstrap resampling. “MG-
SA” denotes “Syntactic Phrase + Ltag + ON-LSTM Interaction” in Table 3.

moting the generation of the target phrases. Con-
cerning the variations of proposed models, two
syntactic phrase models outperforms the N-gram
phrase model on larger phrases (i.e. 4-8 grams).
We attribute this to the fact that more syntactic in-
formation is beneficial for the translation perfor-
mance. This is also consistent with the strengths
of phrase-based and syntax-based SMT models.

Visualization of Attention In order to evaluate
whether the proposed model is able to capture
phrase patterns or not, we visualize the attention
layers in the encoder 2. As shown in Fig. 3, the
vanilla model prefers to pay attention to the pre-
vious and next word and the end of the sentence,
which is consistent with previous findings in Ra-
ganato and Tiedemann (2018). The proposed MG-
SA successfully focuses on the phrases: 1) “三峡
工程”, the 4th and the 5th rows in Fig. 3(b), its
English translation is ‘the Three Gorges Project’;
2) “首要任务”, the 7th and 8th rows in Fig. 3(b),
its English translation is ‘top priority’. By visu-
alizing the attention distributions, we believe the
proposed MG-SA can capture phrase patterns to
improve the translation performance.

4.2 Multi-Granularity Phrases Evaluation

In this section, we conduct multi-granularity label
prediction tasks to the proposed models in terms
of whether the proposed model is effective as ex-
pected to capture different levels of granularity
phrase information of sentences. We analyze the
impact of multi-granularity self-attention based on

2Since the attention weights of MG-SA cannot be visual-
ized at word level, we visualize the attention weights in the
subsequent layer after MH-SA and MG-SA.

two sets of experiments. The first set of experi-
ments are probing the pre-trained NMT encoders,
which aims to evaluate the linguistics knowledge
embedded in the NMT encoder output in the ma-
chine translation section. Furthermore, to test the
ability of the MG-SA itself, we conduct the second
set of experiments, which are on the same tasks
using encoder models trained from scratch.

Tasks Shi et al. (2016) propose 5 tasks to pre-
dict various granularity syntactic labels of from
sentence to word in order to investigate whether
an encoder can learn syntax information. These
labels are: “Voice”: active or passive, “Tense”:
past or non-past of main-clause verb, “TSS”: top-
level syntactic sequence of constituent tree, and
two word-level syntactic label tasks, “SPC”: the
smallest phrase constituent that above each word,
“POS”: Part-of-Speech tags for each words. The
tasks for predicting larger labels require mod-
els to capture and record larger granularity of
phrase information of sentences (Shi et al., 2016).
We conduct these tasks to study whether the
proposed MG-SA benefits the multi-granularity
phrase modeling to produce more useful and in-
formative representation.

Data and Models We extracted the sentences
from the Toronto Book Corpus (Zhu et al.,
2015).We sample and pre-process 120k sentences
for each task following Conneau et al. (2018). By
instruction of Shi et al. (2016), we label these sen-
tences for each task. The train/valid/test dataset
ratios are set to 10/1/1.

For pre-trained NMT encoders, we use the pre-
trained encoders of model variations in Table 3
followed by a MLP classifier, which are used to



894

(a) Vanilla Multi-Head Self-Attention (b) Multi-Granularity Self-Attention

Figure 3: Visualization of attention examples of the same input sentence: (a) and (b) are produced by the vanilla
multi-head self-attention and the proposed MG-SA models, respectively. Each row is the attention distribution
over all the source tokens. The attention layer has 16 attention heads, and the attention weights in each row are the
average of all the heads.

# Model Label Granularity: Large→ Small
Voice Tense TSS SPC POS Avg

Pre-Trained NMT Encoder
1 BASE 73.38 73.73 72.72 92.81 93.73 81.27
2 N-Gram Phrase 73.06 72.83 72.11 96.42 96.34 82.15
3 Syntactic Phrase 73.37 73.62 75.60 96.72 96.68 83.19
4 Syntactic Phrase + Interaction 73.20 74.78 75.24 96.78 96.56 83.31

Train From Scratch
5 BASE 83.46 85.39 83.44 96.35 96.12 88.95
6 N-Gram Phrase 83.55 85.62 85.21 96.23 96.17 89.36
7 Syntactic Phrase 84.70 87.52 97.42 96.95 96.24 92.57
8 Syntactic Phrase + Interaction 86.45 87.65 99.07 96.99 96.40 93.31

Table 5: Accuracies on multi-granularity label prediction tasks. “Pre-Trained NMT Encoder” denotes using the
pre-trained NMT encoders of model variations in Table 3. “Train From Scratch” denotes using three encoder layers
with proposed MG-SA variants, which are trained from scratch. For syntactic phrase based models, we only apply
syntactic boundary of phrases and do not use any tag supervision for fair comparison.

carry out probing tasks.

For models trained from scratch, each of our
model consists of 3 encoding layers followed by
a MLP classifier. For each encoding layer, we
employ a multi-head self-attention block and a
feed-forward block as in TRANSFORMER, which
have shown significant performance on several
NLP tasks (Devlin et al., 2019). The difference
between the compared models merely lies in the
self-attention mechanism: “BASE” denotes stan-
dard MH-SA, “N-Gram Phrase” and “Syntactic
Phrase” are the proposed MG-SA under N-gram
phrase and syntactic phrase partition, and “Syn-
tactic Phrase + Interaction” denotes MG-SA with

phrase interaction by using ON-LSTM. We use
same assignments of heads for multi-granularity
phrases as machine translation task for all model
variants.

Results Analysis Table 5 lists the prediction ac-
curacies of five syntactic labels on test. Several
observations can be made here. 1). Comparing the
two set of experiments, the experimental results
from models trained from scratch consistently out-
perform the results from NMT encoder probing on
all tasks. 2). The models with syntactic informa-
tion (Rows 3-4, 7-8) significantly perform better
than those models without incorporating syntactic
information (Rows 1-2, 5-6). 3). For NMT prob-



895

ing, the proposed models outperform the base-
line model especially on relative small granularity
of phrases information, such as ‘SPC’ and ‘POS’
tasks. 4). If trained from scratch, the proposed
models achieve more improvements on predict-
ing larger granularities of labels, such as ‘TSS’,
‘Tense’ and ‘Voice’ tasks, which require models to
record larger phrase of sentences (Shi et al., 2016).
The results show that the applicability of the pro-
posed MG-SA is not limited to machine transla-
tion, but also on monolingual tasks.

5 Related Works

Phrase Modeling for NMT Several works have
proven that the introduction of phrase modeling in
NMT can obtain promising improvement on trans-
lation quality. Tree-based encoders, which ex-
plicitly take the constituent tree (Eriguchi et al.,
2016) or dependency tree (Bastings et al., 2017)
into consideration, are proposed to produce tree-
based phrase representations. The difference of
our work from these studies is that they adopt
the RNN-based encoder to form the tree-based
encoder while we explicitly introduce the phrase
structure into the the state-of-the-art multi-layer
multi-head SANs-based encoder, which we believe
is more challenging.

Another thread of work is to implicitly pro-
mote the generation of phrase-aware representa-
tion, such as the integration of external phrase
boundary (Wang et al., 2017; Nguyen and Joty,
2018; Li et al., 2019b), prior attention bias (Yang
et al., 2018, 2019; Guo et al., 2019). Our work dif-
fers at that we explicitly model phrase patterns at
different granularities, which is then attended by
different attention heads.

Multi Granularity Representation Multi-
granularity representation, which is proposed to
make full use of subunit composition at different
levels of granularity, has been explored in various
NLP tasks, such as paraphrase identification (Yin
and Schütze, 2015), Chinese word embedding
learning (Yin et al., 2016), universal sentence
encoding (Wu et al., 2018) and machine transla-
tion (Nguyen and Joty, 2018; Li et al., 2019b).
The major difference between our work and
Nguyen and Joty (2018); Li et al. (2019b) lies
in that we successfully introduce syntactic infor-
mation into our multi-granularity representation.
Furthermore, it is not well measured how much
phrase information are stored in multi-granularity

representation. We conduct the multi-granularity
label prediction tasks and empirically verify
that the phrase information is embedded in the
multi-granularity representation.

Multi-Head Attention Multi-head attention
mechanism has shown its effectiveness in machine
translation (Vaswani et al., 2017) and generative
dialog (Tao et al., 2018) systems. Recent studies
shows that the modeling ability of multi-head
attention has not been completely developed.
Several specific guidance cues of different heads
without breaking the vanilla multi-head attention
mechanism can further boost the performance,
e.g., disagreement regularization (Li et al., 2018;
Tao et al., 2018), information aggregation (Li
et al., 2019a), and functional specialization (Fan
et al., 2019) on attention heads, the combination
of multi-head attention with multi-task learn-
ing (Strubell et al., 2018). Our work demonstrates
that multi-head attention also benefits from the
integration of the phrase information.

6 Conclusion

In this paper, we propose multi-granularity self-
attention model, a novel attention mechanism to
simultaneously attend different granularity phrase.
We study effective phrase representation for N-
gram phrase and syntactic phrase, and find that a
syntactic phrase based mechanism obtains the best
result due to effectively incorporating rich syntac-
tic information. To evaluate the effectiveness of
the proposed model, we conduct experiments on
widely-used WMT14 En⇒De and NIST Zh⇒En
datasets. Experimental results on two language
pairs show that the proposed model achieve sig-
nificant improvements over the baseline TRANS-
FORMER. Targeted multi-granularity phrases eval-
uation shows that our model indeed capture useful
phrase information.

As our approach is not limited to specific tasks,
it is interesting to validate the proposed model in
other tasks, such as reading comprehension, lan-
guage inference, and sentence classification.

Acknowledgments

J.Z. was supported by the National Institute of
General Medical Sciences of the National Institute
of Health under award number R01GM126558.
We thank the anonymous reviewers for their in-
sightful comments.



896

References
Joost Bastings, Ivan Titov, Wilker Aziz, Diego

Marcheggiani, and Khalil Simaan. 2017. Graph
convolutional encoders for syntax-aware neural ma-
chine translation. In EMNLP.

David Chiang. 2005. A hierarchical phrase-based
model for statistical machine translation. In ACL.

Alexis Conneau, German Kruszewski, Guillaume
Lample, Loı̈c Barrault, and Marco Baroni. 2018.
What you can cram into a single $&!#∗ vector:
Probing sentence embeddings for linguistic proper-
ties. In ACL.

Jacob Devlin, Ming-Wei Chang, Kenton Lee, and
Kristina Toutanova. 2019. Bert: Pre-training of deep
bidirectional transformers for language understand-
ing. In NAACL.

Akiko Eriguchi, Kazuma Hashimoto, and Yoshimasa
Tsuruoka. 2016. Tree-to-sequence attentional neu-
ral machine translation. In ACL.

Angela Fan, Mike Lewis, and Yann Dauphin. 2019.
Strategies for structuring story generation. In ACL.

Maosheng Guo, Yu Zhang, and Ting Liu. 2019. Gaus-
sian transformer: a lightweight approach for natural
language inference. In AAAI.

Jie Hao, Xing Wang, Shuming Shi, Jinfeng Zhang, and
Zhaopeng Tu. 2019a. Towards better modeling hi-
erarchical structure for self-attention with ordered
neurons. In EMNLP.

Jie Hao, Xing Wang, Baosong Yang, Longyue Wang,
Jinfeng Zhang, and Zhaopeng Tu. 2019b. Modeling
recurrence for transformer. In NAACL.

Dan Klein and Christopher D Manning. 2003. Accu-
rate unlexicalized parsing. In ACL.

Philipp Koehn, Franz Josef Och, and Daniel Marcu.
2003. Statistical phrase-based translation. In
NAACL.

Jian Li, Zhaopeng Tu, Baosong Yang, Michael R. Lyu,
and Tong Zhang. 2018. Multi-Head Attention with
Disagreement Regularization. In EMNLP.

Jian Li, Baosong Yang, Zi-Yi Dou, Xing Wang,
Michael R Lyu, and Zhaopeng Tu. 2019a. Infor-
mation aggregation for multi-head attention with
routing-by-agreement. In NAACL.

Yang Li, Lukasz Kaiser, Samy Bengio, and Si Si.
2019b. Area attention. In ICML.

Yang Liu, Qun Liu, and Shouxun Lin. 2006. Tree-
to-string alignment template for statistical machine
translation. In ACL.

Phi Xuan Nguyen and Shafiq Joty. 2018. Phrase-based
attentions. arXiv preprint arXiv:1810.03444.

Kishore Papineni, Salim Roukos, Todd Ward, and Wei-
Jing Zhu. 2002. Bleu: a method for automatic eval-
uation of machine translation. In ACL.

Matthew E Peters, Mark Neumann, Mohit Iyyer, Matt
Gardner, Christopher Clark, Kenton Lee, and Luke
Zettlemoyer. 2018. Deep contextualized word rep-
resentations. In NAACL.

Alessandro Raganato and Jörg Tiedemann. 2018. An
analysis of encoder representations in transformer-
based machine translation. In EMNLP Workshop
BlackboxNLP: Analyzing and Interpreting Neural
Networks for NLP.

Rico Sennrich, Barry Haddow, and Alexandra Birch.
2016. Neural machine translation of rare words with
subword units. In ACL.

Tao Shen, Tianyi Zhou, Guodong Long, Jing Jiang,
and Chengqi Zhang. 2018. Bi-directional block self-
attention for fast and memory-efficient sequence
modeling. In ICLR.

Xing Shi, Inkit Padhi, and Kevin Knight. 2016. Does
string-based neural mt learn source syntax. In
EMNLP.

Emma Strubell, Patrick Verga, Daniel Andor,
David Weiss, and Andrew McCallum. 2018.
Linguistically-Informed Self-Attention for Seman-
tic Role Labeling. In EMNLP.

Chongyang Tao, Shen Gao, Mingyue Shang, Wei Wu,
Dongyan Zhao, and Rui Yan. 2018. Get the point of
my utterance! learning towards effective responses
with multi-head attention mechanism. In IJCAI.

Ke Tran, Arianna Bisazza, and Christof Monz. 2018.
The importance of being recurrent for modeling hi-
erarchical structure. In EMNLP.

Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob
Uszkoreit, Llion Jones, Aidan N Gomez, Łukasz
Kaiser, and Illia Polosukhin. 2017. Attention is All
You Need. In NIPS.

Elena Voita, David Talbot, Fedor Moiseev, Rico Sen-
nrich, and Ivan Titov. 2019. Analyzing multi-head
self-attention: Specialized heads do the heavy lift-
ing, the rest can be pruned. In ACL.

Xing Wang, Zhaopeng Tu, Deyi Xiong, and Min
Zhang. 2017. Translating phrases in neural machine
translation. In EMNLP.

Wei Wu, Houfeng Wang, Tianyu Liu, and Shuming Ma.
2018. Phrase-level self-attention networks for uni-
versal sentence encoding. In EMNLP.

Baosong Yang, Zhaopeng Tu, Derek F. Wong, Fan-
dong Meng, Lidia S. Chao, and Tong Zhang. 2018.
Modeling localness for self-attention networks. In
EMNLP.



897

Baosong Yang, Longyue Wang, Derek Wong, Lidia S
Chao, and Zhaopeng Tu. 2019. Convolutional self-
attention networks. In NAACL.

Rongchao Yin, Quan Wang, Peng Li, Rui Li, and Bin
Wang. 2016. Multi-granularity chinese word em-
bedding. In EMNLP.

Wenpeng Yin and Hinrich Schütze. 2015. Convolu-
tional neural network for paraphrase identification.
In NAACL.

Meishan Zhang, Zhenghua Li, Guohong Fu, and Min
Zhang. 2019. Syntax-enhanced neural machine
translation with syntax-aware word representations.
In NAACL.

Yang Zhao, Yining Wang, Jiajun Zhang, and
Chengqing Zong. 2018. Phrase table as recommen-
dation memory for neural machine translation. In
IJCAI.

Yukun Zhu, Ryan Kiros, Rich Zemel, Ruslan Salakhut-
dinov, Raquel Urtasun, Antonio Torralba, and Sanja
Fidler. 2015. Aligning books and movies: Towards
story-like visual explanations by watching movies
and reading books. In ICCV.


