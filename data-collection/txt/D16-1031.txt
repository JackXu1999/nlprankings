



















































Language as a Latent Variable: Discrete Generative Models for Sentence Compression


Proceedings of the 2016 Conference on Empirical Methods in Natural Language Processing, pages 319–328,
Austin, Texas, November 1-5, 2016. c©2016 Association for Computational Linguistics

Language as a Latent Variable:
Discrete Generative Models for Sentence Compression

Yishu Miao1, Phil Blunsom1,2
1University of Oxford, 2Google Deepmind

{yishu.miao, phil.blunsom}@cs.ox.ac.uk

Abstract

In this work we explore deep generative mod-
els of text in which the latent representation
of a document is itself drawn from a discrete
language model distribution. We formulate a
variational auto-encoder for inference in this
model and apply it to the task of compressing
sentences. In this application the generative
model first draws a latent summary sentence
from a background language model, and then
subsequently draws the observed sentence con-
ditioned on this latent summary. In our em-
pirical evaluation we show that generative for-
mulations of both abstractive and extractive
compression yield state-of-the-art results when
trained on a large amount of supervised data.
Further, we explore semi-supervised compres-
sion scenarios where we show that it is possi-
ble to achieve performance competitive with
previously proposed supervised models while
training on a fraction of the supervised data.

1 Introduction

The recurrent sequence-to-sequence paradigm for
natural language generation (Kalchbrenner and Blun-
som, 2013; Sutskever et al., 2014) has achieved re-
markable recent success and is now the approach
of choice for applications such as machine transla-
tion (Bahdanau et al., 2015), caption generation (Xu
et al., 2015) and speech recognition (Chorowski et
al., 2015). While these models have developed so-
phisticated conditioning mechanisms, e.g. attention,
fundamentally they are discriminative models trained
only to approximate the conditional output distribu-
tion of strings. In this paper we explore modelling the

joint distribution of string pairs using a deep genera-
tive model and employing a discrete variational auto-
encoder (VAE) for inference (Kingma and Welling,
2014; Rezende et al., 2014; Mnih and Gregor, 2014).
We evaluate our generative approach on the task of
sentence compression. This approach provides both
alternative supervised objective functions and the
opportunity to perform semi-supervised learning by
exploiting the VAEs ability to marginalise the latent
compressed text for unlabelled data.

Auto-encoders (Rumelhart et al., 1985) are a typi-
cal neural network architecture for learning compact
data representations, with the general aim of perform-
ing dimensionality reduction on embeddings (Hinton
and Salakhutdinov, 2006). In this paper, rather than
seeking to embed inputs as points in a vector space,
we describe them with explicit natural language sen-
tences. This approach is a natural fit for summarisa-
tion tasks such as sentence compression. According
to this, we propose a generative auto-encoding sen-
tence compression (ASC) model, where we intro-
duce a latent language model to provide the variable-
length compact summary. The objective is to perform
Bayesian inference for the posterior distribution of
summaries conditioned on the observed utterances.
Hence, in the framework of VAE, we construct an in-
ference network as the variational approximation of
the posterior, which generates compression samples
to optimise the variational lower bound.

The most common family of variational auto-
encoders relies on the reparameterisation trick, which
is not applicable for our discrete latent language
model. Instead, we employ the REINFORCE al-
gorithm (Mnih et al., 2014; Mnih and Gregor, 2014)

319



s
0

s
1

s
2

s
1

s
3

s
2

s
4

s
3

h
1

d
h
2

d
h
3

d
h
4

d

Decoder

s
1

s
2

s
3

s
4

h
1

e

c
1

c
2

c
3

c
1 c2c0

h
1

c

h
2

e
h
3

e
h
4

e

h
2

c
h
3

c

Encoder Compressor

h
0

c

Compression (Pointer Networks)

3α2α1α

ĥ
2

c

ĥ
3

c
ĥ
1

c

Reconstruction (Soft Attention)

Figure 1: Auto-encoding Sentence Compression Model

to mitigate the problem of high variance during
sampling-based variational inference. Nevertheless,
when directly applying the RNN encoder-decoder to
model the variational distribution it is very difficult to
generate reasonable compression samples in the early
stages of training, since each hidden state of the se-
quence would have |V | possible words to be sampled
from. To combat this we employ pointer networks
(Vinyals et al., 2015) to construct the variational dis-
tribution. This biases the latent space to sequences
composed of words only appearing in the source
sentence (i.e. the size of softmax output for each
state becomes the length of current source sentence),
which amounts to applying an extractive compression
model for the variational approximation.

In order to further boost the performance on sen-
tence compression, we employ a supervised forced-
attention sentence compression model (FSC)
trained on labelled data to teach the ASC model to
generate compression sentences. The FSC model
shares the pointer network of the ASC model and
combines a softmax output layer over the whole vo-
cabulary. Therefore, while training on the sentence-
compression pairs, it is able to balance copying a
word from the source sentence with generating it
from the background distribution. More importantly,
by jointly training on the labelled and unlabelled
datasets, this shared pointer network enables the
model to work in a semi-supervised scenario. In

this case, the FSC teaches the ASC to generate rea-
sonable samples, while the pointer network trained
on a large unlabelled data set helps the FSC model to
perform better abstractive summarisation.

In Section 6, we evaluate the proposed model by
jointly training the generative (ASC) and discrimina-
tive (FSC) models on the standard Gigaword sentence
compression task with varying amounts of labelled
and unlabelled data. The results demonstrate that by
introducing a latent language variable we are able to
match the previous benchmakers with small amount
of the supervised data. When we employ our mixed
discriminative and generative objective with all of the
supervised data the model significantly outperforms
all previously published results.

2 Auto-Encoding Sentence Compression

In this section, we introduce the auto-encoding sen-
tence compression model (Figure 1)1 in the frame-
work of variational auto-encoders. The ASC model
consists of four recurrent neural networks – an en-
coder, a compressor, a decoder and a language model.

Let s be the source sentence, and c be the compres-
sion sentence. The compression model (encoder-
compressor) is the inference network qφ(c|s) that
takes source sentences s as inputs and generates
extractive compressions c. The reconstruction

1The language model, layer connections and decoder soft
attentions are omitted in Figure 1 for clarity.

320



model (compressor-decoder) is the generative net-
work pθ(s|c) that reconstructs source sentences s
based on the latent compressions c. Hence, the for-
ward pass starts from the encoder to the compressor
and ends at the decoder. As the prior distribution, a
language model p(c) is pre-trained to regularise the
latent compressions so that the samples drawn from
the compression model are likely to be reasonable
natural language sentences.

2.1 Compression

For the compression model (encoder-compressor),
qφ(c|s), we employ a pointer network consisting of a
bidirectional LSTM encoder that processes the source
sentences, and an LSTM compressor that generates
compressed sentences by attending to the encoded
source words.

Let si be the words in the source sentences, hei be
the corresponding state outputs of the encoder. hei are
the concatenated hidden states from each direction:

hei = f−→enc(~h
e
i−1, si)||f←−enc( ~hei+1, si) (1)

Further, let cj be the words in the compressed sen-
tences, hcj be the state outputs of the compressor. We
construct the predictive distribution by attending to
the words in the source sentences:

hcj =fcom(h
c
j−1, cj−1) (2)

uj(i) =w
T
3 tanh(W1h

c
j+W2h

e
i ) (3)

qφ(cj |c1:j−1, s)= softmax(uj) (4)

where c0 is the start symbol for each compressed
sentence and hc0 is initialised by the source sentence
vector of he|s|. In this case, all the words cj sampled
from qφ(cj |c1:j−1, s) are the subset of the words
appeared in the source sentence (i.e. cj ∈ s).

2.2 Reconstruction

For the reconstruction model (compressor-decoder)
pθ(s|c), we apply a soft attention sequence-to-
sequence model to generate the source sentence s
based on the compression samples c ∼ qφ(c|s).

Let sk be the words in the reconstructed sentences
and hdk be the corresponding state outputs of the
decoder:

hdk = fdec(h
d
k−1, sk−1) (5)

In this model, we directly use the recurrent cell of
the compressor to encode the compression samples2:

ĥ
c
j =fcom(ĥ

c
j−1, cj) (6)

where the state outputs ĥ
c
j corresponding to the word

inputs cj are different from the outputs hcj in the
compression model, since we block the information
from the source sentences. We also introduce a start
symbol s0 for the reconstructed sentence and hd0
is initialised by the last state output ĥ

c
|c|. The soft

attention model is defined as:

vk(j) =w
T
6 tanh(W 4h

d
k +W 5ĥ

c
j) (7)

γk(j) = softmax(vk(j)) (8)

dk =
∑|c|

j
γk(j)ĥ

c
j(vk(j)) (9)

We then construct the predictive probability distribu-
tion over reconstructed words using a softmax:

pθ(sk|s1:k−1, c) = softmax(W 7dk) (10)

2.3 Inference
In the ASC model there are two sets of parameters, φ
and θ, that need to be updated during inference. Due
to the non-differentiability of the model, the repa-
rameterisation trick of the VAE is not applicable in
this case. Thus, we use the REINFORCE algorithm
(Mnih et al., 2014; Mnih and Gregor, 2014) to reduce
the variance of the gradient estimator.

The variational lower bound of the ASC model is:

L =Eqφ(c|s)[log pθ(s|c)]−DKL[qφ(c|s)||p(c)]

6 log
∫
qφ(c|s)
qφ(c|s)

pθ(s|c)p(c)dc = log p(s) (11)

Therefore, by optimising the lower bound (Eq. 11),
the model balances the selection of keywords for the
summaries and the efficacy of the composed com-
pressions, corresponding to the reconstruction error
and KL divergence respectively.

In practise, the pre-trained language model prior
p(c) prefers short sentences for compressions. As
one of the drawbacks of VAEs, the KL divergence
term in the lower bound pushes every sample drawn

2The recurrent parameters of the compressor are not updated
by the gradients from the reconstruction model.

321



s
1

s
2

s
3

s
4

h
1

e

c
1

c
2

c
3

c
1 c2c0

h
1

c

h
2

e
h
3

e
h
4

e

h
2

c
h
3

c

Encoder Compresser

h
0

c

α β1 2 3α α1 β β2 3

Compression (Combined Pointer Networks)

Selected from V

Figure 2: Forced Attention Sentence Compression Model

from the variational distribution towards the prior.
Thus acting to regularise the posterior, but also to
restrict the learning of the encoder. If the estimator
keeps sampling short compressions during inference,
the LSTM decoder would gradually rely on the con-
texts from the decoded words instead of the informa-
tion provided by the compressions, which does not
yield the best performance on sentence compression.

Here, we introduce a co-efficient λ to scale the
learning signal of the KL divergence:
L=Eqφ(c|s)[log pθ(s|c)]−λDKL[qφ(c|s)||p(c)] (12)

Although we are not optimising the exact variational
lower bound, the ultimate goal of learning an effec-
tive compression model is mostly up to the recon-
struction error. In Section 6, we empirically apply
λ = 0.1 for all the experiments on ASC model. In-
terestingly, λ controls the compression rate of the
sentences which can be a good point to be explored
in future work.

During the inference, we have different strategies
for updating the parameters of φ and θ. For the pa-
rameters θ in the reconstruction model, we directly
update them by the gradients:

∂L

∂θ
= Eqφ(c|s)[

∂ log pθ(s|c)
∂θ

]

≈ 1
M

∑

m

∂ log pθ(s|c(m))
∂θ

(13)

where we draw M samples c(m) ∼ qφ(c|s) indepen-
dently for computing the stochastic gradients.

For the parameters φ in the compression model,
we firstly define the learning signal,

l(s, c) = log pθ(s|c)− λ(log qφ(c|s)− log p(c)).

Then, we update the parameters φ by:

∂L

∂φ
= Eqφ(c|s)[l(s, c)

∂ log qφ(c|s)
∂φ

]

≈ 1
M

∑

m

[l(s, c(m))
∂ log qφ(c

(m)|s)
∂φ

] (14)

However, this gradient estimator has a big variance
because the learning signal l(s, c(m)) relies on the
samples from qφ(c|s). Therefore, following the RE-
INFORCE algorithm, we introduce two baselines
b and b(s), the centred learning signal and input-
dependent baseline respectively, to help reduce the
variance.

Here, we build an MLP to implement the input-
dependent baseline b(s). During training, we learn
the two baselines by minimising the expectation:

Eqφ(c|s)[(l(s, c)− b− b(s))2]. (15)

Hence, the gradients w.r.t. φ are derived as,

∂L

∂φ
≈ 1
M

∑

m

(l(s, c(m))−b−b(s))∂ log qφ(c
(m)|s)

∂φ

(16)
which is basically a likelihood-ratio estimator.

3 Forced-attention Sentence Compression

In neural variational inference, the effectiveness of
training largely depends on the quality of the in-
ference network gradient estimator. Although we
introduce a biased estimator by using pointer net-
works, it is still very difficult for the compression
model to generate reasonable natural language sen-
tences at the early stage of learning, which results in

322



high-variance for the gradient estimator. Here, we
introduce our supervised forced-attention sentence
compression (FSC) model to teach the compression
model to generate coherent compressed sentences.

Neither directly replicating the pointer network
of ASC model, nor using a typical sequence-to-
sequence model, the FSC model employs a force-
attention strategy (Figure 2) that encourages the com-
pressor to select words appearing in the source sen-
tence but keeps the original full output vocabulary
V . The force-attention strategy is basically a com-
bined pointer network that chooses whether to select
a word from the source sentence s or to predict a
word from V at each recurrent state. Hence, the
combined pointer network learns to copy the source
words while predicting the word sequences of com-
pressions. By sharing the pointer networks between
the ASC and FSC model, the biased estimator obtains
further positive biases by training on a small set of
labelled source-compression pairs.

Here, the FSC model makes use of the compres-
sion model (Eq. 1 to 4) in the ASC model,

αj =softmax(uj), (17)

where αj(i), i ∈ (1, . . . , |s|) denotes the probability
of selecting si as the prediction for cj .

On the basis of the pointer network, we further
introduce the probability of predicting cj that is se-
lected from the full vocabulary,

βj = softmax(Wh
c
j), (18)

where βj(w), w ∈ (1, . . . , |V |) denotes the probabil-
ity of selecting the wth from V as the prediction for
cj . To combine these two probabilities in the RNN,
we define a selection factor t for each state output,
which computes the semantic similarities between
the current state and the attention vector,

ηj =
∑|s|

i
αj(i)h

e
i (19)

tj = σ(η
T
jMh

c
j). (20)

Hence, the probability distribution over compressed
words is defined as,

p(cj |c1:j−1, s)=
{
tjαj(i) + (1− tj)βj(cj), cj=si
(1− tj)βj(cj), cj 6∈s

(21)

Essentially, the FSC model is the extended compres-
sion model of ASC by incorporating the pointer net-
work with a softmax output layer over the full vocab-
ulary. So we employ φ to denote the parameters of
the FSC model pφ(c|s), which covers the parameters
of the variational distribution qφ(c|s).

4 Semi-supervised Training

As the auto-encoding sentence compression (ASC)
model grants the ability to make use of an unla-
belled dataset, we explore a semi-supervised train-
ing framework for the ASC and FSC models. In
this scenario we have a labelled dataset that contains
source-compression parallel sentences, (s, c) ∈ L,
and an unlabelled dataset that contains only source
sentences s ∈ U. The FSC model is trained on L so
that we are able to learn the compression model by
maximising the log-probability,

F =
∑

(c,s)∈L
log pφ(c|s). (22)

While the ASC model is trained on U, where we
maximise the modified variational lower bound,

L=
∑

s∈U
(Eqφ(c|s)[log pθ(s|c)]−λDKL[qφ(c|s)||p(c)]).

(23)

The joint objective function of the semi-supervised
learning is,

J=
∑

s∈U
(Eqφ(c|s)[log pθ(s|c)]−λDKL[qφ(c|s)||p(c)])

+
∑

(c,s)∈L
log pφ(c|s). (24)

Hence, the pointer network is trained on both un-
labelled data, U, and labelled data, L, by a mixed
criterion of REINFORCE and cross-entropy.

5 Related Work

As one of the typical sequence-to-sequence tasks,
sentence-level summarisation has been explored by a
series of discriminative encoder-decoder neural mod-
els. Filippova et al. (2015) carries out extractive
summarisation via deletion with LSTMs, while Rush
et al. (2015) applies a convolutional encoder and an

323



attentional feed-forward decoder to generate abstrac-
tive summarises, which provides the benchmark for
the Gigaword dataset. Nallapati et al. (2016) fur-
ther improves the performance by exploring multi-
ple variants of RNN encoder-decoder models. The
recent works Gulcehre et al. (2016), Nallapati et al.
(2016) and Gu et al. (2016) also apply the similar idea
of combining pointer networks and softmax output.
However, different from all these discriminative mod-
els above, we explore generative models for sentence
compression. Instead of training the discriminative
model on a big labelled dataset, our original intuition
of introducing a combined pointer networks is to
bridge the unsupervised generative model (ASC) and
supervised model (FSC) so that we could utilise a
large additional dataset, either labelled or unlabelled,
to boost the compression performance. Dai and Le
(2015) also explored semi-supervised sequence learn-
ing, but in a pure deterministic model focused on
learning better vector representations.

Recently variational auto-encoders have been ap-
plied in a variety of fields as deep generative mod-
els. In computer vision Kingma and Welling (2014),
Rezende et al. (2014), and Gregor et al. (2015) have
demonstrated strong performance on the task of im-
age generation and Eslami et al. (2016) proposed
variable-sized variational auto-encoders to identify
multiple objects in images. While in natural language
processing, there are variants of VAEs on modelling
documents (Miao et al., 2016), sentences (Bowman
et al., 2015) and discovery of relations (Marcheg-
giani and Titov, 2016). Apart from the typical initi-
ations of VAEs, there are also a series of works that
employs generative models for supervised learning
tasks. For instance, Ba et al. (2015) learns visual
attention for multiple objects by optimising a varia-
tional lower bound, Kingma et al. (2014) implements
a semi-supervised framework for image classification
and Miao et al. (2016) applies a conditional varia-
tional approximation in the task of factoid question
answering. Dyer et al. (2016) proposes a generative
model that explicitly extracts syntactic relationships
among words and phrases which further supports the
argument that generative models can be a statistically
efficient method for learning neural networks from
small data.

6 Experiments

6.1 Dataset & Setup

We evaluate the proposed models on the standard Gi-
gaword3 sentence compression dataset. This dataset
was generated by pairing the headline of each article
with its first sentence to create a source-compression
pair. Rush et al. (2015) provided scripts4 to filter
out outliers, resulting in roughly 3.8M training pairs,
a 400K validation set, and a 400K test set. In the
following experiments all models are trained on the
training set with different data sizes5 and tested on a
2K subset, which is identical to the test set used by
Rush et al. (2015) and Nallapati et al. (2016). We
decode the sentences by k = 5 Beam search and test
with full-length Rouge score.

For the ASC and FSC models, we use 256 for the
dimension of both hidden units and lookup tables.
In the ASC model, we apply a 3-layer bidirectional
RNN with skip connections as the encoder, a 3-layer
RNN pointer network with skip connections as the
compressor, and a 1-layer vanilla RNN with soft at-
tention as the decoder. The language model prior is
trained on the article sentences of the full training
set using a 3-layer vanilla RNN with 0.5 dropout. To
lower the computational cost, we apply different vo-
cabulary sizes for encoder and compressor (119,506
and 68,897) which corresponds to the settings of
Rush et al. (2015). Specifically, the vocabulary of
the decoder is filtered by taking the most frequent
10,000 words from the vocabulary of the encoder,
where the rest of the words are tagged as ‘<unk>’.
In further consideration of efficiency, we use only
one sample for the gradient estimator. We optimise
the model by Adam (Kingma and Ba, 2015) with a
0.0002 learning rate and 64 sentences per batch. The
model converges in 5 epochs. Except for the pre-
trained language model, we do not use dropout or
embedding initialisation for ASC and FSC models.

6.2 Extractive Summarisation

The first set of experiments evaluate the models on
extractive summarisation. Here, we denote the joint

3https://catalog.ldc.upenn.edu/LDC2012T21
4https://github.com/facebook/NAMAS
5The hyperparameters where tuned on the validation set to

maximise the perplexity of the summaries rather than the recon-
structed source sentences.

324



Model
Training Data Recall Precision F-1

Labelled Unlabelled R-1 R-2 R-L R-1 R-2 R-L R-1 R-2 R-L
FSC 500K - 30.817 10.861 28.263 22.357 7.998 20.520 23.415 8.156 21.468

ASC+FSC1 500K 500K 29.117 10.643 26.811 28.558 10.575 26.344 26.987 9.741 24.874
ASC+FSC2 500K 3.8M 28.236 10.359 26.218 30.112 11.131 27.896 27.453 9.902 25.452

FSC 1M - 30.889 11.645 28.257 27.169 10.266 24.916 26.984 10.028 24.711
ASC+FSC1 1M 1M 30.490 11.443 28.097 28.109 10.799 25.943 27.258 10.189 25.148
ASC+FSC2 1M 3.8M 29.034 10.780 26.801 31.037 11.521 28.658 28.336 10.313 26.145

FSC 3.8M - 30.112 12.436 27.889 34.135 13.813 31.704 30.225 12.258 28.035
ASC+FSC1 3.8M 3.8M 29.946 12.558 27.805 35.538 14.699 32.972 30.568 12.553 28.366

Table 1: Extractive Summarisation Performance. (1) The extractive summaries of these models are decoded
by the pointer network (i.e the shared component of the ASC and FSC models). (2) R-1, R-2 and R-L
represent the Rouge-1, Rouge-2 and Rouge-L score respectively.

models by ASC+FSC1 and ASC+FSC2 where ASC
is trained on unlabelled data and FSC is trained on
labelled data. The ASC+FSC1 model employs equiv-
alent sized labelled and unlabelled datasets, where
the article sentences of the unlabelled data are the
same article sentences in the labelled data, so there
is no additional unlabelled data applied in this case.
The ASC+FSC2 model employs the full unlabelled
dataset in addition to the existing labelled dataset,
which is the true semi-supervised setting.

Table 1 presents the test Rouge score on extractive
compression. We can see that the ASC+FSC1 model
achieves significant improvements on F-1 scores
when compared to the supervised FSC model only
trained on labelled data. Moreover, fixing the labelled
data size, the ASC+FSC2 model achieves better per-
formance by using additional unlabelled data than the
ASC+FSC1 model, which means the semi-supervised
learning works in this scenario. Interestingly, learn-
ing on the unlabelled data largely increases the preci-
sions (though the recalls do not benefit from it) which
leads to significant improvements on the F-1 Rouge
scores. And surprisingly, the extractive ASC+FSC1
model trained on full labelled data outperforms the
abstractive NABS (Rush et al., 2015) baseline model
(in Table 4).

6.3 Abstractive Summarisation

The second set of experiments evaluate performance
on abstractive summarisation (Table 2). Consistently,
we see that adding the generative objective to the
discriminative model (ASC+FSC1) results in a sig-
nificant boost on all the Rouge scores, while em-
ploying extra unlabelled data increase performance

further (ASC+FSC2). This validates the effectiveness
of transferring the knowledge learned on unlabelled
data to the supervised abstractive summarisation.

In Figure 3, we present the validation perplexity
to compare the abilities of the three models to learn
the compression languages. The ASC+FSC1(red)
employs the same dataset for unlabelled and labelled
training, while the ASC+FSC2(black) employs the
full unlabelled dataset. Here, the joint ASC+FSC1
model obtains better perplexities than the single dis-
criminative FSC model, but there is not much dif-
ference between ASC+FSC1 and ASC+FSC2 when
the size of the labelled dataset grows. From the per-
spective of language modelling, the generative ASC
model indeed helps the discriminative model learn to
generate good summary sentences. Table 3 displays
the validation perplexities of the benchmark models,
where the joint ASC+FSC1 model trained on the full
labelled and unlabelled datasets performs the best on
modelling compression languages.

Table 4 compares the test Rouge score on ab-
stractive summarisation. Encouragingly, the semi-
supervised model ASC+FSC2 outperforms the base-
line model NABS when trained on 500K supervised
pairs, which is only about an eighth of the super-
vised data. In Nallapati et al. (2016), the authors
exploit the full limits of discriminative RNN encoder-
decoder models by incorporating a sampled soft-
max, expanded vocabulary, additional lexical fea-
tures, and combined pointer networks6, which yields
the best performance listed in Table 4. However,
when all the data is employed with the mixed ob-

6The idea of the combined pointer networks is similar to the
FSC model, but the implementations are slightly different.

325



Model
Training Data Recall Precision F-1

Labelled Unlabelled R-1 R-2 R-L R-1 R-2 R-L R-1 R-2 R-L
FSC 500K - 27.147 10.039 25.197 33.781 13.019 31.288 29.074 10.842 26.955

ASC+FSC1 500K 500K 27.067 10.717 25.239 33.893 13.678 31.585 29.027 11.461 27.072
ASC+FSC2 500K 3.8M 27.662 11.102 25.703 35.756 14.537 33.212 30.140 12.051 27.99

FSC 1M - 28.521 11.308 26.478 33.132 13.422 30.741 29.580 11.807 27.439
ASC+FSC1 1M 1M 28.333 11.814 26.367 35.860 15.243 33.306 30.569 12.743 28.431
ASC+FSC2 1M 3.8M 29.017 12.007 27.067 36.128 14.988 33.626 31.089 12.785 28.967

FSC 3.8M - 31.148 13.553 28.954 36.917 16.127 34.405 32.327 14.000 30.087
ASC+FSC1 3.8M 3.8M 32.385 15.155 30.246 39.224 18.382 36.662 34.156 15.935 31.915

Table 2: Abstractive Summarisation Performance. The abstractive summaries of these models are decoded by
the combined pointer network (i.e. the shared pointer network together with the softmax output layer over the
full vocabulary).

Model Labelled Data Perplexity

Bag-of-Word (BoW) 3.8M 43.6
Convolutional (TDNN) 3.8M 35.9
Attention-Based (NABS) 3.8M 27.1
(Rush et al., 2015)

Forced-Attention (FSC) 3.8M 18.6
Auto-encoding (ASC+FSC1) 3.8M 16.6

Table 3: Comparison on validation perplexity. BoW,
TDNN and NABS are the baseline neural compres-
sion models with different encoders in Rush et al.
(2015)

Model Labelled Data R-1 R-2 R-L
(Rush et al., 2015) 3.8M 29.78 11.89 26.97

(Nallapati et al., 2016) 3.8M 33.17 16.02 30.98
ASC + FSC2 500K 30.14 12.05 27.99
ASC + FSC2 1M 31.09 12.79 28.97
ASC + FSC1 3.8M 34.17 15.94 31.92

Table 4: Comparison on test Rouge scores

jective ASC+FSC1 model, the result is significantly
better than this previous state-of-the-art. As the semi-
supervised ASC+FSC2 model can be trained on un-
limited unlabelled data, there is still significant space
left for further performance improvements.

Table 5 presents the examples of the compression
sentences decoded by the joint model ASC+FSC1
and the FSC model trained on the full dataset.

7 Discussion

From the perspective of generative models, a sig-
nificant contribution of our work is a process for
reducing variance for discrete sampling-based vari-
ational inference. The first step is to introduce two
baselines in the control variates method due to the
fact that the reparameterisation trick is not applica-

0 500K 1M 2M 4M
Labelled Data size

20

40

60

80

100

P
e
rp

le
x
it

y

100

49

35.4
27.4

18.6

87.7

43

32
25.2 16.6

83.3

42.5

33.6
25.4

16.6

FSC

ASC+FSC1
ASC+FSC2

Figure 3: Perplexity on validation dataset.

ble for discrete latent variables. However it is the
second step of using a pointer network as the biased
estimator that makes the key contribution. This re-
sults in a much smaller state space, bounded by the
length of the source sentence (mostly between 20
and 50 tokens), compared to the full vocabulary. The
final step is to apply the FSC model to transfer the
knowledge learned from the supervised data to the
pointer network. This further reduces the sampling
variance by acting as a sort of bootstrap or constraint
on the unsupervised latent space which could encode
almost anything but which thus becomes biased to-
wards matching the supervised distribution. By using
these variance reduction methods, the ASC model is
able to carry out effective variational inference for the
latent language model so that it learns to summarise
the sentences from the large unlabelled training data.

In a different vein, according to the reinforce-
ment learning interpretation of sequence level train-
ing (Ranzato et al., 2016), the compression model
of the ASC model acts as an agent which iteratively
generates words (takes actions) to compose the com-

326



pression sentence and the reconstruction model acts
as the reward function evaluating the quality of the
compressed sentence which is provided as a reward
signal. Ranzato et al. (2016) presents a thorough
empirical evaluation on three different NLP tasks by
using additional sequence-level reward (BLEU and
Rouge-2) to train the models. In the context of this
paper, we apply a variational lower bound (mixed re-
construction error and KL divergence regularisation)
instead of the explicit Rouge score. Thus the ASC
model is granted the ability to explore unlimited unla-
belled data resources. In addition we introduce a su-
pervised FSC model to teach the compression model
to generate stable sequences instead of starting with
a random policy. In this case, the pointer network
that bridges the supervised and unsupervised model
is trained by a mixed criterion of REINFORCE and
cross-entropy in an incremental learning framework.
Eventually, according to the experimental results, the
joint ASC and FSC model is able to learn a robust
compression model by exploring both labelled and
unlabelled data, which outperforms the other sin-
gle discriminative compression models that are only
trained by cross-entropy reward signal.

8 Conclusion

In this paper we have introduced a generative model
for jointly modelling pairs of sequences and evalu-
ated its efficacy on the task of sentence compression.
The variational auto-encoding framework provided
an effective inference algorithm for this approach
and also allowed us to explore combinations of dis-
criminative (FSC) and generative (ASC) compression
models. The evaluation results show that supervised
training of the combination of these models improves
upon the state-of-the-art performance for the Giga-
word compression dataset. When we train the su-
pervised FSC model on a small amount of labelled
data and the unsupervised ASC model on a large
set of unlabelled data the combined model is able to
outperform previously reported benchmarks trained
on a great deal more supervised data. These results
demonstrate that we are able to model language as a
discrete latent variable in a variational auto-encoding
framework and that the resultant generative model is
able to effectively exploit both supervised and unsu-
pervised data in sequence-to-sequence tasks.

src the sri lankan government on wednesday announced the closure of
government schools with immediate effect as a military campaign
against tamil separatists escalated in the north of the country .

ref sri lanka closes schools as war escalates
asca sri lanka closes government schools
asce sri lankan government closure schools escalated
fsca sri lankan government closure with tamil rebels closure
src factory orders for manufactured goods rose #.# percent in septem-

ber , the commerce department said here thursday .
ref us september factory orders up #.# percent
asca us factory orders up #.# percent in september
asce factory orders rose #.# percent in september
fsca factory orders #.# percent in september
src hong kong signed a breakthrough air services agreement with the

united states on friday that will allow us airlines to carry freight to
asian destinations via the territory .

ref hong kong us sign breakthrough aviation pact
asca us hong kong sign air services agreement
asce hong kong signed air services agreement with united states
fsca hong kong signed air services pact with united states
src a swedish un soldier in bosnia was shot and killed by a stray bul-

let on tuesday in an incident authorities are calling an accident ,
military officials in stockholm said tuesday .

ref swedish un soldier in bosnia killed by stray bullet
asca swedish un soldier killed in bosnia
asce swedish un soldier shot and killed
fsca swedish soldier shot and killed in bosnia
src tea scores on the fourth day of the second test between australia

and pakistan here monday .
ref australia vs pakistan tea scorecard
asca australia v pakistan tea scores
asce australia tea scores
fsca tea scores on #th day of #nd test
src india won the toss and chose to bat on the opening day in the

opening test against west indies at the antigua recreation ground
on friday .

ref india win toss and elect to bat in first test
asca india win toss and bat against west indies
asce india won toss on opening day against west indies
fsca india chose to bat on opening day against west indies
src a powerful bomb exploded outside a navy base near the sri lankan

capital colombo tuesday , seriously wounding at least one person ,
military officials said .

ref bomb attack outside srilanka navy base
asca bomb explodes outside sri lanka navy base
asce bomb outside sri lankan navy base wounding one
fsca bomb exploded outside sri lankan navy base
src press freedom in algeria remains at risk despite the release on

wednesday of prominent newspaper editor mohamed <unk> after
a two-year prison sentence , human rights organizations said .

ref algerian press freedom at risk despite editor ’s release <unk>
picture

asca algeria press freedom remains at risk
asce algeria press freedom remains at risk
fsca press freedom in algeria at risk

Table 5: Examples of the compression sentences.
src and ref are the source and reference sentences
provided in the test set. asca and asce are the abstrac-
tive and extractive compression sentences decoded
by the joint model ASC+FSC1, and fsca denotes the
abstractive compression obtained by the FSC model.

327



References
[Ba et al.2015] Jimmy Ba, Volodymyr Mnih, and Koray

Kavukcuoglu. 2015. Multiple object recognition with
visual attention. In Proceedings of ICLR.

[Bahdanau et al.2015] Dzmitry Bahdanau, Kyunghyun
Cho, and Yoshua Bengio. 2015. Neural machine trans-
lation by jointly learning to align and translate. In
Proceedings of ICLR.

[Bowman et al.2015] Samuel R Bowman, Luke Vilnis,
Oriol Vinyals, Andrew M Dai, Rafal Jozefowicz, and
Samy Bengio. 2015. Generating sentences from a
continuous space. arXiv preprint arXiv:1511.06349.

[Chorowski et al.2015] Jan K Chorowski, Dzmitry Bah-
danau, Dmitriy Serdyuk, Kyunghyun Cho, and Yoshua
Bengio. 2015. Attention-based models for speech
recognition. In Proceedings of NIPS, pages 577–585.

[Dai and Le2015] Andrew M Dai and Quoc V Le. 2015.
Semi-supervised sequence learning. In Proceedings of
NIPS, pages 3061–3069.

[Dyer et al.2016] Chris Dyer, Adhiguna Kuncoro, Miguel
Ballesteros, and Noah A Smith. 2016. Recurrent neural
network grammars. In Proceedings of NAACL.

[Eslami et al.2016] SM Eslami, Nicolas Heess, Theophane
Weber, Yuval Tassa, Koray Kavukcuoglu, and Geof-
frey E Hinton. 2016. Attend, infer, repeat: Fast scene
understanding with generative models. arXiv preprint
arXiv:1603.08575.

[Filippova et al.2015] Katja Filippova, Enrique Alfonseca,
Carlos A Colmenares, Lukasz Kaiser, and Oriol Vinyals.
2015. Sentence compression by deletion with lstms. In
Proceedings of EMNLP, pages 360–368.

[Gregor et al.2015] Karol Gregor, Ivo Danihelka, Alex
Graves, and Daan Wierstra. 2015. Draw: A recurrent
neural network for image generation. In Proceedings
of ICML.

[Gu et al.2016] Jiatao Gu, Zhengdong Lu, Hang Li, and
Victor OK Li. 2016. Incorporating copying mecha-
nism in sequence-to-sequence learning. arXiv preprint
arXiv:1603.06393.

[Gulcehre et al.2016] Caglar Gulcehre, Sungjin Ahn,
Ramesh Nallapati, Bowen Zhou, and Yoshua Bengio.
2016. Pointing the unknown words. arXiv preprint
arXiv:1603.08148.

[Hinton and Salakhutdinov2006] Geoffrey E Hinton and
Ruslan R Salakhutdinov. 2006. Reducing the di-
mensionality of data with neural networks. Science,
313(5786):504–507.

[Kalchbrenner and Blunsom2013] Nal Kalchbrenner and
Phil Blunsom. 2013. Recurrent continuous translation
models. In Proceedings of EMNLP.

[Kingma and Ba2015] Diederik P. Kingma and Jimmy Ba.
2015. Adam: A method for stochastic optimization. In
Proceedings of ICLR.

[Kingma and Welling2014] Diederik P Kingma and Max
Welling. 2014. Auto-encoding variational bayes. In
Proceedings of ICLR.

[Kingma et al.2014] Diederik P Kingma, Shakir Mo-
hamed, Danilo Jimenez Rezende, and Max Welling.
2014. Semi-supervised learning with deep generative
models. In Proceedings of NIPS.

[Marcheggiani and Titov2016] Diego Marcheggiani and
Ivan Titov. 2016. Discrete-state variational autoen-
coders for joint discovery and factorization of relations.
Transactions of the Association for Computational Lin-
guistics, 4.

[Miao et al.2016] Yishu Miao, Lei Yu, and Phil Blunsom.
2016. Neural variational inference for text processing.
In Proceedings of ICML.

[Mnih and Gregor2014] Andriy Mnih and Karol Gregor.
2014. Neural variational inference and learning in be-
lief networks. In Proceedings of ICML.

[Mnih et al.2014] Volodymyr Mnih, Nicolas Heess, and
Alex Graves. 2014. Recurrent models of visual atten-
tion. In Proceedings of NIPS.

[Nallapati et al.2016] Ramesh Nallapati, Bowen Zhou,
Ça glar Gulçehre, and Bing Xiang. 2016. Abstrac-
tive text summarization using sequence-to-sequence
rnns and beyond. arXiv preprint arXiv:1602.06023.

[Ranzato et al.2016] Marc’Aurelio Ranzato, Sumit
Chopra, Michael Auli, and Wojciech Zaremba. 2016.
Sequence level training with recurrent neural networks.

[Rezende et al.2014] Danilo J Rezende, Shakir Mohamed,
and Daan Wierstra. 2014. Stochastic backpropagation
and approximate inference in deep generative models.
In Proceedings of ICML.

[Rumelhart et al.1985] David E Rumelhart, Geoffrey E
Hinton, and Ronald J Williams. 1985. Learning in-
ternal representations by error propagation. Technical
report, DTIC Document.

[Rush et al.2015] Alexander M Rush, Sumit Chopra, and
Jason Weston. 2015. A neural attention model for
abstractive sentence summarization. In Proceedings of
EMNLP.

[Sutskever et al.2014] Ilya Sutskever, Oriol Vinyals, and
Quoc V Le. 2014. Sequence to sequence learning with
neural networks. In Proceedings of NIPS.

[Vinyals et al.2015] Oriol Vinyals, Meire Fortunato, and
Navdeep Jaitly. 2015. Pointer networks. In Proceed-
ings of NIPS, pages 2674–2682.

[Xu et al.2015] Kelvin Xu, Jimmy Ba, Ryan Kiros, Aaron
Courville, Ruslan Salakhutdinov, Richard Zemel, and
Yoshua Bengio. 2015. Show, attend and tell: Neural
image caption generation with visual attention.

328


