



















































Room to Glo: A Systematic Comparison of Semantic Change Detection Approaches with Word Embeddings


Proceedings of the 2019 Conference on Empirical Methods in Natural Language Processing
and the 9th International Joint Conference on Natural Language Processing, pages 66–76,

Hong Kong, China, November 3–7, 2019. c©2019 Association for Computational Linguistics

66

Room to Glo: A Systematic Comparison of Semantic Change Detection
Approaches with Word Embeddings

Philippa Shoemark∗♠♦, Farhana Ferdousi Liza∗∗♠♥, Dong Nguyen♠♦,
Scott A. Hale♠†, Barbara McGillivray♠‡

♠The Alan Turing Institute, UK, ♦School of Informatics, University of Edinburgh, UK,
♥School of Computing, University of Kent, UK, †Oxford Internet Institute, University of Oxford, UK,

‡Faculty of Modern and Medieval Languages, University of Cambridge, UK
p.j.shoemark@ed.ac.uk, fl207@kent.ac.uk, dnguyen@turing.ac.uk,

scott.hale@oii.ox.ac.uk, bmcgillivray@turing.ac.uk

Abstract
Word embeddings are increasingly used for
the automatic detection of semantic change;
yet, a robust evaluation and systematic com-
parison of the choices involved has been lack-
ing. We propose a new evaluation framework
for semantic change detection and find that (i)
using the whole time series is preferable over
only comparing between the first and last time
points; (ii) independently trained and aligned
embeddings perform better than continuously
trained embeddings for long time periods; and
(iii) that the reference point for comparison
matters. We also present an analysis of the
changes detected on a large Twitter dataset
spanning 5.5 years.

1 Introduction

Semantic change, i.e., the change in the meanings
of words, is inherent in language. A new mean-
ing for a word can be added to the original one,
become more or less prevalent, or even replace
a former meaning (see Koch, 2016). An exam-
ple is lit, which has gained a new sense of ‘excit-
ing’ or ‘awesome’, via the extension of its long-
established use as slang for ‘intoxicated’ to de-
scribe the vibrant environment in which acts of be-
coming intoxicated often occur.1

Automatically measuring semantic change can
discover changes that would not be apparent from
manual inspection. It can also facilitate the inves-
tigation of mechanisms driving semantic changes,
e.g., how these changes are affected by language-
internal and social factors. Moreover, there are
direct benefits to applications, such as the detec-
tion of meaning shifts in polarized words to update
sentiment lexicons and the detection of emerging
word meanings to update dictionaries.

∗*These authors contributed equally to the study.
1“What Does ‘Lit’ Mean?” Retrieved from

https://www.merriam-webster.com/words-at-play/lit-
meaning-origin. Accessed 2018-10-05.

Word embeddings are increasingly used for au-
tomatic semantic change detection (Kutuzov et al.,
2018). Words are mapped to low-dimensional vec-
tors, and the semantic change of a word is then
measured by comparing its vectors across time pe-
riods. Although word embeddings have emerged
as one of the most popular approaches to measur-
ing semantic change, researchers are faced with
various decisions, including whether to train em-
beddings independently or continuously, which
metric to use to measure change between two time
periods, and which ranking approach to use for
comparing semantic change candidates.

A major challenge in developing semantic
change detection systems is obtaining ground truth
data (Kutuzov et al., 2018), which has so far pre-
vented a systematic evaluation of different ap-
proaches. Many studies rely on hand-picked ex-
amples (e.g., Wijaya and Yeniterzi, 2011; Rodda
et al., 2017) or human judgements (e.g., Tredici
et al., 2018). Some studies have performed
evaluations based on dictionary data (e.g., Cook
et al., 2014; Basile and McGillivray, 2018), man-
ual annotation of dictionary senses in corpora
(McGillivray et al., 2019), and manual annota-
tion of word types (Kenter et al., 2015), but this
approach is not well-suited for recent, yet-to-be-
recorded changes.

In this paper, we present a new framework to
evaluate semantic change detection systems (Sec-
tion 5.1). We model multiple semantic change
scenarios and compare the impact of different
choices that are typical when using word embed-
dings to analyse semantic change (Section 5.2).
Our framework is not specific to the use of word
embeddings and can also support the evaluation of
other approaches not considered in this paper.2 We

2The dataset and all code for this pa-
per is available at https://github.com/
alan-turing-institute/room2glo.

https://github.com/alan-turing-institute/room2glo
https://github.com/alan-turing-institute/room2glo


67

then apply the approaches to 5.5 years of Twitter
data and provide an in-depth analysis of the top-
ranked semantic change candidates (Section 6).

2 Related Work

There has been increasing interest in automatic
semantic change detection (Tang, 2018; Kutuzov
et al., 2018), using methods ranging from neu-
ral models to Bayesian learning (e.g., Frermann
and Lapata, 2016), Temporal Random Indexing
(e.g., Basile and McGillivray, 2018) and dynamic
topic modelling (e.g., Blei and Lafferty, 2006).
Word embeddings have been especially popular
(e.g., Dubossarsky et al., 2017; Hamilton et al.,
2016b), and recently Bamler and Mandt (2017)
and Rudolph and Blei (2018) explored dynamic
embeddings for semantic change detection by
training a joint model over all time periods.

Most previous work analysed corpora spanning
long time periods (e.g., a few centuries), such as
the Google Books Ngrams corpus and the Cor-
pus of Historical American English (e.g., Hamil-
ton et al., 2016b). Recently short-term semantic
changes have been studied, for example in Ama-
zon Reviews (Kulkarni et al., 2015), scientific pa-
pers (Rudolph and Blei, 2018), news articles (Tang
et al., 2016; Yao et al., 2018), and the UK Web
Archive (Basile and McGillivray, 2018).

In this paper, we focus on social media: in par-
ticular, on Twitter. Semantic change in social me-
dia has only been lightly explored, with studies
on Twitter (Kulkarni et al., 2015), the VKontake
social network (Stewart et al., 2017), and Red-
dit (Tredici et al., 2018). In comparison to these
studies, our data covers a longer time period and
our evaluation more deeply explores the various
choices involved in semantic change detection.

Much of the previous work on semantic change
discovery has relied on qualitative evaluations of
small samples from the output, case studies of
a few well-known historical changes (e.g., Kim
et al., 2014; Hamilton et al., 2016a,b; Stewart
et al., 2017), or attested changes extracted from
dictionaries (e.g., Rohrdantz et al., 2011; Cook
et al., 2014; Basile and McGillivray, 2018). Some
evaluations have been based on related tasks for
which performance is expected to correlate, such
as classifying the time period a text snippet be-
longs to (Mihalcea and Nastase, 2012) or predict-
ing real-world events (Kutuzov et al., 2017).

Here we look for meaning changes over a short,

recent time period. There is little existing lit-
erature on words that have undergone meaning
change within the relevant time-frame, and lan-
guage on social media is not always fully reflected
in general language dictionaries. Moreover, even
if we were able to obtain a substantial list of at-
tested meaning changes, a system might still dis-
cover other valid meaning change candidates. Un-
fortunately, determining the validity of seman-
tic change candidates is time-consuming, labour-
intensive, and subjective; so, building on prior ap-
proaches (e.g., Kulkarni et al., 2015; Rosenfeld
and Erk, 2018; Nguyen and Eisenstein, 2017), we
introduce a new synthetic evaluation framework
for semantic change detection.

Synthetic evaluation is especially important for
short, recent time periods given the lack of other
resources for evaluation, but it is also valuable
for longer periods to detect hitherto unknown
changes. Moreover, phenomena like seasonal
trends are more likely to interfere with semantic
change detection for short time periods, making
this a challenging use case for semantic change
detection. At the same time, it is an important use
case in order to advance semantic change detec-
tion for contemporary data to be used to update
lexicons, sentiment/polarity ratings, and other lan-
guage resources.

3 Data

We collected tweets from Twitter’s ‘sta-
tuses/sample’ streaming API endpoint from
January 1, 2012, to June 30, 2017. There are
a few minor gaps in our data due to occasional
data collection issues. Most are a few minutes
or at most a day, but one gap spans January and
February 2015. Overall, our dataset consists of
over 7 billion tweets sent during 1,889 days.

We use the Compact Language Detector ver-
sion 2 (CLDv2),3 following guidance from Gra-
ham et al. (2014), and we discard any tweets for
which CLD detects less than 90% of the text to be
in English, resulting in roughly 2.5 billion tweets.
The remaining tweets are then lowercased, and
usernames, urls, and non-alphanumeric characters
(except emoji and hashtags) are removed. The text
is then tokenized on whitespace. Digit-only tokens
are replaced with ‘<NUM>’. Finally, we discard
tweets that are duplicated within a given month,
as tweets which are re-tweeted or copied verba-

3https://github.com/CLD2Owners/cld2

https://github.com/CLD2Owners/cld2


68

tim many times are not independent language sam-
ples and may exert undue influence on embed-
dings (Mikolov et al., 2018). Our final dataset con-
sists of 1,696,142,020 tweets and 20,273,497,107
tokens.

4 Methods

Following the approach introduced by Kim et al.
(2014) and adopted by Hamilton et al. (2016b) and
others, we divide our dataset into discrete time pe-
riods, and for each time period t we compute word
embeddings, representing each word w by a d-
dimensional vector. We then compare the embed-
dings between different time periods to measure
the semantic change of words. We use monthly
bins, but the approach is applicable to time peri-
ods of any length, provided there is sufficient data
in each bin to train quality embeddings.

4.1 Training Word Embeddings

We train word embeddings using gensim’s (Ře-
hůřek and Sojka, 2010) implementation of the
continuous bag of words (CBOW; Mikolov et al.,
2013) model.4 Two evaluation tasks (word sim-
ilarity using the dataset Wordsim3535 and word
analogy using the word test dataset6) were used
to tune four hyperparameters, resulting in 200 di-
mensions, a window size of 10, 15 iterations, and
a minimum frequency of 500 (per time-step). For
all other hyperparameters we use gensim’s default
values.

4.2 Comparable Embeddings

To compare embeddings for a word between two
time-points, the embeddings need to be in the
same coordinate axes. We experiment with three
approaches: (1) Training continuously by initial-
izing the embeddings for a given time-step t with
the embeddings trained at the previous time-step
t− 1 (e.g., Kim et al., 2014); (2) Training embed-
dings for each time-step independently and post-
hoc aligning them (e.g., Hamilton et al., 2016b;
Kulkarni et al., 2015) using orthogonal Procrustes

4We only report results using CBOW in this paper. We
found similar trends when using the skip-gram model, which
has been used in previous works on semantic change (e.g.,
Kim et al., 2014; Kulkarni et al., 2015; Hamilton et al.,
2016b; Stewart et al., 2017; Tredici et al., 2018).

5http://www.cs.technion.ac.il/~gabr/
resources/data/wordsim353/

6http://www.fit.vutbr.cz/~imikolov/
rnnlm/word-test.v1.txt

(as used by Hamilton et al., 2016b); and (3) com-
bining continuous training and post-hoc alignment
(as in Stewart et al., 2017).

4.3 Measuring Semantic Change

We compare two measures for quantifying a
word’s semantic change between two time points.
The first is the cosine distance, a common ap-
proach in previous work (Hamilton et al., 2016b;
Stewart et al., 2017; Dubossarsky et al., 2017; Kim
et al., 2014). The second measure, introduced by
Hamilton et al. (2016a), is based on comparing
the neighbourhoods of the embeddings. For each
time-step t, we first find the ordered set of word
w’s k nearest neighbours, based on cosine simi-
larity. Following Hamilton et al. (2016a), we set
k = 25. For any two time-steps, we then take
the union S of the two nearest neighbour sets and
create a second-order vector vt where each entry
v
(i)
t contains the cosine similarity of target word
w to neighbouring word S(i) at time t. We then
measure the cosine distance between these two
second-order vectors.

4.4 Ranking Semantic Change Candidates

Our goal is not only to measure semantic changes
for pre-selected words, but to identify which
words out of the entire vocabulary have under-
gone the greatest or most significant semantic
change. We compare several approaches to gen-
erating ranked lists of the ‘most changed’ words.
The first only measures the change between two
time-steps. The remaining approaches consider
the whole time series. For the approaches that
use the whole time-series, we limit the semantic
change candidates to words that occur at least 500
times in at least 75% of the time-steps, simply con-
densing a word’s time-series if there are gaps.

Two-step approach We first measure each
word’s semantic change between just two pre-
selected time-steps (in this study, the first and final
time-steps). This simple approach has been used
in previous work, such as Kim et al. (2014).

Change-point detection Following Kulkarni
et al. (2015), we choose one time-step t0 as a refer-
ence and compute semantic change scores for each
word with respect to t0 at every other time-step
ti. Then, for each word w and each time-step ti,
we compute a mean-shift score by partitioning w’s
time series of semantic change scores at ti, and

http://www.cs.technion.ac.il/~gabr/resources/data/wordsim353/
http://www.cs.technion.ac.il/~gabr/resources/data/wordsim353/
http://www.fit.vutbr.cz/~imikolov/rnnlm/word-test.v1.txt
http://www.fit.vutbr.cz/~imikolov/rnnlm/word-test.v1.txt


69

calculating the difference between the means of
the scores in the two partitions. Following Kulka-
rni et al. (2015), we use Monte Carlo permuta-
tion tests to estimate the statistical significance
of mean-shift scores, and take the time-step with
the lowest estimated p-value as the change point.
Words are first sorted in descending order of the
mean-shift scores of their estimated change points
and then in ascending order of their p-values.

Kulkarni et al. standardized each word’s cosine
score for a given time-step relative to the mean
score across all words at that time-step. This is
meant to help control for corpus artefacts, e.g.,
shifting sampling biases over time, but its impact
has not been demonstrated yet. We compare the
results of ranking words without standardization
(raw scores) and with standardization (z scores).

Global trend detection We also compare three
approaches to detect global trends in the same time
series of semantic change scores as the change
point detection methods. The first approach is fit-
ting a linear regression model di = α + βti + �i,
where di is semantic change distance scores, ti is
time periods {1, ..., n}, and �i is error. We rank the
words based on their absolute β values (slopes),
which gives the semantic change per time period
under the assumption of a linear relationship.

We also experiment with two correlation mea-
sures: Pearson’s (r) and Kendall’s rank (τ ) corre-
lation coefficients. In contrast to linear regression
and Pearson’s correlation coefficient, Kendall’s
tau is non-parametric and resistant to outliers
(Kendall, 1948). It is therefore often used for mea-
suring trends in time series and change point de-
tection (Quessy et al., 2013). We rank the words
based on the absolute values of τ and r.

5 Synthetic Evaluation

To systematically compare the different method-
ological choices we introduce a new synthetic
evaluation framework. We create seven schemas
for how a word’s distributional statistics may
change. Three of these model scenarios in which a
semantic change occurs, but crucially the remain-
ing four model scenarios that we would not wish
to classify as semantic change. Our framework
builds on previous approaches that have modelled
one type of semantic change—either a word gain-
ing an additional sense (Kulkarni et al., 2015) or
a word’s original sense being completely replaced
(Rosenfeld and Erk, 2018). Furthermore, although

most work has focused on recall, our framework
can also test precision, i.e., the ability to distin-
guish the injected changes from noise.

5.1 Dataset Construction
We first randomly sample 10% of the tweets from
a single month from the middle of our empirical
dataset (Dec. 2014). We then draw 66 random
70% samples with replacement from this sample.
These 66 samples represent a dataset of 66 months
(5.5 years) in which no semantic changes occur,
but words’ distributional statistics still vary from
month to month due to sampling noise. This dif-
fers from, e.g., Kulkarni et al. (2015), who used a
series of exact duplicates of an initial set of docu-
ments. Finally, we inject controlled changes by in-
serting made-up ‘pseudowords’, carefully chang-
ing their frequencies and co-occurrence distribu-
tions throughout the time series.

Our procedure for inserting pseudowords is as
follows: we split the real words that occur in our
empirical data for December 2014 into five equally
sized frequency bins. For each pseudoword ρ that
we insert, we choose a frequency bin. To repre-
sent one of the senses of ρ, we sample a real word
w from the relevant frequency bin. For each syn-
thetic month m, we insert ρ replacing each token
of w with success probability p(ρ,w,m).

For example, we might insert one pseudoword
replacing the instances of the word ‘pudding’ with
a fixed probability throughout the whole time se-
ries, and then insert this same pseudoword replac-
ing the instances of the word ‘neon’ with increas-
ing probability over time. This would model a
word that initially has a meaning related to ‘pud-
ding’, but which then acquires a new sense related
to ‘neon’. We use seven different schemas: three
model different kinds of semantic change (C1–
C3), and four model ephemeral changes that we
aim to avoid (D1–D4): see Figure 1.

C1: Description: This schema models a word
that gradually acquires a new sense over
time while retaining its original sense (e.g.,
snowflake, lit). This corresponds to what
Koch (2016, 24) calls ‘innovative meaning
change’ and Tahmasebi et al. (2018, 35) calls
‘novel word sense’.
Procedure: Sample one real wordw1 to rep-
resent the original pseudosense7 of the pseu-
doword ρ and another real word w2 to rep-

7A single pseudosense may in practice correspond to mul-



70

Figure 1: Illustration of our seven schemas for inserting pseudowords into the synthetic dataset. Each line rep-
resents a different pseudosense. Lines chart the probability of inserting a pseudoword token replacing a token
representing the relevant pseudosense, as a function of ‘time’. We vary whether the success probabilities change
linearly or logarithmically and the time-steps at which the changes begin and end.

resent its new pseudosense. For each token
of w1 that occurs in the synthetic dataset for
month m, insert a token of ρ replacing it with
success probability p(ρ,w1,m), which remains
constant throughout the time series. Insert
ρ replacing each token of w2 with success
probability p(ρ,w2,m), which starts low and
gradually increases over time.

C2: Description: This schema models a word
that gradually acquires a new sense over
time while its original sense gradually falls
out of use (cf., silly, which originally meant
‘happy’ or ‘lucky’ and now means ‘foolish’).
This corresponds to the full cycle of genesis
and disappearance of lexical polysemy as de-
scribed by Koch (2016, 25), i.e., an ‘innova-
tive meaning change’ and a ‘reductive mean-
ing change’.
Procedure: Sample one real wordw1 to rep-
resent the original sense of the pseudoword
ρ, and another real word w2 to represent its
new sense. For each token of w1 that occurs
in the synthetic dataset for month m, insert a
token of ρ replacing it with success probabil-
ity p(ρ,w1,m), which starts relatively high and
gradually decreases over time. Insert ρ re-
placing each token of w2 with success proba-
bility p(ρ,w2,m) = 1− p(ρ,w1,m).

C3: Description: This schema models a word
with many senses, different random subsets
of which are relatively frequent each month
(e.g., an acronym that can refer to many dif-
ferent entities, which may trend at different
times). Over time, the word acquires an ad-
ditional, more stable sense whose frequency

tiple real senses, since the real word we use to represent this
pseudosense may itself have multiple senses. There are few
words in our dataset with only one sense according to Word-
Net; so, we restrict our choice to words for which WordNet
lists no more than 10 senses. We also require that none of
the real words chosen to represent different pseudosenses of
a given pseudoword have any senses in common.

does not fluctuate so much from month to
month. An example is BLM, which has been
used to refer to a baseball magazine, a mar-
keting company, a music label, the US Bu-
reau of Land Management, etc., but since
2013 has been consistently associated with
the Black Lives Matter movement. This
could be considered a ‘reductive’ meaning
change-in-progress, as we start out with mul-
tiple competing senses, and one sense grad-
ually comes to dominate without the others
having yet died out (see Koch, 2016, Fig. 2).
Procedure: Sample eight real words
{w1, w2, ..., w8} to represent eight different
pseudosenses for the pseudoword ρ. For
each month m, draw a multinomial dis-
tribution Dm over the first seven sampled
words, using a Dirichlet prior with uniform,
sparsity-inducing alpha. Replacing each
token of a word wi, i ∈ [1, 7], insert a token
of ρ with success probability Dmwi . Let w8
represent the new, more stable pseudosense,
and for each month m, insert a token of
ρ replacing each token of w8 with success
probability p(ρ,w8,m), which starts low and
gradually increases over time.

D1: Description: This schema models a word
that becomes more frequent over time, but
does not change its co-occurrence distribu-
tion.
Procedure: Sample one real word w to rep-
resent the meaning of the pseudoword ρ. For
each token of w that occurs in the synthetic
dataset for month m, insert a token of ρ re-
placing the token of w with success probabil-
ity p(ρ,w,m). p(ρ,w,m) starts relatively low and
gradually increases over time.

D2: Description: This schema models a word
with two senses. One sense is relatively infre-
quent, but suddenly spikes in frequency (e.g.,



71

Figure 2: Precision–recall plots for times series approaches for k in range [0, 1000]. Left: Change point methods
with Raw and Standardized (z) scores. Right: global trend methods including linear regression (Beta), Pearson
correlation coefficient (r), and Kendall rank correlation coefficient (tau). Dashed lines use the first timestep as the
reference point for comparison while solid lines use the last timestep.

due to a trending topic), before becoming in-
frequent again.
Procedure: Sample two real words w1 and
w2 to represent the two pseudosenses. Insert
ρ replacing each token of w1 with probability
p(ρ,w1,m), which remains constant through-
out the time series, and replacing each to-
ken of w2 with probability p(ρ,w2,m), which
starts relatively low, rapidly increases and
then rapidly decreases again.

D3: Description: This schema models a word
with two senses: one is usually relatively in-
frequent, but spikes in frequency at periodic
intervals (i.e., during the same month every
year). An example is turkey, whose ‘poultry’
sense tends to be much more frequent around
American Thanksgiving and Christmas.
Procedure: Sample two real words w1 and
w2 to represent the two pseudosenses. Insert
ρ replacing each token of w1 with probability
p(ρ,w1,m), which remains constant throughout
the time series, and replace each token of w2
with probability p(ρ,w2,m), which is relatively
low for most time-steps but rapidly spikes
around the same month each year.

D4: Description: Like C3, this schema models
words that can refer to many different enti-
ties, but in this case, an additional, more sta-

ble sense does not emerge.
Procedure: Sample seven real words
{w1, w2, ..., w7} to represent different pseu-
dosenses for ρ. For each month m, draw
a multinomial distribution Dm over these
seven words, using a Dirichlet prior with
uniform, sparsity-inducing alpha. Replacing
each token of a word wi, i ∈ [1, 7], insert a
token of ρ with success probability Dmwi .

For each of these seven schemas, we create
thirty pseudowords (six for each of our five fre-
quency bins), and we vary whether the success
probabilities change linearly or logarithmically
and the time-steps at which the changes begin and
end. In total, we insert 90 pseudowords using
Schemas C1–C3, which model genuine seman-
tic changes that we would like to be able to de-
tect, and 120 pseudowords using Schemas D1–D4,
which model real changes in words’ use statistics
but do not reflect semantic change. The synthetic
dataset also contains 887,926 real words.

5.2 Evaluation Results
We evaluate systems by how highly they rank
pseudowords from schemas C1–C3 using the Av-
erage Precision @ K, which approximates the area
under a precision–recall curve over the interval
from 0 to K. It is defined as the sum, over ev-
ery rank r in the top-K list of semantic change



72

candidates, of the precision at rank r multiplied
by the change in recall between ranks r − 1 and
r: AP@K =

∑K
r=1 P (r)∆R(r), where P (r)

is the percentage of top-r candidates which are
pseudowords belonging to Schemas C1–C3, and
R(r) is the percentage of all C1–C3 pseudowords
that appear in the top-r. The results are shown
in Table 1 (two-step approach, comparing the first
and last time steps) and Table 2 (whole time se-
ries). Precision–recall curves for the time series
approaches are shown in Figure 2.

Continuous training does not ensure that em-
beddings are comparable. We experiment with
three configurations for training the embeddings
for the two-step approach: 1) training the embed-
dings for each time-step independently (ind.); 2)
initializing the embeddings for the final time-step
with those trained on the first time-step (cont.);
and 3) continuous training throughout the whole
series, so that the final time-step’s embeddings are
initialized with the data from all preceding time-
steps (cont. whole series).

Continuous training has been used without sep-
arate alignment (e.g., Kim et al., 2014) as each
time period is a continuation of the embeddings
from the previous period. Table 1 shows, how-
ever, that alignment is necessary for continuously
trained embeddings using the whole series as well
as for independent ones when using the cosine dis-
tance measure. It is likely that the huge number
of training updates in the entire time series causes
the embeddings to drift considerably. For the time
series approaches, we therefore did not apply the
cosine measure without first aligning embeddings.

Using the whole time series is more effective
than comparing the first and the last time steps.
Overall, the approaches using the whole time se-
ries (Table 2) are more effective than the two-step
approaches; particularly with regard to finding C1
pseudowords and avoiding D4 pseudowords.

Continuous training provides no benefit for
time series approaches. For the time series ap-
proaches, independent training tends to perform
better than continuous training (Table 2). The lack
of improvement with continuous training is partic-
ularly noteworthy as independent training is more
computationally efficient than continuous training,
since different time periods can be trained in paral-
lel. We did not explore the impact of different hy-
perparameter choices on continuous training, but

ind. cont. cont. (whole series)

cosine (unaligned) 0.00 0.32 0.00
cosine (aligned) 0.25 0.32 0.27
neighbourhood 0.28 0.34 0.30

Table 1: Average Precision @ 50 on the synthetic
dataset of the two-step approach with CBOW

note this would introduce another level of com-
plexity in tuning model parameters.

Different time series approaches are best paired
with different similarity measures. Hamilton
et al. (2016a) found that the neighbourhood-based
measure tends to assign higher rates of semantic
change to nouns, while the cosine measure tends to
assign higher rates to verbs. However, they did not
compare the overall effectiveness of these methods
for semantic change detection.

We find that the neighbourhood-based measure8

tends to outperform the cosine measure for the
change point detection approaches; however, co-
sine tends to outperform the neighbourhood mea-
sure for correlation approaches (see Table 2). For
change point detection, standardization of the time
series does not have a consistent effect.

The reference point for comparison matters.
For almost all configurations in Table 2, the AP
@ 50 is better when the reference point is the last
time-step. Figure 3 shows Recall@K broken down
by pseudoword type. For types C1–C3, higher re-
call is better. Conversely, lower recall is better for
types D1–D4, since these model changes that we
do not consider to be lasting semantic changes.
Recall is consistently low for types D1–D4, but
strikingly, recall is also low for type C3 when
we compare to the first-step. Schema C3 mod-
els words whose distributions change drastically
from time-step to time-step, but which gradually
become more stable as a new, consistently occur-
ring sense emerges. The representation for the first
time-step will thus be very different from subse-
quent representations, such that comparing to the
first step is not effective. In contrast, comparing to
the first time-step is expected to be more effective
in finding words that become less stable over time.

Correlation-based approaches perform worse
than regression or change point detection ap-
proaches. Pearson’s correlation coefficient is

8We apply this to unaligned embeddings; alignment with
orthogonal Procrustes has no effect on this measure.



73

Comparing to the first time-step Comparing to the last time-step

Measure Training raw z β r τ raw z β r τ

cosine independent 0.37 0.36 0.51 0.52 0.47 0.54 0.56 0.56 0.48 0.49
cosine continuous 0.17 0.18 0.34 0.40 0.02 0.13 0.15 0.45 0.34 0.00
neighbourhood independent 0.47 0.50 0.48 0.23 0.35 0.53 0.56 0.56 0.20 0.30
neighbourhood continuous 0.35 0.32 0.37 0.05 0.05 0.34 0.42 0.54 0.05 0.00

Table 2: Average Precision @ 50 on the synthetic dataset using time series approaches with CBOW. Change point
methods are raw scores (raw) and standardized scores (z). Global trend methods are linear regression (β), Pearson
correlation coefficient (r), and Kendall rank correlation coefficient (τ ).

maximized when the magnitude of the change be-
tween consecutive time periods is consistent over
all time periods whereas maximizing Kendall’s τ
simply requires the change between consecutive
time periods to be of a consistent sign. Both cor-
relation measures therefore have particularly poor
recall of words that have time periods without a
consistent meaning as in the early time periods for
pseudowords of type C3.

The β value of the linear regression assumes
a linear relationship, but is unfortunately sensi-
tive to outliers (Chatterjee and Hadi, 1986), which
likely explains why the regression approach has
higher recall than change point approaches for
schema D4 (Figure 3), in which a stable sense
does not emerge. In general, however, the β
values produced for D4 pseudowords appear to
be smaller in magnitude than genuine semantic
changes (C1–C3) resulting in average precision
measures that generally match or exceed change
point approaches (Table 2). Regression is also
more straightforward and computationally effi-
cient to calculate than change point measures.

6 Results on Empirical Twitter Data

We now apply the approaches on our full empirical
Twitter dataset. Table 3 shows the top 10 seman-
tic change candidates using independent, aligned
CBOW embeddings. When using continuously
trained embeddings, the top-10 lists are similar.

In line with our synthetic results, we find differ-
ent candidates when comparing to the first time-
step or the last, but they appear to represent sim-
ilar kinds of semantic change. Most have shifted
due to associations with named entities. For ex-
ample, vine (Figure 4a) acquired a new sense in
January 2013 when the popular short-form video
hosting service Vine was launched. Similarly, ig,
initially shorthand for ‘i guess’, became shorthand
for the social network Instagram as it gained pop-
ularity. The embedding for shawn shifted signif-

Figure 3: Recall@K of each schema, using inde-
pendently trained embeddings and the neighbourhood-
based measure. ‘first’/ ‘last’ denotes the reference
time-step, ‘cp’ the unstandardized change-point ap-
proach, and ‘beta’ the linear regression approach. C1–
C3: higher recall is better, D1–D4: lower is better.

icantly around the beginning of 2014, when the
singer Shawn Mendes signed a record deal.

There are also words whose embeddings have
shifted due to waning associations with prominent
named entities, e.g., vow was initially associated
with The Vow, a high grossing movie released in
Feb. 2012, but by the end of the time series it had
shifted back towards synonyms like ‘pledge’ and
‘urge’. Likewise the embedding for temple ini-
tially reflected the popularity of the video game
Temple Run but gradually shifted to the word’s
canonical meaning, and the embedding for bcs ini-
tially reflected its usage as an acronym for Bowl
Championship Series (a selection system in Amer-
ican college football), but then shifted towards



74

Comparing to first
time-step

vine, temple, unfollowers, fa-
vorited, mcm, glo, #ipadgames,
shawn, retweeted, vow

Comparing to last
time-step

isis, yasss, bcs, temple, ,

mcm, , ig, mila, glo

Table 3: Top 10 semantic change candidates of the
change-point detection approach without standardiza-
tion, using independently trained and aligned CBOW
embeddings and the cosine distance measure.

‘bcoz’, ‘bec’, and other forms of ‘because’ after
the selection system was ended in 2013.

There are also examples of neologisms: mcm
is a lexicalized acronym for ‘Man Crush Mon-
day’. This initially referred to the meme of posting
about a man one finds attractive each Monday, but
then by metonymic extension came to be used to
refer to the subject of the post himself. Another
example is glo, which in the beginning of our data
(Figure 4b) occurs mainly in reference to a Nige-
rian telecommunication company. A shift in its
embedding is driven by the sudden emergence of
the expression ‘glo up’, which was coined in Au-
gust 2013 by rapper Chief Keef in the song “Gotta
Glo Up One Day”, and later gained traction as
an expression to describe an impressive personal
transformation.

Finally, there are words whose detected change-
points reflect changes in automated activity. For
example, the embedding for yasss shifts in early
2017 due to a sudden proliferation of tweets au-
tomatically posted to users’ Twitter accounts by
the live video streaming app LiveMe, which all
begin with the text ‘YASSS It’s time for a great
show’ followed by the title and link to the video
stream. Conversely, the detected change for fa-
vorited (Figure 4c) coincides with a sudden disap-
pearance of automatically generated tweets about
favorited YouTube videos.

7 Conclusion

In this paper, we presented a new evaluation
framework and systematically compared the var-
ious choices involved in using word embeddings
for semantic change detection. We then applied
the approaches to a Twitter dataset spanning 5.5
years. Qualitative analysis found that the top
ranked words have undergone genuine semantic
change although some of the changes are restricted
to social media or to Twitter specifically.

Figure 4: Neighbourhood-based distance (solid blue
lines) and frequency (dotted red lines) over time, for
three semantic change candidates. Vertical green lines
indicate the automatically estimated change-points.

Our framework and dataset can also be used to
evaluate approaches not considered in this paper.
Moreover, our framework models different seman-
tic change scenarios, and future work could focus
on approaches that are able to distinguish between
these different scenarios.

Acknowledgements

This work was supported by The Alan Tur-
ing Institute under the UK Engineering and
Physical Sciences Research Council (EPSRC)
grant EP/N510129/1. P.S. was supported in
part by the EPSRC Centre for Doctoral Train-
ing in Data Science, funded by the UK EP-
SRC (grant EP/L016427/1) and the University
of Edinburgh. D.N. was supported by Turing
award TU/A/000006 and B.McG. by Turing award
TU/A/000010 (RG88751). S.A.H. was supported
in part by The Volkswagen Foundation.

References

Robert Bamler and Stephan Mandt. 2017. Dynamic
word embeddings. In Proceedings of the 34th In-
ternational Conference on Machine Learning, vol-
ume 70 of Proceedings of Machine Learning Re-
search, pages 380–389.

Pierpaolo Basile and Barbara McGillivray. 2018. Dis-
covery Science, volume 11198 of Lecture Notes in
Computer Science, chapter Exploiting the Web for
Semantic Change Detection. Springer-Verlag.

http://proceedings.mlr.press/v70/bamler17a.html
http://proceedings.mlr.press/v70/bamler17a.html


75

D. M. Blei and J. D. Lafferty. 2006. Dynamic topic
models. In Proceedings of the 23rd international
conference on Machine learning, pages 113–120.

Samprit Chatterjee and Ali S. Hadi. 1986. Influential
observations, high leverage points, and outliers in
linear regression. Statistical Science, 1(3):379–393.

Paul Cook, Jey Han Lau, Diana McCarthy, and Tim-
othy Baldwin. 2014. Novel word-sense identifica-
tion. In Proceedings of COLING 2014, the 25th In-
ternational Conference on Computational Linguis-
tics: Technical Papers, pages 1624–1635.

Haim Dubossarsky, Daphna Weinshall, and Eitan
Grossman. 2017. Outta control: Laws of semantic
change and inherent biases in word representation
models. In Proceedings of the 2017 Conference on
Empirical Methods in Natural Language Process-
ing, pages 1136–1145.

Lea Frermann and Mirella Lapata. 2016. A bayesian
model of diachronic meaning change. Transactions
of the Association for Computational Linguistics,
4:31–45.

Mark Graham, Scott A. Hale, and Devin Gaffney. 2014.
Where in the world are you? geolocation and lan-
guage identification in Twitter. The Professional
Geographer, 66(4):568–578.

William L Hamilton, Jure Leskovec, and Dan Jurafsky.
2016a. Cultural shift or linguistic drift? comparing
two computational measures of semantic change. In
Proceedings of the Conference on Empirical Meth-
ods in Natural Language Processing. Conference on
Empirical Methods in Natural Language Process-
ing, volume 2016, pages 2116–2121.

William L. Hamilton, Jure Leskovec, and Dan Jurafsky.
2016b. Diachronic word embeddings reveal statisti-
cal laws of semantic change. In Proceedings of the
54th Annual Meeting of the Association for Compu-
tational Linguistics (Volume 1: Long Papers), pages
1489–1501.

Maurice G. Kendall. 1948. Rank correlation methods.
Griffin, London.

Tom Kenter, Melvin Wevers, Pim Huijnen, and
Maarten de Rijke. 2015. Ad hoc monitoring of vo-
cabulary shifts over time. In Proceedings of the
24th ACM International on Conference on Informa-
tion and Knowledge Management, CIKM ’15, pages
1191–1200, New York, NY, USA. ACM.

Yoon Kim, Yi-I Chiu, Kentaro Hanaki, Darshan Hegde,
and Slav Petrov. 2014. Temporal analysis of lan-
guage through neural language models. In Proceed-
ings of the ACL 2014 Workshop on Language Tech-
nologies and Computational Social Science, pages
61–65.

Peter Koch. 2016. Meaning change and semantic
shifts. In Päivi Juvonen and Maria Koptjevskaja-
Tamm, editors, The Lexical Typology of Seman-
tic Shifts, pages 21–66. De Gruyter Mouton,
Berlin/Boston.

Vivek Kulkarni, Rami Al-Rfou, Bryan Perozzi, and
Steven Skiena. 2015. Statistically significant detec-
tion of linguistic change. In Proceedings of the 24th
International Conference on World Wide Web, pages
625–635.

Andrey Kutuzov, Lilja Øvrelid, Terrence Szymanski,
and Erik Velldal. 2018. Diachronic word embed-
dings and semantic shifts: a survey. In Proceedings
of the 27th International Conference on Computa-
tional Linguistics, pages 1384–1397.

Andrey Kutuzov, Erik Velldal, and Lilja Øvrelid. 2017.
Temporal dynamics of semantic relations in word
embeddings: an application to predicting armed
conflict participants. In Proceedings of the 2017
Conference on Empirical Methods in Natural Lan-
guage Processing, pages 1824–1829.

B. McGillivray, S. Hengchen, V. Läteenoja, M. Palma,
and A. Vatri. 2019. A computational approach to
lexical polysemy in Ancient Greek. Digital Schol-
arship in the Humanities.

Rada Mihalcea and Vivi Nastase. 2012. Word epoch
disambiguation: Finding how words change over
time. In Proceedings of the 50th Annual Meeting
of the Association for Computational Linguistics:
Short Papers-Volume 2, pages 259–263.

Tomas Mikolov, Kai Chen, Greg Corrado, and Jeffrey
Dean. 2013. Efficient estimation of word represen-
tations in vector space. In International Conference
on Learning Representations (ICLR) Workshop.

Tomas Mikolov, Edouard Grave, Piotr Bojanowski,
Christian Puhrsch, and Armand Joulin. 2018. Ad-
vances in pre-training distributed word representa-
tions. In Proceedings of the Eleventh International
Conference on Language Resources and Evaluation
(LREC 2018), Miyazaki, Japan. European Language
Resources Association (ELRA).

Dong Nguyen and Jacob Eisenstein. 2017. A kernel in-
dependence test for geographical language variation.
Computational Linguistics, 43(3):567–592.

Jean-François Quessy, Mériem Saïd, and Anne-
Catherine Favre. 2013. Multivariate kendall’s tau
for change-point detection in copulas. Canadian
Journal of Statistics, 41(1):65–82.

Radim Řehůřek and Petr Sojka. 2010. Software frame-
work for topic modelling with large corpora. In Pro-
ceedings of the LREC 2010 Workshop on New Chal-
lenges for NLP Frameworks, pages 45–50, Valletta,
Malta.

http://www.jstor.org/stable/2245477
http://www.jstor.org/stable/2245477
http://www.jstor.org/stable/2245477
https://doi.org/10.1080/00330124.2014.907699
https://doi.org/10.1080/00330124.2014.907699
https://doi.org/10.18653/v1/P16-1141
https://doi.org/10.18653/v1/P16-1141
http://gso.gbv.de/DB=2.1/CMD?ACT=SRCHA&SRT=YOP&IKT=1016&TRM=ppn+18489199X&sourceid=fbw_bibsonomy
https://doi.org/10.1145/2806416.2806474
https://doi.org/10.1145/2806416.2806474
https://doi.org/10.3115/v1/W14-2517
https://doi.org/10.3115/v1/W14-2517
http://aclweb.org/anthology/C18-1117
http://aclweb.org/anthology/C18-1117
https://doi.org/10.18653/v1/D17-1194
https://doi.org/10.18653/v1/D17-1194
https://doi.org/10.18653/v1/D17-1194
https://doi.org/10.1162/COLI_a_00293
https://doi.org/10.1162/COLI_a_00293


76

Martina A. Rodda, Marco S.G. Senaldi, and Alessan-
dro Lenci. 2017. Panta Rei: Tracking Semantic
Change with Distributional Semantics in Ancient
Greek. Italian Journal of Computational Linguis-
tics, 3:11–24.

Christian Rohrdantz, Annette Hautli, Thomas Mayer,
Miriam Butt, Daniel A. Keim, and Frans Plank.
2011. Towards tracking semantic change by visual
analytics. In Proceedings of the 49th Annual Meet-
ing of the Association for Computational Linguis-
tics: Human Language Technologies, pages 305–
310.

Alex Rosenfeld and Katrin Erk. 2018. Deep neural
models of semantic shift. In Proceedings of the 2018
Conference of the North American Chapter of the
Association for Computational Linguistics: Human
Language Technologies, Volume 1 (Long Papers),
pages 474–484.

Maja R. Rudolph and David M. Blei. 2018. Dynamic
embeddings for language evolution. In Proceedings
of the 2018 World Wide Web Conference on World
Wide Web, WWW 2018, Lyon, France, April 23-27,
2018, pages 1003–1011.

Ian Stewart, Dustin Arendt, Eric Bell, and Svitlana
Volkova. 2017. Measuring, predicting and visual-
izing short-term change in word representation and
usage in vkontakte social network. In Proceedings
of the Eleventh International AAAI Conference on
Web and Social Media (ICWSM 2017), pages 672–
675.

Nina Tahmasebi, Lars Borin, and Adam Jatowt. 2018.
Survey of Computational Approaches to Diachronic
Conceptual Change.

Xuri Tang. 2018. A state-of-the-art of semantic
change computation. Natural Language Engineer-
ing, 24(5):649–676.

Xuri Tang, Weiguang Qu, and Xiaohe Chen. 2016. Se-
mantic change computation: A successive approach.
World Wide Web - Internet & Web Information Sys-
tems, 19(3):375–415.

Marco Del Tredici, Raquel Fernández, and Gemma
Boleda. 2018. Short-term meaning shift: an ex-
ploratory distributional analysis. arXiv preprint
arXiv:1809.03169.

Derry Tanti Wijaya and Reyyan Yeniterzi. 2011. Un-
derstanding semantic change of words over cen-
turies. In Proceedings of the 2011 international
workshop on DETecting and Exploiting Cultural di-
versiTy on the social web, pages 35–40.

Zijun Yao, Yifan Sun, Weicong Ding, Nikhil Rao, and
Hui Xiong. 2018. Dynamic word embeddings for
evolving semantic discovery. In Proceedings of
the Eleventh ACM International Conference on Web
Search and Data Mining, WSDM ’18, pages 673–
681.

http://www.ai-lc.it/IJCoL/v3n1/IJCOL_3_1_1_rodda_et_al.pdf
http://www.ai-lc.it/IJCoL/v3n1/IJCOL_3_1_1_rodda_et_al.pdf
http://www.ai-lc.it/IJCoL/v3n1/IJCOL_3_1_1_rodda_et_al.pdf
http://aclweb.org/anthology/P11-2053
http://aclweb.org/anthology/P11-2053
http://aclweb.org/anthology/N18-1044
http://aclweb.org/anthology/N18-1044
https://doi.org/10.1145/3178876.3185999
https://doi.org/10.1145/3178876.3185999
http://arxiv.org/abs/1811.06278
http://arxiv.org/abs/1811.06278
https://doi.org/10.1017/S1351324918000220
https://doi.org/10.1017/S1351324918000220
https://doi.org/10.1007/s11280-014-0316-y
https://doi.org/10.1007/s11280-014-0316-y
https://doi.org/10.1145/3159652.3159703
https://doi.org/10.1145/3159652.3159703

