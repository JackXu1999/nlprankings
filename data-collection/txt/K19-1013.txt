



















































Learning Conceptual Spaces with Disentangled Facets


Proceedings of the 23rd Conference on Computational Natural Language Learning, pages 131–139
Hong Kong, China, November 3-4, 2019. c©2019 Association for Computational Linguistics

131

Learning Conceptual Spaces with Disentangled Facets

Rana Alshaikh
School of CS & Informatics

Cardiff University, UK
alshaikhr@cardiff.ac.uk

Zied Bouraoui
CRIL - CNRS & Univ Artois

France
zied.bouraoui@cril.fr

Steven Schockaert
School of CS & Informatics

Cardiff University, UK
schockaerts1@cardiff.ac.uk

Abstract
Conceptual spaces are geometric represen-
tations of meaning that were proposed by
Gärdenfors (2000). They share many similari-
ties with the vector space embeddings that are
commonly used in natural language process-
ing. However, rather than representing entities
in a single vector space, conceptual spaces are
usually decomposed into several facets, each
of which is then modelled as a relatively low-
dimensional vector space. Unfortunately, the
problem of learning such conceptual spaces
has thus far only received limited attention. To
address this gap, we analyze how, and to what
extent, a given vector space embedding can
be decomposed into meaningful facets in an
unsupervised fashion. While this problem is
highly challenging, we show that useful facets
can be discovered by relying on word embed-
dings to group semantically related features.

1 Introduction

Conceptual spaces (Gärdenfors, 2000) are vec-
tor space models that are aimed at representing
the entities of a given kind (e.g. movies), to-
gether with their associated properties (e.g. scary)
and concepts (e.g. thrillers). As such, they are
similar in spirit to the vector space models that
have been proposed in information retrieval (Deer-
wester et al., 1990) and natural language pro-
cessing (Turney and Pantel, 2010; Mikolov et al.,
2013), but there are also notable differences. First,
in the context of conceptual spaces, an explicit dis-
tinction is made between the entities from the do-
main of discourse, which are represented as vec-
tors, and the corresponding properties and con-
cepts, which are represented as regions (e.g. poly-
topes) or soft regions (e.g. characterized by a
Gaussian). Second, conceptual spaces are organ-
ised into a set of facets1, each of which captures

1These facets are often referred to as domains in the con-
text of conceptual spaces. However, we will use the term

a different aspect of meaning. For instance, in a
conceptual space of movies, we may have facets
such as genre, language, geographic location, etc.

Each facet is associated with its own vector
space, which intuitively captures similarity w.r.t.
the corresponding facet. For instance, in a concep-
tual space of movies, the vector space for the bud-
get facet would only capture whether two movies
had a similar budget. Most of these facet spaces
tend to be low-dimensional (e.g. modelling budget
only needs a single dimension). This clearly dif-
ferentiates them from traditional semantic spaces,
which often have hundreds of dimensions. From
an application point-of-view, the separation of
vector space models into facets is appealing for
several reasons. One key advantage is that it al-
lows us to model similarity in a more flexible,
and cognitively more plausible way. A related
advantage is that the low-dimensional nature of
the facet-specific spaces should make it easier to
learn from few examples. Finally, the separation
into facets can also make conceptual spaces more
interpretable. However, the study of conceptual
spaces has mostly focused on modelling cogni-
tive and linguistic phenomena, such as metaphor
(Gärdenfors, 1996) and vagueness (Douven et al.,
2013), with only few works addressing the chal-
lenge of learning such representations from data.

Decomposing conceptual spaces into facets is
similar to the problem of disentangled representa-
tion learning (DRL), which has recently received
considerable interest. However, empirical stud-
ies suggest that purely unsupervised DRL methods
are unlikely to be successful without a strong in-
ductive bias. In fact, Locatello et al. (2018) found
that what mostly matters was how such methods
are initialized, rather than what particular opti-
mization objective is used. Moreover, much of

facets to avoid confusion with domains of discourse.



132

the work in DRL has focused on image process-
ing rather than textual data (which is what we use
in this paper). Finally, existing work in DRL is fo-
cused on learning factors which are uncorrelated.
In our setting, however, the different facets are of-
ten highly correlated (e.g. natural disaster movies
typically have a high budget).

In this paper, we explore a strategy for decom-
posing a given vector space embedding into sep-
arate facet spaces by first determining which in-
terpretable features are modelled by the vector
space and then clustering the word vectors corre-
sponding to these features. Despite being intuitive,
given that word embeddings are known to group
together functionally similar words, we found this
strategy to perform poorly in its basic form. First,
simply looking for clusters in word embeddings
often leads to thematic clusters, e.g. grouping hor-
ror together with words such as scary and zom-
bie rather than other genres such as western and
drama. To address this, we explicitly prevent two
words from ending up in the same cluster if the
features they are modelling are too similar. Sec-
ond, in most domains, there are one or two cen-
tral facets which tend to be highly correlated with
most of the other facets (e.g. genre in the movie
domain). To ensure that the resulting facet spaces
are sufficiently different (rather than capturing mi-
nor variations of the most central facets), we found
it useful to use an iterative approach, where pre-
viously found facets are “removed” from the vec-
tor space embedding before proceeding to find fur-
ther facets. With these two modifications, we find
that useful facets can indeed be found, which con-
sistently lead to better classification performance
compared to the original vector space embedding.

2 Related Work

Conceptual Spaces. A conceptual space
(Gärdenfors, 2000) is a vector representation of
the entities from some domain, where the dimen-
sions tend to capture salient features. It is usu-
ally assumed that the dimensions of a conceptual
space can be grouped into semantic domains, or
facets. From a cognitive point of view, this group-
ing is important because it affects how similar-
ity scores are computed. Intuitively, this is be-
cause the dimensions from the same facet tend to
interact with each other whereas the dimensions
from different facets can be considered in isola-
tion. The problem of learning conceptual spaces

from data has only received limited attention to
date. One exception is the work of Derrac and
Schockaert (2015), which we build on in this pa-
per. In their work, textual descriptions of the con-
sidered entities are used to find dimensions that
model salient semantic features in a given seman-
tic space. For instance, in a semantic space of
movies they found dimensions corresponding to
features such as scary, horror and zombie. Note
that because these features tend to be correlated,
the corresponding dimensions are typically not or-
thogonal in the input semantic space. For this
reason, they refer to these dimensions as inter-
pretable directions. More recently, (Ager et al.,
2018) proposed a post-processing method to fine-
tune these interpretable directions. The main chal-
lenge which we address in this paper is to group
the features that are found by the method from
Derrac and Schockaert (2015) into semantically
meaningful facets. A supervised variant of this
problem was considered by Banaee et al. (2018).
Their approach relies on feature selection meth-
ods to find subsets of features that are predictive
of particular class labels, based on a set of labelled
training examples. In contrast, our focus in this pa-
per is on unsupervised methods, as suitable train-
ing data is often not available.

Disentangled Representation Learning (DRL).
In the last few years, a large number of genera-
tive neural network models have been proposed,
with variational autoencoders (VAEs) (Kingma
and Welling, 2014) and generative adversarial net-
works (GANs) (Goodfellow et al., 2014) being the
best-known examples. The main underlying idea
behind these models is that high-dimensional data
(e.g. images) can often be described in terms of a
much lower-dimensional latent vector space. Each
object can thus be compactly described by its la-
tent code, i.e. the corresponding vector in this la-
tent space. The problem of DRL is to learn such
a latent vector representation which is such that
(groups of) the dimensions of the latent codes cor-
respond to meaningful interpretable factors. A
variety of unsupervised and semi-supervised ap-
proaches for learning such disentangled represen-
tations have been proposed, such as InfoGAN
(Chen et al., 2016), which is based on a modifi-
cation of the loss function for GANs, and β-VAE
(Higgins et al., 2017), which instead uses VAEs as
the base model. Conceptually, these approaches
modify the loss function of a given generative



133

model by insisting that the dimensions of the la-
tent vector space are in some sense independent.
In principle, the latent vector spaces learned by
DRL methods can be viewed as conceptual spaces.
It is unclear, however, whether purely statistical
measures of independence can be sufficient for
learning semantically meaningful factors. While
interesting results have been obtained for particu-
lar applications, after a thorough empirical analy-
sis Locatello et al. (2018) concluded that such re-
sults were highly sensitive to the random initial-
ization of the neural network models and the value
of hyper-parameters. Their results suggest that,
in absence of a suitable supervision signal, high-
quality factors can only be learned in the presence
of a strong inductive bias. Going beyond unsu-
pervised approaches, (Jain et al., 2018) propose a
supervised approach for DRL for text. As supervi-
sion signal, they use triplets of the form (s, d, o)a
which encode that relative to aspect a, it holds that
s and d are more similar than d and o. Then they
use a Convolutional Neural Network (CNN) based
model to obtain low-dimensional document em-
beddings for each considered aspect.

3 Decomposing Conceptual Spaces

Let E be a set of entities of some particular type
(e.g. movies) for which a vector space embedding
is given. In the following, we will write e ∈ Rn
for the embedding of entity e. The first step of
our approach consists in applying the method from
Derrac and Schockaert (2015), which provides us
with a set of words F , each corresponding to a
feature that can be modelled as a direction in the
vector space. For f ∈ F we write df for the
vector characterizing this direction. Formally, this
means that e1 · df < e2 · df iff e2 has the fea-
ture f to a higher extent than e1 (e.g. if f denotes
the feature scary, then this would mean that movie
e2 is scarier than movie e1). We briefly recall
the method from Derrac and Schockaert (2015)
in Section 3.1. Our hypothesis is that we can
group these features into meaningful facets and
that we can represent these facets as subspaces of
the given vector space embedding. Section 3.2 dis-
cusses our approach for finding these subspaces.

3.1 Identifying Feature Directions

The method proposed in Derrac and Schockaert
(2015) aims to finds a set of features F which
can be modelled as directions in the given vector

space. The input to their method consists of a text
description De of each entity e, but they assume
no other prior knowledge. In particular, each word
w which occurs sufficiently frequently in the doc-
ument collection D = {De | e ∈ E} is considered
as a candidate feature. To determine whether w
should be added as a feature, they train a linear
SVM classifier to separate the vector representa-
tions of the entities e for which w is mentioned
in De from the vector representations of the other
entities. If this SVM classifier is sufficiently ac-
curate2, they assume that the word w captures a
salient feature. The corresponding feature direc-
tion is then characterized by the normal vector df
of the hyperplane that was learned by the SVM
classifier. We will use the notation posw to refer
to the set of entities from E which are classified
as positive. In our experiments, we used logistic
regression classifiers instead of SVMs, which we
found to perform similarly but were faster to train.

3.2 Finding Facets

Our aim is to group the features from F into mean-
ingful facets. For instance, in the movies domain,
we might expect to see facets corresponding to e.g.
genre, language and release date. It does not seem
possible (nor desirable) to formally define what
constitutes a good facet, a typical problem in un-
supervised learning. Intuitively, however, a facet
should group features which are of the same kind
(e.g. genres) and should in some sense be exhaus-
tive (i.e. all genres, rather than a set of features that
refer to one or a few particular genres).

Using subspace clustering. The aim of subspace
clustering is to decompose a high-dimensional
space into the union of lower-dimensional spaces.
This problem has found numerous applications,
especially in computer vision. One may won-
der whether we can learn useful facets by apply-
ing subspace clustering to feature directions df .
Unfortunately, in our initial experiments, this ap-
proach did not prove successful. This is illustrated
for the movies domain in Table 1, where we used
the state-of-the-art SSC-OMP subspace clustering
method (You et al., 2016). For this comparison, we
first manually grouped the features from F to ob-
tain a gold standard. The first column of the table
shows two of the resulting facets: one correspond-
ing to genres and one corresponding to different

2Because of class imbalance, they used Cohen’s Kappa
instead of classification accuracy.



134

MOVIES

Gold standard IncHDB SSC-OMP

blu, ray, cgi, dolby, sur-
round, computer, technology,
theaters, theatre, purchased,
ordered, purchase, dvds, ama-
zon, bought, copy, audio, disc,
edition, widescreen, transfer,
digital, print, vhs, discs

Initial cluster Xi: audio, disc, dvds, digital, vhs, dolby, technology,
discs, computer, version

Top additional features Yi: transfer, edition, blu, cgi, ray, widescreen,
amazon, extras, awesome, computer, purchased, purchase, buying, sur-
round, price, trailer, included, favorites, theaters, alot, previews, extra,
player

blu, arts, disc, purchased, edition, ordered, crime,
british, creepy, disturbing, fighting, charm, rent, hon-
estly, reviewers, oscar, personally, excited, questions,
budget, england, education, victims, packed, marriage,
tense, detail, fell, hell, deeply, culture, situation, accu-
rate, trailers

thriller, comedic, com-
edy, documentary, comic,
satire, documentaries, drama,
melodrama, horror,action,
adults, animation, crime, fan-
tasy,family, musical, mystery,
romance, war, western

Initial cluster Xi: thriller, comedic, comedy, documentary, comic,
satire, documentaries, humor, humour, cheesy, adaptation, wit, melo-
drama, campy, parody

Top additional features Yi: hilarious, gags, laughs, jokes, slapstick,
funniest, thrillers, funnier, suspense, witty, unfunny, amusing, suspense-
ful, historical, horror, romance, interviews, psychological

horror, thriller, political, charming, funnier, slapstick,
documentaries, hilarious, killed, seat, issue, cheesy,
gory, mystery, effects, amazon, widescreen, transfer,
realistic, relationship, monster, epic, portrayed, glad,
premise, hearing, evil, car, formula, decision, violent,
villain, gun, goofy, game, teens, garbage, humor, ruin,
product, amount, dad, loving, personality, award, folks

Table 1: Comparison of learned facets with gold standard for the movies domain.

media types (which indirectly captures the time
period during which a movie was released). The
right-most column shows the closest facets that
were found with SSC-OMP. As can be seen, these
facets are largely non-sensical. For instance, in
the first case, words such as blu and disc are clus-
tered together with semantically unrelated words
such as fighting, england and accurate. In the sec-
ond example, genres such as horror and thriller
are grouped together with unrelated words such as
cheesy, widescreen and award. This negative re-
sult seems in accordance to the findings from Lo-
catello et al. (2018) that unsupervised disentangled
representation learning seems impossible without
a strong inductive bias. We also tried several other
subspace clustering methods, for a wide range of
different configurations, without obtaining better
results. Similarly, we experimented with neural
approaches for learning disentangled representa-
tions directly from the bag-of-words representa-
tions of the entities, but again unsuccessfully.

Using word embeddings. These negative results
strongly suggest that some kind of external knowl-
edge is needed to find meaningful facets. To this
end, we focus on the use of word embeddings,
which seems natural given the fact that words of
the same kind (e.g. different names of genres) tend
to be used in similar contexts, and can thus be
expected to have similar word vectors. In par-
ticular, our basic approach for identifying facets
consists in clustering the word vectors, from some
standard pre-trained word embedding model, cor-
responding to the features in F . One important
drawback of this basic strategy, however, is that
it often leads to thematic clusters. For instance,
while we would want horror to be clustered to-

gether with other names of genres, when simply
clustering word vectors without any further guid-
ance, horror may be clustered together with the-
matically similar words such as scary and zombie.
To avoid such clusters, we rely on the insight that
if a and b are thematically similar words (e.g. hor-
ror and zombie) then the corresponding feature di-
rections da and db will also be similar. However,
for paradigmatically similar words, such as horror
and comedy, this should not be the case. In other
words, two words should intuitively end up in the
same clusters if they have similar word vectors but
dissimilar feature directions.

While there are many ways to implement this
intuition, we found that using the cosine similarity
between da and db was not always reliable. In-
stead we rely on the following measure of overlap
between the sets posa and posb:

o(a, b) = min

(
|posa ∩ posb|
|posa|

,
|posa ∩ posb|
|posb|

)
The dissimilarity between features a and b from F
is then defined as follows:

d(a, b) =

{
1− cos(wa,wb) if o(a, b) ≤ λ
1 otherwise

where the overlap threshold λ is a hyperparameter
and wf denotes the word vector for feature f .

The aim of the clustering step is to find a num-
ber of disjoint subsets of F , each of which intu-
itively corresponds to a facet. We will denote these
facets by X1, ..., Xk. To avoid finding redundant
facets, we identify them in an incremental fash-
ion. In particular, from the clusters obtained by
the clustering algorithm, we only select the sin-
gle most important one, i.e. the one which is most



135

likely to describe a salient facet. For this purpose,
we rank clusters according to the following score:

score(Xi) = |
⋃

f∈Xi

posf | (1)

This score reflects the intuition that we prefer clus-
ters with features that are general and diverse, i.e.
such that most of the entities would have at least
one of the features from the cluster. As will be ex-
plained below, after the subspace corresponding to
this facet has been determined, we iteratively ap-
ply the same method on a reduced vector space to
find the next most important facet, until the desired
number of facets k has been found.

3.3 Modelling Facets as Subspaces
We model each facetXi as a linear subspace of the
given vector space embedding. To find this sub-
space, we learn new feature directions cf for each
f ∈ Xi, which still capture these features but lie
in a low-dimensional subspace. In particular, we
minimize the following objective:∑

e∈E

∑
f∈Xi

log σ(cfe+ bf ) (2)

where

cf = λ
f
1a

i
1 + λ

f
2a

i
2 + ...+ λ

f
ra

i
r (3)

with r the desired number of dimensions of the
subspace. Note that (2) essentially expresses that
for each f ∈ Xi, we want to train a logistic regres-
sion classifier with coefficient vector cf . However,
as expressed in (3), rather than learning these coef-
ficient vectors independently, they are constrained
such that they can be written as a linear combina-
tion of the vectors ai1, ...,a

i
r. The resulting fea-

ture directions thus span a subspace of (at most) r
dimensions. Let Mi ∈ Rr×n be an orthonormal
basis for this subspace. Then ei = Mie is the r-
dimensional facet-specific embedding of entity e.

There may be some features from F which are
not contained in Xi but can nonetheless be mod-
elled well in the resulting subspace (i.e. if they
are semantically related to the features in Xi). To
identify these features, we apply the method from
(Derrac and Schockaert, 2015) to the facet-specific
embeddings. We write Yi to denote the features
that were thus identified, beyond the ones fromXi.

Next we determine a null space of the basis Mi,
i.e. an (n−r)×n dimensional matrix Ri satisfying

MiR
T
i = 0

Dataset Entities Attribute Classes

Movies 13978 Keywords 100Genre 23
Ratings 6

place-types 1383 Foursquare (Fours.) 9Geonames (Geo.) 7
OpenCYC (OpenC.) 20

Organisation 11800 Country 4Headquarter Location(HL) 2

Building 3721 Country 2Administrative Location(AL) 2

Table 2: Overview of considered datasets.

This matrix Ri is a basis for the orthogonal com-
plement of the subspace spanned by Mi. Intu-
itively, it defines what remains of the vector space
embedding after we remove (i.e. project away) the
subspace modelling the facet Xi.

To find the remaining facets, we repeat the same
procedure, but with two changes. First, the n − r
dimensional remainder space is used instead of the
original embedding space, i.e. we use Rie as the
vector representation of e. Second, the features in
Xi ∪ Yi are no longer considered by the clustering
algorithm. This process is repeated until the de-
sired number of facets has been found, each time
considering an increasingly lower-dimensional re-
mainder space and clustering only those features
that are not already modelled in a previously iden-
tified facet. Intuitively, by learning the facets in
this incremental way, we should be able to avoid
finding multiple variants of the same facets.

The middle column of Table 1 shows two of the
facets that were found with this approach. Intu-
itively, these facets are clearly more meaningful
than those that were found with SSC-OMP.

4 Experimental Analysis

Methods. We have experimented with two clus-
tering algorithms: agglomerative hierarchical av-
erage link clustering and HDBSCAN (Campello
et al., 2013). However, in the case of HDBSCAN
we noticed that when using overlap-based dissimi-
larity, we typically ended up without any clusters3.
For HDBSCAN we therefore used cosine similar-
ity instead. We refer to our method with agglomer-
ative clustering as IncAgg and to the variant with
HDBSCAN as IncHDB. In addition, we consid-
ered a variant of the method with agglomerative
clustering which relies on cosine similarity instead
of the overlap-based dissimilarity (CosIncAgg).

3Note that HDBSCAN does not cluster all the data points,
as it removes data points which are considered as noise.



136

Place types Movies Organisations Buildings
Fours. Geo. OpenC. KeyW. Genre Rating Country HL. Country AL.

D
T-

D
1

MDS 0.34 0.26 0.26 0.26 0.38 0.43 0.67 0.24 0.47 0.47
IncAgg 0.45 0.30 0.30 0.25 0.40 0.47 0.76 0.26 0.50 0.50
CosIncAgg 0.45 0.26 0.30 0.24 0.38 0.43 0.75 0.23 0.43 0.42
IncHDB 0.43 0.26 0.28 0.25 0.38 0.40 0.50 0.22 0.46 0.46
NonIncHDB 0.30 0.20 0.27 0.23 0.34 0.40 0.50 0.20 0.46 0.47
NonIncAgg 0.33 0.24 0.27 0.23 0.33 0.42 0.40 0.21 0.48 0.47

D
T-

D
3

MDS 0.52 0.27 0.32 0.27 0.43 0.47 0.70 0.27 0.47 0.46
IncAgg 0.58 0.34 0.34 0.27 0.41 0.47 0.77 0.30 0.54 0.52
CosIncAgg 0.54 0.28 0.34 0.25 0.40 0.45 0.78 0.26 0.47 0.45
IncHDB 0.57 0.26 0.31 0.27 0.41 0.45 0.70 0.27 0.49 0.50
NonIncHDB 0.43 0.24 0.27 0.26 0.38 0.44 0.60 0.21 0.48 0.49
NonIncAgg 0.36 0.30 0.29 0.24 0.38 0.45 0.65 0.22 0.51 0.50

SV
M

MDS 0.65 0.31 0.35 0.25 0.54 0.54 0.71 0.26 0.38 0.39
IncAgg 0.73 0.33 0.37 0.26 0.54 0.55 0.76 0.26 0.52 0.51
CosIncAgg 0.62 0.33 0.34 0.25 0.52 0.53 0.80 0.12 0.50 0.50
IncHDB 0.65 0.30 0.36 0.23 0.50 0.51 0.70 0.20 0.51 0.51
NonIncHDB 0.60 0.35 0.37 0.24 0.46 0.52 0.68 0.24 0.52 0.51
NonIncAgg 0.58 0.35 0.35 0.24 0.48 0.51 0.72 0.26 0.50 0.51

G
au

ss
ia

n MDS 0.81 0.45 0.46 0.26 0.58 0.48 0.74 0.27 0.53 0.51IncAgg 0.87 0.48 0.45 0.28 0.60 0.51 0.81 0.27 0.54 0.55
CosIncAgg 0.81 0.45 0.46 0.28 0.60 0.51 0.81 0.28 0.53 0.53
IncHDB 0.84 0.43 0.43 0.27 0.60 0.51 0.80 0.28 0.54 0.53
NonIncHDB 0.75 0.41 0.40 0.23 0.51 0.47 0.75 0.27 0.59 0.53
NonIncAgg 0.71 0.46 0.45 0.22 0.52 0.46 0.77 0.27 0.58 0.53

Table 3: Classification tasks performance (in terms of F1 score) when using the MDS space and four variation of
the facet-based representations.

Finally, we also report results for variants of our
methods in which we did not obtain the facets
incrementally (NonIncAgg and NonIncHDB). In
these cases, we simply extract r clusters from the
initial set of features F and determine the corre-
sponding facets directly. In all cases, we use 50-
dimensional pre-trained GloVe word vectors (Pen-
nington et al., 2014) for clustering the features.

To generate the initial vector space embedding,
we follow the approach proposed in (Derrac and
Schockaert, 2015) based on multi-dimensional
scaling. In all cases, we used 100-dimensional
vector spaces and learned 10 facets, each being
modelled as a 10-dimensional subspace. To select
the set of features F , we initially consider the 500
highest scoring words according to the Kappa met-
ric. However, if we end up without any clusters (in
the case of HDBSCAN), we expand the set of fea-
tures to the 1000 top words. The overlap threshold
λ is selected based on held-out tuning data, con-
sidering values from {0.3, 0.5, 0.7}. To flatten the
agglomerative clustering, we tune the number of
clusters from {50, 100, 200}4.

4The source code is available online at
https://github.com/rana-alshaikh/
Disentangled-Facets.

Evaluation tasks. Intrinsic evaluation of the
learned facets is difficult, among others because
what we might consider to be a natural facet is
highly subjective. Therefore, in our quantita-
tive evaluation, we will focus on the impact of
the learned facets in a number of classification
tasks. This is also motivated by the view that
some types of classifiers need semantically mean-
ingful features to perform well. For example,
Ager et al. (2018) used low-depth decision trees
to evaluate a method for learning feature direc-
tions in vector space embeddings. Specifically, if
F = {f1, ..., fm} is the set of features that were
identified, then they represent each entity e using
the feature vector (df1 · e, ...,dfm · e), with df
the direction modelling feature f as before. Given
that a depth-1 decision tree can only use one of
these features, the performance of such a decision
tree essentially tells us to what extent the classes
that are considered in the supervised classification
task have been discovered as features. In our ex-
periments, we will report the result of depth-1 and
depth-3 decision trees. As the baseline method,
referred to as MDS, we will use the top-2000 fea-
tures that we obtained with the method from Der-
rac and Schockaert (2015). To evaluate the facets,

https://github.com/rana-alshaikh/Disentangled-Facets
https://github.com/rana-alshaikh/Disentangled-Facets


137

ORGANISATIONS

Cosine similarity Overlap-based dissimilarity

union, europe, protection,
aid, spain, right, cross, war,
players, black, defenders,
german, european

canadian, australian, australia, africa, na-
tions, african, canada, states, countries, asia,
united, british, european, competition, world,
europe, asian, britain, country, german

PLACE TYPES

landscapes, serene, tranquil,
closeup, surreal, greenery,
scenery, scenic, breathtak-
ing, picturesque

sculptures, decoration, churches, fauna, his-
torical, landscapes, st, archeology, small,
sculpture, basilica, monuments, convent,
heritage, artistic, monument, sacred, forgot-
ten, cemetery, baroque, festival, promenade,
renaissance, hall, flora, pavilion, memorial

Table 4: Examples of clusters when standard cosine
similarity is used (left) and with the proposed overlap
based dissimilarity score (right).

we instead apply this method to find the top-200
features for each of the facet subspaces.

The performance of the decision trees will al-
low us to evaluate whether we are able to learn
higher-quality feature directions thanks to the de-
composition of the vector space into facet sub-
spaces. To evaluate the quality of the facets inde-
pendently of the quality of the feature directions,
we also consider classifiers which use as input the
facet-specific vector representations ei of the en-
tities. Specifically, we train a support vector ma-
chine (SVM) for each of the facets, leading to the
predictions p1, ...pk. These predictions are then
aggregated to a final prediction using a logistic
regression meta-classifier. As baseline, we sim-
ply train a single SVM classifier in the full vec-
tor space. As our final classifier, we estimate a
Gaussian model from the positive training exam-
ples. In particular, we estimate a univariate Gaus-
sian for each dimension and multiply the corre-
sponding probabilities. We chose this method be-
cause it is sensitive to how well the dimensions
of the space are aligned with semantically mean-
ingful properties, and because such Gaussians are
commonly used for representing categories in con-
ceptual spaces (Bouraoui and Schockaert, 2018).
For the baseline, we use the dimensions of the full
vector space. For the facet-based representations,
we use the dimensions of the facet subspaces.

Dataset. We have carried out experiments with
vector space embeddings for four different do-
mains. First, we used the movies and place
type domains from (Derrac and Schockaert, 2015),
where the embeddings are learned respectively
from movie reviews and from Flickr tag co-
occurrence distributions. We also considered two
additional domains, for which we used Wikipedia

Figure 1: Projection of a 100-dimensional semantic
space and 10-dimensional facets of buildings. Top:
showing the full space. Bottom: showing the 10-
dimensional representations for the facet Xi = { cam-
puses, students, offices, centers, facilities, area, hotels,
homes, bridges, hospitals, cities, shops, stations}

articles: buildings and organisations. In partic-
ular, we retrieved all Wikipedia pages whose se-
mantic type on WikiData corresponds to build-
ing or organisation. Wikipedia pages containing
fewer than 200 words were removed. The bag-
of-words (BoW) representation of the remaining
Wikipedia concepts were obtained using a stan-
dard preprocessing strategy (e.g. removing HTML
tags and references), including stopword removal
with NLTK (Bird and Loper, 2004). Furthermore,
we POS tagged the documents and only retained
the nouns and adjectives. Finally, frequent words
that occurred in more than 60% of the Wikipedia
articles about buildings (resp. organisations) were
removed, as well as words that occurred fewer
than 10 times. This approach was taken to stay
broadly in line with the strategy that was used in
(Derrac and Schockaert, 2015). As classification
tasks, we used two attributes from WikiData in
both domains (being the only attributes for which



138

BUILDINGS

Initial cluster Xi: Top additional features Yi:

architecture, art, history, lit-
erature, architectural, society,
culture, ancient, scholars, ver-
nacular, classical, historical,
contemporary, cultural, me-
dieval

structure, floors, county, architect, graduate,
palace, revival, property, hall, united, floor,
farm, design, art, space, style, states, down-
town, interior, mansion, arena, architectural,
architecture, chemistry, entrance.

city, district, town, rural, cen-
tral, cities, neighborhood, ar-
eas, part, section, province,
village, north, western, por-
tion, middle, residents, be-
tween, branch

company, wife, headquarters, firm, area,
events, estate, people, facility, streets, avenue,
schools, hotel, commercial, former, states, ar-
chitects, original, farm, example, residence,

Table 5: Examples of the facets from the Buildings
dataset (using IncAgg method).

a sufficient number of entities per attribute value
was found). The full datasets will be released upon
acceptance. The properties of the considered do-
mains and associated classification problems are
summarized in Table 2. For each classification
problem, we randomly split the labelled examples
into 2/3 for training and 1/3 for testing. For tun-
ing we use 5-fold cross-validation over the training
set. In the movies domain, where more labelled
data is available, we have used fixed splits of 60%
for training, 20% for tuning and 20% testing.
Results. The results are summarized in Table
3. Our main method IncAgg outperforms the
MDS baseline for almost all classification tasks
and types of classifiers. For the HDBSCAN based
variant, the results are more mixed, which seems
related to the fact that the overlap based dissimilar-
ity could not be used in that case. Indeed, the co-
sine based variant of IncAgg, i.e. CosIncAgg, also
performs consistently worse than IncAgg. Look-
ing at the performance of NonIncAgg and Non-
IncHDB reveals that learning facets in an iterative
fashion is critical, given that these two variants
perform worse than the baseline in many cases.

Looking more closely at the results of our main
method IncAgg, it is interesting to note that large
improvements are obtained for depth-1 decision
trees, which shows that our facet subspaces make
it easier to identify features that correspond to the
categories from the corresponding classification
problems. However, large improvements can also
be seen for SVMs, which shows that the actual de-
composition of the space is also helpful.

Qualitative Analysis. Figure 1 illustrates how
our subspaces capture similarity in a facet-specific
way, showing the two first principal components
of the embedding of Birmingham School of Art in

the full space and in the subspace of a facet that in-
tuitively captures building type. While the neigh-
bours in the full space are a mixture of different
building types (hotels, commercial buildings, mu-
seum, and educational buildings), in the facet sub-
space all nearest neighbors are universities.

Table 4 illustrates the impact of using overlap-
based dissimilarity, where the clusters obtained
with cosine similarity are clearly more thematic,
while the ones obtained with the overlap-based
metric intuitively capture a facet (i.e. geographic
location and the natural–cultural opposition). Fi-
nally, Table 5 shows some of the facets obtained
in the buildings domains. The first example shows
a facet which intuitively captures the historical–
contemporary opposition, while the second exam-
ple shows a facet that captures the rural–city op-
position.

5 Conclusions

We considered the problem of decomposing a vec-
tor space embedding into facets, which are char-
acterized by a set of semantically related features
and a corresponding subspace of the embedding.
In particular, we focused on unsupervised meth-
ods, considering both approaches that rely on the
vector space itself (i.e. using subspace clustering)
and approaches that additionally take into account
the information about word meaning that is cap-
tured by pre-trained word vectors. Overall, we
found this problem to be highly challenging, in
accordance with the findings from Locatello et al.
(2018) regarding unsupervised disentangled repre-
sentation learning. However, we were still able to
obtain useful facets based on two crucial modifica-
tions to a standard clustering based strategy. First,
we measure the similarity between features based
on two factors: the similarity between their word
vectors and the dissimilarity between their mean-
ing in the vector space embedding (measured in
terms of overlap). Second, we found it essential
to learn facets in an iterative fashion, to avoid too
much redundancy between the different facets.

Acknowledgments

Steven Schockaert was supported by ERC Starting
Grant 637277. Zied Bouraoui was supported by
CNRS PEPS INS2I MODERN.



139

References
Thomas Ager, Ondrej Kuzelka, and Steven Schockaert.

2018. Modelling salient features as directions in
fine-tuned semantic spaces. In Proceedings of the
22nd Conference on Computational Natural Lan-
guage Learning, pages 530–540.

Hadi Banaee, Erik Schaffernicht, and Amy Loutfi.
2018. Data-driven conceptual spaces: Creating se-
mantic representations for linguistic descriptions of
numerical data. Journal of Artificial Intelligence Re-
search, 63:691–742.

Steven Bird and Edward Loper. 2004. Nltk: the nat-
ural language toolkit. In Proceedings of the ACL
2004 on Interactive poster and demonstration ses-
sions, page 31. Association for Computational Lin-
guistics.

Zied Bouraoui and Steven Schockaert. 2018. Learning
conceptual space representations of interrelated con-
cepts. In Proceedings of the Twenty-Seventh Inter-
national Joint Conference on Artificial Intelligence,
pages 1760–1766.

Ricardo JGB Campello, Davoud Moulavi, and Jörg
Sander. 2013. Density-based clustering based on hi-
erarchical density estimates. In Pacific-Asia Con-
ference on Knowledge Discovery and Data Mining,
pages 160–172.

Xi Chen, Yan Duan, Rein Houthooft, John Schul-
man, Ilya Sutskever, and Pieter Abbeel. 2016. In-
fogan: Interpretable representation learning by in-
formation maximizing generative adversarial nets.
In Advances in Neural Information Processing Sys-
tems, pages 2172–2180.

Scott Deerwester, Susan T Dumais, George W Furnas,
Thomas K Landauer, and Richard Harshman. 1990.
Indexing by latent semantic analysis. Journal of the
American Society for Information Science, 41:391–
407.

Joaquı́n Derrac and Steven Schockaert. 2015. Inducing
semantic relations from conceptual spaces: a data-
driven approach to plausible reasoning. Artificial
Intelligence, 228:66–94.

Igor Douven, Lieven Decock, Richard Dietz, and Paul
Égré. 2013. Vagueness: A conceptual spaces ap-
proach. Journal of Philosophical Logic, 42:137–
160.

P. Gärdenfors. 2000. Conceptual Spaces: The Geome-
try of Thought. MIT Press.

Peter Gärdenfors. 1996. Mental representation, con-
ceptual spaces and metaphors. Synthese, 106:21–47.

Ian Goodfellow, Jean Pouget-Abadie, Mehdi Mirza,
Bing Xu, David Warde-Farley, Sherjil Ozair, Aaron
Courville, and Yoshua Bengio. 2014. Generative ad-
versarial nets. In Advances in Neural Information
Processing Systems, pages 2672–2680.

Irina Higgins, Loic Matthey, Arka Pal, Christopher
Burgess, Xavier Glorot, Matthew Botvinick, Shakir
Mohamed, and Alexander Lerchner. 2017. β-VAE:
Learning basic visual concepts with a constrained
variational framework. In International Conference
on Learning Representations.

Sarthak Jain, Edward Banner, Jan-Willem van de
Meent, Iain J Marshall, and Byron C Wallace. 2018.
Learning disentangled representations of texts with
application to biomedical abstracts. In Proceedings
of the 2018 Conference on Empirical Methods in
Natural Language Processing, pages 4683–4693.

Diederik P Kingma and Max Welling. 2014. Auto-
encoding variational Bayes. In Proceedings of the
International Conference on Learning Representa-
tions.

Francesco Locatello, Stefan Bauer, Mario Lucic,
Sylvain Gelly, Bernhard Schölkopf, and Olivier
Bachem. 2018. Challenging common assumptions
in the unsupervised learning of disentangled repre-
sentations. CoRR, abs/1811.12359.

Tomas Mikolov, Ilya Sutskever, Kai Chen, Greg S Cor-
rado, and Jeff Dean. 2013. Distributed representa-
tions of words and phrases and their compositional-
ity. In Advances in neural information processing
systems, pages 3111–3119.

Jeffrey Pennington, Richard Socher, and Christopher
Manning. 2014. Glove: Global vectors for word
representation. In Proceedings of the 2014 Con-
ference on Empirical Methods in Natural Language
Processing, pages 1532–1543.

Peter D Turney and Patrick Pantel. 2010. From fre-
quency to meaning: Vector space models of se-
mantics. Journal of Artificial Intelligence Research,
37:141–188.

Chong You, Daniel Robinson, and René Vidal. 2016.
Scalable sparse subspace clustering by orthogonal
matching pursuit. In Proceedings of the IEEE con-
ference on computer vision and pattern recognition,
pages 3918–3927.


