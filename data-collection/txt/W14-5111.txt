



















































Proceedings of the...


D S Sharma, R Sangal and J D Pawar. Proc. of the 11th Intl. Conference on Natural Language Processing, pages 69–75,
Goa, India. December 2014. c©2014 NLP Association of India (NLPAI) 

HinMA: Distributed Morphology based Hindi Morphological Analyzer 

 

Ankit Bahuguna 

TU Munich 
ankitbahuguna@outlook.com 

Lavita Talukdar 

IIT Bombay 
lavita.talukdar@gmail.com 

Pushpak Bhattacharyya 

IIT Bombay 
pushpakbh@gmail.com 

Smriti Singh 

IIT Bombay 
smritismriti@gmail.com 

 
 

     Abstract 

Morphology plays a crucial role in the 

working of various NLP applications. 

Whenever we run a spell checker, provide 

a query term to a web search engine, ex-

plore translation or transliteration tools, use 

online dictionaries or thesauri, or try using 

text-to-speech or speech recognition appli-

cations, morphology works at the back of 

these applications. We present here a novel 

computational tool HinMA, or the Hindi 

Morphological Analyzer, based on the 

framework of Distributed Morphology 

(DM). We discuss the implementation of 

linguistically motivated analysis and later, 

we evaluate the accuracy of this tool. We 

find, that this rule based system exhibits 

extremely high accuracy and has a good 

overall coverage. The design of the tool is 

language independent and by changing few 

configuration files, one can use this frame-

work for developing such a tool for other 

languages as well. The analysis of Hindi 

inflectional morphology based on the Dis-

tributed morphology framework, its im-

plementation in the development of this 

tool and integration with NLP resources 

like Hindi Wordnet or Sense Marker Tool 

and possible development of a word gener-

ator are interesting aspects of this work. 

1 Introduction 

Natural Language Processing (NLP) systems aim 

to analyze and generate natural language sentences 

and are concerned with computational systems and 

their interaction with human language. Morpholo-

gy accounts for the morphological properties of 

languages in a systematic manner, enabling us to 

understand how words are formed, what their con-

stituents are, how they may be arranged to make 

larger units, what are the semantic and grammati-

cal constraints involved and how morphological 

processes interact with syntactic and phonological 

ones. An analysis of the inflectional morphology of 

Hindi has been presented here in the theoretical 

framework of Distributed Morphology, as dis-

cussed by Halle and Marantz (1993, 1994); Harley 

and Noyer (1999). The theory has been used to 

develop the rules required to analyze and describe 

the various inflectional forms of Hindi words. Our 

tool takes an inflected word as input and outputs its 

set of roots along with its various morphological 

features using the output of the stemmer. The suf-

fixes extracted by the stemmer are used to get the 

various morphological features of the word: gen-

der, number, person, case, tense, aspect and mo-

dality. The tool consist of two parts – Stemmer, 

which takes inflected word as input and stems it, to 

separate root and suffix and Morphological Ana-

lyzer, which takes <Root, Suffix> pair as input and 

outputs a set of features along with the set of roots. 

Stemming aims to reduce morphologically related 

word forms to a single base form or stem. Stem-

mers use an affix-list and morphological rules that 

isolate the base form by stripping off possible af-

fixes from a given word. The final stem is usually 

then looked up in the online language lexicon to 

verify its validity. Morphological analysis is pro-

vided by morphological analyzers that include 

morphological information for each morpheme − 

both stems and suffixes isolated by the stemmer. A 

Morphological Analyzer (MA), exploits only word 

level information and produces all possible roots 

and analyses for a given word. An MA should be 

able to produce all the possibilities if a word can be 

decomposed into two or more different ways to 

produce the roots of different Part of Speech (POS) 

categories. For such a word, the root and the mor-

pheme analyses may be different in each case. For 

example, the Hindi word khāte in sentences 1 and 

69



 

2 has two possible analyses: khātā ‘ledger’ as the 

root with suffix /-e/ and khā ‘eat’ as the root with 

suffixes /-t-/ and /-e/. In Ex. 1, the word khāte has a 

noun root ‘khātā’ and the suffix /-e/ appears to 

mark the plural number and the direct case. In Ex. 

2, on the other hand, the word has a verb root khā 

‘eat’ and the suffixes /-t/ and /-e/ appear to mark 

the features ‘habitual aspect’ and ‘masculine-

plural’. A morphological analyzer should typically 

provide both analyses for the word khāte unless 

some contextual information is used to resolve the 

categorical ambiguity. Examples: 

1. मेरे कई खात ेहैं. 

mere kəī khāte haĩ 

I-Poss many (bank) accounts be-pres-pl 

(I have many bank accounts) 

2. वे रोज़ चावल खाते हैं. 

ve roz cāvəl khā-t-e haĩ 

They everyday rice eat-hab-pl be-pres,pl 

(They eat rice everyday) 

 

Similarly, a word may also have multiple roots and 

multiple analyzes within the same POS category as 

shown in 3 below. The word nālõ can be analyzed 

in two ways: with nāl as the root or with nālā as 

the root. The suffix in both cases is same, i.e., -õ 

which represents the ‘plural-oblique’ case feature. 

Both are valid roots for the input word. Since an 

analyzer does not consider the contextual infor-

mation of words to resolve POS ambiguities, it 

should be able to produce both outputs. 

3. Input word form: नालों  (nālõ) 

a. POS Category: Noun; Root 1: nāl ‘horse-
shoe’; Suffix: -õ; Analysis: Plural, Oblique 

b. POS Category: Noun; Root 2: nālā ‘water 
channel/trough’;Suffix: -õ; Analysis: Plu-

ral, Oblique 

An MA usually relies on its accompanying lexicon 

to match the extracted root and to provide the cate-

gory information for a given word. However, the 

analyzer may fail to recognize certain word forms 

if the root formed by the stemmer after stripping 

off the suffix is absent in the lexicon. The analyzer 

may also fail to recognize spelling variants of the 

roots stored in the lexicon such as क़ै दियों–क़ै दियों 

(kædiyõ) ‘prisoners’, हफ़्ते-हफ्ते (hǝphte) ‘weeks’, etc. 

In the absence of the rules to handle spelling varia-

tions, the MA may not be able to analyse the 

spelling variants of a word. The remainder of this 

paper is organized as follows. We describe related 

work and background in section 2. Section 3 ex-

plains the concept of Distributed Morphology 

(DM). Implementation details are discussed in Sec-

tion 4. Results are discussed in Section 5 and Error 

analysis in Section 6. Comparison with existing 

MA(s) is mentioned in Section 7. Section 8 dis-

cusses applications and Section 9 concludes the 

paper and points to future directions. 

2 Related Work and Background 

Several techniques have been utilized in building 

stemmers and morphological analyzers for Hindi. 

Some of them are morphology based, some statis-

tical and some a hybrid of the two. The first ever 

reported work on Hindi stemming and morpholog-

ical analysis was by Bharati et al. (2001). They 

present an algorithm that learns and predicts mor-

phological patterns of Hindi using an existing Hin-

di morphological analyzer (MA). The paradigm-

based MA uses a very low coverage lexicon. Roots 

are stored in a dictionary along with the paradigm 

information. Each paradigm stores information of 

the add-delete characters for a set of items for var-

ious inflectional categories (such as number and 

case for nouns). A representative root is chosen for 

each paradigm and is used as a label for paradigm 

assignment for the other roots in that paradigm. 

For each input word, the MA applies the add-

delete strings and looks for a possible match in the 

root lexicon. If a match is found, it is considered to 

be the correct root and is the final output. If not, 

the next string is applied. Using this MA, Bharati 

et al. (2001) applied an automatic-learning algo-

rithm to predict the stem of an inflected word using 

the frequency of occurrences of word forms in the 

raw (unannotated) corpus. The idea is to use the 

suffix to determine the set of possible stems and 

paradigms that may generate the input word form. 

Using the pairs of stems and paradigms, all possi-

ble word forms are generated. The frequency of 

these word forms is then obtained from the corpus 

and is stored in a vector. These vectors are com-

pared for each ‘guess’ in order to select the most 

likely stem and the paradigm for the input word. 

This algorithm reportedly gave better coverage. 

Goyal and Lehal (2008) too developed a Hindi 

Morphological Analyzer that relies on a list of pos-

70



 

sible forms of the commonly used Hindi root 

words. Their approach promises to perform better 

than previous approaches, as the search time in a 

storage-based approach is very low. Another obvi-

ous advantage of storing all the forms in a list is 

that the system only needs to find a correct match 

in the system and output the corresponding root. In 

that sense, the user will always get accurate results. 

Ramanathan and Rao (2003) worked on ‘light-

weight stemming’ for Hindi. They tried to build a 

computationally inexpensive and domain inde-

pendent stemmer that extracts out the stem of a 

word by stripping off suffixes based on the ‘long-

est match’. They created a list of 65 possible in-

flectional suffixes for Hindi nouns, adjectives, 

verbs and adverbs using McGregor’s (1995) analy-

sis of Hindi inflectional morphology. For an input 

word, the stemmer keeps stripping off suffixes us-

ing the suffix-list until it finds the longest match. 

But, the system may produce many incorrect stems 

since it has no way to identify whether or not a 

particular suffix is applicable to the identified 

stem. In addition, the stemmer does not output the 

root of the input word. Purely statistical methods 

were also tried out for Hindi stemming and mor-

phological analysis. Larkey et al. (2003) worked 

on Hindi stemming, as it was needed in their Cross 

language information retrieval task. They used a 

list of 27 common suffixes supplied by a Hindi 

speaker that indicate nominalization, gender, num-

ber and tense features. In their system, the stem-

ming was done to first extract out the longest 

possible suffix followed by smaller suffixes. But, 

the stemming process did not give them encourag-

ing results. Since, the morphological analysis was 

not exhaustive, their system could not handle many 

word forms. They reported that stemming did not 

lead to any improvement in their retrieval task. 

3 Distributed Morphology 

Distributed Morphology, a recent theory of the 

architecture of grammar, was proposed by Halle 

and Marantz (1993, 1994). The theory proposes 

that ‘words’ are structurally not different from oth-

er constituents such as phrases or sentences, and 

are formed and manipulated using syntactic rules. 

This suggests that word formation is primarily a 

syntactic operation, i.e., the morphological struc-

ture of a word or a word form is generated using 

syntactic operations. It is syntax that provides fea-

tures and the structures upon which morphology 

operates. This view is opposed to the one that be-

lieves that morphology operates in an entirely sep-

arate component that generates words or word 

forms outside syntax that later feed into syntactic 

structures. Unlike lexicalist approaches that as-

sume all morphology to happen in the lexicon, DM 

believes that the constituent components of mor-

phology are distributed among various levels in the 

architecture of grammar and work in close connec-

tion with syntax and phonology. Halle and Marantz 

postulate a separate level of representation called 

Morphological Structure (MS) that operates in be-

tween Syntactic Structure (SS) and Phonological 

Form (PF). This level receives hierarchical struc-

tures from syntax that contain ‘abstract’ mor-

phemes as the terminal nodes; abstract, because at 

this level, these nodes only have morpho-syntactic 

and semantic features and lack any associated pho-

nological features. The DM grammar is represent-

ed by Halle and Marantz (1993) as shown in 

Figure 1. 

Syntax (Syntactic and Semantic Features) 

 

Morphology 

 

 

Phonological Form (PF) 

 

Figure 1. Architecture of grammar in DM. 

4 Implementation of Distributed Mor-
phology based Morphological Analyzer 

The overall process can be summarised into three 

distinct steps: stemming, root formation and lexi-

con look-up and morphological analysis. For 

stemming, HinMA uses a set of ordered contextual 

rules to isolate and extract out suffixes from a giv-

en inflected word form.  For implementation pur-

poses, the vocabulary entries developed for nouns, 

adjectives, quantifiers, ordinals and verbs were 

converted into if-then rules arranged in order of 

specificity of inflectional and contextual features. 

The internal processes of HinMa is shown in Fig-

ure 2. The rules are applied from right to left itera-

tively until no suffixes remain and the base root is 

left. Readjustment rules apply wherever applicable 

to produce the correct root which is then matched 

Feature Insertion, 

Merge, Fission, 

fusion Vocabulary 

Insertion 

(roots and 

affixes) 

71



 

with the incorporated root-list to determine match 

(es). Then, the root is validated by performing a 

lexicon lookup. On successful validation, root(s) is 

obtained and it completes the second step. The in-

formation associated with the various rules and the 

lexicon is combined and provided as output of 

morphological analysis. A number of rules Singh 

S. et al. (2011) were constructed over a period of 

one year and later another one year was taken to 

develop and test the system with the help of a ded-

icated team of 4 linguists and two computer scien-

tists. Due to space limitation, we are unable to 

present the individual rules here.  

 

Figure 2. Steps show working of HinMa. 

 

 
Figure 3: HinMA online implementation: Output 

of verb “जाऊंगा” (jAuMga ~ will go). 

Output of the System: A detailed morpheme 

analysis is given as output for each word, with in-

formation such as root, grammatical category, in-

flection class and feature values. The system also 

produces a detailed morphological analysis for 

each morpheme that constitutes the word form. 

The output format is: 

Input Token: XXXXX 

Possible Root 1: class: category: suffix: mor-

phemes (morpheme 1 … etc.): Morpheme Analysis 

(morpheme 1, morpheme 2, etc.) 

Possible Root 2: … 

The morpheme analysis of each suffix is produced 

in a seven field with values for the features gender, 

number, person, case, tense, aspect, and mood. 

Our system offers the analysis of words which 

could yield more than one root from with added 

capability of handling compound words. We pro-

vide demo output of online system1 in Figure 3 and 

actual outputs categorised w.r.t., various morpho-

logical phenomena below: 

1. Multiple roots within the same category: The 

input word नालों ‘nālõ’ may have two possible noun 

roots which are नाल ‘nāl’ (horseshoe) and नाला ‘nālā’ 

(trough/channel). The two roots belong to different 

inflection classes. The system is able to output 

both analysis. 

Token: नालों, Total Output: 2 

Root: नाल, Class: C, Category: noun, Suffix: ो ो ं

Gender: -masc, Number: +pl, Person: x, Case: 

+oblique, Tense: x, Aspect: x, Mood: x  

Root: नाला, Class: D, Category: noun, Suffix: ो ो ं

Gender: +masc, Number: +pl, Person: x, Case: 

+oblique, Tense: x, Aspect: x, Mood: x 

 

2. Multiple roots across POS categories: The 

input word खात े‘khāte’ may have two roots of dif-

ferent POS categories. It may be analyzed as a 

noun with the root खाता ‘khātā’ (ledger) and suffix -

ोे ‘e’. As a verb, its root is खा ‘khā’ (eat) with suf-

fix -ते ‘te’. Our MA is able to produce both outputs 

and their analysis, shown below: 

Token: खात,े Total Output: 2 

Root: खाता, Class: D, Category: noun, Suffix: ोे 

Gender: +masc, Number: -pl, Person: x, Case: 

+oblique, Tense: x, Aspect: x, Mood: x 

Root: खा, Class:, Category: verb, Suffix: ते 

Gender: +masc, Number: +-pl, Person: x, Case: x, 

Tense: , Aspect: +conditional, Mood: x ] 

ोे -> [ Gender: +masc, Number: +-pl, Person: x, 

Case: x, Tense: , Aspect: x, Mood: x 

त -> [ Gender: x, Number: x, Person: x, Case: x, 

                                                           
1 http://www.cfilt.iitb.ac.in/~ankitb/ma/ 

72



 

Tense: x, Aspect: +conditional, Mood: x ] 

Gender: x, Number: x, Person: x, Case: x, Tense: 

x, Aspect: (-perfect: +habitual), Mood: x 
 

3. Multiple morphological analyzes for a word 

form: A word may have multiple analyzes possi-

ble for the same suffix and root. The token साए ‘sāe’ 

(shadows) may represent the features ‘singular-

oblique’ or ‘plural-direct’. 

Token: साए, Total Output: 2 

Root: सा, Class:, Category: particle, Suffix: ए  

Gender: , Number: , Person: , Case: , Tense: , As-

pect: , Mood: x 

Root: साया, Class: D, Category: noun, Suffix: ए  

Gender: +masc, Number: -pl, Person: x, Case: 

+oblique, Tense: x, Aspect: x, Mood: x 
 

4. Irregular forms: The system is able to yield the 

roots of irregular forms using the set of rules spe-

cific to irregular verbs. Ex. For the inflected word 

“गए”, we have: 

Token: गए, Total Output: 1 

Root: जा, Class:, Category: verb, Suffix: ए 

Gender: +masc, Number: +pl, Person: x, Case: x, 

Tense: x, Aspect: +perfect, Mood: x 
 

5. Stem modifications: The system is able to do 

phonological readjustment on the stem after affix 

stripping such as vowel lengthening (i-ī in ताइ-ताई 

‘tāi-tāī’ and पि-िी ‘pi-pī’, u-ū in बहु-बहू ‘bǝhu-bǝhū’ 

and छु-छू ‘chu-chu’), vowel addition at the end (द-द  

‘d-do’) etc. For Example, ‘taiyan’ 

Token: ताइयााँ, Total Output: 1 

Root: ताई, Class: B, Category: noun, Suffix: यााँ 

Gender: -masc, Number: +pl, Person: x, Case: -

oblique, Tense: x, Aspect: x, Mood: x 

 

6. Compound words: The system is able to yield 

the roots of compound words of the template [A-B] 

using the set of rules, which capture inflection on 

one or either both the words. We have introduced 

specific categories as compound-noun, compound-

adj, compound-adv and compound-verb. 

Example: For an inflected compound word “वर्ण-

भेदों”, ‘varn-bhedon’ we get the following output: 

Token: वर्ण-भेदों, Total Output: 1 

Root: वर्ण-भेद, Class: A, Category: noun, Suffix: ो ों; 

Gender: +masc, Number: +pl, Person: x, Case: 

+oblique, Tense: x, Aspect: x, Mood: x 

5 Results 

We tested HinMA on a corpus of around 66,000 

words (annotated and manually cross-checked) to 

check its performance. We would like to empha-

size that there was no instance of failure at analysis 

of an inflectional form as long as its root was 

available in the lexicon. In a few cases, the root of 

a given word is present in the root-list but under a 

different spelling. Since, the lexicon does not store 

variants of the same root word, many roots are left 

unidentified by the system. However, if we enrich 

the lexicon by adding more entries and include 

certain variations in spelling such as Urdu-Hindi 

letter alternations (क़ै दियों/क़ै दियों ‘kædiyõ’ (prisoners), 

हफ़्त/ेहफ्त े‘hǝphte’ (weeks)) and nasal vs. nasalization 

(क्रादततकारी/क्राांदतकारी ‘krāntikārī’ (revolutionists)), we 

ought to get better coverage. Below we discuss, 

results and error analysis for each POS category. 

Nouns: We tested the Morphological Analyzer on 

14475 Hindi noun forms extracted from the corpus 

and the results were verified manually. The system 

could correctly identify the roots and provide the 

morphological analysis for 13523 nouns (more 

than half of which require multiple analysis). A 

total of 1022 nouns remain unidentified, with 643 

unique noun forms (rest repeated entries). Verbs: 

We tested the analyzer on 13160 Hindi verb forms 

and manually verified the results. The system was 

able to correctly analyze most of the regular and 

irregular forms. The system fails again with cases 

of incorrect spelling, hyphenated word forms, 

missing roots or where in the analyzed text there 

were extra/incorrect characters in the word form. 

The performance of the system on Hindi verbs is 

very impressive. The system fails to identify only 

116 verbal forms. 

6 Error Analysis 

We performed error analysis based on a variety of 

different parameters with respect to the part of 

speech under consideration. The most error caus-

ing cases were that of Nouns and Verbs and hence 

we present their results here. We present them, 

specific to the observed parameter and the respec-

tive examples as follows: 

73



 

 Nouns: Incorrect spelling: भैसों (correct 

spelling: भैंसों ‘bhaĩsõ’ (buffaloes)); Spelling 

Variations: कैदियों/कैदियों ‘kædiyõ’ (prisoners); 

Missing root entries in the lexicon: िोहराव 

‘dohrāv’ (repetition); Borrowed nouns from 

foreign languages (foreign words): इटंरनेट 

‘intǝrnet (internet); Adjectives/qualifiers func-

tioning as nouns: सैंकड़ों ‘sænkǝɖõ’ (thousands). 

 Verbs: With missing roots in the lexicon: पिा 

‘pǝdā’ (make somebody run); Hyphenated 

verbs: आने-जाने ‘āne-jāne’; Verbs with incorrect 

or variant spelling: रक्खा (correct spelling: रखा 

‘rǝkhā’ (kept)); Verbs with extra characters 

due to faulty tokenization: िेखने ‘dekhne’. 

7 Evaluation 

Currently, for Hindi, there is only one state of the 

art Morphological Analyzer which is under active 

development and provided constant updates. It is 

developed by IIIT Hyderabad2. Thus, to evaluate, 

we executed our system against 200 words chosen 

randomly from the BBC news corpus3 and then 

manually checked the accuracy of results on both 

HinMa and IIITH-MA. This methodology was 

adopted, since there is no publicly available gold 

data for this task. The low number of the evalua-

tion corpus was to provide ease to the verifying 

linguist. But, as the data is chosen in random order 

and only unique words are considered, this brings 

some integrity to the evaluation methodology. 
 

MA Systems HinMa IIITH - MA 

Correct Results 186 181 

Wrong/Unknown Words 14 19 

Accuracy (%) 93 90.5 

Table 1: Accuracy figures for evaluation of Hin-

MA results with that of IIIT-H MA. 

8 Applications 

We have integrated HinMa with Hindi Wordnet 

and Sense Marker tool, they are described below: 

1. Integration with Hindi Wordnet: The work 

                                                           
2http://sampark.iiit.ac.in/hindimorph/web/restapi.php/indic/mo

rphclient 
3 http://www.bbc.co.uk/hindi/ 

was inspired by English Wordnet4 developed at 

Princeton, Miller (1995); Fellbaum (1998) 

which gives results based on the stem of the 

query words consisting of inflection. For ex-

ample, if we search for the word “लड़पियााँ” 

(girls) in Hindi Wordnet integrated with Hin-

Ma, the result is same as for word “लड़िी” (girl). 

“लड़िी” (girl) is the root form of the inflected 

word “लड़पियााँ” (girls). Thus. such an integration 

increases the coverage of results. 

2. Integration with Sense Marker Tool: The 
sense marker tool (Chatterjee et al.) is used for 

marking the correct sense of the word from a 

given set of senses. This allows one to create a 

corpora of manually tagged words and this is 

extremely useful in NLP problem areas like 

word sense disambiguation. We have integrat-

ed HinMa with the sense marker tool thereby 

providing a better coverage and accuracy in 

terms of returned result(s) whenever an in-

flected word needs to be sense marked. 

9 Conclusion and Future Work 

In our paper, we have described the Hindi Morpho-

logical Analyzer (HinMA) which handles the In-

flectional Morphology in the framework of 

Distributed Morphology (DM). Our approach first 

analyses the formation of inflectional forms of 

Hindi through the application of suffix insertion 

rules and then apply phonological readjustment 

rules. It was found that it works quite well for the 

words that are present in the lexicon. Using the 

basic concepts of DM, our analysis of Hindi nouns 

and verbs is able to generate the inflectional forms 

using a very small set of rules and an inflection-

based classification of nouns and adjectives. We 

showed that the DM-based Hindi morphological 

analyzer is quite accurate and reliable, capable of 

both analysis and generation. Future work involves 

developing a Word Generator for Hindi. The lin-

guistic resources used in the DM-based MA name-

ly, the vocabulary items (suffixal entries) and the 

readjustment rules need to be applied in the reverse 

direction to produce fully inflected words using the 

root entries from the root-list and combining them 

with the affixal entries to generate surface forms. 

We encourage using this framework to develop 

                                                           
4 http://wordnetweb.princeton.edu/perl/webwn 

74



 

morphological analyzers for other languages as 

well. 

Acknowledgements 
The authors would like to thank our team of linguists, 

Mrs. Jaya Jha, Mrs. Laxmi Kashyap, Mrs. Nootan Ver-

ma and Mrs. Rajita Shukla for their valuable inputs and 

their work on manually developing lexicon for this task 

10 References 

A. Ramanathan, and D. D. Rao. 2003. A Lightweight 

Stemmer for Hindi, Proceedings of the 10th Confer-

ence of the European Chapter of the Association for 

Computational Linguistics, 2003. 

Bharati, A., R. Sangal, S. M. Bendre, M. N. S. S. K. 

Pavan Kumar and K. R. Aishwarya. 2001. Unsuper-

vised Improvement of Morphological Analyzer for 

Inflectionally Rich Languages. In the Proceedings of 

the 6th NLP Pacific Rim Symposium, 685-692. To-

kyo, Japan, November. 

Chatterjee Arindam, Joshi Salil Rajeev, Khapra Mitesh 

M. and Bhattacharyya Pushpak, 2010. Introduction 

to Tools for IndoWordnet and Word Sense Disam-

biguation, The 3rd IndoWordnet Workshop, Eighth 

International Conference on Natural Language Pro-

cessing (ICON 2010), IIT Kharagpur, India. 

Christiane Fellbaum (1998, edition) WordNet: An Elec-

tronic Lexical Database. Cambridge, MA: MIT 

Press. 

Halle, M., and A. Marantz. 1993. Distributed Morphol-

ogy and the Pieces of Inflection. In The View from 

Building 20: Essays in Linguistics in Honour of Syl-

vain Bromberger, eds. K. 

Harley, H. and R. Noyer. 1999. Distributed Morphology 

In GLOT International 4.4:3-9. 

George A. Miller (1995). WordNet: A Lexical Database 

for English. Communications of the ACM Vol. 38, 

No. 11: 39-41.  

Goyal, V. and Lehal G. S. 2008. Hindi Morphological 

Analyzer and Generator. In the Proceedings of the 

First International Conference on Emerging Trends 

in Engineering and Technology, 1156-1159. Nagpur, 

IEEE Computer Society Press, California, USA. 

Leah S. Larkey, Margaret E. Connell, Nasreen Ab-

duljaleel. 2003 Hindi CLIR in thirty days ,ACM 

Transactions on Asian Language Information Pro-

cessing (TALIP),Volume 2 Issue 2, pages 130 - 14, 

ACM New York, NY, USA, June 2003. 

McGregor, R.S. 1995. Outline of Hindi grammar. Ox-

ford: Oxford University Press. 

Singh, Smriti 2011. Hindi Inflectional Morphology and 

its implementation in Language Processing Tools: 

A distributed Morphology Approach, PhD Thesis, 

IIT Bombay, Mumbai, India. 

. 

75


