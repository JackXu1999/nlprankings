











































Joint Event and Temporal Relation Extraction with Shared Representations and Structured Prediction


Proceedings of the 2019 Conference on Empirical Methods in Natural Language Processing
and the 9th International Joint Conference on Natural Language Processing, pages 434–444,
Hong Kong, China, November 3–7, 2019. c©2019 Association for Computational Linguistics

434

Joint Event and Temporal Relation Extraction with Shared
Representations and Structured Prediction

Rujun Han,1,2 Qiang Ning,3 Nanyun Peng1,2
1Department of Computer Science, University of Southern California

2Information Sciences Institute, University of Southern California
3Department of Electrical and Computer Engineering, University of Illinois at Urbana-Champaign

rujunhan@isi.edu, qning2@illinois.edu, npeng@isi.edu

Abstract
We propose a joint event and temporal rela-
tion extraction model with shared representa-
tion learning and structured prediction. The
proposed method has two advantages over ex-
isting work. First, it improves event represen-
tation by allowing the event and relation mod-
ules to share the same contextualized embed-
dings and neural representation learner. Sec-
ond, it avoids error propagation in the conven-
tional pipeline systems by leveraging struc-
tured inference and learning methods to assign
both the event labels and the temporal rela-
tion labels jointly. Experiments show that the
proposed method can improve both event ex-
traction and temporal relation extraction over
state-of-the-art systems, with the end-to-end
F1 improved by 10% and 6.8% on two bench-
mark datasets respectively.

1 Introduction
The extraction of temporal relations among events
is an important natural language understanding
(NLU) task that can benefit many downstream
tasks such as question answering, information re-
trieval, and narrative generation. The task can
be modeled as building a graph for a given text,
whose nodes represent events and edges are la-
beled with temporal relations correspondingly.
Figure 1a illustrates such a graph for the text
shown therein. The nodes assassination, slaugh-
tered, rampage, war, and Hutu are the candi-
date events, and different types of edges spec-
ify different temporal relations between them: as-
sassination is BEFORE rampage, rampage IN-
CLUDES slaughtered, and the relation between
slaughtered and war is VAGUE. Since “Hutu” is
actually not an event, a system is expected to an-
notate the relations between “Hutu” and all other
nodes in the graph as NONE (i.e., no relation).

As far as we know, all existing systems treat
this task as a pipeline of two separate subtasks,

(a) Temporal Relation Graph

(b) Pipeline Model

(c) Structured Joint Model

Figure 1: An illustration of event and relation models
in our proposed joint framework. (a) is a (partial) graph
of the output of the relation extraction model. “Hutu” is
not an event and hence all relations including it should
be annotated as NONE. (b) and (c) are comparisons be-
tween a pipeline model and our joint model.

i.e., event extraction and temporal relation classi-
fication, and they also assume that gold events are
given when training the relation classifier (Ver-
hagen et al., 2007, 2010; UzZaman et al., 2013;
Chambers et al., 2014; Ning et al., 2017; Meng and
Rumshisky, 2018). Specifically, they built end-to-
end systems that extract events first and then pre-
dict temporal relations between them (Fig. 1b). In
these pipeline models, event extraction errors will
propagate to the relation classification step and
cannot be corrected afterwards. Our first contri-
bution is the proposal of a joint model that ex-



435

tracts both events and temporal relations simulta-
neously (see Fig. 1c). The motivation is that if
we train the relation classifier with NONE rela-
tions between non-events, then it will potentially
have the capability of correcting event extraction
mistakes. For instance in Fig. 1a, if the relation
classifier predicts NONE for (Hutu, war) with a
high confidence, then this is a strong signal that
can be used by the event classifier to infer that at
least one of them is not an event.

Our second contribution is that we improve
event representations by sharing the same con-
textualized embeddings and neural representation
learner between the event extraction and tempo-
ral relation extraction modules for the first time.
On top of the shared embeddings and neural rep-
resentation learner, the proposed model produces a
graph-structured output representing all the events
and relations in the given sentences.

A valid graph prediction in this context should
satisfy two structural constraints. First, the tem-
poral relation should always be NONE between
two non-events or between one event and one non-
event. Second, for those temporal relations among
events, no loops should exist due to the transitive
property of time (e.g., if A is before B and B is
before C, then A must be before C). The validity
of a graph is guaranteed by solving an integer lin-
ear programming (ILP) optimization problem with
those structural constraints, and our joint model
is trained by structural support vector machines
(SSVM) in an end-to-end fashion.

Results show that, according to the end-to-end
F1 score for temporal relation extraction, the pro-
posed method improves CAEVO (Chambers et al.,
2014) by 10% on TB-Dense, and improves Cog-
CompTime (Ning et al., 2018c) by 6.8% on MA-
TRES. We further show ablation studies to con-
firm that the proposed joint model with shared rep-
resentations and structured learning is very effec-
tive for this task.

2 Related Work

In this section we briefly summarize the existing
work on event extraction and temporal relation ex-
traction. To the best of our knowledge, there is no
prior work on joint event and relation extraction,
so we will review joint entity and relation extrac-
tion works instead.

Existing event extraction methods in the tem-
poral relation domain, as in the TempEval3 work-

shop (UzZaman et al., 2013), all use conventional
machine learning models (logistic regression,
SVM, or Max-entropy) with hand-engineered fea-
tures (e.g., ClearTK (Bethard, 2013) and Navy-
Time (Chambers, 2013)). While other domains
have shown progress on event extraction using
neural methods (Nguyen and Grishman, 2015;
Nguyen et al., 2016; Feng et al., 2016), recent
progress in the temporal relation domain is fo-
cused more on the setting where gold events are
provided. Therefore, we first show the perfor-
mance of a neural event extractor on this task, al-
though it is not our main contribution.

Early attempts on temporal relation extrac-
tion use local pair-wise classification with hand-
engineered features (Mani et al., 2006; Verha-
gen et al., 2007; Chambers et al., 2007; Verha-
gen and Pustejovsky, 2008). Later efforts, such
as ClearTK (Bethard, 2013), UTTime (Laokul-
rat et al., 2013), NavyTime (Chambers, 2013),
and CAEVO (Chambers et al., 2014) improve
earlier work with better linguistic and syntac-
tic rules. Yoshikawa et al. (2009); Ning et al.
(2017); Leeuwenberg and Moens (2017) explore
structured learning for this task, and more re-
cently, neural methods have also been shown ef-
fective (Tourille et al., 2017; Cheng and Miyao,
2017; Meng et al., 2017; Meng and Rumshisky,
2018).

In practice, we need to extract both events and
those temporal relations among them from raw
text. All the works above treat this as two sub-
tasks that are solved in a pipeline. To the best of
our knowledge, there has been no existing work on
joint event-temporal relation extraction. How-
ever, the idea of “joint” has been studied for entity-
relation extraction in many works. Miwa and
Sasaki (2014) frame their joint model as table
filling tasks, map tabular representation into se-
quential predictions with heuristic rules, and con-
struct global loss to compute the best joint predic-
tions. Li and Ji (2014) define a global structure for
joint entity and relation extraction, encode local
and global features based on domain and linguis-
tic knowledge. and leverage beam-search to find
global optimal assignments for entities and rela-
tions. Miwa and Bansal (2016) leverage LSTM
architectures to jointly predict both entity and rela-
tions, but fall short on ensuring prediction consis-
tency. Zhang et al. (2017) combine the benefits of
both neural net and global optimization with beam



436

Figure 2: Deep neural network architecture for joint
structured learning. Note that on the structured learn-
ing layer, grey bars denote tokens being predicted as
events. Edge types between events follow the same
notations as in 1a. yel = 0 (non-event), so all edges
connecting to yel are NONE. y

e
i = 1, y

e
j = 1, y

e
k = 1

(events) and hence edges between them are forced to be
the same (yrij = yrjk = y

r
ik = BEFORE in this exam-

ple) by transitivity. These global assignments are input
to compute the SSVM loss.

search. Motivated by these works, we propose
an end-to-end trainable neural structured support
vector machine (neural SSVM) model to simul-
taneously extract events and their relations from
text and ensure the global structure via ILP con-
straints. Next, we will describe in detail our pro-
posed method.

3 Joint Event-Relation Extraction Model
In this section we first provide an overview of our
neural SSVM model, and then describe each com-
ponent in our framework in detail (i.e., the multi-
tasking neural scoring module, and how inference
and learning are performed). We denote the set
of all possible relation labels (including NONE)
as R, all event candidates (both events and non-
events) as E , and all relation candidates as EE .
3.1 Neural SSVM
Our neural SSVM adapts the SSVM loss as:

L =
lX

n=1

C

Mn
⇥
max
ŷn2Y

�
0,�(yn, ŷn) + S̄nR (1)

+ CE S̄
n
E
�⇤

+ ||�||2,

where S̄nE = S(ŷ
n
E ;x

n) � S(ynE ;xn) and S̄nR =
S(ŷnR;x

n)�S(ynR;xn); � denotes model param-
eters, n indexes instances, Mn = |E|n+ |EE|n de-

notes the total number of relations |E|n and events
|EE|n in instance n. yn, ŷn denote the gold and
predicted global assignments of events and rela-
tions for instance n—each of which consists of ei-
ther one hot vector representing true and predicted
relation labels ynR, ŷ

n
R 2 {0, 1}|EE|, or entity la-

bels ynE , ŷ
n
E 2 {0, 1}|E|. A maximum a posteri-

ori probability (MAP) inference is needed to find
ŷn, which we formulate as an interger linear pro-
gramming (ILP) problem and describe more de-
tails in Section 3.3. �(yn, ŷn) is a distance mea-
surement between the gold and the predicted as-
signments; we simply use the Hamming distance.
C and CE are the hyper-parameters to balance the
losses between event, relation and the regularizer,
and S(ynE ;x

n), S(ynR;x
n) are scoring functions,

which we design a multi-tasking neural architec-
ture to learn.

The intuition behind the SSVM loss is that it
requires the score of gold output structure yn to
be greater than the score of the best output struc-
ture under the current model ŷn with a margin
�(yn, ŷn)1 or else there will be some loss. The
training objective is to minimize the loss.

The major difference between our neural-
SSVM and the traditional SSVM model is the
scoring function. Traditional SSVM uses a linear
function over hand-crafted features to compute the
scores, whereas we propose to use a recurrent neu-
ral network to estimate the scoring function and
train the entire architecture end-to-end.

3.2 Multi-Tasking Neural Scoring Function
The recurrent neural network (RNN) architecture
has been widely adopted by prior temporal extrac-
tion work to encode context information (Tourille
et al., 2017; Cheng and Miyao, 2017; Meng et al.,
2017). Motivated by these works, we adopt a
RNN-based scoring function for both event and
relation prediction in order to learn features in a
data driven way and capture long-term contexts in
the input. In Fig. 2, we skip the input layer for
simplicity.2

The bottom layer corresponds to contextualized
word representations denoted as vk. We use (i, j)
2 EE to denote a candidate relation and i 2 E to

1Note that if the best prediction is the same as the gold
structure, the margin is zero; there will be no loss.

2Following the convention of event relation prediction lit-
erature (Chambers et al., 2014; Ning et al., 2018a,b), we only
consider event pairs that occur in the same or neighboring
sentences, but the architecture can be easily adapted to the
case where inputs are longer than two sentences.



437

indicate a candidate event in the input sentences
of length N. We fix word embeddings computed
by a pre-trained BERT-base model (Devlin et al.,
2018). They are then fed into a BiLSTM layer
to further encode task-specific contextual informa-
tion. Both event and relation tasks share this layer.

The event scorer is illustrated by the left two
branches following the BiLSTM layer. We sim-
ply concatenate both forward and backward hid-
den vectors to encode the context of each to-
ken. As for the relation scorer shown in the right
branches, for each pair (i, j) we take the forward
and backward hidden vectors corresponding to
them, fi, bi, fj , bj , and concatenate them with lin-
guistic features as in previous event relation pre-
diction research. We denote linguistic features as
Li,j and only use simple features provided in the
original datasets: token distance, tense, and polar-
ity of events.

Finally, all hidden vectors and linguistic fea-
tures are concatenated to form the input to com-
pute the probability of being an event or a soft-
max distribution over all possible relation labels—
which we refer to as the RNN-based scoring func-
tion in the following sections.

3.3 MAP Inference
A MAP inference is needed both during training
to obtain ŷn in the loss function (Equation 1), as
well as during the test time to get globally coherent
assignments. We formulate the inference problem
as an ILP problem. The inference framework is es-
tablished by constructing a global objective func-
tion using scores from local scorers and impos-
ing several global constraints: 1) one-label assign-
ment, 2) event-relation consistency, and 3) sym-
metry and transitivity as in Bramsen et al. (2006);
Chambers and Jurafsky (2008); Denis and Muller
(2011); Do et al. (2012); Ning et al. (2017).

3.3.1 Objective Function
The objective function of the global inference is
to find the global assignment that has the highest
probability under the current model, as specified
in Equation 2:

ŷ =argmax
X

(i,j)2EE

X

r2R

y
r
i,jS(y

r
i,j ,x) (2)

+ CE
X

k2E

X

e2{0,1}

y
e
kS(y

e
k,x)

s.t. yri,j , yek 2 {0, 1} ,
X

r2R

y
r
i,j = 1,

X

e2{0,1}

y
e
k = 1,

where yek is a binary indicator of whether the k-
th candidate is an event or not, and yri,j is a bi-
nary indicator specifying whether the global pre-
diction of the relation between (i, j) is r 2 R.
S(yek,x), 8e 2 {0, 1} and S(yri,j ,x), 8r 2 R
are the scoring functions obtained from the event
and relation scoring functions, respectively. The
output of the global inference ŷ is a collection
of optimal label assignments for all events and
relation candidates in a fixed context. CE is a
hyper-parameter controlling weights between re-
lation and event. The constraint that follows im-
mediately from the objective function is that the
global inference should only assign one label for
all entities and relations.

3.3.2 Constraints
We introduce several additional constraints to en-
sure the resulting optimal output graph forms a
valid and plausible event graph.

Event-Relation Consistency. Event and rela-
tion prediction consistency is defined with the fol-
lowing property: a pair of input tokens have a
positive temporal relation if and only if both to-
kens are events. The following global constraints
will satisfy this property,

8(i, j) 2 EE , ePi � rPi,j , ePj � rPi,j

and eNi + e
N
j � rNi,j

where ePi denotes an event and e
N
i denotes a non-

event token. rPi,j indicates positive relations: BE-
FORE, AFTER, SIMULTANEOUS, INCLUDES,
IS INCLUDED, VAGUE and rNi,j indicate a neg-
ative relation, i.e., NONE. A formal proof of this
property can be found in Appendix A.

Symmetry and Transitivity Constraint. We
also explore the symmetry and transitivity con-
straints of relations. They are specified as follows:

8(i, j), (j, k) 2 EE , yri,j = yr̄j,i, (symmetry)

y
r1
i,j + y

r2
j,k �

X

r32Trans(r1,r2)

y
r3
i,k  1, (transitivity)

Intuitively, the symmetry constraint forces two
pairs of events with flipping orders to have re-
versed relations. For example, if ri,j = BEFORE,
then rj,i = AFTER. The transitivity constraint rules
that if (i, j), (j, k) and (i, k) pairs exist in the
graph, the label (relation) prediction of (i, k) pair



438

has to fall into the transitivity set specifyed by
(i, j) and (j, k) pairs. The full transitivity table can
be found in Ning et al. (2018a).

3.4 Learning

We begin by experimenting with optimizing
SSVM loss directly, but model performance de-
grades.3 Therefore, we develop a two-state learn-
ing approach which first trains a pipeline version
of the joint model without feedback from global
constraints. In other words, the local neural scor-
ing functions are optimized with cross-entropy
loss using gold events and relation candidates that
are constructed directly from the outputs of the
event model. During the second stage, we switch
to the global SSVM loss function in Equation 1
and re-optimize the network to adjust for global
properties. We will provide more details in Sec-
tion 4.

4 Implementation Details

In this section we describe implementation de-
tails of the baselines and our four models to build
an end-to-end event temporal relation extraction
system with an emphasis on the structured joint
model. In Section 6 we will compare and contrast
them and show why our proposed structured joint
model works the best.

4.1 Baselines

We run two event and relation extraction sys-
tems, CAEVO4 (Chambers et al., 2014) and Cog-
CompTime5 (Ning et al., 2018c), on TB-Dense
and MATRES, respectively. These two methods
both leverage conventional learning algorithms
(i.e., MaxEnt and averaged perceptron, respec-
tively) based on manually designed features to ob-
tain separate models for events and temporal re-
lations, and conduct end-to-end relation extrac-
tion as a pipeline. Note Chambers et al. (2014)
does not report event and end-to-end temporal re-
lation extraction performances, so we calculate the
scores per our implementation.

3We leave further investigation for future work.
4https://www.usna.edu/Users/cs/

nchamber/caevo/
5http://cogcomp.org/page/publication_

view/844

4.2 End-to-End Event Temporal Relation
Extraction

Single-Task Model. The most basic way to
build an end-to-end system is to train separate
event detection and relation prediction models
with gold labels, as we mentioned in our intro-
duction. In other words, the BiLSTM layer is not
shared as in Fig. 2. During evaluation and test
time, we use the outputs from the event detection
model to construct relation candidates and apply
the relation prediction model to make the final pre-
diction.

Multi-Task Model. This is the same as the
single-task model except that the BiLSTM layer
is now shared for both event and relation tasks.
Note that both single-task and multi-task models
are not trained to tackle the NONE relation di-
rectly. They both rely on the predictions of the
event model to annotate relations as either positive
pairs or NONE.

Pipeline Joint Model. This shares the same ar-
chitecture as the multi-task model, except that dur-
ing training, we use the predictions of the event
model to construct relation candidates to train the
relation model. This strategy will generate NONE
pairs during training if one argument of the rela-
tion candidate is not an event. These NONE pairs
will help the relation model to distinguish nega-
tive relations from positive ones, and thus become
more robust to event prediction errors. We train
this model with gold events and relation candi-
dates during the first several epochs in order to ob-
tain a relatively accurate event model and switch
to a pipeline version afterwards inspired by Miwa
and Bansal (2016).

Structured Joint Model. This is described in
detail in Section 3. However, we experience diffi-
culties in training the model with SSVM loss from
scratch. This is due to large amounts of non-event
tokens, and the model is not capable of distin-
guishing them in the beginning. We thus adopt
a two-stage learning procedure where we take the
best pipeline joint model and re-optimize it with
the SSVM loss.

To restrict the search space for events in the ILP
inference of the SSVM loss, we use the predicted
probabilities from the event detection model to
filter out non-events since the event model has
a strong performance, as shown in Section 6.
Note that this is very different from the pipeline

http://cogcomp.org/page/publication_view/844
http://cogcomp.org/page/publication_view/844


439

model where events are first predicted and rela-
tions are constructed with predicted events. Here,
we only leverage an additional hyper-parameter
Tevt to filter out highly unlikely event candidates.
Both event and relation labels are assigned simu-
taneously during the global inference with ILP, as
specified in Section 3.3. We also filter out tokens
with POS tags that do not appear in the training set
as most of the events are either nouns or verbs in
TB-Dense, and all events are verbs in MATRES.

Hyper-Parameters. All single-task, multi-task
and pipeline joint models are trained by minimiz-
ing cross-entropy loss. We observe that model per-
formances vary significantly with dropout ratio,
hidden layer dimensions of the BiLSTM model
and entity weight in the loss function (with re-
lation weight fixed at 1.0). We leverage a pre-
trained BERT model to compute word embed-
ding6 and all MLP scoring functions have one hid-
den layer.7 In the SSVM loss function, we fix the
value of C = 1, but fine-tune CE in the objec-
tive function in Equation 2. Hyper-parameters are
chosen using a standard development set for TB-
Dense and a random holdout-set based on an 80/20
split of training data for MATRES. To solve ILP
in the inference process, we leverage an off-the-
shelf solver provided by Gurobi optimizer; i.e. the
best solutions from the Gurobi optimizer are in-
puts to the global training. The best combination
of hyper-parameters can be found in Table 9 in our
appendix.8

5 Experimental Setup

In this section we first provide a brief overview
of temporal relation data and describe the specific
datasets used in this paper. We also explain the
evaluation metrics at the end.

5.1 Temporal Relation Data
Temporal relation corpora such as TimeBank
(Pustejovsky et al., 2003) and RED (O’Gorman
et al., 2016) facilitate the research in temporal re-
lation extraction. The common issue in these cor-
pora is missing annotations. Collecting densely

6We use a pre-trained BERT-Base model with
768 hidden size, 12 layers, 12 heads implemented
by https://github.com/huggingface/
pytorch-pretrained-BERT

7Let H,K denotes the dimension of (concatenated) vec-
tor from BiLSTM and number of output classes. MLP layer
consists of |H| ⇤ |K|+ |K| ⇤ |K| parameters

8PyTorch code will be made available upon acceptance.

TB-Dense MATRES
# of Documents

Train 22 183
Dev 5 -
Test 9 20

# of Pairs
Train 4032 6332
Dev 629 -
Test 1427 827

Table 1: Data overview. Note that the numbers reported
for MATRES do not include the AQUAINT section.

annotated temporal relation corpora with all events
and relations fully annotated is reported to be a
challenging task as annotators could easily over-
look some facts (Bethard et al., 2007; Cassidy
et al., 2014; Chambers et al., 2014; Ning et al.,
2017), which made both modeling and evaluation
extremely difficult in previous event temporal re-
lation research.

The TB-Dense dataset mitigates this issue by
forcing annotators to examine all pairs of events
within the same or neighboring sentences, and it
has been widely evaluated on this task (Chambers
et al., 2014; Ning et al., 2017; Cheng and Miyao,
2017; Meng and Rumshisky, 2018). Recent data
construction efforts such as MATRES (Ning et al.,
2018a) further enhance the data quality by using a
multi-axis annotation scheme and adopting a start-
point of events to improve inter-annotator agree-
ments. We use TB-Dense and MATRES in our ex-
periments and briefly summarize the data statistics
in Table 1.
5.2 Evaluation Metrics
To be consistent with previous research, we adopt
two different evaluation metrics. The first one is
the standard micro-average scores. For densely
annotated data, the micro-average metric should
share the same precision, recall and F1 scores.
However, since our joint model includes NONE
pairs, we follow the convention of IE tasks and
exclude them from evaluation. The second one
is similar except that we exclude both NONE
and VAGUE pairs following (Ning et al., 2018c).
Please refer to Figure 4 in the appendix for a visu-
alizations of the two metrics.

6 Results and Analysis

The main results of this paper can be found in Ta-
ble 2. All best-recall and F1 scores are achieved
by our structured joint model, and the results out-
perform the baseline systems by 10.0% and 6.8%
on end-to-end relation extraction per F1 scores and

https://github.com/huggingface/pytorch-pretrained-BERT
https://github.com/huggingface/pytorch-pretrained-BERT


440

Corpus Models Event RelationP R F1 P R F1
TB-Dense Structrued Joint Model (Ours) 89.2 92.6 90.9 52.6 46.5 49.4

Chambers et al. (2014) 97.2 79.4 87.4 43.8 35.7 39.4
MATRES Structrued Joint Model (Ours) 87.1 88.5 87.8 59.0 60.2 59.6

Ning et al. (2018c) 83.5 87.0 85.2 48.4 58.0 52.8

Table 2: Event and Relation Extraction Results on TB-Dense and MATRES

Micro-average TB-Dense MATRES
F1 (%) Event Relation (G) Relation (E) Event Relation (G) Relation (E)
Baselines 87.4† 57.0‡ 39.4† 85.2 65.9 52.8
Single-task 88.6 61.9 44.3 86.9 75.3 57.2
Multi-task 89.2 64.5 48.4 86.4 75.5 58.7
Pipeline Joint 90.3 - 48.5 87.2 - 58.5
Structured Joint 90.9 - 49.4 87.8 - 59.6

Table 3: Further ablation studies on event and relation extractions. Relation (G) denotes train and evaluate using
gold events to compose relation candidates, whereas Relation (E) means end-to-end relation extraction. † is the
event extraction and pipeline relation extraction F1 scores for CAEVO (Chambers et al., 2014). 57.0‡ is the
best previously reported micro-average score for temporal relation extraction based on gold events by Meng and
Rumshisky (2018). All MATRES baseline results are provided by Ning et al. (2018c).

3.5% and 2.6% on event extraction per F1 scores.
The best precision score for the TB-Dense dataset
is achieved by CAEVO, which indicates that the
linguistic rule-based system can make highly pre-
cise predictions by being conservative.

Table 3 shows a more detailed analysis, in
which we can see that our single-task models with
BERT embeddings and a BiLSTM encoder al-
ready outperform the baseline systems on end-to-
end relation extraction tasks by 4.9% and 4.4% re-
spectively. In the following sections we discuss
step-by-step improvement by adopting multi-task,
pipeline joint, and structured joint models on end-
to-end relation extraction, event extraction, and re-
lation extraction on gold event pairs.

6.1 End-to-End Relation Extraction

TB-Dense. The improvements over the single-
task model per F1 score are 4.1% and 4.2% for
the multi-task and pipeline joint model respec-
tively. This indicates that the pipeline joint model
is helpful only marginally. Table 4 shows that
the structured joint model improves both preci-
sion and recall scores for BEFORE and AFTER
and achieves the best end-to-end relation extrac-
tion performance at 49.4%—which outperforms
the baseline system by 10.0% and the single-task
model by 5.1%.

MATRES. Compared to the single-task model,
the multi-task model improves F1 scores by 1.5%,
while the pipeline joint model improves F1 scores
by 1.3%—which means that pipeline joint train-
ing does not bring any gains for MATRES. The
structured joint model reaches the best end-to-end
F1 score at 59.6%, which outperforms the base-
line system by 6.8% and the single-task model by
2.4%. We speculate that the gains come from the
joint model’s ability to help deal with NONE pairs,
since recall scores for BEFORE and AFTER in-
crease by 1.5% and 1.1% respectively (Table 10 in
our appendix).

6.2 Event Extraction

TB-Dense. Our structured joint model out-
performs the CAEVO baseline by 3.5% and the
single-task model by 1.3%. Improvements on
event extraction can be difficult because our
single-task model already works quite well with
a close-to 89% F1 score, while the inter-annotator
agreement for events in TimeBank documents is
merely 87% (UzZaman et al., 2013).

MATRES. The structured model outperforms
the the baseline model and the single-task model
by 2.6% and 0.9% respectively. However, we ob-
serve that the multi-task model has a slight drop
in event extraction performance over the single-
task model (86.4% vs. 86.9%). This indicates



441

CAEVO Pipeline Joint Structure Joint
P R F1 P R F1 P R F1

B 41.4 19.5 26.5 59.0 46.9 52.3 59.8 46.9 52.6
A 42.1 17.5 24.7 69.3 45.3 54.8 71.9 46.7 56.6
I 50.0 3.6 6.7 - - - - - -
II 38.5 9.4 15.2 - - - - - -
S 14.3 4.5 6.9 - - - - - -
V 44.9 59.4 51.1 45.1 55.0 49.5 45.9 55.8 50.4

Avg 43.8 35.7 39.4 51.5 45.9 48.5 52.6 46.5 49.4

Table 4: Model performance breakdown for TB-Dense.
“-” indicates no predictions were made for that particu-
lar label, probably due to the small size of the train-
ing sample. BEFORE (B), AFTER (A), INCLUDES (I),
IS INCLUDED (II), SIMULTANEOUS (S), VAGUE (V)

that incorporating relation signals are not partic-
ularly helpful for event extraction on MATRES.
We speculate that one of the reasons could be the
unique event characteristics in MATERS. As we
described in Section 5.1, all events in MATRES
are verbs. It is possible that a more concentrated
single-task model works better when events are
homogeneous, whereas a multi-task model is more
powerful when we have a mixture of event types,
e.g., both verbs and nouns as in TB-Dense.

6.3 Relation Extraction with Gold Events

TB-Dense. There is much prior work on rela-
tion extraction based on gold events in TB-Dense.
Meng and Rumshisky (2018) proposed a neural
model with global information that achieved the
best results as far as we know. The improve-
ment of our single-task model over that baseline
is mostly attributable to the adoption of BERT em-
bedding. We show that sharing the LSTM layer for
both events and relations can help further improve
performance of the relation classification task by
2.6%. For the joint models, since we do not
train them on gold events, the evaluation would
be meaningless. We simply skip this evaluation.

MATRES. Both single-task and multi-task
models outperform the baseline by nearly 10%,
while the improvement of multi-task over single
task is marginal. In MATRES, a relation pair
is equivalent to a verb pair, and thus the event
prediction task probably does not provide much
more information for relation extraction.

In Table 4 we further show the breakdown per-
formances for each positive relation on TB-Dense.
The breakdown on MATRES is shown in Table 10
in the appendix. BEFORE, AFTER and VAGUE
are the three dominant label classes in TB-Dense.
We observe that the linguistic rule-based model,
CAEVO, tends to have a more evenly spread-out

Labels TB-Dense MATRES
BEFORE 384 417
AFTER 274 266
INCLUDES 56 –
IS INCLUDED 53 –
SIMULTANEOUS 22 31
VAGUE 638 113

Table 5: Label Size Breakdown in the Test Data

Figure 3: Performances from a single-task relation
model under different class weights. Left-axis: over-
all model; right-axis: two minority relations.

performance, whereas our neural network-based
models are more likely to have concentrated pre-
dictions due to the imbalance of the training sam-
ple across different label classes.

6.4 Discussion

Label Imbalance. One way to mitigate the label
imbalance issue is to increase the sample weights
for small classes during model training. We in-
vestigate the impact of class weights by refit-
ting our single-task model with larger weights on
INCLUDES, IS INCLUDED and VAGUE in the
cross-entropy loss.

Figure 3 shows that increasing class weights up
to 4 times can significantly improve the F1 scores
of INCLUDES and IS INCLUDED classes with a
decrease less than 2% for the overall F1 score.
Performance of INCLUDES and IS INCLUDED
eventually degrades when class weights are too
large. These results seem to suggest that more
labels are needed in order to improve the perfor-
mance on both of these two classes and the overall
model. For SIMULTANEOUS, our model does not
make any correct predictions for both TB-DENSE
and MATRES by increasing class weight up to 10
times, which implies that SIMULTANEOUS could
be a hard temporal relation to predict in general.

Global Constraints. In Table 6 we conduct
an ablation study to understand the contribu-
tions from the event-relation prediction consis-



442

Micro-average TB-Dense MATRES
No Structure 48.5 58.5
+ ER Consistency 49.4 59.5
+ Transitivity 49.4 59.6

Table 6: Ablation Study on Global Constraints

tency constraint and the temporal relation tran-
sitivity constraint for the structured joint model.
As we can see, the event-relation consistency
helps improve the F1 scores by 0.9% and 1%
for TB-Dense and MATRES, respectively, but the
gain by using transitivity is either non-existing or
marginal. We hypothesize two potential reasons:
1) We leveraged BERT contextualized embedding
as word representation, which could tackle transi-
tivity in the input context; 2) NONE pairs could
make transitivity rule less useful, as positive pairs
can be predicted as NONE and transitivity rule
does not apply to NONE pairs.

Error Analysis. By comparing gold and pre-
dicted labels for events and temporal relations and
examining predicted probabilities for events, we
identified three major sources of mistakes made by
our structured model, as illustrated in Table 7 with
examples.
Type 1. Both events in Ex 1 are assigned low
scores by the event module (<< 0.01). Although
the structured joint model is designed to predict
events and relations jointly, we leverage the event
module to filter out tokens with scores lower than
a threshold. Consequently, some true events can
be mistakenly predicted as non-events, and the re-
lation pairs including them are automatically as-
signed NONE.
Type 2. In Ex 2 the event module assigns high
scores to tokens happened (0.97) and accord-
ing (0.89), but according is not an event. When
the structured model makes inference jointly, the
decision will weigh heavily towards assigning 1
(event) to both tokens. With the event-relation
consistency constraint, this pair is highly likely to
be predicted as having a positive temporal relation.
Nearly all mistakes made in this category follow
the same pattern illustrated by this example.
Type 3. The existence of VAGUE makes tem-
poral relation prediction challenging as it can be
easily confused with other temporal relations, as
shown in Ex 3. This challenge is compounded
with NONE in our end-to-end extraction task.

Type 1 and Type 2 errors suggest that building a
stronger event detection module will be helpful for

Type 1: Event predicted as non-event 189 pairs
Ex 1. What Microsoft gets are developers around the
world working on ideas that could potentially open
up Kinect for Windows ...
Type 2: NONE predicted as true relation 135 pairs
Ex 2. Mr. Netanyahu told Mr. Erdogan that what
happened on board the Mavi Marmara was
“unintentional” ... , according to the statement.
Type 3: VAGUE relation 87 pairs
Ex 3. Microsoft said it has identified 3 companies for
the China program to run through June. The company
gives each participating startup $ 20,000 to create ...

Table 7: Error Types Based on MATRES Test Data

both event and temporal relation extraction tasks.
To improve the performance on VAGUE pairs, we
could either build a stronger model that incorpo-
rates both contextual information and common-
sense knowledge or create datasets with annota-
tions that better separate VAGUE from other posi-
tive temporal relations.

7 Conclusion
In this paper we investigate building an end-to-end
event temporal relation extraction system. We pro-
pose a novel neural structured prediction model
with joint representation learning to make predic-
tions on events and relations simultaneously; this
can avoid error propagation in previous pipeline
systems. Experiments and comparative studies on
two benchmark datasets show that the proposed
model is effective for end-to-end event temporal
relation extraction. Specifically, we improve the
performances of previously published systems by
10% and 6.8% on the TB-Dense and MATRES
datasets, respectively.

Future research can focus on creating more ro-
bust structured constraints between events and re-
lations, especially considering event types, to im-
prove the quality of global assignments using ILP.
Since a better event model is generally helpful
for relation extraction, another promising direc-
tion would be to incorporate multiple datasets to
enhance the performance of our event extraction
systems.

Acknowledgements
This work is supported in part by Contracts
W911NF-15-1-0543 and HR0011-18-2-0052 with
the US Defense Advanced Research Projects
Agency (DARPA). Approved for Public Release,
Distribution Unlimited. The views expressed are
those of the authors and do not reflect the official
policy or position of the Department of Defense or
the U.S. Government.



443

References
Steven Bethard. 2013. Cleartk-TimeML: A minimalist

approach to TempEval 2013. In Second Joint Con-
ference on Lexical and Computational Semantics
(*SEM), Volume 2: Proceedings of the Seventh In-
ternational Workshop on Semantic Evaluation (Se-
mEval 2013), pages 10–14. Association for Compu-
tational Linguistics.

Steven Bethard, James H. Martin, and Sara Klingen-
stein. 2007. Timelines from text: Identification of
syntactic temporal relations. In Proceedings of the
International Conference on Semantic Computing,
ICSC ’07, pages 11–18, Washington, DC, USA.
IEEE Computer Society.

Philip Bramsen, Pawan Deshpande, Yoong Keok Lee,
and Regina Barzilay. 2006. Inducing temporal
graphs. In EMNLP, Sydney, Australia.

Taylor Cassidy, Bill McDowell, Nathanael Chambers,
and Steven Bethard. 2014. An annotation frame-
work for dense event ordering. In Proceedings of the
52nd Annual Meeting of the Association for Compu-
tational Linguistics (Volume 2: Short Papers), pages
501–506. Association for Computational Linguis-
tics.

Nate Chambers. 2013. Navytime: Event and time or-
dering from raw text. In Second Joint Conference
on Lexical and Computational Semantics (*SEM),
Volume 2: Proceedings of the Seventh International
Workshop on Semantic Evaluation (SemEval 2013),
pages 73–77, Atlanta, Georgia, USA. Association
for Computational Linguistics.

Nathanael Chambers, Taylor Cassidy, Bill McDowell,
and Steven Bethard. 2014. Dense event ordering
with a multi-pass architecture. In ACL.

Nathanael Chambers and Dan Jurafsky. 2008. Jointly
combining implicit constraints improves temporal
ordering. In EMNLP, Honolulu, United States.

Nathanael Chambers, Shan Wang, and Dan Juraf-
sky. 2007. Classifying temporal relations between
events. In Proceedings of the 45th Annual Meeting
of the ACL on Interactive Poster and Demonstra-
tion Sessions, ACL ’07, pages 173–176, Strouds-
burg, PA, USA. Association for Computational Lin-
guistics.

Fei Cheng and Yusuke Miyao. 2017. Classifying tem-
poral relations by bidirectional LSTM over depen-
dency paths. In Proceedings of the 55th Annual
Meeting of the Association for Computational Lin-
guistics (Volume 2: Short Papers), volume 2, pages
1–6.

Pascal Denis and Philippe Muller. 2011. Predicting
globally-coherent temporal structures from texts via
endpoint inference and graph decomposition. In IJ-
CAI, Barcelone, Spain.

Jacob Devlin, Ming-Wei Chang, Kenton Lee, and
Kristina Toutanova. 2018. Bert: Pre-training of deep
bidirectional transformers for language understand-
ing. In NAACL-HLT.

Quang Xuan Do, Wei Lu, and Dan Roth. 2012.
Joint inference for event timeline construction. In
EMNLP, Jeju, Korea.

Xiaocheng Feng, Lifu Huang, Duyu Tang, Heng Ji,
Bing Qin, and Ting Liu. 2016. A language-
independent neural network for event detection.
pages 66–71.

Natsuda Laokulrat, Makoto Miwa, Yoshimasa Tsu-
ruoka, and Takashi Chikayama. 2013. UTTime:
Temporal relation classification using deep syntactic
features. In Second Joint Conference on Lexical and
Computational Semantics (*SEM), Volume 2: Pro-
ceedings of the Seventh International Workshop on
Semantic Evaluation (SemEval 2013), pages 88–92,
Atlanta, Georgia, USA. Association for Computa-
tional Linguistics.

Artuur Leeuwenberg and Marie-Francine Moens.
2017. Structured learning for temporal relation ex-
traction from clinical records. In Proceedings of the
15th Conference of the European Chapter of the As-
sociation for Computational Linguistics: Volume 1,
Long Papers, volume 1, pages 1150–1158.

Qi Li and Heng Ji. 2014. Incremental joint extrac-
tion of entity mentions and relations. In Proceed-
ings of the 52nd Annual Meeting of the Association
for Computational Linguistics (Volume 1: Long Pa-
pers), pages 402–412, Baltimore, Maryland. Asso-
ciation for Computational Linguistics.

Inderjeet Mani, Marc Verhagen, Ben Wellner,
Chong Min Lee, and James Pustejovsky. 2006. Ma-
chine learning of temporal relations. In Proceedings
of the 21st International Conference on Compu-
tational Linguistics and the 44th Annual Meeting
of the Association for Computational Linguistics,
ACL-44, pages 753–760, Stroudsburg, PA, USA.
Association for Computational Linguistics.

Yuanliang Meng and Anna Rumshisky. 2018. Context-
Aware neural model for temporal information ex-
traction. In Proceedings of the 56th Annual Meet-
ing of the Association for Computational Linguistics
(Volume 1: Long Papers).

Yuanliang Meng, Anna Rumshisky, and Alexey Ro-
manov. 2017. Temporal information extraction for
question answering using syntactic dependencies in
an lstm-based architecture. In Proceedings of the
2017 Conference on Empirical Methods in Natural
Language Processing, pages 887–896.

Makoto Miwa and Mohit Bansal. 2016. End-to-end re-
lation extraction using LSTMs on sequences and tree
structures. In Proceedings of the 54th Annual Meet-
ing of the Association for Computational Linguistics
(Volume 1: Long Papers), pages 1105–1116, Berlin,

http://aclweb.org/anthology/S13-2002
http://aclweb.org/anthology/S13-2002
https://doi.org/10.1109/ICSC.2007.101
https://doi.org/10.1109/ICSC.2007.101
https://dl.acm.org/citation.cfm?id=1610105
https://dl.acm.org/citation.cfm?id=1610105
https://doi.org/10.3115/v1/P14-2082
https://doi.org/10.3115/v1/P14-2082
http://www.aclweb.org/anthology/S13-2012
http://www.aclweb.org/anthology/S13-2012
http://www.aclweb.org/anthology/Q14-1022
http://www.aclweb.org/anthology/Q14-1022
https://dl.acm.org/citation.cfm?id=1613803
https://dl.acm.org/citation.cfm?id=1613803
https://dl.acm.org/citation.cfm?id=1613803
http://dl.acm.org/citation.cfm?id=1557769.1557820
http://dl.acm.org/citation.cfm?id=1557769.1557820
https://hal.inria.fr/inria-00614765/document
https://hal.inria.fr/inria-00614765/document
https://hal.inria.fr/inria-00614765/document
http://cogcomp.org/papers/DoLuRo12.pdf
https://doi.org/10.18653/v1/P16-2011
https://doi.org/10.18653/v1/P16-2011
http://www.aclweb.org/anthology/S13-2015
http://www.aclweb.org/anthology/S13-2015
http://www.aclweb.org/anthology/S13-2015
https://doi.org/10.3115/v1/P14-1038
https://doi.org/10.3115/v1/P14-1038
https://doi.org/10.3115/1220175.1220270
https://doi.org/10.3115/1220175.1220270
https://doi.org/10.18653/v1/P16-1105
https://doi.org/10.18653/v1/P16-1105
https://doi.org/10.18653/v1/P16-1105


444

Germany. Association for Computational Linguis-
tics.

Makoto Miwa and Yutaka Sasaki. 2014. Modeling
joint entity and relation extraction with table repre-
sentation. In Proceedings of the 2014 Conference on
Empirical Methods in Natural Language Processing
(EMNLP), pages 1858–1869, Doha, Qatar. Associa-
tion for Computational Linguistics.

Thien Huu Nguyen, Kyunghyun Cho, and Ralph Gr-
ishman. 2016. Joint event extraction via recurrent
neural networks. In Proceedings of the 2016 Con-
ference of the North American Chapter of the As-
sociation for Computational Linguistics: Human
Language Technologies, pages 300–309, San Diego,
California. Association for Computational Linguis-
tics.

Thien Huu Nguyen and Ralph Grishman. 2015. Event
detection and domain adaptation with convolutional
neural networks. In ACL.

Qiang Ning, Zhili Feng, and Dan Roth. 2017. A struc-
tured learning approach to temporal relation extrac-
tion. In EMNLP.

Qiang Ning, Zhili Feng, Hao Wu, and Dan Roth.
2018a. Joint reasoning for temporal and causal rela-
tions. In ACL.

Qiang Ning, Hao Wu, and Dan Roth. 2018b. A Multi-
Axis annotation scheme for event temporal relations.
In ACL.

Qiang Ning, Ben Zhou, Zhili Feng, Haoruo Peng, and
Dan Roth. 2018c. CogCompTime: A tool for under-
standing time in natural language. In EMNLP.

Tim O’Gorman, Kristin Wright-Bettner, and Martha
Palmer. 2016. Richer Event Description: Integrating
event coreference with temporal, causal and bridg-
ing annotation. In Proceedings of 2nd Workshop on
Computing News Storylines, pages 47–56. Associa-
tion for Computational Linguistics.

James Pustejovsky, Patrick Hanks, Roser Sauri, An-
drew See, Robert Gaizauskas, Andrea Setzer,
Dragomir Radev, Beth Sundheim, David Day, and
Lisa Ferro. 2003. The TIMEBANK corpus. In Cor-
pus linguistics, pages 647–656.

Julien Tourille, Olivier Ferret, Aurelie Neveol, and
Xavier Tannier. 2017. Neural architecture for tem-
poral relation extraction: a bi-lstm approach for de-
tecting narrative containers. In Proceedings of the
55th Annual Meeting of the Association for Compu-
tational Linguistics (Volume 2: Short Papers), vol-
ume 2, pages 224–230.

Naushad UzZaman, Hector Llorens, Leon Derczyn-
ski, James Allen, Marc Verhagen, and James Puste-
jovsky. 2013. SemEval-2013 task 1: Tempeval-3:
Evaluating time expressions, events, and temporal
relations. In Second Joint Conference on Lexical
and Computational Semantics (*SEM), Volume 2:

Proceedings of the Seventh International Workshop
on Semantic Evaluation (SemEval 2013), pages 1–9.
Association for Computational Linguistics.

Marc Verhagen, Robert Gaizauskas, Frank Schilder,
Mark Hepple, Graham Katz, and James Pustejovsky.
2007. SemEval-2007 task 15: TempEval temporal
relation identification. In Proceedings of the 4th In-
ternational Workshop on Semantic Evaluations, Se-
mEval ’07, pages 75–80, Stroudsburg, PA, USA. As-
sociation for Computational Linguistics.

Marc Verhagen and James Pustejovsky. 2008. Tem-
poral processing with the TARSQI toolkit. In
22Nd International Conference on on Computa-
tional Linguistics: Demonstration Papers, COLING
’08, pages 189–192, Stroudsburg, PA, USA. Associ-
ation for Computational Linguistics.

Marc Verhagen, Roser Saurı́, Tommaso Caselli, and
James Pustejovsky. 2010. SemEval-2010 task 13:
Tempeval-2. In Proceedings of the 5th International
Workshop on Semantic Evaluation, SemEval ’10,
pages 57–62, Stroudsburg, PA, USA. Association
for Computational Linguistics.

Katsumasa Yoshikawa, Sebastian Riedel, Masayuki
Asahara, and Yuji Matsumoto. 2009. Jointly identi-
fying temporal relations with Markov logic. In Pro-
ceedings of the Joint Conference of the 47th Annual
Meeting of the ACL and the 4th International Joint
Conference on Natural Language Processing of the
AFNLP: Volume 1-Volume 1, pages 405–413. Asso-
ciation for Computational Linguistics.

Meishan Zhang, Yue Zhang, and Guohong Fu. 2017.
End-to-end neural relation extraction with global op-
timization. In Proceedings of the 2017 Conference
on Empirical Methods in Natural Language Pro-
cessing, pages 1730–1740, Copenhagen, Denmark.
Association for Computational Linguistics.

https://doi.org/10.3115/v1/D14-1200
https://doi.org/10.3115/v1/D14-1200
https://doi.org/10.3115/v1/D14-1200
https://doi.org/10.18653/v1/N16-1034
https://doi.org/10.18653/v1/N16-1034
http://cogcomp.org/papers/NingFeRo17.pdf
http://cogcomp.org/papers/NingFeRo17.pdf
http://cogcomp.org/papers/NingFeRo17.pdf
http://aclweb.org/anthology/P18-1212
http://aclweb.org/anthology/P18-1212
http://cogcomp.org/papers/NingWuRo18.pdf
http://cogcomp.org/papers/NingWuRo18.pdf
http://www.aclweb.org/anthology/W16-5706
http://www.aclweb.org/anthology/W16-5706
http://www.aclweb.org/anthology/W16-5706
http://aclweb.org/anthology/S13-2001
http://aclweb.org/anthology/S13-2001
http://aclweb.org/anthology/S13-2001
http://dl.acm.org/citation.cfm?id=1621474.1621488
http://dl.acm.org/citation.cfm?id=1621474.1621488
http://dl.acm.org/citation.cfm?id=1599288.1599300
http://dl.acm.org/citation.cfm?id=1599288.1599300
http://dl.acm.org/citation.cfm?id=1859664.1859674
http://dl.acm.org/citation.cfm?id=1859664.1859674
https://doi.org/10.18653/v1/D17-1182
https://doi.org/10.18653/v1/D17-1182

