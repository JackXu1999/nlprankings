



















































Topic Memory Networks for Short Text Classification


Proceedings of the 2018 Conference on Empirical Methods in Natural Language Processing, pages 3120‚Äì3131
Brussels, Belgium, October 31 - November 4, 2018. c¬©2018 Association for Computational Linguistics

3120

Topic Memory Networks for Short Text Classification

Jichuan Zeng1‚àó, Jing Li2‚Ä†, Yan Song2, Cuiyun Gao1, Michael R. Lyu1, Irwin King1
1 Department of Computer Science and Engineering

The Chinese University of Hong Kong, HKSAR, China
2 Tencent AI Lab, Shenzhen, China

1 {jczeng,cygao,lyu,king}@cse.cuhk.edu.hk
2 {ameliajli,clksong}@tencent.com

Abstract

Many classification models work poorly on
short texts due to data sparsity. To address
this issue, we propose topic memory networks
for short text classification with a novel topic
memory mechanism to encode latent topic rep-
resentations indicative of class labels. Dif-
ferent from most prior work that focuses on
extending features with external knowledge
or pre-trained topics, our model jointly ex-
plores topic inference and text classification
with memory networks in an end-to-end man-
ner. Experimental results on four benchmark
datasets show that our model outperforms
state-of-the-art models on short text classifica-
tion, meanwhile generates coherent topics.

1 Introduction

Short texts have become an important form for
individuals to voice opinions and share informa-
tion on online platforms. A large body of daily-
generated contents, such as tweets, web search
snippets, news feeds, and forum messages, have
far outpaced the reading and understanding capac-
ity of individuals. As a consequence, there is a
pressing need for automatic language understand-
ing techniques for processing and analyzing such
texts (Zhang et al., 2018). Among those tech-
niques, text classification is a critical and funda-
mental one proven to be useful in various down-
stream applications, such as text summarization
(Hu et al., 2015), recommendation (Zhang et al.,
2012), and sentiment analysis (Chen et al., 2017).

Although many classification models like sup-
port vector machines (SVMs) (Wang and Man-
ning, 2012) and neural networks (Kim, 2014; Xiao
and Cho, 2016; Joulin et al., 2017) have demon-
strated their success in processing formal and
well-edited texts, such as news articles (Zhang

‚àó This work was mainly conducted when Jichuan Zeng
was an intern in Tencent AI Lab.

‚Ä† Jing Li is the corresponding author.

Training instances
R1: [SuperBowl] I‚Äôll do anything to see the Steelers win.
R2: [New.Music.Live] Please give wristbands, she have
major Bieber Fever.
Test instance
S: [New.Music.Live] I will do anything for wristbands,
gonna tweet till I win.

Table 1: Tweet examples for classification. Ri denotes
the i-th training instance; S denotes a test instance.
[class] is the ground-truth label. Bold words are in-
dicative of an instance‚Äôs class label.

et al., 2015b), their performance is inevitably com-
promised when directly applied to short and infor-
mal online texts. This inferior performance is at-
tributed to the severe data sparsity nature of short
texts, which results in the limited features avail-
able for classifiers (Phan et al., 2008). To alle-
viate the data sparsity problem, some approaches
exploit knowledge from external resources like
Wikipedia (Jin et al., 2011) and knowledge bases
(Lucia and Ferrari, 2014; Wang et al., 2017a).
These approaches, however, rely on a large vol-
ume of high-quality external data, which may be
unavailable to some specific domains or languages
(Li et al., 2016a).

To illustrate the difficulties in classifying short
texts, we take the tweet classification in Table 1 as
an example. In the test instance S, only given the
11 words it contains, it is difficult to understand
why its label is New.Music.Live. Without richer
context, classifiers are likely to classify S into the
same category as the training instance R1, which
happens to share many words with S, in spite of
the different categories they belong to,1 rather than
R2, which only shares the word ‚Äúwristbands‚Äù with
S. Under this circumstance, how might we en-
rich the context of these short texts? If looking
at R2, we can observe that the semantic mean-
ing of ‚Äúwristbands‚Äù can be extended from its co-

1R1 is about SuperBowl, the annual championship game
of the National Football League. R2 and S are both about
New.Music.Live, the flagship live music show.



3121

occurrence with ‚ÄúBieber‚Äù, which is highly indica-
tive of New.Music.Live.2 Such relation can further
help in recognizing the word ‚Äúwristbands‚Äù to be
important when classifying the test instance S.

Motivated by the above-mentioned observa-
tions, we present a novel neural framework, named
as topic memory networks (TMN), for short
text classification that does not rely on external
knowledge. Our model can identify the indica-
tive words for classification, e.g., ‚Äúwristbands‚Äù
in S, via jointly exploiting the document-level
word co-occurrence patterns, e.g., ‚Äúwristbands‚Äù
and ‚ÄúBieber‚Äù in R2. To be more specific, built
upon the success of neural topic models (Srivas-
tava and Sutton, 2017; Miao et al., 2017), our
model is capable of discovering latent topics3,
which can capture the co-occurrence of words in
document level. To employ the latent topics for
short text classification, we propose a novel topic
memory mechanism, which is inspired by mem-
ory networks (Weston et al., 2014; Graves et al.,
2014), that allows the model to put attention upon
the indicative latent topics useful to classifica-
tion. With such corpus-level latent topic represen-
tations, each short text instance is enriched, which
thus helps alleviate the data sparsity issues.

In prior research, though the effects of topic
models for short text classification have been ex-
plored (Phan et al., 2008; Ren et al., 2016), exist-
ing methods tend to use pre-trained topics as fea-
tures. To the best of our knowledge, our model
is the first to encode latent topic representations
via memory networks for short text classification,
which allows joint inference of latent topics.

To evaluate our model, we experiment and com-
pare it with existing methods on four benchmark
datasets. Experimental results indicate that our
model outperforms state-of-the-art counterparts
on short text classification. The quantitative and
qualitative analysis illustrate the capability of our
model in generating topic representations that are
meaningful and indicative of different categories.

2 Topic Memory Networks

In this section, we describe our topic memory net-
works (TMN), whose overall architecture is shown

2Justine Bieber was on New.Music.Live in 2011. There
was a business activity for this event that gave free wristbands
to fans if they supported Bieber on Twitter.

3 Latent topics are the distributional clusters of words that
frequently co-occur in some of the instances instead of widely
appearing throughout the corpus (Blei et al., 2003).

Softmax

log

Embedding

Classifier

Em
bedding

Neural¬†Topic¬†Model Topic¬†Memory¬†Mechanism Classifier

N
TM

Encoder
Decoder

,

	

Œ£ 	y

Figure 1: The overall framework of our topic mem-
ory networks. The dotted boxes from left to right show
the neural topic model, the topic memory mechanism,
and the classifier. Here the classifier allows multiple
options and the details are left out.

in Figure 1. There are three major components:
(1) a neural topic model (NTM) to induce la-
tent topics (described in Section 2.1), (2) a topic
memory mechanism that maps the inferred latent
topics to classification features (described in Sec-
tion 2.2), and (3) a text classifier, which produces
the final classification labels for instances. These
three components can be updated simultaneously
via a joint learning process, which is introduced
in Section 2.3. In particular, for the classifier, our
TMN framework allows the combination of mul-
tiple options, e.g., CNN and RNN, which can be
determined by the specific application scenario.

Formally, given X = {x1,x2, . . . ,xM} as the
input with M short text instances, each instance
x is processed into two representations: bag-of-
words (BoW) term vector xBoW ‚àà RV and word
index sequence vector xSeq ‚àà RL, where V is
the vocabulary size and L is the sequence length.
xBoW is fed into the neural topic model to induce
latent topics. Such topics are further matched with
the embedded xSeq to learn classification features
in the topic memory mechanism. Then, the classi-
fier concatenates the representations produced by
the topic memory mechanism and the embedded
xSeq to predict the classification label y for x.

2.1 Neural Topic Model

Our topic model is inspired by neural topic model
(NTM) (Miao et al., 2017; Srivastava and Sut-
ton, 2017) that induces latent topics in neural net-
works. NTM is based on variational auto-encoder
(VAE) (Kingma and Welling, 2013), involved with
a continuous latent variable z as an intermediate
representation. Here in NTM, the latent variable



3122

Œ£ Œ£

ClassifierùíôùëÜùëíùëû

ùúÉ

ùëæùúô

Hop 1 Hop 2 Hop 3
+ + +

y

Figure 2: Topic memory network with three hops.

z ‚àà RK , where K denotes the number of topics.
In the following, we describe the generation and
the inference of the model in turn.

NTM Generation. Similar to LDA-style topic
models, we assume x having a topic mixture
Œ∏ represented as a K-dimensional distribution,
which is generated via Gaussian softmax construc-
tion (Miao et al., 2017). Each topic k is repre-
sented by a word distribution œÜk over the vocabu-
lary. Specifically, the generation story for x is:
‚Ä¢ Draw latent variable z ‚àº N (¬µ,œÉ2)
‚Ä¢ Œ∏ = softmax(fŒ∏(z))
‚Ä¢ For the n-th word in x:

‚Äì Draw word wn ‚àº softmax(fœÜ(Œ∏))
where f‚àó(¬∑) is a neural perceptron that linearly
transforms inputs, activated by a non-linear trans-
formation. Here we use rectified linear units (Re-
LUs) (Nair and Hinton, 2010) as activate func-
tions. The prior parameters of z, ¬µ and œÉ, are
estimated from the input data and defined as:

¬µ = f¬µ(fe(xBoW )), logœÉ = fœÉ(fe(xBoW ))
(1)

Note that NTM is based on VAE, where an en-
coder estimates the prior parameters and a decoder
describes the generation story. Compared with the
basic VAE, NTM includes the additional distribu-
tional vectors Œ∏ and œÜ, which can yield latent topic
representations and thus ensuring their better inter-
pretability in learning process (Miao et al., 2017).

NTM Inference. In NTM, we use variational in-
ference (Blei et al., 2016) to approximate a poste-
rior distribution over z given all the instances. The
loss function of NTM is defined as

LNTM = DKL(q(z) || p(z |x))‚àí Eq(z)[p(x | z)]
(2)

the negative of variational lower bound, where
q(z) is a standard Normal prior N (0, I). p(z |x)
and p(x | z) are probabilities to describe encoding
and decoding processes, respectively.4 Due to the

4In implementation, to smooth the gradients, we apply
reparameterization on z following previous work (Kingma
and Welling, 2013; Rezende et al., 2014).

space limitation, we leave out the derivation de-
tails and refer the readers to Miao et al. (2017).

2.2 Topic Memory Mechanism

We exploit a topic memory mechanism to map
the latent topics produced by NTM (described in
Section 2.1) to the features for classification. In-
spired by memory networks (Weston et al., 2014;
Sukhbaatar et al., 2015), we design two memory
matrices, a source memory S and a target mem-
ory T , both of which are in K√óE size (K for the
number of topics and E for the pre-defined size
of word embeddings). S and T are produced by
two ReLU-actived neural perceptrons, both taking
the topic-word weight matrixW œÜ ‚àà RK√óV as in-
puts. Recall that in NTM, we use fœÜ(¬∑) to compute
the word distributions given Œ∏. W œÜ is the kernel
weight matrix of fœÜ(¬∑), whereW œÜk,v represents the
importance of the v-th word in reflecting the k-th
topic. Assuming U as the embedded xSeq (word
sequence form of x), in source memory, we com-
pute the match between the k-th topic and the em-
bedding of the l-th word in xSeq by

P k,l = sigmoid(W
s[Sk;U l] + b

s) (3)

where [x;y] denotes the merge of x and y, and
we use concatenation operation here (Dou, 2017;
Chen et al., 2017). Ws and bs are parameters to
be learned. To further combine the instance-topic
mixture Œ∏ with P , we define the integrated mem-
ory weights as

Œæk = Œ∏k + Œ≥
‚àë
l

P k,l (4)

where Œ≥ is the pre-defined coefficient. Then, in
target memory, via weighting target memory ma-
trix T with Œæ, we obtain the output representation
R of the topic memory mechanism:

Rk = ŒækT k (5)

The concatenation of R and U (embedded xSeq)
further serves as the features for classification.

In particular, similar to the memory networks in
prior research (Sukhbaatar et al., 2015; Chen et al.,
2017), our model can be extended to handle mul-
tiple computation layers (hops). As shown in Fig-
ure 2, each hop contains a source matrix and a tar-
get matrix, and different hops are stacked follow-
ing the way presented in Sukhbaatar et al. (2015).



3123

Dataset # of # of Avg len Vocab sizelabels docs per doc
Snippets 8 12,332 17 7,334
TagMyNews 7 32,567 8 9,433
Twitter 50 15,056 5 6,962
Weibo 50 21,944 6 10,121

Table 2: Statistics of the experimental datasets. Labels
refers to class labels. Avg len per doc refers to the av-
erage count of words in each document instance.

2.3 Joint Learning

The entire TMN model integrates the three mod-
ules in Figure 1, i.e., the neural topic model,
the topic memory mechanism, and the classi-
fier, which can be updated simultaneously in one
framework. In doing so, we jointly tackle topic
modeling and classification, and define the loss
function of the overall framework to combine the
two effects as following:

L = LNTM + ŒªLCLS (6)

where LNTM represents the loss of NTM and
LCLS is the cross entropy reflecting classification
loss. Œª is the trade-off parameter controlling the
balance between topic model and classification.

3 Experiment Setup

3.1 Datasets

We conduct experiments on four short text
datasets, namely, Snippets, TagMyNews, Twitter,
and Weibo. Their details are described as follows.

Snippets. This dataset contains Google search
snippets released by Phan et al. (2008). There are
eight ground-truth labels, e.g., health and sport.

TagMyNews. We use the news titles as in-
stances from the benchmark classification dataset
released by Vitale et al. (2012).5 This dataset con-
tains English news from really simple syndication
(RSS) feeds. Each news feed (with its title) is an-
notated with one from seven labels, e.g., sci-tech.

Twitter. This dataset is used to evaluate tweet
topic classification, which is built on the dataset
released by TREC2011 microblog track.6 Follow-
ing previous settings (Yan et al., 2013; Li et al.,
2016a), hashtags, i.e., user-annotated topic la-
bels in each tweet such as ‚Äú#Trump‚Äù and ‚Äú#Su-
perBowl‚Äù, serve as our ground-truth class labels.

5http://acube.di.unipi.it/tmn-dataset/
6http://trec.nist.gov/data/tweets

Specifically, we construct the dataset with the fol-
lowing steps. First, we remove the tweets without
hashtags. Second, we rank hashtags by their fre-
quencies. Third, we manually remove the hashtags
that cannot mark topics, such as ‚Äú#fb‚Äù for indicat-
ing the source of tweets from Facebook, and com-
bine the hashtags referring to the same topic, such
as ‚Äú#DonaldTrump‚Äù and ‚Äú#Trump‚Äù. Finally, we
select the top 50 frequent hashtags, and all tweets
containing these hashtags.

Weibo. To evaluate our model on a different lan-
guage other than English, we employ a Chinese
dataset with short segments of text for topic clas-
sification. This dataset is released by Li et al.
(2016b) with a collection of messages posted in
June 2014 on Weibo, a popular Twitter alike plat-
form in China.7 Similar to Twitter, Weibo allows
up to 140 Chinese characters in its messages. In
this Weibo dataset, each Weibo message is labeled
with a hashtag as its category, and there are 50
distinct hashtag labels in total, following the same
procedure performed for the Twitter dataset.

Table 2 shows the statistic information of the
four datasets. Each dataset is randomly split
into 80% for training and 20% for test. 20% of
randomly selected training instances are used to
form development set. We preprocess our English
datasets, i.e., Snippets, TagMyNews, and Twit-
ter, with gensim tokenizer8 for tokenization. As
to the Chinese Weibo dataset, we use FudanNLP
toolkit (Qiu et al., 2013)9 for word segmentation.
In addition, for each dataset, we maintain a vocab-
ulary built based on the training set with removal
of stop words10 and words occurring less than 3
times. The inputs of topic models xBoW are con-
structed based on this vocabulary following com-
mon topic model settings (Blei et al., 2003; Miao
et al., 2016). Differently, we use the raw word se-
quence (without words removal) for the inputs of
classification xSeq as is done in previous work of
text classification (Kim, 2014; Liu et al., 2017).

3.2 Model Settings

We use pre-trained embeddings to initialize all
word embeddings. For Snippets and TagMyNews

7The original dataset contains conversations to enrich the
context of Weibo posts, which are not considered here.

8https://radimrehurek.com/gensim/
utils.html

9https://github.com/FudanNLP/fnlp
10https://radimrehurek.com/gensim/

parsing/preprocessing.html

http://acube.di.unipi.it/tmn-dataset/
http://trec.nist.gov/data/tweets
https://radimrehurek.com/gensim/utils.html
https://radimrehurek.com/gensim/utils.html
https://github.com/FudanNLP/fnlp
https://radimrehurek.com/gensim/parsing/preprocessing.html
https://radimrehurek.com/gensim/parsing/preprocessing.html


3124

Models Snippets TagMyNews Twitter WeiboAcc Avg F1 Acc Avg F1 Acc Avg F1 Acc Avg F1
Comparison models
Majority Vote 0.202 0.068 0.247 0.098 0.073 0.010 0.102 0.019
SVM+BOW (Wang and Manning, 2012) 0.210 0.080 0.259 0.058 0.070 0.009 0.116 0.039
SVM+LDA (Blei et al., 2003) 0.689 0.694 0.616 0.593 0.159 0.111 0.192 0.147
SVM+BTM (Yan et al., 2013) 0.772 0.772 0.686 0.677 0.232 0.164 0.331 0.277
SVM+NTM (Miao et al., 2017) 0.779 0.776 0.664 0.654 0.261 0.177 0.379 0.348
AttBiLSTM (Zhang and Wang, 2015) 0.943 0.943 0.838 0.828 0.375 0.348 0.547 0.547
CNN (Kim, 2014) 0.944 0.944 0.843 0.843 0.381 0.362 0.553 0.550
CNN+TEWE (Ren et al., 2016) 0.944 0.944 0.846 0.846 0.385 0.368 0.537 0.532
CNN+NTM 0.945 0.945 0.844 0.844 0.382 0.365 0.556 0.556
Our models
TMN (Separate TM Inference) 0.961 0.961 0.848 0.847 0.394 0.386 0.568 0.569
TMN (Joint TM Inference) 0.964 0.964 0.851 0.851 0.397 0.375 0.591 0.589

Table 3: Comparisons of accuracy (Acc) and average F1 (Avg F1) on four benchmark datasets. Our TMN, either
with separate or joint TM inference, performs significantly better than all the comparisons (p < 0.05, paired t-test).

datasets, we use pre-trained GloVe embed-
dings (Pennington et al., 2014)11. For Twitter and
Weibo datasets, we pre-train embeddings on large-
scale external data with 99M tweets and 467M
Weibo messages, respectively. For the number
of topics, we follow previous settings (Yan et al.,
2013; Das et al., 2015; Dieng et al., 2016) to
set K = 50. For all the other hyperparame-
ters, we tune them on the development set by grid
search. For our classifier, we employ CNN in
experiment because of its better performance in
short text classification than its counterparts such
as RNN (Wang et al., 2017a). The hidden size of
CNN is set as 500. The dimension of word em-
bedding E = 200. Œ≥ = 0.8 for trading off Œ∏ and
P , and Œª = 1.0 for controlling the effects of topic
model and classification. In the learning process,
we run our model for 800 epochs with early-stop
strategy applied (Caruana et al., 2000).

3.3 Comparison Models

For comparison, we consider a weak baseline of
majority vote, which assigns the major class labels
in training set to all test instances. We further com-
pare with the widely-used baseline SVM+BOW,
SVM with unigram features (Wang and Man-
ning, 2012). We also consider other SVM-based
baselines: SVM+LDA, SVM+BTM, SVM+NTM,
whose features are topic distributions for instances
learned by LDA (Blei et al., 2003), BTM (Yan
et al., 2013), and NTM (Miao et al., 2017), respec-
tively. In particular, BTM is one of the state-of-
the-art topic models for short texts. To compare
with neural classifiers, we test bidirectional long

11http://nlp.stanford.edu/data/glove.
6B.zip (200d)

short-term memory with attention (AttBiLSTM)
(Zhang et al., 2015a) and convolutional neural net-
work (CNN) classifiers (Kim, 2014). No topic
representation is encoded in these two classifiers.
We also compare with the state-of-the-art short-
text classifier CNN+TEWE (Ren et al., 2016), i.e.,
CNN classifier with topic-enriched word embed-
dings (TEWE), where the word embeddings are
enriched by pre-trained NTM-inferred topic mod-
els. Moreover, to investigate the effectiveness of
our proposed topic memory mechanism, we com-
pare with CNN+NTM, which concatenates the
representations learned by CNN and topics in-
duced by NTM as classification features. In ad-
dition, we compare with our variant, TMN (Sepa-
rate TM Inference), where topics are induced sep-
arately before classification, and only used for ini-
tializing the topic memory. To be consistent, our
model with a joint learning process for topic mod-
eling and classification, described in Section 2.3,
is named as TMN (Joint TM Inference). Note
that the comparison CNN-based models share the
same settings as our model, and the hidden size for
each direction of BiLSTM is set to 100.

4 Experimental Results

4.1 Classification Comparison

Table 3 shows the comparison on classification re-
sults, where the accuracy and average F1 scores on
different classes labels are reported. We have the
following observations.

‚Ä¢ Topic representations are indicative features.
On all four datasets, simply by combining topic
representations into features, SVM models pro-
duce better results than the models without ex-

http://nlp.stanford.edu/data/glove.6B.zip
http://nlp.stanford.edu/data/glove.6B.zip


3125

Model Snippets TagMyNews Twitter
LDA 0.436 0.449 0.436
BTM 0.435 0.463 0.435
NTM 0.463 0.468 0.463
TMN 0.487 0.499 0.468

Table 4: CV coherence scores for topics generated by
various models. Higher is better. The best result in
each column is in bold.

ploiting topic features (i.e., SVM+BOW). This ob-
servation indicates that latent topic representations
captured at corpus level are helpful to alleviate the
data sparsity problem in short text classification.

‚Ä¢Neural network models are effective. It is seen
that neural models based on either CNN or At-
tBiLSTM yield better results than SVM. This ob-
servation shows the effectiveness of representation
learning in neural networks for short texts.

‚Ä¢ CNN serves as a better classifier for short texts
than AttBiLSTM. In comparison of CNN and
AttBiLSTM without taking topic features, we ob-
serve that CNN yields generally better results on
all the four datasets. This is consistent with the
discovery in Wang et al. (2017a), where CNN can
better encode short texts than sequential models.

‚Ä¢ Topic memory is useful to classification. By
exploring topic representations in memory mech-
anisms, our TMN model, inferring topic mod-
els either separately or jointly with classifica-
tion, significantly outperform the best compari-
son models on each of the four datasets. Par-
ticularly, when compared with CNN+TEWE and
CNN+NTM, both concatenating topics as part of
the features, the results yielded by TMN are bet-
ter. This demonstrates the effectiveness of topic
memory to learn indicative topic representations
for short text classification.

‚Ä¢ Jointly inferring latent topics is effective to text
classification. In comparison between two TMN
variants, TMN (Joint TM Inference) produces bet-
ter classification results, though large margin im-
provements are not observed on the three English
datasets, i.e., TagMyNews, Snippets, and Twitter.
This may be because the classifiers do not rely too
much on high-quality latent topics, since other fea-
tures may be sufficient to indicate the labels, e.g.,
word positions in the instance. As a result, bet-
ter topic models, learned via jointly induced with
classification, may not provide richer information
for classification. Nevertheless, we notice that on

LDA
mubarak

::::
bring

::
run obama democracy speech

:::::
believe regime power bowl

BTM
mubarak egypt push internet people govern-
ment

::::
phone hosni

::::
need son

NTM
mubarak people egyptian egypt

::
stay

:::::::
tomorrow

protest news
:::::
phone protester

TMN mubarak protest protester tahrir square egyptianal jazeera repo cairo

Table 5: Top 10 representative terms of the sample la-
tent topics discovered by various topic models from
Twitter dataset. We interpret the topics as ‚ÄúEgyptian
revolution of 2011‚Äù according to their word distribu-
tions.

::::::::
Non-topic

::::::
words are wave-underlined and in

blue, and off-topic words are underlined and in red.

Chinese Weibo dataset, the jointly trained topic
model improves the accuracy and average F1 by
2.3% and 2.0%, respectively. It may result from
the prevalence of word order misuse in informal
Weibo messages. This mis-order phenomenon is
common in Chinese and generally does not affect
understanding. The rich information conveyed by
Chinese characters are capable of indicating se-
mantic meanings of words even without correct or-
ders (Qin et al., 2016; Wang et al., 2017b). As a
result, the CNN classifier, which encodes orders
of words, may also bring such mis-order noise
to classification. For these instances with mis-
ordered words, a better topic model that learns text
instances as unordered words, provides useful rep-
resentations that compensate the loss of informa-
tion in word orders and in turn improves the per-
formance of text classification.

4.2 Topic Coherence Comparison
In Section 4.1, we find that TMN can significantly
outperform comparison models on short text clas-
sification. In this section, we study whether jointly
learning topic models and classification can be
helpful in producing coherent and meaningful top-
ics. We use the CV metric (RoÃàder et al., 2015)
computed by Palmetto toolkit12 to evaluate the
topic coherence, which has been shown to give
the closest scores to human evaluation compared
to other widely-used topic coherence metrics like
NPMI (Bouma, 2009). Table 4 shows the compar-
ison results of LDA, BTM, NTM, and TMN on the
three English datasets.13 Note that we do not re-
port CV scores for Chinese Weibo dataset as the
Palmetto toolkit cannot process Chinese topics.

12https://github.com/dice-group/
Palmetto

13In the rest of this paper, without otherwise indicated,
TMN is used as a short form for TMN (Joint TM Inference).

https://github.com/dice-group/Palmetto
https://github.com/dice-group/Palmetto


3126

# of Hops Snippets TagMyNews Twitter Weibo
TMN-1H 0.958 0.841 0.382 0.568
TMN-2H 0.964 0.843 0.383 0.578
TMN-3H 0.962 0.845 0.384 0.581
TMN-4H 0.961 0.846 0.389 0.582
TMN-5H 0.960 0.851 0.397 0.591
TMN-6H 0.958 0.848 0.388 0.579

Table 6: The impact of the # of hops on accuracy.

As can be seen, TMN yields higher CV scores
by large margins than all others in comparison.
This indicates that jointly exploring classification
would be effective in producing coherent topics.
The reason is that the supervision from classifica-
tion labels can guide unsupervised topic models in
discovering meaningful and interpretable topics.
We also observe that NTM produces better results
than LDA and BTM, which implies the effective-
ness of inducing topic models by neural networks.

To further analyze the quality of yielded top-
ics, Table 5 shows the top 10 words of the sam-
ple latent topics reflecting ‚ÄúEgyptian revolution of
2011‚Äù discovered by various models. We find that
LDA yields off-topic word ‚Äúbowl‚Äù. For the results
of BTM and NTM, though we do not find off-topic
words, non-topic words like ‚Äúneed‚Äù and ‚Äústay‚Äù are
included.14 The topic generated by TMN appears
to be the best, which presents indicative words like
‚Äútahrir‚Äù and ‚Äúcairo‚Äù, for the event.

4.3 Results with Varying Hyperparameters

We further study the impact of two important hy-
perparameters in TMN, i.e., the hop number and
the topic number, which will be discussed in turn.

Impact of Hop Numbers. Recall that Figure 2
shows the capacity of TMN in combining multi-
ple hops. Here we analyze the effects of hop num-
bers on the accuracy of TMN. Table 6 reports the
results, where NH refers to using N hops (N =
1, 2, ..., 6). As can be seen, generally, TMN with 5
hops achieves the best accuracy on most datasets
except for Snippets dataset. We also observe that,
although within a particular range, more hops can
produce better accuracy, the increasing trends are
not always monotonic. For example, TMN-6H al-
ways exhibits lower accuracy than TMN-5H. This
observation implies that the overall representation
ability of TMN is enhanced as the increasing com-
plexity of the model via combining more hops.

14Off-topic words are more likely to be interpreted to re-
flect other topics. Non-topic words cannot clearly indicate
the corresponding topic.

Figure 3: The impact of topic numbers, where the hori-
zontal axis shows the number of topics and the vertical
axis shows the accuracy.

However, this enhancement will reach saturation
when the hop number exceeds a threshold, which
is 5 hops for most datasets in our experiment.

Impact of Topic Numbers. Figure 3 shows the
accuracy of TMN and CNN+TEWE (the best
comparison model in Table 3) given varying K,
the number of topics on TagMyNews and Twit-
ter datasets.15 As we can see, the curves of all
the models are not monotonic and the best accu-
racy is achieved given a particular number of top-
ics, e.g., K=50 for TMN on TagMyNews dataset.
When comparing different curves, we observe
that TMN yields consistently better accuracy than
CNN+TEWE, a comparison model shown in Ta-
ble 3, which demonstrates the robust performance
of TMN over varying number of topics.

4.4 A Case Study on Topic Memory

Section 4.1 demonstrates the effectiveness of us-
ing topic memory on short text classification. To
further understand why, in this section, we use
the test instance S in Table 1 to analyze what
the information captured by topic memory is in-
dicative of class labels. Recall that the label of
S, which should be New.Music.Live, can be indi-
cated by containing word ‚Äúwristbands‚Äù and the
collocation of ‚Äúwristbands‚Äù and ‚ÄúBieber‚Äù in train-
ing instance R2 labeled New.Music.Live. Figure 4
shows the heatmaps of the weight matrix P in
topic memory and the topic mixture Œ∏ captured
by NTM for instance S. As can be seen, the top
3 words for the latent topic with the largest value
in Œ∏ are ‚Äúbieber‚Äù, ‚Äújustine‚Äù, and ‚Äútuesday‚Äù, which
can effectively indicate the class label of S to be
New.Music.Live because Justine Bieber was there
on Tuesday. Interestingly, S contains none of the
top three words. The latent semantic relations of
S and these words are purely uncovered by the co-
occurrence of words in S with other instances in

15We observe similar distributions on Snippets and Weibo.



3127

1st Topic 2nd Topic 3rd Topic

bieber
justin
tuesday
newmusiclive 
think
thought
jb
new
music
live

good 
like 
fan 
look 
tweet 
thing 
know 
rumble 
na
right

news 
music 
forever 
change 
right 
attack 
time 
wing 
aistdirect
films

Topic 
mixture

(a) (b)

1st 2nd 3rd

Figure 4: Topic memory visualization for test instance S shown in Table 1. (a) Heatmaps of topic mixture Œ∏
(the upper one) and topic memory weight matrix P (the lower one) illustrating the relevance between the words
of S (left) and the learned topics (bottom, with top-2 words displayed). The red dotted rectangle indicates the
representation for ‚Äúwristband‚Äù, the topical word in S. The red rectangles with solid frames indicates the 3 most
relevant topics ordered by Œ∏. (b) Top-10 words of these topics indicated by œÜ.

the corpus, which further shows the benefit of us-
ing latent topics for alleviating the sparsity in short
texts. We also observe that topic memory learns
different representations for topical word ‚Äúwrist-
band‚Äù, highly indicating instance label, and back-
ground words, such as ‚Äúi‚Äù and ‚Äúfor‚Äù. This explains
why topic memory is effective to classification.

4.5 Error Analysis

In this section, we take our classification results on
TagMyNews dataset as an example to analyze our
errors. We observe that one major type of incorrect
prediction should be ascribed to the polysemy phe-
nomenon. For example, the instance ‚ÄúNBC gives
‚Äòthe voice‚Äô post super bowl slot‚Äù should be catego-
rized as entertainment. However, failing to under-
stand the particular meaning of ‚Äúthe voice‚Äù here
as the name of a television singing competition,
our model mistakenly categorizes this instance as
sport because of the occurrence ‚Äúsuper bowl‚Äù. In
future work, we would exploit context-sensitive
topical word embeddings (Witt et al., 2016), which
is able to distinguish the meanings of the same
word in different contexts. Another main error
type comes from the failure to capture phrase-level
semantics. Taking ‚ÄúOn the merits of face time and
living small‚Äù as an example, without understand-
ing ‚Äúface time‚Äù as a phrase, our model wrongly
predicts its category as business instead of its cor-
rect label as sci tech. Such errors can be reduced
by enhancing our NTM to phrase discovery topic
models (Lindsey et al., 2012; He, 2016), which is
worthy exploring in future work.

5 Related Work

Our work mainly builds on two streams of prior
work: short text classification and topic models.

Short Text Classification. In the line of short
text classification, most work focuses on alleviat-
ing the severe sparsity issues in short texts (Yan
et al., 2013). Some previous efforts encode knowl-
edge from external resource (Jin et al., 2011; Lucia
and Ferrari, 2014; Wang et al., 2017a; Ma et al.,
2018). Instead, our work learns effective repre-
sentations only from internal data. For some spe-
cific classification tasks, such as sentiment analy-
sis, manually-crafted features are designed to fit
the target task (Pak and Paroubek, 2010; Jiang
et al., 2011). Distinguished from them, we employ
deep learning framework for representation learn-
ing, which requires no feature engineering process
and thus ensures its general applicability to di-
verse classification scenarios. In comparison with
the established classifiers applying deep learning
methods (dos Santos and Gatti, 2014; Lee and
Dernoncourt, 2016), our work differs from them
in the leverage of corpus-level latent topic repre-
sentations for alleviating data sparsity issues. In
existing classification models using topic features,
pre-trained topic mixtures are leveraged as part of
features (Phan et al., 2008; Ren et al., 2016; Chen
et al., 2017). Differently, our model encodes topic
representations in a memory mechanism where
topics are induced jointly with text classification
in an end-to-end manner.



3128

Topic Models. Well-known topic models,
e.g., probabilistic latent semantic analysis
(pLSA) (Hofmann, 1999) and latent Dirichlet
allocation (LDA) (Blei et al., 2003), have shown
advantages in capturing effective semantic rep-
resentations, and proven beneficial to varying
downstream applications, such as summariza-
tion (Haghighi and Vanderwende, 2009) and
recommendation (Zeng et al., 2018; Bai et al.,
2018). For short text data, topic model variants
have been proposed to reduce the effects of spar-
sity issues on topic modeling, such as biterm topic
model (BTM) (Yan et al., 2013) and LeadLDA (Li
et al., 2016b). Recently, owing to the popularity
of variational auto-encoder (VAE) (Kingma and
Welling, 2013), it is able to induce latent topics
in neural networks, namely, neural topic models
(NTM) (Miao et al., 2017; Srivastava and Sutton,
2017). Although the concept of NTM has been
mentioned earlier in Cao et al. (2015), their model
is based on matrix factorization. Differently,
VAE-style NTM (Srivastava and Sutton, 2017;
Miao et al., 2017) follows the LDA fashion as
probabilistic generative models, which is easy to
interpret and extend. The NTM in our framework
is in VAE-style, whose effects on short text
classification serve as the key focus of our work.

6 Conclusion

We have presented topic memory networks that
exploit corpus-level topic representations with a
topic memory mechanism for short text classifica-
tion. The model alleviates data sparsity issues via
jointly learning latent topics and text categories.
Empirical comparisons with state-of-the-art mod-
els on four benchmark datasets have demonstrated
the validity and effectiveness of our model, where
better results have been achieved on both short text
classification and topic coherence evaluation.

Acknowledgements

This work is partially supported by the Research
Grants Council of the Hong Kong Special Admin-
istrative Region, China (No. CUHK 14208815
and No. CUHK 14234416 of the General Re-
search Fund), and Microsoft Research Asia (2018
Microsoft Research Asia Collaborative Research
Award). We thank Shuming Shi, Dong Yu, Tong
Zhang, Baolin Peng, Haoli Bai, and the three
anonymous reviewers for the insightful sugges-
tions on various aspects of this work.

References
Haoli Bai, Zhuangbin Chen, Michael R. Lyu, Irwin

King, and Zenglin Xu. 2018. Neural Relational
Topic Model for Scientific Article Analysis. In Pro-
ceedings of the 27th ACM International Conference
on Information and Knowledge Management, CIKM
2018. ACM.

David M. Blei, Alp Kucukelbir, and Jon D. McAuliffe.
2016. Variational Inference: A Review for Statisti-
cians. CoRR, abs/1601.00670.

David M. Blei, Andrew Y. Ng, and Michael I. Jordan.
2003. Latent Dirichlet Allocation. Journal of Ma-
chine Learning Research, 3:993‚Äì1022.

Gerlof Bouma. 2009. Normalized (Pointwise) Mutual
Information in Collocation Extraction. Proceedings
of GSCL, pages 31‚Äì40.

Ziqiang Cao, Sujian Li, Yang Liu, Wenjie Li, and Heng
Ji. 2015. A Novel Neural Topic Model and Its Su-
pervised Extension. In Proceedings of the Twenty-
Ninth AAAI Conference on Artificial Intelligence,
Austin, Texas, USA, pages 2210‚Äì2216.

Rich Caruana, Steve Lawrence, and C. Lee Giles. 2000.
Overfitting in Neural Nets: Backpropagation, Con-
jugate Gradient, an‚Äùd Early Stopping. In Advances
in Neural Information Processing Systems 13, Pa-
pers from Neural Information Processing Systems,
NIPS 2000, Denver, CO, USA, pages 402‚Äì408.

Peng Chen, Zhongqian Sun, Lidong Bing, and Wei
Yang. 2017. Recurrent Attention Network on Mem-
ory for Aspect Sentiment Analysis. In Proceed-
ings of the 2017 Conference on Empirical Meth-
ods in Natural Language Processing, EMNLP 2017,
Copenhagen, Denmark, pages 452‚Äì461.

Rajarshi Das, Manzil Zaheer, and Chris Dyer. 2015.
Gaussian LDA for Topic Models with Word Em-
beddings. In Proceedings of the 53rd Annual Meet-
ing of the Association for Computational Linguistics
and the 7th International Joint Conference on Natu-
ral Language Processing of the Asian Federation of
Natural Language Processing, ACL 2015, Volume 1:
Long Papers, Beijing, China, pages 795‚Äì804.

Adji B. Dieng, Chong Wang, Jianfeng Gao, and
John William Paisley. 2016. TopicRNN: A Re-
current Neural Network with Long-Range Semantic
Dependency. CoRR, abs/1611.01702.

Zi-Yi Dou. 2017. Capturing User and Product In-
formation for Document Level Sentiment Analysis
with Deep Memory Network. In Proceedings of the
2017 Conference on Empirical Methods in Natural
Language Processing, EMNLP 2017, Copenhagen,
Denmark, pages 521‚Äì526.

Alex Graves, Greg Wayne, and Ivo Danihelka. 2014.
Neural Turing Machines. CoRR, abs/1410.5401.



3129

Aria Haghighi and Lucy Vanderwende. 2009. Explor-
ing content models for multi-document summariza-
tion. In Proceedings of Human Language Tech-
nologies: The 2009 Annual Conference of the North
American Chapter of the Association for Computa-
tional Linguistics, HLT-NAACL 2009, pages 362‚Äì
370, Boulder, Colorado, USA.

Yulan He. 2016. Extracting Topical Phrases from Clin-
ical Documents. In Proceedings of the Thirtieth
AAAI Conference on Artificial Intelligence, Phoenix,
Arizona, USA, pages 2957‚Äì2963.

Thomas Hofmann. 1999. Probabilistic Latent Seman-
tic Indexing. In Proceedings of the 22nd Annual
International ACM SIGIR Conference on Research
and Development in Information Retrieval, SIGIR
‚Äô99, Berkeley, CA, USA, pages 50‚Äì57.

Baotian Hu, Qingcai Chen, and Fangze Zhu. 2015. LC-
STS: A Large Scale Chinese Short Text Summa-
rization Dataset. In Proceedings of the 2015 Con-
ference on Empirical Methods in Natural Language
Processing, EMNLP 2015, Lisbon, Portugal, pages
1967‚Äì1972.

Long Jiang, Mo Yu, Ming Zhou, Xiaohua Liu, and
Tiejun Zhao. 2011. Target-dependent Twitter Sen-
timent Classification. In The 49th Annual Meet-
ing of the Association for Computational Linguis-
tics: Human Language Technologies, Proceedings
of the Conference, Portland, Oregon, USA, pages
151‚Äì160.

Ou Jin, Nathan Nan Liu, Kai Zhao, Yong Yu, and Qiang
Yang. 2011. Transferring Topical Knowledge from
Auxiliary Long Texts for Short Text Clustering. In
Proceedings of the 20th ACM Conference on Infor-
mation and Knowledge Management, CIKM 2011,
Glasgow, United Kingdom, pages 775‚Äì784.

Armand Joulin, Edouard Grave, Piotr Bojanowski, and
Tomas Mikolov. 2017. Bag of Tricks for Efficient
Text Classification. In Proceedings of the 15th Con-
ference of the European Chapter of the Association
for Computational Linguistics: Volume 2, Short Pa-
pers, pages 427‚Äì431.

Yoon Kim. 2014. Convolutional Neural Networks for
Sentence Classification. In Proceedings of the 2014
Conference on Empirical Methods in Natural Lan-
guage Processing, EMNLP 2014, A meeting of SIG-
DAT, a Special Interest Group of the ACL, Doha,
Qatar, pages 1746‚Äì1751.

Diederik P. Kingma and Max Welling. 2013. Auto-
Encoding Variational Bayes. CoRR, abs/1312.6114.

Ji Young Lee and Franck Dernoncourt. 2016. Sequen-
tial Short-Text Classification with Recurrent and
Convolutional Neural Networks. In The 2016 Con-
ference of the North American Chapter of the Asso-
ciation for Computational Linguistics: Human Lan-
guage Technologies, NAACL HLT 2016, San Diego
California, USA, pages 515‚Äì520.

Chenliang Li, Haoran Wang, Zhiqian Zhang, Aixin
Sun, and Zongyang Ma. 2016a. Topic Modeling
for Short Texts with Auxiliary Word Embeddings.
In Proceedings of the 39th International ACM SI-
GIR conference on Research and Development in In-
formation Retrieval, SIGIR 2016, Pisa, Italy, pages
165‚Äì174.

Jing Li, Ming Liao, Wei Gao, Yulan He, and Kam-
Fai Wong. 2016b. Topic Extraction from Microblog
Posts Using Conversation Structures. In Proceed-
ings of the 54th Annual Meeting of the Association
for Computational Linguistics, ACL 2016, Volume
1: Long Papers, Berlin, Germany.

Robert V. Lindsey, William Headden, and Michael
Stipicevic. 2012. A Phrase-Discovering Topic
Model Using Hierarchical Pitman-Yor Processes.
In Proceedings of the 2012 Joint Conference on
Empirical Methods in Natural Language Process-
ing and Computational Natural Language Learn-
ing, EMNLP-CoNLL 2012, Jeju Island, Korea, pages
214‚Äì222.

Pengfei Liu, Xipeng Qiu, and Xuanjing Huang. 2017.
Adversarial Multi-task Learning for Text Classifica-
tion. In Proceedings of the 55th Annual Meeting of
the Association for Computational Linguistics, ACL
2017, Volume 1: Long Papers, Vancouver, Canada,
pages 1‚Äì10.

William Lucia and Elena Ferrari. 2014. EgoCen-
tric: Ego Networks for Knowledge-based Short Text
Classification. In Proceedings of the 23rd ACM
International Conference on Conference on Infor-
mation and Knowledge Management, CIKM 2014,
Shanghai, China, pages 1079‚Äì1088.

Yukun Ma, Haiyun Peng, and Erik Cambria. 2018. Tar-
geted Aspect-Based Sentiment Analysis via Embed-
ding Commonsense Knowledge into an Attentive
LSTM. In Proceedings of the Thirty-Second AAAI
Conference on Artificial Intelligence, New Orleans,
Louisiana, USA.

Yishu Miao, Edward Grefenstette, and Phil Blunsom.
2017. Discovering Discrete Latent Topics with Neu-
ral Variational Inference. In Proceedings of the
34th International Conference on Machine Learn-
ing, ICML 2017, Sydney, NSW, Australia, pages
2410‚Äì2419.

Yishu Miao, Lei Yu, and Phil Blunsom. 2016. Neural
Variational Inference for Text Processing. In Pro-
ceedings of the 33nd International Conference on
Machine Learning, ICML 2016, New York City, NY,
USA, pages 1727‚Äì1736.

Vinod Nair and Geoffrey E. Hinton. 2010. Rectified
Linear Units Improve Restricted Boltzmann Ma-
chines. In Proceedings of the 27th International
Conference on Machine Learning (ICML-10), Haifa,
Israel, pages 807‚Äì814.



3130

Alexander Pak and Patrick Paroubek. 2010. Twitter
Based System: Using Twitter for Disambiguating
Sentiment Ambiguous Adjectives. In Proceedings
of the 5th International Workshop on Semantic Eval-
uation, SemEval@ACL 2010, Uppsala University,
Uppsala, Sweden, pages 436‚Äì439.

Jeffrey Pennington, Richard Socher, and Christo-
pher D. Manning. 2014. Glove: Global Vectors for
Word Representation. In Proceedings of the 2014
Conference on Empirical Methods in Natural Lan-
guage Processing, EMNLP 2014, A meeting of SIG-
DAT, a Special Interest Group of the ACL, Doha,
Qatar, pages 1532‚Äì1543.

Xuan Hieu Phan, Minh Le Nguyen, and Susumu
Horiguchi. 2008. Learning to Classify Short and
Sparse Text & Web with Hidden Topics from Large-
scale Data Collections. In Proceedings of the
17th International Conference on World Wide Web,
WWW 2008, Beijing, China, pages 91‚Äì100.

Zengchang Qin, Yonghui Cong, and Tao Wan. 2016.
Topic Modeling of Chinese Language beyond a Bag-
of-Words. Computer Speech & Language, 40:60‚Äì
78.

Xipeng Qiu, Qi Zhang, and Xuanjing Huang. 2013.
FudanNLP: A Toolkit for Chinese Natural Language
Processing. In Proceedings of Annual Meeting of
the Association for Computational Linguistics.

Yafeng Ren, Yue Zhang, Meishan Zhang, and
Donghong Ji. 2016. Improving Twitter Senti-
ment Classification Using Topic-Enriched Multi-
Prototype Word Embeddings. In Proceedings of the
Thirtieth AAAI Conference on Artificial Intelligence,
Phoenix, Arizona, USA, pages 3038‚Äì3044.

Danilo Jimenez Rezende, Shakir Mohamed, and Daan
Wierstra. 2014. Stochastic Backpropagation and
Approximate Inference in Deep Generative Models.
In Proceedings of the 31th International Conference
on Machine Learning, ICML 2014, Beijing, China,
pages 1278‚Äì1286.

Michael RoÃàder, Andreas Both, and Alexander Hinneb-
urg. 2015. Exploring the Space of Topic Coherence
Measures. In Proceedings of the Eighth ACM Inter-
national Conference on Web Search and Data Min-
ing, WSDM 2015, Shanghai, China, pages 399‚Äì408.

Cƒ±ÃÅcero Nogueira dos Santos and Maira Gatti. 2014.
Deep Convolutional Neural Networks for Sentiment
Analysis of Short Texts. In 25th International
Conference on Computational Linguistics, Proceed-
ings of the Conference: Technical Papers, COLING
2014, Dublin, Ireland, pages 69‚Äì78.

Akash Srivastava and Charles Sutton. 2017. Au-
toencoding Variational Inference For Topic Models.
arXiv preprint arXiv:1703.01488.

Sainbayar Sukhbaatar, Arthur Szlam, Jason Weston,
and Rob Fergus. 2015. End-To-End Memory Net-
works. In Advances in Neural Information Process-
ing Systems 28: Annual Conference on Neural Infor-
mation Processing Systems, NIPS 2015, Montreal,
Quebec, Canada, pages 2440‚Äì2448.

Daniele Vitale, Paolo Ferragina, and Ugo Scaiella.
2012. Classification of Short Texts by Deploying
Topical Annotations. In Advances in Information
Retrieval - 34th European Conference on IR Re-
search, ECIR 2012, Barcelona, Spain, pages 376‚Äì
387.

Jin Wang, Zhongyuan Wang, Dawei Zhang, and Jun
Yan. 2017a. Combining Knowledge with Deep Con-
volutional Neural Networks for Short Text Classifi-
cation. In Proceedings of the Twenty-Sixth Interna-
tional Joint Conference on Artificial Intelligence, IJ-
CAI 2017, Melbourne, Australia, pages 2915‚Äì2921.

Shaonan Wang, Jiajun Zhang, and Chengqing Zong.
2017b. Exploiting Word Internal Structures for
Generic Chinese Sentence Representation. In Pro-
ceedings of the 2017 Conference on Empirical Meth-
ods in Natural Language Processing, EMNLP 2017,
Copenhagen, Denmark, pages 298‚Äì303.

Sida I. Wang and Christopher D. Manning. 2012. Base-
lines and Bigrams: Simple, Good Sentiment and
Topic Classification. In The 50th Annual Meeting of
the Association for Computational Linguistics, Pro-
ceedings of the Conference, ACL 2012, Volume 2:
Short Papers, Jeju Island, Korea, pages 90‚Äì94.

Jason Weston, Sumit Chopra, and Antoine Bordes.
2014. Memory Networks. CoRR, abs/1410.3916.

Nils Witt, Christin Seifert, and Michael Granitzer.
2016. Explaining Topical Distances Using Word
Embeddings. In 27th International Workshop on
Database and Expert Systems Applications, DEXA
2016 Workshops, Porto, Portugal, pages 212‚Äì217.

Yijun Xiao and Kyunghyun Cho. 2016. Efficient
Character-level Document Classification by Com-
bining Convolution and Recurrent Layers. CoRR,
abs/1602.00367.

Xiaohui Yan, Jiafeng Guo, Yanyan Lan, and Xueqi
Cheng. 2013. A Biterm Topic Model for Short
Sexts. In 22nd International World Wide Web Con-
ference, WWW 2013, Rio de Janeiro, Brazil, pages
1445‚Äì1456.

Xingshan Zeng, Jing Li, Lu Wang, Nicholas
Beauchamp, Sarah Shugars, and Kam-Fai Wong.
2018. Microblog conversation recommendation via
joint modeling of topics and discourse. In Proceed-
ings of the 2018 Conference of the North American
Chapter of the Association for Computational Lin-
guistics: Human Language Technologies, NAACL-
HLT 2018, New Orleans, Louisiana, USA, pages
375‚Äì385.



3131

Dongxu Zhang and Dong Wang. 2015. Relation Clas-
sification via Recurrent Neural Network. CoRR,
abs/1508.01006.

Shu Zhang, Dequan Zheng, Xinchen Hu, and Ming
Yang. 2015a. Bidirectional Long Short-Term Mem-
ory Networks for Relation Classification. In Pro-
ceedings of the 29th Pacific Asia Conference on Lan-
guage, Information and Computation, PACLIC 29,
Shanghai, China.

Weinan Zhang, Dingquan Wang, Gui-Rong Xue, and
Hongyuan Zha. 2012. Advertising Keywords Rec-
ommendation for Short-Text Web Pages Using
Wikipedia. ACM TIST, 3(2):36:1‚Äì36:25.

Xiang Zhang, Junbo Jake Zhao, and Yann LeCun.
2015b. Character-level Convolutional Networks for
Text Classification. In Advances in Neural Informa-
tion Processing Systems 28: Annual Conference on
Neural Information Processing Systems, NIPS 2015,
Montreal, Quebec, Canada, pages 649‚Äì657.

Yingyi Zhang, Jing Li, Yan Song, and Chengzhi Zhang.
2018. Encoding conversation context for neural
keyphrase extraction from microblog posts. In
Proceedings of the 2018 Conference of the North
American Chapter of the Association for Computa-
tional Linguistics: Human Language Technologies,
NAACL-HLT 2018, New Orleans, Louisiana, USA,
pages 1676‚Äì1686.


