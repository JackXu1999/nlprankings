



















































Continual Learning for Sentence Representations Using Conceptors


Proceedings of NAACL-HLT 2019, pages 3274–3279
Minneapolis, Minnesota, June 2 - June 7, 2019. c©2019 Association for Computational Linguistics

3274

Continual Learning for Sentence Representations Using Conceptors

Tianlin Liu
Department of Computer Science and

Electrical Engineering
Jacobs University Bremen
28759 Bremen, Germany

t.liu@jacobs-university.de

Lyle Ungar and João Sedoc
Department of Computer and

Information Science
University of Pennsylvania

Philadelphia, PA 19104
{ungar, joao}@cis.upenn.edu

Abstract

Distributed representations of sentences have
become ubiquitous in natural language pro-
cessing tasks. In this paper, we consider a
continual learning scenario for sentence rep-
resentations: Given a sequence of corpora, we
aim to optimize the sentence encoder with re-
spect to the new corpus while maintaining its
accuracy on the old corpora. To address this
problem, we propose to initialize sentence en-
coders with the help of corpus-independent
features, and then sequentially update sentence
encoders using Boolean operations of concep-
tor matrices to learn corpus-dependent fea-
tures. We evaluate our approach on semantic
textual similarity tasks and show that our pro-
posed sentence encoder can continually learn
features from new corpora while retaining its
competence on previously encountered cor-
pora.

1 Introduction

Distributed representations of sentences are essen-
tial for a wide variety of natural language pro-
cessing (NLP) tasks. Although recently proposed
sentence encoders have achieved remarkable re-
sults (e.g., (Yin and Schütze, 2015; Arora et al.,
2017; Cer et al., 2018; Pagliardini et al., 2018)),
most, if not all, of them are trained on a priori
fixed corpora. However, in open-domain NLP sys-
tems such as conversational agents, oftentimes we
are facing a dynamic environment, where train-
ing data are accumulated sequentially over time
and the distributions of training data vary with
respect to external input (Lee, 2017; Mathur and
Singh, 2018). To effectively use sentence encoders
in such systems, we propose to consider the fol-
lowing continual sentence representation learn-
ing task: Given a sequence of corpora, we aim to
train sentence encoders such that they can continu-
ally learn features from new corpora while retain-

ing strong performance on previously encountered
corpora.

Toward addressing the continual sentence rep-
resentation learning task, we propose a simple
sentence encoder that is based on the summation
and linear transform of a sequence of word vec-
tors aided by matrix conceptors. Conceptors have
their origin in reservoir computing (Jaeger, 2014)
and recently have been used to perform continual
learning in deep neural networks (He and Jaeger,
2018). Here we employ Boolean operations of
conceptor matrices to update sentence encoders
over time to meet the following desiderata:

1. Zero-shot learning. The initialized sentence
encoder (no training corpus used) can effec-
tively produce sentence embeddings.

2. Resistant to catastrophic forgetting. When
the sentence encoder is adapted on a new
training corpus, it retains strong perfor-
mances on old ones.

The rest of the paper is organized as follows.
We first briefly review a family of linear sentence
encoders. Then we explain how to build upon such
sentence encoders for continual sentence represen-
tation learning tasks, which lead to our proposed
algorithm. Finally, we demonstrate the effective-
ness of the proposed method using semantic tex-
tual similarity tasks.1

Notation We assume each word w from a vo-
cabulary set V has a real-valued word vector vw ∈
Rn. Let p(w) be the monogram probability of
a word w. A corpus D is a collection of sen-
tences, where each sentence s ∈ D is a multiset
of words (word order is ignored here). For a col-
lection of vectors Y = {yi}i∈I , where yi ∈ Rl

1Our codes are available on GitHub https://
github.com/liutianlin0121/contSentEmbed

https://github.com/liutianlin0121/contSentEmbed
https://github.com/liutianlin0121/contSentEmbed


3275

for i in an index set I with cardinality |I|, we let
[yi]i∈I ∈ Rl×|I| be a matrix whose columns are
vectors y1, · · · , y|I|. An identity matrix is denoted
by I.

2 Linear sentence encoders

We briefly overview “linear sentence encoders”
that are based on linear algebraic operations over
a sequence of word vectors. Among different lin-
ear sentence encoders, the smoothed inverse fre-
quency (SIF) approach (Arora et al., 2017) is a
prominent example – it outperforms many neural-
network based sentence encoders on a battery of
NLP tasks (Arora et al., 2017).

Derived from a generative model for sentences,
the SIF encoder (presented in Algorithm 1) trans-
forms a sequence of word vectors into a sentence
vector with three steps. First, for each sentence
in the training corpus, SIF computes a weighted
average of word vectors (line 1-3 of Algorithm
1); next, it estimates a “common discourse direc-
tion” of the training corpus (line 4 of Algorithm
1); thirdly, for each sentence in the testing cor-
pus, it calculates the weighted average of the word
vectors and projects the averaged result away from
the learned common discourse direction (line 5-8
of Algorithm 1). Note that this 3-step paradigm
is slightly more general than the original one pre-
sented in (Arora et al., 2017), where the training
and the testing corpus is assumed to be the same.

Algorithm 1: SIF sentence encoder.
Input : A training corpus D; a testing

corpus G; parameter a, monogram
probabilities {p(w)}w∈V of words

1 for sentence s ∈ D do
2 qs ← 1|s|

∑
w∈s

a
p(w)+avw

3 end
4 Let u be the first singular vector of [qs]s∈D.
5 for sentence s ∈ G do
6 qs ← 1|s|

∑
w∈s

a
p(w)+avw

7 fSIFs ← qs − uu>qs.
8 end

Output: {fSIFs }s∈G

Building upon SIF, recent studies have pro-
posed further improved sentence encoders (Kho-
dak et al., 2018; Pagliardini et al., 2018; Yang
et al., 2018). These algorithms roughly share the
core procedures of SIF, albeit using more refined

methods (e.g., softly remove more than one com-
mon discourse direction).

3 Continual learning for linear sentence
encoders

In this section, we consider how to design a lin-
ear sentence encoder for continual sentence repre-
sentation learning. We observe that common dis-
course directions used by SIF-like encoders are
estimated from the training corpus. However, in-
crementally estimating common discourse direc-
tions in continual sentence representation learning
tasks might not be optimal. For example, consider
that we are sequentially given training corpora of
tweets and news article. When the first
tweets corpus is presented, we can train a SIF
sentence encoder using tweets. When the sec-
ond news article corpus is given, however,
we will face a problem on how to exploit the newly
given corpus for improving the trained sentence
encoder. A straightforward solution is to first com-
bine the tweets and news article corpora
and then train a new encoder from scratch using
the combined corpus. However, this paradigm is
not efficient or effective. It is not efficient in the
sense that we will need to re-train the encoder
from scratch every time a new corpus is added.
Furthermore, it is not effective in the sense that the
common direction estimated from scratch reflects
a compromise between tweets and news articles,
which might not be optimal for either of the stand-
alone corpus. Indeed, it is possible that larger cor-
pora will swamp smaller ones.

To make the common discourse learned from
one corpus more generalizable to another, we pro-
pose to use the conceptor matrix (Jaeger, 2017)
to characterize and update the common discourse
features in a sequence of training corpora.

3.1 Matrix conceptors
In this section, we briefly introduce matrix con-
ceptors, drawing heavily on (Jaeger, 2017; He and
Jaeger, 2018; Liu et al., 2019). Consider a set
of vectors {x1, · · · , xn}, xi ∈ RN for all i ∈
{1, · · · , n}. A conceptor matrix is a regularized
identity map that minimizes

1

n

n∑
i=1

‖xi − Cxi‖22 + α−2‖C‖2F. (1)

where ‖ · ‖F is the Frobenius norm and α−2 is a
scalar parameter called aperture. It can be shown



3276

that C has a closed form solution:

C =
1

n
XX>(

1

n
XX> + α−2I)−1, (2)

where X = [xi]i∈{1,··· ,n} is a data collec-
tion matrix whose columns are vectors from
{x1, · · · , xn}. In intuitive terms, C is a soft pro-
jection matrix on the linear subspace where the
typical components of xi samples lie. For conve-
nience in notation, we may writeC(X,α) to stress
the dependence on X and α.

Conceptors are subject to most laws of Boolean
logic such as NOT ¬, AND ∧ and OR ∨. For two
conceptors C and B, we define the following op-
erations:

¬C := I−C, (3)
C ∧B :=(C−1 +B−1 − I)−1 (4)
C ∨B :=¬(¬C ∧ ¬B) (5)

Among these Boolean operations, the OR oper-
ation ∨ is particularly relevant for our continual
sentence representation learning task. It can be
shown that C ∨B is the conceptor computed from
the union of the two sets of sample points from
which C and B are computed. Note that, how-
ever, to calculate C ∨ B, we only need to know
two matrices C and B and do not have to access
to the two sets of sample points from which C and
B are computed.

3.2 Using conceptors to continually learn
sentence representations

We now show how to sequentially characterize
and update the common discourse of corpora us-
ing the Boolean operation of conceptors. Sup-
pose that we are sequentially given M training
corporaD1, · · · , DM , presented one after another.
Without using any training corpus, we first initial-
ize a conceptor which characterizes the corpus-
independent common discourse features. More
concretely, we compute C0 := C([vw]w∈Z , α),
where [vw]w∈Z is a matrix of column-wisely
stacked word vectors of words from a stop word
list Z and α is a hyper-parameter. After initial-
ization, for each new training corpus Di (i =
1, · · · ,M ) coming in, we compute a new concep-
tor C temp := C([qs]s∈Di , α) to characterize the
common discourse features of corpus Di, where
those qs are defined in the SIF Algorithm 1. We
can then use Boolean operations of conceptors to

compute Ci := C temp ∨ Ci−1, which character-
izes common discourse features from the new cor-
pus as well as the old corpora. After all M cor-
pora are presented, we follow the SIF paradigm
and useCM to remove common discourse features
from (potentially unseen) sentences. The above
outlined conceptor-aided (CA) continual sentence
representation learning method is presented in Al-
gorithm 2.

Algorithm 2: CA sentence encoder.
Input : A sequence of M training corpora

D = {D1, · · · , DM}; a testing
corpus G; hyper-parameters a and α;
word probabilities {p(w)}w∈V ; stop
word list Z.

1 C0 ← C([vw]w∈Z , α) .
2 for corpus index i = 1, · · · ,M do
3 for sentence s ∈ Di do
4 qs ← 1|s|

∑
w∈s

a
p(w)+avw

5 end
6 C temp ← C([qs]s∈Di , α)
7 Ci ← C temp ∨ Ci−1
8 end
9 for s ∈ G do

10 qs ← 1|s|
∑
w∈s

a
p(w)+avw

11 fCAs ← qs − CMqs
12 end

Output: {fCAs }s∈G

A simple modification of Algorithm 2 yields
a “zero-shot” sentence encoder that requires only
pre-trained word embeddings and no training cor-
pus: we can simply skip those corpus-dependent
steps (line 2-8) and use C0 in place of CM in
line 11 in Algorithm 2 to embed sentences. This
method will be referred to as “zero-shot CA.”

4 Experiment

We evaluated our approach for continual sen-
tence representation learning using semantic tex-
tual similarity (STS) datasets (Agirre et al., 2012,
2013, 2014, 2015, 2016). The evaluation crite-
rion for such datasets is the Pearson correlation
coefficient (PCC) between the predicted sentence
similarities and the ground-truth sentence simi-
larities. We split these datasets into five cor-
pora by their genre: news, captions, wordnet, fo-
rums, tweets (for details see appendix). Through-
out this section, we use publicly available 300-



3277

1 2 3 4 5
first n training
corpora used

63.0

67.5

72.0
PC

C
News

1 2 3 4 5
75.0

81.2

87.0
Captions

1 2 3 4 5
76.0

82.7

87.0
Wordnet

corpus-specialized SIF
train-from-scratch SIF

CA
1 2 3 4 5

51.0

60.1

66.0
Forums

1 2 3 4 5
70.0

73.9

79.0
Tweets

Figure 1: PCC results of STS datasets. Each panel shows the PCC results of a testing corpus (specified as a subtitle)
as a function of increasing numbers of training corpora used. The setup of this experiment mimics (Zenke et al.,
2017, section 5.1).

News Captions WordNet Forums Tweets

av. train-from-scratch SIF 66.5 79.7 80.3 55.5 74.2
zero-shot CA 65.6 79.8 82.5 61.5 75.2

av. CA 69.7 83.8 83.2 62.5 76.2

Table 1: Time-course averaged PCC of train-from-scratch SIF and conceptor-aided (CA) methods, together with
the result of zero-shot CA. Best results are in boldface and the second best results are underscored.

dimensional GloVe vectors (trained on the 840
billion token Common Crawl) (Pennington et al.,
2014). Additional experiments with Word2Vec
(Mikolov et al., 2013), Fasttext (Bojanowski et al.,
2017), Paragram-SL-999 (Wieting et al., 2015) are
in the appendix.

We use a standard continual learning experi-
ment setup (cf. (Zenke et al., 2017, section 5.1)) as
follows. We sequentially present the five training
datasets in the order2 of news, captions, wordnet,
forums, and tweets, to train sentence encoders.
Whenever a new training corpus is presented, we
train a SIF encoder from scratch3 (by combining
all available training corpora which have been al-
ready presented) and then test it on each corpus.
At the same time, we incrementally adapt a CA en-
coder4 using the newly presented corpus and test
it on each corpus. The lines of each panel of Fig-
ure 1 show the test results of SIF and CA on each
testing corpus (specified as the panel subtitle) as
a function of the number of training corpora used
(the first n corpora of news, captions, wordnet, fo-
rums, and tweets for this experiment). To give a
concrete example, consider the blue line in the first

2The order can be arbitrary. Here we ordered the corpora
from the one with the largest size (news) to the smallest size
(tweets). The results from reversely ordered corpora are re-
ported in the appendix.

3We use a = 0.001 as in (Arora et al., 2017). The word
frequencies are available at the GitHub repository of SIF.

4We used hyper-parameter α = 1. Other parameters are
set to be the same as SIF.

panel of Figure 1. This line shows the test PCC
scores (y-axis) of SIF encoder on the news corpus
when the number of training corpora increases (x-
axis). Specifically, the left-most blue dot indicates
the test result of SIF encoder on news corpus when
trained on news corpus itself (that is, the first train-
ing corpus is used); the second point indicates the
test results of SIF encoder on news corpus when
trained on news and captions corpora (i.e., the first
two training corpora are used); the third point in-
dicates the test results of SIF encoder on news cor-
pus when trained on news, captions, and wordnet
corpora (that is, the first three training corpora are
used), so on and so forth. The dash-lines in pan-
els show the results of a corpus-specialized SIF,
which is trained and tested on the same corpus,
i.e., as done in (Arora et al., 2017, section 4.1). We
see that the PCC results of CA are better and more
“forgetting-resistant” than train-from-scratch SIF
throughout the time course where more training
data are incorporated. Consider, for example, the
test result of news corpus (first panel) again. As
more and more training corpora are used, the per-
formance of train-from-scratch SIF drops with a
noticeable slope; by contrast, the performance CA
drops only slightly.

As remarked in the section 3.2, with a sim-
ple modification of CA, we can perform zero-shot
sentence representation learning without using any
training corpus. The zero-shot learning results are



3278

presented in Table 1, together with the time-course
averaged results of CA and train-from-scratch SIF
(i.e., the averaged values of those CA or SIF scores
in each panel of Figure 1). We see that the aver-
aged results of our CA method performs the best
among these three methods. Somewhat surpris-
ingly, the results yielded by zero-shot CA are bet-
ter than the averaged results of train-from-scratch
SIF in most of the cases.

We defer additional experiments to the ap-
pendix, where we compared CA against more
baseline methods and use different word vectors
other than GloVe to carry out the experiments.

5 Conclusions and future work

In this paper, we formulated a continual sentence
representation learning task: Given a consecutive
sequence of corpora presented in a time-course
manner, how can we extract useful sentence-level
features from new corpora while retaining those
from previously seen corpora? We identified that
the existing linear sentence encoders usually fall
short at solving this task as they leverage on “com-
mon discourse” statistics estimated based on a pri-
ori fixed corpora. We proposed two sentence en-
coders (CA encoder and zero-shot CA encoder)
and demonstrate their the effectiveness at the con-
tinual sentence representation learning task using
STS datasets.

As the first paper considering continual sen-
tence representation learning task, this work has
been limited in a few ways – it remains for fu-
ture work to address these limitations. First, it is
worthwhile to incorporate more benchmarks such
as GLUE (Wang et al., 2019) and SentEval (Con-
neau and Kiela, 2018) into the continual sentence
representation task. Second, this work only con-
siders the case of linear sentence encoder, but fu-
ture research can attempt to devise (potentially
more powerful) non-linear sentence encoders to
address the same task. Thirdly, the proposed CA
encoder operates at a corpus level, which might
be a limitation if boundaries of training corpora
are ill-defined. As a future direction, we expect to
lift this assumption, for example, by updating the
common direction statistics at a sentence level us-
ing Autoconceptors (Jaeger, 2014, section 3.14).
Finally, the continual learning based sentence en-
coders should be applied to downstream applica-
tions in areas such as open domain NLP systems.

Acknowledgements

The authors thank anonymous reviewers for their
helpful feedback. This work was partially sup-
ported by João Sedoc’s Microsoft Research Dis-
sertation Grant.

References
E. Agirre, C. Banea, C. Cardie, D. Cer, M. Diab,

A. Gonzalez-Agirre, W. Guo, I. Lopez-Gazpio,
M. Maritxalar, R. Mihalcea, G. Rigaua, L. Uriaa,
and J. Wiebeg. 2015. Semeval-2015 task 2: Seman-
tic textual similarity, English, Spanish and pilot on
interpretability. In Proceedings of the 9th interna-
tional workshop on semantic evaluation, pages 252–
263.

E. Agirre, C. Banea, C. Cardie, D. Cer, M. Diab,
A. Gonzalez-Agirre, W. Guo, R. Mihalcea,
G. Rigau, and J. Wiebe. 2014. Semeval-2014 task
10: Multilingual semantic textual similarity. In
Proceedings of the 8th international workshop on
semantic evaluation, pages 81–91.

E. Agirre, C. Banea, D. Cer, M. Diab, A. Gonzalez-
Agirre, R. Mihalcea, G. Rigau, and J. Wiebe. 2016.
Semeval-2016 task 1: Semantic textual similarity,
monolingual and cross-lingual evaluation. In Pro-
ceedings of the 10th International Workshop on Se-
mantic Evaluation (SemEval-2016), pages 497–511,
San Diego, California.

E. Agirre, D. Cer, M. Diab, A. Gonzalez-Agirre, and
W. Guo. 2013. Sem 2013 shared task: Semantic tex-
tual similarity. In Second Joint Conference on Lexi-
cal and Computational Semantics, volume 1, pages
32–43.

E. Agirre, M. Diab, D. Cer, and A. Gonzalez-Agirre.
2012. Semeval-2012 task 6: A pilot on semantic
textual similarity. In Proceedings of the First Joint
Conference on Lexical and Computational Seman-
tics, SemEval ’12, pages 385–393, Stroudsburg, PA,
USA. Association for Computational Linguistics.

S. Arora, Y. Liang, and T. Ma. 2017. A simple but
tough-to-beat baseline for sentence embeddings. In
International Conference on Learning Representa-
tions.

P. Bojanowski, E. Grave, A. Joulin, and T. Mikolov.
2017. Enriching word vectors with subword infor-
mation. Transactions of the Association for Compu-
tational Linguistics, 5:135–146.

D. Cer, Y. Yang, S. Kong, N. Hua, N. Limti-
aco, R. John, N. Constant, M. Guajardo-Cespedes,
S. Yuan, C. Tar, et al. 2018. Universal sentence en-
coder. arXiv preprint arXiv:1803.11175.

A. Conneau and D. Kiela. 2018. Senteval: An evalu-
ation toolkit for universal sentence representations.
arXiv preprint arXiv:1803.05449.

http://www.aclweb.org/anthology/S15-2045
http://www.aclweb.org/anthology/S15-2045
http://www.aclweb.org/anthology/S15-2045
http://www.aclweb.org/anthology/S14-2010
http://www.aclweb.org/anthology/S14-2010
http://www.aclweb.org/anthology/S16-1081
http://www.aclweb.org/anthology/S16-1081
https://aclanthology.info/pdf/S/S13/S13-1004.pdf
https://aclanthology.info/pdf/S/S13/S13-1004.pdf
http://anthology.aclweb.org/S/S12/S12-1051.pdf
http://anthology.aclweb.org/S/S12/S12-1051.pdf
https://openreview.net/pdf?id=SyK00v5xx
https://openreview.net/pdf?id=SyK00v5xx
https://arxiv.org/pdf/1803.11175.pdf
https://arxiv.org/pdf/1803.11175.pdf


3279

X. He and H. Jaeger. 2018. Overcoming catas-
trophic interference using conceptor-aided back-
propagation. In International Conference on Learn-
ing Representations.

H. Jaeger. 2014. Controlling recurrent neural networks
by conceptors. Technical report, Jacobs University
Bremen.

H. Jaeger. 2017. Using conceptors to manage neural
long-term memories for temporal patterns. Journal
of Machine Learning Research, 18(13):1–43.

M. Khodak, N. Saunshi, Y. Liang, T. Ma, B. Stewart,
and S. Arora. 2018. A la carte embedding: Cheap
but effective induction of semantic feature vectors.
In the Proceedings of ACL.

S. Lee. 2017. Toward continual learning for conversa-
tional agents. Technical report, Microsoft Research
AI - Redmond.

T. Liu, L. Ungar, and J. Sedoc. 2019. Unsupervised
post-processing of word vectors via conceptor nega-
tion. In Proceedings of the Thirty-Third AAAI Con-
ference on Artificial Intelligence (AAAI-2019), Hon-
olulu.

V. Mathur and A. Singh. 2018. The rapidly changing
landscape of conversational agents.

T. Mikolov, I. Sutskever, K. Chen, G. S. Corrado, and
J. Dean. 2013. Distributed representations of words
and phrases and their compositionality. In C. J. C.
Burges, L. Bottou, M. Welling, Z. Ghahramani, and
K. Q. Weinberger, editors, Advances in Neural In-
formation Processing Systems 26, pages 3111–3119.
Curran Associates, Inc.

M. Pagliardini, P. Gupta, and M. Jaggi. 2018. Unsuper-
vised Learning of Sentence Embeddings using Com-
positional n-Gram Features. In Proceedings of the
NAACL 2018.

J. Pennington, R. Socher, and C. D. Manning. 2014.
Glove: Global vectors for word representation. In
Proceedings of EMNLP, pages 1532–1543.

A. Wang, A. Singh, J. Michael, F. Hill, O. Levy, and
S. R. Bowman. 2019. GLUE: A multi-task bench-
mark and analysis platform for natural language un-
derstanding. In International Conference on Learn-
ing Representations.

J. Wieting, M. Bansal, K. Gimpel, K. Livescu, and
D. Roth. 2015. From paraphrase database to com-
positional paraphrase model and back. Transactions
of the Association for Computational Linguistics,
3:345–358.

Z. Yang, C. Zhu, and W. Chen. 2018. Zero-training
sentence embedding via orthogonal basis.

W. Yin and H. Schütze. 2015. Convolutional neural
network for paraphrase identification. In Proceed-
ings of the NAACL HLT 2015, pages 901–911.

F. Zenke, B. Poole, and S. Ganguli. 2017. Contin-
ual learning through synaptic intelligence. In Pro-
ceedings of the 34th International Conference on
Machine Learning, volume 70 of Proceedings of
Machine Learning Research, pages 3987–3995, In-
ternational Convention Centre, Sydney, Australia.
PMLR.

https://openreview.net/pdf?id=B1al7jg0b
https://openreview.net/pdf?id=B1al7jg0b
https://openreview.net/pdf?id=B1al7jg0b
https://arxiv.org/pdf/1403.3369.pdf
https://arxiv.org/pdf/1403.3369.pdf
http://www.jmlr.org/papers/volume18/15-449/15-449.pdf
http://www.jmlr.org/papers/volume18/15-449/15-449.pdf
http://www.aclweb.org/anthology/P18-1002
http://www.aclweb.org/anthology/P18-1002
https://www.microsoft.com/en-us/research/uploads/prod/2017/12/Toward-Continual-Learning-for-Conversational-Agents.pdf
https://www.microsoft.com/en-us/research/uploads/prod/2017/12/Toward-Continual-Learning-for-Conversational-Agents.pdf
https://arxiv.org/pdf/1811.11001.pdf
https://arxiv.org/pdf/1811.11001.pdf
https://arxiv.org/pdf/1811.11001.pdf
http://arxiv.org/abs/1803.08419
http://arxiv.org/abs/1803.08419
http://www.aclweb.org/anthology/N18-1049
http://www.aclweb.org/anthology/N18-1049
http://www.aclweb.org/anthology/N18-1049
https://openreview.net/forum?id=rJ4km2R5t7
https://openreview.net/forum?id=rJ4km2R5t7
https://openreview.net/forum?id=rJ4km2R5t7
http://arxiv.org/abs/arXiv:1810.00438
http://arxiv.org/abs/arXiv:1810.00438
http://www.aclweb.org/anthology/N15-1091
http://www.aclweb.org/anthology/N15-1091
http://proceedings.mlr.press/v70/zenke17a.html
http://proceedings.mlr.press/v70/zenke17a.html

