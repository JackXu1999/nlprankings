



















































JUMT at WMT2019 News Translation Task: A Hybrid Approach to Machine Translation for Lithuanian to English


Proceedings of the Fourth Conference on Machine Translation (WMT), Volume 2: Shared Task Papers (Day 1) pages 283–286
Florence, Italy, August 1-2, 2019. c©2019 Association for Computational Linguistics

283

JUMT at WMT2019 News Translation Task: A Hybrid approach to
Machine Translation for Lithuanian to English

Sainik Kumar Mahata, Avishek Garain, Adityar Rayala,
Dipankar Das, Sivaji Bandyopadhyay

Computer Science and Engineering
Jadavpur University, Kolkata, India

sainik.mahata@gmail.com, avishekgarain@gmail.com, mailsofadityar@gmail.com,
dipankar.dipnil2005@gmail.com, sivaji cse ju@yahoo.com

Abstract
In the current work, we present a description
of the system submitted to WMT 2019 News
Translation Shared task. The system was cre-
ated to translate news text from Lithuanian to
English. To accomplish the given task, our
system used a Word Embedding based Neu-
ral Machine Translation model to post edit
the outputs generated by a Statistical Machine
Translation model. The current paper docu-
ments the architecture of our model, descrip-
tions of the various modules and the results
produced using the same. Our system garnered
a BLEU score of 17.6.

1 Introduction

Machine Translation (MT) is automated transla-
tion of one natural language to another using a
computer. Translation, itself, is a very tough task
for both humans as well as a computer. It re-
quires a thorough understanding of the syntax and
semantics of both the languages under considera-
tion. For producing good translations, a MT sys-
tem needs good quality and sufficient amount of
parallel corpus (Mahata et al., 2016, 2017).

In the modern context, MT systems can be
categorized into Statistical Machine Translation
(SMT) and Neural Machine Translation (NMT).
SMT has had its share in making MT very popu-
lar among the masses. It includes creating statis-
tical models, whose input parameters are derived
from the analysis of bilingual text corpora, created
by professional translators (Weaver, 1955). The
state-of-art for SMT is Moses Toolkit1, created by
Koehn et al. (2007), incorporates subcomponents
like Language Model generation, Word Alignment
and Phrase Table generation. Various works have
been done in SMT (Lopez, 2008; Koehn, 2009)
and it has shown good results for many language
pairs.

1http://www.statmt.org/moses/

On the other hand NMT (Bahdanau et al.,
2014), though relatively new, has shown con-
siderable improvements in the translation results
when compared to SMT (Mahata et al., 2018b).
This includes better fluency of the output and bet-
ter handling of the Out-of-Vocabulary problem.
Unlike SMT, it doesnt depend on alignment and
phrasal unit translations (Kalchbrenner and Blun-
som, 2013). On the contrary, it uses an Encoder-
Decoder approach incorporating Recurrent Neu-
ral Cells (Cho et al., 2014). As a result, when
given sufficient amount of training data, it gives
much more accurate results when compared to
SMT (Doherty et al., 2010; Vaswani et al., 2013;
Liu et al., 2014).

For the given task2, we attempted to create a MT
system that can translate sentences from Lithua-
nian to English. Since, using only SMT or NMT
models leads to some or the other disadvantages,
we tried to use both in a pipeline. This leads to an
improvement of the results over the individual us-
age of either SMT or NMT. The main idea was to
train a SMT model for translating Lithuanian lan-
guage to English. Thereafter, a test set was trans-
lated using this model. Then, a word embedding
based NMT model was trained to learn the map-
pings between the SMT output (in English) and
the gold standard data (in English).

The organizers provided the required parallel
corpora, consisting of 9,62,022 sentence pairs,
for training the translation model. Among this,
7,62,022 pairs was used to train the SMT system
and 2,00,000 pairs were used to test the SMT sys-
tem and then train the NMT system. The statistics
of the parallel corpus is depicted in 1.

The remainder of the paper is organized as fol-
lows. Section 2 will describe the methodology of
creating the SMT and the NMT model and will in-

2http://www.statmt.org/wmt19/translation-task.html



284

# sentences in Lt corpus 9,62,022
# sentences in En corpus 9,62,022
# words in Lt corpus 1,16,65,937
# words in En corpus 1,56,22,488
# word vocab size for Lt corpus 4,88,593
# word vocab size for En corpus 2,27,131

Table 1: Statistics of the Lithuanian-English parallel
corpus provided by the organizers. ”#” depicts No. of.

”Lt” and ”En” depict Lithuanian and English,
respectively. ”vocab” means vocabulary of unique

tokens.

clude the preprocessing steps, a brief summary of
the encoder-decoder approach and the architecture
of our system. This will be followed by the results
and conclusion in Section 3 and 4, respectively.

2 Methodology

2.1 SMT
For designing the model we followed some stan-
dard preprocessing steps on 7,62,022 sentence
pairs, which are discussed below.

2.1.1 Preprocessing
The following steps were applied to preprocess
and clean the data before using it for training our
Statistical machine translation model. We used the
NLTK toolkit3 for performing the steps.

• Tokenization: Given a character sequence
and a defined document unit, tokenization is
the task of chopping it up into pieces, called
tokens. In our case, these tokens were words,
punctuation marks, numbers. NLTK supports
tokenization of Lithuanian as well as English
texts.

• Truecasing: This refers to the process of
restoring case information to badly-cased or
non-cased text (Lita et al., 2003). Truecasing
helps in reducing data sparsity.

• Cleaning: Long sentences ( of tokens > 80)
were removed.

2.1.2 Moses
Moses is a statistical machine translation system
that allows you to automatically train translation
models for any language pair, when trained with
a large collection of translated texts (parallel cor-
pus). Once the model has been trained, an efficient

3https://www.nltk.org/

search algorithm quickly finds the highest proba-
bility translation among the exponential number of
choices.

We trained Moses using 7,62,022 sentence pairs
provided by WMT2019, with Lithuanian as the
source language and English as the target lan-
guage. For building the Language Model we used
KenLM4 (Heafield, 2011) with 7-grams from the
target corpus. The English monolingual corpus
from WMT2019 was used to build the language
model

Training the Moses statistical MT system re-
sulted in generation of Phrase Model and Trans-
lation Model that helps in translating between
source-target language pairs. Moses scores the
phrase in the phrase table with respect to a given
source sentence and produces best scored phrases
as output.

2.2 NMT
Neural machine translation (NMT) is an approach
to machine translation that uses neural networks
to predict the likelihood of a sequence of words.
The main functionality of NMT is based on the se-
quence to sequence (seq2seq) architecture, which
is described in Section 2.2.1.

2.2.1 Sequence to Sequence Model
Sequence to Sequence learning is a concept in
neural networks, that helps it to learn sequences.
Essentially, it takes as input a sequence of tokens
(words in our case)

X = {x1, x2, ..., xn}

and tries to generate the target sequence as output

Y = {y1, y2, ..., ym}

where xi and yi are the input and target symbols
respectively.

Sequence to Sequence architecture consists of
two parts, an Encoder and a Decoder.

The encoder takes a variable length sequence
as input and encodes it into a fixed length vec-
tor, which is supposed to summarize its meaning
and taking into account its context as well. A
Long Short Term Memory (LSTM) cell was used
to achieve this. The uni-directional encoder reads
the words of the Lithuanian texts, as a sequence
from one end to the other (left to right in our case),

~ht = ~f enc(Ex(xt),~ht-1)

4https://kheafield.com/code/kenlm/



285

Here, Ex is the input embedding lookup table (dic-
tionary), ~f enc is the transfer function for the LSTM
recurrent unit. The cell state h and context vector
C is constructed and is passed on to the decoder.

The decoder takes as input, the context vector C
and the cell state h from the encoder, and computes
the hidden state at time t as,

st = fdec(Ey(yt-1), st-1, ct)

Subsequently, a parametric function outk re-
turns the conditional probability using the next tar-
get symbol k.

(yt = k | y < t,X) =
1

Z
exp(outk(Ey(yt−1), st, ct))

Z is the normalizing constant,∑
jexp(outj(Ey(yt − 1), st, ct))

The entire model can be trained end-to-end by
minimizing the log likelihood which is defined as

L = − 1
N

N∑
n=1

Tyn∑
t=1

logp(yt = yt
n, y¡t

n, Xn)

where N is the number of sentence pairs, and Xn

and ytn are the input sentence and the t-th target
symbol in the n-th pair respectively.

The input to the decoder was one hot tensor
(embeddings at word level) of 2,00,000 English
sentences while the target data was identical, but
with an offset of one time-step ahead.

2.3 Architecture

                                            NMT

SMT (Moses
Toolkit)

Lituanian-
English

parallel Data
Training

Complete
Trained SMT

model

Lithuanian
Test Data

Translated
English

Data

Gold
Standard
English

Data

Training
CompleteHybrid Model

Lithuanian
data

Final
Translated

Data

Testing

Training

Figure 1: Architecture

2.3.1 Training
For the training purpose, 7,62,202 , prepro-
cessed, Lituanian-English sentence pairs were fed
to Moses Toolkit. This created a SMT transla-
tion model with Lithuanian as the source language
and English as the target language. Thereafter, we
had 2,00,000 Lithuanian-English sentence pairs,
from which the Lithuanian sentences were given
as input to the SMT model and it gave 2,00,000
translated English sentences as output. Now, this
2,00,000 translated English sentences and the re-
spective gold standard 2,00,000 sentences, from
the Lithuanian-English sentence pair, were given
as input to a word embedding based NMT model.
As a result, this constituted our Hybrid model.

2.3.2 Testing
For the testing purpose, 10k Lithuanian Sentences
were fed to the Hybrid model, and the output,
when checked using BLEU (Papineni et al., 2002),
resulted in an accuracy of 21.6. The training and
testing architecture is shown in Figure 1

3 Results

WMT2019 provided us with a test set of Lithua-
nian sentences in .SGM format. This file was
parsed and fed to our hybrid system. The output
file was again converted to .SGM format and sub-
mitted to the organizers. Our system garnered a
BLEU Score of 17.6, when it was scored using au-
tomated accuracy metrics. Other accuracy scores
are mentioned in Table 2.

Metric Score
BLEU 17.6

BLEU-cased 16.6
TER 0.762

BEER 2.0 0.497
CharactTER 0.718

Table 2: Accuracy scores calculated using various
autmoated evaluation metrics.

4 Conclusion

The paper presents the working of the translation
system submitted to WMT 2019 News Translation
shared task. We have used Word Embedding based
NMT on top of SMT, for our proposed system. We
have used a single LSTM layer as an encoder as
well as a decoder. As a future prospect, we plan
to use more LSTM layers in our model. We plan



286

to create another model that incrementally trains
both the SMT and NMT systems in a pipeline to
improve the translation quality.

Acknowledgement

The reported work is supported by Media Lab
Asia, MeitY, Government of India, under the
Visvesvaraya PhD Scheme for Electronics & IT.

References
Dzmitry Bahdanau, Kyunghyun Cho, and Yoshua Ben-

gio. 2014. Neural machine translation by jointly
learning to align and translate. arXiv preprint
arXiv:1409.0473.

Ondřej Bojar, Christian Federmann, Mark Fishel,
Yvette Graham, Barry Haddow, Matthias Huck,
Philipp Koehn, and Christof Monz. 2018. Find-
ings of the 2018 conference on machine translation
(WMT18). In Proceedings of the Third Conference
on Machine Translation, Volume 2: Shared Task Pa-
pers, Brussels, Belgium. Association for Computa-
tional Linguistics.

Kyunghyun Cho, Bart Van Merriënboer, Dzmitry Bah-
danau, and Yoshua Bengio. 2014. On the properties
of neural machine translation: Encoder-decoder ap-
proaches. arXiv preprint arXiv:1409.1259.

Stephen Doherty, Sharon O?Brien, and Michael Carl.
2010. Eye tracking as an mt evaluation technique.
Machine translation, 24(1):1–13.

Kenneth Heafield. 2011. KenLM: faster and smaller
language model queries. In Proceedings of the
EMNLP 2011 Sixth Workshop on Statistical Ma-
chine Translation, pages 187–197, Edinburgh, Scot-
land, United Kingdom.

Nal Kalchbrenner and Phil Blunsom. 2013. Recur-
rent continuous translation models. In EMNLP, vol-
ume 3, page 413.

Philipp Koehn. 2009. Statistical machine translation.
Cambridge University Press.

Philipp Koehn, Hieu Hoang, Alexandra Birch, Chris
Callison-Burch, Marcello Federico, Nicola Bertoldi,
Brooke Cowan, Wade Shen, Christine Moran,
Richard Zens, et al. 2007. Moses: Open source
toolkit for statistical machine translation. In Pro-
ceedings of the 45th annual meeting of the ACL on
interactive poster and demonstration sessions, pages
177–180. Association for Computational Linguis-
tics.

Jason Lee, Kyunghyun Cho, and Thomas Hof-
mann. 2016. Fully character-level neural machine
translation without explicit segmentation. CoRR,
abs/1610.03017.

Wang Ling, Isabel Trancoso, Chris Dyer, and Alan W.
Black. 2015. Character-based neural machine trans-
lation. CoRR, abs/1511.04586.

Lucian Vlad Lita, Abe Ittycheriah, Salim Roukos, and
Nanda Kambhatla. 2003. Truecasing. In Proceed-
ings of the 41st Annual Meeting on Association for
Computational Linguistics-Volume 1, pages 152–
159. Association for Computational Linguistics.

Shujie Liu, Nan Yang, Mu Li, and Ming Zhou. 2014.
A recursive recurrent neural network for statistical
machine translation.

Adam Lopez. 2008. Statistical machine translation.
ACM Computing Surveys (CSUR), 40(3):8.

Sainik Mahata, Dipankar Das, and Santanu Pal. 2016.
Wmt2016: A hybrid approach to bilingual document
alignment. In WMT, pages 724–727.

Sainik Kumar Mahata, Dipankar Das, and Sivaji
Bandyopadhyay. 2017. Bucc2017: A hybrid ap-
proach for identifying parallel sentences in compa-
rable corpora. ACL 2017, page 56.

Sainik Kumar Mahata, Dipankar Das, and Sivaji
Bandyopadhyay. 2018a. Jucbnmt at wmt2018 news
translation task: Character based neural machine
translation of finnish to english. In Proceedings
of the Third Conference on Machine Translation:
Shared Task Papers, pages 445–448.

Sainik Kumar Mahata, Dipankar Das, and Sivaji
Bandyopadhyay. 2018b. Mtil2017: Machine trans-
lation using recurrent neural network on statistical
machine translation. Journal of Intelligent Systems,
pages 1–7.

Sainik Kumar Mahata, Soumil Mandal, Dipankar Das,
and Sivaji Bandyopadhyay. 2018c. Smt vs nmt: A
comparison over hindi & bengali simple sentences.
arXiv preprint arXiv:1812.04898.

Kishore Papineni, Salim Roukos, Todd Ward, and Wei-
Jing Zhu. 2002. Bleu: a method for automatic eval-
uation of machine translation. In Proceedings of
the 40th annual meeting on association for compu-
tational linguistics, pages 311–318. Association for
Computational Linguistics.

Ashish Vaswani, Yinggong Zhao, Victoria Fossum, and
David Chiang. 2013. Decoding with large-scale
neural language models improves translation. In
EMNLP, pages 1387–1392.

Warren Weaver. 1955. Translation. Machine transla-
tion of languages, 14:15–23.

https://kheafield.com/papers/avenue/kenlm.pdf
https://kheafield.com/papers/avenue/kenlm.pdf
http://arxiv.org/abs/1610.03017
http://arxiv.org/abs/1610.03017
http://arxiv.org/abs/1511.04586
http://arxiv.org/abs/1511.04586

