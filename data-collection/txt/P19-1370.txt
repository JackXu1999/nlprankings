



















































Learning a Matching Model with Co-teaching for Multi-turn Response Selection in Retrieval-based Dialogue Systems


Proceedings of the 57th Annual Meeting of the Association for Computational Linguistics, pages 3805–3815
Florence, Italy, July 28 - August 2, 2019. c©2019 Association for Computational Linguistics

3805

Learning a Matching Model with Co-teaching for Multi-turn Response
Selection in Retrieval-based Dialogue Systems

Jiazhan Feng1∗ , Chongyang Tao1∗ , Wei Wu2, Yansong Feng1,
Dongyan Zhao1,3 and Rui Yan1,3†

1Institute of Computer Science and Technology, Peking University, Beijing, China
2Microsoft Corporation, Beijing, China

3Center for Data Science, Peking University, Beijing, China
1fengjiazhan@foxmail.com 2wuwei@microsoft.com

1,3{chongyangtao,fengyansong,zhaody,ruiyan}@pku.edu.cn

Abstract

We study learning of a matching model for
response selection in retrieval-based dialogue
systems. The problem is equally important
with designing the architecture of a model, but
is less explored in existing literature. To learn
a robust matching model from noisy train-
ing data, we propose a general co-teaching
framework with three specific teaching strate-
gies that cover both teaching with loss func-
tions and teaching with data curriculum. Un-
der the framework, we simultaneously learn
two matching models with independent train-
ing sets. In each iteration, one model transfers
the knowledge learned from its training set to
the other model, and at the same time receives
the guide from the other model on how to over-
come noise in training. Through being both
a teacher and a student, the two models learn
from each other and get improved together.
Evaluation results on two public data sets in-
dicate that the proposed learning approach can
generally and significantly improve the perfor-
mance of existing matching models.

1 Introduction

Human-machine conversation is a long-standing
goal of artificial intelligence. Recently, building a
dialogue system for open domain human-machine
conversation is attracting more and more atten-
tion due to both availability of large-scale human
conversation data and powerful models learned
with neural networks. Existing methods are either
retrieval-based or generation-based. Retrieval-
based methods reply to a human input by select-
ing a proper response from a pre-built index (Ji
et al., 2014; Zhou et al., 2018b; Yan and Zhao,
2018), while generation-based methods synthe-
size a response with a natural language model
(Shang et al., 2015; Serban et al., 2017). In this

∗Equal Contribution.
†Corresponding author: Rui Yan (ruiyan@pku.edu.cn).

work, we study the problem of response selec-
tion for retrieval-based dialogue systems, since
retrieval-based systems are often superior to their
generation-based counterparts on response fluency
and diversity, are easy to evaluate, and have pow-
ered some real products such as the social bot Xi-
aoIce from Microsoft (Shum et al., 2018), and the
E-commerce assistant AliMe Assist from Alibaba
Group (Li et al., 2017).

A key problem in response selection is how to
measure the matching degree between a conver-
sation context (a message with several turns of
conversation history) and a response candidate.
Existing studies have paid tremendous effort to
build a matching model with neural architectures
(Lowe et al., 2015; Zhou et al., 2016; Wu et al.,
2017; Zhou et al., 2018b), and advanced mod-
els such as the deep attention matching network
(DAM) (Zhou et al., 2018b) have achieved im-
pressive performance on benchmarks. In contrary
to the progress on model architectures, there is
little exploration on learning approaches of the
models. On the one hand, neural matching mod-
els are becoming more and more complicated; on
the other hand, all models are simply learned by
distinguishing human responses from some au-
tomatically constructed negative response candi-
dates (e.g., by random sampling). Although this
heuristic approach can avoid expensive and ex-
hausting human labeling, it suffers from noise in
training data, as many negative examples are actu-
ally false negatives1. As a result, when evaluating
a well-trained model using human judgment, one
can often observe a significant gap between train-
ing and test, as will be seen in our experiments.

In this paper, instead of configuring new archi-
tectures, we investigate how to effectively learn
existing matching models from noisy training

1Responses sampled from other contexts may also be
proper candidates for a given context.



3806

data, given that human labeling is infeasible in
practice. We propose learning a matching model
under a general co-teaching framework. The
framework maintains two peer models on two i.i.d.
training sets, and lets the two models teach each
other during learning. One model transfers knowl-
edge learned from its training set to its peer model
to help it combat with noise in training, and at
the same time gets updated under the guide of
its peer model. Through playing both a role of a
teacher and a role of a student, the two peer mod-
els evolve together. Under the framework, we con-
sider three teaching strategies including teaching
with dynamic margins, teaching with dynamic in-
stance weighting, and teaching with dynamic data
curriculum. The first two strategies let the two
peer models mutually “label” their training exam-
ples, and transfer the soft labels from one model to
the other through loss functions; while in the last
strategy, the two peer models directly select train-
ing examples for each other.

To examine if the proposed learning approach
can generally bridge the gap between training
and test, we select sequential matching network
(SMN) (Wu et al., 2017) and DAM as representa-
tive matching models, and conduct experiments on
two public data sets with human judged test exam-
ples. The first data set is the Douban Conversation
benchmark published in Wu et al. (2017), and the
second one is the E-commerce Dialogue Corpus
published in Zhang et al. (2018b) where we recruit
human annotators to judge the appropriateness of
response candidates regarding to their contexts on
the entire test set2. Evaluation results indicate that
co-teaching with the three strategies can consis-
tently improve the performance of both matching
models over all metrics on both data sets with sig-
nificant margins. On the Douban data, the most ef-
fective strategy is teaching with dynamic margins
that brings 2.8% absolute improvement to SMN
and 2.5% absolute improvement to DAM on P@1;
while on the E-commerce data, the best strategy is
teaching with dynamic data curriculum that brings
2.4% absolute improvement to SMN and 3.2% ab-
solute improvement to DAM on P@1. Through
further analysis, we also unveil how the peer mod-
els get evolved together in learning and how the
choice of peer models affects the performance of

2We have released labeled test data of E-commerce
Dialogue Corpus at https://drive.google.
com/open?id=1HMDHRU8kbbWTsPVr6lKU_
-Z2Jt-n-dys.

learning.
Our contributions in the paper are four-folds:

(1) proposal of learning matching models for re-
sponse selection with a general co-teaching frame-
work; (2) proposal of two new teaching strategies
as special cases of the framework; and (3) empiri-
cal verification of the effectiveness of the proposed
learning approach on two public data sets.

2 Problem Formalization

Given a data set D = {(yi, ci, ri)}Ni=1 where ci
represents a conversation context, ri is a response
candidate, and yi ∈ {0, 1} denotes a label with
yi = 1 indicating ri a proper response for ci and
otherwise yi = 0, the goal of the task of response
selection is to learn a matching model s(·, ·) from
D. For any context-response pair (c, r), s(c, r)
gives a score that reflects the matching degree be-
tween c and r, and thus allows one to rank a set
of response candidates according to the scores for
response selection.

To obtain a matching model s(·, ·), one needs to
deal with two problems: (1) how to define s(·, ·);
and (2) how to learn s(·, ·). Existing studies con-
centrate on Problem (1) by defining s(·, ·) with so-
phisticated neural architectures (Wu et al., 2017;
Zhou et al., 2018b), and leave Problem (2) in a
simple default setting where s(·, ·) is optimized
with D using a loss function L usually defined
by cross entropy. Ideally, when D is large enough
and has good enough quality, a carefully designed
s(·, ·) learned using the existing paradigm should
be able to well capture the semantics in dialogues.
The fact is that since large-scale human labeling
is infeasible,D is established under simple heuris-
tics where negative response candidates are auto-
matically constructed (e.g., by random sampling)
with a lot of noise. As a result, advanced match-
ing models only have sub-optimal performance in
practice. The gap between ideal and reality mo-
tivates us to pursue a better learning approach, as
will be presented in the next section.

3 Learning a Matching Model through
Co-teaching

In this section, we present co-teaching, a new
framework for learning a matching model. We first
give a general description of the framework, and
then elaborate three teaching strategies as special
cases of the framework.

https://drive.google.com/open?id=1HMDHRU8kbbWTsPVr6lKU_-Z2Jt-n-dys
https://drive.google.com/open?id=1HMDHRU8kbbWTsPVr6lKU_-Z2Jt-n-dys
https://drive.google.com/open?id=1HMDHRU8kbbWTsPVr6lKU_-Z2Jt-n-dys


3807

("#$,&$)

("#(,&() ("#$,&$)

")$ ")(

("#(,&()

")

Figure 1: Co-teaching framework.

3.1 Co-teaching Framework

The idea of co-teaching is to maintain two peer
models and let them learn from each other by si-
multaneously acting as a teacher and a student.

Figure 1 gives an overview of the co-teaching
framework. The learning program starts from two
pre-trained peer models A and B. In each itera-
tion, a batch of training data is equally divided
into two sub-batches without overlap as D̄A and
D̄B for B and A respectively. A and B then exam-
ine their sub-batches and output learning protocols
(D̃B,JB) and (D̃A,JA) for their peers, where D̃B
and D̃A are training data and JB and JA are loss
functions. After that, A and B get updated ac-
cording to (D̃A,JA) and (D̃B,JB) respectively,
and the learning program moves to the next iter-
ation. Algorithm 1 describes the pseudo code of
co-teaching.

The rationale behind the co-teaching framework
is that the peer models can gradually obtain differ-
ent abilities from the different training data as the
learning process goes on, even when the two mod-
els share the same architecture and the same initial
configuration, and thus, they can acquire differ-
ent knowledge from their training data and trans-
fer the knowledge to their peers to make them ro-
bust over the noise in the data. This resembles two
peer students who learn from different but related
materials. Through knowledge exchange, one can
inspire the other to get new insights from his or
her material, and thus the two students get im-

proved together. Advantages of the framework re-
side in various aspects: first, the peer models have
their own “judgment” regarding to the quality of
the same training example. Thus, one model may
guide the other how to pick high quality training
examples and circumvent noise; second, since the
peer models are optimized with different training
sub-batches, knowledge from one sub-batch could
be supplementary to the other through exchange
of learning protocols; third, the two peer models
may have different decision boundaries, and thus
are good at recognizing different patterns in data.
This may allow one model to help the other rectify
errors in learning.

To instantiate the co-teaching framework, one
needs to specify initialization of the peer models
and teaching strategies that can form the learning
protocols. In this work, to simplify the learning
program of co-teaching, we assume that model A
and model B are initialized by the same matching
model pre-trained with the entire training data. We
focus on design of teaching strategies, as will be
elaborated in the next section.

3.2 Teaching Strategies
We consider the following three strategies that
cover teaching with dynamic loss functions and
teaching with data curriculum.

Teaching with Dynamic Margins: The strat-
egy fixes D̄A and D̄B as D̃A and D̃B respec-
tively, and dynamically creates loss functions as
the learning protocols. Without loss of general-
ity, the training data D can be re-organized in a
form of {(ci, r+i , r

−
i )}N

′
i=1, where r

+
i and r

−
i re-

fer to a positive response candidate and a neg-
ative response candidate regarding to ci respec-
tively. Suppose that D̄A = {(cA,i, r+A,i, r

−
A,i)}

NA
i=1

and D̄B = {(cB,i, r+B,i, r
−
B,i)}

NB
i=1, then model A

evaluates each (cB,i, r+B,i, r
−
B,i) ∈ D̄B with match-

ing scores sA(cB,i, r+B,i) and sA(cB,i, r
−
B,i), and

form a margin for model B as

∆B,i = max
(

0, λ
(
sA(cB,i, r

+
B,i)− sA(cB,i, r

−
B,i)

))
, (1)

where λ is a hyper-parameter. Similarly,
∀(cA,i, r+A,i, r

−
A,i) ∈ D̄A, the margin provided by

model B for model A can be formulated as

∆A,i = max
(

0, λ
(
sB(cA,i, r

+
A,i)− sB(cA,i, r

−
A,i)

))
, (2)

where sB(cA,i, r+A,i) and sB(cA,i, r
−
A,i) are match-

ing scores calculated with model B. Loss functions



3808

Algorithm 1: The proposed co-teaching framework
Input: model parameters θA, θB , learning rate η, number of epochs nT , number of iterations nK ;

1 for T = 1, 2, ..., TnT do
2 Shuffle training set D;
3 for K = 1, 2, ...,KnK do
4 Fetch a batch of training data D̄;
5 Distributes D̄ equally to two sub-batches of training data D̄A, D̄B; . D̄A, D̄B ⊂ D̄
6 Obtain learning protocol (D̃B,JB) from model A and D̄B;
7 Obtain learning protocol (D̃A,JA) from model B and D̄A;
8 Update θA = θA − η∇JA(D̃A); . Update model A by (D̃A,JA).
9 Update θB = θB − η∇JB(D̃B); . Update model B by (D̃B,JB).

10 end
11 end

Output: θA, θB .

JA and JB are then defined as

JA =
NA∑
i=1

max{0,∆A,i − sA(cA,i, r+A,i)

+ sA(cA,i, r
−
A,i)},

(3)

JB =
NB∑
i=1

max{0,∆B,i − sB(cB,i, r+B,i)

+ sB(cB,i, r
−
B,i)}.

(4)

Intuitively, one model may assign a small margin
to a negative example if it identifies the example as
a false negative. Then, its peer model will pay less
attention to such an example in its optimization.
This is how the two peer models help each other
combat with noise under the strategy of teaching
with dynamic margins.

Teaching with Dynamic Instance Weighting:
Similar to the first strategy, this strategy also de-
fines the learning protocols with dynamic loss
functions. The difference is that this strategy
penalizes low-quality negative training examples
with weights. Formally, let us represent D̄B as
{(yB,i, cB,i, rB,i)}

N ′B
i=1, then ∀(yB,i, cB,i, rB,i) ∈

D̄B , its weight from model A is defined as

wB,i =

{
1 yB,i = 1
1− sA(cB,i, rB,i) yB,i = 0

(5)

Similarly, ∀(yA,i, cA,i, rA,i) ∈ D̄A, model B as-
sign a weight as

wA,i =

{
1 yA,i = 1
1− sB(cA,i, rA,i) yA,i = 0

(6)

Then, loss functions JA and JB can be formu-
lated as

JA =
N ′A∑
i=1

wA,iL(yA,i, sA(cA,i, rA,i)), (7)

JB =
N ′B∑
i=1

wB,iL(yB,i, sB(cB,i, rB,i)), (8)

where L(·, ·) is defined by cross entropy:

−y log(s(c, r)) + (1− y) log(1− s(c, r)). (9)

In this strategy, negative examples that are iden-
tified as false negatives by one model will obtain
small weights from the model, and thus be less im-
portant than other examples in the learning process
of the other model.

Teaching with Dynamic Data Curriculum: In
the first two strategies, knowledge is transferred
mutually through “soft labels” defined by the peer
matching models. In this strategy, we directly
transfer data to each model. During learning, JA
and JB are fixed as cross entropy, and the learn-
ing protocols vary by D̃A and D̃B . Inspired by
Han et al. (2018), we construct D̃A and D̃B with
small-loss instances. These instances are far from
decision boundaries of the two models, and thus
are more likely to be true positives and true nega-
tives. Formally, D̃A and D̃B are defined as

D̃B = argmin|D̃B|=δ|D̄B|,D̃B⊂D̄BJA(D̃B),

D̃A = argmin|D̃A|=δ|D̄A|,D̃A⊂D̄AJB(D̃A),
(10)



3809

where | · | measures the size of a set, JA(D̃B) and
JB(D̃A) stand for accumulation of loss on the cor-
responding data sets, and δ is a hyper-parameter.
Note that we do not shrink δ as in Han et al.
(2018), since fixing δ as a constant yields a sim-
ple yet effective learning program, as will be seen
in our experiments.

4 Experiments

We test our learning schemes on two public data
sets with human annotated test examples.

4.1 Experimental Setup

The first data set we use is Douban Conversation
Corpus (Douban) (Wu et al., 2017) which is a
multi-turn Chinese conversation data set crawled
from Douban group3. The data set consists of
1 million context-response pairs for training, 50
thousand pairs for validation, and 6, 670 pairs for
test. In the training set and the validation set, the
last turn of each conversation is regarded as a posi-
tive response and negative responses are randomly
sampled. The ratio of the positive and the negative
is 1:1 in training and validation. In the test set,
each context has 10 response candidates retrieved
from an index whose appropriateness regarding to
the context is judged by human annotators. The
average number of positive responses per context
is 1.18. Following Wu et al. (2017), we employ
R10@1, R10@2, R10@5, mean average precision
(MAP), mean reciprocal rank (MRR), and preci-
sion at position 1 (P@1) as evaluation metrics.

In addition to the Douban data, we also choose
E-commerce Dialogue Corpus (ECD) (Zhang
et al., 2018b) as an experimental data set. The
data consists of real-world conversations between
customers and customer service staff in Taobao4,
which is the largest e-commerce platform in
China. There are 1 million context-response pairs
in the training set, and 10 thousand pairs in both
the validation set and the test set. Each context in
the training set and the validation set corresponds
to one positive response candidate and one nega-
tive response candidate, while in the test set, the
number of response candidates per context is 10
with only one of them positive. In the released
data, human responses are treated as positive re-
sponses, and negative ones are automatically col-
lected by ranking the response corpus based on

3https://www.douban.com/group
4https://www.taobao.com

conversation history augmented messages using
Apache Lucene5. Thus, we recruit 3 active users
of Taobao as human annotators, and ask them to
judge each context-response pair in the test data
(i.e., in total 10 thousand pairs are judged). If a
response can naturally reply to a message given
the conversation history before it, then the context-
response pair is labeled as 1, otherwise, it is la-
beled as 0. Each pair receives three labels and the
majority is taken as the final decision. On aver-
age, each context has 2.5 response candidates la-
beled as positive. There are only 33 contexts with
all responses labeled as positive or negative, and
we remove them from test. Fleiss’ kappa (Fleiss,
1971) of the labeling is 0.64, indicating substan-
tial agreement among the annotators. We employ
the same metrics as in Douban for evaluation.

Note that we do not choose the Ubuntu Dia-
logue Corpus (Lowe et al., 2015) for experiments,
because (1) the test set of the Ubuntu data is con-
structed by randomly sampling; and (2) conversa-
tions in the Ubuntu data are in a casual style and
too technical, and thus it is very difficult for us to
find qualified human annotators to label the data.

4.2 Matching Models

We select the following two models that achieve
superior performance on benchmarks to test our
learning approach.

SMN: (Wu et al., 2017) first lets each utterance
in a context interact with a response, and forms
a matching vector for the pair through CNNs.
Matching vectors of all the pairs are then aggre-
gated with an RNN as a matching score.

DAM: (Zhou et al., 2018b) performs match-
ing under a representation-matching-aggregation
framework, and represents a context and a re-
sponse with stacked self-attention and cross-
attention.

Both models are implemented with TensorFlow
according to the details in Wu et al. (2017) and
Zhou et al. (2018b). To implement co-teaching,
we pre-train the two models using the training
sets of Douban and ECD, and tune the models
with the validation sets of the two data. Each
pre-trained model is used to initialize both model
A and model B. After co-teaching, the one in
A and B that performs better on the validation
sets is picked for comparison. We denote models
learned with the teaching strategies in Section 3.2

5http://lucene.apache.org/

https://www.douban.com/group
https://www.taobao.com
http://lucene.apache.org/


3810

Douban ECD
MAP MRR P@1 R10@1 R10@2 R10@5 MAP MRR P@1 R10@1 R10@2 R10@5

SMN (Wu et al., 2017) 0.529 0.569 0.397 0.233 0.396 0.724 - - - - - -
SMN-Pre-training 0.527 0.570 0.396 0.236 0.392 0.734 0.662 0.742 0.598 0.302 0.464 0.757
SMN-Margin 0.559∗ 0.601∗ 0.424∗ 0.260∗ 0.426∗ 0.764∗ 0.674 0.750 0.615 0.318 0.481 0.765
SMN-Weighting 0.550∗ 0.593∗ 0.414 0.253 0.413 0.762∗ 0.666 0.745 0.601 0.311 0.475 0.775
SMN-Curriculum 0.548 0.594∗ 0.418∗ 0.254∗ 0.411 0.763∗ 0.678 0.762∗ 0.622∗ 0.323∗ 0.487∗ 0.778∗

DAM (Zhou et al., 2018b) 0.550 0.601 0.427 0.254 0.410 0.757 - - - - - -
DAM-Pre-training 0.552 0.605 0.426 0.258 0.408 0.766 0.685 0.756 0.621 0.325 0.491 0.772
DAM-Margin 0.583∗ 0.628∗ 0.451∗ 0.276∗ 0.454∗ 0.806∗ 0.692 0.777∗ 0.652∗ 0.337 0.506 0.778
DAM-Weighting 0.579∗ 0.629∗ 0.453∗ 0.272 0.454∗ 0.809∗ 0.695 0.775 0.651∗ 0.343 0.497 0.789
DAM-Curriculum 0.580∗ 0.623∗ 0.442 0.269 0.459∗ 0.804∗ 0.696 0.777∗ 0.653∗ 0.345∗ 0.506 0.781

Table 1: Evaluation results on the two data sets. Numbers marked with ∗ mean that the improvement is statisti-
cally significant compared with the best baseline (t-test with p-value < 0.05). Numbers in bold indicate the best
strategies for the corresponding models on specific metrics.

as Model-Margin, Model-Weighting, and Model-
Curriculum respectively, where “Model” refers to
either SMN or DAM. These models are compared
with the pre-trained model denoted as Model-Pre-
training, and those reported in Wu et al. (2017);
Zhou et al. (2018b); Zhang et al. (2018b).

4.3 Implementation Details

We limit the maximum number of utterances in
each context as 10 and the maximum number
of words in each utterance and response as 50
for computational efficiency. Truncation or zero-
padding are applied when necessary. Word em-
bedding is pre-trained with Word2Vec (Mikolov
et al., 2013) on the training sets of Douban and
ECD, and the dimension of word vectors is 200.
The co-teaching framework is implemented with
TensorFlow. In co-teaching, learning rates (i.e.,
η in Algorithm 1) in dynamic margins, dynamic
instance weighting, and dynamic data curriculum
are set as 0.001, 0.0001, and 0.0001 respectively.
We choose 200 in co-teaching with SMN and 50 in
co-teaching with DAM as the size of mini-batches.
Optimization is conducted using stochastic gradi-
ent descent with Adam algorithm (Kingma and
Ba, 2015). In teaching with dynamic margins, we
vary λ in {1, 12 ,

1
3 ,

1
5 ,

1
10 ,

1
15 ,

1
20}, and choose

1
10

for SMN on Douban, 12 for SMN on ECD,
1
3 for

DAM on Douban, and 12 for DAM on ECD. In
teaching with dynamic data curriculum, we select
δ in {0.1, 0.2, ..., 0.9, 1.0}, and find that 0.9 is the
best choice for both models on both data sets.

4.4 Evaluation Results

Table 1 reports evaluation results of co-teaching
with the three teaching strategies on the two data
sets. We can see that all teaching strategies can
improve the original models on both data sets, and

improvement from the best strategy is statistically
significant (t-test with p-value < 0.05) on most
metrics. On Douban, the best strategy for SMN is
teaching with dynamic margins, and it is compa-
rable with teaching with dynamic instance weight-
ing for DAM, while on ECD, for both SMN and
DAM, the best strategy is teaching with dynamic
data curriculum. The difference may stem from
the nature of training sets of the two data. The
training set of Douban is built from random sam-
pling, while the training set of ECD is constructed
through response retrieval that may contain more
false negatives. Thus, in training, Douban could
be cleaner than ECD, making “hard data filtering”
more effective than “soft labeling” on ECD. It is
worth noting that on ECD, there are significant
gaps between the results of SMN (pre-trained) re-
ported in Table 1 and those reported in Zhang et al.
(2018b), since SMN in this paper is evaluated on
the human-judged test set while SMN in Zhang
et al. (2018b) is evaluated on the automatically
constructed test set that is homogeneous with the
training set. This somehow indicates the gap be-
tween training and test in real applications for the
existing research on response selection, and thus
demonstrates the merits of this work.

4.5 Discussions

In addition to efficacy of co-teaching as a learning
approach, we are also curious about Q1: if model
A and model B can “co-evolve” when they are
initialized with one network; Q2: if co-teaching
is still effective when model A and model B are
initialized with different networks; and Q3: if
the teaching strategies are sensitive to the hyper-
parameters (i.e., λ in Equations (1)-(2) and δ in
Equation (10)).



3811

0 5 10 15 20 25 30 35 40 45 50 55
Iterations (103)

0.52

0.54

0.56

0.58

0.60

0.62

0.64

0.66

P
@

1

Pre-training
Co-teaching-Model A
Co-teaching-Model B

(a) Dynamic data curriculum

0 5 10 15 20 25 30 35 40 45 50
Iterations (103)

0.52

0.54

0.56

0.58

0.60

0.62

0.64

0.66

P
@

1

Pre-training
Co-teaching-Model A
Co-teaching-Model B

(b) Dynamic instance weighting

0 5 10 15 20 25 30 35 40 45
Iterations (103)

0.52

0.54

0.56

0.58

0.60

0.62

0.64

0.66

P
@

1

Pre-training
Co-teaching-Model A
Co-teaching-Model B

(c) Dynamic margins

Figure 2: Test P@1 of DAM with the three teaching strategies on ECD. All curves are smoothed by exponential
moving average6 for beauty.

Douban (Margin) ECD (Curriculum)
MAP MRR P@1 R10@1 R10@2 R10@5 MAP MRR P@1 R10@1 R10@2 R10@5

SMN-Pre-training 0.527 0.570 0.396 0.236 0.392 0.734 0.662 0.742 0.598 0.302 0.464 0.757
SMN-Co-teaching 0.558 0.602 0.420 0.255 0.431 0.787 0.674 0.765 0.626 0.322 0.485 0.779
DAM-Pre-training 0.552 0.605 0.426 0.258 0.408 0.766 0.685 0.756 0.621 0.325 0.491 0.772
DAM-Co-teaching 0.570 0.617 0.438 0.270 0.455 0.781 0.696 0.775 0.652 0.341 0.499 0.784

Table 2: Evaluation results of co-teaching initialized with different networks.

Answer to Q1: Figure 2 shows P@1 of DAM
vs. number of iterations on the test set of ECD
under the three teaching strategies. Co-teaching
with any of the three strategies can improve both
the performance of model A and the performance
of model B after pre-training, and the peer mod-
els move with almost the same pace. The re-
sults verified our claim that “by learning from each
other, the peer models can get improved together”.
Curves of dynamic margins oscillate more fiercely
than others, indicating that optimization with dy-
namic margins is more difficult than optimization
with the other two strategies.

Answer to Q2: as a case study of co-teaching
with two networks in different capabilities, we ini-
tialize model A and model B with DAM and SMN
respectively, and select teaching with dynamic
margins for Douban and teaching with dynamic
data curriculum for ECD (i.e., the best strategies
for the two data sets when co-teaching is initial-
ized with one network). Table 2 shows compari-
son between models before/after co-teaching. We
find that co-teaching is still effective when start-
ing from two networks, as both SMN and DAM
get improved on the two data sets. Despite the im-
provement, it is still better to learn the two net-
works one by one, as co-teaching with two net-
works cannot bring more improvement than co-
teaching with one network, and the performance

of the stronger one between the two networks
could also drop (e.g., DAM on Douban). We guess
this is because the stronger model cannot be well
taught by the weaker model, especially in teach-
ing via soft labels, and as a result, it is not able
to transfer more knowledge to the weaker one as
well.

Answer to Q3: finally, we check the effect of
hyper-parameters to co-teaching. Figure 3(a) illus-
trates how the performance of DAM varies under
different λs in teaching with dynamic margins on
Douban. We can see that both small λs and large
λs will cause performance drop. This is because
small λs will reduce the effect of margins, mak-
ing clean examples and noisy examples indifferent
in learning, while with large λs, some errors from
the “soft labels” might be magnified, and thus hurt
the performance of the learning approach. Figure
3(b) shows the performance of DAM under dif-
ferent δs in teaching with dynamic data curricu-
lum on ECD. Similarly, DAM gets worse when δ
becomes small or large, since a smaller δ means
fewer data will be involved in training, while a
larger δ brings more risks to introducing noise
into training. Thus, we conclude that the teach-
ing strategies are sensitive to the choice of hyper-
parameters.

6https://en.wikipedia.org/wiki/Moving_
average#Exponential_moving_average

https://en.wikipedia.org/wiki/Moving_average#Exponential_moving_average
https://en.wikipedia.org/wiki/Moving_average#Exponential_moving_average


3812

1 1/2 1/3 1/5 1/101/151/20
λ

0.35

0.40

0.45
P@

1

(a) Dynamic margins on Douban

0.1 0.3 0.5 0.7 0.9 0.95 1.0
δ

0.60

0.62

0.64

0.66

P@
1

(b) Data curriculum on ECD

Figure 3: Effects of λ and δ to co-teaching. Experi-
ments are conducted with DAM on the two data sets.

5 Related Work

So far, methods used to build an open domain
dialogue system can be divided into two cate-
gories. The first category utilize an encoder-
decoder framework to learn response generation
models. Since the basic sequence-to-sequence
models (Vinyals and Le, 2015; Shang et al., 2015;
Tao et al., 2018) tend to generate generic re-
sponses, extensions have been made to incor-
porate external knowledge into generation (Mou
et al., 2016; Xing et al., 2017), and to gener-
ate responses with specific personas or emotions
(Li et al., 2016; Zhang et al., 2018a; Zhou et al.,
2018a). The second category design a discrimi-
native model to measure the matching degree be-
tween a human input and a response candidate
for response selection. At the beginning, research
along this line assumes that the human input is
a single message (Lu and Li, 2013; Wang et al.,
2013; Hu et al., 2014; Wang et al., 2015). Re-
cently, researchers begin to make use of conver-
sation history in matching. Representative meth-
ods include the dual LSTM model (Lowe et al.,
2015), the deep learning to respond architec-
ture (Yan et al., 2016), the multi-view matching
model (Zhou et al., 2016), the sequential match-
ing network (Wu et al., 2017, 2018c), the deep
attention matching network (Zhou et al., 2018b),
and the multi-representation fusion network (Tao
et al., 2019).

Our work belongs to the second group. Rather
than crafting a new model, we are interested in
how to learn the existing models with a better ap-
proach. Probably the most related work is the
weakly supervised learning approach proposed in
Wu et al. (2018b). However, there is stark differ-
ence between our approach and the weak super-
vision approach: (1) weak supervision employs
a static generative model to teach a discrimina-
tive model, while co-teaching dynamically lets

two discriminative models teach each other and
evolve together; (2) weak supervision needs pre-
training a generative model with extra resources
and pre-building an index for training data con-
struction, while co-teaching does not have such
request; and (3) in terms of multi-turn response
selection, weak supervision is only tested on the
Douban data with SMN and the multi-view match-
ing model, while co-teaching is proven effective
on both the Douban data and the E-commerce data
with SMN and DAM which achieves state-of-the-
art performance on benchmarks. Moreover, im-
provement to SMN on the Douban data from co-
teaching is bigger than that from weak supervi-
sion, when the ratio of the positive and the neg-
ative is 1:1 in training7.

Our work, in a broad sense, belongs to the ef-
fort on learning with noisy data. Previous stud-
ies including curriculum learning (CL) (Bengio
et al., 2009) and self-paced learning (SPL) (Jiang
et al., 2014, 2015) tackle the problem with heuris-
tics, such as ordering data from easy instances
to hard ones (Spitkovsky et al., 2010; Tsvetkov
et al., 2016) and retaining training instances whose
losses are smaller than a threshold (Jiang et al.,
2015). Recently, Fan et al. (2018) propose a deep
reinforcement learning framework in which a sim-
ple deep neural network is used to adaptively se-
lect and filter important data instances from the
training data. Jiang et al. (2017) propose a Men-
torNet which learns a data-driven curriculum with
a Student-Net to mitigate overfitting on corrupted
labels. In parallel to curriculum learning, sev-
eral studies explore sample weighting schemes
where training samples are re-weighted according
to their label-quality (Wang et al., 2017; Dehghani
et al., 2018; Wu et al., 2018b). Instead of con-
sidering data quality, Wu et al. (2018a) employ a
parametric model to dynamically create appropri-
ate loss functions.

The learning approach in this work is mainly
inspired by the work of Han et al. (2018) for han-
dling extremely noisy labels. However, with sub-
stantial extensions, our work is far beyond that
work. First, we generalize the concept of “co-
teaching” to a framework, and now the method in
Han et al. (2018) becomes a special case of the
framework. Second, Han et al. (2018) only ex-
ploits data curriculum, while in addition to data

7Our results are 0.559 (MAP), 0.601 (MRR), and 0.424
(P@1), while results reported in (Wu et al., 2018b) are 0.542
(MAP), 0.588 (MRR), and 0.408 (P@1).



3813

curriculum, we also propose two new strategies
for teaching with dynamic loss functions as spe-
cial cases of the framework. Third, unlike Han
et al. (2018) who only use one network to initial-
ize the peer models in co-teaching, we studied co-
teaching with both one network and two different
networks. Finally, Han et al. (2018) verified that
the special co-teaching method is effective in some
computer vision tasks, while we demonstrate that
the co-teaching framework is generally useful for
building retrieval-based dialogue systems.

6 Conclusions

We propose learning a matching model for re-
sponse selection under a general co-teaching
framework with three specific teaching strategies.
The learning approach lets two matching models
teach each other and evolve together. Empirical
studies on two public data sets show that the pro-
posed approach can generally improve the perfor-
mance of existing matching models.

Acknowledgement

We would like to thank the anonymous re-
viewers for their constructive comments. This
work was supported by the National Key Re-
search and Development Program of China (No.
2017YFC0804001), the National Science Foun-
dation of China (NSFC Nos. 61672058 and
61876196).

References
Yoshua Bengio, Jérôme Louradour, Ronan Collobert,

and Jason Weston. 2009. Curriculum learning. In
Proceedings of the 26th annual international con-
ference on machine learning, pages 41–48. ACM.

Mostafa Dehghani, Arash Mehrjou, Stephan Gouws,
Jaap Kamps, and Bernhard Schölkopf. 2018.
Fidelity-weighted learning. In International Confer-
ence on Learning Representations.

Yang Fan, Fei Tian, Tao Qin, Xiang-Yang Li, and Tie-
Yan Liu. 2018. Learning to teach. In International
Conference on Learning Representations.

Joseph L Fleiss. 1971. Measuring nominal scale agree-
ment among many raters. Psychological bulletin,
76(5):378.

Bo Han, Quanming Yao, Xingrui Yu, Gang Niu,
Miao Xu, Weihua Hu, Ivor W. Tsang, and Masashi
Sugiyama. 2018. Co-sampling: Training robust
networks for extremely noisy supervision. CoRR,
abs/1804.06872.

Baotian Hu, Zhengdong Lu, Hang Li, and Qingcai
Chen. 2014. Convolutional neural network archi-
tectures for matching natural language sentences.
In Advances in Neural Information Processing Sys-
tems, pages 2042–2050.

Zongcheng Ji, Zhengdong Lu, and Hang Li. 2014. An
information retrieval approach to short text conver-
sation. arXiv preprint arXiv:1408.6988.

Lu Jiang, Deyu Meng, Shoou-I Yu, Zhenzhong Lan,
Shiguang Shan, and Alexander Hauptmann. 2014.
Self-paced learning with diversity. In Advances
in Neural Information Processing Systems, pages
2078–2086.

Lu Jiang, Deyu Meng, Qian Zhao, Shiguang Shan, and
Alexander G Hauptmann. 2015. Self-paced curricu-
lum learning. In Twenty-Ninth AAAI Conference on
Artificial Intelligence.

Lu Jiang, Zhengyuan Zhou, Thomas Leung, Li-Jia Li,
and Li Fei-Fei. 2017. Mentornet: Learning data-
driven curriculum for very deep neural networks on
corrupted labels. In Proceedings of the 35-th Inter-
national Conference on Machine Learning,, pages
2304–2313.

Diederik P Kingma and Jimmy Ba. 2015. Adam: A
method for stochastic optimization. In International
Conference on Learning Representations.

Feng-Lin Li, Minghui Qiu, Haiqing Chen, Xiong-
wei Wang, Xing Gao, Jun Huang, Juwei Ren,
Zhongzhou Zhao, Weipeng Zhao, Lei Wang, et al.
2017. Alime assist: An intelligent assistant for cre-
ating an innovative e-commerce experience. In Pro-
ceedings of the 2017 ACM on Conference on Infor-
mation and Knowledge Management, pages 2495–
2498.

Jiwei Li, Michel Galley, Chris Brockett, Georgios Sp-
ithourakis, Jianfeng Gao, and Bill Dolan. 2016. A
persona-based neural conversation model. In Asso-
ciation for Computational Linguistics, pages 994–
1003.

Ryan Lowe, Nissan Pow, Iulian Serban, and Joelle
Pineau. 2015. The ubuntu dialogue corpus: A large
dataset for research in unstructured multi-turn dia-
logue systems. In Proceedings of the 16th Annual
Meeting of the Special Interest Group on Discourse
and Dialogue, pages 285–294.

Zhengdong Lu and Hang Li. 2013. A deep architec-
ture for matching short texts. In Advances in Neural
Information Processing Systems, pages 1367–1375.

Tomas Mikolov, Ilya Sutskever, Kai Chen, Greg S Cor-
rado, and Jeff Dean. 2013. Distributed representa-
tions of words and phrases and their compositional-
ity. In Advances in neural information processing
systems, pages 3111–3119.

http://arxiv.org/abs/1804.06872
http://arxiv.org/abs/1804.06872
https://doi.org/10.18653/v1/P16-1094
https://doi.org/10.18653/v1/P16-1094
https://doi.org/10.18653/v1/W15-4640
https://doi.org/10.18653/v1/W15-4640
https://doi.org/10.18653/v1/W15-4640


3814

Lili Mou, Yiping Song, Rui Yan, Ge Li, Lu Zhang,
and Zhi Jin. 2016. Sequence to backward and for-
ward sequences: A content-introducing approach to
generative short-text conversation. In Proceedings
of COLING 2016, the 26th International Confer-
ence on Computational Linguistics: Technical Pa-
pers, pages 3349–3358.

Iulian Vlad Serban, Tim Klinger, Gerald Tesauro, Kar-
tik Talamadupula, Bowen Zhou, Yoshua Bengio,
and Aaron Courville. 2017. Multiresolution recur-
rent neural networks: An application to dialogue re-
sponse generation. In AAAI, pages 3288–3294.

Lifeng Shang, Zhengdong Lu, and Hang Li. 2015.
Neural responding machine for short-text conversa-
tion. In Proceedings of the 53rd Annual Meeting of
the Association for Computational Linguistics and
the 7th International Joint Conference on Natural
Language Processing, pages 1577–1586.

Heung-Yeung Shum, Xiaodong He, and Di Li. 2018.
From Eliza to XiaoIce: Challenges and opportuni-
ties with social chatbots. Frontiers of IT & EE,
19(1):10–26.

Valentin I. Spitkovsky, Hiyan Alshawi, and Daniel Ju-
rafsky. 2010. From baby steps to leapfrog: How
”less is more” in unsupervised dependency pars-
ing. In Human Language Technologies: The 2010
Annual Conference of the North American Chap-
ter of the Association for Computational Linguistics,
pages 751–759.

Chongyang Tao, Shen Gao, Mingyue Shang, Wei Wu,
Dongyan Zhao, and Rui Yan. 2018. Get the point of
my utterance! learning towards effective responses
with multi-head attention mechanism. In IJCAI,
pages 4418–4424.

Chongyang Tao, Wei Wu, Can Xu, Wenpeng Hu,
Dongyan Zhao, and Rui Yan. 2019. Multi-
representation fusion network for multi-turn re-
sponse selection in retrieval-based chatbots. In Pro-
ceedings of the Twelfth ACM International Confer-
ence on Web Search and Data Mining, pages 267–
275. ACM.

Yulia Tsvetkov, Manaal Faruqui, Wang Ling, Brian
MacWhinney, and Chris Dyer. 2016. Learn-
ing the curriculum with bayesian optimization for
task-specific word representation learning. arXiv
preprint arXiv:1605.03852.

Oriol Vinyals and Quoc Le. 2015. A neural conversa-
tional model. arXiv preprint arXiv:1506.05869.

Hao Wang, Zhengdong Lu, Hang Li, and Enhong
Chen. 2013. A dataset for research on short-text
conversations. In Proceedings of the 2013 Confer-
ence on Empirical Methods in Natural Language
Processing, pages 935–945.

Mingxuan Wang, Zhengdong Lu, Hang Li, and Qun
Liu. 2015. Syntax-based deep matching of short

texts. In Proceedings of the Twenty-Fourth Inter-
national Joint Conference on Artificial Intelligence,
pages 1354–1361.

Yixin Wang, Alp Kucukelbir, and David M Blei. 2017.
Robust probabilistic modeling with bayesian data
reweighting. In Proceedings of the 34th Interna-
tional Conference on Machine Learning-Volume 70,
pages 3646–3655. JMLR. org.

Lijun Wu, Fei Tian, Yingce Xia, Yang Fan, Tao Qin,
Jianhuang Lai, and Tie-Yan Liu. 2018a. Learn-
ing to teach with dynamic loss functions. CoRR,
abs/1810.12081.

Yu Wu, Wei Wu, Zhoujun Li, and Ming Zhou. 2018b.
Learning matching models with weak supervision
for response selection in retrieval-based chatbots.
arXiv preprint arXiv:1805.02333.

Yu Wu, Wei Wu, Chen Xing, Can Xu, Zhoujun
Li, and Ming Zhou. 2018c. A sequential match-
ing framework for multi-turn response selection in
retrieval-based chatbots. Computational Linguis-
tics, 45(1):163–197.

Yu Wu, Wei Wu, Chen Xing, Ming Zhou, and Zhou-
jun Li. 2017. Sequential matching network: A
new architecture for multi-turn response selection
in retrieval-based chatbots. In Proceedings of the
55th Annual Meeting of the Association for Compu-
tational Linguistics, volume 1, pages 496–505.

Chen Xing, Wei Wu, Yu Wu, Jie Liu, Yalou Huang,
Ming Zhou, and Wei-Ying Ma. 2017. Topic aware
neural response generation. In AAAI, pages 3351–
3357.

Rui Yan, Yiping Song, and Hua Wu. 2016. Learning
to respond with deep neural networks for retrieval-
based human-computer conversation system. In SI-
GIR, pages 55–64.

Rui Yan and Dongyan Zhao. 2018. Coupled context
modeling for deep chit-chat: towards conversations
between human and computer. In Proceedings of
the 24th ACM SIGKDD International Conference on
Knowledge Discovery & Data Mining, pages 2574–
2583. ACM.

Saizheng Zhang, Emily Dinan, Jack Urbanek, Arthur
Szlam, Douwe Kiela, and Jason Weston. 2018a.
Personalizing dialogue agents: I have a dog, do you
have pets too? arXiv preprint arXiv:1801.07243.

Zhuosheng Zhang, Jiangtong Li, Pengfei Zhu, Hai
Zhao, and Gongshen Liu. 2018b. Modeling multi-
turn conversation with deep utterance aggregation.
CoRR, abs/1806.09102.

Hao Zhou, Minlie Huang, Tianyang Zhang, Xiaoyan
Zhu, and Bing Liu. 2018a. Emotional chatting ma-
chine: Emotional conversation generation with in-
ternal and external memory. In The Thirty-Second
AAAI Conference on Artificial Intelligence, pages
730–738.

http://www.aclweb.org/anthology/C16-1316
http://www.aclweb.org/anthology/C16-1316
http://www.aclweb.org/anthology/C16-1316
https://doi.org/10.3115/v1/P15-1152
https://doi.org/10.3115/v1/P15-1152
https://www.aclweb.org/anthology/N10-1116
https://www.aclweb.org/anthology/N10-1116
https://www.aclweb.org/anthology/N10-1116
http://aclweb.org/anthology/D13-1096
http://aclweb.org/anthology/D13-1096
http://arxiv.org/abs/1810.12081
http://arxiv.org/abs/1810.12081
https://doi.org/10.1162/coli_a_00345
https://doi.org/10.1162/coli_a_00345
https://doi.org/10.1162/coli_a_00345
https://doi.org/10.18653/v1/P17-1046
https://doi.org/10.18653/v1/P17-1046
https://doi.org/10.18653/v1/P17-1046
https://doi.org/10.1145/2911451.2911542
https://doi.org/10.1145/2911451.2911542
https://doi.org/10.1145/2911451.2911542
http://arxiv.org/abs/1806.09102
http://arxiv.org/abs/1806.09102


3815

Xiangyang Zhou, Daxiang Dong, Hua Wu, Shiqi Zhao,
Dianhai Yu, Hao Tian, Xuan Liu, and Rui Yan. 2016.
Multi-view response selection for human-computer
conversation. In Proceedings of the 2016 Confer-
ence on Empirical Methods in Natural Language
Processing, pages 372–381.

Xiangyang Zhou, Lu Li, Daxiang Dong, Yi Liu, Ying
Chen, Wayne Xin Zhao, Dianhai Yu, and Hua Wu.
2018b. Multi-turn response selection for chatbots
with deep attention matching network. In Proceed-
ings of the 56th Annual Meeting of the Association
for Computational Linguistics (Volume 1: Long Pa-
pers), volume 1, pages 1118–1127.

https://doi.org/10.18653/v1/D16-1036
https://doi.org/10.18653/v1/D16-1036
http://aclweb.org/anthology/P18-1103
http://aclweb.org/anthology/P18-1103

