



















































Named Entity Recognition - Is There a Glass Ceiling?


Proceedings of the 23rd Conference on Computational Natural Language Learning, pages 624–633
Hong Kong, China, November 3-4, 2019. c©2019 Association for Computational Linguistics

624

Named Entity Recognition - Is there a glass ceiling?

Tomasz Stanislawek†,‡, Anna Wróblewska†,‡, Alicja Wójcika†,§,
Daniel Ziembicki†,§ Przemyslaw Biecek‡,¶

†Applica.ai, Warsaw, Poland
¶Samsung Research Poland, Warsaw, Poland

‡Faculty of Mathematics and Information Science, Warsaw University of Technology
§Department of Formal Linguistics, University of Warsaw

Abstract

Recent developments in Named Entity Recog-
nition (NER) have resulted in better and bet-
ter models. However, is there a glass ceil-
ing? Do we know which types of errors are
still hard or even impossible to correct? In
this paper, we present a detailed analysis of
the types of errors in state-of-the-art machine
learning (ML) methods. Our study reveals the
weak and strong points of the Stanford, CMU,
FLAIR, ELMO and BERT models, as well as
their shared limitations. We also introduce
new techniques for improving annotation, for
training processes and for checking a model’s
quality and stability.

Presented results are based on the CoNLL
2003 data set for the English language. A new
enriched semantic annotation of errors for this
data set and new diagnostic data sets are at-
tached in the supplementary materials.

1 Introduction

The problem of Named Entity Recognition (NER)
was defined over 20 years ago at the Message Un-
derstanding Conference (MUC, 1995; Sundheim,
1995). Nowadays, there are a lot of solutions ca-
pable of a very high accuracy even on very hard
and multi-domain data sets (Yadav and Bethard,
2018; Li et al., 2018).

Many of these solutions benefit from large
available data sets or from recent developments
in deep neural networks. However, in order to
progress further with this last mile, we need a bet-
ter understanding of the sources of errors in NER
problem; as it is stated that ”The first step to ad-
dress any problem is to understand it”. We per-
formed a detailed analysis of errors on the pop-
ular CoNLL 2003 data set (Tjong Kim Sang and
De Meulder, 2003).

Of course, different models make different mis-
takes. Here, we have focused on models that con-
stitute a kind of breakthrough in the NER do-
main. These models are: Stanford NER (Finkel
et al., 2005), the model made by the NLP team
from Carnegie Mellon University (CMU) (Lample
et al., 2016), ELMO (Peters et al., 2018), FLAIR
(Akbik et al., 2018) and BERT-Base (Devlin et al.,
2018). In the Stanford model, Conditional Ran-
dom Fields (CRF) with manually created features
were tackled. Lample and the team (at CMU) used
an LSTM deep neural network with an output with
CRF for the first time. ELMO and FLAIR are
new language modeling techniques as an encoder,
and LSTM with a CRF layer as an output decoder.
A team from Google used a fine-tuning approach
with the BERT model in a NER problem for the
first time, based on a Bi-diREctional Transformer
language model (LM).

We analyzed the data set from a linguistic point
of view in order to understand problems at a
deeper level. As far as we know only a few
studies analyse in details errors for NER prob-
lems (Niklaus et al., 2018; Abudukelimu et al.,
2018; Ichihara et al., 2015). They mainly explore
a range of name entities (boundaries in a text) and
the precision and popular metrics of a class pre-
diction (precision, recall, F1). We found the fol-
lowing discussions valuable:

• (Abudukelimu et al., 2018) on annotation and
extraction of Named Entities,

• (Braşoveanu et al., 2018) on an analysis of
errors in Named Entity Linking systems,

• (Manning, 2011) on linguistic limitations in
building a perfect Part-of-Speech Tagger.

We took a different approach. First, our team
of data scientists and linguists defined 4 major and



625

11 minor categories of types of problems typical
for NLP (see Tab. 2). Next, we acquired all er-
roneous samples (containing errors in model out-
puts) and we assigned them to the newly defined
categories. Finally, we characterized the incorrect
output of the models with regard to gold standard
annotations and following our team’s consensus.

Accordingly, our overall contribution is a con-
ceptualization and classification of the roots of
problems with NER models as well as their char-
acterization. Moreover, we have prepared new di-
agnostic sets for some of our categories so that
other researchers can check the weakest points of
their NER models.

In the following sections, we introduce our ap-
proach regarding the re-annotation process and
model evaluation (section 2); we also show and
discuss the results (section 3). Finally, we con-
clude our paper with a discussion (section 4) and
draw conclusions (section 5).

2 Method

We commenced our research by reproducing the
selected models for the CoNLL 2003 data set1.
Then, we analysed the erroneous samples, sen-
tences from the test set. It is worth mentioning
that we analysed the most common types of named
entities, i.e. PER - names of persons, LOC - lo-
cation names, ORG - organization names. Hav-
ing several times reviewed the model results and
the error-prone data set, we defined the linguistic
categories that are the most probable sources of
model mistakes. As a result, we were able to an-
notate the samples with these categories; we then
analysed the results and found a few possible im-
provements.

2.1 Models description

A brief history of the key developments of NER
models for the CoNLL data is listed in Table 1. In
our analysis, we chose 5 models (bold in the table)
that make up significant progress.

Stanford NER CRF was the first industry-
wide library to recognize NERs (Finkel et al.,
2005). The LSTM layer put forward by Lam-
ple from Carnegie Mellon University (CMU) was
the first deep learning architecture with a CRF
output layer (Lample et al., 2016). The fol-
lowing: a token-based language model (LM)

1 The details of the model parameters are described in our
supplementary materials.

Model F1
Ensemble of HMM, TBL, MaxEnt,
RRM (Florian et al., 2003)

88.76

Semi-supervised learning (Ando
and Zhang, 2005)

89.31

Stanford CRF (Finkel et al., 2005) 87.94
Neural network (Collobert et al.,
2011)

89.59

CRF & lexicon embeddings (Passos
et al., 2014)

90.90

CMU LSTM-CRF (Lample et al.,
2016)

90.94

Bi-LSTM-CNNs-CRF (Ma and
Hovy, 2016)

91.21

ELMO: Token based LM Bi-
LSTM-CRF (Peters et al., 2018)

92.22

BERT-base: Fine tune Bi-
Transformer LM with BPE token
encoding (Devlin et al., 2018)

92.4
(*)

CVT: Cross-view training with Bi-
LSTM-CRF (Clark et al., 2018)

92.61

BERT-large: Fine tune Bi-
Transformer LM with BPE token
encoding (Devlin et al., 2018)

92.8
(*)

FLAIR: Char based LM + Glove
with Bi-LSTM-CRF (Akbik et al.,
2018)

93.09
(**)

Fine tune Bi-Transformer LM with
CNN token encoding (Baevski
et al., 2019)

93.5

Table 1: Results reported in authors’ publications about
NER models on the original CoNLL 2003 test set. (*)
There is no script for replicating these results and also
hyper-parameters were not given. See a discussion
at (google bert, 2019) (**) This result was not achieved
with the current version of the library. See a discussion
at (Flair, 2018) and the reported results at (Akbik et al.,
2019)

with bi-LSTM with CRF (ELMO) (Peters et al.,
2018), a character-based LM with the same output
(FLAIR) (Akbik et al., 2018) and a bi-directional
language model based on an encoder block from
the transformer architecture (BERT) with a fine
tune classification output layer (Devlin et al.,
2018) are very important techniques; and that not
only in the domain of NER.

2.2 Linguistic categories
From a human perspective, the task of NER in-
volves several sources of knowledge: the situation
in which the utterance was made, the context of



626

other texts and utterances in the particular domain,
the structure of the sentence, the meaning of the
sentence, and general knowledge about the world.

While designing categories for annotation, we
tried to define these layers of NEs understand-
ing; however, some of them are particularly prob-
lematic. For example, there is a problem with a
distinction between the meaning (of lexical items
and of a whole sentence) and general knowledge.
Since there is an enormous and relentless linguis-
tic and philosophical debate on this topic (Rey,
2018), we decided not to delimit these categories
and not to distinguish them. Therefore, they have
been labeled together as ’sentence level context’
(SL-C).

Consequently, we ended up with a set of cate-
gories for annotating the items (sentences) from
our data set, which are presented in Table 2 as
well as described briefly in the following sections
and more precisely in the supplementary materi-
als. We have also added more examples for each
category in this material.

shortcut linguistic property
DE- Data set Errors
DE-A Annotation errors
DE-WT Word Typos
DE-BS Word/Sentence Bad Segmentation
SL- Sentence Level dependency
SL-S Sentence Level Structure
SL-C Sentence Level Context
DL- Document Level dependency
DL-CR Document Co-Reference
DL-S Document Structure
DL-C Document Context
G- General properties
G-A General Ambiguity
G-HC General Hard Case
G-I General Inconsistency

Table 2: Linguistic categories prepared for our annota-
tion procedure.

DE-A: Annotation errors are obvious errors
in the preliminary annotations (the gold standard
in the CoNLL test data set). For example: in the
sentence ”SOCCER - JAPAN GET LUCKY WIN,
CHINA IN SURPRISE DEFEAT” as a gold stan-
dard annotation ”CHINA” is assigned a person
type; it should, however, be defined as a location
so as to be consistent with the other sentence an-
notations.

DE-WT: Word typos are simple typos in any
word in a sample sentence, for exmple: ”Pollish”
instead of ”Polish”.

DE-BS: Word-sentence bad segmentation.
We annotated this case if a few words, joined
together with a hyphen or separated by a space,
were incorrectly divided into tokens (e.g. ”India-
South”), or where a sentence was erroneously di-
vided inside a boundary of a named entity, which
prevented its correct interpretation. For exam-
ple: in the data set there is a sentence divided
into two parts: ”Results of National Hockey” and
”League”.

SL-S: Sentence level structure dependency
occurs when there is a special construction within
a sentence (a syntactic linguistic property) that is
a strong premise for defining an entity. In the
studied material, we distinguished two such con-
structions: brackets and bullets. The error receives
the SL-S annotation, when the system should have
been able to recognize a syntactic linguistic prop-
erty that leads to correct NER tagging but failed
to do so and made a NER mistake. For example:
one of the analysed NER systems did recognize
all locations except ”Philippines” in the following
enumerating sentence: ”ASEAN groups Brunei,
Indonesia, Malaysia, the Philippines, Singapore,
Thailand and Vietnam.”.

SL-C: Sentence level context cases are those
in which one is able to define an appropriate cat-
egory of NE based only on the sentence context.
For example: one of NER systems has a prob-
lem with recognizing the organization ”Office of
Fair Trading” in the sentence: ”Lang said he sup-
ported conditions proposed by Britain’s Office of
Fair Trading, which was asked to examine the case
last month.”.

DL-CR: Document level co-reference cate-
gory was annotated if there was a reference within
a sentence to an object that was also referred to in
another sentence in the same document. For exam-
ple: evaluating the ”Zywiec” named entity in the
sentence ”Van Boxmeer said Zywiec had its eye
on Okocim ...”, it has to be considered that there is
another sentence in the same document in the data
set that explains the organization name, which is:
”Polish brewer Zywiec’s 1996 profit...”.

DL-S: Document level structure cases are
those in which the structure of a document plays
an important role, i.e. the occurrence of objects
in the table (for example the headings determine



627

the scope of an entity itself and its category). For
example: look at the following three sentences,
which obviously compose a table: ”Port Loading
Waiting”; ”Vancouver 5 7”, ”Prince Rupert 1 3”.
One of our NER systems had a problem with rec-
ognizing each localisation inside the table; how-
ever, the system recognized the header as a named
entity.

DL-C: Document level context is a type of a
linguistic category in which the entire context of
a document (containing an annotated sentence) is
needed in order to determine a category of an anal-
ysed entity, and in which none of the sentence
level linguistic categories has been assigned (nei-
ther SL-S and SL-C).

G-A: General ambiguity are those situations
in which an entity occurs in a different sense from
that in which this word (entity) is used in its most
common understanding and usage. For example:
the common word ’pace’ may as well be occur to
be a surname, as in the following sentence: ”Pace,
a junior, helped Ohio State...”.

G-HC: General hard cases are cases occur-
ring for the first time in a set in a given sub-
type, and which can be interpreted in two differ-
ent ways. For example: ”Real Madrid’s Balkan
strike force...” where the word ’Balkan’ can be a
localisation or an adjective.

G-I: General inconsistency are cases of incon-
sistencies in the annotation (in the test set itself as
well as between the training and test sets). For ex-
ample in the sentence: ”... Finance Minister Ed-
uardo Aninat said.”, the word ’Finance’ is anno-
tated as an organisation but in the whole data set
the names of ministries are not annotated in the
context of the role of a person.

2.3 Annotation procedure

All those entities that had been incorrectly recog-
nized by any of the tested modelsfalse positives,
false negatives and wrongly tagged entities were
annotated in our research by two teams. Each
team consisted of a linguist and a data scientist.
We did not analyse errors with the MISC entity
type, but the person, localisation and organisation
names. The MISC type comprises a variety of
NERs that are not of other types. Its definition is
rather vague and it is hard to conceptualize what it
actually means, e.g. if whether it comprises events
or proper names, or even adjectives.

The annotation process was performed in four

steps:

1. a set of linguistic annotation categories was
established, see the previous section 2.2;

2. the data set was split into two equal parts: one
part for each team; all entities were annotated
twice, by a linguist and by a data scientist,
each working independently;

3. the annotations were compared and all incon-
sistencies were solved within each team;

4. two teams checked the consistency of the
other team’s annotations; all borderline and
dubious cases were discussed by all team
members and reconciled.

The inter-annotator agreement statistics and
Kappa are presented in Table 3. A few categories
were very difficult to conceptualize, so it took
more time to solve these inconsistencies. In these
inconsistent cases, two annotators (a linguist and a
data scientist) thoroughly discussed each example.

Not all categories (see Table 2) were annotated
by the whole team. Those easy to annotate, as the
categories regarding simple errors (i.e. DE-A, DE-
WT, DE-BS), were done by one person and then
just checked by another.

The general inconsistencies category (G-I) were
done semi-automatically and then checked. The
semi-automatic procedure was as follows: first
finding similarly named entities in the training and
test sets and then looking at their labels. By ’sim-
ilarly named entities’ we mean, e.g. a division of
an organization having a geographical location in
its name (”Pacific Division”), or a designation of a
person from any country (”Czech ambassador”).

Additionally, a document level context (DL-C)
category was derived from the rule of not being
present in any sentence level category (i.e. SL-C
or SL-S).

2.4 Our diagnostic procedure

The next step, after the analysis of linguistic cate-
gories of errors, was to create additional diagnos-
tic sets. The goal of this approach was to find, or
create, more examples that reflect the most chal-
lenging linguistic properties; these can be sen-
tence and document level dependencies and can
also include a few ambiguous examples. These
ambiguities are for instance names that contain
words in common usage. We selected 65 examples



628

annotated class agreement [%] Kappa
SL-S 94.99 0.572
SL-C 69.64 0.389
DL-CR 78.00 0.554
DL-S 81.44 0.536
G-A 68.96 0.252
G-HC 74.46 0.340

Table 3: Inter-annotator statistics (agreement and
Kappa) at the very first stage of the annotation proce-
dure, before discussing each controversial example and
the super-annotation stage. The statistics are calculated
for those categories that were annotated by human an-
notators.

from Wikipedia articles per two groups of linguis-
tic problems: sentence-level and document-level
contexts.2

The first diagnostic set comprises sentences in
which the properties of a language, general knowl-
edge or a sentence structure are sufficient to iden-
tify a NE class. We use this Template Sen-
tences (TS) to check whether a model will have
the same quality after changing words, i.e. a name
of an entity. For each sentence we prepared at least
2 extra entities with different lengths of words
which are well suited to the context. For exam-
ple in a sentence: ”Atlético’s best years coincided
with dominant Real Madrid teams.”, the football
team ”Atlético” can be replaced with ”Deportivo
La Coruña”.

The second batch of documents was a group of
sentences in which a sentence context is not suffi-
cient to designate a NE, so we need to know more
about the particular NE, e.g. we need to look for
its co-references in the document, or we require
more context, e.g. a whole table of sports re-
sults, not only one row. (This particular case often
occurs in the CoNLL 2003 set when referring to
sports results.) We called this data set Document
Context Sentences (DCS). In this data set we an-
notated NEs and their co-references that are also
NEs. An example of such a sentence and its con-
text is as follows: ”In 2003, Loyola Academy (X,
ORG) opened a new 60-acre campus ... The prop-
erty, once part of the decommissioned NAS Glen-
view, was purchased by Loyola (X,ORG) in 2001.”
The second occurrence of the ”Loyola” name is
difficult to recognize as an organization without
its first occurrence, i.e. ”Loyola Academy”.

2Our prepared diagnostic data sets are avail-
able at https://github.com/applicaai/
ner-resources

The other type of a diagnostic set is fairly sim-
ple. It is generated from random words and let-
ters that are capitalized or not. Its purpose is just
to check if a model over-fits a particular data set
(in our case, the CoNLL 2003 set). A scrutinized
model should not return any entities on those Ran-
dom Sentences (RS). We generated 2 thousands of
these pseudo-sentences.

3 Results

3.1 Annotation quality

In Table 4 we gathered our model’s results for the
standard CoNLL 2003 test set and the same set
after the re-annotation and correction of annota-
tion errors. We replaced only those annotations
(gold standard) which we (all team members) were
sure of. Those sentences in which the class of
an entity occurrence was ambiguous were not cor-
rected. This shows that the models are better than
we thought they were, and so we corrected only
the test set and left the inconsistencies.3.

Stan-
ford

CMU ELMO FLAIR BERT

ALL-O 88.13 89.78 92.39 92.83 91.62
ALL-C 88.73 90.39 93.21 93.79 92.33
PER-O 93.31 95.74 97.07 97.49 96.14
PER-C 93.94 96.49 97.81 98.08 96.88
ORG-O 84.23 86.90 90.68 91.34 90.61
ORG-C 84.89 87.53 91.61 92.64 91.44
LOC-O 90.83 92.02 93.87 94.01 92.85
LOC-C 91.58 92.62 94.92 94.72 93.59
MISC-O 79.10 77.31 82.31 82.89 80.81
MISC-C 79.37 77.58 82.47 84.40 81.10

Table 4: Results for selected models on the original
(designated as ending ’...-O’) and re-annotated / cor-
rected (’...-C’) CoNLL 2003 test set concerning NE
classes (ALL comprise PER, ORG, LOC, MISC). The
given metric is a multilabel-F1 score (percentages).

3.2 Linguistic categories statistics

In the CoNLL 2003 test set, we chose as samples
words and sentences in which at least one model
made a mistake. The set of errors comprises 1101

3A small part of the data set of annotation cor-
rections and also the debatable cases will be available
at our github – https://github.com/applicaai/
ner-resources. We decided not to open the whole data
set, because it is the test set and the tuning models on this set
would lead to unfair results. On the other hand, we could not
perform the analysis on a validation set because it is rather
poor with respect to different kinds of linguistic properties.

https://github.com/applicaai/ner-resources
https://github.com/applicaai/ner-resources
https://github.com/applicaai/ner-resources
https://github.com/applicaai/ner-resources


629

named entities. The results of each model on this
set in terms of our linguistic categories are pre-
sented in Fig. 1, Fig. 2 and in Table 5.

Most mistakes were made by the Stanford and
CMU models, 703 and 554 respectively. ELMO,
FLAIR and BERT, which use contextualised lan-
guage models, performed much better. These em-
bedded features help the models to understand
words in their context and thus resolve most prob-
lems with ambiguities.

The CMU model has most problems with sen-
tence level context and ambiguity. This is prob-
ably due to the fact that this model uses non-
contextualized embedded features (Fig. 2). The
Stanford model fares the worst in terms of struc-
tured data (almost twice as many errors as the
other models), which means that it is not good at
defining an entity type within a very limited con-
text (Tab. 5). The Stanford model’s hand-crafted
features do not store information about the proba-
bilities of words which could represent a specific
entity type. It generates much more errors than the
other models.

Stan-
ford

CMU ELMO FLAIR BERT

DE-WT 10 6 9 8 10
DE-BS 38 39 33 33 40
SL-S 46 21 13 16 11
SL-C 448 378 250 223 300
DL-CR 372 316 198 184 263
DL-S 202 107 97 100 117
DL-C 247 175 144 146 170
G-A 219 183 98 101 94
G-HC 72 68 65 59 65
G-I 19 20 21 20 20
Errors 703 554 395 370 472
Unique
errors 235 93 23 12 79

Table 5: Number of errors for a particular model and
a particular class of errors. The total number of anno-
tated errors is 1101.

Modern techniques using contextualized lan-
guage models like ELMO, FLAIR and BERT re-
duced a number of mistakes in SL-C category
by more than 50% in comparison to the Stanford
model. But they are unable to fix most errors in
general problems related to inconsistency (G-I),
general hard cases (G-HC) or word typos (DE-
WT). See Figure 4 for more details.

Nevertheless, there are still a lot of common

3.65%
0.756%

14.1%

2.9%

2.52%

27.8%

2.64%

3.27%

21.2%

5.16%
3.15% 5.04%

1.26%

4.53%

2.02%

CMU ELMO

FLAIR BERT

Figure 1: Venn diagram for errors in the CMU, FLAIR,
BERT, ELMO models. The four models generate 794
errors and 221 are common to all of them. The Stanford
model as the most error-prone is here not referred to.

problems (27.8%). In common errors (Fig. 3), SL-
C (sentence level context) and DL-CR (document
level co-reference) co-occur the most often. Thus,
if a model also takes into account the context of
a whole document, it can be of great benefit. Con-
sidering a document structure (DL-S) in modeling
is also very important. This also can help to re-
solve a lot of ambiguity issues (G-A). Here is an
example of such a situation: ”Pace outdistanced
three senior finalists...”, ”Pace” is a person’s sur-
name, but one is able to find it out only when
analysing the whole document and finding refer-
ences to it in other sentences that directly point to
the class of the named entity.

We must be aware of the fact that some prob-
lems cannot be resolved with this data set, not
even in general. Those problems have roots in two
main areas: data set annotation (word typos, bad
segmentation, inconsistencies) and a complicated
structure of a language. Generally in most lan-
guages it is easier to say what entity represents a
real word instance than to define an exact entity
type (especially when we use a metonymic sense
of a word), e.g. ’Japan’ can be a name of a country
or of a sports team.

3.3 Diagnostic data sets

Looking at the models’ results in our diagnostic
data sets (Tab. 6), the first and most important ob-
servation is that we achieved significantly lower
results than originally on the CoNLL 2003 test



630

●

●

●

●

●

●

●

●●

●

DE−BS

DE−WT

SL−C

SL−S

DL−CR

DL−S

G−A

G−HCG−I

DL−C

Stanford

CMU

ELMO

FLAIR

BERT

−0.1

0.0

0.1

−0.2 −0.1 0.0 0.1 0.2
Dim1 (59.6%)

D
im

2 
(2

8.
4%

)
Correspondence analysis for NER models and errors

Figure 2: Correspondence analysis for the models’ er-
rors. ELMO, FLAIR and BERT are more affected by
G-HC and G-I, FLAIR is also reduced with DL-C and
DE-WT. See Table 5 for more details and Table 2 for
names of categories.

Figure 3: Heatmap for errors from the five considered
models. 197 errors are common to all the models. In
this figure we can see which linguistic categories tend
to occur together.

set4. The reason for this is that diagnostic exam-
ples were selected for a broader range of topics
(not only politics or sports). In particular, docu-
ment context sentences (DCS) contain 364 unique
entities of which only 47 appeared in an exact
word form in the training data, and only 42 of them
have the same entity type (organization, location
or person) - the same type as in the CoNLL 2003

4We add statistics and a few examples from our diagnostic
data sets in the supplementary materials.

DE−BS

DE−WT

SL−C

SL−S

DL−CR

DL−S

G−A

G−HC

G−I

DL−C
●●

●

●

●

●

●

●

●

●
●

●
●

●

●

●

●

●

●

●

●

●

●

●

● ● ● ●

●

●●

●

●

●
●

● ●

●

●●

●

●

●

●

●
●

● ●

●

●

Stanford CMU ELMO FLAIR BERT

Figure 4: Radar plot with the strong and weak sides of
NER models. A radius corresponds to a number of er-
rors in a given linguistic category, the smaller the better.
See Table 5 for more details.

training set. Additionally, those sentences are also
difficult due to their linguistic properties (for some
entities you must analyse a whole article to prop-
erly distinguish their type).

As far as the results of the diagnostic sets are
concerned, we observed much better results for
solutions using embeddings generated by the lan-
guage models. It seems that by using ELMO
embeddings we can outperform the FLAIR and
BERT-Base models in case of sentences about
general topics, in which the context of a whole
sentence is more important than properties of
words composing entities.

Moreover, when we tested all the models on
random sentences (RS), this was not so good as we
might have expected. All the models are very sen-
sitive to words starting with or consisting of cap-
ital letters. Results from this diagnostic set could
help to choose a model that must work properly
on documents which were produced by the OCR
engine with their many mistakes and misspellings.

Another interesting idea is to train or just test
a model on some template sentences (TS). With
such a data set we can test a model’s ability to de-
tect proper boundaries of an entity. We can do it
by replacing a template entity with another one
consisting of a different number of words. We
could also adjust our models to a particular do-
main, e.g.to change entities with a PERSON type
in an original data set to be more globally diversi-
fied, if we have to extract person names from the



631

whole world (Asian or Russian names).

Stan-
ford

CMU ELMO FLAIR BERT

DCS (F1) 45.37 61.86 76.36 71.89 68.90
DCS (P) 43.66 58.07 73.11 69.35 59.06
DCS (R) 47.21 66.17 79.92 74.63 82.66
TS-O (F1) 68.96 79.66 89.45 88.51 83.47
TS-O (P) 76.92 78.33 85.48 85.25 75.18
TS-O (R) 62.50 81.03 93.81 92.04 93.81
TS-R (F1) 63.06 72.86 85.01 86.63 79.66
TS-R (P) 65.47 70.65 81.45 83.70 71.60
TS-R (R) 60.83 75.21 88.91 89.77 89.77
RS (No) 3571 3339 2096 1404 3086

Table 6: Diagnostic data sets results for selected mod-
els: ’DCS’ - Document Context Sentences, ’TS-O’
- Template Sentences with original entities, ’TS-R’ -
Template Sentences with replaced entities, ’RS’ - Ran-
dom Sentences. F1=multilabel F1-score, P=Precision,
R=Recall, No=number of returned entities (lower is
better). In the RS data set there are 2000 strings pre-
tending to be sentences.

4 Discussion

On the basis of our research, we can draw a num-
ber of conclusions that are not often addressed
to in publications about new neural models, their
achievements and architecture. The scope of any
assessment of new methods and models should be
broadened to the understanding of their mistakes
and the reasons why these models perform well
or poorly in concrete examples, contexts and word
meanings. These issues are particularly important
in text data sets, in which semantic meaning and
linguistic syntax are very complex.

In our effort to define linguistic categories for
problematic Named Entities and their statistics in
the CoNLL 2003 test set, we were able to draw
a few additional conclusions regarding data an-
notation and augmentation processes. Moreover,
our categories are similar to the taxonomy defined
in publication about errors analysis for Uyghur
Named Tagger (Abudukelimu et al., 2018).

4.1 The annotation process

The annotation process is a very tedious and ex-
haustive task for a person involved. Errors in data
sets are expected but what must be checked is their
impact on generalizing a model, e.g. one can cre-
ate entities in places where they do not occur and
check the model’s stability. There are some useful

applications for detecting annotation errors (Rat-
ner et al., 2017), (Graliński et al., 2019) and (Wis-
niewski, 2018) but they are not used very often.
Obviously, an appropriate and exhaustive docu-
mentation for the data set creation and annota-
tion process is crucial. All annotated entity types
should be described in details and examples of
border cases should be given. In our analysis of
the CoNLL 2003 data set we did not find any doc-
umentation. We have made our own assumptions
and tried to guess why some classes are annotated
in a given way. However, the work was hard and
required many discussions and extended reviews
of literature.

Secondly, there is a need for extended data sets
with a broadened annotation process, similar to
that of our diagnostic sets. E.g. linguists can ex-
tend their work not only just to the labelling of
items (sentences), but also to indicating the scope
of context that is necessary to recognise an entity,
and to extending annotations for difficult cases or
adding sub-types of entities.

Our work on diagnostic data sets is an attempt
to extend an annotation process by focusing only
on specific use cases which are less represented in
the original data set.

4.2 Extended context

A new model training process itself should consist
of more augmentation of the data set. Currently,
there is some work being done on this topic, e.g.
a semi-supervised context change with cutting the
neighbourhood around NEs using a sliding win-
dow (Clark et al., 2018). Other techniques could
be a random change of the first letter (or whole
words) of NEs so that the model would not be so
vulnerable to capitalized letters in names or small
changes in sentences (e.g. adding or removing a
dot at the end of a sentence).

Furthermore, a sentence itself is not always suf-
ficient to recognise a class of a NE. In these cases,
in both training and test data sets, there should be
more samples where there are indications of co-
references that are important to recognise particu-
lar NEs. Then, the input of a model should com-
prise a sentence and embedded features (or any
representation) of co-references or their contexts.
E.g. ”Little was banned. Peter Little took part
in the last match with Welsh team.” - in the first
sentence, we are are not sure if it is a NE. Then
”Peter Little” indicates the proper NE type. An



632

example of a model and data processing pipeline
(i.e. memory of embeddings) that takes into con-
sideration the same names in different sentences
is to be found in (Akbik et al., 2019) and (Zhang
et al., 2018).

Another important improvement is adding in-
formation about document layout or the structure
of a text, e.g. a table, its rows and columns, and
headings. In CoNLL 2003, there are many sports
news, stock exchange reports or timetables where
the structure of a text helps to understand its con-
text, and thus to better recognise its NEs. Such
a solution for another domaininvoice information
extractionis elaborated on by (Katti et al., 2018)
or (Liu et al., 2019). The solutions mentioned here
combine character information with document im-
age information in one architecture of a neural net-
work.

The CoNLL 2003 test set is certainly too small
to test the generalisation and stability of a model.
Faced with this issue, we must find new techniques
to prevent over-fitting. For instance, we could
check a model’s resistance to examples prepared
in our diagnostics data sets, e.g. after changing a
NE in a template sentence, the model should find
the entity in the same place. We could also pre-
pare small modifications to our original sentences,
e.g. add or remove a dot at the end of an exam-
ple and compare results (similarly to adversarial
methods).

5 Concluding remarks

Mistakes are not all created equal. A comparison
of models based on scores like F1 is rather simplis-
tic. In this paper we defined 4 major and 11 minor
linguistic categories of errors for NER problems.
For the CoNLL 2003 data set and five impor-
tant ML models (Stanford, CMU, ELMO, FLAIR,
BERT-base) we re-annotated all errors with re-
spect to the newly proposed ontology.

The presented analysis helps better understand
a source of problems in recent models and also to
better understand why some models are more reli-
able on one data set but less not on another.

Acknowledgements

TSt, AWr, AW, DZi would like to thank for the fi-
nancial support that their project conducted by Ap-
plica.ai has received from the European Regional
Development Fund (POIR.01.01.01-00- 0144/17-
00). PBi was financially supported by European

Regional Development Fund POIR.01.01.01-00-
0328/17.

Our research was also partially supported as
a part of the RENOIR Project by the European
Unions Horizon 2020 Research and Innovation
Programme under the Marie Skodowska-Curie
grant agreement No 691152 and by the Ministry
of Science and Higher Education (Poland), grant
Nos. W34/H2020/2016.

References
Halidanmu Abudukelimu, Abudoukelimu Abulizi, Bo-

liang Zhang, Xiaoman Pan, Di Lu, Heng Ji, and
Yang Liu. 2018. Error analysis of Uyghur name
tagging: Language-specific techniques and remain-
ing challenges. In Proceedings of the Eleventh In-
ternational Conference on Language Resources and
Evaluation (LREC-2018), Miyazaki, Japan. Euro-
pean Languages Resources Association (ELRA).

Alan Akbik, Tanja Bergmann, and Roland Vollgraf.
2019. Pooled contextualized embeddings for named
entity recognition. In Proceedings of the Annual
Conference of the North American Chapter of the
Association for Computational Linguistics NAACL.
Association for Computational Linguistics.

Alan Akbik, Duncan Blythe, and Roland Vollgraf.
2018. Contextual string embeddings for sequence
labeling. In Proceedings of the 27th International
Conference on Computational Linguistics, pages
1638–1649. Association for Computational Linguis-
tics.

Rie Kubota Ando and Tong Zhang. 2005. A framework
for learning predictive structures from multiple tasks
and unlabeled data. J. Mach. Learn. Res., 6:1817–
1853.

Alexei Baevski, Sergey Edunov, Yinhan Liu, Luke
Zettlemoyer, and Michael Auli. 2019. Cloze-
driven pretraining of self-attention networks. CoRR,
abs/1903.07785.

google bert. 2019. google-research/bert repository (is-
sue 223).

Adrian Braşoveanu, Giuseppe Rizzo, Philipp
Kuntschik, Albert Weichselbraun, and Lyndon J.B.
Nixon. 2018. Framing named entity linking error
types. In Proceedings of the Eleventh International
Conference on Language Resources and Evalu-
ation (LREC-2018), Miyazaki, Japan. European
Languages Resources Association (ELRA).

Kevin Clark, Minh-Thang Luong, Christopher D. Man-
ning, and Quoc Le. 2018. Semi-supervised se-
quence modeling with cross-view training. In Pro-
ceedings of the 2018 Conference on Empirical Meth-
ods in Natural Language Processing, pages 1914–
1925. Association for Computational Linguistics.

Ronan Collobert, Jason Weston, Léon Bottou, Michael
Karlen, Koray Kavukcuoglu, and Pavel Kuksa.

https://www.aclweb.org/anthology/L18-1700
https://www.aclweb.org/anthology/L18-1700
https://www.aclweb.org/anthology/L18-1700
https://naacl2019.org/program/accepted/
https://naacl2019.org/program/accepted/
http://aclweb.org/anthology/C18-1139
http://aclweb.org/anthology/C18-1139
http://dl.acm.org/citation.cfm?id=1046920.1194905
http://dl.acm.org/citation.cfm?id=1046920.1194905
http://dl.acm.org/citation.cfm?id=1046920.1194905
http://arxiv.org/abs/1903.07785
http://arxiv.org/abs/1903.07785
https://github.com/google-research/bert/issues/223
https://github.com/google-research/bert/issues/223
https://www.aclweb.org/anthology/L18-1040
https://www.aclweb.org/anthology/L18-1040
http://aclweb.org/anthology/D18-1217
http://aclweb.org/anthology/D18-1217


633

2011. Natural language processing (almost) from
scratch. J. Mach. Learn. Res., 12:2493–2537.

Jacob Devlin, Ming-Wei Chang, Kenton Lee, and
Kristina Toutanova. 2018. BERT: pre-training of
deep bidirectional transformers for language under-
standing. CoRR, abs/1810.04805.

Jenny Rose Finkel, Trond Grenager, and Christopher
Manning. 2005. Incorporating non-local informa-
tion into information extraction systems by gibbs
sampling. In Proceedings of the 43nd Annual Meet-
ing of the Association for Computational Linguis-
tics, pages 363–370. Association for Computational
Linguistics.

Flair. 2018. Flair repository (issue 206 and 390).

Radu Florian, Abe Ittycheriah, Hongyan Jing, and
Tong Zhang. 2003. Named entity recognition
through classifier combination. In Proceedings
of the Seventh Conference on Natural Language
Learning at HLT-NAACL 2003.

Filip Graliński, Anna Wróblewska, Tomasz Sta-
nisławek, Kamil Grabowski, and Tomasz Górecki.
2019. GEval: Tool for debugging NLP datasets and
models. In Proceedings of the 2019 ACL Workshop
BlackboxNLP: Analyzing and Interpreting Neural
Networks for NLP, pages 254–262, Florence, Italy.
Association for Computational Linguistics.

Masaaki Ichihara, Kanako Komiya, Tomoya Iwakura,
and Maiko Yamazaki. 2015. Error analysis of
named entity recognition in bccwj.

Anoop R. Katti, Christian Reisswig, Cordula Guder,
Sebastian Brarda, Steffen Bickel, Johannes Höhne,
and Jean Baptiste Faddoul. 2018. Chargrid: To-
wards understanding 2d documents. In Proceed-
ings of the 2018 Conference on Empirical Methods
in Natural Language Processing, pages 4459–4469.
Association for Computational Linguistics.

Guillaume Lample, Miguel Ballesteros, Sandeep Sub-
ramanian, Kazuya Kawakami, and Chris Dyer. 2016.
Neural architectures for named entity recognition.
In Proceedings of the 2016 Conference of the North
American Chapter of the Association for Computa-
tional Linguistics: Human Language Technologies,
pages 260–270. Association for Computational Lin-
guistics.

Jing Li, Aixin Sun, Jianglei Han, and Chenliang Li.
2018. A survey on deep learning for named entity
recognition. CoRR, abs/1812.09449.

Xiaojing Liu, Feiyu Gao, Qiong Zhang, and Huasha
Zhao. 2019. Graph convolution for multimodal in-
formation extraction from visually rich documents.
CoRR, abs/1903.11279.

Xuezhe Ma and Eduard Hovy. 2016. End-to-end se-
quence labeling via bi-directional lstm-cnns-crf. In
Proceedings of the 54th Annual Meeting of the As-
sociation for Computational Linguistics (Volume 1:
Long Papers), pages 1064–1074. Association for
Computational Linguistics.

Christopher D. Manning. 2011. Part-of-speech tagging
from 97% to 100%: Is it time for some linguistics?
In Proceedings of the 12th International Conference
on Computational Linguistics and Intelligent Text
Processing - Volume Part I, CICLing’11, pages 171–
189, Berlin, Heidelberg. Springer-Verlag.

MUC. 1995. Muc-6 challenges and data sets.

Christina Niklaus, Matthias Cetto, André Freitas, and
Siegfried Handschuh. 2018. A survey on open infor-
mation extraction. In Proceedings of the 27th Inter-
national Conference on Computational Linguistics,
pages 3866–3878, Santa Fe, New Mexico, USA. As-
sociation for Computational Linguistics.

Alexandre Passos, Vineet Kumar, and Andrew McCal-
lum. 2014. Lexicon infused phrase embeddings for
named entity resolution. In Proceedings of the Eigh-
teenth Conference on Computational Natural Lan-
guage Learning, pages 78–86. Association for Com-
putational Linguistics.

Matthew E. Peters, Mark Neumann, Mohit Iyyer, Matt
Gardner, Christopher Clark, Kenton Lee, and Luke
Zettlemoyer. 2018. Deep contextualized word rep-
resentations. In Proc. of NAACL.

Alexander Ratner, Stephen H. Bach, Henry R. Ehren-
berg, Jason Alan Fries, Sen Wu, and Christopher Ré.
2017. Snorkel: Rapid training data creation with
weak supervision. CoRR, abs/1711.10160.

Georges Rey. 2018. The analytic/synthetic distinction.
In Edward N. Zalta, editor, The Stanford Encyclo-
pedia of Philosophy, fall 2018 edition. Metaphysics
Research Lab, Stanford University.

Beth M. Sundheim. 1995. Overview of results of
the muc-6 evaluation. In Proceedings of the 6th
Conference on Message Understanding, MUC6 ’95,
pages 13–31, Stroudsburg, PA, USA. Association
for Computational Linguistics.

Erik F. Tjong Kim Sang and Fien De Meulder.
2003. Introduction to the conll-2003 shared task:
Language-independent named entity recognition. In
Proceedings of the Seventh Conference on Natural
Language Learning at HLT-NAACL 2003.

Guillaume Wisniewski. 2018. Errator: a tool to help
detect annotation errors in the universal dependen-
cies project. In Proceedings of the Eleventh In-
ternational Conference on Language Resources and
Evaluation (LREC-2018), Miyazaki, Japan. Euro-
pean Languages Resources Association (ELRA).

Vikas Yadav and Steven Bethard. 2018. A survey on
recent advances in named entity recognition from
deep learning models. In Proceedings of the 27th In-
ternational Conference on Computational Linguis-
tics, pages 2145–2158. Association for Computa-
tional Linguistics.

Boliang Zhang, Spencer Whitehead, Lifu Huang, and
Heng Ji. 2018. Global attention for name tagging.
In Proceedings of the 22nd Conference on Compu-
tational Natural Language Learning, pages 86–96.

http://dl.acm.org/citation.cfm?id=1953048.2078186
http://dl.acm.org/citation.cfm?id=1953048.2078186
http://arxiv.org/abs/1810.04805
http://arxiv.org/abs/1810.04805
http://arxiv.org/abs/1810.04805
http://nlp.stanford.edu/~manning/papers/gibbscrf3.pdf
http://nlp.stanford.edu/~manning/papers/gibbscrf3.pdf
http://nlp.stanford.edu/~manning/papers/gibbscrf3.pdf
https://github.com/zalandoresearch/flair/issues
http://aclweb.org/anthology/W03-0425
http://aclweb.org/anthology/W03-0425
https://doi.org/10.18653/v1/W19-4826
https://doi.org/10.18653/v1/W19-4826
https://aclweb.org/anthology/D18-1476
https://aclweb.org/anthology/D18-1476
https://doi.org/10.18653/v1/N16-1030
http://arxiv.org/abs/1812.09449
http://arxiv.org/abs/1812.09449
http://arxiv.org/abs/1903.11279
http://arxiv.org/abs/1903.11279
https://doi.org/10.18653/v1/P16-1101
https://doi.org/10.18653/v1/P16-1101
http://dl.acm.org/citation.cfm?id=1964799.1964816
http://dl.acm.org/citation.cfm?id=1964799.1964816
https://cs.nyu.edu/cs/faculty/grishman/muc6.html
https://www.aclweb.org/anthology/C18-1326
https://www.aclweb.org/anthology/C18-1326
https://doi.org/10.3115/v1/W14-1609
https://doi.org/10.3115/v1/W14-1609
http://arxiv.org/abs/1711.10160
http://arxiv.org/abs/1711.10160
https://doi.org/10.3115/1072399.1072402
https://doi.org/10.3115/1072399.1072402
http://aclweb.org/anthology/W03-0419
http://aclweb.org/anthology/W03-0419
https://www.aclweb.org/anthology/L18-1711
https://www.aclweb.org/anthology/L18-1711
https://www.aclweb.org/anthology/L18-1711
http://aclweb.org/anthology/C18-1182
http://aclweb.org/anthology/C18-1182
http://aclweb.org/anthology/C18-1182

