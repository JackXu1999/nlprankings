



















































A Syntax-aware Multi-task Learning Framework for Chinese Semantic Role Labeling


Proceedings of the 2019 Conference on Empirical Methods in Natural Language Processing
and the 9th International Joint Conference on Natural Language Processing, pages 5382–5392,
Hong Kong, China, November 3–7, 2019. c©2019 Association for Computational Linguistics

5382

A Syntax-aware Multi-task Learning Framework for
Chinese Semantic Role Labeling

Qingrong Xia, Zhenghua Li∗, Min Zhang
Institute of Artificial Intelligence, School of Computer Science and Technology,

Soochow University, China
kirosummer.nlp@gmail.com, {zhli13, minzhang}@suda.edu.cn

Abstract

Semantic role labeling (SRL) aims to identify
the predicate-argument structure of a sentence.
Inspired by the strong correlation between
syntax and semantics, previous works pay
much attention to improve SRL performance
on exploiting syntactic knowledge, achieving
significant results. Pipeline methods based on
automatic syntactic trees and multi-task learn-
ing (MTL) approaches using standard syntac-
tic trees are two common research orienta-
tions. In this paper, we adopt a simple uni-
fied span-based model for both span-based and
word-based Chinese SRL as a strong baseline.
Besides, we present a MTL framework that
includes the basic SRL module and a depen-
dency parser module. Different from the com-
monly used hard parameter sharing strategy
in MTL, the main idea is to extract implicit
syntactic representations from the dependency
parser as external inputs for the basic SRL
model. Experiments on the benchmarks of
Chinese Proposition Bank 1.0 and CoNLL-
2009 Chinese datasets show that our proposed
framework can effectively improve the perfor-
mance over the strong baselines. With the ex-
ternal BERT representations, our framework
achieves new state-of-the-art 87.54 and 88.5
F1 scores on the two test data of the two bench-
marks, respectively. In-depth analysis are con-
ducted to gain more insights on the proposed
framework and the effectiveness of syntax.

1 Introduction

Semantic role labeling (SRL) is a fundamental
and important task in natural language processing
(NLP), which aims to identify the semantic struc-
ture (Who did what to whom, when and where,
etc.) of each given predicate in a sentence. Seman-
tic knowledge has been widely exploited in many
down-stream NLP tasks, such as information ex-

∗Corresponding author.

昨天

Yesterday

，

,
汤姆

Tom

买

[Root]

bought
了 一双

a pair of
鞋

shoes

。

.

adv
punc

subj adjct
obj

punc

adv
root

AM-TMP A0 V A1

AM-TMP A0 买.01 A1

Figure 1: Example of span-based (blue blocks) and
word-based (red blocks) SRL formulations in a sen-
tence, where the top part is its dependency tree.

traction (Bastianelli et al., 2013), machine transla-
tion (Liu and Gildea, 2010; Gao and Vogel, 2011)
and question answering (Shen and Lapata, 2007;
Wang et al., 2015a).

There are two formulations of SRL in the com-
munity according to the definition of semantic
roles. The first is called span-based SRL, which
employs a continuous word span as a semantic role
and follows the manual annotations in the Prop-
Bank (Palmer et al., 2005) and NomBank (Mey-
ers et al., 2004). The second is word-based SRL
(Surdeanu et al., 2008), also called dependency-
based SRL, whose semantic role is usually syn-
tactic or semantic head word of the manually an-
notated word span. Figure 1 gives an example of
the two forms in a sentence, where “bought” is the
given predicate.

Intuitively, syntax and semantics are strongly
correlative. For example, the semantic A0 and A1
roles are usually the syntactic subject and object,
as shown in Figure 1. Inspired by the correla-
tion, researchers try to improve SRL performance
by exploring various ways to integrate syntactic
knowledge (Roth and Lapata, 2016; He et al.,
2018b; Swayamdipta et al., 2018). In contrast,
some recent works (He et al., 2017; Tan et al.,
2018; Cai et al., 2018) propose deep neural mod-
els for SRL without considering any syntactic in-



5383

formation, achieving promising results. Most re-
cently, He et al. (2018a); Li et al. (2019) extend
the span-based models to jointly tackle the predi-
cate and argument identification sub-tasks of SRL.

Compared with the large amount of research for
English SRL, Chinese SRL works are rare, mainly
because of the limited amount of data and lack
of attention of Chinese researchers. For Chinese,
the commonly used datasets are Chinese Proposi-
tion Bank 1.0 (CPB1.0) (span-based) (Xue, 2008)
and CoNLL-2009 Chinese (word-based) (Hajič
et al., 2009). The CPB1.0 dataset follows the
same annotation guideline with the English Prop-
Bank benchmark (Palmer et al., 2005). Wu and
Palmer (2015) present a top model based selec-
tion preference approach to improve Chinese SRL.
Since the amount of CPB1.0 dataset is small, Xia
et al. (2017) exploit heterogeneous SRL data to
improve the performance via a progressive learn-
ing approach. The CoNLL-2009 benchmark is
released by the CoNLL-2009 shared task (Hajič
et al., 2009). Previous works (Marcheggiani et al.,
2017; He et al., 2018b; Cai et al., 2018) mainly
focus on building more powerful models or ex-
ploring the usage of external knowledge on this
dataset.

Inspired by the development of neural models
and exploration of syntactic information, this pa-
per proposes a MTL framework to extract syntac-
tic representations as the external input features
for the simple unified SRL model. The contribu-
tions of our paper are three-folds:

1. We introduce a simple unified model for
span-based and word-based Chinese SRL.

2. We propose a MTL framework to extract
implicit syntactic representations for SRL
model, which significantly outperforms the
baseline model.

3. Detailed analysis gains crucial insights on the
effectiveness of our proposed framework.

We conduct experiments on the benchmarks of
CPB1.0 and CoNLL-2009. The results show that
our framework achieves new state-of-the-art 87.54
and 88.5 F1 scores on the two test data, respec-
tively.

2 Basic SRL Model

Motivated by the recently presented span-based
models (He et al., 2018a; Li et al., 2019) for

jointly predicting predicates and arguments, we in-
troduce a simple unified span-based model. For-
mally, given a sentence s = w1, w2, ..., wn, the
span-based model aims to predict a set of labeled
predicate-argument relationships Y ⊆ P×A×R,
where P = {w1, w2, ..., wn} is the set of all can-
didate predicates, A = {(wi, ..., wj)|1 ≤ i ≤
j ≤ n} is the set of all candidate arguments, and
R is the set of the semantic roles. Following He
et al. (2018a), we also include a null label � in the
role set R indicating no relation between the fo-
cused predicate and argument. The model objec-
tive is to optimize the probability of the predicate-
argument-role tuples y ∈ Y in a sentence s, which
is formulated as:

P (y|s) =
∏

p∈P,a∈A,r∈R
P (y(p,a,r)|s)

=
∏

p∈P,a∈A,r∈R

eφ(p,a,r)∑
r′∈R e

φ(p,a,r′)

(1)

where φ(p, a, r) = φp(p)+φa(a)+φr(p, a) is the
score of the predicate-argument-relation tuple. We
directly adopt the model architecture of He et al.
(2018a) as our basic SRL model with a modifica-
tion on the argument representation. The architec-
ture of the basic SRL module is shown in the right
part of Figure 2, and we will describe it in the fol-
lowing subsections.

2.1 Input Layer
Following He et al. (2018a); Li et al. (2019), we
employ CNNs to encode Chinese characters for
each word wi into its character representation, de-
noted as repchari . Then, we concatenate rep

char
i

with the word embedding embwordi to represent
the word-level features as our basic model in-
put. In addition, we also employ BERT represen-
tations (Devlin et al., 2019) to boost the perfor-
mance of our baseline model, which we denote as
repBERTi . Formally, the input representation of
wi is:

xi = rep
char
i ⊕ embwordi ⊕ repBERTi (2)

, where ⊕ is the concatenation operation. Our ba-
sic SRL model and BERT-enhanced baseline de-
pend on whether including the BERT representa-
tion repBERTi or not.

2.2 BiLSTM Encoder
Over the input layer, we employ the BiLSTMs
with highway connections (Srivastava et al., 2015;



5384

Input
representation

BiLSTMs

买
bought

Biaffine Scorer

了

MLP
Scorer

买
bought

Predicate
Representation

了 一双
a pair of

鞋
shoes

X

Argument
Representation

Figure 2: The detailed architecture of our proposed framework, where the left part is the dependency parser and
the right part is the basic SRL module, respectively.

Zhang et al., 2016b) to encode long-range depen-
dencies and obtain rich representations denoted as
hi for time stamp i. The highway connections are
used to alleviate the gradient vanishing problem
when training deep neural networks.

2.3 Predicate and Argument Representations

We directly employ the output of the top BiLSTM
as the predicate representation at each time stamp.
For all the candidate arguments, we simplify the
representations by employing the mean operation
over the BiLSTM outputs within the correspond-
ing argument spans, which achieves similar results
compared with the attention-based span represen-
tations (He et al., 2018a) on English SRL in our
preliminary experiments. Formally,

reppi = hi

repaj,k = mean(hj , ...,hk)

(1 ≤ i ≤ n; 1 ≤ j ≤ k ≤ n)
(3)

Specifically, for word-based SRL, we only need to
set the length of candidate arguments to be 1.

2.4 MLP Scorer

We employ the MLP scorers as the scoring func-
tions to determine whether the candidate predi-
cates or arguments need to be pruned. Another
MLP scorer is employed to compute the score of
whether the focused candidate predicate and argu-

ment can compose a semantic relation.

φp(p) = w
>
pMLPp(rep

p
i )

φa(a) = w
>
a MLPa(rep

a
j,k)

φr(p, a) = w
>
r MLPr([rep

p
i ; rep

a
j,k])

(4)

3 Proposed Framework

Our framework includes two modules, a basic
SRL module and a dependency parser module, as
shown in Figure 2. In this section, we will first
describe the architecture of the employed depen-
dency parser, and then illustrate the integration of
the syntactic parser into the basic SRL model.

3.1 Dependency Parser Module
We employ the state-of-the-art biaffine parser pro-
posed by Dozat and Manning (2017) as the depen-
dency parser module in our framework, as shown
by the left part of Figure 2. In order to better
fit the dependency parser into our framework, we
make some modifications on the original model ar-
chitecture. First, we remove the Part-of-Speech
(PoS) tagging embeddings and add the Chinese
character CNN representations, so the resulting in-
put representation is the same as the SRL module.
Second, we substitute the BiLSTMs in the origi-
nal biaffine parser with the same 3-layer highway
BiLSTMs used in our SRL module. The biaffine
scorer is proposed to compute the score of candi-
date syntactic head and modifier, which remains
unchanged.



5385

(a)

Dep SRL Dep SRL

(b)

Figure 3: Comparison between the architectures of
hard parameter sharing (a) and our proposed implicit
representation integration (b).

3.2 Details of Integration
Multi-task learning (MTL) approaches can effec-
tively exploit the standard dependency trees to
improve the SRL performance, regarding depen-
dency parsing as the auxiliary task. Hard pa-
rameter sharing (Ruder, 2017) is the most com-
monly used method in MTL, which shares several
common layers between tasks and keeps the task-
specific output layers, as illustrated by the sub-
figure a in Figure 3. We propose a better way to
integrate the focused two tasks in this work. In
the following, we will describe the intuition and
details of the integration on the two tasks.

As is well known, the hard parameter sharing
approach can provide representations for all the
shared tasks and reduce the probability of over-
fitting on the main task. However, this kind of
sharing strategy somewhat weakens the represen-
tation framework maintains distinct model param-
eters for each task, due to the neutralization of
knowledge introduced by the auxiliary task. Dif-
ferent from the hard parameter sharing strategy,
we propose to integrate the syntactic information
into the input layer of the basic SRL module, as
illustrated by sub-figure b of Figure 3. And Figure
2 shows the detailed architecture. First, we ex-
tract all the 3 BiLSTM hidden outputs of the de-
pendency parser as the syntactic representations.
Second, we employ the normalized weights to sum
the extracted representations as the final syntac-
tic representation for word wi, denoted as rep

syn
i .

Formally,

repsyni =
∑

1≤j≤N
αj ∗ hji (5)

where N is the layer number of the highway BiL-
STMs, and αj is the j−th softmax weight. Fi-

nally, the extracted syntactic representations are
fed into the input layer of the SRL module, and
concatenated with the original SRL module input.
We design this framework for several considera-
tions: 1) the proposed framework keeps the own
model parameters for each task, thereby maximiz-
ing task-specific information for the main task, 2)
the dependency parser module can be updated by
the gradients returned from the extracted syntactic
representations, which can encourage it to produce
semantic preferred representations.

3.3 Training Objective

Given the sets of SRL data S and dependency data
D, the framework loss function is defined as the
sum of the negative log-likelihood loss of the two
tasks:

−
( ∑

(Y ∗s ,Xs)∈S

logP (Y ∗s |Xs)

+ α
∑

(Y ∗d ,Xd)∈D

logP (Y ∗d |Xd)
) (6)

where Y ∗s and Y
∗
d are gold semantic and syntactic

structures respectively, and α is a corpus weight-
ing factor to control the loss contribution of the
dependency data in each batch as discussed in the
experiments.

4 Experiments

4.1 Settings

We evaluate the proposed MTL framework on two
commonly used benchmark datasets of Chinese:
Chinese Proposition Bank 1.0 (CPB1.0) (span-
based) (Xue, 2008) and CoNLL-2009 (word-
based) (Hajič et al., 2009). Following previous
works, we report the results of span-based SRL
in two setups: pre-identified predicates and end-
to-end. For word-based SRL, we only report the
results in the pre-identified predicates setting. Fol-
lowing Roth and Lapata (2016), we employ the
mate-tools1 (Björkelund et al., 2010) for the pred-
icate disambiguation, which achieves 94.87% and
94.91% F1 scores on the CoNLL-2009 Chinese
development and test data respectively.

Dependency Parsing Data. We employ the
Chinese Open Dependency Treebank2 constructed
at Soochow University. The treebank construction

1
https://code.google.com/archive/p/mate-tools/

2
http://hlt.suda.edu.cn/index.php/CODT

https://code.google.com/archive/p/mate-tools/
http://hlt.suda.edu.cn/index.php/CODT


5386

project aims to continually build a large-scale Chi-
nese dependency treebank that covers up-to-date
texts from different domains and sources (Peng
et al., 2019). So far, CODT contains 67,679 sen-
tences from 9 different domains or sources.

BERT Representations. Recently, BERT
(Bidirectional Encoder Representations from
Transformers) is proposed by Devlin et al. (2019),
which makes use of Transformers to learn contex-
tual representations between words. In this paper,
we use the pre-trained Chinese model3 to extract
the BERT representations for our span-based and
word-based SRL datasets. We extract the fixed
BERT representations from the last four hidden
layers of the pre-trained model. Finally, we also
employ the normalized weighted sum operation
to obtain the final BERT representation for each
word wi, denoted as repBERTi .

Hyperparameters. We employ word2vec
(Mikolov et al., 2013) to train the Chinese word
embeddings on the Chinese Gigaword dataset4.
The Chinese char embeddings are randomly ini-
tialized, and the dimension is 100. We employ
the CNN to get the Chinese char representations,
which has window size of 3, 4 and 5, and the out-
put channel size is 100. For other parameter set-
tings in the SRL module, we mostly follow the
work of He et al. (2018a). As for the pruning
of candidate predicates and arguments, we choose
the pruning ratios according to the training data,
using λp = 0.4 for predicates and λa = 0.8 for
arguments with up to 30 words.

Training Criterion. We choose Adam
(Kingma and Ba, 2015) optimizer with 0.001 as
the initial learning rate and 0.1% as the decay rate
for every 100 steps. Each data batch is composed
of both SRL and dependency instances. We ran-
domly shuffle the SRL and dependency training
datasets if the smaller SRL data is used up. All
baseline models are trained for at most 180,000
steps, and 100,000 steps for other models. In ad-
dition, we pick the best model on the development
data for testing. We apply 0.5 dropout to the word
embeddings and Chinese character representations
and 0.2 dropout to all hidden layers. We employ
variational dropout masks that are shared across
all timesteps (Gal and Ghahramani, 2016) for the
highway BiLSTMs, with 0.4 dropout rate.

Evaluation. We adopt the official scripts pro-
3
https://github.com/google-research/bert#

pre-trained-models
4
https://catalog.ldc.upenn.edu/LDC2003T09

vided by CoNLL-20055 and CoNLL-20096 for
span-based and word-based SRL evaluation, re-
spectively. We conduct significant tests using the
Dan Bikel’s randomized parsing evaluation com-
parer.

4.2 Syntax-aware Methods

To illustrate the effectiveness and advantage of
our proposed framework7 (Integration of Implicit
Representations, IIR), we conduct several exper-
iments with the recently employed syntax-aware
methods on CPB1.0 dataset for comparison:

• Tree-GRU Xia et al. (2019) investigate sev-
eral syntax-aware methods for the English
span-based SRL, showing the effectiveness
of introducing syntactic knowledge into the
SRL task. We only compare with the Tree-
GRU method, since the other methods are all
predicate-specific and hence not fit into our
basic SRL model.

• FIR Following Yu et al. (2018) and Zhang
et al. (2019), we extract the outputs of BiL-
STMs as the fixed implicit representations
(FIR) from a pre-trained biaffine parser. In
detail, we train the biaffine parser with the
same training data used in our framework,
and employ the combination of development
data of CDT (997 sentences) and PCTB7
(998 sentences) as the development data. The
biaffine parser achieves 79.71% UAS and
74.74% LAS on the combined development
data.

• HPS We employ the commonly used hard pa-
rameter sharing (HPS) strategy of MTL as a
strong baseline, which shares the word and
char embeddings and 3-layer BiLSTMs be-
tween the dependency parser and the basic
SRL module.

4.3 Main Results

Results of Syntax-aware Methods. Table 1
shows the results of these syntax-aware methods
on CPB1.0 dataset. First, the first line shows the
results of our baseline model, which only employs
the word embeddings and char representations as
the inputs of the basic SRL model. Second, the

5
http://www.cs.upc.edu/˜srlconll/st05/st05.html

6
https://ufal.mff.cuni.cz/conll2009-st/scorer.

html
7
https://github.com/xxx

https://github.com/google-research/bert#pre-trained-models
https://github.com/google-research/bert#pre-trained-models
https://catalog.ldc.upenn.edu/LDC2003T09
http://www.cs.upc.edu/~srlconll/st05/st05.html
https://ufal.mff.cuni.cz/conll2009-st/scorer.html
https://ufal.mff.cuni.cz/conll2009-st/scorer.html
https://github.com/xxx


5387

Dev Test

Methods P R F1 P R F1
Baseline 81.52 82.17 81.85 80.95 80.01 80.48
Baseline + Dep (Tree-GRU) 82.35 80.24 81.28 82.10 78.11 80.06
Baseline + Dep (FIR) 83.56 83.05 83.30 83.38 81.93 82.65
Baseline + Dep (HPS) 82.58 84.15 83.36 83.22 83.81 83.51
Baseline + Dep (IIR) 83.12 83.66 83.39 84.49 83.34 83.91

Table 1: Experimental results of syntax-aware methods we compare on CPB1.0 dataset.

Tree-GRU method only achieves 80.06 F1 score
on the test data, which even didn’t catch up with
the baseline model. We think this is caused by
the relatively low accuracy in Chinese dependency
parsing. Third, the FIR approach outperforms the
baseline by 2.17 F1 score on the test data, demon-
strating the effectiveness of introducing fixed im-
plicit syntactic representations. Forth, the HPS
strategy achieves more significant performance by
83.51 F1 score. Finally, our proposed framework
achieves the best performance of 83.91 F1 score
among these methods, outperforming the baseline
by 3.43 F1 score. All the improvements are sta-
tistically significant (p < 0.0001). From these
experimental results, we can conclude that: 1)
the quality of syntax has a crucial impact on the
methods which depend on the systematic depen-
dency trees, like Tree-GRU, 2) the implicit syn-
tactic features have the potential to improve the
down-stream NLP tasks, and 3) learning the syn-
tactic features with the main task performs better
than extract them from a fixed dependency parser.

Results on CPB1.0. Table 2 shows the results
of our baseline model and proposed framework us-
ing external dependency trees on CPB1.0, as well
as the corresponding results when adding BERT
representations. It is clear that adding dependency
trees into the baseline SRL model can effectively
improve the performance (p < 0.0001), no mat-
ter whether employ the BERT representations or
not. Especially, our proposed framework (IIR)
consistently outperforms the hard parameter shar-
ing strategy. So we only report the results of our
proposed framework in later experiments. Our fi-
nal results outperforms the best previous model
(Xia et al., 2017) by 7.87 and 4.24 F1 scores with
BERT representations or not, respectively.

Table 3 shows the results of our framework in
the end-to-end setting. To our best knowledge,
we are the first to present the results of end-to-

Methods F1
Previous Works
Sun et al. (2009) 74.12
Wang et al. (2015b) 77.59
Sha et al. (2016) 77.69
Xia et al. (2017) 79.67
Ours
Baseline 80.48
Baseline + Dep (HPS) 83.51
Baseline + Dep (IIR) 83.91
Baseline + BERT 86.62
Baseline + BERT + Dep (HPS) 87.03
Baseline + BERT + Dep (IIR) 87.54

Table 2: Results and comparison with previous works
on CPB1.0 test set.

end on the CPB1.0 dataset. We achieve the re-
sult of 85.57 in F1 score, which is a strong base-
line for later works. It is clear that our framework
can still achieve better results compared with the
strong baseline, which employs BERT representa-
tions as the external input.

Results on CoNLL-2009. Table 4 shows the
results of our framework and comparison with
previous works on the CoNLL-2009 Chinese test
data. Our baseline achieves nearly the same per-

Dev Test

Methods F1 F1
Ours
Baseline 80.37 79.29
Baseline + Dep (IIR) 82.39 81.73
Baseline + BERT 85.30 85.26
Baseline + BERT + Dep (IIR) 85.92 85.57

Table 3: F1 scores of end-to-end settings on CPB1.0
test set.



5388

Methods P R F1
Previous Works
Roth and Lapata (2016) 83.2 75.9 79.4
Marcheggiani et al. (2017) 84.6 80.4 82.5
He et al. (2018b) 84.2 81.5 82.8
Cai et al. (2018) 84.7 84.0 84.3
Ours
Baseline 83.7 84.8 84.2
Baseline + Dep (IIR) 84.6 85.7 85.1
Baseline + BERT 87.8 89.2 88.5
Baseline + BERT + Dep (IIR) 88.0 89.1 88.5

Table 4: Results and comparison with previous works
on CoNLL-2009 Chinese test set.

0-10 11-20 21-30 31-40 41-MAX

80

85

90

95

F1
(%

)

Baseline
Baseline + Dep (IRI)
Baseline + BERT
Baseline + BERT + Dep (IRI)

Figure 4: F1 scores regarding to the sentence length of
the CoNLL-2009 Chinese dev data.

formance with Cai et al. (2018), which is an end-
to-end neural model that consists of BiLSTM en-
coder and biaffine scorer. Our proposed frame-
work outperforms the best reported result (Cai
et al., 2018) by 0.8 F1 score and brings a signif-
icant improvement (p < 0.0001) of 0.9 F1 score
over our baseline model. Our experimental result
boosts to 88.5 F1 score when the framework is
enhanced with BERT representations. However,
compared with the results in the settings without
BERT, the improvement is fairly small (88.53 -
88.47 = 0.06 F1 score, p > 0.1)8 of the proposed
framework, which we will discuss in Section 5.3.

5 Analysis

In this section, we conduct detailed analysis to un-
derstand the improvements introduced by our pro-
posed framework.

5.1 Long-distance Dependencies
To analyze the effect of the proposed framework
regarding to the distance of sentence lengths, we
report the F1 scores of different sets of sentence

8Following previous works, we only retrain the experimental results with
one decimal point

A0 A1 A2 ADV DIS LOC MNR TMP
60

65

70

75

80

85

90

80.63

82.51

73.51

83.87

71.71

76.03 76.22

78.58

82.56

85.25

74.33

84.74

71.38

76.55 76.7

80.19

A
cc

ur
ac

y(
%

)

Baseline
Baseline + Dep (IRI)

Figure 5: Accuracy comparison of different semantic
roles between Baseline and Baseline + Dep (IIR) on
CoNLL-2009 dev data.

lengths, as shown in Figure 4. We can see that
improvements are obtained for nearly all sets of
sentences, especially on the sentences with long-
distance. It demonstrate that syntactic knowledge
is beneficial for SRL and effective to capture long-
distance dependencies.

5.2 Improvements on Semantic Roles

To find which semantic roles benefit from our
syntax-aware framework, we report the F1 scores
on several semantic role labels in Figure 5. We
can see that syntax helps most on the A0 and A1
roles, which is consistent with the intuition that
the semantic A0 and A1 roles are usually the syn-
tactic subject and object of a verb predicate. Other
adjunct semantic roles like ADV, LOC, MNR and
TMP all benefit from the introduction of syntactic
information. There is an interesting finding that
the DIS role obtains worse performance when in-
troduce syntactic information. We conduct error
analysis on this phenomena, and we found that the
framework mostly confuses DIS with ADV. The
possible reason is that the two semantic roles are
both labeled as adv in syntax.

5.3 Integration with BERT

BERT is employed to boost the performance of
our basic SRL model and our proposed frame-
work. Compared with results in the settings with-
out BERT, the improvements of our framework
over the BERT-enhanced baseline are fairly small
on CoNLL-2009, as shown by the last two lines in
Table 4. To analyze the difference between the two
models (Baseline + BERT and Baseline + BERT +
Dep (IIR)), we conduct an analysis on the sentence
performance comparison between them, which is
inspired by Zhang et al. (2016a). As shown in Fig-



5389

70 75 80 85 90 95 100

70

75

80

85

90

95

100

F1 (%)

F1
(%

)

Figure 6: Sentence F1 scores comparison on CoNLL-
2009 Chinese test data, where the x axis presents the
F1 scores of Baseline + BERT and y axis shows the F1
scores of Baseline + BERT + Dep (IIR), respectively.

ure 6, we can see that most of the scatter points are
off the diagonal line, demonstrating strong differ-
ences between the two models. Based on this find-
ing, how to better integrate syntactic knowledge
and BERT representations becomes an interesting
and meaningful question, and we leave it for future
work.

6 Related Work

Traditional discrete-feature-based SRL works
(Swanson and Gordon, 2006; Zhao et al., 2009)
mainly make heavy use of syntactic information.
Along with the impressive development of neural-
network-based approaches in the NLP community,
much attention has been paid to build more pow-
erful neural model without considering any syn-
tactic information. Zhou and Xu (2015) employ
deep stacked BiLSTMs and achieve strong per-
formance for span-based English SRL. He et al.
(2017) extend their work (Zhou and Xu, 2015)
by employing several advanced practices in recent
deep learning literature, leading to significant im-
provements. Tan et al. (2018) present a strong
self-attention based model, achieving significant
improvements. Inspired by the span-based model
proposed by Lee et al. (2017) for coreference res-
olution, He et al. (2018a); Ouchi et al. (2018)
present similar span-based models for SRL which
can exploit span-level features. For word-based
SRL, Marcheggiani et al. (2017) propose a sim-
ple and fast syntax-agnostic model with rich input
representations. Cai et al. (2018) present an end-
to-end model with BiLSTMs and biaffine scorer

to jointly handle the predicate disambiguation and
the argument labeling sub-tasks.

Apart from the above syntax-free works, re-
searchers also pay much attention on improving
the neural-based SRL approaches by introducing
syntactic knowledge. Roth and Lapata (2016) in-
troduce the dependency path embeddings to the
neural-based model and achieve substantial im-
provements. Marcheggiani and Titov (2017) em-
ploy the graph convolutional neural networks on
top of the BiLSTM encoder to encode syntactic
information. He et al. (2018b) propose a k-th
order argument pruning algorithm based on sys-
tematic dependency trees. Strubell et al. (2018)
propose a self-attention based neural MTL model
which incorporate dependency parsing as a aux-
iliary task for SRL. Swayamdipta et al. (2018)
propose a MTL framework using hard parame-
ter strategy to incorporate constituent parsing loss
into semantic tasks, i.e. SRL and coreference res-
olution, which outperforms their baseline by +0.8
F1 score. Xia et al. (2019) investigate and com-
pare several syntax-aware methods on span-based
SRL, showing the effectiveness of integrating syn-
tactic information.

Compared with the large amount of works on
English SRL, Chinese SRL works are rare, mainly
because of the limitation of datasize and lack of
attention of Chinese researchers. Sun et al. (2009)
treat the Chinese SRL as a sequence labeling prob-
lem and build a SVM-based model by exploiting
morphological and syntactic features. Wang et al.
(2015b) build a basic BiLSTM model and intro-
duce a way to exploit heterogeneous data by shar-
ing word embeddings. Xia et al. (2017) propose a
progressive model to learn and transfer knowledge
from heterogeneous SRL data. The above works
are all focus on the span-based Chinese SRL, and
we compare with their results in Table 2. Different
from them, we propose a MTL framework to inte-
grate implicit syntactic representations into a sim-
ple unified model on both span-based and word-
based SRL, achieving substantial improvements.

In addition to the hard parameter sharing strat-
egy that we discuss in Section 3.2, partial param-
eter sharing strategy is also a commonly studied
approach in MTL and domain adaptation. Kim
et al. (2016) introduce simple neural extensions
of feature argumentation by employing a global
LSTM used across all domains and independent
LSTMs used within individual domains. Peng



5390

et al. (2017) explore a multitask learning approach
which shares parameters across formalisms for se-
mantic dependency parsing. In addition, Peng
et al. (2018) present a multi-task approach for
frame-semantic parsing and semantic dependency
parsing with latent structured variables.

7 Conclusion

This paper proposes a syntax-aware MTL frame-
work to integrate implicit syntactic representations
into a simple unified SRL model. The experimen-
tal results show that our proposed framework can
effectively improve the basic SRL model, even
when the basic model is enhanced with BERT
representations. Especially, our proposed frame-
work is more effective at utilizing syntactic infor-
mation, compared with the hard parameter shar-
ing strategy of MTL. By utilizing BERT repre-
sentations, our framework achieves new state-of-
the-art performance on both span-based and word-
based Chinese SRL benchmarks, i.e. CPB1.0
and CoNLL-2009 respectively. Detailed analy-
sis shows that syntax helps most on the long sen-
tences, because of the long-distance dependencies
captured by syntax trees. Moreover, the compari-
son of sentence performance indicates that there is
still a lot of work to do to better integrate syntactic
information and BERT representation.

Acknowledgments

We thank our anonymous reviewers for their help-
ful comments. This work was supported by Na-
tional Natural Science Foundation of China (Grant
No. 61525205, 61876116, 61432013) and a
project funded by the Priority Academic Program
Development of Jiangsu Higher Education Institu-
tions.

References
Emanuele Bastianelli, Giuseppe Castellucci, Danilo

Croce, and Roberto Basili. 2013. Textual inference
and meaning representation in human robot interac-
tion. In Proceedings of JSSP, pages 65–69.

Anders Björkelund, Bernd Bohnet, Love Hafdell, and
Pierre Nugues. 2010. A high-performance syntactic
and semantic dependency parser. In Proceedings of
COLING, pages 33–36.

Jiaxun Cai, Shexia He, Zuchao Li, and Hai Zhao. 2018.
A full end-to-end semantic role labeler, syntactic-
agnostic over syntactic-aware? In Proceedings of
COLING, pages 2753–2765.

Jacob Devlin, Ming-Wei Chang, Kenton Lee, and
Kristina Toutanova. 2019. Bert: Pre-training of deep
bidirectional transformers for language understand-
ing. In Proceedings of NAACL-HLT, pages 4171–
4186.

Timothy Dozat and Christopher D Manning. 2017.
Deep biaffine attention for neural dependency pars-
ing. In Proceedings of ICIR.

Yarin Gal and Zoubin Ghahramani. 2016. A theoret-
ically grounded application of dropout in recurrent
neural networks. In Proceedings of NIPS, pages
1019–1027.

Qin Gao and Stephan Vogel. 2011. Corpus expan-
sion for statistical machine translation with semantic
role label substitution rules. In Proceedings of ACL,
pages 294–298.

Jan Hajič, Massimiliano Ciaramita, Richard Johans-
son, Daisuke Kawahara, Maria Antònia Martı́, Lluı́s
Màrquez, Adam Meyers, Joakim Nivre, Sebastian
Padó, Jan Štěpánek, et al. 2009. The CoNLL-2009
shared task: Syntactic and semantic dependencies
in multiple languages. In Proceedings of CoNLL:
Shared Task, pages 1–18. ACL.

Luheng He, Kenton Lee, Omer Levy, and Luke Zettle-
moyer. 2018a. Jointly predicting predicates and ar-
guments in neural semantic role labeling. In Pro-
ceedings of ACL, pages 364–369.

Luheng He, Kenton Lee, Mike Lewis, and Luke Zettle-
moyer. 2017. Deep semantic role labeling: What
works and whats next. In Proceedings of ACL, pages
473–483.

Shexia He, Zuchao Li, Hai Zhao, and Hongxiao Bai.
2018b. Syntax for semantic role labeling, to be, or
not to be. In Proceedings of ACL, pages 2061–2071.

Young-Bum Kim, Karl Stratos, and Ruhi Sarikaya.
2016. Frustratingly easy neural domain adaptation.
In Proceedings of COLING, pages 387–396.

Diederik P Kingma and Jimmy Ba. 2015. Adam: A
method for stochastic optimization. In Proceedings
of ICLR.

Kenton Lee, Luheng He, Mike Lewis, and Luke Zettle-
moyer. 2017. End-to-end neural coreference resolu-
tion. In Proceedings of EMNLP, pages 188–197.

Zuchao Li, Shexia He, Hai Zhao, Yiqing Zhang, Zhu-
osheng Zhang, Xi Zhou, and Xiang Zhou. 2019. De-
pendency or span, end-to-end uniform semantic role
labeling. In Proceedings of AAAI.

Ding Liu and Daniel Gildea. 2010. Semantic role fea-
tures for machine translation. In Proceedings of
COLING, pages 716–724.

Diego Marcheggiani, Anton Frolov, and Ivan Titov.
2017. A simple and accurate syntax-agnostic neural
model for dependency-based semantic role labeling.
In Proceedings of CoNLL, pages 411–420.



5391

Diego Marcheggiani and Ivan Titov. 2017. Encoding
sentences with graph convolutional networks for se-
mantic role labeling. In Proceedings of EMNLP,
pages 1506–1515.

Adam Meyers, Ruth Reeves, Catherine Macleod,
Rachel Szekely, Veronika Zielinska, Brian Young,
and Ralph Grishman. 2004. The nombank project:
An interim report. In Proceedings of HLT-NAACL.

Tomas Mikolov, Ilya Sutskever, Kai Chen, Greg S Cor-
rado, and Jeff Dean. 2013. Distributed representa-
tions of words and phrases and their compositional-
ity. In Proceedings of NIPS, pages 3111–3119.

Hiroki Ouchi, Hiroyuki Shindo, and Yuji Matsumoto.
2018. A span selection model for semantic role
labeling. In Proceedings of EMNLP, pages 1630–
1642.

Martha Palmer, Daniel Gildea, and Paul Kingsbury.
2005. The proposition bank: An annotated cor-
pus of semantic roles. Computational linguistics,
31(1):71–106.

Hao Peng, Sam Thomson, and Noah A Smith. 2017.
Deep multitask learning for semantic dependency
parsing. In Proceedings of ACL, pages 2037–2048.

Hao Peng, Sam Thomson, Swabha Swayamdipta, and
Noah A Smith. 2018. Learning joint semantic
parsers from disjoint data. In Proceedings of
NAACL-HLT, pages 1492–1502.

Xue Peng, Zhenghua Li, Min Zhang, Rui Wang, Yue
Zhang, and Luo Si. 2019. Overview of the nlpcc
2019 shared task: Cross-domain dependency pars-
ing. In Proceedings of The 8th CCF International
Conference on Natural Language Processing and
Chinese Computing (NLPCC).

Michael Roth and Mirella Lapata. 2016. Neural se-
mantic role labeling with dependency path embed-
dings. In Proceedings of ACL, pages 1192–1202.

Sebastian Ruder. 2017. An overview of multi-task
learning in deep neural networks. arXiv preprint
arXiv:1706.05098.

Lei Sha, Sujian Li, Baobao Chang, Zhifang Sui, and
Tingsong Jiang. 2016. Capturing argument relation-
ship for chinese semantic role labeling. In Proceed-
ings of EMNLP, pages 2011–2016.

Dan Shen and Mirella Lapata. 2007. Using semantic
roles to improve question answering. In Proceed-
ings of EMNLP-CoNLL, pages 12–21.

Rupesh K Srivastava, Klaus Greff, and Jürgen Schmid-
huber. 2015. Training very deep networks. In Pro-
ceedings of NIPS, pages 2377–2385.

Emma Strubell, Patrick Verga, Daniel Andor,
David Weiss, and Andrew McCallum. 2018.
Linguistically-informed self-attention for semantic
role labeling. In Proceedings of EMNLP, pages
5027–5038.

Weiwei Sun, Zhifang Sui, Meng Wang, and Xin Wang.
2009. Chinese semantic role labeling with shallow
parsing. In Proceedings of EMNLP, pages 1475–
1483.

Mihai Surdeanu, Richard Johansson, Adam Meyers,
Lluı́s Màrquez, and Joakim Nivre. 2008. The conll-
2008 shared task on joint parsing of syntactic and
semantic dependencies. In Proceedings of CoNLL,
pages 159–177.

Reid Swanson and Andrew S Gordon. 2006. A com-
parison of alternative parse tree paths for labeling
semantic roles. In Proceedings of COLING/ACL,
pages 811–818.

Swabha Swayamdipta, Sam Thomson, Kenton Lee,
Luke Zettlemoyer, Chris Dyer, and Noah A Smith.
2018. Syntactic scaffolds for semantic structures.
In Proceedings of EMNLP, pages 3772–3782.

Zhixing Tan, Mingxuan Wang, Jun Xie, Yidong Chen,
and Xiaodong Shi. 2018. Deep semantic role la-
beling with self-attention. In Proceedings of AAAI,
pages 4929–4936.

Hai Wang, Mohit Bansal, Kevin Gimpel, and David
McAllester. 2015a. Machine comprehension with
syntax, frames, and semantics. In Proceedings of
ACL-IJCNLP, pages 700–706.

Zhen Wang, Tingsong Jiang, Baobao Chang, and Zhi-
fang Sui. 2015b. Chinese semantic role labeling
with bidirectional recurrent neural networks. In Pro-
ceedings of EMNLP, pages 1626–1631.

Shumin Wu and Martha Palmer. 2015. Can selectional
preferences help automatic semantic role labeling?
In Proceedings of the Fourth Joint Conference on
Lexical and Computational Semantics, pages 222–
227.

Qiaolin Xia, Lei Sha, Baobao Chang, and Zhifang Sui.
2017. A progressive learning approach to chinese srl
using heterogeneous data. In Proceedings of ACL,
pages 2069–2077.

Qingrong Xia, Zhenghua Li, Min Zhang, Zhang Meis-
han, Guohong Fu, Rui Wang, and Luo Si. 2019.
Syntax-aware neural semantic role labeling. In Pro-
ceedings of AAAI.

Nianwen Xue. 2008. Labeling chinese predicates
with semantic roles. Computational linguistics,
34(2):225–255.

Nan Yu, Meishan Zhang, and Guohong Fu. 2018.
Transition-based neural rst parsing with implicit
syntax features. In Proceedings of COLING, pages
559–570.

Meishan Zhang, Zhenghua Li, Guohong Fu, and Min
Zhang. 2019. Syntax-enhanced neural machine
translation with syntax-aware word representations.
In Proceedings of NAACL-HLT, pages 1151–1161.



5392

Meishan Zhang, Yue Zhang, and Guohong Fu. 2016a.
Transition-based neural word segmentation. In Pro-
ceedings of ACL, pages 421–431.

Yu Zhang, Guoguo Chen, Dong Yu, Kaisheng Yaco,
Sanjeev Khudanpur, and James Glass. 2016b. High-
way long short-term memory rnns for distant speech
recognition. In Proceedings of ICASSP, pages
5755–5759.

Hai Zhao, Wenliang Chen, and Chunyu Kit. 2009. Se-
mantic dependency parsing of nombank and prop-
bank: An efficient integrated approach via a large-
scale feature selection. In Proceedings of EMNLP,
pages 30–39.

Jie Zhou and Wei Xu. 2015. End-to-end learning of
semantic role labeling using recurrent neural net-
works. In Proceedings of ACL-IJCNLP, pages
1127–1137.


