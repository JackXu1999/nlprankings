



















































Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics


Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics, pages 1712–1721
Vancouver, Canada, July 30 - August 4, 2017. c©2017 Association for Computational Linguistics

https://doi.org/10.18653/v1/P17-1157

Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics, pages 1712–1721
Vancouver, Canada, July 30 - August 4, 2017. c©2017 Association for Computational Linguistics

https://doi.org/10.18653/v1/P17-1157

Volatility Prediction using Financial Disclosures Sentiments with
Word Embedding-based IR Models

Navid Rekabsaz1, Mihai Lupu1, Artem Baklanov2, Allan Hanbury1, Alexander Dür3, Linda Anderson1
1 3TU WIEN

2International Institute for Applied Systems Analysis (IIASA)
2N.N. Krasovskii Institute of Mathematics and Mechanics

1{family name}@ifs.tuwien.ac.at
2baklanov@iiasa.ac.at

3alexander.duer@tuwien.ac.at

Abstract

Volatility prediction—an essential concept
in financial markets—has recently been
addressed using sentiment analysis meth-
ods. We investigate the sentiment of an-
nual disclosures of companies in stock
markets to forecast volatility. We specif-
ically explore the use of recent Informa-
tion Retrieval (IR) term weighting mod-
els that are effectively extended by related
terms using word embeddings. In paral-
lel to textual information, factual market
data have been widely used as the main-
stream approach to forecast market risk.
We therefore study different fusion meth-
ods to combine text and market data re-
sources. Our word embedding-based ap-
proach significantly outperforms state-of-
the-art methods. In addition, we investi-
gate the characteristics of the reports of the
companies in different financial sectors.

1 Introduction

Financial volatility is an essential indicator of in-
stability and risk of a company, sector or econ-
omy. Volatility forecasting has gained consider-
able attention during the last three decades. In
addition to using historic stock prices, new meth-
ods in this domain use sentiment analysis to ex-
ploit various text resources, such as financial re-
ports (Kogan et al., 2009; Wang et al., 2013;
Tsai and Wang, 2014; Nopp and Hanbury, 2015),
news (Kazemian et al., 2014; Ding et al., 2015),
message boards (Nguyen and Shirai, 2015), and
earning calls (Wang and Hua, 2014).

An interesting resource of textual information
are the companies’ annual disclosures, known as
10-K filing reports. They contain comprehensive
information about the companies’ business as well
as risk factors. Specifically, section Item 1A - Risk
Factors of the reports contains information about

the most significant risks for the company. These
reports are however long, redundant, and written
in a style that makes them complex to process.
Dyer et al. (2016) notes that: “10-K reports are
getting more redundant and complex [...] (it) re-
quires a reader to have 21.6 years of formal ed-
ucation to fully comprehend”. Dyer et al. also
analyse the topics discussed in the reports and ob-
serve a constant increase over the years in both the
length of the documents as well as the number of
topics. They claim that the increase in length is
not the result of economic factors but is due to ver-
boseness and redundancy in the reports. They sug-
gest that only the risk factors topic appears to be
useful and informative to investors. Their analysis
motivates us to study the effectiveness of the Risk
Factors section for volatility prediction.

Our research builds on previous studies on
volatility prediction and information analysis of
10-K reports using sentiment analysis (Kogan
et al., 2009; Tsai and Wang, 2014; Wang et al.,
2013; Nopp and Hanbury, 2015; Li, 2010; Camp-
bell et al., 2014), in the sense that since the reports
are long (average length of 5000 words), different
approaches are required, compared with studies of
sentiment analysis on short-texts. Such previous
studies on 10-K reports have mostly used the data
before 2008 and there is little work on the analy-
sis of the informativeness and effectiveness of the
recent reports with regards to volatility prediction.
We will indeed show that the content of the re-
ports changes significantly not only before and af-
ter 2008, but rather in a cycle of 3-4 years.

In terms of use of the textual content for volatil-
ity prediction, this paper shows that state-of-
the-art Information Retrieval (IR) term weighting
models, which benefit from word embedding in-
formation, have a significantly positive impact on
prediction accuracy. The most recent study on
the topic (Tsai and Wang, 2014) used related
terms obtained by word embeddings to expand the

1712

https://doi.org/10.18653/v1/P17-1157
https://doi.org/10.18653/v1/P17-1157


lexicon of sentiment terms. In contrast, similar
to Rekabsaz et al. (2016b), we define the weight
of each lexicon term by extending it to the similar
terms in the document. The significant improve-
ment of this approach for document retrieval by
capturing the importance of the terms motivates us
to apply it on sentiment analysis. We extensively
evaluate various state-of-the-art sentiment analy-
sis methods to investigate the effectiveness of our
approach.

In addition to text, factual market data (i.e.
historical prices) provide valuable resources for
volatility prediction e.g. in the framework of
GARCH models (Engle, 1982). An emerging
question is how to approach the combination of
the textual and factual market information. We
propose various methods for this issue and show
the performance and characteristics of each.

The financial system covers a wide variety of
industries, from daily-consumption products to
space mission technologies. It is intuitive to con-
sider that the factors of instability and uncertainty
are different between the various sectors while
similar inside them. We therefore also analyse the
sentiment of the reports of each sector separately
and study their particular characteristics.

The present study shows the value of infor-
mation in the 10-K reports for volatility predic-
tion. Our proposed approach to sentiment analy-
sis significantly outperforms state-of-the-art meth-
ods (Kogan et al., 2009; Tsai and Wang, 2014;
Wang et al., 2013). We also show that per-
formance can be further improved by effectively
combining textual and factual market information.
In addition, we shed light on the effects of tailor-
ing the analysis to each sector: despite the rea-
sonable expectation that domain-specific training
would lead to improvements, we show that our
general model generalizes well and outperforms
sector-specific trained models.

The remainder of the paper is organized as fol-
lows: in the next section, we review the state-of-
the-art and related studies. Section 3 formulates
the problem, followed by a detailed explanation of
our approach in Section 4. We explain the dataset
and settings of the experiments in Section 5, fol-
lowed by the full description of the experiments in
Section 6. We conclude the work in Section 7.

2 Related Work

Market prediction has been attracting much at-
tention in recent years in the natural language
processing community. Kazemian et al. (2014)
use sentiment analysis for predicting stock price
movements in a simulated security trading system
using news data, showing the advantages of the
method against simple trading strategies. Ding et
al. (2015) address a similar objective while using
deep learning to extract and learn events in the
news. Xie et al. (2013) introduce a semantic tree-
based model to represent news data for predict-
ing stock price movement. Luss et al. (2015) also
exploit news in combination with return prices to
predict intra-day price movements. They use the
Multi Kernel Learning (MKL) algorithm for com-
bining the two features. The combination shows
improvement in final prediction in comparison to
using each of the features alone. Motivated by
this study, we investigate the performance of the
MKL algorithm as one of the methods to combine
the textual with non-textual information. Other
data resources, such as stocks’ message boards,
are used by Nguyen and Shirai (2015) to study
topic modelling for aspect-based sentiment anal-
ysis. Wang and Hua (2014) investigate the senti-
ment of the transcript of earning calls for volatility
prediction using the Gaussian Copula regression
model.

While the mentioned studies use short-length
texts (sentence or paragraph level), approaching
long texts (document level) for market prediction
is mainly based on n-gram bag of words methods.
Nopp and Hanbury (2015) study the sentiment of
banks’ annual reports to assess banking systems
risk factors using a finance-specific lexicon, pro-
vided by Loughran and McDonald (2011), in both
unsupervised and supervised manner.

More directly related to the informativeness of
the 10-K reports for volatility prediction, Kogan
et al. (2009) use a linear Support Vector Ma-
chine (SVM) algorithm on the reports published
between 1996–2006. Wang et al. (2013) improve
upon this by using the Loughran and McDonald
(2011) lexicon, observing improvement in the pre-
diction. Later, Tsai and Wang (2014) apply the
same method as Wang et al. (2013) while addition-
ally using word embedding to expand the financial
lexicon. We reproduce all the methods in these
studies, and show the advantage of our sentiment
analysis approach.

1713



3 Problem Formulation

In this section, we formulate the volatility fore-
casting problem and the prediction objectives
of our experiments. Similar to previous stud-
ies (Christiansen et al., 2012; Kogan et al., 2009;
Tsai and Wang, 2014), volatility is defined as the
natural log of the standard deviation of (adjusted)
return prices in a window of τ days. This defi-
nition is referred to as standard volatility (Li and
Hong, 2011) or realized volatility (Liu and Tse,
2013), defined as follows:

v[s,s+τ ] = ln



√∑s+τ

t=s (rt − r̄)2
τ


 (1)

where rt is the return price and r̄ the mean of
return prices. The return price is calculated by
rt = ln(Pt)−ln(Pt−1), where Pt is the (adjusted)
closing price of a given stock at the trading date t.

Given an arbitrary report i, we define a predic-
tion label yki as the volatility of the stock of the re-
porting company in the kth quarter-sized window
starting from the issue date of the report si:

yki = v[si+64(k−1),si+64k] (2)

Every quarter is considered as per convention, 64
working days, while the full year is assumed to
have 256 working days.

We use 8 learners for labels y1 to y8. For
brevity, unless otherwise mentioned, we report the
volatility of the first year by calculating the mean
of the first four quartiles after the publication of
each report.

4 Methodology

We first describe our text sentiment analysis meth-
ods, followed by the features obtained from fac-
tual market data, and finally explain the methods
to combine textual and market feature sets.

4.1 Sentiment Analysis
Similar to previous studies (Nopp and Hanbury,
2015; Wang et al., 2013), we extract the keyword
set from a finance-specific lexicon (Loughran and
McDonald, 2011) using the positive, negative, and
uncertain groups, stemmed using the Porter stem-
mer. We refer to this keyword set as Lex. Tsai
and Wang (2014) expanded this set by adding the
top 20 related terms to each term to the origi-
nal set. The related terms are obtained using the
Word2Vec (Mikolov et al., 2013) model, built on

the corpus of all the reports, with Cosine similar-
ity. We also use this expanded set in our experi-
ments and refer to it as LexExt.

The following word weighting schemes are
commonly used in Information Retrieval and we
consider them as well in our study:
TC : log(1 + tcdi(t))

TF :
log(1+tcdi (t))

‖di‖

TFIDF :
log(1+tcdi (t))

‖di‖ log(1 +
|di|
df(t))

BM25 :
(k+1)tfdi (t)

k+tfdi (t)
, tfdi(t) =

tcdi (t)

(1−b)+b |di|
avgdl

where tcdi(t) is the number of occurrences
of keyword t in report i, ‖di‖ denotes the Eu-
clidean norm of the keyword weights of the
report, |di| is the length of the report (number of
the words in the report), avgdl is the average doc-
ument length, and finally k and b are parameters.
For them, we use the settings used in previous
studies (Rekabsaz et al., 2016b) i.e. k = 1.2 and
b = 0.65.

In addition to the standard weighting schemes,
we use state-of-the-art weighting methods in
Information Retrieval (Rekabsaz et al., 2016b)
which benefit directly from word embedding mod-
els: They exploit similarity values between words
provided by the word embedding model into the
weighting schemes by extending the weight of
each lexicon keyword with its similar words:

t̂cdi(t) = tcdi(t) +
∑

t′∈R(t)
sim(t, t′)tcdi(t

′) (3)

where R(t) is the list of similar words to the
keyword t, and sim(t, t′) is the Cosine similar-
ity value between the vector representations of the
words t and t′. As previously suggested by Rek-
absaz et al. (2016a, 2017), we use the Cosine sim-
ilarity function with threshold 0.70 for selecting
the set R(t) of similar words.

We define the extended versions of the standard
weighting schemes as T̂C, T̂F, T̂FIDF, and
B̂M25 by replacing tcdi(t) with t̂cdi(t) in each
of the schemes.

The feature vector generated by the weights of
the Lex or LexExt lexicons is highly sparse, as
the number of dimensions is larger than the num-
ber of data-points. We therefore reduce the dimen-
sions by applying Principle Component Analysis
(PCA). Our initial experiments show 400 dimen-

1714



sion as the optimum by trying on a range of di-
mensions from 50 to 1000.

Given the final feature vector x with l dimen-
sions, we apply SVM as a well-known method for
training both regression and classification meth-
ods. Support Vector Regression (Drucker et al.,
1997) formulates the training as the following op-
timization problem:

min
w∈IRl

1

2
‖w‖2+C

N

N∑

i=1

max(0, ‖yi − f(xi;w)‖ − �)

(4)
Similar to previous studies (Tsai and Wang,

2014; Kogan et al., 2009), we set C = 1.0 and
� = 0.1. To solve the above problem, the func-
tion f can be re-parametrized in terms of a kernel
function K with weights αi:

f(xi;w) =

N∑

i=1

αiK(xi, x) (5)

The kernel can be considered as a (similarity)
function between the feature vector of the docu-
ment and vectors of all the other documents. Our
initial experiments showed better performance of
the Radial Basis Function (RBF) kernel in com-
parison to linear and cosine kernels and is there-
fore used in this paper.

In addition, motivated by Moraes et al.(Moraes
et al., 2013), we use of an Artificial Neural Net-
work (ANN) algorithm to test the effectiveness
of neural networks for automatic feature learning.
We tried several neural network architectures with
different regularization methods (early-stopping,
regularization term, dropout). The best perform-
ing results were achieved with two hidden layers
(400 and 500 nodes respectively), tanh for activa-
tion function, and learning rate of 0.001 in gra-
dient decent with early stopping. However, the
networks could not provide superior results than
the SVM regressors. Therefore, for this report, we
only report the SVM methods.

4.2 Market Features

In addition to textual features, we define three fea-
tures using the factual market data and histori-
cal prices—referred to as market features—as fol-
lows:
Current Volatility is calculated on the window
of one quartile before the issue date of the report:
v[si−64,si].

GARCH (Bollerslev, 1986) is a common econo-
metric time-series model used for predicting stock
price volatility. We use a GARCH (1, 1) model,
trained separately for each report on intra-day re-
turn prices. We use all price data available be-
fore the issue date of the report for fitting the
model. The GARCH (1, 1) model used predicts
the volatility of the next day by looking at the
previous day’s volatility. When forecasting fur-
ther than one day into the future one needs to use
the model’s own predictions in order to be able
to make predictions for more than one day ahead.
When forecasting further into the future these con-
ditional forecasts of the variance will converge to a
value called unconditional variance. As our fore-
cast period is one quarter, we will approximate the
volatility of future quarters with the unconditional
variance.
Sector is the sector that the corresponding com-
pany of the report belongs to, namely energy
(ene), basic industries (ind), finance (fin), technol-
ogy (tech), miscellaneous (misc), consumer non-
durables (n-dur), consumer durables (dur), capital
goods (capt), consumer services (serv), public util-
ities (pub), and health care (hlth)1. The feature is
converted to numerical representation using one-
hot encoding.

4.3 Feature Fusion

To combine the text and market feature sets, the
first approach, used also in previous studies ((Ko-
gan et al., 2009; Wang et al., 2013)) is simply join-
ing all the features in one feature space. In the
context of multi-model learning, the method is re-
ferred to as early fusion.

In contrast, late fusion approaches first learn a
model on each feature set and then use/learn a
meta model to combine their results. As our sec-
ond approach, we use stacking (Wolpert, 1992), a
special case of late fusion. In stacking, we first
split the training set into two parts (70%-30% por-
tions). Using the first portion, we train separate
machine learning models for each of the text and
market feature sets. Next, we predict labels of the
second portion with the trained models and finally
train another model to capture the combinations
between the outputs of the base models. In our ex-
periments, the final model is always trained with
SVM with RBF kernel.

Stacking is computationally inexpensive. How-

1We follow NASDAQ categorization of sectors.

1715



ever, due to the split of the training set, the base
models or the meta model may suffer from lack of
training data. A potential approach to learn both
the feature sets in one model is the MKL method.

The MKL algorithm (also called intermediate
fusion (Noble et al., 2004)) extends the kernel of
the SVM model by learning (simultaneous to the
parameter learning) an optimum combination of
several kernels. The MKL algorithm as formu-
lated in Lanckriet et al. (2004) adds the following
criterion to Eq. 5 for kernel learning:

K∗ =
∑

i

diKi where
∑

i

di = 1, di ≥ 0 (6)

where Ki is a predefined kernel. Gönen and Al-
paydın (2011) mention two uses of MKL: learn-
ing the optimum kernel in SVM, and combining
multiple modalities (feature sets) via each kernel.

However, the optimization can be compu-
tationally challenging. We use the mklaren
method (Stražar and Curk, 2016) which has lin-
ear complexity in the number of data instances and
kernels. It has been shown to outperform recent
multi kernel approximation approaches. We use
RBF kernels for both the text and market feature
sets.

5 Experiment Setup

In this section, we first describe the data, followed
by introducing the baselines. We report the param-
eters applied in various algorithms and describe
the evaluation metrics.

Dataset We download the reports of companies
of the U.S. stock markets from 2006 to 2015
from the U.S. Securities and Exchange Commis-
sion (SEC) website2. We remove HTML tags and
extract the text parts. We extract the Risk Factors
section using term matching heuristics. Finally,
the texts are stemmed using the Porter stemmer.
We calculate the volatility values (Eq 1) and the
volatility of the GARCH model based on the stock
prices, collected from the Yahoo website. We filter
the volatility values greater/smaller than the mean
plus/minus three times the standard deviation of
all the volatility values3.

Baselines GARCH: although the GARCH
model is of market factual information, we use

2https://www.sec.gov
3The complete dataset is available in http://ifs.

tuwien.ac.at/˜admire/financialvolatility

it as a baseline to compare the effectiveness of
text-based methods with mainstream approaches.

Market: uses all the market features. For both
the GARCH and Market baselines, we use an
SVM learner with RBF kernel.

Wang et al. (2013): they use the Lex key-
word set with TC weighting scheme and the SVM
method. They combine the textual features with
current volatility using the early fusion method.

Tsai et al. (2014): similar to Wang et al. (2013),
while they use the LexExt keyword set.

Evaluation Metrics As a common metric in
volatility prediction, we use the r2 metric (square
of the correlation coefficient) for evaluation:

r2 =




∑n
i=1(ŷi − ¯̂y)(yi − ȳ)√∑n

i=1(ŷi − ¯̂y)2
√∑n

i=1(yi − ȳ)2




2

(7)
where ŷi is the predicted value, yi denotes the la-
bels and ȳ, their mean. The r2 metric indicates the
proportion of variance in the labels explained by
the prediction. The measure is close to 1 when
the predicted values can explain a large propor-
tion of the variability in the labels and 0 when it
fails to explain the labels’ variabilities. An alterna-
tive metric, used in previous studies (Wang et al.,
2013; Tsai and Wang, 2014; Kogan et al., 2009)
is Mean Squared Error MSE =

∑
i(ŷi − yi)2/n.

However, especially when comparing models, ap-
plied on different test sets (e.g. performance of
first quartile with second quartile), r2 has better
interpretability since it is independent of the scale
of y. We use r2 in all the experiments while the
MSE measure is reported only when the models
are evaluated on the same test set.

6 Experiments and Results

In this section, first we analyse the contents of the
reports, followed by studying our sentiment anal-
ysis methods for volatility prediction. Finally, we
investigate the effect of sentiment analysis of the
reports in different industry sectors.

6.1 Content Analysis of 10-K Reports

Let us start our experiment with observing
changes in the feature vectors of the reports over
the years. To compare them, we use the state-of-
the-art sentiment analysis method, introduced by
Tsai and Wang (2014). We first represent the fea-
ture vector of each year by calculating the centroid

1716



20
06

20
07

20
08

20
09

20
10

20
11

20
12

20
13

20
14

20
15

2015
2014
2013
2012
2011
2010
2009
2008
2007
2006

0.8

0.4

0.0

0.4

0.8

(a)

20
06

20
07

20
08

20
09

20
10

20
11

20
12

20
13

20
14

0.0

0.1

0.2

0.3

0.4

0.5

r
2

(b)

Figure 1: (a) Cosine similarity between the cen-
troid vectors of the years. (b) Volatility prediction
performance when using reports from the speci-
fied year to 2015

(element-wise mean) of the feature vectors of all
reports published that year and then calculate the
Cosine similarity of each pair of centroid vectors,
for the years 2006–2015.

Figure 1a shows the similarity heat-map for
each pair of the years. We observe a high simi-
larity between three ranges of years: 2006–2008,
2009–2011, and 2012–2015. These considerable
differences between the centroid reports in years
across these three groups hints at probable issues
when using the data of the older years for the more
recent ones.

To validate this, we apply 5-fold cross valida-
tion, first on all the data (2006–2015), and then
on smaller sets by dropping the oldest year i.e.
the next subsets use the reports 2007–2015, 2008–
2015 and so forth. The results of the r2 measure
are shown in Figure 1b. We observe that by drop-
ping the oldest years one by one (from left to right
in the figure), the performance starts improving.
We argue that this improvement is due to the re-
duction of noise in data, noise caused by concep-
tual drifts in the reports as also mentioned by Dyer
et al. (2016). In fact, although in machine learning
in general using more data results in better gener-
alization of the model and therefore better predic-
tion, the reports of the older years introduce noise.

As shown, the most coherent and largest data
consists of the subset of the reports published be-
tween 2012 to 2015. This subset is also the most
recent cluster and presumably more similar to the
future reports. Therefore, in the following, we
only use this subset, which consists of 3892 re-
ports, belonging to 1323 companies.

Table 1: Performance of sentiment analysis meth-
ods for the first year.

Component Method Text Text+Market
(r2) (MSE) (r2) (MSE)

Weighting
Schema
(+Stacking)

B̂M25 0.439 0.132 0.527 0.111
BM25 0.433 0.136 0.523 0.114
T̂C 0.427 0.136 0.517 0.115
TC 0.425 0.137 0.521 0.114
̂TFIDF 0.301 0.166 0.502 0.118

TFIDF 0.264 0.189 0.497 0.119
T̂F 0.218 0.190 0.495 0.120
TF 0.233 0.200 0.495 0.120

Feature Fusion

(+B̂M25)

Stacking - - 0.527 0.111
MKL - - 0.488 0.126

Early Fusion - - 0.473 0.125

Table 2: Performance of the methods using 5-fold
cross validation.

Method (r2) (MSE)
GARCH 0.280 0.170

Text
Wang (2013) 0.345 0.154
Tsai (2014) 0.395 0.142
Our method 0.439 0.132
Market 0.485 0.122

Text+Market
Wang (2013) 0.499 0.118
Tsai (2014) 0.484 0.122
Our method 0.527 0.111

6.2 Volatility Prediction

Given the dataset of the 2012–2015 reports, we
try all combinations of different term weighting
schemes using the LexExt keyword set. All
weighting schemes are then combined with the
market features with the introduced fusion meth-
ods. The prediction is done with 5-fold cross val-
idation. The averages of the results of the first
four quartiles (first year) are reported in Table 1.
To make showing the results tractable, we use the
best fusion (stacking) for the weighting schemes
and the best scheme (B̂M25) for fusions.

Regarding the weighting schemes, B̂M25,
BM25, and T̂C show the best results. In general,
the extended schemes (with hat) improve upon
their normal forms. For the feature fusion meth-
ods, stacking outperforms the other approaches
in both evaluation measures. MKL however has
better performance than early fusion while it has
the highest computational complexity among the
methods. Based on these results, as our best per-
forming approach in the remainder of the paper,
we use B̂M25 (with LexExt set), reduced to
400 dimensions and stacking as the fusion method.
Table 2 summarizes the results of our best per-

1717



Q1 Q2 Q3 Q4 Q5 Q6 Q7 Q8
0.0

0.1

0.2

0.3

0.4

0.5

0.6

r
2 Text+Market 

Text 
Market 
GARCH 

(a)
CV 2013 2014 2015

0.0

0.1

0.2

0.3

0.4

0.5

0.6

r
2

Text 
Text+Market 

(b)

en
e

in
d fin

te
ch

m
is

c
n-

du
r

ca
pt du
r

se
rv

pu
b

hl
th

0.0
0.1
0.2
0.3
0.4
0.5
0.6
0.7

r
2

Text 
Text+Market 

(c)

Figure 2: (a) Performance of our approach on 8 quartiles using the Text and Text+Market feature sets.
The dashed lines show the market-based baselines. (b) Performance of volatility prediction of each
year given the past data. The hashed areas show corresponding baselines. (c) Performance per sector.
Abbreviations are defined in Section 4.2

forming method compared with previously exist-
ing methods. Our method outperforms all state-of-
the-art methods both when using textual features
only as well as a combination of textual and mar-
ket features.

Let us now take a closer look on the changes
in the performance of the prediction in time. The
results of 5-fold cross validation for both tasks
on the dataset of the reports, published between
2012–2015 are shown in Figure 2a. The X-axes
show eight quartiles after the publication date of
the report. For comparison, the GARCH and only
market features are depicted with dashed lines.

As shown, the performance of the GARCH
method as well as that using only market features
(Market) decrease faster in the later quartiles since
the historical prices used for prediction become
less relevant as time goes by. Using only text fea-
tures (Text), we see a roughly similar performance
between the first four quartiles (first year), while
the performance, in general, slightly decreases in
the second year. By combining the textual and
market features (Text+Market), we see a consis-
tent improvement in comparison to each of them
alone. In comparison to using only market fea-
tures, the combination of the features shows more
stable results in the later quartiles. These results
support the informativeness of the 10-K reports to
more effectively foreseen volatility in long-term
windows.

While the above experiments are based on
cross-validation, for the sake of completeness it
is noteworthy to consider the scenarios of real-
world applications where the future prediction is
based on past data. We therefore design three
experiments by considering the reports published

in 2013, 2014, and 2015 as test set and the re-
ports published before each year as training set
(only 2012, 2012–2013, and 2012–2014 respec-
tively). The results of predicting the reports of
each year together with the cross validation sce-
nario (CV) are shown in Figure 2b. While the
performance becomes slightly worse in the target
years 2013 and 2015, in general the combination
of textual and market features can explain approx-
imately half of volatility in the financial system.

6.3 Sectors

Corporations in the same sector share not only
similar products or services but also risks and in-
stability factors. Considering the sentiment of the
financial system as a homogeneous body may ne-
glect the specific factors of each sector. We there-
fore set out to investigate the existence and nature
of these differences.

We start by observing the prediction perfor-
mance on different sectors: We use our method
from the previous section, but split the test set
across sectors and plot the results in Figure 2c.
The hashed areas indicate the GARCH and Mar-
ket baselines for the Text and Text+Market feature
sets, respectively. We observe considerable differ-
ences between the performance of the sectors, es-
pecially when using only sentiment analysis meth-
ods (i.e. only text features).

Given these differences and also the probable
similarities between the risk factors of the reports
in the same sector, a question immediately arises:
can training different models for different sectors
improve the performance of prediction?

To answer it, for each sector, we train a model
using only the subset of the reports in that sec-

1718



en
e

in
d fin

te
ch

m
is

c

n-
du

r

ca
pt du
r

se
rv

pu
b

hl
th

0.0
0.1
0.2
0.3
0.4
0.5
0.6
0.7

r
2

Sector-agnostic
Sector-specific
General model

(a) Text

en
e

in
d fin

te
ch

m
is

c

n-
du

r

ca
pt du
r

se
rv

pu
b

hl
th

0.0
0.1
0.2
0.3
0.4
0.5
0.6
0.7

r
2

Sector-agnostic
Sector-specific
General model

(b) Text+Market

Figure 3: Results when retraining on sector-specific subsets versus the general model and versus subsets
of the same size but sector-agnostic. The hashed area in (a) indicates the GARCH and in (b) the Market
baseline.

Table 3: Number of reports per sectors

ene ind hlth fin tech pub
187 160 305 847 408 217

n-dur dur capt serv misc
151 115 255 639 153

tor and use 5-fold validation to observe perfor-
mance. We refer to these models as sector-specific
in contrast to the general model, trained on all the
data. Figures 3a and 3b compare their results:
we can see that the sector-specific bars are lower
than the general model ones. This is to some ex-
tent surprising, as one would expect that domain-
specific training would improve the performance
of sentiment analysis in text. However, we need
to consider the size of the training set. By train-
ing on each sector we have reduced the size of
our training sets to those reported in Table 3. To
verify the effect of the size of training data, we
train a sector-agnostic model for each sector. Each
sector-agnostic model is trained by random sam-
pling of a training set of the same size as the set
available for its sector from all the reports, but
evaluated–similar to sector-specific models–on the
test set of the sector. Figures 3a and 3b also plot
the results of the sector-agnostic models.

The large performance differences between
sector-agnostic and -specific show the existence of
particular risk factors in each sector and their im-
portance. Results also confirm the hypothesis that
the data for training in each sector is simply too
small, and as additional data is accumulated, we
can further improve on the results by training on
different sectors independently.

We continue by examining some examples of
essential terms in sectors. To address this, we have
to train a linear regression method on all the re-
ports of each sector, without using any dimension-
ality reduction. Linear regression without dimen-
sionality reduction has the benefit of interpretabil-
ity: the coefficient of each feature (i.e. term in the
lexicon) can be seen as its importance with regards
to volatility prediction. After training, we observe
that some keywords e.g. crisis, or delist constantly
have high coefficient values in the sector-specific
as well as general model. However, some key-
words are particularly weighted high in specific-
sector models.

For instance, the keyword fire has a high coeffi-
cient in the energy sector, but very low in the oth-
ers. The reason is due to the problem of ambiguity
i.e. in the energy sector, fire is widely used to re-
fer to explosion e.g. ‘fire and explosion hazards’
while in the lexicon, it is stemmed from firing
and fired: the act of dismissing from a job. This
later sense of word is however weighted as a low
risk-sensitive keyword in the other sectors. Such
an ambiguity can indeed be mitigated by sector-
specific models since the variety of the words’
senses are more restricted inside each sector. An-
other example is an interesting observation on the
word beneficial. The word is introduced as a pos-
itive sentiment in the lexicon while it gains highly
negative sentiments in some sectors (health care,
and basic industries). Investigating in the reports,
we observe the broad use of the expression ‘bene-
ficial owner’ which is normally followed by risk-
full sentences since the beneficial owners can po-
tentially influence shareholders’ decision power.

1719



7 Conclusion

In this work, we studied the sentiment of recent
10-K annual disclosures of companies in stock
markets for forecasting volatility. Our bag-of-
words sentiment analysis approach benefits from
state-of-the-art models in information retrieval
which use word embeddings to extend the weight
of the terms to the similar terms in the docu-
ment. Additionally, we explored fusion meth-
ods to combine the text features with factual mar-
ket features, achieved from historical prices i.e.
GARCH prediction model, and current volatility.
In both cases, our approach outperforms state-of-
the-art volatility prediction methods with 10-K re-
ports and demonstrates the effectiveness of senti-
ment analysis in long-term volatility forecasting.

In addition, we studied the characteristics of
each individual sector with regard to risk-sensitive
terms. Our analysis shows that reports in same
sectors considerably share particular risk and in-
stability factors. However, despite expectations,
training different models on different sectors does
not improve performance compared to the general
model. We traced this to the size of the avail-
able data in each sector, and show that there are
still benefits in considering sectors, which could
be further explored in the future as more data be-
comes available.

8 Acknowledgement

This paper follows work produced during the
Young Scientists Summer Program (YSSP) 2016
at the International Institute for Applied Systems
Analysis (IIASA) in Laxenburg, Austria. This
work is funded by: Self-Optimizer (FFG 852624)
in the EUROSTARS programme, funded by EU-
REKA, the BMWFW and the European Union,
ADMIRE (P 25905-N23) by FWF, and the Aus-
trian Ministry for Science, Research and Econ-
omy. Thanks to Joni Sayeler and Linus Wret-
blad for their contributions in the SelfOptimizer
project.

References
Tim Bollerslev. 1986. Generalized autoregressive con-

ditional heteroskedasticity. Journal of econometrics
31(3):307–327.

John L Campbell, Hsinchun Chen, Dan S Dhaliwal,
Hsin-min Lu, and Logan B Steele. 2014. The infor-
mation content of mandatory risk factor disclosures

in corporate filings. Review of Accounting Studies
19(1):396–455.

Charlotte Christiansen, Maik Schmeling, and Andreas
Schrimpf. 2012. A comprehensive look at financial
volatility prediction by economic variables. Journal
of Applied Econometrics 27(6):956–977.

Xiao Ding, Yue Zhang, Ting Liu, and Junwen Duan.
2015. Deep learning for event-driven stock predic-
tion. In Proceedings of the 24th International Joint
Conference on Artificial Intelligence (IJCAI’15).
pages 2327–2333.

Harris Drucker, Christopher JC Burges, Linda Kauf-
man, Alex Smola, Vladimir Vapnik, et al. 1997.
Support vector regression machines. Advances in
neural information processing systems 9:155–161.

Travis Dyer, Mark H Lang, and Lorien Stice-Lawrence.
2016. The ever-expanding 10-k: Why are 10-ks get-
ting so much longer (and does it matter)? Available
at SSRN 2741682 .

Robert F Engle. 1982. Autoregressive conditional
heteroscedasticity with estimates of the variance of
united kingdom inflation. Econometrica: Journal of
the Econometric Society pages 987–1007.

Mehmet Gönen and Ethem Alpaydın. 2011. Multi-
ple kernel learning algorithms. Journal of Machine
Learning Research 12(Jul):2211–2268.

Siavash Kazemian, Shunan Zhao, and Gerald Penn.
2014. Evaluating sentiment analysis evaluation: A
case study in securities trading. Proceedings of the
Conference of the Association for Computational
Linguistics (ACL) page 119.

Shimon Kogan, Dimitry Levin, Bryan R Routledge, Ja-
cob S Sagi, and Noah A Smith. 2009. Predicting
risk from financial reports with regression. In Pro-
ceedings of Annual Conference of the North Amer-
ican Chapter of the Association for Computational
Linguistics. pages 272–280.

Gert RG Lanckriet, Nello Cristianini, Peter Bartlett,
Laurent El Ghaoui, and Michael I Jordan. 2004.
Learning the kernel matrix with semidefinite pro-
gramming. Journal of Machine learning research
5(Jan):27–72.

Feng Li. 2010. The information content of forward-
looking statements in corporate filings–a naı̈ve
bayesian machine learning approach. Journal of Ac-
counting Research 48(5):1049–1102.

Hongquan Li and Yongmiao Hong. 2011. Financial
volatility forecasting with range-based autoregres-
sive volatility model. Finance Research Letters
8(2):69–76.

Shouwei Liu and Yiu Kuen Tse. 2013. Estimation of
monthly volatility: An empirical comparison of real-
ized volatility, garch and acd-icv methods. Research
Collection School Of Economics .

1720



Tim Loughran and Bill McDonald. 2011. When is a
liability not a liability? textual analysis, dictionaries,
and 10-ks. The Journal of Finance 66(1):35–65.

Ronny Luss and Alexandre d’Aspremont. 2015. Pre-
dicting abnormal returns from news using text clas-
sification. Quantitative Finance 15(6):999–1012.

Tomas Mikolov, Kai Chen, Greg Corrado, and Jef-
frey Dean. 2013. Efficient estimation of word
representations in vector space. arXiv preprint
arXiv:1301.3781 .

Rodrigo Moraes, JoãO Francisco Valiati, and Wilson
P GaviãO Neto. 2013. Document-level sentiment
classification: An empirical comparison between
svm and ann. Expert Systems with Applications
40(2):621–633.

Thien Hai Nguyen and Kiyoaki Shirai. 2015. Topic
modeling based sentiment analysis on social media
for stock market prediction. In ACL.

William Stafford Noble et al. 2004. Support vector ma-
chine applications in computational biology. Kernel
methods in computational biology pages 71–92.

Clemens Nopp and Allan Hanbury. 2015. Detect-
ing risks in the banking system by sentiment anal-
ysis. Proceedings of the Conference of Empirical
Methods in Natural Language Processing (EMNLP)
pages 591–600.

Navid Rekabsaz, Mihai Lupu, and Allan Hanbury.
2016a. Uncertainty in neural network word embed-
ding: Exploration of threshold for similarity. arXiv
preprint arXiv:1606.06086 .

Navid Rekabsaz, Mihai Lupu, Allan Hanbury, and
Guido Zuccon. 2016b. Generalizing translation
models in the probabilistic relevance framework.
Proceedings of ACM International Conference on
Information and Knowledge Management (CIKM) .

Navid Rekabsaz, Mihai Lupu, Allan Hanbury, and
Guido Zuccon. 2017. Exploration of a threshold for
similarity based on uncertainty in word embedding.
In European Conference on IR Research (ECIR).

Martin Stražar and Tomaž Curk. 2016. Learning the
kernel matrix via predictive low-rank approxima-
tions. arXiv preprint arXiv:1601.04366 .

Ming-Feng Tsai and Chuan-Ju Wang. 2014. Financial
keyword expansion via continuous word vector rep-
resentations. In Proceedings of the Conference of
Empirical Methods in Natural Language Processing
(EMNLP). pages 1453–1458.

Chuan-Ju Wang, Ming-Feng Tsai, Tse Liu, and Chin-
Ting Chang. 2013. Financial sentiment analysis for
risk prediction. In Proceedings of the Joint Con-
ference on Natural Language Processing (IJCNLP).
pages 802–808.

William Yang Wang and Zhenhao Hua. 2014. A semi-
parametric gaussian copula regression model for
predicting financial risks from earnings calls. In
ACL.

David H Wolpert. 1992. Stacked generalization. Neu-
ral networks 5(2):241–259.

Boyi Xie, Rebecca J Passonneau, and Leon Wu. 2013.
Semantic Frames to Predict Stock Price Movement.
In Proceedings of the 51st Annual Meeting of the
Association for Computational Linguistics.

1721


	Volatility Prediction using Financial Disclosures Sentiments with Word Embedding-based IR Models

