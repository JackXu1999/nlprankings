



















































Incremental Transformer with Deliberation Decoder for Document Grounded Conversations


Proceedings of the 57th Annual Meeting of the Association for Computational Linguistics, pages 12–21
Florence, Italy, July 28 - August 2, 2019. c©2019 Association for Computational Linguistics

12

Incremental Transformer with Deliberation Decoder
for Document Grounded Conversations

Zekang Li†♦, Cheng Niu‡, Fandong Meng‡∗, Yang Feng♦, Qian Li♠, Jie Zhou‡
†Dian Group, School of Electronic Information and Communications

Huazhong University of Science and Technology
‡Pattern Recognition Center, WeChat AI, Tencent Inc, China
♦Key Laboratory of Intelligent Information Processing

Institute of Computing Technology, Chinese Academy of Sciences
♠School of Computer Science and Engineering, Northeastern University, China

zekangli97@gmail.com, {chengniu,fandongmeng,jiezhou}@tencent.com
fengyang@ict.ac.cn, qianli@stumail.neu.edu.cn

Abstract

Document Grounded Conversations is a task
to generate dialogue responses when chatting
about the content of a given document. Ob-
viously, document knowledge plays a critical
role in Document Grounded Conversations,
while existing dialogue models do not exploit
this kind of knowledge effectively enough. In
this paper, we propose a novel Transformer-
based architecture for multi-turn document
grounded conversations. In particular, we de-
vise an Incremental Transformer to encode
multi-turn utterances along with knowledge
in related documents. Motivated by the hu-
man cognitive process, we design a two-pass
decoder (Deliberation Decoder) to improve
context coherence and knowledge correctness.
Our empirical study on a real-world Document
Grounded Dataset proves that responses gen-
erated by our model significantly outperform
competitive baselines on both context coher-
ence and knowledge relevance.

1 Introduction

Past few years have witnessed the rapid develop-
ment of dialogue systems. Based on the sequence-
to-sequence framework (Sutskever et al., 2014),
most models are trained in an end-to-end man-
ner with large corpora of human-to-human di-
alogues and have obtained impressive success
(Shang et al., 2015; Vinyals and Le, 2015; Li et al.,
2016; Serban et al., 2016). While there is still
a long way for reaching the ultimate goal of di-
alogue systems, which is to be able to talk like
humans. And one of the essential intelligence
to achieve this goal is the ability to make use of
knowledge.

∗∗ Fandong Meng is the corresponding author of the pa-
per. This work was done when Zekang Li was interning at
Pattern Recognition Center, WeChat AI, Tencent.

There are several works on dialogue sys-
tems exploiting knowledge. The Mem2Seq
(Madotto et al., 2018) incorporates structured
knowledge into the end-to-end task-oriented di-
alogue. Liu et al. (2018) introduces fact-
matching and knowledge-diffusion to generate
meaningful, diverse and natural responses using
structured knowledge triplets. Ghazvininejad
et al. (2018), Parthasarathi and Pineau (2018),
Yavuz et al. (2018), Dinan et al. (2018) and
Lo and Chen (2019) apply unstructured text facts
in open-domain dialogue systems. These works
mainly focus on integrating factoid knowledge
into dialogue systems, while factoid knowledge
requires a lot of work to build up, and is only
limited to expressing precise facts. Documents as
a knowledge source provide a wide spectrum of
knowledge, including but not limited to factoid,
event updates, subjective opinion, etc. Recently,
intensive research has been applied on using
documents as knowledge sources for Question-
Answering (Chen et al., 2017; Huang et al., 2018;
Yu et al., 2018; Rajpurkar et al., 2018; Reddy
et al., 2018).

The Document Grounded Conversation is a task
to generate natural dialogue responses when chat-
ting about the content of a specific document. This
task requires to integrate document knowledge
with the multi-turn dialogue history. Different
from previous knowledge grounded dialogue sys-
tems, Document Grounded Conversations utilize
documents as the knowledge source, and hence
are able to employ a wide spectrum of knowl-
edge. And the Document Grounded Conversations
is also different from document QA since the con-
textual consistent conversation response should be
generated. To address the Document Grounded
Conversation task, it is important to: 1) Exploit
document knowledge which are relevant to the



13

conversation; 2) Develop a unified representation
combining multi-turn utterances along with the
relevant document knowledge.

In this paper, we propose a novel and effec-
tive Transformer-based (Vaswani et al., 2017) ar-
chitecture for Document Grounded Conversations,
named Incremental Transformer with Deliberation
Decoder. The encoder employs a transformer ar-
chitecture to incrementally encode multi-turn his-
tory utterances, and incorporate document knowl-
edge into the the multi-turn context encoding pro-
cess. The decoder is a two-pass decoder similar
to the Deliberation Network in Neural Machine
Translation (Xia et al., 2017), which is designed
to improve the context coherence and knowledge
correctness of the responses. The first-pass de-
coder focuses on contextual coherence, while the
second-pass decoder refines the result of the first-
pass decoder by consulting the relevant document
knowledge, and hence increases the knowledge
relevance and correctness. This is motivated by
human cognition process. In real-world human
conversations, people usually first make a draft on
how to respond the previous utterance, and then
consummate the answer or even raise questions by
consulting background knowledge.

We test the effectiveness of our proposed model
on Document Grounded Conversations Dataset
(Zhou et al., 2018). Experiment results show that
our model is capable of generating responses of
more context coherence and knowledge relevance.
Sometimes document knowledge is even well used
to guide the following conversations. Both auto-
matic and manual evaluations show that our model
substantially outperforms the competitive base-
lines.

Our contributions are as follows:

• We build a novel Incremental Transformer
to incrementally encode multi-turn utterances
with document knowledge together.

• We are the first to apply a two-pass decoder
to generate responses for document grounded
conversations. Two decoders focus on con-
text coherence and knowledge correctness re-
spectively.

2 Approach

2.1 Problem Statement
Our goal is to incorporate the relevant doc-

ument knowledge into multi-turn conversations.

Utterance k-1

Utterance k-2

Utterance k

Document k-2

Incremental
Transformer

Incremental
Transformer

Incremental
Transformer

Second-pass Decoder

Self-Attentive 
Encoder

Self-Attentive 
Encoder

Document k-1

Self-Attentive 
Encoder

Document k

Self-Attentive
Encoder

Utterance k+1

First-pass Decoder

Document k+1

Self-Attentive
Encoder

First-pass output

Self-Attentive
Encoder

Deliberation Decoder

Incremental Transformer 
Encoder

Figure 1: The framework of Incremental Transformer
with Deliberation Decoder for Document Grounded
Conversations.

Formally, let U = u(1), ...,u(k), ...,u(K) be a
whole conversation composed of K utterances.
We use u(k) = u(k)1 , ..., u

(k)
i , ..., u

(k)
I to denote

the k-th utterance containing I words, where u(k)i
denotes the i-th word in the k-th utterance. For
each utterance u(k), likewise, there is a specified
relevant document s(k) = s(k)1 , ..., s

(k)
j , ..., s

(k)
J ,

which represents the document related to the k-
th utterance containing J words. We define the
document grounded conversations task as gen-
erating a response u(k+1) given its related doc-
ument s(k+1) and previous k utterances U≤k
with related documents S≤k, where U≤k =
u(1), ...,u(k) and S≤k = s(1), ..., s(k). Note that
s(k), s(k+1), ..., s(k+n) may be the same.

Therefore, the probability to generate the re-
sponse u(k+1) is computed as:

P (u(k+1)|U≤k,S≤k+1; θ)
=

∏I
i=1 P (u

k+1
i |U≤k,S≤k+1, u

(k+1)
<i ; θ)

(1)
where u(k+1)<i = u

(k+1)
1 , ..., u

(k+1)
i−1 .

2.2 Model Description
Figure 1 shows the framework of the proposed

Incremental Transformer with Deliberation De-



14

Utterance
Embedding

Knowledge
Attention

Self-Attention

Context
Attention

Feed-Forward

Target
Embedding

Self-Attention

Context
Attention

Utterance
Attention

Feed-Forward

Target
Embedding

Self-Attention

Knowledge
Attention

First-Pass
Attention

Feed-Forward

Document/
Utterance
Embedding

Feed-Forward

Self-Attention

Target
Embedding

Self-Attention

Context
Attention

Knowledge
Attention

Feed-Forward

(a) (c) (d) (e)

Utterance
Embedding

Knowledge
Attention

Self-Attention

Feed-Forward

(b)

SoftmaxSoftmax Softmax

(1) (2)
Figure 2: (1) Detailed architecture of model components. (a) The Self-Attentive Encoder(SA). (b) Incremental
Transformer (ITE). (c) Deliberation Decoder (DD). (2) Simplified version of our proposed model used to verify
the validity of our proposed Incremental Transformer Encoder and Deliberation Decoder. (d) Knowledge-Attention
Transformer(KAT). (e) Context-Knowledge-Attention Decoder (CKAD).

coder. Please refer to Figure 2 (1) for more details.
It consists of three components:

1) Self-Attentive Encoder (SA) (in orange) is
a transformer encoder as described in (Vaswani
et al., 2017), which encodes the document knowl-
edge and the current utterance independently.

2) Incremental Transformer Encoder (ITE) (on
the top) is a unified transformer encoder which en-
codes multi-turn utterances with knowledge repre-
sentation using an incremental encoding scheme.
This module takes previous utterances u(i) and the
document s(i)’s SA representation as input, and
use attention mechanism to incrementally build up
the representation of relevant context and docu-
ment knowledge.

3) Deliberation Decoder (DD) (on the bottom)
is a two-pass unified transformer decoder for bet-
ter generating the next response. The first-pass de-
coder takes current utterance u(k)’s SA representa-
tion and ITE output as input, and mainly relies on
conversation context for response generation. The
second-pass decoder takes the SA representation
of the first pass result and the relevant document
s(k+1)’s SA representation as input, and uses doc-
ument knowledge to further refine the response.

Self-Attentive Encoder

As document knowledge often includes several
sentences, it’s important to capture long-range
dependencies and identify relevant information.
We use multi-head self-attention (Vaswani et al.,

2017) to compute the representation of document
knowledge.

As shown in Figure 2 (a), we use a self-
attentive encoder to compute the representation
of the related document knowledge s(k). The in-
put (In(k)s ) of the encoder is a sequence of docu-
ment words embedding with positional encoding
added.(Vaswani et al., 2017):

In(k)s = [s
(k)
1 , ..., s

(k)
J ] (2)

s
(k)
j = esj + PE(j) (3)

where esj is the word embedding of s
(k)
j and

PE(·) denotes positional encoding function.
The Self-Attentive encoder contains a stack of

Nx identical layers. Each layer has two sub-
layers. The first sub-layer is a multi-head self-
attention (MultiHead) (Vaswani et al., 2017).
MultiHead(Q,K,V) is a multi-head attention
function that takes a query matrix Q, a key ma-
trix K, and a value matrix V as input. In cur-
rent case, Q = K = V. That’s why it’s called
self-attention. And the second sub-layer is a sim-
ple, position-wise fully connected feed-forward
network (FFN). This FFN consists of two lin-
ear transformations with a ReLU activation in be-
tween. (Vaswani et al., 2017).

A(1) = MultiHead(In(k)s , In
(k)
s , In

(k)
s ) (4)

D(1) = FFN(A(1)) (5)

FFN(x) = max(0, xW1 + b1)W2 + b2 (6)



15

where A(1) is the hidden state computed by multi-
head attention at the first layer, D(1) denotes the
representation of s(k) after the first layer. Note
that residual connection and layer normalization
are used in each sub-layer, which are omitted in
the presentation for simplicity. Please refer to
(Vaswani et al., 2017) for more details.

For each layer, repeat this process:

A(n) = MultiHead(D(n−1),D(n−1),D(n−1))
(7)

D(n) = FFN(A(n)) (8)

where n = 1, ..., Ns and D(0) = In(k)s .
We use SAs(·) to denote this whole process:

d(k) = D(Nx) = SAs(s
(k)) (9)

where d(k) is the final representation for the docu-
ment knowledge s(k).

Similarly, for each utterance u(k), we use
In(k)u = [u

(k)
1 , ...,u

(k)
I ] to represent the sequence

of the position-aware word embedding. Then the
same Self-Attentive Encoder is used to compute
the representation of current utterance u(k), and
we use SAu(u(k)) to denote this encoding result.
The Self-Attentive Encoder is also used to encode
the document s(k+1) and the first pass decoding re-
sults in the second pass of the decoder. Note that
SAs and SAu have the same architecture but dif-
ferent parameters. More details about this will be
mentioned in the following sections.

Incremental Transformer Encoder
To encode multi-turn document grounded ut-
terances effectively, we design an Incremental
Transformer Encoder. Incremental Transformer
uses multi-head attention to incorporate document
knowledge and context into the current utterance’s
encoding process. This process can be stated re-
cursively as follows:

c(k) = ITE(c(k−1),d(k), In(k)u ) (10)

where ITE(·) denotes the encoding function, c(k)
denotes the context state after encoding utterance
u(k), c(k−1) is the context state after encoding last
utterance u(k−1), d(k) is the representation of doc-
ument s(k) and In(k)u is the embedding of current
utterance u(k).

As shown in Figure 2 (b), we use a stack of Nu
identical layers to encode u(k). Each layer consists
of four sub-layers. The first sub-layer is a multi-
head self-attention:

B(n) = MultiHead(C(n−1),C(n−1),C(n−1))
(11)

where n = 1, ..., Nu, C(n−1) is the output of the
last layer and C(0) = In(k)u . The second sub-layer
is a multi-head knowledge attention:

E(n) = MultiHead(B(n),d(k),d(k)) (12)

The third sub-layer is a multi-head context atten-
tion:

F(n) = MultiHead(E(n), c(k−1), c(k−1)) (13)

where c(k−1) is the representation of the previous
utterances. That’s why we called the encoder ”In-
cremental Transformer”. The fourth sub-layer is
a position-wise fully connected feed-forward net-
work:

C(n) = FFN(F(n)) (14)

We use c(k) to denote the final representation at
Nu-th layer:

c(k) = C(Nu) (15)

Deliberation Decoder
Motivated by the real-world human cognitive pro-
cess, we design a Deliberation Decoder contain-
ing two decoding passes to improve the knowledge
relevance and context coherence. The first-pass
decoder takes the representation of current utter-
ance SAu(u(k)) and context c(k) as input and fo-
cuses on how to generate responses contextual co-
herently. The second-pass decoder takes the rep-
resentation of the first-pass decoding results and
related document s(k+1) as input and focuses on
increasing knowledge usage and guiding the fol-
lowing conversations within the scope of the given
document.

When generating the i-th response word u(k+1)i ,
we have the generated words u(k+1)<i as input
(Vaswani et al., 2017). We use In(k+1)r to denote
the matrix representation of u(k+1)<i as following:

In(k+1)r = [u
(k+1)
0 ,u

(k+1)
1 , ...,u

(k+1)
i−1 ] (16)

where u(k+1)0 is the vector representation of
sentence-start token.

As shown in Figure 2 (c), the Deliberation
Decoder consists of a first-pass decoder and a
second-pass decoder. These two decoders have
the same architecture but different input for sub-
layers. Both decoders are composed of a stack
of Ny identical layers. Each layer has four sub-
layers. For the first-pass decoder, the first sub-
layer is a multi-head self-attention:

G
(n)
1 = MultiHead(R

(n−1)
1 ,R

(n−1)
1 ,R

(n−1)
1 )

(17)



16

where n = 1, ..., Ny, R
(n−1)
1 is the output of the

previous layer, and R(0)1 = In
(k+1)
r . The second

sub-layer is a multi-head context attention:

H
(n)
1 = MultiHead(G

(n)
1 , c

(k), c(k)) (18)

where c(k) is the representation of context u≤k.
The third sub-layer is a multi-head utterance at-
tention:

M
(n)
1 = MultiHead(H

(n)
1 , SAu(u

(k)),

SAu(u
(k)))

(19)
where SAu(·) is a Self-Attentive Encoder which
encodes latest utterance u(k). Eq. (18) mainly en-
codes the context and document knowledge rele-
vant to the latest utterance, while Eq. (19) encodes
the latest utterance directly. We hope optimal per-
formance can be achieved by combining both.

The fourth sub-layer is a position-wise fully
connected feed-forward network:

R
(n)
1 = FFN(M

(n)
1 ) (20)

After Ny layers, we use softmax to get the words
probabilities decoded by first-pass decoder:

P (û
(k+1)
(1) ) = softmax(R

(Ny)
1 ) (21)

where û(k+1)(1) is the response decoded by the first-
pass decoder. For second-pass decoder:

G
(n)
2 = MultiHead(R

(n−1)
2 ,R

(n−1)
2 ,R

(n−1)
2 )

(22)
H

(n)
2 = MultiHead(G

(n)
2 ,d

(k+1),d(k+1)) (23)

M
(n)
2 = MultiHead(H

(n)
2 , SAu(û

(k+1)
(1) ),

SAu(û
(k+1)
(1) ))

(24)
R

(n)
2 = FFN(M

(n)
2 ) (25)

P (û
(k+1)
(2) ) = softmax(R

(Ny)
2 ) (26)

where R(n−1)2 is the counterpart to R
(n−1)
1 in pass

two decoder, referring to the output of the previ-
ous layer. d(k+1) is the representation of docu-
ment s(k+1) using Self-Attentive Encoder, û(k+1)(2)
is the output words after the second-pass decoder.

Training
In contrast to the original Deliberation Network
(Xia et al., 2017), where they propose a com-
plex joint learning framework using Monte Carlo
Method, we minimize the following loss as Xiong
et al. (2018) do:

Lmle = Lmle1 + Lmle2 (27)

Lmle1 = −
K∑
k=1

I∑
i=1

logP (û
(k+1)
(1)i ) (28)

Lmle2 = −
K∑
k=1

I∑
i=1

logP (û
(k+1)
(2)i ) (29)

3 Experiments

3.1 Dataset
We evaluate our model using the Document

Grounded Conversations Dataset (Zhou et al.,
2018). There are 72922 utterances for training,
3626 utterances for validation and 11577 utter-
ances for testing. The utterances can be either ca-
sual chats or document grounded. Note that we
consider consequent utterances of the same per-
son as one utterance. For example, we consider A:
Hello! B: Hi! B: How’s it going? as A: Hello!
B: Hi! How’s it going?. And there is a related
document given for every several consequent ut-
terances, which may contain movie name, casts,
introduction, ratings, and some scenes. The aver-
age length of documents is about 200. Please refer
to (Zhou et al., 2018) for more details.

3.2 Baselines
We compare our proposed model with the fol-

lowing state-of-the-art baselines:
Models not using document knowledge:

Seq2Seq: A simple encoder-decoder model
(Shang et al., 2015; Vinyals and Le, 2015) with
global attention (Luong et al., 2015). We concate-
nate utterances context to a long sentence as input.

HRED: A hierarchical encoder-decoder model
(Serban et al., 2016), which is composed of
a word-level LSTM for each sentence and a
sentence-level LSTM connecting utterances.

Transformer: The state-of-the-art NMT model
based on multi-head attention (Vaswani et al.,
2017). We concatenate utterances context to a
long sentence as its input.
Models using document knowledge:

Seq2Seq (+knowledge) and HRED (+knowl-
edge) are based on Seq2Seq and HRED respec-
tively. They both concatenate document knowl-
edge representation and last decoding output em-
bedding as input when decoding. Please refer to
(Zhou et al., 2018) for more details.

Wizard Transformer: A Transformer-based
model for multi-turn open-domain dialogue with
unstructured text facts (Dinan et al., 2018). It con-
catenates context utterances and text facts to a long



17

Knowledge Context
Model PPL BLEU(%) Fluency Relevance Coherence
Seq2Seq without knowledge 80.93 0.38 1.62 0.18 0.54
HRED without knowledge 80.84 0.43 1.25 0.18 0.30
Transformer without knowledge 87.32 0.36 1.60 0.29 0.67
Seq2Seq (+knowledge) 78.47 0.39 1.50 0.22 0.61
HRED (+knowledge) 79.12 0.77 1.56 0.35 0.47
Wizard Transformer 70.30 0.66 1.62 0.47 0.56
ITE+DD (ours) 15.11 0.95 1.67 0.56 0.90
ITE+CKAD (ours) 64.97 0.86 1.68 0.50 0.82
KAT (ours) 65.36 0.58 1.58 0.33 0.78

Table 1: Automatic evaluation and manual evaluation results for baselines and our proposed models.

Knowledge Context
Model Relevance(%) Coherence(%)
Wizard 64/25/11 58/28/14

ITE+CKAD 67/16/17 40/37/23
ITE+DD 64/16/20 38/34/28

Table 2: The percent(%) of score (0/1/2) of Knowledge
Relevance and Context Coherence for Wizard Trans-
former, ITE+CKAD and ITE+DD.

sequence as input. We replace the text facts with
document knowledge.

Here, we also conduct an ablation study to il-
lustrate the validity of our proposed Incremental
Transformer Encoder and Deliberation Decoder.

ITE+CKAD: It uses Incremental Trans-
former Encoder (ITE) as encoder and Context-
Knowledge-Attention Decoder (CKAD) as shown
in Figure 2 (e). This setup is to test the validity of
the deliberation decoder.

Knowledge-Attention Transformer (KAT):
As shown in Figure 2 (d), the encoder of this
model is a simplified version of Incremental
Transformer Encoder (ITE), which doesn’t have
context-attention sub-layer. We concatenate ut-
terances context to a long sentence as its in-
put. The decoder of the model is a simplified
Context-Knowledge-Attention Decoder (CKAD).
It doesn’t have context-attention sub-layer either.
This setup is to test how effective the context has
been exploited in the full model.

3.3 Experiment Setup
We use OpenNMT-py1 (Klein et al., 2017) as

the code framework2. For all models, the hidden
size is set to 512. For rnn-based models (Seq2Seq,
HRED), 3-layer bidirectional LSTM (Hochreiter

1https://github.com/OpenNMT/OpenNMT-py
2The code and models are available at https://

github.com/lizekang/ITDD

and Schmidhuber, 1997) and 1-layer LSTM is ap-
plied for encoder and decoder respectively. For
transformer-based models, the layers of both en-
coder and decoder are set to 3. The number of
attention heads in multi-head attention is 8 and
the filter size is 2048. The word embedding is
shared by utterances, knowledge and generated re-
sponses. The dimension of word embedding is set
to 512 empirically. We use Adam (Kingma and
Ba, 2014) for optimization. When decoding, beam
size is set to 5. We use the previous three utter-
ances and its related documents as input.

3.4 Evaluation Metrics
Automatic Evaluation: We adopt perplexity

(PPL) and BLEU (Papineni et al., 2002) to au-
tomatically evaluate the response generation per-
formance. Models are evaluated using perplexity
of the gold response as described in (Dinan et al.,
2018). Lower perplexity indicates better perfor-
mance. BLEU measures n-gram overlap between
a generated response and a gold response. How-
ever, since there is only one reference for each re-
sponse and there may exist multiple feasible re-
sponses, BLEU scores are extremely low. We
compute BLEU score by the multi-bleu.perl3

Manual Evaluation: Manual evaluations are es-
sential for dialogue generation. We randomly
sampled 30 conversations containing 606 utter-
ances from the test set and obtained 5454 utter-
ances from the nine models. We have annotators
score these utterances given its previous utterances
and related documents. We defined three metrics
- fluency, knowledge relevance (Liu et al., 2018)
and context coherence for manual evaluation. All
these metrics are scored 0/1/2.

fluency: Whether the response is natural and

3https://github.com/google/seq2seq/
blob/master/bin/tools/multi-bleu.perl

https://github.com/OpenNMT/OpenNMT-py
https://github.com/lizekang/ITDD
https://github.com/lizekang/ITDD
https://github.com/google/seq2seq/blob/master/bin/tools/multi-bleu.perl
https://github.com/google/seq2seq/blob/master/bin/tools/multi-bleu.perl


18

Document
moviename despicable me ... cast: steve carell as gru ... rotten tomatoes: 81% ... it is the debut
film of illumination entertainment. ... gru, a supervillain, is disheartened when an unknown
supervillain steals the great pyramid of giza. gru, with the assistance of his colleague dr. Nefario
and his minions, resolves to one-up this mystery rival by shrinking and stealing the moon. as it
would be costly to steal the moon, gru seeks a loan from the bank of evil. ... upon learning that
an up-and-coming villain named vector was responsible for the pyramid theft ...
Utterance 1 what do you think about despicable me?

ITE+DD i think it is an awesome movie, what about you?
Wizard i think it’s a great movie!

Utterance 2 i rather liked it. it wasn’t what i was expecting but it was still good.
ITE+DD yeah, it makes me laugh, even when they make a movie about it.

Wizard it’s a great movie for kids and adults.
Utterance 3 i like it too. funny and heart warming at the same time.

ITE+DD i think it’s interesting that gru decided to take a loan from the bank of evil.
Wizard i think they should have made a sequel.

Utterance 4 gru was a really interesting character, too. i liked steve carell and the voice he
used for gru.

ITE+DD yeah, now that you mention it, what did you think of the minions?
Wizard i think the entire cast was great.

Utterance 5 yes, he did an excellent job portraying the character. 81% in ratings i think is great.
ITE+DD yes, 81% is a great score!

Wizard i also liked the villain of the movie.
Table 3: Responses generated by Incremental Transformer with Deliberation Decoder(ITE+DD) and the Wizard
Transformer(Wizard). These utterances are from continuous dialogues. ITE+DD and Wizard generate responses
using context utterances and a given document. Note that Utterance i+ 1 is the gold response of Utterance i.

fluent. Score 0 represents not fluent and incom-
prehensible; 1 represents partially fluent but still
comprehensible; 2 represents totally fluent.

knowledge relevance: Whether the response
uses relevant and correct knowledge. Score 0 rep-
resents no relevant knowledge; 1 represents con-
taining relevant knowledge but not correct; 2 rep-
resents containing relevant knowledge and correct.

context coherence: Whether the response is
coherent with the context and guides the follow-
ing utterances. Score 0 represents not coherent or
leading the dialogue to an end; 1 represents coher-
ent with the utterance history but not guiding the
following utterances; 2 represents coherent with
utterance history and guiding the next utterance.

3.5 Experimental Results

Table 1 shows the automatic and manual evalu-
ation results for both the baseline and our models.

In manual evaluation, among baselines, Wizard
Transformer and RNN without knowledge have
the highest fluency of 1.62 and Wizard obtains the
highest knowledge relevance of 0.47 while Trans-
former without knowledge gets the highest context
coherence of 0.67. For all models, ITE+CKAD

obtains the highest fluency of 1.68 and ITE+DD
has the highest Knowledge Relevance of 0.56 and
highest Context Coherence of 0.90.

In automatic evaluation, our proposed model
has lower perplexity and higher BLEU scores than
baselines. For BLEU, HRED with knowledge ob-
tains the highest BLEU score of 0.77 among the
baselines. And ITE+DD gets 0.95 BLEU score,
which is the highest among all the models. For
perplexity, Wizard Transformer obtains the low-
est perplexity of 70.30 among baseline models and
ITE+DD has remarkably lower perplexity of 15.11
than all the other models. A detailed analysis is in
Section 3.6.

3.6 Analysis and Discussion

To our surprise, ITE+DD reaches an extremely
low ground truth perplexity. We find that the
ground truth perplexity after the first-pass decod-
ing is only similar to the ITE+CKAD. It shows
that the second-pass decoder utilizes the docu-
ment knowledge well, and dramatically reduced
the ground truth perplexity.

As shown in Table 2, ITE+DD has a higher per-
cent of score 2 both on Knowledge Relevance and



19

ID Utterance Two-pass Responses
1 I think rachel mcadams

had an even better role
as regina george
however! would you
agree?

i’m not a fan of
kristen bell, but i think
she did a great job.
i’m not a huge fan of
rachel mcadams, but
he did a great job.

2 yeah, I guess that’s
always worth it, and a
truce was made as well.

yeah, not only does
she reconcile with the
plastics.
yeah, she reconciles
with janis , damien and
aaron.

3 i liked the scene where
buzz thinks he’s a big
shot hero but then the
camera reveals him to
be a tiny toy.

i think that’s one of
the best scenes in the
movie.
oh, i think that is
what makes the movie
unique as well. have
you seen any of the
other pixar movies?

Table 4: Examples of the two pass decoding. Under-
lined texts are the differences between two results. For
each case, the first-pass response is on the top.

Context Coherence than ITE+CKAD. This result
also demonstrates that Deliberation Decoder can
improve the knowledge correctness and guide the
following conversations better.

Although the perplexity of ITE+CKAD is only
slightly better than KAT, the BLEU score, Flu-
ency, Knowledge Relevance and Context Coher-
ence of ITE+CKAD all significantly outperform
those of KAT model, which indicates that Incre-
mental Transformer can deal with multi-turn doc-
ument grounded conversations better.

Wizard Transformer has a great performance
on Knowledge Relevance only second to our pro-
posed Incremental Transformer. However, its
score on Context Coherence is lower than some
other baselines. As shown in Table 2, Wizard
Transformer has Knowledge Relevance score 1 re-
sults twice more than score 2 results, which indi-
cates that the model tends to generate responses
with related knowledge but not correct. And
the poor performance on Context Coherence also
shows Wizard Transformer does not respond to the
previous utterance well. This shows the limitation
of representing context and document knowledge
by simple concatenation.

3.7 Case Study
In this section, we list some examples to show

the effectiveness of our proposed model.
Table 3 lists some responses generated by our

proposed Incremental Transformer with Delibera-
tion Decoder (ITE+DD) and Wizard Transformer
(which achieves overall best performance among

baseline models). Our proposed model can gener-
ate better responses than Wizard Transformer on
knowledge relevance and context coherence.

To demonstrate the effectiveness of the two-
pass decoder, we compare the results from the
first-pass decoding and the second-pass decoding.
Table 4 shows the improvement after the second-
pass decoding. For Case 1, the second-pass de-
coding result revises the knowledge error in the
first-pass decoding result. For Case 2, the second-
pass decoder uses more detailed knowledge than
the first-pass one. For Case 3, the second-pass de-
coder cannot only respond to the previous utter-
ance but also guide the following conversations by
asking some knowledge related questions.

4 Related Work

The closest work to ours lies in the area of open-
domain dialogue system incorporating unstruc-
tured knowledge. Ghazvininejad et al. (2018)
uses an extended Encoder-Decoder where the de-
coder is provided with an encoding of both the
context and the external knowledge. Parthasarathi
and Pineau (2018) uses an architecture containing
a Bag-of-Words Memory Network fact encoder
and an RNN decoder. Dinan et al. (2018) com-
bines Memory Network architectures to retrieve,
read and condition on knowledge, and Trans-
former architectures to provide text representa-
tion and generate outputs. Different from these
works, we greatly enhance the Transformer ar-
chitectures to handle the document knowledge in
multi-turn dialogue from two aspects: 1) using at-
tention mechanism to combine document knowl-
edge and context utterances; and 2) exploiting in-
cremental encoding scheme to encode multi-turn
knowledge aware conversations.

Our work is also inspired by several works in
other areas. Zhang et al. (2018) introduces docu-
ment context into Transformer on document-level
Neural Machine Translation (NMT) task. Guan
et al. (2018) devises the incremental encoding
scheme based on rnn for story ending genera-
tion task. In our work, we design an Incremental
Transformer to achieve a knowledge-aware con-
text representation using an incremental encoding
scheme. Xia et al. (2017) first proposes Deliber-
ation Network based on rnn on NMT task. Our
Deliberation Decoder is different in two aspects:
1) We clearly devise the two decoders targeting
context and knowledge respectively; 2) Our sec-



20

ond pass decoder directly fine tunes the first pass
result, while theirs uses both the hidden states and
results from the first pass.

5 Conclusion and Future Work

In this paper, we propose an Incremental Trans-
former with Deliberation Decoder for the task of
Document Grounded Conversations. Through an
incremental encoding scheme, the model achieves
a knowledge-aware and context-aware conversa-
tion representation. By imitating the real-world
human cognitive process, we propose a Delibera-
tion Decoder to optimize knowledge relevance and
context coherence. Empirical results show that the
proposed model can generate responses with much
more relevance, correctness, and coherence com-
pared with the state-of-the-art baselines. In the fu-
ture, we plan to apply reinforcement learning to
further improve the performance.

6 Acknowledgments

This work is supported by 2018 Tencent Rhino-
Bird Elite Training Program, National Natural
Science Foundation of China (NO. 61662077,
NO.61876174) and National Key R&D Program
of China (NO.YS2017YFGH001428). We sin-
cerely thank the anonymous reviewers for their
thorough reviewing and valuable suggestions.

References
Danqi Chen, Adam Fisch, Jason Weston, and Antoine

Bordes. 2017. Reading wikipedia to answer open-
domain questions. In Proceedings of the 55th An-
nual Meeting of the Association for Computational
Linguistics (Volume 1: Long Papers), volume 1,
pages 1870–1879.

Emily Dinan, Stephen Roller, Kurt Shuster, Angela
Fan, Michael Auli, and Jason Weston. 2018. Wizard
of wikipedia: Knowledge-powered conversational
agents. arXiv preprint arXiv:1811.01241.

Marjan Ghazvininejad, Chris Brockett, Ming-Wei
Chang, Bill Dolan, Jianfeng Gao, Wen-tau Yih, and
Michel Galley. 2018. A knowledge-grounded neural
conversation model. In Thirty-Second AAAI Confer-
ence on Artificial Intelligence.

Jian Guan, Yansen Wang, and Minlie Huang. 2018.
Story ending generation with incremental encod-
ing and commonsense knowledge. arXiv preprint
arXiv:1808.10113.

Sepp Hochreiter and Jürgen Schmidhuber. 1997.
Long short-term memory. Neural computation,
9(8):1735–1780.

Hsin-Yuan Huang, Eunsol Choi, and Wen-tau Yih.
2018. Flowqa: Grasping flow in history for con-
versational machine comprehension. arXiv preprint
arXiv:1810.06683.

Diederik P Kingma and Jimmy Ba. 2014. Adam: A
method for stochastic optimization. arXiv preprint
arXiv:1412.6980.

Guillaume Klein, Yoon Kim, Yuntian Deng, Jean
Senellart, and Alexander M. Rush. 2017. Open-
NMT: Open-source toolkit for neural machine trans-
lation. In Proc. ACL.

Jiwei Li, Michel Galley, Chris Brockett, Jianfeng Gao,
and Bill Dolan. 2016. A diversity-promoting objec-
tive function for neural conversation models. In Pro-
ceedings of the 2016 Conference of the North Amer-
ican Chapter of the Association for Computational
Linguistics: Human Language Technologies, pages
110–119.

Shuman Liu, Hongshen Chen, Zhaochun Ren, Yang
Feng, Qun Liu, and Dawei Yin. 2018. Knowledge
diffusion for neural dialogue generation. In Pro-
ceedings of the 56th Annual Meeting of the Associa-
tion for Computational Linguistics (Volume 1: Long
Papers), volume 1, pages 1489–1498.

Hao-Tong Ye Kai-Ling Lo and Shang-Yu Su Yun-Nung
Chen. 2019. Knowledge-grounded response gen-
eration with deep attentional latent-variable model.
Thirty-Third AAAI Conference on Artificial Intelli-
gence.

Thang Luong, Hieu Pham, and Christopher D Man-
ning. 2015. Effective approaches to attention-based
neural machine translation. In Proceedings of the
2015 Conference on Empirical Methods in Natural
Language Processing, pages 1412–1421.

Andrea Madotto, Chien-Sheng Wu, and Pascale Fung.
2018. Mem2seq: Effectively incorporating knowl-
edge bases into end-to-end task-oriented dialog sys-
tems. In Proceedings of the 56th Annual Meeting of
the Association for Computational Linguistics (Vol-
ume 1: Long Papers), volume 1, pages 1468–1478.

Kishore Papineni, Salim Roukos, Todd Ward, and Wei
jing Zhu. 2002. Bleu: a method for automatic eval-
uation of machine translation. pages 311–318.

Prasanna Parthasarathi and Joelle Pineau. 2018. Ex-
tending neural generative conversational model us-
ing external knowledge sources. In Proceedings of
the 2018 Conference on Empirical Methods in Nat-
ural Language Processing, pages 690–695.

Pranav Rajpurkar, Robin Jia, and Percy Liang. 2018.
Know what you dont know: Unanswerable ques-
tions for squad. In Proceedings of the 56th Annual
Meeting of the Association for Computational Lin-
guistics (Volume 2: Short Papers), volume 2, pages
784–789.

https://doi.org/10.18653/v1/P17-4012
https://doi.org/10.18653/v1/P17-4012
https://doi.org/10.18653/v1/P17-4012


21

Siva Reddy, Danqi Chen, and Christopher D Manning.
2018. Coqa: A conversational question answering
challenge. arXiv preprint arXiv:1808.07042.

Iulian V Serban, Alessandro Sordoni, Yoshua Bengio,
Aaron Courville, and Joelle Pineau. 2016. Building
end-to-end dialogue systems using generative hier-
archical neural network models. In Thirtieth AAAI
Conference on Artificial Intelligence.

Lifeng Shang, Zhengdong Lu, and Hang Li. 2015.
Neural responding machine for short-text conversa-
tion. In Proceedings of the 53rd Annual Meeting of
the Association for Computational Linguistics and
the 7th International Joint Conference on Natural
Language Processing (Volume 1: Long Papers), vol-
ume 1, pages 1577–1586.

Ilya Sutskever, Oriol Vinyals, and Quoc V Le. 2014.
Sequence to sequence learning with neural net-
works. In Advances in neural information process-
ing systems, pages 3104–3112.

Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob
Uszkoreit, Llion Jones, Aidan N Gomez, Łukasz
Kaiser, and Illia Polosukhin. 2017. Attention is all
you need. In Advances in Neural Information Pro-
cessing Systems, pages 5998–6008.

Oriol Vinyals and Quoc Le. 2015. A neural conversa-
tional model. arXiv preprint arXiv:1506.05869.

Yingce Xia, Fei Tian, Lijun Wu, Jianxin Lin, Tao Qin,
Nenghai Yu, and Tie-Yan Liu. 2017. Deliberation
networks: Sequence generation beyond one-pass de-
coding. In Advances in Neural Information Process-
ing Systems, pages 1784–1794.

Hao Xiong, Zhongjun He, Hua Wu, and Haifeng Wang.
2018. Modeling coherence for discourse neural ma-
chine translation. arXiv preprint arXiv:1811.05683.

Semih Yavuz, Abhinav Rastogi, Guan-lin Chao, Dilek
Hakkani-Tür, and Amazon Alexa AI. 2018. Deep-
copy: Grounded response generation with hierarchi-
cal pointer networks. Advances in Neural Informa-
tion Processing Systems.

Adams Wei Yu, David Dohan, Minh-Thang Luong, Rui
Zhao, Kai Chen, Mohammad Norouzi, and Quoc V
Le. 2018. Qanet: Combining local convolution
with global self-attention for reading comprehen-
sion. arXiv preprint arXiv:1804.09541.

Jiacheng Zhang, Huanbo Luan, Maosong Sun, Feifei
Zhai, Jingfang Xu, Min Zhang, and Yang Liu. 2018.
Improving the transformer translation model with
document-level context. In Proceedings of the 2018
Conference on Empirical Methods in Natural Lan-
guage Processing, pages 533–542.

Kangyan Zhou, Shrimai Prabhumoye, and Alan W
Black. 2018. A dataset for document grounded con-
versations. In Proceedings of the 2018 Conference
on Empirical Methods in Natural Language Pro-
cessing, pages 708–713.


