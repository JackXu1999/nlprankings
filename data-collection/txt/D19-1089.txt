



















































Multilingual Neural Machine Translation with Language Clustering


Proceedings of the 2019 Conference on Empirical Methods in Natural Language Processing
and the 9th International Joint Conference on Natural Language Processing, pages 963–973,
Hong Kong, China, November 3–7, 2019. c©2019 Association for Computational Linguistics

963

Multilingual Neural Machine Translation with Language Clustering

Xu Tan§∗, Jiale Chen†∗, Di He‡, Yingce Xia§, Tao Qin§ and Tie-Yan Liu§
§Microsoft Research

†University of Science and Technology of China
‡Peking University

{xuta,taoqin,tyliu}@microsoft.com

Abstract

Multilingual neural machine translation
(NMT), which translates multiple languages
using a single model, is of great practi-
cal importance due to its advantages in
simplifying the training process, reducing
online maintenance costs, and enhancing
low-resource and zero-shot translation. Given
there are thousands of languages in the world
and some of them are very different, it is
extremely burdensome to handle them all
in a single model or use a separate model
for each language pair. Therefore, given a
fixed resource budget, e.g., the number of
models, how to determine which languages
should be supported by one model is critical
to multilingual NMT, which, unfortunately,
has been ignored by previous work. In this
work, we develop a framework that clusters
languages into different groups and trains
one multilingual model for each cluster. We
study two methods for language clustering:
(1) using prior knowledge, where we cluster
languages according to language family, and
(2) using language embedding, in which we
represent each language by an embedding
vector and cluster them in the embedding
space. In particular, we obtain the embedding
vectors of all the languages by training a
universal neural machine translation model.
Our experiments on 23 languages show that
the first clustering method is simple and
easy to understand but leading to suboptimal
translation accuracy, while the second method
sufficiently captures the relationship among
languages well and improves the translation
accuracy for almost all the languages over
baseline methods.

1 Introduction

Neural machine translation (NMT) (Bahdanau
et al., 2015; Luong et al., 2015b; Sutskever et al.,

∗Authors contribute equally to this work.

2014; Wu et al., 2016; Gehring et al., 2017;
Vaswani et al., 2017) has witnessed rapid progress
in recent years, from novel model structure de-
velopments (Gehring et al., 2017; Vaswani et al.,
2017) to achieving performance comparable to hu-
mans (Hassan et al., 2018).

Although a conventional NMT model can
handle a single language translation pair (e.g.,
German→English, Spanish→French) well, train-
ing a separate model for each language pair is un-
affordable considering there are thousands of lan-
guages in the world. A straightforward solution to
reduce computational cost is using one model to
handle the translations of multiple languages, i.e.,
multilingual translation. Johnson et al. (2017); Fi-
rat et al. (2016); Ha et al. (2016); Lu et al. (2018)
propose to share part of (e.g., attention mecha-
nism) or all models for multiple language pairs
and achieve considerable accuracy improvement.
While they focus on how to translate multiple lan-
guage pairs in a single model and improve the per-
formance of the multilingual model, they do not
investigate which language pairs should be trained
in the same model.

Clearly, it is extremely heavy to translate all
language pairs in a single model due to the di-
verse and large amount of languages; instead
we cluster language pairs into multiple clusters
and train one model for each cluster, consider-
ing that: (1) language pairs that differ a lot (e.g.,
German→English and Chinese→English) may
negatively impact the training process if handling
them by one model, and (2) similar language pairs
(e.g., German→English and French→English) are
likely to boost each other in model training. Then
the key challenge is how to cluster language pairs,
which is our focus in this paper.

In this paper, we consider the many-to-one set-
tings where there are multiple source languages
and one target language (English), and one-to-



964

many settings where there are multiple target lan-
guages and one source language (English)1. In this
way, we only need to consider the languages in the
source or target side for the determination of train-
ing in the same model, instead of language pairs.

We consider two methods for language clus-
tering. The first one is clustering based on prior
knowledge, where we use the knowledge of lan-
guage family to cluster languages. The second
one is a purely learning based method that uses
language embeddings for similarity measurement
and clustering. We obtain the language embed-
dings by training all the languages in a univer-
sal NMT model, and add each language with a
tag to give the universal model a sense of which
language it currently processes. The tag of each
language (language embedding) is learned end-to-
end and used for language clustering. Language
clustering based on language family is easy to ob-
tain and understand, while the end-to-end learn-
ing method may boost multilingual NMT training,
since the language clustering is derived directly
from the learning task and will be more useful to
the task itself.

Through empirical studies on 23
languages→English and English→23 languages
in IWSLT dataset, we have several findings: (1)
Language embeddings can capture the similarity
between languages, and correlate well with the
fine-grained hierarchy (e.g., language branch)
in a language family. (2) Similar languages, if
clustered together, can indeed boost multilingual
performance. (3) Language embeddings based
clustering outperforms the language family based
clustering on the 23 languages↔English.

2 Background

Neural Machine Translation Given the bilin-
gual translation pair (x, y), an NMT model
learns the parameter θ by maximizing the log-
likelihood logP (y|x, θ). The encoder-decoder
framework (Bahdanau et al., 2015; Luong et al.,
2015b; Sutskever et al., 2014; Wu et al., 2016;
Gehring et al., 2017; Vaswani et al., 2017; Shen
et al., 2018; He et al., 2018) is adopted to model
the conditional probability P (y|x, θ), where the
encoder maps the input to a set of hidden repre-
sentations h and the decoder generates each target

1Many-to-many translation can be bridged through many-
to-one and one-to-many translations. Our methods can be
also extended to the many-to-many setting with some modi-
fications. We leave this to future work.

token yt using the previous generated tokens y<t
and the representations h.

Multilingual NMT NMT has recently been ex-
tended from the translation of a language pair to
multilingual translation (Dong et al., 2015; Lu-
ong et al., 2015a; Firat et al., 2016; Lu et al.,
2018; Johnson et al., 2017; He et al., 2019; Ha
et al., 2016; Platanios et al., 2018; Tan et al.,
2019). Dong et al. (2015) use a single encoder
but separate decoders to translate one source lan-
guage to multiple target languages (i.e., one-to-
many translation). Luong et al. (2015a) combine
multiple encoders and decoders, one encoder for
each source language and one decoder for each
target language respectively, to translate multiple
source languages to multiple target languages (i.e.,
many-to-many translation). Firat et al. (2016) use
different encoders and decoders but share the at-
tention mechanism for many-to-many translation.
Similarly, Lu et al. (2018) propose the neural in-
terlingua, which is an attentional LSTM encoder
to link multiple encoders and decoders for differ-
ent language pairs. Johnson et al. (2017); Ha et al.
(2016) use a universal encoder and decoder to han-
dle multiple source and target languages, with a
special tag in the encoder to determine which tar-
get languages to output.

While all the above works focus on the de-
sign of better models for multilingual translation,
they implicitly assume that a set of languages are
pre-given, and do not consider which languages
(language pairs) should be in a set and share
one model. In this work we focus on determin-
ing which languages (language pairs) should be
shared in one model.

3 Multilingual NMT with Language
Clustering

Previous work trains a set of language pairs (usu-
ally the number is small, e.g., < 10 languages) us-
ing a single model and focuses on improving this
multilingual model. When facing a large amount
of languages (dozens or even hundreds), one sin-
gle model can hardly handle them all, considering
that a single model has limited capacity, some lan-
guages are quite diverse and far different, and thus
one model will lead to degraded accuracy.

In this paper, we first group the languages into
several clusters and then train one multilingual
NMT model (Johnson et al., 2017) for the transla-
tions in each cluster. By controlling the number of



965

clusters, we can balance translation accuracy and
computational cost: compared to using one model
for each language pair, our approach greatly re-
duces computational cost, and compared to using
one model for all language pairs, our approach de-
livers better translation accuracy. In this section,
we present two methods of language clustering to
enhance multilingual NMT.

3.1 Prior Knowledge Based Clustering

Several kinds of prior knowledge can be leveraged
to cluster languages (Paul et al., 2009; Comrie,
1989; Bakker et al., 2009; Holman et al., 2008; Liu
and Li, 2010; Chen and Gerdes, 2017; Wu et al.,
2018; Leng et al., 2019), such as language fam-
ily, language typology or other language charac-
teristics from the URIEL database (Levin et al.,
2017). Here we do not aim to give a comprehen-
sive study of diverse prior knowledge based clus-
terings. Instead, we choose the commonly used
language family taxonomy (Paul et al., 2009) as
the prior knowledge for clustering, to provide a
comparison with the language embedding based
clustering.

Language family is a group of languages re-
lated through descent from a common ancestral
language or parental language2. There are dif-
ferent kinds of taxonomies for language family in
the world, among which, Ethnologue (Paul et al.,
2009)3 is one of the most authoritative and com-
monly accepted taxonomies. The 7,472 known
languages in the world fall into 152 families ac-
cording to Paul et al. (2009). We regard the lan-
guages in the same family as similar languages and
group them into one cluster.

3.2 Language Embedding Based Clustering

When training a multilingual model, it is com-
mon practice to add a tag to the input of en-
coder to indicate which language the model is
currently processing (Johnson et al., 2017; Firat
et al., 2016; Malaviya et al., 2017; Tiedemann
and Östling, 2017). The embeddings of the tag
is learned end-to-end and depicts the characteris-
tics of the corresponding language, which is called
language embeddings, analogous to word embed-
dings (Mikolov et al., 2013).

We first train a universal model to translate all
the language pairs. As shown in Figure 1, the

2https://en.wikipedia.org/wiki/Language family
3https://www.ethnologue.com/browse/families

Language Embedding

Ru/Sk/Ja/Tr/Ar/De/Fr/Es/Pt   or   En

Decoder

Encoder

Ru

Sk

Ja
Tr

Ar

Pt

Es

Fr

De

En   or   Ru/Sk/Ja/Tr/Ar/De/Fr/Es/Pt

Figure 1: The illustration of learning language embed-
dings for clustering. For both many-to-one (other lan-
guages to English) and one-to-many (English to other
languages) setting, we add the language embeddings to
the encoder.

encoder of the universal NMT model takes both
word embeddings and language embedding as in-
puts. After model training, we get an embedding
vector for each language. We regard the embed-
ding vector as the representation of a language
and cluster all languages using the embeddings4.
There exist many clustering methods. Without
loss of generality, we choose hierarchical cluster-
ing (Rokach and Maimon, 2005) to cluster the em-
bedding vectors in our experiments.

3.3 Discussions

We analyze and compare the two clustering meth-
ods proposed in this section. Clustering based on
prior knowledge (language family) is simple. The
taxonomy based on language family is consistent
with the human knowledge, easy to understand,
and does not change with respect to data/time.
This method also has drawbacks. First, the tax-
onomy built on language family does not cover all
the languages in the world since some languages
are isolate5. Second, there are many language
families (152 according to Paul et al. (2009)),
which means that we still need a large number of
models to handle all the languages in the world.
Third, language family cannot characterize all the
features of a language to fully capture the similar-
ity between languages.

Since language embeddings are learnt in a uni-
versal NMT model, which is consistent with the

4One may argue that considering training one universal
model for all the languages can not ensure the best transla-
tion accuracy, how could the learned language embeddings be
accurate? We find the learned language embeddings are not
that sensitive to translation accuracy and relatively stable dur-
ing the later training process even when the universal model
has not converged to the best translation accuracy. Therefore,
the cost to get the language embeddings is much smaller than
training a multilingual model to get good accuracy.

5https://en.wikipedia.org/wiki/Language isolate



966

downstream multilingual NMT task, clustering
based on language embeddings is supposed to
capture the similarity between different languages
well for NMT. As is shown in our experiments, the
clustering results implicitly capture and combine
multiple aspects of language characteristics and
boost the performance of the multilingual model.

4 Experiment Setup

Datasets We evaluate our method on the IWSLT
datasets which contain multiple languages from
TED talks. We collect datasets from the IWSLT
evaluation campaign6 from years 2011 to 2018,
which consist of the translation pairs of 23
languages↔English. The detailed description of
the training/validation/test set of the 23 transla-
tion pairs can be found in Supplementary Mate-
rials (Section 1). All the data has been tokenized
and segmented into sub-word symbols using Byte
Pair Encoding (BPE) (Sennrich et al., 2016). We
learn the BPE operations for all languages to-
gether, which results in a shared vocabulary of
90K BPE tokens.

Model Configurations We use Trans-
former (Vaswani et al., 2017) as the basic
NMT model considering that it achieves state-of-
the-art performance on multiple NMT benchmark
tasks and is a popular choice for recent research
on NMT. We use the same model configuration for
each cluster with model hidden size dmodel = 256,
feed-forward hidden size dff = 1024 and the layer
number is 2. The size of language embeddings is
set to 256.

Training and Inference We up-sample the
training data of each language to be roughly the
same during training. For the multilingual model
training, we concatenate training sentence pairs of
all the languages in the same mini-batch. We set
the batch size of each language to roughly 4096
tokens, and thus the total batch size is 4096 ∗ |Ck|,
where |Ck| is the number of languages in cluster k.
The corresponding language embedding is added
on the word embedding of each source token. We
train the model with 8 NVIDIA Tesla M40 GPU
cards, each GPU card with roughly 512 ∗ |Ck| to-
kens in terms of batch size. We use Adam op-
timizer (Kingma and Ba, 2014) with β1 = 0.9,
β2 = 0.98, ε = 10−9 and follow the learning rate
schedule in Vaswani et al. (2017).

6https://wit3.fbk.eu/

Indo-European

Tr

Turkic

Uralic

Sino-Tibetan

Afroasiatic

Zh    Hu

Austroasiatic

Bg     Cs     De     El     Es

Ar     He     Ja    Th    Vi    

Japonic

Kra-Dai

Fa     Fr      It      Nl      Pl

Pt     Ro    Ru     Sk     Sl

Figure 2: Language clustering of the 23 languages in
IWLST dataset according to language family. There
are 8 different language families in this dataset, which
includes Indo-European, Uralic, Turkic, Afroasiatic,
Sino-Tibetan, Japonic, Kra-Dai and Austroasiatic.

During inference, each source token is also
added with the corresponding language embed-
ding in order to give the model a sense of the lan-
guage it is currently processing. We decode with
beam search and set beam size to 6 and length
penalty α = 1.1 for all the languages. We evaluate
the translation quality by tokenized case sensitive
BLEU (Papineni et al., 2002) with multi-bleu.pl7.

Our codes are implemented based on ten-
sor2tensor (Vaswani et al., 2018)8 and we will re-
lease the codes once the paper is open to the pub-
lic.

5 Results

In this section, we mainly show the experiment re-
sults and analyses on the many-to-one setting in
Section 5.1-5.3. The results on the one-to-many
setting are similar and we briefly show the results
in Section 5.4 due to space limitations.

5.1 Results of Language Clustering
The language clustering based on language family
is shown in Figure 2, which results in 8 groups
given our 23 languages. All the language names
and their corresponding ISO-639-1 code9 can be
found in Supplementary Materials (Section 2).

We use hierarchical clustering (Rokach and
Maimon, 2005)10 method to group the languages
based on language embeddings. We use the el-
bow method (Thorndike, 1953) to automatically
decide the optimal number of clusters K. Note
that we have tried to extract the language embed-
dings from multiple model checkpoints randomly

7https://github.com/moses-smt/mosesdecoder/blob/
master/scripts/generic/multi-bleu.perl

8https://github.com/tensorflow/tensor2tensor
9https://www.iso.org/iso-639-language-codes.html.

10https://docs.scipy.org/doc/scipy-
0.18.1/reference/generated/ scipy.cluster.hierarchy.linkage.html



967

Figure 3: The hierarchical clustering based on language embeddings. The Y-axis represents the distance between
two languages or clusters. Languages in the same color are divided into the same cluster, where blue color ag-
glomerates different clusters together. If a language is marked as blue, then it forms a cluster itself. Cluster #1: Vi;
Cluster #2: Th; Cluster #3: Zh; Cluster #4: Ja, Tr, Hu; Cluster #5: He, Ar, Fa; Cluster #6: Ru, El, Sk, Sl, Bg, Cs,
Pl; Cluster #7: De, Nl, Ro, It, Fr, Es, Pt.

Figure 4: The optimal number of clusters determined by the
elbow method for 23 languages→English based on language
embeddings. The elbow method plots the curve of clustering
performance (which is defined as the intra-cluster variation,
i.e., the within-cluster sum of squares) according to different
number of clusters, and find the location of a bend (knee) in
the curve as the optimal number of clusters (7 as shown in the
figure).

chosen in the later training process, and found that
the clustering results based on these language em-
beddings are stable. Figure 3 demonstrates the
clustering results based on language embeddings.
Each color represents a language cluster and there
are 7 clusters according to the elbow method (the
details of how this method determines the optimal
number of clusters are shown in Figure 7). Fig-
ure 3 clearly shows the agglomerative process of
the languages and demonstrates the fine-grained
relationship between languages.

We have several interesting findings from Fig-
ure 2 and 3:

• Language embeddings capture the relation-
ship in the language family well. Clus-
ter #7 in Figure 3 roughly covers the Ger-
manic and Romance languages (De, Nl, Ro,
It, Fr, Es, Pt) which are two different lan-

guage branches in the Indo-European family
but both adopt Latin alphabets. It can be fur-
ther exactly divided into Germanic (De, Nl)
and Romance (Ro, It, Fr, Es, Pt) branches.
Cluster #6 is very close to Cluster #7 as they
all belong to the Indo-European family. The
difference is that the languages in Cluster #6
(Ru, El, Sk, Sl, Bg, Cs, Pl) mostly belong to
Slavic branch11.

• Language embeddings can also capture the
knowledge of morphological typology (Com-
rie, 1989). Ja (Japanese), Tr (Turkish), Hu
(Hungarian) in Cluster #4 of Figure 3 are
all Synthetic-Fusional languages. Language
embedding based method can cluster them
together by learning their language features
end-to-end with the embeddings despite they
are in different language families.

• Language embeddings capture the regional,
cultural, and historical influences. The lan-
guages in Cluster #5 (He, Ar, Fa) of Fig-
ure 3 are close to each other in geographi-
cal location (West Asia). Ar (Arabic) and He
(Hebrew) share the same Semitic language
branch in Afroasiatic language family, while
Fa (Persian) has been influenced much by
Arabic due to history and religion in West
Asia12. Language embedding can implicitly
learn this relationship and cluster them to-
gether.

11It also contains El (Greek) probably due to that most
Slavic languages are influenced by Middle Greek through the
Eastern Orthodox Church (Horrocks, 2009).

12https://en.wikipedia.org/wiki/Persian vocabulary#Arabic
influence



968

Language Ar Bg Cs De El Es Fa Fr He Hu It Ja

Random 22.90 32.18 28.88 30.67 33.28 28.47 19.16 24.36 28.01 20.78 26.08 10.13
Family 25.02 32.75 30.27 31.09 33.61 28.18 19.59 24.24 29.42 19.07 26.74 9.90

Embedding 25.27 32.52 30.97 31.33 33.67 28.81 19.64 25.43 30.03 21.89 27.10 11.57

Language Nl Pl Pt Ro Ru Sk Sl Th Tr Vi Zh

Random 33.88 18.34 31.93 27.64 17.38 24.22 15.88 17.94 18.93 25.93 14.08
Family 34.82 19.23 32.18 27.91 17.58 25.89 23.97 18.46 19.95 26.95 15.13

Embedding 35.43 20.04 32.33 27.97 18.13 26.61 22.12 18.46 22.09 26.95 15.13

Table 1: BLEU score of 23 languages→English with multilingual models based on different methods of language clustering:
Random, Family (Language Family) and Embedding (Language Embedding).

These findings show that language embeddings
can incorporate different prior knowledge such
as language family, or some other implicit infor-
mation like regional, cultural, and historical in-
fluence, and can well fuse the information to-
gether for clustering. In the next subsection, we
show how our language embedding based cluster-
ing boosts the performance of multilingual NMT
compared with the language family based cluster-
ing.

5.2 Translation Accuracy
After dividing the languages into several clusters,
we train the models for the languages in each clus-
ter with a multilingual NMT model (Johnson et al.,
2017) based on different clustering methods and
list the BLEU scores of each language→English
in Table 1. We also show the results of random
clustering (Random) and use the same number of
clusters as the language embedding based clus-
tering, and average the BLEU scores on multiple
times of random clustering (3 times in our experi-
ments) for comparison. It can be seen that Random
performs worst, and language embedding (Em-
bedding) based clustering outperforms the lan-
guage family (Family) based clustering for most
languages13, demonstrating the superiority of the
learning based method over prior knowledge.

We further compare the language embedding
based clustering with two extreme settings: 1)
Each language trained with a separate model (In-
dividual), 2) All languages trained in a universal
model (Universal), to analyze how language clus-
tering performs on each language. As shown in
Table 2, we have several observations:

• First, Universal in general performs the worst
due to the diverse languages and limited

13Embedding performs worse than Family on only 2 lan-
guages.

model capacity. Universal only performs bet-
ter on Ja (Japanese) and Sl (slovene) due to
their small amount of training data, which
will be discussed in the next observation.

• Second, Embedding outperforms Individual
(mostly by more than 1 BLEU score) on
12 out of 23 languages14, which demon-
strates that clustering can indeed bring per-
formance gains with fewer models, espe-
cially for languages with relatively small data
size. For these languages, clustering together
with similar languages may act as some kind
of data augmentation, which will benefit the
model training. An extreme case is that Sl
(slovene) training together with all the lan-
guages gets the best accuracy as shown in
Table 2, since Sl is extremely low-resource,
which benefits a lot from more training data.
This can be also verified by the next observa-
tion.

• Third, similar languages can help boost per-
formance. For example, Hu (Hungarian) and
Ja (Japanese) are similar as they are typical
agglutinative languages in terms of morpho-
logical typology (Comrie, 1989). When they
are clustered together based on Embedding,
the performance of both languages improves
(Hu: 19.07→21.89, Ja: 9.90→11.57).

5.3 Clustering Results with respect to
Training Data Scale

We further study how the clustering results based
on language embeddings change with varying
training data, in order to study the robustness of

14Embedding performs slightly worse (mostly within 0.5
BLEU gap) than Individual on 8 languages, mainly due to
the plenty of training data on these languages. In this case,
Individual with more number of models will help.



969

Language Ar Bg Cs De El Es Fa Fr He Hu It Ja

Data size 180K 140K 110K 180K 180K 180K 70K 180K 150K 90K 180K 90K

Individual (23) 25.43 32.87 29.15 32.18 33.70 29.17 18.12 27.98 29.45 19.07 27.70 9.90
Universal (1) 23.26 32.47 28.86 30.42 33.56 28.03 19.45 23.64 27.29 21.24 26.07 12.78

Embedding (7) 25.27 32.52 30.97 31.33 33.67 28.81 19.64 25.43 30.03 21.89 27.10 11.57

Language Nl Pl Pt Ro Ru Sk Sl Th Tr Vi Zh

Data size 140K 140K 180K 180K 160K 70K 14K 80K 130K 130K 180K

Individual (23) 34.61 18.19 32.77 27.88 17.55 19.72 4.48 18.46 19.95 26.95 15.13
Universal (1) 34.58 19.02 30.96 27.77 16.69 25.31 24.22 18.27 18.76 26.13 14.54

Embedding (7) 35.43 20.04 32.33 27.97 18.13 26.61 22.12 18.46 22.09 26.95 15.13

Table 2: BLEU score of 23 languages→English with different number of clusters: Universal (all the languages share one
model), Individual (each language with separate models, totally 23 models)), Embedding (Language Embedding with 7 mod-
els). Data size shows the training data for each language→English.

our language embedding based clustering, which
is important in the low-resource multilingual set-
ting. We reduce the training data of each language
to 50%, 20% and 5% to check how stable the lan-
guage embeddings based clustering is, as shown
in Figure 5. It can be seen that most languages
are clustered stably when training data is relatively
large (50% or even 20%), except for Sl (Slovene)
which has the least training data (14K) among the
23 languages and thus reducing the training data of
Sl to 50% and 20% will influence the learning of
language embeddings and further influence clus-
tering results. If further reducing the training data
to 5%, more languages are influenced and clus-
tered abnormally as most languages have less than

(a) 50% of training data

(b) 20% of training data

(c) 5% of training data

Figure 5: The results of language embedding based cluster-
ing with varying amount of training data.

10K training data. Even so, the similar languages
such as Fr (French), It (Italian), Es (Spanish), and
Pt (Portuguese) are still clustered together.

5.4 Results of One-to-Many Translation
We finally show experiment results of one-to-
many translation, i.e., English→23 languages. We
first train a universal model that covers all lan-
guages to get the language embeddings, and then
perform clustering like in the many-to-one setting.
The optimal number of clusters is 5, which is au-
tomatically determined by the elbow method (we
show the figure of the elbow method in Figure 1 in
the Supplementary Materials).

Figure 6 shows the clustering results based
on language embeddings, and Table 3 shows the
BLEU score of multilingual models clustered by
different methods. We also have several findings:

• In one-to-many setting, language embed-
dings still depict the relationship among lan-
guage families. Cluster #1 in Figure 6 cov-
ers the Romance (Ro, Fr, It, Es, Pt) branch in
Indo-European language family while Clus-
ter #2 contains the Germanic (De, Nl) branch
in Indo-European language family. The lan-
guages in Cluster #3 (Sl, Bg, El, Ru, Sk,
Cs, Pl) are mostly from the Slavic branch
in Indo-European language family. We find
that the cluster results of Indo-European lan-
guage family is more fine-grained than many-
to-one setting, which divides each language
into their own branches in a language family.

• Language embedding can capture regional,
cultural, and historic influence. For Clus-
ter #4 in Figure 6, Zh (Chinese) and Ja
(Japanese) are in different language families



970

Figure 6: The hierarchical clustering based on language embedding in one-to-many setting. The Y-axis represents
the distance between two languages or clusters. Languages in the same color are divided into the same cluster.
Cluster #1: Ro, Fr, It, Es, Pt; Cluster #2: De, Nl; Cluster #3: Sl, Bg, El, Ru, Sk, Cs, Pl; Cluster #4: Tr, Hu, Zh, Ja;
Cluster #5: Vi, Th, He, Ar, Fa.

Language Ar Bg Cs De El Es Fa Fr He Hu It Ja

Universal 9.80 25.84 17.89 22.40 26.71 28.48 12.26 22.10 16.38 13.32 25.34 10.91
Individual 13.13 30.04 19.84 25.69 27.90 29.57 12.03 22.93 20.43 13.74 26.87 10.70

Family 13.11 27.54 19.11 23.74 27.78 28.88 13.36 22.78 20.26 13.74 26.71 10.70
Embedding 12.37 28.85 20.81 25.27 27.11 28.93 13.79 22.85 19.23 15.47 26.81 13.33

Language Nl Pl Pt Ro Ru Sk Sl Th Tr Vi Zh

Universal 26.19 10.10 28.27 19.72 8.26 15.52 15.82 25.06 9.44 26.87 9.56
Individual 29.86 11.61 28.09 21.81 14.11 14.47 6.61 27.41 11.40 28.77 10.83

Family 27.83 10.97 28.63 21.13 12.80 16.91 15.73 27.41 11.40 28.77 10.83
Embedding 29.98 11.95 28.83 21.14 13.84 18.18 14.25 28.55 12.11 29.79 10.52

Table 3: BLEU score of English→23 languages with multilingual models based on different methods of language
clustering: Universal (all the languages share one model), Individual (each language with separate model), Family
(Language Family), Embedding (Language Embedding).

but influence each other through the history
and culture. Th (Thai) and Vi (Vietnamese) in
Cluster #5 that are close to each other in ge-
ographical location can be captured by their
language embeddings.

These findings show that language embeddings
can stably characterize relationships among lan-
guages no matter in one-to-many setting or in
many-to-one setting. Although there exist some
differences in the clustering results between one-
to-many setting and many-to-one setting due to
the nature of the learning based clustering method,
most of the clustering results are reasonable. Our
experiment results shown in Table 3 demonstrate
that the language embedding can provide more
reasonable clustering than prior knowledge, and
thus result in higher BLEU score for most of the
languages.

We also find from Table 3 that each language
with separate model (Individual) perform best on
nearly 10 languages, due to the abundant model

capacity. However, there are still several lan-
guages on which our clustering methods (Family
or Embedding) largely outperform Individual. The
reason is similar as the many-to-one setting that
some languages are of smaller data sizes. In this
situation, similar languages clustered together will
boost the accuracy compared with separate model.

6 Conclusion

In this work, we have studied language clus-
tering for multilingual neural machine transla-
tion. Experiments on 23 languages→English and
English→23 languages show that language em-
beddings can sufficiently characterize the simi-
larity between languages and outperform prior
knowledge (language family) for language cluster-
ing in terms of the BLEU scores.

For future work, we will test our methods for
many-to-many translation. We will consider more
languages (hundreds or thousands) to study our
methods in larger scale setting. We will also study



971

Language Ar Bg Cs De El Es Fa Fr He Hu It Ja

Data size 180K 140K 110K 180K 180K 180K 70K 180K 150K 90K 180K 90K

Language Nl Pl Pt Ro Ru Sk Sl Th Tr Vi Zh

Data size 140K 140K 180K 180K 160K 70K 14K 80K 130K 130K 180K

Table 4: The size of training data for 23 language↔English in our experiments.

Language Arabic Bulgarian Czech German Greek Spanish Persian French Hebrew

ISO code Ar Bg Cs De El Es Pt Fr He

Language Hungarian Italian Japanese Dutch Polish Portuguese Romanian Russian Slovak

ISO code Hu It Ja Nl Pl Pt Ro Ru Sk

Language Slovenian Thai Turkish Vietnamese Chinese English

ISO code Sl Th Tr Vi Zh En

Table 5: The ISO 639-1 code of each language in our experiments.

how to obtain language embeddings from mono-
lingual data, which will make our method scal-
able to cover those languages with little or with-
out bilingual data. On the other hand, we will also
consider other pre-training methods (Song et al.,
2019) for multilingual and low-resource NMT.

A Dataset Description

We evaluate our experiments on IWSLT datasets.
We collect 23 languages↔English translation
pairs form IWSLT evaluation campaign from year
2011 to 2018. The training data sizes of each lan-
guages are shown in Table 4 and we use the default
validation and test set for each language pairs. For
Bg (Bulgarian), El (Greek), Hu (Hungarian) and
Ja (Japanese), there are no available validation and
test data in IWSLT, we randomly split 1K sentence
pairs from the corresponding training set as the
validation and test data respectively.

B Language Name and Code

The language names and their corresponding lan-
guage codes according to ISO 639-1 standard are
listed in Table 5.

C The Elbow Method for One-to-Many
Setting

The optimal number of clusters is 5 in one-to-
many setting, which is automatically determined
by the elbow method as shown in Figure 7.

Figure 7: The optimal number of clusters determined
by the elbow method for English→23 languages based
on language embeddings. The detailed description of
the elbow method can be seen in Figure 4 in the main
paper.

References
Dzmitry Bahdanau, Kyunghyun Cho, and Yoshua Ben-

gio. 2015. Neural machine translation by jointly
learning to align and translate. ICLR 2015.

Dik Bakker, André Müller, Viveka Velupillai, Søren
Wichmann, Cecil H Brown, Pamela Brown, Dmitry
Egorov, Robert Mailhammer, Anthony Grant, and
Eric W Holman. 2009. Adding typology to lexico-
statistics: A combined approach to language classi-
fication. Linguistic Typology, 13(1):169–181.

Xinying Chen and Kim Gerdes. 2017. Classifying
languages by dependency structure. typologies of
delexicalized universal dependency treebanks. In
Proceedings of the Fourth International Conference
on Dependency Linguistics (Depling 2017), Septem-
ber 18-20, 2017, Università di Pisa, Italy, 139,
pages 54–63. Linköping University Electronic Press.



972

Bernard Comrie. 1989. Language universals and lin-
guistic typology: Syntax and morphology. Univer-
sity of Chicago press.

Daxiang Dong, Hua Wu, Wei He, Dianhai Yu, and
Haifeng Wang. 2015. Multi-task learning for mul-
tiple language translation. In Proceedings of the
53rd Annual Meeting of the Association for Compu-
tational Linguistics and the 7th International Joint
Conference on Natural Language Processing (Vol-
ume 1: Long Papers), volume 1, pages 1723–1732.

Orhan Firat, Kyunghyun Cho, and Yoshua Bengio.
2016. Multi-way, multilingual neural machine
translation with a shared attention mechanism. In
NAACL HLT 2016, The 2016 Conference of the
North American Chapter of the Association for
Computational Linguistics: Human Language Tech-
nologies, San Diego California, USA, June 12-17,
2016, pages 866–875.

Jonas Gehring, Michael Auli, David Grangier, De-
nis Yarats, and Yann N. Dauphin. 2017. Convo-
lutional sequence to sequence learning. In Pro-
ceedings of the 34th International Conference on
Machine Learning, ICML 2017, Sydney, NSW, Aus-
tralia, 6-11 August 2017, pages 1243–1252.

Thanh-Le Ha, Jan Niehues, and Alexander H. Waibel.
2016. Toward multilingual neural machine trans-
lation with universal encoder and decoder. CoRR,
abs/1611.04798.

Hany Hassan, Anthony Aue, Chang Chen, Vishal
Chowdhary, Jonathan Clark, Christian Feder-
mann, Xuedong Huang, Marcin Junczys-Dowmunt,
William Lewis, Mu Li, Shujie Liu, Tie-Yan Liu,
Renqian Luo, Arul Menezes, Tao Qin, Frank Seide,
Xu Tan, Fei Tian, Lijun Wu, Shuangzhi Wu, Yingce
Xia, Dongdong Zhang, Zhirui Zhang, and Ming
Zhou. 2018. Achieving human parity on auto-
matic chinese to english news translation. CoRR,
abs/1803.05567.

Tianyu He, Jiale Chen, Xu Tan, and Tao Qin. 2019.
Language graph distillation for low-resource ma-
chine translation. arXiv preprint arXiv:1908.06258.

Tianyu He, Xu Tan, Yingce Xia, Di He, Tao Qin, Zhibo
Chen, and Tie-Yan Liu. 2018. Layer-wise coordi-
nation between encoder and decoder for neural ma-
chine translation. In Advances in Neural Informa-
tion Processing Systems, pages 7944–7954.

Eric W Holman, Søren Wichmann, Cecil H Brown,
Viveka Velupillai, André Müller, and Dik Bakker.
2008. Explorations in automated language classifi-
cation. Folia Linguistica, 42(3-4):331–354.

Geoffrey Horrocks. 2009. Greek: A History of the Lan-
guage and its Speakers. John Wiley & Sons.

Melvin Johnson, Mike Schuster, Quoc V. Le, Maxim
Krikun, Yonghui Wu, Zhifeng Chen, Nikhil Tho-
rat, Fernanda B. Viégas, Martin Wattenberg, Greg
Corrado, Macduff Hughes, and Jeffrey Dean. 2017.

Google’s multilingual neural machine translation
system: Enabling zero-shot translation. TACL,
5:339–351.

Diederik Kingma and Jimmy Ba. 2014. Adam: A
method for stochastic optimization. arXiv preprint
arXiv:1412.6980.

Yichong Leng, Xu Tan, Tao Qin, Xiang-Yang Li,
and Tie-Yan Liu. 2019. Unsupervised pivot
translation for distant languages. arXiv preprint
arXiv:1906.02461.

Lori S. Levin, Patrick Littell, David R. Mortensen,
Ke Lin, Katherine Kairis, and Carlisle Turner. 2017.
URIEL and lang2vec: Representing languages as ty-
pological, geographical, and phylogenetic vectors.
In Proceedings of the 15th Conference of the Euro-
pean Chapter of the Association for Computational
Linguistics, EACL 2017, Valencia, Spain, April 3-7,
2017, Volume 2: Short Papers, pages 8–14.

Haitao Liu and Wenwen Li. 2010. Language clusters
based on linguistic complex networks. Chinese Sci-
ence Bulletin, 55(30):3458–3465.

Yichao Lu, Phillip Keung, Faisal Ladhak, Vikas Bhard-
waj, Shaonan Zhang, and Jason Sun. 2018. A neu-
ral interlingua for multilingual machine translation.
CoRR, abs/1804.08198.

Minh-Thang Luong, Quoc V. Le, Ilya Sutskever,
Oriol Vinyals, and Lukasz Kaiser. 2015a. Multi-
task sequence to sequence learning. CoRR,
abs/1511.06114.

Thang Luong, Hieu Pham, and Christopher D. Man-
ning. 2015b. Effective approaches to attention-
based neural machine translation. In Proceedings of
the 2015 Conference on Empirical Methods in Nat-
ural Language Processing, EMNLP 2015, Lisbon,
Portugal, September 17-21, 2015, pages 1412–1421.

Chaitanya Malaviya, Graham Neubig, and Patrick Lit-
tell. 2017. Learning language representations for ty-
pology prediction. In Proceedings of the 2017 Con-
ference on Empirical Methods in Natural Language
Processing, EMNLP 2017, Copenhagen, Denmark,
September 9-11, 2017, pages 2529–2535.

Tomas Mikolov, Kai Chen, Greg Corrado, and Jef-
frey Dean. 2013. Efficient estimation of word
representations in vector space. arXiv preprint
arXiv:1301.3781.

Kishore Papineni, Salim Roukos, Todd Ward, and Wei-
Jing Zhu. 2002. Bleu: a method for automatic eval-
uation of machine translation. In Proceedings of the
40th Annual Meeting of the Association for Compu-
tational Linguistics, July 6-12, 2002, Philadelphia,
PA, USA., pages 311–318.

Lewis M Paul, Gary F Simons, Charles D Fennig, et al.
2009. Ethnologue: Languages of the world. Dal-
las, TX: SIL International. Available online at www.
ethnologue. com/. Retrieved June, 19:2011.

http://aclweb.org/anthology/N/N16/N16-1101.pdf
http://aclweb.org/anthology/N/N16/N16-1101.pdf
http://proceedings.mlr.press/v70/gehring17a.html
http://proceedings.mlr.press/v70/gehring17a.html
http://arxiv.org/abs/1611.04798
http://arxiv.org/abs/1611.04798
http://arxiv.org/abs/1803.05567
http://arxiv.org/abs/1803.05567
https://transacl.org/ojs/index.php/tacl/article/view/1081
https://transacl.org/ojs/index.php/tacl/article/view/1081
https://aclanthology.info/papers/E17-2002/e17-2002
https://aclanthology.info/papers/E17-2002/e17-2002
http://arxiv.org/abs/1804.08198
http://arxiv.org/abs/1804.08198
http://arxiv.org/abs/1511.06114
http://arxiv.org/abs/1511.06114
http://aclweb.org/anthology/D/D15/D15-1166.pdf
http://aclweb.org/anthology/D/D15/D15-1166.pdf
https://aclanthology.info/papers/D17-1268/d17-1268
https://aclanthology.info/papers/D17-1268/d17-1268
http://www.aclweb.org/anthology/P02-1040.pdf
http://www.aclweb.org/anthology/P02-1040.pdf


973

Emmanouil Antonios Platanios, Mrinmaya Sachan,
Graham Neubig, and Tom Mitchell. 2018. Contex-
tual parameter generation for universal neural ma-
chine translation. In Proceedings of the 2018 Con-
ference on Empirical Methods in Natural Language
Processing, pages 425–435.

Lior Rokach and Oded Maimon. 2005. Clustering
methods. In Data mining and knowledge discovery
handbook, pages 321–352. Springer.

Rico Sennrich, Barry Haddow, and Alexandra Birch.
2016. Neural machine translation of rare words with
subword units. In ACL 2016, August 7-12, 2016,
Berlin, Germany, Volume 1: Long Papers.

Yanyao Shen, Xu Tan, Di He, Tao Qin, and Tie-Yan
Liu. 2018. Dense information flow for neural ma-
chine translation. In Proceedings of the 2018 Con-
ference of the North American Chapter of the Asso-
ciation for Computational Linguistics: Human Lan-
guage Technologies, Volume 1 (Long Papers), pages
1294–1303.

Kaitao Song, Xu Tan, Tao Qin, Jianfeng Lu, and Tie-
Yan Liu. 2019. Mass: Masked sequence to sequence
pre-training for language generation. arXiv preprint
arXiv:1905.02450.

Ilya Sutskever, Oriol Vinyals, and Quoc V. Le. 2014.
Sequence to sequence learning with neural net-
works. In NIPS 2014, December 8-13 2014, Mon-
treal, Quebec, Canada, pages 3104–3112.

Xu Tan, Yi Ren, Di He, Tao Qin, and Tie-Yan Liu.
2019. Multilingual neural machine translation with
knowledge distillation. In International Conference
on Learning Representations.

Robert L Thorndike. 1953. Who belongs in the family?
Psychometrika, 18(4):267–276.

Jörg Tiedemann and Robert Östling. 2017. Continuous
multilinguality with language vectors. In Proceed-
ings of the 15th Conference of the European Chap-
ter of the Association for Computational Linguistics,
EACL 2017, Valencia, Spain, April 3-7, 2017, Vol-
ume 2: Short Papers, pages 644–649.

Ashish Vaswani, Samy Bengio, Eugene Brevdo, Fran-
cois Chollet, Aidan N. Gomez, Stephan Gouws,
Llion Jones, Łukasz Kaiser, Nal Kalchbrenner, Niki
Parmar, Ryan Sepassi, Noam Shazeer, and Jakob
Uszkoreit. 2018. Tensor2tensor for neural machine
translation. CoRR, abs/1803.07416.

Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob
Uszkoreit, Llion Jones, Aidan N. Gomez, Lukasz
Kaiser, and Illia Polosukhin. 2017. Attention is all
you need. In NIPS 2017, 4-9 December 2017, Long
Beach, CA, USA, pages 6000–6010.

Lijun Wu, Xu Tan, Di He, Fei Tian, Tao Qin, Jianhuang
Lai, and Tie-Yan Liu. 2018. Beyond error propaga-
tion in neural machine translation: Characteristics
of language also matter. In Proceedings of the 2018

Conference on Empirical Methods in Natural Lan-
guage Processing, pages 3602–3611.

Yonghui Wu, Mike Schuster, Zhifeng Chen, Quoc V.
Le, Mohammad Norouzi, Wolfgang Macherey,
Maxim Krikun, Yuan Cao, Qin Gao, Klaus
Macherey, Jeff Klingner, Apurva Shah, Melvin
Johnson, Xiaobing Liu, Lukasz Kaiser, Stephan
Gouws, Yoshikiyo Kato, Taku Kudo, Hideto
Kazawa, Keith Stevens, George Kurian, Nishant
Patil, Wei Wang, Cliff Young, Jason Smith, Jason
Riesa, Alex Rudnick, Oriol Vinyals, Greg Corrado,
Macduff Hughes, and Jeffrey Dean. 2016. Google’s
neural machine translation system: Bridging the gap
between human and machine translation. CoRR,
abs/1609.08144.

http://aclweb.org/anthology/P/P16/P16-1162.pdf
http://aclweb.org/anthology/P/P16/P16-1162.pdf
http://papers.nips.cc/paper/5346-sequence-to-sequence-learning-with-neural-networks
http://papers.nips.cc/paper/5346-sequence-to-sequence-learning-with-neural-networks
https://openreview.net/forum?id=S1gUsoR9YX
https://openreview.net/forum?id=S1gUsoR9YX
https://aclanthology.info/papers/E17-2102/e17-2102
https://aclanthology.info/papers/E17-2102/e17-2102
http://arxiv.org/abs/1803.07416
http://arxiv.org/abs/1803.07416
http://papers.nips.cc/paper/7181-attention-is-all-you-need
http://papers.nips.cc/paper/7181-attention-is-all-you-need
http://arxiv.org/abs/1609.08144
http://arxiv.org/abs/1609.08144
http://arxiv.org/abs/1609.08144

