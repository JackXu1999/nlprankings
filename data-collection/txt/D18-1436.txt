



















































Learning to Describe Differences Between Pairs of Similar Images


Proceedings of the 2018 Conference on Empirical Methods in Natural Language Processing, pages 4024–4034
Brussels, Belgium, October 31 - November 4, 2018. c©2018 Association for Computational Linguistics

4024

Learning to Describe Differences Between Pairs of Similar Images

Harsh Jhamtani, Taylor Berg-Kirkpatrick
Language Technologies Institute

Carnegie Mellon University
{jharsh,tberg}@cs.cmu.edu

Abstract

In this paper, we introduce the task of auto-
matically generating text to describe the dif-
ferences between two similar images. We col-
lect a new dataset by crowd-sourcing differ-
ence descriptions for pairs of image frames ex-
tracted from video-surveillance footage. An-
notators were asked to succinctly describe all
the differences in a short paragraph. As a re-
sult, our novel dataset provides an opportunity
to explore models that align language and vi-
sion, and capture visual salience. The dataset
may also be a useful benchmark for coherent
multi-sentence generation. We perform a first-
pass visual analysis that exposes clusters of
differing pixels as a proxy for object-level dif-
ferences. We propose a model that captures vi-
sual salience by using a latent variable to align
clusters of differing pixels with output sen-
tences. We find that, for both single-sentence
generation and as well as multi-sentence gen-
eration, the proposed model outperforms the
models that use attention alone.

1 Introduction

The interface between human users and collec-
tions of data is an important application area
for artificial intelligence (AI) technologies. Can
we build systems that effectively interpret data
and present their results concisely in natural lan-
guage? One recent goal in artificial intelligence
has been to build models that are able to inter-
pret and describe visual data to assist humans in
various tasks. For example, image captioning
systems (Vinyals et al., 2015b; Xu et al., 2015;
Rennie et al., 2017; Zhang et al., 2017) and vi-
sual question answering systems (Antol et al.,
2015; Lu et al., 2016; Xu and Saenko, 2016) can
help visually impaired people in interacting with
the world. Another way in which machines can
assist humans is by identifying meaningful pat-

Figure 1: Examples from Spot-the-diff dataset: We collect
text descriptions of all the differences between a pair of im-
ages. Note that the annotations in our dataset are exhaustive
wrt differences in the two images i.e. annotators were asked
to describe all the visible differences. Thus, the annotations
contain multi-sentence descriptions.

terns in data, selecting and combining salient pat-
terns, and generating concise and fluent ‘human-
consumable’ descriptions. For instance, text sum-
marization (Mani and Maybury, 1999; Gupta and
Lehal, 2010; Rush et al., 2015) has been a long
standing problem in natural language processing
aimed at providing a concise text summary of a
collection of documents.

In this paper, we propose a new task and accom-
panying dataset that combines elements of image
captioning and summarization: the goal of ‘spot-
the-diff’ is to generate a succinct text description
of all the salient differences between a pair of sim-
ilar images. Apart from being a fun puzzle, so-
lutions to this task may have applications in as-
sisted surveillance, as well as computer assisted
tracking of changes in media assets. We collect
and release a novel dataset for this task, which
will be potentially useful for both natural language
and computer vision research communities. We



4025

used crowd-sourcing to collect text descriptions of
differences between pairs of image frames from
video-surveillance footage (Oh et al., 2011), ask-
ing annotators to succinctly describe all salient
differences. In total, our datasets consist of de-
scriptions for 13,192 image pairs. Figure 1 shows
a sample data point - a pair of images along with a
text description of the differences between the two
images as per a human annotator.

There are multiple interesting modeling chal-
lenges associated with the task of generating nat-
ural language summaries of differences between
images. First, not all low-level visual differences
are sufficiently salient to warrant description. The
dataset presents an interesting source of super-
vision for methods that attempt to learn mod-
els of visual salience (we additionally conduct
exploratory experiments with a baseline salience
model, as described later). Second, humans use
different levels of abstraction when describing vi-
sual differences. For example, when multiple
nearby objects have all moved in coordination be-
tween images in a pair, an annotator may refer to
the group as a single concept (e.g. ‘the row of
cars’). Third, given a set of salient differences,
planning the order of description and generating
a fluent sequence of multiple sentences is itself a
challenging problem. Together, these aspects of
the proposed task make it a useful benchmark for
several directions of research.

Finally, we experiment with neural image cap-
tioning based methods. Since salient differences
are usually described at an object-level rather than
at a pixel-level, we condition these systems on a
first-pass visual analysis that exposes clusters of
differing pixels as a proxy for object-level differ-
ences. We propose a model which uses latent dis-
crete variables in order to directly align difference
clusters to output sentences. Additionally we in-
corporate a learned prior that models the visual
salience of these difference clusters. We observe
that the proposed model which uses alignment as a
discrete latent variable outperforms those that use
attention alone.

2 ‘Spot-the-diff’ Task and Dataset

We introduce ‘spot-the-diff’ dataset consisting of
13,192 image pairs along with corresponding hu-
man provided text annotations stating the differ-
ences between the two images. Our goal was
to create a dataset wherein there are meaning-

Total number of annotations 13, 192
Mean (std dev.) number

of sentences per annotation 1.86(1.01)

Vocabulary size 2404
Frequent word types
(>=5 occurrences) 1000

Word tokens that are
frequent word types 97%

Mean (std dev.) number
of words in sentence: 10.96(4.97)

% Long sentences
(> 20 words) 5%

Table 1: Summary statistics for spot-the-diff dataset

ful differences between two similar images. To
achieve this, we work with image frames extracted
from VIRAT surveillance video dataset (Oh et al.,
2011), which consists of 329 videos across 11
frames of reference totalling to about 8.5 hours of
videos.

2.1 Extracting Pairs of Image Frames

To construct our dataset, we first need to identify
image pairs such that some objects have changed
positions or have entered or left in the second
image compared to the first image. To achieve
this, we first extract a certain number of randomly
selected image frame pairs from a given video.
Thereafter, we compute the L2 distance between
the two images in each pair (under RGB repre-
sentation). Finally, we set a lower and a upper
threshold on the L2 distance values so calculated
to filter out the image pairs with potentially too
less or too many changes. These thresholds are se-
lected based on manual inspection. The resulting
image pairs are used for collecting the difference
descriptions.

2.2 Human Annotation

We crowd-sourced natural language differences
between images using Amazon Mechanical Turk.
We restrict to annotators from primarily Anglo-
phone countries: USA, Australia, United King-
dom, and Canada, as we are working with English
language annotations. We limit to those partici-
pants which have lifetime HIT > 80%. We award
5 cents per HIT (Human Intelligence Task) to par-
ticipants. We provide the annotators with an ex-
ample on how to work on the task. We request the
annotators to write complete English sentences,
with each sentence on a separate line. We collect
a total of 13192 annotations.



4026

Figure 2: AMT (Ama-
zon Mechanical Turk) HIT
(Human Intelligence Task)
setup for data collection.
We provide the annotators
with detailed instructions,
along with an example
showing how to perform
the task. We request the
annotators to write com-
plete English sentences,
with each sentence on a
separate line. We collect
a total of 13,192 annota-
tions.

Dataset BLEU-1/2/3/4 ROUGE-L
Spot-the-diff

(A = 3) 0.41/0.25/0.15/0.08 0.31

MS-COCO
(A = 3) 0.38/0.22/0.13/0.08 0.34

MS-COCO
(A = 5) 0.66/0.47/0.32/0.22 0.48

Table 2: Human agreement for our dataset: We report mea-
sures such as BLEU and ROUGE when ‘evaluating’ one
set of human generated captions against the remaining sets.
A = k represents k captions per data point, out of which 1
is chosen as hypothesis, while remaining k − 1 act as refer-
ences.

2.3 Dataset statistics
Table 1 shows some summary statistics about the
collected dataset. Since we deal with a focused
domain, we observe a small vocabulary size. On
an average there are 1.86 reported differences /
sentences per image pair. We also report inter-
annotator agreement as measured using text over-
lap of multiple annotations for the same image
pair. We collect three sets of annotations for a
small subset of the data (467 data points) for the
purpose of reporting inter-annotator agreements.
We thereby calculate BLEU and ROUGE-L scores
by treating one set of annotations as ‘hypothesis’
while remaining two sets act as ‘references’(Table
2). We repeat the same analysis for MS-COCO
dataset and report these measures for reference.
The BLEU and METEOR values for our dataset
seem reasonable and are comparable to the values
observed for MS-COCO dataset.

3 Modeling Difference Description
Generation

We propose a neural model for describing vi-
sual difference based on the input pair of images

that uses latent alignment variable to capture vi-
sual salience. Since most descriptions talk about
higher-level differences rather than individual pix-
els, we first perform a visual analysis that pre-
computes a set of difference clusters in order to
approximate object-level differences, as described
next. The output of this analysis is treated as input
to a neural encoder-decoder text generation model
that incorporates a latent alignment variable and is
trained on our new dataset.

3.1 Exposing Object-level Differences

We first analyze the input image pair for the pixel-
level differences by computing a pixel-difference
mask, followed by a local spatial analysis which
segments the difference mask into clusters that
approximate the set of object-level differences.
Thereafter, we extract image features using
convolutional neural models and use these as
input to a neural text generation model, described
later.

Pixel-level analysis: The lowest level of visual
difference is individual differences between cor-
responding pixels in the input pair. Instead of
requiring our description model to learn to com-
pute pixel-level differences as a first step, we pre-
compute and directly expose these to the model.
Let X = (I1, I2) represent the image pair in a
datum. For each such image pair in our dataset,
we obtain a corresponding pixel-difference mask
M . M is a binary-valued matrix of the same di-
mensions (length and width) as each of the images
in the corresponding image pair, wherein each el-
ement in the matrix is 1 (active) if the correspond-
ing pixel is different between the input pair, and



4027

Figure 3: Exposing Object-level Differences: Before train-
ing a model to describe visual difference, we first compute
pixel-level differences, as well as a segmentation of these
differences into clusters, as a proxy for exposing object-level
differences. The first row shows the original image pair. Bot-
tom left depicts the pixel-difference mask, which represents
extracted pixel-level differences. The segmentation of the
pixel-difference mask into clusters is shown in the bottom
right.

0 otherwise. To decide whether a pair of corre-
sponding pixels in the input image pair are suffi-
ciently different, we calculate the L2-distance be-
tween the vectors corresponding to each pixel’s
color value (three channels) and check whether
this difference is greater than a threshold δ (set
based on manual inspections).

While the images are extracted from sup-
posedly still cameras, we do find some minor
shifts in the camera alignment, which is probably
due to occasional wind but may also be due to
manual human interventions. These shifts are
rare and small, and we align the images in the
pair by iterating over a small range of vertical and
horizontal shifts to find the shift with minimum
corresponding L2-distance between the two
images.

Object-level analysis: Most visual descriptions
refer to object-level differences rather than pixel-
level differences. Again, rather than requiring the
model to learn to group pixel differences into ob-
jects, we attempt to expose this to the model via
pre-processing. As a proxy for object-level differ-
ence, we segment the pixel-level differences in the
pixel-difference mask into clusters, and pass these
clusters as additional inputs to the model. Based
on manual inspection, we find that with the right
clustering technique, this process results in group-

Figure 4: The figure shows the pixel-difference mask for the
running example, along with the two original images, with
bounding boxes around clusters. Typically one or more dif-
ference clusters are used to frame one reported difference /
sentence, and it is rare for a difference cluster to participate
in more than one reported difference.

ings that roughly correspond to objects that have
moved, appeared, and disappeared between the in-
put pair. Here, we find that density based clus-
tering algorithms like DBScan (Ester et al., 1996)
work well in practice for this purpose. In our sce-
nario, the DBScan algorithm predicts clusters of
nearby active pixels, and marks outliers consist-
ing of small groups of isolated active pixels, based
on a calculation of local density. This also serves
as a method for pruning any noisy pixel differ-
ences which may have passed through the pixel-
level analysis.

As the output of DBScan, we obtain segmen-
tation of the pixel difference matrix M into dif-
ference clusters. Let the number of difference
clusters be represented by K (DBScan is a non-
parametric clustering method, and as such the
number of clusters K is different for each data
point.). Now, let’s define Ck as another binary-
valued mask matrix such that the elements in ma-
trix corresponding to the kth difference cluster are
1 (active) while rest of the elements are 0.

3.2 Text Generation Model

We observe from annotated data that each individ-
ual sentence in a full description typically refers
only to visual differences within a single cluster
(see Figure 4). Further, on average, there are more
clusters than there are sentences. While many
uninteresting and noisy pixel-level differences get
screened out in preprocessing, some uninteresting
clusters are still identified. These are unlikely to
be described by annotators because, even though
they correspond to legitimate visual differences,
they are not visually salient. Thus, we can roughly
model description generation as a cluster selection
process.

In our model, which is depicted in Figure 5, we



4028

X=(I1,I2) : Image pair in the datum
M : Pixel-difference mask is a binary-valued

matrix depicting pixel-level changes
F1, F2 : Image feature tensors for I1 and I2

respectively
K : Number of segments
Ck : Cluster mask corresponding to kth

difference cluster
T : Number of reported differences /

sentences
zi : Discrete alignment variable for the ith

sentence. zi ∈ {1, 2, ...,K}
S1, .., ST : List of T Sentences

Table 3: Summary of notation used in description
of the method.

assume that each output description, which con-
sists of sentences S1, . . . , ST , is generated sen-
tence by sentence conditioned on the input image
pair X = (I1, I2). Further, we let each sentence
Si be associated with a latent alignment variable,
zi ∈ {1, . . . ,K}, that chooses a cluster to focus
on (Vinyals et al., 2015a). The choice of zi is itself
conditioned on the input image pair, and parame-
terized in a way that lets the model learn which
types of clusters are visually salient and therefore
likely to be described as sentences. Together, the
probability of a description given an image pair is
given by:

P (S1, .., ST |X)

=
∑

z1,..,zT

T∏
i=1

P (Si|zi, X; θ))︸ ︷︷ ︸
decoder

P (zi|X;w)︸ ︷︷ ︸
alignment prior

(1)

The various components of this equation are de-
scribed in detail in the next few sections. Here,
we briefly summarize each. The term P (zi|X;w)
represents the prior over the latent variable zi and
is parameterized in a way that lets the model learn
which types of clusters are visually salient. The
term P (Si|zi, X; θ) represents the likelihood of
sentence Si given the input image pair and align-
ment zi. We employ masking and attention mech-
anisms to encourage this decoder to focus on the
cluster chosen by zi. Each of these components
conditions on visual features produced by a pre-
trained image encoder.

The alignment variable zi for each sentence
is chosen independently, and thus our model is
similar to IBM Model 1 (Brown et al., 1993) in
terms of its factorization structure. This will allow
tractable learning and inference as described in

Section 3.3. We refer to our approach as DDLA
(Difference Description with Latent Alignment).

Alignment prior: We define a learnable prior
over alignment variable zi. In particular, we let
the multinomial distribution on zi be parameter-
ized in a log-linear fashion using feature function
g(zi). Specifically, we consider the following
four features: the length, width, and area of the
smallest rectangular region enclosing cluster zi,
and the number of active elements in mask Czi .
Specifically, we let P (zi|X;w) ∝ exp(wT g(zi)).

Visual encoder: We extract images features
using ResNet (He et al., 2016) pre-trained on
Imagenet data. Similar to prior work (Xu et al.,
2015), we extract features using a lower level
convolutional layer instead of fully connected
layer. In this way, we obtain image features of
dimensionality 14 ∗ 14 ∗ 2096, where the first
two dimensions correspond to a grid of coarse,
spatially localized, feature vectors. Let F1 and F2
represent the extracted feature tensors for I1 and
I2 respectively.

Sentence decoder: We use an LSTM decoder
(Hochreiter and Schmidhuber, 1997) to generate
the sequence of words in each output sentence,
conditioned on the image pair and latent align-
ments. We use a matrix transformation of the
extracted image features to initialize the hidden
state of the LSTM decoder for each sentence, in-
dependent of the setting of zi. Additionally, we
use an attention mechanism over the image fea-
tures at every decoding step, similar to the pre-
vious work (Xu et al., 2015). However, instead
of considering attention over the entire image, we
restrict attention over image features to the clus-
ter mask determined by the alignment variable,
Czi . Specifically, we project binary mask Czi
from the input image dimensionality (224*224) to
the dimensionality of the visual features (14*14).
To achieve this, we use pyramid reduce down-
sampling on a smoothed version of cluster mask
Czi . The resulting projection roughly corresponds
to the subset of visual features with the cluster
region in their receptive field. This projection is
multiplied to attention weights.



4029

Figure 5: Model architecture for generating difference descriptions. We incorporate a discrete latent variable z which selects
one of the clusters as a proxy for object-level focus. Conditioned on the cluster and visual features in the corresponding region,
the model generates a sentence using an LSTM decoder. During training, each sentence in the full description receives its own
latent alignment variable, z.

3.3 Learning and Decoding

Learning in our model is accomplished by
stochastic gradient ascent on the marginal likeli-
hood of each description with alignment variables
marginalized out. Since alignment variables are
independent of one another, we can marginalize
over each zi separately. This means running back-
propagation through the decoderK times for each
sentence, where K is the number of clusters. In
practice K is relatively small and this direct ap-
proach to training is feasible. Following equation
1, we train both the generation and prior in an end-
to-end fashion.

For decoding, we consider the following
two problem settings. In the first setting, we
consider the task of producing a single sentence
in isolation. We evaluate in this setting by treating
the sentences in the ground truth description as
multiple reference captions. This setting is similar
to the typical image captioning setting. In the sec-
ond setting, we consider the full multi-sentence
generation task where the system is required to
produce a full description consisting of multiple
sentences describing all differences in the input.
Here, the generated multi-sentence text is directly
evaluated against the multi-sentence annotation in
the crowd-soured data.

Single-sentence decoding: For single sentence
generation, we first select the value of zi which
maximizes the prior P (zi|X;w). Thereafter,
we simply use greedy decoding to generate a
sentence conditioned on the chosen zi and the
input image pair.

Multi-sentence decoding: Here, we first select a
set of clusters to include in the output description,
and then generate a single sentence for each clus-
ter using greedy decoding. Since typically there
are more clusters than sentences, we condition on
the ground truth number of sentences and choose
the corresponding number of clusters. We rank
clusters by decreasing likelihood under the align-
ment prior and then choose the top T .

4 Experiments

We split videos used to create the dataset into
train, test, and validation in the ratio 80:10:10.
This is done to ensure that all data points using
images from the same video are entirely in one
split. We report quantitative metrics like CIDEr
(Vedantam et al., 2015), BLEU (Papineni et al.,
2002), METEOR (Denkowski and Lavie, 2014),
and ROUGE-L, as is often reported by works in
image captioning. We report these measures for
both sentence level setting and multi-sentence
generation settings. Thereafter, we also discuss
some qualitative examples. We implement our
models in PyTorch (Paszke et al., 2017). We use
mini-batches of size 8 and use Adam optimizer1.
We use CIDEr scores on validation set as a criteria
for early stopping.

Baseline models: We consider following base-
line models: CAPT model considers soft atten-
tion over the input pair of images (This atten-

1Our data set can be obtained through https://
github.com/harsh19/spot-the-diff

https://github.com/harsh19/spot-the-diff
https://github.com/harsh19/spot-the-diff


4030

Model Bleu 1/2/3/4 Meteor Cider Rouge-L Perplexity
NN 0.226 0.111 0.057 0.026 0.102 0.120 0.201 -

CAPT 0.304 0.194 0.126 0.073 0.105 0.263 0.256 16.78
CAPT-MASKED 0.301 0.200 0.131 0.078 0.108 0.285 0.271 15.12

DDLA-UNIFORM 0.285 0.175 0.108 0.064 0.106 0.250 0.247 9.96
DDLA 0.343 0.221 0.140 0.085 0.120 0.328 0.286 9.73

Table 4: Single sentence decoding: We report automatic evaluation scores for various models under single sentence genera-
tion setting. DDLA model fares better scores than various baseline methods for all the considered measures. Both the DDLA
models get much better perplexities than baseline methods.

Model Bleu 1/2/3/4 Meteor Cider Rouge-L LenRatio
NN-MULTI 0.223 0.109 0.056 0.026 0.087 0.105 0.181 1.035

CAPT-MULTI 0.262 0.146 0.081 0.045 0.094 0.235 0.174 1.042
DDLA-UNIFORM 0.243 0.143 0.085 0.051 0.094 0.217 0.213 0.778

DDLA 0.289 0.173 0.103 0.062 0.108 0.297 0.260 0.811

Table 5: Multi-sentence decoding We report automatic evaluation scores for various models under multi-sentence generation
setting. DDLA model achieves better scores compared to the baseline methods. Note that these scores are not directly
comparable with single sentence generation setting. LenRatio is the ratio of the average number of tokens in the prediction to
the average number of tokens in the ground truth for the test set.

tion mechanism is similar to that used in prior
image captioning works (Xu et al., 2015), except
that we have two images instead of a single im-
age input). We do not perform any masking in
case of CAPT model, and simply ignore the clus-
ter information. The model is trained to gener-
ate a single sentence. Thus, this model is simi-
lar to a typical captioning model but with soft at-
tention over two images. CAPT-MASK model is
similar to CAPT model except that it incorporates
the masking mechanism defined earlier using the
union of all the cluster masks in the corresponding
image. We also consider a version of the CAPT
model wherein the target prediction is the whole
multi-sentence description – CAPT-MULTI – for
this setting, we simply concatenate the sentences
in any arbitrary order 2. Additionally, we consider
a nearest neighbor baseline (NN-MULTI), wherein
we simply use the annotation of the closest match-
ing training data point. We compute the close-
ness based on the extracted features of the im-
age pair, and leverage sklearns (Pedregosa et al.,
2011) Nearest-Neighbor module. For single sen-
tence setting (NN), we randomly pick one of the
sentences in the annotation.

We also consider a version of DDLA model
with fixed uniform prior, and refer to this model
as DDLA-UNIFORM . For single sentence
generation, we sample zj randomly from the
uniform distribution and then perform decoding.
For the multi-sentence generation setting, we

2Note that we do not provide CAPT-MULTI with ground
truth number of sentences

employ simple heuristics to order the clusters
at test time. One such heuristic we consider is
to order the clusters as per the decreasing area
of the bounding box (smallest rectangular area
enclosing the cluster).

Results: We report various automated metrics for
the different methods under single sentence gen-
eration and multi-sentence generation in Tables 4
and 5 respectively. For the single sentence gen-
eration setting, we observe that the DDLA model
outperforms various baselines as per most of the
scores on the test data split. DDLA-UNIFORM
method performs similar to the CAPT baseline
methods. For the multi-sentence generation, the
DDLA model again outperforms other methods.
This means that having a learned prior is useful in
our proposed method. Figure 6 shows an exam-
ple data point with predicted outputs by different
methods.

5 Discussion and Analysis

Qualitative Analysis of Outputs We perform a
qualitative analysis on the outputs to understand
the drawbacks in the current methods. One
apparent limitation of the current methods is
the failure to explicitly model the movement of
same object in the two images (Figure 7) – prior
works on object tracking can be useful here.
Sometimes the models get certain attributes of
the objects wrong. e.g. ‘blue car’ instead of ‘red
car’. Some output predictions state an object to
have ‘appeared’ instead of ‘disappeared’ and vice



4031

Figure 6: Predictions from various methods for two input image pairs.

Figure 7: Some drawbacks with the current models: One
apparent drawback with the single cluster selection is that
it misses opportunity to identify an object which has moved
significantly- considering it as appeared or disappeared as the
case may be. In this example, the blue truck moved, but the
DDLA model predicts that the truck is no longer there.

versa.

Do models learn alignment between sentence
and difference clusters? We performed a
study on 50 image pairs by having two humans
manually annotate gold alignments between
sentences and difference clusters. We then
computed alignment precision for the model’s
predicted alignments. To obtain model’s predicted
alignment for a given sentence Si, we compute
argmaxkP (zi = k|X)P (Si|zi = k,X). Our
proposed model achieved a precision of 54.6%,
an improvement over random chance at 27.4%.

Clustering for pre-processing Our generation
algorithm assumed one sentence uses only one
cluster and as such we tune the hyper-parameters
of clustering method to get large clusters so that
typically a cluster will entirely contain a reported
difference. On inspecting randomly selected data
points, we observe that in some cases too large
clusters are marked by the clustering procedure.
One way to mitigate this is to tune clustering
parameters to get smaller clusters and update the
generation part to use a subset of clusters. As
mentioned earlier, we consider clustering as a
means to achieve object level pre-processing. One

possible future direction is to leverage pre-trained
object detection models to detect cars, trucks,
people, etc. and make these predictions readily
available to the generation model.

Multi-sentence Training and Decoding As men-
tioned previously, we query the models for a de-
sired number of ’sentences’. In future works we
would like to relax this assumption and design
models which can predict the number of sentences
as well. Additionally, our proposed model doesn’t
not explicitly ensure consistency in the latent vari-
ables for different sentences of a given data point
i.e the model does not make explicit use of the fact
that sentences report non-overlapping visual dif-
ferences. Enforcing this knowledge while retain-
ing the feasibility of training is a potential future
direction of work.

6 Related Work

Modeling pragmatics: The dataset presents an
opportunity to test methods which can model
pragmatics and reason about semantic, spatial and
visual similarity to generate a textual description
of what has changed from one image to another.
Some prior work in this direction (Andreas and
Klein, 2016; Vedantam et al., 2017) contrastively
describe a target scene in presence of a distractor.
In another related task – referring expression
comprehension (Kazemzadeh et al., 2014; Mao
et al., 2016; Hu et al., 2017) – the model has
to identify which object in the image is being
referred to by the given sentence. However,
our proposed task comes with a pragmatic goal
related to summarization: the goal is to identify
and describe all the differences. Since the goal is
well defined, it may be used to constrain models
that attempt to learn how humans describe visual
difference.



4032

Natural language generation: Natural language
generation (NLG) has a rich history of previous
work, including, for example, recent works
on biography generation (Lebret et al., 2016),
weather report generation (Mei et al., 2016), and
recipe generation (Kiddon et al., 2016). Our task
can viewed as a potential benchmark for coherent
multi-sentence text generation since it involves
assembling multiple sentences to succinctly cover
a set of differences.

Visual grounding: Our dataset may also provide
a useful benchmark for training unsupervised and
semi-supervised models that learn to align vision
and language. Plummer et al. (2015) collected
annotation for phrase-region alignment in an
image captioning dataset, and follow up work
has attempted to predict these alignments (Wang
et al., 2016; Plummer et al., 2017; Rohrbach
et al., 2016). Our proposed dataset poses a related
alignment problem: attempting to align sentences
or phrases to visual differences. However, since
differences are contextual and depend on visual
comparison, our new task may represent a more
challenging scenario as modeling techniques
advance.

Image change detection: There are some works
on land use pattern change detection ((Radke
et al., 2005)). These works are related since
they try to screen out noise and mark the regions
of change between two images of same area
at different time stamps. Bruzzone and Prieto
(2000) propose an unsupervised change detection
algorithms aim to discriminate between changed
and unchanged pixels for multi-temporal remote
sensing images. Zanetti and Bruzzone (2016)
propose a method that allows unchanged class
to be more complex rather than having a single
unchanged class. Though image diff detection is
part of our pipeline, our end task is to generate
natural language descriptors. Moreover, we
observe that simple clustering seems to work well
for our dataset.

Other relevant works: Maji (2012) aim to con-
struct a lexicon of parts and attributes by for-
mulating an annotation task where annotators are
asked to describe differences between two im-
ages. Some other related works model phrases

describing change in color (Winn and Muresan,
2018), move-by-move game commentary for de-
scribing change in game state (Jhamtani et al.,
2018), and code commit message summarizing
changes in code-base from one commit to another
(Jiang et al., 2017). There exist some prior works
on fine grained image classification and caption-
ing (Wah et al., 2014; Nilsback and Zisserman,
2006; Khosla et al., 2011). The premise of such
works is that it is difficult for machine to find dis-
criminative features between similar objects e.g.
birds of different species. Such works are relevant
for us as the type of data we deal with are usually
of same object or scene taken at a different time or
conditions.

7 Conclusion

In this paper, we proposed the new task of describ-
ing differences between pairs of similar images
and introduced a corresponding dataset. Com-
pared to many prior image captioning datasets,
text descriptions in the ‘Spot-the-diff’ dataset are
often multi-sentence, consisting of all the differ-
ences in two similar images in most of the cases.
We performed exploratory analysis of the dataset
and highlighted potential research challenges. We
discuss how our ’Spot-the-diff’ dataset is use-
ful for tasks such as language vision alignment,
referring expression comprehension, and multi-
sentence generation. We performed pixel and ob-
ject level preprocessing on the images to identify
clusters of differing pixels. We observe that the
proposed model which aligns clusters of differing
pixels to output sentences performs better than the
models which use attention alone. We also discuss
some limitations of current methods and scope for
future directions.

Acknowledgements

We are thankful to anonymous EMNLP review-
ers for their valuable suggestions. We thank Eric
Nyberg for discussions on dataset collection. We
also acknowledge Nikita Duseja and Varun Gan-
gal for helping with the proof-reading of the pa-
per. We thank Luo (2017) for releasing a PyTorch
implementation of many popular image caption-
ing models. This project was supported in part by
a Adobe Research gift. Opinions and findings in
this paper are of the authors, and do not necessar-
ily reflect the views of Adobe.



4033

References
Jacob Andreas and Dan Klein. 2016. Reasoning

about pragmatics with neural listeners and speak-
ers. In Proceedings of the 2016 Conference on
Empirical Methods in Natural Language Process-
ing, EMNLP 2016, Austin, Texas, USA, November
1-4,2016, pages 1173–1182.

Stanislaw Antol, Aishwarya Agrawal, Jiasen Lu, Mar-
garet Mitchell, Dhruv Batra, C Lawrence Zitnick,
and Devi Parikh. 2015. Vqa: Visual question an-
swering. In Proceedings of the IEEE International
Conference on Computer Vision, pages 2425–2433.

Peter F Brown, Vincent J Della Pietra, Stephen A Della
Pietra, and Robert L Mercer. 1993. The mathemat-
ics of statistical machine translation: Parameter esti-
mation. Computational linguistics, 19(2):263–311.

Lorenzo Bruzzone and Diego F Prieto. 2000. Auto-
matic analysis of the difference image for unsuper-
vised change detection. IEEE Transactions on Geo-
science and Remote sensing, 38(3):1171–1182.

Michael Denkowski and Alon Lavie. 2014. Meteor
universal: Language specific translation evaluation
for any target language. In Proceedings of the ninth
workshop on statistical machine translation, pages
376–380.

Martin Ester, Hans-Peter Kriegel, Jörg Sander, Xi-
aowei Xu, et al. 1996. A density-based algorithm
for discovering clusters in large spatial databases
with noise. In Kdd, volume 96, pages 226–231.

Vishal Gupta and Gurpreet Singh Lehal. 2010. A
survey of text summarization extractive techniques.
Journal of emerging technologies in web intelli-
gence, 2(3):258–268.

Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian
Sun. 2016. Deep residual learning for image recog-
nition. In Proceedings of the IEEE conference
on computer vision and pattern recognition, pages
770–778.

Sepp Hochreiter and Jürgen Schmidhuber. 1997.
Long short-term memory. Neural computation,
9(8):1735–1780.

Ronghang Hu, Marcus Rohrbach, Jacob Andreas,
Trevor Darrell, and Kate Saenko. 2017. Modeling
relationships in referential expressions with compo-
sitional modular networks. In 2017 IEEE Confer-
ence on Computer Vision and Pattern Recognition
(CVPR), pages 4418–4427. IEEE.

Harsh Jhamtani, Varun Gangal, Eduard Hovy, Gra-
ham Neubig, and Taylor Berg-Kirkpatrick. 2018.
Learning to generate move-by-move commentary
for chess games from large-scale social forum data.
In Proceedings of the 56th Annual Meeting of the
Association for Computational Linguistics (Volume
1: Long Papers), volume 1, pages 1661–1671.

Siyuan Jiang, Ameer Armaly, and Collin McMillan.
2017. Automatically generating commit messages
from diffs using neural machine translation. In 2017
32nd IEEE/ACM International Conference on Auto-
mated Software Engineering (ASE), pages 135–146.
IEEE.

Sahar Kazemzadeh, Vicente Ordonez, Mark Matten,
and Tamara Berg. 2014. Referitgame: Referring to
objects in photographs of natural scenes. In Pro-
ceedings of the 2014 conference on empirical meth-
ods in natural language processing (EMNLP), pages
787–798.

Aditya Khosla, Nityananda Jayadevaprakash, Bang-
peng Yao, and Fei-Fei Li. 2011. Novel dataset for
fine-grained image categorization: Stanford dogs.
In Proc. CVPR Workshop on Fine-Grained Visual
Categorization (FGVC), volume 2, page 1.

Chloé Kiddon, Luke Zettlemoyer, and Yejin Choi.
2016. Globally coherent text generation with neural
checklist models. In Proceedings of the 2016 Con-
ference on Empirical Methods in Natural Language
Processing, pages 329–339.

Rémi Lebret, David Grangier, and Michael Auli. 2016.
Neural text generation from structured data with ap-
plication to the biography domain. In Proceedings
of the 2016 Conference on Empirical Methods in
Natural Language Processing, pages 1203–1213.

Jiasen Lu, Jianwei Yang, Dhruv Batra, and Devi
Parikh. 2016. Hierarchical question-image co-
attention for visual question answering. In Ad-
vances In Neural Information Processing Systems,
pages 289–297.

Ruotian Luo. 2017. An image captioning code-
base in pytorch. https://github.com/
ruotianluo/ImageCaptioning.pytorch.

Subhransu Maji. 2012. Discovering a lexicon of
parts and attributes. In Computer Vision–ECCV
2012. Workshops and Demonstrations, pages 21–
30. Springer.

Inderjeet Mani and Mark T Maybury. 1999. Advances
in automatic text summarization. MIT press.

Junhua Mao, Jonathan Huang, Alexander Toshev,
Oana Camburu, Alan L Yuille, and Kevin Murphy.
2016. Generation and comprehension of unambigu-
ous object descriptions. In Proceedings of the IEEE
conference on computer vision and pattern recogni-
tion, pages 11–20.

Hongyuan Mei, TTI UChicago, Mohit Bansal, and
Matthew R Walter. 2016. What to talk about and
how? selective generation using lstms with coarse-
to-fine alignment. In Proceedings of NAACL-HLT,
pages 720–730.

M-E. Nilsback and A. Zisserman. 2006. A visual vo-
cabulary for flower classification. In Proceedings of
the IEEE Conference on Computer Vision and Pat-
tern Recognition, volume 2, pages 1447–1454.

https://github.com/ruotianluo/ImageCaptioning.pytorch
https://github.com/ruotianluo/ImageCaptioning.pytorch


4034

Sangmin Oh, Anthony Hoogs, Amitha Perera, Naresh
Cuntoor, Chia-Chih Chen, Jong Taek Lee, Saura-
jit Mukherjee, JK Aggarwal, Hyungtae Lee, Larry
Davis, et al. 2011. A large-scale benchmark dataset
for event recognition in surveillance video. In Com-
puter vision and pattern recognition (CVPR), 2011
IEEE conference on, pages 3153–3160. IEEE.

Kishore Papineni, Salim Roukos, Todd Ward, and Wei-
Jing Zhu. 2002. Bleu: a method for automatic eval-
uation of machine translation. In Proceedings of
the 40th annual meeting on association for compu-
tational linguistics, pages 311–318. Association for
Computational Linguistics.

Adam Paszke, Sam Gross, Soumith Chintala, Gre-
gory Chanan, Edward Yang, Zachary DeVito, Zem-
ing Lin, Alban Desmaison, Luca Antiga, and Adam
Lerer. 2017. Automatic differentiation in pytorch.
In NIPS-W.

Fabian Pedregosa, Gaël Varoquaux, Alexandre Gram-
fort, Vincent Michel, Bertrand Thirion, Olivier
Grisel, Mathieu Blondel, Peter Prettenhofer, Ron
Weiss, Vincent Dubourg, et al. 2011. Scikit-learn:
Machine learning in Python. Journal of Machine
Learning Research, 12(Oct):2825–2830.

Bryan A Plummer, Arun Mallya, Christopher M Cer-
vantes, Julia Hockenmaier, and Svetlana Lazebnik.
2017. Phrase localization and visual relationship
detection with comprehensive image-language cues.
In Proceedings of the IEEE Conference on Com-
puter Vision and Pattern Recognition, pages 1928–
1937.

Bryan A Plummer, Liwei Wang, Chris M Cervantes,
Juan C Caicedo, Julia Hockenmaier, and Svetlana
Lazebnik. 2015. Flickr30k entities: Collecting
region-to-phrase correspondences for richer image-
to-sentence models. In Computer Vision (ICCV),
2015 IEEE International Conference on, pages
2641–2649. IEEE.

Richard J Radke, Srinivas Andra, Omar Al-Kofahi, and
Badrinath Roysam. 2005. Image change detection
algorithms: a systematic survey. IEEE transactions
on image processing, 14(3):294–307.

Steven J Rennie, Etienne Marcheret, Youssef Mroueh,
Jarret Ross, and Vaibhava Goel. 2017. Self-critical
sequence training for image captioning. In CVPR,
volume 1, page 3.

Anna Rohrbach, Marcus Rohrbach, Ronghang Hu,
Trevor Darrell, and Bernt Schiele. 2016. Ground-
ing of textual phrases in images by reconstruction.
In European Conference on Computer Vision, pages
817–834. Springer.

Alexander M Rush, Sumit Chopra, and Jason Weston.
2015. A neural attention model for abstractive sen-
tence summarization. In Proceedings of the 2015
Conference on Empirical Methods in Natural Lan-
guage Processing, pages 379–389.

Ramakrishna Vedantam, Samy Bengio, Kevin Murphy,
Devi Parikh, and Gal Chechik. 2017. Context-aware
captions from context-agnostic supervision. In 2017
IEEE Conference on Computer Vision and Pattern
Recognition (CVPR), pages 1070–1079. IEEE.

Ramakrishna Vedantam, C Lawrence Zitnick, and Devi
Parikh. 2015. Cider: Consensus-based image de-
scription evaluation. In Proceedings of the IEEE
conference on computer vision and pattern recog-
nition, pages 4566–4575.

Oriol Vinyals, Meire Fortunato, and Navdeep Jaitly.
2015a. Pointer networks. In Advances in Neural
Information Processing Systems, pages 2692–2700.

Oriol Vinyals, Alexander Toshev, Samy Bengio, and
Dumitru Erhan. 2015b. Show and tell: A neural im-
age caption generator. In Proceedings of the IEEE
Conference on Computer Vision and Pattern Recog-
nition, pages 3156–3164.

Catherine Wah, Grant Van Horn, Steve Branson,
Subhransu Maji, Pietro Perona, and Serge Belongie.
2014. Similarity comparisons for interactive fine-
grained categorization. In Proceedings of the IEEE
Conference on Computer Vision and Pattern Recog-
nition, pages 859–866.

Liwei Wang, Yin Li, and Svetlana Lazebnik. 2016.
Learning deep structure-preserving image-text em-
beddings. In Proceedings of the IEEE conference
on computer vision and pattern recognition, pages
5005–5013.

Olivia Winn and Smaranda Muresan. 2018. lightercan
still be dark: Modeling comparative color descrip-
tions. In Proceedings of the 56th Annual Meeting of
the Association for Computational Linguistics (Vol-
ume 2: Short Papers), volume 2, pages 790–795.

Huijuan Xu and Kate Saenko. 2016. Ask, attend and
answer: Exploring question-guided spatial attention
for visual question answering. In European Confer-
ence on Computer Vision, pages 451–466. Springer.

Kelvin Xu, Jimmy Ba, Ryan Kiros, Kyunghyun
Cho, Aaron C Courville, Ruslan Salakhutdinov,
Richard S Zemel, and Yoshua Bengio. 2015. Show,
attend and tell: Neural image caption generation
with visual attention. In ICML, volume 14, pages
77–81.

Massimo Zanetti and Lorenzo Bruzzone. 2016. A gen-
eralized statistical model for binary change detec-
tion in multispectral images. In Geoscience and Re-
mote Sensing Symposium (IGARSS), 2016 IEEE In-
ternational, pages 3378–3381. IEEE.

Li Zhang, Flood Sung, Feng Liu, Tao Xiang, Shaogang
Gong, Yongxin Yang, and Timothy M Hospedales.
2017. Actor-critic sequence training for image cap-
tioning. arXiv preprint arXiv:1706.09601.


