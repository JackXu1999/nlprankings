



















































Synchronous Regular Relations and Morphological Analysis


Proceedings of the 11th International Conference on Finite State Methods and Natural Language Processing, pages 35–38,
St Andrews–Sctotland, July 15–17, 2013. c©2013 Association for Computational Linguistics

Synchronous Regular Relations and Morphological Analysis

Christian Wurm, Younes Samih,
{cwurm,samih}@phil.uni-duesseldorf.de

Abstract

We list the major properties of some
important classes of subrational rela-
tions, mostly to make them easily ac-
cessible to computational linguists. We
then argue that there are good linguis-
tic reasons for using no class smaller
than the class of synchronous regu-
lar relations for morphological analysis,
and good mathematical reasons for us-
ing no class which is larger.

1 Below the Rational Relations

We need not stress the importance of finite
state transducers and of rational relations
for computational linguistics (see Johnson
[1972],Koskenniemi [1983],Kaplan and Kay
[1994],Beesley and Karttunen [2003]). So we
rather start with stressing the importance of
sub-rational relations, that is, classes of rela-
tions properly contained in the rational rela-
tions. As is well-known in the community,
rational relations are not closed under inter-
section. Furthermore, the equivalence and
inclusion problems for rational relations are
undecidable. So there are a number of ar-
guments for not using rational relations, but
rather some weaker class with more favorable
decision properties. The question is: if we
want to go below the rational relations, which
class should we choose? In the literature, we
often find the so called sequential relations;
these however are quite restricted and will
not be considered here. We rather focus on
three classes, the strictly synchronous, the k-
bounded (e.g. Roark and Sproat [2007]), and
the synchronous regular relations, which are

ordered by inclusion. We present their main
closure properties, which are partly already
known. For some reason the important class
of synchronous regular relations, which has
attracted a lot of attention in various fields
of mathematics,1 has to our knowledge not
gained very much attention in the field of com-
putational linguistics.2 We argue here that
1. there are good linguistic reasons for using
no class smaller than the class of synchronous
regular relations; and 2. we do not know of
any linguistics evidence in morphology to use
the more powerful rational relations instead of
synchronous regular relations.

2 Closure Properties and Decision
Problems

We will consider the main closure properties
for classes of relations. Union and intersection
of two relations R1, R2 are defined in the obvi-
ous set-theoretic fashion. The complement of a
relation R is defined wrt. two alphabets Σ, T ,
where R ⊆ Σ∗ × T ∗, and R := (Σ∗ × T ∗)−R.
The inversion of a word a1...an ∈ Σ∗ is de-
fined as (a1...an)

i := an...a1. For a rela-
tion R ⊆ Σ∗ × T ∗, we put Ri := {(wi, vi) :
(w, v) ∈ R}. Given two relations R1, R2, we
define their composition R1 ◦ R2 := {(x, z) :
(x, y) ∈ R1, (y, z) ∈ R2}. Given Two rela-
tions R1 ⊆ Σ∗1 × T ∗1 , R2 ⊆ Σ∗2 × T ∗2 , we define
their concatenation R1 · R2 := {(w1w2, v1v2) :
(w1, v1) ∈ R1, (w2, v2) ∈ R2}. In general, we

1We just mention Frougny and Sakarovitch [1993],
and the research on automatic structures, see Rubin
[2008]

2We have to mention that scholars working on
the finite-state manipulation platform Vaucanson have
made some efforts in using synchronous regular rela-
tions, see Lesaint [2008]

35



say a class R is closed under a n-ary opera-
tion X, if from R1, ..., Rn ∈ R it follows that
X(R1, ..., R2) ∈ R.

3 Three Classes and Their
Inclusion Relations

We consider three classes as most interesting
in this context. The first one is the class of
strictly synchronous regular relations (SSR).
For generality, we present relations of arbi-
trary arity. R is in SSR if 1. R is rational, and
2. if (w1, ..., wi) ∈ R, then |w1| = ... = |wi|.
Secondly, a relation R is k-bounded, if 1. R
is rational and 2. there is a k ∈ N such that
for all (w1, ..., wn) ∈ R, max{|w1|, ..., |wn|} −
min{|w1|, ..., |wn|} ≤ k.3 Call this class k-B.
Obviously, k-B properly contains SSR. As the
third class, we present the synchronous regu-
lar relations (SR): Put Σ⊥ := Σ ∪ {⊥}, for
⊥/∈ Σ. The convolution of a tuple of strings
(w1, ..., wi) ∈ (Σ∗)i, written as ⊗(w1, ..., wi) of
length max({|wj | : 1 ≤ j ≤ i}) is defined as
follows: the kth component of ⊗(w1, ..., wi) is
〈σ1, ..., σi〉, where σj is the k-th letter of wj
provided that k ≤ |wj |, and ⊥ otherwise. The
convolution of a relation R ⊆ (Σ∗)i is defined
as ⊗R := {⊗(w1, ..., wi): (w1, ..., wi) ∈ R}. A
relation R ∈ (Σ∗)i is synchronous regular,
if there is a finite state automaton over (Σ⊥)i

recognizing ⊗R.
Informally, SR are the relations computed

by finite state transducers which allow � tran-
sitions in a component only if no other letter
is to follow in this component. It is not obvi-
ous that SR contains k-B; it follows however
from the following well-known synchronization
lemma (see Frougny and Sakarovitch [1993]):

Lemma 1 Assume R is an n-ary rational re-
lation, such that there is a k ∈ N, such that
for all (w1, ..., wn) ∈ R, max{|w1|, ..., |wn|} −
min{|w1|, ..., |wn|} ≤ k. Then R is in SR.

4 A Logical Characterization of SR

We can actually characterize SR with
first order logic over the language L :=
(EL, pref , lasta : a ∈ Σ) where EL, pref
are binary predicates, and all a : a ∈ Σ

3Note the order of quantifiers: we do not fix the k for
the entire class of relations; we can choose it arbitrarily
for any given relation, but then it is fixed for all of its
elements.

are unary predicates. We call this logic
FOL(L), and interpret it in the structure S :=
〈Σ∗, EL, pref , a : a ∈ Σ〉, where Σ∗ is our uni-
verse, a : a ∈ Σ ⊆ Σ∗, and EL, pref ⊆ Σ∗×Σ∗.
We have w ∈ a if and only if w = w′a; we have
(w, v) ∈ pref if and only if v = wv′, that is,
w is a prefix of v; and we have (w, v) ∈ EL if
and only if |w| = |v|. For what is to follow, we
have to assume that |Σ| ≥ 2. The proof of the
following theorem of Eilenberg et al. [1969] is
long and complicated, so we cannot even give
a sketch at this place.

Theorem 2 Assume M ⊆ (Σ∗)i. Then
there is a FOL(L)-formula φ(x1, ..., xi)
in the free variables x1, ..., xi, such
that M := {w1, ..., wi ∈ Σ∗ : S |=
φ(x1, ..., xi)[w1, ..., wi]}, if and only if
M ∈ SR.

5 Mathematical Properties

5.1 Closure Properties

That SSR is closed under union is obvious. In-
tersection follows from the fact that 1. SR is
closed under intersection, and 2. if all pairs in
R1 and R2 have equal length, then surely the
pairs in R1∩R2 have equal length. It is easy to
see that SSR is not closed under complement,
as the complement of R ∈ SSR in particular
contains all pairs of words of different length.
Moreover, SSR is closed under inversion, be-
cause 1. rational relations are closed under in-
version, and 2. equal length is preserved; SSR
is closed under composition and concatenation
for exactly the same reason. So we have quite
good closure (and decision) properties; still,
SSR is very restrictive.

Therefore one might prefer the more power-
ful class k-B. k-B is obviously also closed un-
der union, closed under intersection and not
under complement, for exactly the same rea-
son as SSR. Also, k-B is closed under compo-
sition, concatenation and inversion, again for
the same reasons as SSR.

There is a characterization of regular rela-
tions in first order logic.4 From this result
it immediately follows that SR is closed un-
der union, intersection and complement, by

4Actually, this only holds for relations over an al-
phabet Σ with |Σ| ≥ 2; but our claims are easy to show
separately for the case where |Σ| = 1.

36



logical connectives; moreover, by logical de-
finability we easily obtain closure under com-
position: put R1 := {(w1, w2) ∈ (Σ∗)2 :
S |= φ(x, y)[w1, w2]}; R2 := {(v1, v2) ∈
(Σ∗)2 : S |= ψ(y, z)[v1, v2]}; then R1 ◦ R2 =
{(w1, w2) : S |= ∃.yφ(x, y) ∧ ψ(y, z)[w1, w2]}.
We can easily show that SR is not closed un-
der concatenation: (a, �)∗ ∈ SR, (b, c)∗ ∈ SR;
but (a, �)∗ · (b, c)∗ /∈ SR.5 As (b, c)∗ · (a, �)∗ is
regular, we also know that SR is not closed
under inversion.

5.2 Decision Problems

In general, the question whether for a given
characterization of a rational relation R
(transducer, rational expression), we have R =
∅, is decidable. From this and the fact that
SR is a Boolean algebra it follows that for
R1, R2 ∈SR, we can decide the questions:
given characterizations of R1, R2, is R1 ⊆ R2,
and is R1 = R2? This can be demonstrated us-
ing the standard proof for regular languages.
So, we have a fortiori the same result for SSR,
k-B. For rational relations themselves the lat-
ter problems are undecidable.

6 Natural Language Morphology
Requires SR

6.1 German Compounding

So which one should we take? As there is
no absolutely convincing mathematical argu-
ment, we should take a look at linguistic facts.
We now present an argument for using the ad-
ditional power coming with synchronous regu-
lar relations.

Compounding is a very productive morpho-
logical process in German and many other lan-
guages (Dutch, Danish, Finish, Greek etc.). It
is a process whereby new words are formed
by combining independent words/morphemes,
where there is no restriction on the number
of morphemes which can be put together to
form a single new word. German compounds
are strictly right-headed (Toman [1992]), that
is, the morphosyntactic features of the com-
pounds are always inherited from the right-
most morpheme. The head of the compound
thus determines category, gender, and all mor-

5This follows from the standard proof that rational
relations are not closed under intersection, which uses
exactly this relation, see Kaplan and Kay [1994].

phosyntactic features of the whole compound.
For example,the bahn in German Autobahn
(highway) identifies the word as singular fem-
inine. Due to space constraints, we cannot
say much about morphological analysis in gen-
eral or analysis of our particular example; we
will say only as much as is needed for our for-
mal argument, which in our view however is
of general importance for computational mor-
phology.

6.2 The Compounding Relation is
Synchronous Regular

If we want to morphologically analyze a com-
pound, in a first step, we want to transduce
a sequence of compounded words W1...Wi to
a sequence of representations of their mor-
phosyntactic features C1...Ci. This relation is
synchronous if we use words and feature bun-
dles as atoms. One might object that this is
usually not the case, or at least depends on
whether we allow complex words as atomic
transitions. But mathematically, we are quite
safe, as we can always form a new, finite al-
phabet via a bijection with finite strings over
another alphabets.6 Still, this is not satisfy-
ing, as the compound is a single word, and
its morphosyntactic features are exactly the
same as the one of its head. As the head is
rightmost, we thus have a relation of the form
(C1...Ci, Ci), mapping the entire sequence to
its last element. We call this the compound-
ing relation, which has to be composed with
the first relation. As compounding is un-
bounded and consequently there is no upper
bound to i, this relation is not in k-B. We
now show that this relation is however in SR.
This would be obvious if the head would be
the leftmost element; for the head rightmost
we need some work.

Let I be a finite set, Li : i ∈ I a finite
set of regular languages. We say a function
f : (Σ×T )∗ → ({�}× {Li : i ∈ I})∪ ({Li : i ∈
I} × {�}) is regular, if there is a deterministic
finite state automaton (Q, δ, q0,Σ×T ), where δ
is extended to strings in the canonical fashion,
and a finite function g : Q → ({�} × {Li :
i ∈ I}) ∪ ({Li : i ∈ I} × {�}), such that for all
(w, v) ∈ (Σ×T )∗, we have f(w, v) = g◦δ(w, v).

6Still more technically, we would also have to ensure
that the bijection defines a code, but we leave this aside,
noting that this is satisfied in all normal cases.

37



Lemma 3 A relation R ⊆ Σ∗×T ∗ is in SR, if
and only if there is a regular function f , such
that for every (w, v) ∈ R, (w, v) = (w′, v′) ·
f(w′, v′), where |w′| = |v′|.7

So take the compounding relation
{(C1...Ci, Ci) : C1...Ci is a well-formed
compound}. We simply put f(C1, Ci) =
({C1}\CC1) × �, where CCi is the language
of well-formed compounds ending with Ci,
and L1\L2 := {v : ∀w ∈ L1, wv ∈ L2}; it is
well-known that regular languages are closed
under this operation, so the compounding
relation is synchronous regular, provided that
the set of compounds itself is a regular set.
This is clearly the case for the languages we
considered. And even if there is a language
where this is not the case, this would not be
an argument in particular against using SR,
but rather against using finite-state methods
in natural language morphology in general.

7 Conclusion

We have summed up the major closure and
decision properties of a number of subrational
classes of relations which are currently in use.
The properties we listed are mostly known,
and otherwise relatively easy to obtain. We
have undertaken this summarization as there
does not seem to be any other literature where
one could find it; and in particular in the com-
putational linguistics literature one finds very
little on closure and decision properties of sub-
rational classes of relations.

Our main argument however is of linguis-
tic nature: we have shown that the k-bounded
(and thus strictly synchronous) relations are
unable to allow for morphological analysis of
a phenomenon which is as common and wide-
spread as compounding. Synchronous regu-
lar relations on the other side are powerful
enough to capture this phenomenon. We also
argued that synchronous regular relations are
preferable over rational relations from a purely
mathematical point of view, because they form
a Boolean algebra and all their decision prob-
lems are decidable.

Of course, there are many finite-state NLP
applications for which SR is insufficient, such
as inserting markup expressions in shallow

7Actually, this lemma is sometimes even taken to
be the definition of SR; so we omit the proof.

parsing. Our argument was: for most of stan-
dard morphological analysis, SR is the small-
est class which provides sufficient expressive
power.8

References

Kenneth R. Beesley and Lauri Karttunen. Fi-
nite state morphology. CSLI Publ., Stan-
ford, Calif., 2003.

Samuel. Eilenberg, C. C. Elgot, and J. C.
Shepherdson. Sets recognized by n-tape au-
tomata. Journal of Algebra, 13:447–464,
1969.

Christiane Frougny and Jacques Sakarovitch.
Synchronized rational relations of finite and
infinite words. Theor. Comput. Sci., 108(1):
45–82, 1993.

C. Douglas Johnson. Formal Aspects of
Phonological Description. Mouton, The
Hague, 1972.

Ron M. Kaplan and Martin Kay. Regular
Models of Phonological Rule Systems. Com-
putational Linguistics, 20:331–378, 1994.

Kimmo Koskenniemi. Two–level morphology.
A general computational model for word–
form recognition. Technical Report 11, De-
partment of General Linguistics, University
of Helsinki, 1983.

Florian Lesaint. Synchronous relations in Vau-
canson. Technical Report 0833, Laboratoire
de Recherche et Développement de L’Epita,
2008.

Brian Roark and Richard William Sproat.
Computational approaches to morphology
and syntax. Oxford surveys in syntax and
morphology ; 4. Oxford Univ. Press, 2007.

Sasha Rubin. Automata presenting structures:
A survey of the finite string case. Bulletin
of Symbolic Logic, 14(2):169–209, 2008.

Jindrich Toman. Compound. In W. Bright,
editor, International Encyclopedia of Lin-
guistics, volume 1, pages 286 – 288. Oxford
Univ. Pr., 1992.

8Though there are morphological phenomena which
clearly go beyond the expressive power of SR, such
as reduplication, they seem to be quite rare; and in
fact, the latter is equally problematic for finite-state
morphology in general as for SR.

38


