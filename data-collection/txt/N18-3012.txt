



















































Can Neural Machine Translation be Improved with User Feedback?


Proceedings of NAACL-HLT 2018, pages 92–105
New Orleans, Louisiana, June 1 - 6, 2018. c©2017 Association for Computational Linguistics

Can Neural Machine Translation be Improved with User Feedback?

Julia Kreutzer1∗ and Shahram Khadivi3 and Evgeny Matusov3 and Stefan Riezler1,2
1Computational Linguistics & 2IWR, Heidelberg University, Germany

{kreutzer,riezler}@cl.uni-heidelberg.de
3eBay Inc., Aachen, Germany
{skhadivi,ematusov}@ebay.com

Abstract

We present the first real-world applica-
tion of methods for improving neural ma-
chine translation (NMT) with human rein-
forcement, based on explicit and implicit
user feedback collected on the eBay e-
commerce platform. Previous work has
been confined to simulation experiments,
whereas in this paper we work with real
logged feedback for offline bandit learn-
ing of NMT parameters. We conduct a
thorough analysis of the available explicit
user judgments—five-star ratings of trans-
lation quality—and show that they are not
reliable enough to yield significant im-
provements in bandit learning. In con-
trast, we successfully utilize implicit task-
based feedback collected in a cross-lingual
search task to improve task-specific and
machine translation quality metrics.

1 Introduction

In commercial scenarios of neural machine trans-
lation (NMT), the one-best translation of a text is
shown to multiple users who can reinforce high-
quality (or penalize low-quality) translations by
explicit feedback (e.g., on a Likert scale) or im-
plicit feedback (by clicking on a translated page).
In such settings this type of feedback can be
easily collected in large amounts. While ban-
dit feedback1 in form of user clicks on displayed
ads is the standard learning signal for response
prediction in online advertising (Bottou et al.,
2013), bandit learning for machine translation has
so far been restricted to simulation experiments
(Sokolov et al., 2016b; Lawrence et al., 2017b;

∗The work for this paper was done while the first author
was an intern at eBay.

1The fact that only feedback for a single translation is col-
lected constitutes the “bandit feedback” scenario where the
name is inspired by “one-armed bandit” slot machines.

Nguyen et al., 2017; Kreutzer et al., 2017; Bah-
danau et al., 2017).

The goal of our work is to show that the gold
mine of cheap and abundant real-world human
bandit feedback can be exploited successfully for
machine learning in NMT. We analyze and utilize
human reinforcements that have been collected
from users of the eBay e-commerce platform. We
show that explicit user judgments in form of five-
star ratings are not reliable and do not lead to
downstream BLEU improvements in bandit learn-
ing. In contrast, we find that implicit task-based
feedback that has been gathered in a cross-lingual
search task can be used successfully to improve
task-specific metrics and BLEU.

Another crucial difference of our work to previ-
ous research is the fact that we assume a counter-
factual learning scenario where human feedback
has been given to a historic system different from
the target system. Learning is done offline from
logged data, which is desirable in commercial set-
tings where system updates need to be tested be-
fore deployment and the risk of showing inferior
translations to users needs to be avoided. Our
offline learning algorithms range from a simple
bandit-to-supervised conversion (i.e., using trans-
lations with good feedback for supervised tuning)
to transferring the counterfactual learning tech-
niques presented by Lawrence et al. (2017b) from
statistical machine translation (SMT) to NMT
models. To our surprise, the bandit-to-supervised
conversion proved to be very hard to beat, despite
theoretical indications of poor generalization for
exploration-free learning from logged data (Lang-
ford et al., 2008; Strehl et al., 2010). However, we
show that we can further improve over this method
by computing a task-specific reward scoring func-
tion, resulting in significant improvements in both
BLEU and in task-specific metrics.

92



2 Related Work

Sokolov et al. (2016a,b) introduced learning from
bandit feedback for SMT models in an interactive
online learning scenario: the MT model receives a
source sentence from the user, provides a trans-
lation, receives feedback from the user for this
translation, and performs a stochastic gradient up-
date proportional to the feedback quality. Kreutzer
et al. (2017) showed that the objectives proposed
for log-linear models can be transferred to neural
sequence learning and found that standard control
variate techniques do not only reduce variance but
also help to produce best BLEU results. Nguyen
et al. (2017) proposed a very similar approach us-
ing a learned word-based critic in an advantage
actor-critic reinforcement learning framework. A
comparison of current approaches was recently
performed in a shared task where participants had
to build translation models that learn from the in-
teraction with a service that provided e-commerce
product descriptions and feedback for submitted
translations (Sokolov et al., 2017). Lawrence et al.
(2017b,a) were the first to address the more realis-
tic problem of offline learning from logged bandit
feedback, with special attention to the problem of
exploration-free deterministic logging as is done
in commercial MT systems. They show that vari-
ance reduction techniques used in counterfactual
bandit learning (Dudı́k et al., 2011; Bottou et al.,
2013) and off-policy reinforcement learning (Pre-
cup et al., 2000; Jiang and Li, 2016) can be used
to avoid degenerate behavior of estimators under
deterministic logging.

3 User Feedback

3.1 Explicit Feedback via Star Ratings

One way to collect reinforcement signals from hu-
man users of the eBay platform is by explicit rat-
ings of product title translations on a five-point
Likert scale. More specifically, when users visit
product pages with translated titles, they can in-
spect the source when hovering with the mouse
over the title. Then five stars are shown with the
instruction to ‘rate this translation’. A screenshot
of an implementation of this rating interface is
shown in Figure 1. The original title, the trans-
lation and the given star rating are stored. For the
experiments in this paper, we focus on translations
from English to Spanish. The user star rating data
set contains 69,412 rated product titles with 148k

Figure 1: Screenshot of the 5-star rating interface for a prod-
uct on www.ebay.es translated from English to Spanish.

individual ratings. Since 34% of the titles were
rated more than once, the ratings for each title are
averaged. We observe a tendency towards high rat-
ings, in fact one half of the titles are rated with five
stars (cf. Appendix C).

To investigate the reliability and validity of
these ratings, we employed three bilingual anno-
tators (‘experts’) to independently re-evaluate and
give five-star ratings for a balanced subset of 1,000
product title translations. The annotators were pre-
sented the source title and the machine transla-
tion, together with instructions on the task pro-
vided in Appendix B. The inter-annotator agree-
ment between experts is relatively low with Fleiss’
κ = 0.12 (Fleiss, 1971). Furthermore, there is
no correlation of the averaged ‘expert’ ratings and
the averaged user star ratings (Spearman’s ρ =
−0.05). However, when we ask another three an-
notators to indicate whether they agree or disagree
with a balanced subset of 2,000 user ratings, they
agree with 42.3% of the ratings (by majority vot-
ing). In this binary meta-judgment task, the inter-
annotator agreement between experts is moderate
with κ = 0.45. We observe a strong tendency of
the expert annotators to agree with high user rat-
ings and to disagree with low user ratings. Two
examples of user ratings, expert ratings and expert
judgment are given in Table 1. In the first example,
all raters agree that the translation is good, but in
the second example, there is a strong disagreement
between users and experts.

This analysis shows that it is generally not
easy for non-professional users of the e-commerce
platform, and even for expert annotators, to give
star ratings of translations in the domain of user-
generated product titles with high reliability. This
problem is related to low validity, i.e., we do
not know whether the users’ response actually ex-
presses translation quality, since we cannot control
the influence of other factors on their judgment,
e.g., the displayed image (see Figure 1), the prod-

93



Source Title Title Translation
User Rating

(avg)
Expert Rating

(avg)
Expert Judgment

(majority)

Universal 4in1 Dual USB Car Charger
Adapter Voltage DC 5V 3.1A Tester For iPhone

Coche Cargador Adaptador De Voltaje
Probador De Corriente Continua 5V 3.1A para iPhone

4.5625 4.33 Correct

BEAN BUSH THREE COLOURS: YELLOW
BERGGOLD, PURPLE KING AND GREEN TOP CROP

Bean Bush tres colores: Amarillo Berggold, púrpura
y verde Top Crop King

1.0 4.66 Incorrect

Table 1: Examples for averaged five-star user ratings, five-star expert ratings and expert judgments on the user ratings.

uct itself, or the users’ general satisfaction with
the e-commerce transaction, nor can we exclude
the possibility that the user judgment is given with
an adversarial purpose. Furthermore, we do not
have control over the quality of sources2, nor can
we discern to which degree a user rating reflects
fluency or adequacy of the translation.

3.2 Task-Based Implicit Feedback

Another form of collecting human reinforcement
signals via the eBay e-commerce platform is to
embed the feedback collection into a cross-lingual
information retrieval task. The product title trans-
lation system is part of the search interaction of a
user with the e-commerce platform in the follow-
ing way: When a user enters a query in Spanish,
it is first translated to English (query translation),
then a search engine retrieves a list of matching
products, and their titles are translated to Span-
ish and displayed to the user. As soon as the
user clicks on one of the translated titles, we store
the original query, the translated query, the source
product title and its translation. From this col-
lection we filter the cases where (a) the original
query and the translated query are the same, or (b)
more than 90% of the words from the query trans-
lation are not contained in the retrieved source ti-
tle. In this way, we attempt to reduce the prop-
agation of errors in query translation and search.
This leaves us with a dataset of 164,065 tuples of
Spanish queries, English product titles and their
Spanish translations (15% of the original collec-
tion). Note that this dataset is more than twice the
size of the explicit feedback dataset. An example
is given in Table 2.

The advantage of embedding feedback collec-
tion into a search task is that we can assume that
users who formulate a search query have a gen-
uine intent of finding products that fit their need,
and are also likely to be satisfied with product ti-
tle translations that match their query, i.e., contain

2Most titles consist of a sequence of keywords rather than
a fluent sentence. See Calixto et al. (2017) for a fluency anal-
ysis of product titles.

terms from the query in their own language. We
exploit this assumption in order to measure the
quality of a product title translation by requiring a
user to click on the translation when it is displayed
as a result of the search, and then quantifying the
quality of the clicked translation by the extent it
matches the query that led the user to the product.
For this purpose, we define a word-based match-
ing function match(w,q) that evaluates whether a
query q contains the word w:

match(w,q) =

{
1, ifw ∈ q
0, otherwise.

(1)

Based on this word-level matching, we compute a
sequence-level reward for a sentence y of length
T as follows:

recall(y,q) =
1

T

T∑

t=1

match(yt,q). (2)

4 Learning from User Feedback

Reward Functions. In reinforcement and bandit
learning, rewards received from the environment
are used as supervision signals for learning. In our
experiments, we investigate several options to ob-
tain a reward function ∆ : Y → [0, 1] from logged
human bandit feedback:

1. Direct User Reward: Explicit feedback,
e.g., in the form of star ratings, can directly
be used as reward by treating the reward func-
tion as a black box. Since human feedback is
usually only available for one translation per
input, learning from direct user rewards re-
quires the use of bandit learning algorithms.
In our setup, human bandit feedback has been
collected for translations of a historic MT
system different from the target system to be
optimized. This restricts the learning setup to
offline learning from logged bandit feedback.

2. Reward Scoring Function: A possibility to
use human bandit feedback to obtain rewards
for more than a single translation per input is

94



Query Translated Query Title Translated Title Recall

candado bicicleta bicycle lock New Bicycle Vibration Code Moped Lock
Bike Cycling Security Alarm Sound Lock

Nuevo código de vibración Bicicleta Ciclomotor alarma de seguridad
de bloqueo Bicicleta Ciclismo Cerradura De Sonido

0.5

Table 2: Example for query and product title translation. ‘candado’ is translated to ‘lock’ in the query, but then translated back
to ‘cerradura’ in the title. The recall metric would prefer a title translation with ‘candado’, as it was specified by the user.

to score translations either against a logged
reference or a logged query. The first option
requires a bandit-to-supervised conversion of
data where high-quality logged translations
are used as references against which BLEU
or other MT quality metrics can be measured.
The second option uses logged queries to ob-
tain a matching score as in Equation 2.

3. Estimated Reward: Another option to ex-
tend bandit feedback to all translations is to
learn a parametric model of rewards, e.g., by
optimizing a regression objective. The re-
ward function is known, but the model pa-
rameters need to be trained based on a history
of direct user rewards or by evaluations of a
reward scoring function.

In the following, we present how rewards can be
integrated in various objectives for NMT training.

Maximum Likelihood Estimation by Bandit-
to-Supervised Conversion. Most commonly,
NMT models are trained with Maximum Likeli-
hood Estimation (MLE, Equation 3) on a given
parallel corpus of source and target sequences
D = {(x(s),y(s))}Ss=1

LMLE(θ) =

S∑

s=1

log pθ(y
(s)|x(s)). (3)

The MLE objective requires reference translations
and is agnostic to rewards. However, in a bandit-
to-supervised conversion, rewards can be used to
filter translations to be used as pseudo-references
for MLE training. We apply this scenario to ex-
plicit and implicit human feedback data in our ex-
periments.

Reinforcement Learning by Minimum Risk
Training. When rewards can be obtained for
several translations per input instead of only for
one as in the bandit setup, by using a reward es-
timate or scoring function, Minimum Risk Train-
ing (MRT, Equation 4) can be applied to optimize

NMT from rewards.

RMRT(θ) =
S∑

s=1

∑

ỹ∈S(x(s))
qαθ (ỹ|x(s)) ∆(ỹ), (4)

where sample probabilities are renormalized over
a subset of translation samples S(x) ⊂ Y(x):
qαθ (ỹ|x) =

pθ(ỹ|x)α∑
y′∈S(x) pθ(y

′|x)α . The hyper-
parameter α controls the sharpness of q (see Shen
et al. (2016)).

With sequence-level rewards, all words of a
translation of length T are reinforced to the same
extent and are treated as if they contributed equally
to the translation quality. A word-based reward
function, such as the match with a given query
(Equation 1), allows the words to have individ-
ual weights. The following modification of the
sequence-level MRT objective (Equation 4) ac-
counts for word-based rewards ∆(yt):

RW-MRT(θ) =
S∑

s=1

∑

ỹ∈S(x(s))

T∏

t=1
[
qαθ (ỹt|x(s), ỹ<t) ∆(yt)

]
, (5)

where ∆(yt) in our experiments is a matching
score (1). In the following we use the bracketed
prefix (W-) to subsume both sentence-level and
word-level training objectives.

When output spaces are large and reward func-
tions sparse, (W-)MRT objectives typically bene-
fit from a warm start, i.e., pre-training with MLE.
Following Wu et al. (2016), we furthermore adopt
a linear combination of MLE and (W-)MRT to sta-
bilize learning:

R(W-)MIX(θ) = λ ·RMLE(θ) +R(W-)MRT(θ).

Counterfactual Learning by Deterministic
Propensity Matching. Counterfactual learning
attempts to improve a target MT system from a
log of source sentences, translations produced
by a historic MT system, and obtained feed-
back L = {(x(h),y(h),∆(y(h)))}Hh=1. For the
special case of deterministically logged rewards

95



Lawrence et al. (2017b) introduced the Deter-
ministic Propensity Matching (DPM) objective
with self-normalization as a multiplicative control
variate (Swaminathan and Joachims, 2015):3

RDPM(θ) =
1

H

H∑

h=1

∆(y(h)) p̄θ(y
(h)|x(h)), (6)

where translation probabilities are reweighted over
the current mini-batch B ⊂ H,B � H:
p̄θ(y

(h)|x(h)) = pθ(y(h)|x(h))∑B
b=1 pθ(y

(b)|x(b)) . We addi-

tionally normalize the log probability of a trans-
lation y by its length |y|: pnormθ (y|x) =
exp ( log pθ(y|x)|y| ).

Counterfactual Learning by Doubly Controlled
Estimation. Lawrence et al. (2017b) further-
more propose the Doubly Controlled objective
(DC, Equation 7) implementing the idea of doubly
robust estimation (Dudı́k et al., 2011; Jiang and Li,
2016) for deterministic logs. In addition to learn-
ing from the historic reward for the logging sys-
tem, the reward for other translations is estimated
by a parametrized regression model that is trained
on the log ∆̂φ : Y → [0, 1]. This objective con-
tains both a multiplicative (probability reweight-
ing) and an additive (reward estimate) control vari-
ate, hence the name.4

RDC(θ) =
1

H

H∑

h=1

[(
∆(y(h))− ∆̂φ(y(h))

)

× p̄θ(y(h)|x(h)) +
∑

y∈S(x(h))
∆̂φ(y) pθ(y|x(h))

]

(7)

As for MRT, the expectation over the full output
space is approximated with a subset of k sample
translations S(x) ⊂ Y(x).

Relative Rewards. With the objectives as de-
fined above, gradient steps are dependent on the
magnitude of the reward for the current training
instance. In reinforcement learning, an average
reward baseline is commonly subtracted from the
current reward with the primary goal to reduce
variance (Williams, 1992). As a side effect, the

3Lawrence et al. (2017b) propose reweighting over the
whole log, but this is infeasible for NMT. For simplicty we
refer to their DPM-R objective as DPM, and DC-R as DC.

4We find empirically that estimating ĉ over the current
batch as in objective ĉDC in (Lawrence et al., 2017b) does
not improve over the simple setting with c = 1.

current reward is relativized, such that the gra-
dient step is not only determined by the magni-
tude of the current rewards, but is put into re-
lation with previous rewards. We found this ef-
fect to be particularly beneficial in experiments
with suboptimal reward estimators or noisy re-
wards and therefore apply it to all instantiations
of the DPM and DC objectives. For DPM,
the running average of historic rewards ∆̄h =
1
h

∑h
i=1 ∆(y

(i)) is subtracted from the current re-
ward. For DC we apply this to both types of
rewards in Equation 7: 1) the logged reward
∆(y(h)), from which we subtract its running aver-
age ∆̄h instead of the estimated reward ∆̂φ(y(h)),
and 2) the estimated reward ∆̂φ(y), from which
we hence subtract the average estimated reward
¯̂
∆h =

1
h

∑h
i=1

1
k

∑
y′∈S(x(i)) ∆̂φ(y

′).

5 Experiments

5.1 NMT Model

In our experiments, learning from feedback starts
from a pre-trained English to Spanish NMT
model that has not seen in-domain data (i.e.,
no product title translations). The NMT base-
line model (BL) is a standard subword-based
encoder-decoder architecture with attention (Bah-
danau et al., 2015), implemented with TensorFlow
(Abadi et al., 2015). The model is trained with
MLE on 2.7M parallel sentences of out-of-domain
data until the early stopping point which is de-
termined on a small in-domain dev set of 1,619
product title translations. A beam of size 12 and
length normalization (Wu et al., 2016) are used
for beam search decoding. For significance tests
we used approximate randomization (Clark et al.,
2011), for BLEU score evaluation (lowercased)
the multi-bleu script of the Moses decoder (Koehn
et al., 2007), for TER computation the tercom tool
(Snover et al., 2006). For MRT, DC and (W-
)MIX models we set k = 5, for (W-)MIX mod-
els λ = 0.5 and α = 0.05. For all NMT models
involving random sampling, we report average re-
sults and standard deviation (in subscript) over two
runs. Further details about training data and hy-
perparameters settings are described in Appendix
D.

5.2 Reward Estimator

The model architecture for the reward estimator
used in the DC objective is a bilingual extension
of the convolutional neural network (CNN) for

96



Figure 2: Model architecture for the reward estimator. This
example has one filter for each filter size (3: purple, 1: green,
2: blue). Source and target sequences are padded up to a
maximum length, here Tmax = 8.

Data & Model MSE
Macro-avg.

Distance
Micro-Avg.

Distance
Pearson’s

r
Spearman’s

ρ

Star ratings 0.1620 0.0065 0.3203 0.1240 0.1026
sBLEU 0.0096 0.0055 0.0710 0.8816 0.8675

Table 3: Results for the reward estimators trained and eval-
uated on human star ratings and simulated sBLEU.

sentence classification proposed by Kim (2014).
Both source and target sequences are padded up
to a pre-defined maximum sequence length Tmax,
their embeddings are concatenated and further
processed by a 1D-Convolution over the time di-
mension with several filters of sizes from 2 to 15,
which is then followed by a max-over-time pool-
ing and fed to a fully-connected output layer (Fig-
ure 2). The model is trained to minimize the mean
squared error (MSE) on the training portion of the
logged feedback data (60k for simulated sentence-
BLEU feedback, 62,470 for star rating feedback).
The word embeddings of the reward estimator are
initialized by the word embeddings of the trained
baseline NMT system and fine-tuned further to-
gether with the other CNN weights. The best pa-
rameters are identified by early-stopping on the
validation portion of the feedback data (2,162 for
the simulation, 6,942 for the star ratings). Please
find a detailed description of the model’s hyperpa-
rameters in Appendix D.4.

Results for a stand-alone evaluation of the re-
ward estimator on the validation portions of the
feedback data are given in Table 3. The estima-
tor models sBLEU much more accurately than the
user star ratings. This is due to large variance and
skew of the user ratings. An MSE-trained esti-
mator typically predicts values around the mean,
which is not a suitable strategy for such a skewed
distribution of labels, but is successful for the pre-
diction of normal-distributed sBLEU.

5.3 Explicit Star Rating Feedback

Counterfactual Bandit Learning. As shown in
Table 4, counterfactual learning with DPM and
DC on the logged star ratings as direct reward does
not yield improvements over the baseline model in
terms of corpus BLEU or TER. A randomization
of feedback signals for translations gives the same
results (DPM-random), showing that counterfac-
tual learning from logged star ratings is equivalent
to learning from noise. Evaluating the models in
terms of estimated user reward, however, we find
an improvement of +1.49 for DC, +0.04 for DPM
over the baseline (53.93) (not shown in Table 4)—
but these improvements do not transfer to BLEU
because the reward model largely over-estimates
the translation quality of translations with major
faults. Hence it is not desirable to optimize to-
wards this signal directly.

Bandit-to-Supervised Conversion. In the fol-
lowing setup, we utilize the user ratings to filter
the log by using only five star rated translations,
and perform supervised learning of MLE and MIX
using sBLEU against pseudo-references as reward
function. Table 4 shows that this filtering strat-
egy leads to large improvements over the baseline,
for MLE and even more for MIX, even though
the data set size is reduced by 42%. However,
around the same improvements can be achieved
with a random selection of logged translations of
the same size (MIX small, containing 55% five-
star ratings). Using all logged translations for
training MIX achieves the best results. This sug-
gests that the model does not profit from the feed-
back, but mostly from being exposed to in-domain
translations of the logging system. This effect is
similar to training on pseudo-references created by
back-translation (Sennrich et al., 2016b,a).

5.4 Task-Based Implicit Feedback

Bandit-to-Supervised Conversion. We apply
the same filtering technique to the logged implicit
feedback by treating translations with recall = 1
as references for training MIX with sBLEU (re-
duction of the data set by 62%). The results in Ta-
ble 5 show that large improvements over the base-
line can be obtained even without filtering, BLEU
and TER scores being comparable to the ones ob-
served for training on explicit user ratings.

Task-based Feedback. The key difference be-
tween the implicit feedback collected in the query-

97



Model Test BLEU Test TER

BL 28.38 57.58

DPM 28.19 57.80
DPM-random 28.19 57.64
DC 28.41±0.85 64.25±1.66

MLE (all) 31.98 51.08
MIX (all) 34.47±0.06 47.97±0.18
MIX (small) 34.16±0.09 48.12±0.33
MIX (stars = 5) 34.35±0.11 47.99±0.13

Table 4: Results for models trained on explicit user ratings
evaluated on the product titles test set. ‘small’ indicates a
random subset of logged translations of the same size as the
filtered log that only contains translations with an average rat-
ing of five stars (‘stars = 5’). The differences in BLEU are
not significant at p ≤ 0.05 between MIX models, but over
other models.

Model Test BLEU Test TER

BL 28.38 57.58

MLE (all) 31.89 51.35
MIX (all) 34.39±0.08 47.94±0.24
MIX (small) 34.13±0.26 48.27±0.60
MIX (recall = 1) 34.17±0.02 47.72±0.26

W-MIX 34.52±0.02 46.91±0.03

Table 5: Results for models trained on implicit task-based
feedback data evaluated on the product titles test set. ‘small’
indicates a random subset of logged translations of the same
size as the filtered log that only contains translations that con-
tain all the query words (‘recall = 1’). The BLEU score of
MIX (small) significantly differs from MIX (all) at p ≤ 0.05,
the score of MIX (recall = 1) does not. Other differences are
significant.

title data and the explicit user ratings, is that it
can be used to define reward functions like re-
call or match (Equations 2, 1). For the exper-
iments we train W-MIX, the word-based MRT
objective (Equation 5) linearly combined with
MLE, on the logged translations accompanying
the queries (160k sentences). This combination is
essential here, since the model would otherwise
learn to produce translations that contain noth-
ing but the query words. To account for user-
generated language in the queries and subwords
in the MT model, we soften the conditions for a
match, counting tokens as a match that are part
of a word w that is either contained in the query,
or has edit distance to a word in the query with
dist(w,qi) < max(3, 0.3× |w|).

Table 6 repeats the best MIX results from Table
4 and 5, and evaluates the models with respect to
query recall. We also report the query recall for the
logged translations and the out-of-domain base-
line. These results are compared to W-MIX train-
ing on implicit feedback data described in Sec-

Logged BL MIX (Tab. 4) MIX (Tab. 5) W-MIX

65.33 45.96 62.92±0.56 63.21±0.24 68.12±0.27

Table 6: Query recall results on the query test set, comparing
the logged translations, the baseline and the best MIX mod-
els trained on logged translations (MIX (all) from Tables 4
and 5) with the W-MIX model trained via word-based query
matching (W-MIX from Table 5).

tion 3.2. The development portion of the query-
title dataset contains 4,065 sentences, the test set
2,000 sentences, which is used for query recall
evaluation. The W-MIX model shows the largest
improvement in query recall (12% points) and
BLEU (6 points) over the baseline out of all tested
learning approaches. It comes very close to the
BLEU/TER results of the model trained on in-
domain references, but surpasses its recall by far.
This is remarkable since the model does not use
any human generated references, only logged data
of task-based human feedback. Appendix F con-
tains a set of examples illustrating what the W-
MIX learned.

6 Conclusion

We presented methods to improve NMT from
human reinforcement signals. The signals were
logged from user activities of an e-commerce plat-
form and consist of explicit ratings on a five-point
Likert scale and implicit task-based feedback col-
lected in a cross-lingual search task. We found that
there are no improvements when learning from
user star ratings, unless the noisy ratings them-
selves are stripped off in a bandit-to-supervised
conversion. Implicit task-based feedback can be
used successfully as a reward signal for NMT op-
timization, leading to improvements both in terms
of enforcing individual word translations and in
terms of automatic evaluation measures. In the
future, we plan transfer these findings to produc-
tion settings by performing regular NMT model
updates with batches of collected user behavior
data, especially focusing on improving translation
of ambiguous and rare terms based on rewards
from implicit partial feedback.

Acknowledgements

The last author was supported in part by DFG Re-
search Grant RI 2221/4-1. We would like to thank
Pavel Petrushkov for helping with the NMT setup,
and the anonymous reviewers for their insightful
comments .

98



References
Martı́n Abadi, Ashish Agarwal, Paul Barham, Eugene

Brevdo, Zhifeng Chen, Craig Citro, Greg S. Cor-
rado, Andy Davis, Jeffrey Dean, Matthieu Devin,
Sanjay Ghemawat, Ian Goodfellow, Andrew Harp,
Geoffrey Irving, Michael Isard, Yangqing Jia, Rafal
Jozefowicz, Lukasz Kaiser, Manjunath Kudlur, Josh
Levenberg, Dan Mané, Rajat Monga, Sherry Moore,
Derek Murray, Chris Olah, Mike Schuster, Jonathon
Shlens, Benoit Steiner, Ilya Sutskever, Kunal Tal-
war, Paul Tucker, Vincent Vanhoucke, Vijay Va-
sudevan, Fernanda Viégas, Oriol Vinyals, Pete War-
den, Martin Wattenberg, Martin Wicke, Yuan Yu,
and Xiaoqiang Zheng. 2015. TensorFlow: Large-
scale machine learning on heterogeneous systems.
https://www.tensorflow.org/.

Dzmitry Bahdanau, Philemon Brakel, Kelvin Xu,
Anirudh Goyal, Ryan Lowe, Joelle Pineau, Aaron
Courville, and Yoshua Bengio. 2017. An actor-critic
algorithm for sequence prediction. In 5th Inter-
national Conference on Learning Representations.
Toulon, France.

Dzmitry Bahdanau, Kyunghyun Cho, and Yoshua Ben-
gio. 2015. Neural machine translation by jointly
learning to align and translate. In Third Interna-
tional Conference on Learning Representations. San
Diego, California.

Léon Bottou, Jonas Peters, Joaquin Quiñonero-
Candela, Denis X. Charles, D. Max Chickering,
Elon Portugaly, Dipanakar Ray, Patrice Simard, and
Ed Snelson. 2013. Counterfactual reasoning and
learning systems: The example of computational ad-
vertising. Journal of Machine Learning Research
14:3207–3260.

Iacer Calixto, Daniel Stein, Evgeny Matusov, Pintu Lo-
har, Sheila Castilho, and Andy Way. 2017. Using
images to improve machine-translating e-commerce
product listings. In Proceedings of the 15th Confer-
ence of the European Chapter of the Association for
Computational Linguistics. Valencia, Spain.

Jonathan H. Clark, Chris Dyer, Alon Lavie, and
Noah A. Smith. 2011. Better hypothesis testing for
statistical machine translation: Controlling for opti-
mizer instability. In Proceedings of the 49th Annual
Meeting of the Association for Computational Lin-
guistics: Human Language Technologies. Portland,
Oregon.

Miroslav Dudı́k, John Langford, and Lihong Li. 2011.
Doubly robust policy evaluation and learning. In
Proceedings of the 28th International Conference on
Machine Learning. Bellevue, Washington.

Joseph L Fleiss. 1971. Measuring nominal scale agree-
ment among many raters. Psychological bulletin
76(5):378.

Y Gal and Z Ghahramani. 2016. Dropout as a bayesian
approximation: Representing model uncertainty in

deep learning. In 33rd International Conference on
Machine Learning. New York City, NY.

Sébastien Jean, Kyunghyun Cho, Roland Memisevic,
and Yoshua Bengio. 2015. On using very large
target vocabulary for neural machine translation.
In Proceedings of the 53rd Annual Meeting of the
Association for Computational Linguistics and the
7th International Joint Conference on Natural Lan-
guage Processing. Beijing, China.

Nan Jiang and Lihong Li. 2016. Doubly robust off-
policy value evaluation for reinforcement learning.
In Proceedings of the 33rd International Conference
on Machine Learning (ICML). New York, NY.

Yoon Kim. 2014. Convolutional neural networks for
sentence classification. In Proceedings of the 2014
Conference on Empirical Methods in Natural Lan-
guage Processing. Doha, Qatar.

Diederik Kingma and Jimmy Ba. 2014. Adam: A
method for stochastic optimization. arXiv preprint
arXiv:1412.6980 .

Philipp Koehn, Hieu Hoang, Alexandra Birch, Chris
Callison-Burch, Marcello Federico, Nicola Bertoldi,
Brooke Cowan, Wade Shen, Christine Moran,
Richard Zens, et al. 2007. Moses: Open source
toolkit for statistical machine translation. In Pro-
ceedings of the 45th Annual Meeting of the Asso-
ciation for Computational Linguistics: Interactive
Poster and Demonstration Sessions. Prague, Czech
Republic.

Julia Kreutzer, Artem Sokolov, and Stefan Riezler.
2017. Bandit structured prediction for neural
sequence-to-sequence learning. In Proceedings of
the 55th Annual Meeting of the Association for Com-
putational Linguistics. Vancouver, Canada.

John Langford, Alexander Strehl, and Jennifer Wort-
man. 2008. Exploration scavenging. In Proceed-
ings of the 25th International Conference on Ma-
chine Learning (ICML). Helsinki, Finland.

Carolin Lawrence, Pratik Gajane, and Stefan Riezler.
2017a. Counterfactual learning for machine transla-
tion: Degeneracies and solutions. In Proceedings of
the NIPS WhatIF Workshop. Long Beach, CA.

Carolin Lawrence, Artem Sokolov, and Stefan Riezler.
2017b. Counterfactual learning from bandit feed-
back under deterministic logging : A case study in
statistical machine translation. In Proceedings of the
2017 Conference on Empirical Methods in Natural
Language Processing. Copenhagen, Denmark.

Hoa T. Le, Christophe Cerisara, and Alexandre De-
nis. 2017. Do convolutional networks need to
be deep for text classification ? arXiv preprint
arXiv:1707.04108 .

99



Minh-Thang Luong and Christopher D Manning. 2015.
Stanford neural machine translation systems for spo-
ken language domains. In Proceedings of the In-
ternational Workshop on Spoken Language Transla-
tion. Da Nang, Vietnam.

Khanh Nguyen, Hal Daumé III, and Jordan Boyd-
Graber. 2017. Reinforcement learning for bandit
neural machine translation with simulated human
feedback. In Proceedings of the 2017 Conference on
Empirical Methods in Natural Language Process-
ing. Copenhagen, Denmark.

Doina Precup, Richard S. Sutton, and Satinder P. Singh.
2000. Eligibility traces for off-policy policy eval-
uation. In Proceedings of the Seventeenth Inter-
national Conference on Machine Learning (ICML).
San Francisco, CA.

Rico Sennrich, Barry Haddow, and Alexandra Birch.
2016a. Edinburgh neural machine translation sys-
tems for wmt 16. In Proceedings of the First Con-
ference on Machine Translation. Berlin, Germany.

Rico Sennrich, Barry Haddow, and Alexandra Birch.
2016b. Improving neural machine translation mod-
els with monolingual data. In Proceedings of the
54th Annual Meeting of the Association for Compu-
tational Linguistics. Berlin, Germany.

Rico Sennrich, Barry Haddow, and Alexandra Birch.
2016c. Neural machine translation of rare words
with subword units. In Proceedings of the 54th An-
nual Meeting of the Association for Computational
Linguistics. Berlin, Germany.

Shiqi Shen, Yong Cheng, Zhongjun He, Wei He, Hua
Wu, Maosong Sun, and Yang Liu. 2016. Minimum
risk training for neural machine translation. In Pro-
ceedings of the 54th Annual Meeting of the Asso-
ciation for Computational Linguistics. Berlin, Ger-
many.

Matthew Snover, Bonnie Dorr, Richard Schwartz, Lin-
nea Micciulla, and John Makhoul. 2006. A study
of translation edit rate with targeted human annota-
tion. In Proceedings of the 7th Conference of the
Association for Machine Translation in the Ameri-
cas. Cambridge, Massachusetts.

Artem Sokolov, Julia Kreutzer, Christopher Lo, and
Stefan Riezler. 2016a. Learning structured predic-
tors from bandit feedback for interactive nlp. In Pro-
ceedings of the 54th Annual Meeting of the Asso-
ciation for Computational Linguistics. Berlin, Ger-
many.

Artem Sokolov, Julia Kreutzer, Stefan Riezler, and
Christopher Lo. 2016b. Stochastic structured pre-
diction under bandit feedback. In Advances in
Neural Information Processing Systems. Barcelona,
Spain.

Artem Sokolov, Julia Kreutzer, Kellen Sunder-
land, Pavel Danchenko, Witold Szymaniak, Hagen
Fürstenau, and Stefan Riezler. 2017. A shared

task on bandit learning for machine translation. In
Proceedings of the Second Conference on Machine
Translation. Copenhagen, Denmark.

Alexander L. Strehl, John Langford, Lihong Li, and
Sham M. Kakade. 2010. Learning from logged
implicit exploration data. In Advances in Neural
Information Processing Sytems (NIPS). Vancouver,
Canada.

Adith Swaminathan and Thorsten Joachims. 2015. The
self-normalized estimator for counterfactual learn-
ing. In Advances in Neural Information Processing
Systems (NIPS). Montreal, Canada.

Jörg Tiedemann. 2009. News from opus-a collection
of multilingual parallel corpora with tools and inter-
faces. In Recent advances in natural language pro-
cessing. volume 5, pages 237–248.

Ronald J Williams. 1992. Simple statistical gradient-
following algorithms for connectionist reinforce-
ment learning. Machine learning 8:229–256.

Yonghui Wu, Mike Schuster, Zhifeng Chen, Quoc V
Le, Mohammad Norouzi, Wolfgang Macherey,
Maxim Krikun, Yuan Cao, Qin Gao, Klaus
Macherey, et al. 2016. Google’s neural ma-
chine translation system: Bridging the gap between
human and machine translation. arXiv preprint
arXiv:1609.08144 .

100



A Appendix Overview

Section B provides the instructions that were given
to the annotators when judging MT quality. In
Section C we provide histograms for simulated
and explicit rewards. Section D contains details
on the data and NMT model hyperparameters. In
Section E we give results for simulation experi-
ments on the e-commerce product title domain and
a publicly available data set. Finally, we compare
translation examples of different models in Sec-
tion F.

B Annotation Instructions

B.1 Star Ratings
Please rate the translation quality of the segments
on the scale from 1 to 5. Focus on whether or not
the information contained in the source sentence
is correctly and completely translated (ratings 1 -
4). Then, if you are ready to give a 4 based on
the criteria below, check whether or not you can
assign a 5 instead of the 4, focusing on remain-
ing grammatical, morphological and stylistic er-
rors. Remember that even a very fluent translation
that looks like a human-produced sentence can re-
ceive a bad rating if it does not correctly convey
all the information that was present in the source.

Assign the following ratings from 1 to 5:

1. Important information is missing and/or dis-
torted in the translation, and the error is so se-
vere that it may lead to erroneous perception
of the described product. Or the translation
contains profanities/insulting words.

2. Information from the source is partially
present in the translation, but important in-
formation is not translated or translated in-
correctly.

3. The most important information from the
source is translated correctly, but some other
less important information is missing or
translated incorrectly.

4. All of the information from the source is con-
tained in the translation. This should be the
only criterion to decide between 1-3 and 4.
It is okay for a 4-rated translation to con-
tain grammatical errors, disfluencies, or word
choice that is not very appropriate to the style
of the input text. There might be errors in cas-
ing of named entities when it is clear from the
context that these are named entities.

5. All of the information from the source is con-
tained in the translation and is translated cor-
rectly. In contrast to a 4-rated translation,
the translation is fluent, easy to read, and
contains either no or very minor grammati-
cal/morphological/stylistic errors. The brand
names and other named entities have the cor-
rect upper/lower case.

B.2 Binary Judgment
The customers of the eBay e-commerce platform,
when presented with a title translation on the prod-
uct page, can hover with the mouse over the trans-
lation of the title and see the original (source) title
in a pop-up window. There, they have the possi-
bility to rate the translation with 1 to 5 stars.

The goal of this evaluation is to check the rat-
ings - you have to mark “Agree” when you agree
with the rating and “Disagree” otherwise. The rat-
ing (number from 1 to 5) is shown in the Reference
line.

Note that eBay customers did not have any in-
structions on what the rating of 5 stars, 3 stars, or
4 stars means. Thus, the evaluation is subjective
on their side. Please apply your common sense
when agreeing or disagreeing with human judg-
ment. The focus should be on adequacy (correct
information transfer) as opposed to fluency.

C Rewards

C.1 Reward Distributions
Figure 3 shows the distribution of logged user
star ratings, Figure 4 the distribution of sentence
BLEU (sBLEU) scores for the simulation experi-
ments with logged feedback. The logged transla-
tions for the user star ratings were generated by the
production system, the logged translations for the
simulation were generated by the BL NMT sys-
tem.

D Training Details

D.1 Data
We conduct experiments on an English-to-Spanish
e-commerce item titles translation task. The in-
domain data for training with simulated feed-
back is composed of in-house eBay data (item
titles, descriptions, etc.). The out-of-domain
data for training the baselines contains only pub-
licly available parallel corpora, that is Europarl,
TAUS, and OpenSubtitles released by the OPUS
project (Tiedemann, 2009). The out-of-domain

101



Figure 3: Distribution of user star ratings. The original rat-
ings on a five-star scale are averaged per title and rescaled.

Figure 4: Distribution of sentence BLEUs of the product title
training set when translated with the out-of-domain baseline
for simulation experiments.

data has been sub-sampled according to the sim-
ilarity to the domain of the product title data, and
25% of the most similar sentence pairs have been
selected. The corpus statistics for parallel data are
shown in Table 7. Before calculating the corpus
statistics, we apply pre-processing including tok-
enization and replacement of numbers and product
specifications with a placeholder token (e.g., ‘6S’,
and ‘1080p’). Table 8 gives an overview of the
type and the size of the translations with feedback.

D.2 NMT Model Architecture

The NMT has a bi-directional RNN encoder with
one layer of 1000 GRUs, a decoder with 1000
GRUs, and source and target word embeddings
of size 620. The vocabulary is generated from
the out-of-domain training corpus with 40k byte-
pair merges (Sennrich et al., 2016c) and contains
40813 source tokens and 41050 target tokens. The
full softmax is approximated by 1024 samples as
proposed in (Jean et al., 2015). Dropout (Gal and
Ghahramani, 2016) is applied with probability p =
0.1 to the embedding matrices, with p = 0.2 to the

En Es

Train: Sentences 2,741,087
Tokens 17,139,416 18,270,753

Vocabulary 327,504 393,757
Singletons 162,834 190,686

Dev.: Sentences 1,619
Tokens 29,063 31,813

Vocabulary 11,314 11,532
OOVs 2,645 2,493

Test Sentences 1000
Tokens 9,851 11,221

Vocabulary 6,735 6,668
OOVs 1,966 1,902

Table 7: Corpus statistics for the out-of domain training data
and in-domain dev and test data.

Description Size

User star ratings 69,412
. . . with 5 stars 40,064

Expert star ratings 1,000
Expert judgments 2,000

Query-title pairs 164,065
. . . with recall = 1 61,965

Title translations 62,162

Table 8: Data set sizes for collected feedback in number of
sentences. The in-domain title translations are only used for
simulation experiments.

input and recurrent connections of the RNNs.

D.3 NMT Training Hyperparameters
The out-of-domain model is trained with mini-
batches of size 100 and L2 regularization with
weight 1× 10−7, optimized with Adam (Kingma
and Ba, 2014) with initial α = 0.0002, then de-
caying α by 0.9 each epoch.

The remaining models are trained with constant
learning rates and mini-batch size 30, regulariza-
tion and dropout stay the same. The settings for
the other hyperparameters are listed in Table 9.
The estimator loss weight is only relevant for DC,
where the pre-trained estimator gets further fine-
tuned during DC training.

D.4 Reward Estimation
We find that for reward estimation a shallow CNN
architecture with wide filters performs superior to
a deeper CNN architecture (Le et al., 2017) and
also to a recurrent architecture. Hence, we use
one convolutional layer with ReLU activation of

102



Model Adam’s α Length-Normalization MRT α Sample Size k MIX λ Estimator Loss Weight

Simulated Feedback

MLE 0.002 - - - - -
MIX 0.002 - 0.005 5 0.05 -
EL 2× 10−6 - - - - -
DPM 2× 10−6 x - - - -
DPM-random 2× 10−6 x - - - -
DC 0.002 - - 5 - 1000

Explicit Star Rating Feedback

DPM 2× 10−6 x - - - -
DPM-random 2× 10−6 x - - - -
DC 2× 10−6 x - 5 - 1000
MLE (all) 0.002 - - - - -
MIX (all) 0.002 - 0.005 5 0.05 -
MIX (small) 0.002 - 0.005 5 0.05 -
MIX (stars=5) 0.002 - 0.005 5 0.05 -

Implicit Task-Based Feedback

MLE (all) 0.002 - - - - -
MIX (all) 0.002 - 0.005 5 0.05 -
MIX (small) 0.002 - 0.005 5 0.05 -
MIX (recall=1) 0.002 - 0.005 5 0.05 -
W-MIX 0.002 - 0.005 5 0.05 -

Table 9: Hyperparameter settings for training of the models.

nf filters each for filter sizes from 2 to 15, captur-
ing both local and more global features. For re-
ward estimation on star ratings, nf = 100 and on
simulated sBLEU nf = 20 worked best. Dropout
with p = 0.5 is applied before the output layer
for the simulation setting. We set Tmax = 60.
The loss of each item in the batch is weighted by
inverse frequency of its feedback in the current
batch (counted in 10 buckets) to counterbalance
skewed feedback distributions. The model is op-
timized with Adam (Kingma and Ba, 2014) (con-
stant α = 0.001 for star ratings, α = 0.002 for
the simulation) on minibatches of size 30. Note
that the differences in hyper-parameters between
both settings are the result of tuning and do not
cause the difference in quality of the resulting es-
timators. We do not evaluate on a separate test set,
since their final quality can be measured in how
much well they serve as policy evaluators in coun-
terfactual learning.

E Simulated Bandit Feedback

Expected Loss. When rewards can be retrieved
for sampled translations during learning, the On-
line Bandit Structured Prediction framework pro-
posed by Sokolov et al. (2016a,b) can be ap-
plied for NMT, as demonstrated in Kreutzer et al.

(2017); Sokolov et al. (2017). The Expected Loss
objective (EL, Equation 8) maximizes5 the expec-
tation of a reward over all source and target se-
quences, and does in principle not require refer-
ences:

REL(θ) =Ep(x)pθ(ỹ|x) [∆(ỹ)] . (8)

While we could not apply it to the logged user
feedback since it was obtained offline, we can
compare to its performance in a simulation setting
with simulated rewards instead of human feed-
back. It is expected to outperform methods learn-
ing with logged feedback due to the exploration
during learning. In the following simulation ex-
periments, ∆(ỹ) is computed by comparing a
sampled translation ỹ ∼ pθ(y|x) to a given ref-
erence translation y with smoothed sentence-level
BLEU (sBLEU).

E.1 E-commerce Product Titles
We test several of the proposed learning tech-
niques with an in-domain parallel corpus (62,162
sentences) of product titles where bandit feedback
is simulated by evaluating a sampled translation
against a reference using sBLEU. Similar to pre-
vious studies on SMT (Lawrence et al., 2017b),

5We use the terms reward or loss interchangeably depend-
ing on minimization or maximization contexts.

103



Learning Model Test BLEU Test TER

Pre-trained BL 28.38 57.58

Fully Supervised
MLE 31.72 53.02
MIX 34.79±0.02 48.56±0.02

Online Bandit EL 31.78±0.06 51.11±0.36

Counterfactual
DPM 30.19 56.28
DPM-random 28.20 57.89
DC 31.11±0.34 55.05±0.02

Table 10: Results for simulation experiments evaluated on
the product titles test set.

Model SMT NMT (beam search) NMT (greedy)

EP BL 25.27 27.55 26.32
NC BL – 22.35 19.63

MLE 28.08 32.48 31.04

EL – 28.02 27.93

DPM 26.24 27.54 26.36
DC 26.33 28.20 27.39

Table 11: BLEU results for simulation models evaluated on
the News Commentary test set (nc-test2007) with beam
search and greedy decoding. SMT results are from Lawrence
et al. (2017b).

this reward is deterministic and does not contain
user-dependent noise.

Supervised Fine-Tuning. When fine-tuning the
baseline model on in-domain references (Luong
and Manning, 2015), the model improves 3.34
BLEU (MLE in Table 10) on an in-domain test
set (1,000 sentences). By tuning it on the same
in-domain data for sBLEU with MIX, it gains an-
other 3 BLEU points.

Bandit Learning. When feedback is given to
only one translation per input (=online bandit
feedback), the model (EL) achieves comparable
performance to MLE training with references.
When the feedback is logged offline for one round
of deterministic outputs of the baseline model
(=offline bandit feedback), we can still find im-
provements of 1.81 BLEU (DPM). With a reward
estimator trained on this log, DC achieves even
higher improvements of 3 BLEU. To test the con-
tribution of the feedback in contrast to a simple
in-domain training effect, we randomly perturbed
the pairing of feedback signal and translation and
retrain (DPM-random). This clearly degrades re-
sults, confirming feedback to be a useful signal
rather than noise.

E.2 Results on Publicly Available Data
Simulation experiments were also run on publicly
available data. We use the same data, prepro-
cessing and splits as (Lawrence et al., 2017b) to
compare with their French-to-English news exper-
iments on counterfactual learning with determin-
istically logged feedback for statistical machine
translation (SMT). The baseline model is trained
with MLE on 1.6M Europarl (EP) translations,
bandit feedback is then simulated from 40k News
Commentary (NC) translations. For the compari-
son of full supervision vs. weak feedback, we train
in-domain models with MLE on in-domain NC
references: training only on in-domain data (NC
BL), and fine-tuning the out-of-domain baseline
(EP BL) on in-domain data (MLE). The results
are given in Table 11. The NMT baselines out-
perform the SMT equivalents. With fully super-
vised fine-tuning the NMT models improve over
the out-of-domain baseline (EP BL) by 5 BLEU
points, outperforming also the in-domain base-
line (NC BL). Moving to weak feedback, we still
find improvements over the baseline by 0.5 BLEU
with beam search and 1.6 BLEU with greedy de-
coding for online feedback (EL), and 0.6 BLEU
with beam search and 1 BLEU with greedy decod-
ing for counterfactual learning with DC. However,
DPM performs worse than for SMT and those not
manage to improve over the out-of-domain base-
line. Nevertheless these results confirm that – at
least in simulation settings – the DC objective is
very suitable for counterfactual learning from ban-
dit feedback for NMT, almost reaching the gains
of learning from online bandit feedback.

F Examples

Table 12 gives an example where W-MIX train-
ing improved lexical translation choices. Table 13
lists two examples of W-MIX translations in com-
parison to the baseline and logged translations for
given queries and product titles to illustrate the
specific difficulties of the domain.

104



Title (en) hall linvatec pro2070 powerpro ao drill synthes dhs & dcs attachment / warranty

Reference-0 (es) hall linvatec pro2070 powerpro ao taladro synthes dhs & dcs accesorio / garantı́a
Reference-1 (es) hall linvatec pro2070 powerpro synthes , perforación , accesorio de dhs y dcs , todo original , garantı́a

BL (es) hall linvatec pro2070 powerpro ao perforadora synthes dhs & dcs adjuntos / garantı́a

MIX on star-rated titles (es) hall linvatec pro2070 powerpro ao perforadora synthes dhs & dcs adjuntos / garantı́a
MIX on query-titles, small (es) hall linvatec pro2070 powerpro ao perforadora synthes dhs & dcs adjuntos / garantı́a
MIX on query-titles, all (es) hall linvatec pro2070 powerpro ao taladro synthes dhs & dcs adjuntos / garantı́a
W-MIX hall linvatec pro2070 powerpro ao taladro synthes dhs & dcs accesorio / garantı́a

Table 12: Example for product title translation from the test set where W-MIX improved the lexical choice over BL and MIX on
in-domain title set and MIX on full query-title set (‘perforadora’ vs ‘taladro’ as translation for ‘drill’, ‘adjuntos’ vs ‘accesorio’
as translation for ‘attachment’).

Title (en) Unicorn Thread 12pcs Makeup Brushes Set Gorgeous Colorful Foundation Brush

Query (es) unicorn brushes // makeup brushes // brochas de unicornio // brochas unicornio
Query (en) unicorn brushes // makeup brushes

BL (es) galletas de maquillaje de 12pcs
Log (es ) Unicorn Rosca 12 un. Conjunto de Pinceles para Maquillaje Hermosa Colorida Base Cepillo

W-MIX unicornio rosca 12pcs brochas maquillaje conjunto precioso colorido fundación cepillo

Title (en) 12 ×Men Women Plastic Shoe Boxes 33*20*12cm Storage Organisers Clear Large Boxes
Query (es) cajas plasticas para zapatos
Query (en) plastic shoe boxes

BL (es) 12 × hombres mujeres zapatos de plástico cajas de almacenamiento 33*20*12cm organizadores de gran tamaño
Log (es) 12 × Zapato De Hombre Mujer De Plástico Cajas Organizadores de almacenamiento 33*20*12cm cajas Grande Claro
W-MIX 12 × para hombres zapatos de plástico cajas de plástico 33*20*12cm almacenamiento organizador transparente grandes cajas

Table 13: Examples for product title translations of the logged query test set. In the first example, the W-MIX model improves
the translation of “brushes”, but also chooses a worse translation for “foundation” (“fundación” vs “base”). In the second
example, one of the tricky parts is to translate the sequence of nouns “Men Women Plastic Shoe Boxes” and to disambiguate
the relations between them. The BL model translates “shoes of plastic”, the Log has “woman of plastic” and the W-MIX
model makes it “shoes of plastic” and “boxes of plastic”. The W-MIX model learns to use “para” from the query, but omits the
translation of “women”.

105


