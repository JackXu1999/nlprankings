



















































Are Girls Neko or Shōjo? Cross-Lingual Alignment of Non-Isomorphic Embeddings with Iterative Normalization


Proceedings of the 57th Annual Meeting of the Association for Computational Linguistics, pages 3180–3189
Florence, Italy, July 28 - August 2, 2019. c©2019 Association for Computational Linguistics

3180

Are Girls Neko or Shōjo? Cross-Lingual Alignment of Non-Isomorphic
Embeddings with Iterative Normalization

Mozhi Zhang1 Keyulu Xu2 Ken-ichi Kawarabayashi3
Stefanie Jegelka2 Jordan Boyd-Graber1

1University of Maryland, College Park, Maryland, USA
2Massachusetts Institute of Technology, Cambridge, Massachusetts, USA

3National Institue of Informatics, Tokyo, Japan
{mozhi,jbg}@umiacs.umd.edu {keyulu,stefje}@mit.edu k_keniti@nii.ac.jp

Abstract

Cross-lingual word embeddings (CLWE) un-
derlie many multilingual natural language
processing systems, often through orthogo-
nal transformations of pre-trained monolin-
gual embeddings. However, orthogonal map-
ping only works on language pairs whose em-
beddings are naturally isomorphic. For non-
isomorphic pairs, our method (Iterative Nor-
malization) transforms monolingual embed-
dings to make orthogonal alignment easier by
simultaneously enforcing that (1) individual
word vectors are unit length, and (2) each lan-
guage’s average vector is zero. Iterative Nor-
malization consistently improves word trans-
lation accuracy of three CLWE methods, with
the largest improvement observed on English-
Japanese (from 2% to 44% test accuracy).

1 Orthogonal Cross-Lingual Mappings

Cross-lingual word embedding (CLWE) models
map words from multiple languages to a shared vec-
tor space, where words with similar meanings are
close, regardless of language. CLWE is widely used
in multilingual natural language processing (Kle-
mentiev et al., 2012; Guo et al., 2015; Zhang et al.,
2016). Recent CLWE methods (Ruder et al., 2017;
Glavas et al., 2019) independently train two mono-
lingual embeddings on large monolingual corpora
and then align them with a linear transformation.
Previous work argues that these transformations
should be orthogonal (Xing et al., 2015; Smith
et al., 2017; Artetxe et al., 2016): for any two
words, the dot product of their representations is
the same as the dot product with the transformation.
This preserves similarities and substructure of the
original monolingual word embedding but enriches
the embeddings with multilingual connections be-
tween languages.

Thus, many state-of-the-art mapping-based
CLWE methods impose an orthogonal con-

straint (Artetxe et al., 2017; Conneau et al., 2018;
Alvarez-Melis and Jaakkola, 2018; Artetxe et al.,
2018; Ruder et al., 2018; Alvarez-Melis et al.,
2019). The success of orthogonal methods relies on
the assumption that embedding spaces are isomor-
phic; i.e., they have the same inner-product struc-
tures across languages, but this does not hold for
all languages (Søgaard et al., 2018; Fujinuma et al.,
2019). For example, English and Japanese fastText
vectors (Bojanowski et al., 2017) have different
substructures around “girl” (Figure 1 left). As a re-
sult, orthogonal mapping fails on some languages—
when Hoshen and Wolf (2018) align fastText em-
beddings with orthogonal mappings, they report
81% English–Spanish word translation accuracy
but only 2% for the more distant English–Japanese.

While recent work challenges the orthogonal as-
sumption (Doval et al., 2018; Joulin et al., 2018;
Jawanpuria et al., 2019), we focus on whether sim-
ple preprocessing techniques can improve the suit-
ability of orthogonal models. Our iterative method
normalizes monolingual embeddings to make their
structures more similar (Figure 1), which improves
subsequent alignment.

Our method is motivated by two desired prop-
erties of monolingual embeddings that support or-
thogonal alignment:

1. Every word vector has the same length.
2. Each language’s mean has the same length.

Standard preprocessing such as dimension-wise
mean centering and length normalization (Artetxe
et al., 2016) do not meet the two requirements at
the same time. Our analysis leads to Iterative Nor-
malization, an alternating projection algorithm that
normalizes any word embedding to provably satisfy
both conditions. After normalizing the monolin-
gual embeddings, we then apply mapping-based
CLWE algorithms on the transformed embeddings.



3181

彼女
kanojo
“she”

少年
shōnen
“boy”

少女
shōjo
“girl”

猫
neko
“cat”

妹
imōto

“sister”

娘
musume

“daughter”

.98

.98

.98
.98

.98

girls

woman

girl

teenager

teenage

boy

.65

.62

.59
.58

.58

girls

woman

girl

teenager

teenage

boy

.62

.57

.55
.54

.53

女の子
onna no ko

“girls”

少年
shōnen
“boy”

少女
shōjo
“girl”

美少女
 bishōjo

“pretty girl”

乙女
otome

“maiden”

魔法
mahō

“magic” .48

.56

.51

.51
.48

Iterative 
Normalization

Iterative 
Normalization

Figure 1: The most similar Japanese words for 少女 (shōjo “girl”) and English words for “girl”, measured by
cosine similarity on Wikipedia fastText vectors, before (left) and after (right) Iterative Normalization. In the
original embedding spaces, “boy” is the nearest neighbor for both languages but with a very different cosine
similarity, and “cat” in English is not close to “girl”: both violate the isomorphism assumed by an orthogonal
transformation for cross-lingual representations. Iterative Normalization replaces 猫 (neko “cat”) with the more
relevant美少女 (bishōjo “pretty girl”) and brings cosine similarities closer.

We empirically validate our theory by combining
Iterative Normalization with three mapping-based
CLWE methods. Iterative Normalization improves
word translation accuracy on a dictionary induction
benchmark across thirty-nine language pairs.

2 Learning Orthogonal Mappings

This section reviews learning orthogonal cross-
lingual mapping between word embeddings and,
along the way, introduces our notation.

We start with pre-trained word embeddings in
a source language and a target language. We as-
sume1 all embeddings are d-dimensional, and the
two languages have the same vocabulary size n.
Let X ∈ Rd×n be the word embedding matrix for
the source language, where each column xi ∈ Rd is
the representation of the i-th word from the source
language, and let Z ∈ Rd×n be the word embed-
ding matrix for the target language. Our goal is
to learn a transformation matrix W ∈ Rd×d that
maps the source language vectors to the target lan-

1Word translation benchmarks use the same assumptions.

guage space. While our experiments focus on the
supervised case with a seed dictionaryD with trans-
lation pairs (i, j), the analysis also applies to unsu-
pervised projection.

One straightforward way to learn W is by min-
imizing Euclidean distances between translation
pairs (Mikolov et al., 2013a). Formally, we solve:

min
W

∑
(i,j)∈D

‖Wxi − zj‖22. (1)

Xing et al. (2015) further restrict W to orthogo-
nal transformations; i.e., W>W = I. The orthog-
onal constraint significantly improves word trans-
lation accuracy (Artetxe et al., 2016). However,
this method still fails for some language pairs be-
cause word embeddings are not isomorphic across
languages. To improve orthogonal alignment be-
tween non-isomorphic embedding spaces, we aim
to transform monolingual embeddings in a way that
helps orthogonal transformation.



3182

3 When Orthogonal Mappings Work

When are two embedding spaces easily aligned? A
good orthogonal mapping is more likely if word
vectors have two properties: length-invariance and
center-invariance.

Length-Invariance. First, all word vectors
should have the same, constant length. Length-
invariance resolves inconsistencies between mono-
lingual word embedding and cross-lingual map-
ping objectives (Xing et al., 2015). During train-
ing, popular word embedding algorithms (Mikolov
et al., 2013b; Pennington et al., 2014; Bojanowski
et al., 2017) maximize dot products between similar
words, but evaluate on cosine similarity. To make
things worse, the transformation matrix minimizes
a third metric, Euclidean distance (Equation 1).
This inconsistency is naturally resolved when the
lengths of word vectors are fixed. Suppose u ∈ Rd
and v ∈ Rd have the same length, then

u>v ∝ cos(u,v) = 1− 1
2
‖u− v‖22.

Minimizing Euclidean distance is equivalent to
maximizing both dot product and cosine similar-
ity with constant word vector lengths, thus making
objectives consistent.

Length-invariance also satisfies a prerequisite for
bilingual orthogonal alignment: the embeddings of
translation pairs should have the same length. If a
source word vector xi can be aligned to its target
language translation zj = Wxi with an orthogonal
matrix W, then

‖zj‖2 = ‖Wxi‖2 = ‖xi‖2, (2)

where the second equality follows from the orthogo-
nality of W. Equation (2) is trivially satisfied if all
vectors have the same length. In summary, length-
invariance not only promotes consistency between
monolingual word embedding and cross-lingual
mapping objective but also simplifies translation
pair alignment.

Center-Invariance. Our second condition is that
the mean vector of different languages should have
the same length, which we prove is a pre-requisite
for orthogonal alignment. Suppose two embed-
ding matrices X and Z can be aligned with an
orthogonal matrix W such that Z = WX. Let
x̄ = 1n

∑n
i=1 xi and z̄ =

1
n

∑n
i=1 zi be the mean

vectors. Then z̄ = Wx̄. Since W is orthogonal,

‖z̄‖2 = ‖Wx̄‖2 = ‖x̄‖2.

In other words, orthogonal mappings can only align
embedding spaces with equal-magnitude centers.

A stronger version of center-invariance is zero-
mean, where the mean vector of each language is
zero. Artetxe et al. (2016) find that centering im-
proves dictionary induction; our analysis provides
an explanation.

4 Iterative Normalization

We now develop Iterative Normalization, which
transforms monolingual word embeddings to sat-
isfy both length-invariance and center-invariance.
Specifically, we normalize word embeddings to si-
multaneously have unit-length and zero-mean. For-
mally, we produce embedding matrix X such that

‖xi‖2 = 1 for all i, (3)

and
n∑
i=1

xi = 0. (4)

Iterative Normalization transforms the embed-
dings to make them satisfy both constraints at the
same time. Let x(0)i be the initial embedding for
word i. We assume that all word embeddings are
non-zero.2 For every word i, we iteratively trans-
form each word vector xi by first making the vec-
tors unit length,

y
(k)
i = x

(k−1)
i /‖x

(k−1)
i ‖2, (5)

and then making them mean zero,

x
(k)
i = y

(k)
i −

1

n

n∑
i=1

y
(k)
i . (6)

Equation (5) and (6) project the embedding ma-
trix X to the set of embeddings that satisfy Equa-
tion (3) and (4). Therefore, our method is a form
of alternating projection (Bauschke and Borwein,
1996), an algorithm to find a point in the intersec-
tion of two closed sets by alternatively projecting
onto one of the two sets. Alternating projection
guarantees convergence in the intersection of two
convex sets at a linear rate (Gubin et al., 1967;
Bauschke and Borwein, 1993). Unfortunately, the
unit-length constraint is non-convex, ruling out the
classic convergence proof. Nonetheless, we use
recent results on alternating non-convex projec-
tions (Zhu and Li, 2018) to prove Iterative Nor-
malization’s convergence (details in Appendix A).

2For such vectors, a small perturbation is an easy fix.



3183

Method Normalization JA ZH HI TR DA DE ES

Procrustes None 1.7 32.5 33.3 44.9 54.0 73.5 81.4
C+L 12.3 41.1 34.0 46.5 54.9 74.6 81.3
IN 44.3 44.2 36.7 48.7 58.4 75.5 81.5

Procrustes + refine None 1.7 32.5 33.6 46.3 56.8 74.3 81.9
C+L 13.1 42.3 34.9 48.7 59.3 75.2 82.4
IN 44.3 44.2 37.7 51.7 60.9 76.0 82.5

RCSLS None 14.6 17.1 5.0 18.3 19.2 43.6 50.5
C+L 16.1 45.1 36.2 50.7 58.3 77.5 83.6
IN 56.3 48.6 38.0 52.4 60.5 78.1 83.9

Table 1: Word translation accuracy aligning English embeddings to seven languages. We combine three
normalizations—no normalization (None), mean centering and length normalization (C+L), and Iterative Normal-
ization (IN) for five rounds—with three CLWEs: Procrustes, Procrustes with refinement (Conneau et al., 2018), and
RCSLS (Joulin et al., 2018). Procrustes with C+L is equivalent to Artetxe et al. (2016). The best result for each
CLWE in each column in bold. Iterative Normalization has the best accuracy of the three normalization techniques.

Theorem 1. If the embeddings are non-zero after
each iteration; i.e., x(k)i 6= 0 for all i and k, then
the sequence

{
X(k)

}
produced by Iterative Nor-

malization is convergent.

All embeddings in our experiments satisfy the
non-zero assumption; it is violated only when all
words have the same embedding. In degenerate
cases, the algorithm might converge to a solution
that does not meet the two requirements. Empiri-
cally, our method always satisfy both constraints.

Previous approach and differences. Artetxe
et al. (2016) also study he unit-length and zero-
mean constraints, but our work differs in two as-
pects. First, they motivate the zero-mean condition
based on the heuristic argument that two randomly
selected word types should not be semantically sim-
ilar (or dissimilar) in expectation. While this state-
ment is attractive at first blush, some word types
have more synonyms than others, so we argue that
word types might not be evenly distributed in the
semantic space. We instead show that zero-mean is
helpful because it satisfies center-invariance, a nec-
essary condition for orthogonal mappings. Second,
Artetxe et al. (2016) attempt to enforce the two
constraints by a single round of dimension-wise
mean centering and length normalization. Unfor-
tunately, this often fails to meet the constraints at
the same time—length normalization can change
the mean, and mean centering can change vector
length. In contrast, Iterative Normalization simul-
taneously meets both constraints and is empirically
better (Table 1) on dictionary induction.

5 Dictionary Induction Experiments

On a dictionary induction benchmark, we combine
Iterative Normalization with three CLWE methods
and show improvement in word translation accu-
racy across languages.

5.1 Dataset and Methods

We train and evaluate CLWE on MUSE dictionar-
ies (Conneau et al., 2018) with default split. We
align English embeddings to thirty-nine target lan-
guage embeddings, pre-trained on Wikipedia with
fastText (Bojanowski et al., 2017). The align-
ment matrices are trained from dictionaries of
5,000 source words. We report top-1 word transla-
tion accuracy for 1,500 source words, using cross-
domain similarity local scaling (Conneau et al.,
2018, CSLS). We experiment with the following
CLWE methods.3

Procrustes Analysis. Our first algorithm uses
Procrustes analysis (Schönemann, 1966) to find
the orthogonal transformation that minimizes Equa-
tion 1, the total distance between translation pairs.

Post-hoc Refinement. Orthogonal mappings can
be improved with refinement steps (Artetxe et al.,
2017; Conneau et al., 2018). After learning an
initial mapping W0 from the seed dictionaryD, we
build a synthetic dictionary D1 by translating each
word with W0. We then use the new dictionary D1
to learn a new mapping W1 and repeat the process.

3We only report accuracy for one run, because these CLWE
methods are deterministic.



3184

Relaxed CSLS Loss (RCSLS). Joulin et al.
(2018) optimize CSLS scores between translation
pairs instead of Equation (1). RCSLS has state-of-
the-art supervised word translation accuracies on
MUSE (Glavas et al., 2019). For the ease of opti-
mization, RCSLS does not enforce the orthogonal
constraint. Nevertheless, Iterative Normalization
also improves its accuracy (Table 1), showing it
can help linear non-orthogonal mappings too.

5.2 Training Details

We use the implementation from MUSE for Pro-
crustes analysis and refinement (Conneau et al.,
2018). We use five refinement steps. For RCSLS,
we use the same hyperparameter selection strategy
as Joulin et al. (2018)—we choose learning rate
from {1, 10, 25, 50} and number of epochs from
{10, 20} by validation. As recommended by Joulin
et al. (2018), we turn off the spectral constraint. We
use ten nearest neighbors when computing CSLS.

5.3 Translation Accuracy

For each method, we compare three normalization
strategies: (1) no normalization, (2) dimension-
wise mean centering followed by length normaliza-
tion (Artetxe et al., 2016), and (3) five rounds of
Iterative Normalization. Table 1 shows word trans-
lation accuracies on seven selected target languages.
Results on other languages are in Appendix B.

As our theory predicts, Iterative Normaliza-
tion increases translation accuracy for Procrustes
analysis (with and without refinement) across lan-
guages. While centering and length-normalization
also helps, the improvement is smaller, confirm-
ing that one round of normalization is insufficient.
The largest margin is on English-Japanese, where
Iterative Normalization increases test accuracy by
more than 40%. Figure 1 shows an example of how
Iterative Normalization makes the substructure of
an English-Japanese translation pair more similar.

Surprisingly, normalization is even more impor-
tant for RCSLS, a CLWE method without orthogonal
constraint. RCSLS combined with Iterative Normal-
ization has state-of-the-art accuracy, but RCSLS is
much worse than Procrustes analysis on unnormal-
ized embeddings, suggesting that length-invariance
and center-invariance are also helpful for learning
linear non-orthogonal mappings.

Dataset Before After

WS-353 73.9 73.7
MC 81.2 83.9
RG 79.7 80.0
YP-130 53.3 57.6

Table 2: Correlations before and after applying It-
erative Normalization on four English word similar-
ity benchmarks: WS-353 (Finkelstein et al., 2002),
MC (Miller and Charles, 1991), RG (Rubenstein and
Goodenough, 1965), and YP-130 (Yang and Powers,
2006). The scores are similar, which shows that Iter-
ative Normalization retains useful structures from the
original embeddings.

5.4 Monolingual Word Similarity
Many trivial solutions satisfy both length-
invariance and center-invariance; e.g., we can map
half of words to e and the rest to−e, where e is any
unit-length vector. A meaningful transformation
should also preserve useful structure in the original
embeddings. We confirm Iterative Normalization
does not hurt scores on English word similarity
benchmarks (Table 2), showing that Iterative Nor-
malization produces meaningful representations.

6 Conclusion

We identify two conditions that make cross-lingual
orthogonal mapping easier: length-invariance and
center-invariance, and provide a simple algorithm
that transforms monolingual embeddings to satisfy
both conditions. Our method improves word trans-
lation accuracy of different mapping-based CLWE
algorithms across languages. In the future, we will
investigate whether our method helps other down-
stream tasks.

Acknowledgments

We thank the anonymous reviewers for comments.
Boyd-Graber and Zhang are supported by DARPA
award HR0011-15-C-0113 under subcontract to
Raytheon BBN Technologies. Jegelka and Xu are
supported by NSF CAREER award 1553284. Xu is
also supported by a Chevron-MIT Energy Fellow-
ship. Kawarabayashi is supported by JST ERATO
JPMJER1201 and JSPS Kakenhi JP18H05291.
Any opinions, findings, conclusions, or recommen-
dations expressed here are those of the authors and
do not necessarily reflect the view of the sponsors.



3185

References
David Alvarez-Melis and Tommi S. Jaakkola. 2018.

Gromov-wasserstein alignment of word embedding
spaces. In Proceedings of Empirical Methods in Nat-
ural Language Processing.

David Alvarez-Melis, Stefanie Jegelka, and Tommi S
Jaakkola. 2019. Towards optimal transport with
global invariances. In Proceedings of Artificial In-
telligence and Statistics.

Mikel Artetxe, Gorka Labaka, and Eneko Agirre. 2016.
Learning principled bilingual mappings of word em-
beddings while preserving monolingual invariance.
In Proceedings of Empirical Methods in Natural
Language Processing.

Mikel Artetxe, Gorka Labaka, and Eneko Agirre. 2017.
Learning bilingual word embeddings with (almost)
no bilingual data. In Proceedings of the Association
for Computational Linguistics.

Mikel Artetxe, Gorka Labaka, and Eneko Agirre. 2018.
A robust self-learning method for fully unsupervised
cross-lingual mappings of word embeddings. In Pro-
ceedings of the Association for Computational Lin-
guistics.

Heinz H. Bauschke and Jonathan M. Borwein. 1993.
On the convergence of von Neumann’s alternating
projection algorithm for two sets. Set-Valued Analy-
sis, 1(2):185–212.

Heinz H. Bauschke and Jonathan M. Borwein. 1996.
On projection algorithms for solving convex feasi-
bility problems. SIAM review, 38(3):367–426.

Piotr Bojanowski, Edouard Grave, Armand Joulin, and
Tomas Mikolov. 2017. Enriching word vectors with
subword information. Transactions of the Associa-
tion for Computational Linguistics, 5:135–146.

Felix E. Browder. 1967. Convergence of approximants
to fixed points of nonexpansive nonlinear mappings
in Banach spaces. Archive for Rational Mechanics
and Analysis, 24(1):82–90.

Alexis Conneau, Guillaume Lample, Marc’Aurelio
Ranzato, Ludovic Denoyer, and Hervé Jégou. 2018.
Word translation without parallel data. In Proceed-
ings of the International Conference on Learning
Representations.

Yerai Doval, Jose Camacho-Collados, Luis Espinosa-
Anke, and Steven Schockaert. 2018. Improving
cross-lingual word embeddings by meeting in the
middle. In Proceedings of Empirical Methods in
Natural Language Processing.

Lev Finkelstein, Evgeniy Gabrilovich, Yossi Matias,
Ehud Rivlin, Zach Solan, Gadi Wolfman, and Ey-
tan Ruppin. 2002. Placing search in context: The
concept revisited. ACM Transactions on informa-
tion systems, 20(1):116–131.

Yoshinari Fujinuma, Jordan Boyd-Graber, and
Michael J. Paul. 2019. A resource-free evaluation
metric for cross-lingual word embeddings based on
graph modularity. In Proceedings of the Association
for Computational Linguistics.

Goran Glavas, Robert Litschko, Sebastian Ruder, and
Ivan Vulic. 2019. How to (properly) evaluate cross-
lingual word embeddings: On strong baselines, com-
parative analyses, and some misconceptions. In Pro-
ceedings of the Association for Computational Lin-
guistics.

L.G. Gubin, B.T. Polyak, and E.V. Raik. 1967. The
method of projections for finding the common point
of convex sets. USSR Computational Mathematics
and Mathematical Physics, 7(6):1–24.

Jiang Guo, Wanxiang Che, David Yarowsky, Haifeng
Wang, and Ting Liu. 2015. Cross-lingual depen-
dency parsing based on distributed representations.
In Proceedings of the Association for Computational
Linguistics.

Yedid Hoshen and Lior Wolf. 2018. Non-adversarial
unsupervised word translation. In Proceedings of
Empirical Methods in Natural Language Process-
ing.

Pratik Jawanpuria, Arjun Balgovind, Anoop
Kunchukuttan, and Bamdev Mishra. 2019. Learn-
ing multilingual word embeddings in latent metric
space: a geometric approach. Transactions of
the Association for Computational Linguistics,
7:107–120.

Armand Joulin, Piotr Bojanowski, Tomas Mikolov,
Hervé Jégou, and Edouard Grave. 2018. Loss in
translation: Learning bilingual word mapping with
a retrieval criterion. In Proceedings of Empirical
Methods in Natural Language Processing.

Alexandre Klementiev, Ivan Titov, and Binod Bhattarai.
2012. Inducing crosslingual distributed representa-
tions of words. Proceedings of International Con-
ference on Computational Linguistics.

Tomas Mikolov, Quoc V. Le, and Ilya Sutskever. 2013a.
Exploiting similarities among languages for ma-
chine translation. arXiv preprint arXiv:1309.4168.

Tomas Mikolov, Ilya Sutskever, Kai Chen, Gregory S.
Corrado, and Jeffrey Dean. 2013b. Distributed rep-
resentations of words and phrases and their compo-
sitionality. In Proceedings of Advances in Neural
Information Processing Systems.

George A. Miller and Walter G. Charles. 1991. Con-
textual correlates of semantic similarity. Language
and Cognitive Processes, 6(1):1–28.

Jeffrey Pennington, Richard Socher, and Christopher D.
Manning. 2014. GloVe: Global vectors for word
representation. In Proceedings of Empirical Meth-
ods in Natural Language Processing.

https://www.aclweb.org/anthology/D18-1214
https://www.aclweb.org/anthology/D18-1214
http://proceedings.mlr.press/v89/alvarez-melis19a/alvarez-melis19a.pdf
http://proceedings.mlr.press/v89/alvarez-melis19a/alvarez-melis19a.pdf
https://doi.org/10.18653/v1/D16-1250
https://doi.org/10.18653/v1/D16-1250
https://doi.org/10.18653/v1/P17-1042
https://doi.org/10.18653/v1/P17-1042
https://www.aclweb.org/anthology/P18-1073
https://www.aclweb.org/anthology/P18-1073
https://doi.org/10.1137/S0036144593251710
https://doi.org/10.1137/S0036144593251710
https://doi.org/10.1162/tacl_a_00051
https://doi.org/10.1162/tacl_a_00051
https://openreview.net/forum?id=H196sainb
https://www.aclweb.org/anthology/D18-1027
https://www.aclweb.org/anthology/D18-1027
https://www.aclweb.org/anthology/D18-1027
https://doi.org/10.1145/503104.503110
https://doi.org/10.1145/503104.503110
https://doi.org/10.3115/v1/P15-1119
https://doi.org/10.3115/v1/P15-1119
https://www.aclweb.org/anthology/D18-1043
https://www.aclweb.org/anthology/D18-1043
https://doi.org/10.1162/tacl_a_00257
https://doi.org/10.1162/tacl_a_00257
https://doi.org/10.1162/tacl_a_00257
https://www.aclweb.org/anthology/D18-1330
https://www.aclweb.org/anthology/D18-1330
https://www.aclweb.org/anthology/D18-1330
https://www.aclweb.org/anthology/C12-1089
https://www.aclweb.org/anthology/C12-1089
http://arxiv.org/abs/1309.4168
http://arxiv.org/abs/1309.4168
http://papers.nips.cc/paper/5021-distributed-representations-of-words-and-phrases-and-their-compositionality
http://papers.nips.cc/paper/5021-distributed-representations-of-words-and-phrases-and-their-compositionality
http://papers.nips.cc/paper/5021-distributed-representations-of-words-and-phrases-and-their-compositionality
https://doi.org/10.1080/01690969108406936
https://doi.org/10.1080/01690969108406936
https://doi.org/10.3115/v1/D14-1162
https://doi.org/10.3115/v1/D14-1162


3186

Herbert Rubenstein and John B Goodenough. 1965.
Contextual correlates of synonymy. Communica-
tions of the ACM, 8(10):627–633.

Sebastian Ruder, Ryan Cotterell, Yova Kementched-
jhieva, and Anders Søgaard. 2018. A discrimina-
tive latent-variable model for bilingual lexicon in-
duction. In Proceedings of Empirical Methods in
Natural Language Processing.

Sebastian Ruder, Ivan Vulić, and Anders Søgaard.
2017. A survey of cross-lingual embedding models.
arXiv preprint arXiv:1706.04902.

Peter H. Schönemann. 1966. A generalized solution of
the orthogonal procrustes problem. Psychometrika,
31(1):1–10.

Samuel L. Smith, David H. P. Turban, Steven Hamblin,
and Nils Y. Hammerla. 2017. Offline bilingual word
vectors, orthogonal transformations and the inverted
softmax. In Proceedings of the International Con-
ference on Learning Representations.

Anders Søgaard, Sebastian Ruder, and Ivan Vulić.
2018. On the limitations of unsupervised bilingual
dictionary induction. In Proceedings of the Associa-
tion for Computational Linguistics.

Chao Xing, Dong Wang, Chao Liu, and Yiye Lin. 2015.
Normalized word embedding and orthogonal trans-
form for bilingual word translation. In Conference
of the North American Chapter of the Association
for Computational Linguistics.

Dongqiang Yang and David M. Powers. 2006. Verb
similarity on the taxonomy of wordnet. In Interna-
tional WordNet Conference.

Yuan Zhang, David Gaddy, Regina Barzilay, and
Tommi Jaakkola. 2016. Ten pairs to tag – multi-
lingual POS tagging via coarse mapping between
embeddings. In Conference of the North American
Chapter of the Association for Computational Lin-
guistics.

Zhihui Zhu and Xiao Li. 2018. Convergence analysis
of alternating nonconvex projections. arXiv preprint
arXiv:1802.03889.

https://doi.org/10.1145/365628.365657
https://www.aclweb.org/anthology/D18-1042
https://www.aclweb.org/anthology/D18-1042
https://www.aclweb.org/anthology/D18-1042
http://arxiv.org/abs/1706.04902
https://openreview.net/forum?id=r1Aab85gg
https://openreview.net/forum?id=r1Aab85gg
https://openreview.net/forum?id=r1Aab85gg
https://www.aclweb.org/anthology/P18-1072
https://www.aclweb.org/anthology/P18-1072
https://doi.org/10.3115/v1/N15-1104
https://doi.org/10.3115/v1/N15-1104
https://doi.org/10.18653/v1/N16-1156
https://doi.org/10.18653/v1/N16-1156
https://doi.org/10.18653/v1/N16-1156
http://arxiv.org/abs/1802.03889
http://arxiv.org/abs/1802.03889


3187

A Proof for Theorem 1

Our convergence analysis is based on a recent result
on alternating non-convex projections. Theorem 1
in the work of Zhu and Li (2018) states that the
convergence of alternating projection holds even if
the constraint sets are non-convex, as long as the
two constraint sets satisfy the following assump-
tion:

Assumption 1. Let X and Y be any two closed
semi-algebraic sets, and let {(xk,yk)} be the se-
quence of iterates generated by the alternating pro-
jection method (e.g., Iterative Normalization). As-
sume the sequence {(xk,yk)} is bounded and the
sets X and Y obey the following properties:

(i) three-point property of Y: there exists a non-
negative function δα : Y×Y→ R with α > 0
such that for any k ≥ 1, we have

δα
(
yk,yk−1

)
≥ α‖yk − yk−1‖2

and

δα
(
yk−1,yk

)
+‖xk−yk‖22 ≤ ‖xk−yk−1‖22,

(ii) local contraction property of X: there exist
� > 0 and β > 0 such that when ‖yk −
yk−1‖2 ≤ �, we have

‖xk+1 − xk‖2 = ‖PX(yk)− PX(yk−1)‖2
≤ β‖yk − yk−1‖2

where PX is the projection onto X.

Zhu and Li (2018) only consider sets of vectors,
but our constraint are sets of matrices. For ease
of exposition, we treat every embedding matrix
X ∈ Rd×n as a vector by concatenating the column
vectors: X = [x1,x2, · · · ,xn]. The l2-norm of
the concatenated vector ‖X‖2 is equivalent to the
Frobenius norm of the original matrix ‖X‖F .

The two operations in Iterative Normaliza-
tion, Equation (5) and (6), are projections
onto two constraint sets, unit-length set Y ={
X ∈ Rd×n : ∀i, ‖xi‖2 = 1

}
and zero-mean set

X =
{
X ∈ Rd×n :

∑n
i=1 xi = 0

}
. To prove con-

vergence of Iterative Normalization, we show that
Y satisfies the three-point property, and X satisfies
the local contraction property.

Three-point property of Y. For any Y′ ∈ Y
and X ∈ Rn×d, let Y be the projection of X
onto the constraint set Y with Equation (5). The
columns of Y and Y′ have the same length, so we
have

‖X−Y′‖22 − ‖X−Y‖22

=
n∑
i=1

‖xi − y′i‖2 − ‖xi − yi‖22

=
n∑
i=1

2x>i yi − 2x>i y′i. (7)

Since Y is the projection of X onto the unit-length
set with Equation (5); i.e., yi = xi/‖xi‖2, we can
rewrite Equation (7).

‖X−Y′‖22 − ‖X−Y‖22

=
n∑
i=1

‖xi‖2(2y>i yi − 2y>i y′i). (8)

All columns of Y and Y′ are unit-length. There-
fore, we can further rewrite Equation (8).

‖X−Y′‖22 − ‖X−Y‖22

=

n∑
i=1

‖xi‖2(2− 2y>i y′i)

=

n∑
i=1

‖xi‖2‖yi − y′i‖22.

Let l = mini {‖xi‖2} be the minimum length of
the columns in X. We have the following inequal-
ity:

‖X−Y′‖22 − ‖X−Y‖22

≥
n∑
i=1

l‖yi − y′i‖22

= l||Y −Y′‖22.

From our non-zero assumption, the minimum col-
umn length l is always positive. Let lk be the mini-
mum column length of the embedding matrix X(k)

after the k-th iteration. It follows that Y satisfies
the three-point property with α = mink {lk} and
δα(Y,Y

′) = α‖Y −Y′‖22.

Local contraction property of X. The zero-
mean constraint set X is convex and closed: if two
matrices X and Y both have zero-mean, their linear
interpolation λX + (1− λ)Y must also have zero-
mean for any 0 < λ < 1. Projections onto convex



3188

sets in a Hilbert space are contractive (Browder,
1967), and therefore X satisfies the local contrac-
tion property with any positive � and β = 1.

In summary, the two constraint sets that Iterative
Normalization projects onto satisfy Assumption 1.
Therefore, Iterative Normalization converges fol-
lowing the analysis of Zhu and Li (2018).

B Results on All Languages

Table 3 shows word translation accuracies on all
target languages. Iterative Normalization improves
accuracy on all languages.



3189

Procrustes Procrustes + refine RCSLS

Target None C+L IN None C+L IN None C+L IN

AF 26.3 28.3 29.7 27.7 28.7 30.4 9.3 28.6 29.3
AR 36.5 37.1 37.9 36.5 37.1 37.9 18.4 40.5 41.5
BS 22.3 23.5 24.4 23.3 23.9 26.6 5.4 25.5 26.6
CA 65.9 67.6 68.9 66.5 67.6 68.9 43.0 68.9 69.5
CS 54.0 54.7 55.3 54.0 54.7 55.7 29.9 57.8 58.2
DA 54.0 54.9 58.4 56.8 59.3 60.9 19.2 58.3 60.5
DE 73.5 74.6 75.5 74.3 75.2 76.0 43.6 77.5 78.1
EL 44.0 44.9 47.5 44.6 45.9 47.9 14.0 47.1 48.5
ES 81.4 81.3 81.5 81.9 82.1 82.5 50.5 83.6 83.9
ET 31.9 34.5 36.1 31.9 35.3 36.4 8.1 37.3 39.4
FA 33.1 33.7 37.3 33.1 34.1 37.3 5.9 37.5 38.3
FI 47.6 48.5 50.9 47.6 50.1 51.1 20.9 52.3 53.3
FR 81.1 81.3 81.7 82.1 82.7 82.4 53.1 83.9 83.9
HE 40.2 43.1 43.7 40.2 43.1 43.7 13.1 49.7 50.1
HI 33.3 34.0 36.7 33.6 34.9 37.7 5.0 36.2 38.0
HR 37.0 37.8 40.2 37.6 37.8 40.2 14.5 41.1 42.6
HU 51.8 54.1 55.5 53.3 54.1 56.1 11.7 57.3 58.2
ID 65.6 65.7 67.9 67.7 68.4 70.3 24.8 68.9 70.0
IT 76.2 76.6 76.6 77.5 78.1 78.1 48.4 78.8 79.1
JA 1.7 13.1 44.3 1.7 13.1 44.3 14.6 16.1 56.3
KO 31.5 32.1 33.9 31.5 32.1 33.9 6.4 37.5 37.5
LT 22.5 22.8 23.2 22.5 22.8 23.3 7.6 23.3 23.5
LV 23.6 24.9 26.1 23.6 24.9 26.1 10.1 28.3 28.7
MS 44.0 45.4 48.9 46.5 48.3 51.1 19.9 49.1 50.2
NL 72.8 73.7 74.1 73.8 75.1 75.8 46.7 75.6 75.8
PL 58.2 60.2 60.1 58.5 60.2 60.4 39.4 62.4 62.5
PT 79.5 79.7 79.9 79.9 81.0 81.2 63.1 81.1 81.7
RO 58.1 60.5 61.8 59.9 60.5 62.5 27.1 61.9 63.3
RU 51.7 52.1 52.1 51.7 52.1 52.1 26.6 57.1 57.9
SK 38.0 39.3 40.4 38.0 39.3 41.7 13.3 41.5 42.3
SL 32.5 34.3 36.7 32.5 34.4 36.7 12.3 36.0 37.9
SQ 23.5 25.1 27.3 23.5 25.1 27.3 4.4 26.5 27.3
SV 58.7 59.6 60.7 60.9 61.2 62.6 35.6 63.8 63.9
TA 15.1 15.5 16.8 15.1 15.5 17.7 6.7 16.3 17.1
TH 22.5 23.3 22.9 22.5 23.3 22.9 9.4 23.7 23.9
TR 44.9 46.5 48.7 46.3 48.7 51.7 18.3 50.7 52.4
UK 34.8 35.9 36.3 35.5 35.9 36.5 18.8 40.7 40.8
VI 41.3 42.1 43.7 42.1 42.7 44.2 14.2 43.3 43.9
ZH 32.5 42.3 44.2 32.5 42.3 44.2 17.1 45.1 48.6

Average 44.7 46.3 48.4 45.3 47.0 49.1 21.8 49.0 50.9

Table 3: Word translation accuracy aligning English embeddings to thirty-nine languages. We combine three
normalizations—no normalization (None), mean centering and length normalization (C+L), and Iterative Normal-
ization (IN) for five rounds—with three CLWEs: Procrustes, Procrustes with refinement (Conneau et al., 2018), and
RCSLS (Joulin et al., 2018). Procrustes with C+L is equivalent to Artetxe et al. (2016). The best result for each
CLWE in each column in bold. Iterative Normalization has the best accuracy of the three normalization techniques.


