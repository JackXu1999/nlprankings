



















































Countering the Effects of Lead Bias in News Summarization via Multi-Stage Training and Auxiliary Losses


Proceedings of the 2019 Conference on Empirical Methods in Natural Language Processing
and the 9th International Joint Conference on Natural Language Processing, pages 6019–6024,
Hong Kong, China, November 3–7, 2019. c©2019 Association for Computational Linguistics

6019

Countering the Effects of Lead Bias in News Summarization via
Multi-Stage Training and Auxiliary Losses

Matt Grenander∗, Yue Dong∗
McGill University / MILA

{matthew.grenander,
yue.dong2}@mail.mcgill.ca

Jackie C. K. Cheung
McGill University / MILA
jcheung@cs.mcgill.ca

Annie Louis
University of Edinburgh

Alan Turing Institute
alouis@inf.ed.ac.uk

Abstract

Sentence position is a strong feature for news
summarization, since the lead often (but not al-
ways) summarizes the key points of the article.
In this paper, we show that recent neural sys-
tems excessively exploit this trend, which al-
though powerful for many inputs, is also detri-
mental when summarizing documents where
important content should be extracted from
later parts of the article. We propose two tech-
niques to make systems sensitive to the impor-
tance of content in different parts of the arti-
cle. The first technique employs ‘unbiased’
data; i.e., randomly shuffled sentences of the
source document, to pretrain the model. The
second technique uses an auxiliary ROUGE-
based loss that encourages the model to dis-
tribute importance scores throughout a doc-
ument by mimicking sentence-level ROUGE
scores on the training data. We show that these
techniques significantly improve the perfor-
mance of a competitive reinforcement learning
based extractive system, with the auxiliary loss
being more powerful than pretraining.

1 Introduction

Extractive summarization remains a simple and
fast approach to produce summaries which are
grammatical and accurately represent the source
text. In the news domain, these systems are able
to use a dominant signal: the position of a sentence
in the source document. Due to journalistic con-
ventions which place important information early
in the articles, the lead sentences often contain key
information. In this paper, we explore how sys-
tems can look beyond this simple trend.

Naturally, automatic systems have all along ex-
ploited position cues in news as key indicators of
important content (Schiffman et al., 2002; Hong
and Nenkova, 2014; Liu, 2019). The ‘lead’ base-

∗Equal contribution.

Lead-3: Bangladesh beat fellow World Cup quarter-
finalists Pakistan by 79 runs in the first one-day inter-
national in Dhaka. Tamim Iqbal and Mushfiqur Rahim
scored centuries as Bangladesh made 329 for six and Pak-
istan could only muster 250 in reply. Pakistan will have
the chance to level the three-match series on Sunday when
the second odi takes place in Mirpur.
Reference: Bangladesh beat fellow World Cup quarter-
finalists Pakistan by 79 runs. Tamim Iqbal and Mush-
fiqur Rahim scored centuries for Bangladesh. Bangladesh
made 329 for six and Pakistan could only muster 250 in
reply. Pakistan will have the chance to level the three-
match series on Sunday.
Lead-3: Standing up for what you believe. What does it
cost you? What do you gain?
Reference: Indiana town’s Memories Pizza is shut down
after online threat. Its owners say they’d refuse to cater a
same-sex couple’s wedding.

Table 1: ‘Lead’ (first 3 sentences of source) can produce
extremely faithful (top) to disastrously inaccurate (bottom)
summaries. Gold standard summaries are also shown.

line is rather strong in single-document news sum-
marization (Brandow et al., 1995; Nenkova, 2005),
with automatic systems only modestly improving
the results. Nevertheless, more than 20-30% of
summary-worthy sentences come from the second
half of news documents (Nallapati et al., 2016;
Kedzie et al., 2018), and the lead baseline, as
shown in Table 1, does not always produce con-
vincing summaries. So, systems must balance
the position bias with representations of the se-
mantic content throughout the document. Alas,
preliminary studies (Kedzie et al., 2018) suggest
that even the most recent neural methods predom-
inantly pick sentences from the lead, and that their
content selection performance drops greatly when
the position cues are withheld.

In this paper, we verify that sentence position
and lead bias dominate the learning signal for
state-of-the-art neural extractive summarizers in
the news domain. We then present techniques to
improve content selection in the face of this bias.
The first technique makes use of ‘unbiased data’
created by permuting the order of sentences in



6020

the training articles. We use this shuffled dataset
for pre-training, followed by training on the origi-
nal (unshuffled) articles. The second method in-
troduces an auxiliary loss which encourages the
model’s scores for sentences to mimic an esti-
mated score distribution over the sentences, the
latter computed using ROUGE overlap with the
gold standard. We implement these techniques for
two recent reinforcement learning based systems,
RNES (Wu and Hu, 2018) and BanditSum (Dong
et al., 2018), and evaluate them on the CNN/Daily
Mail dataset (Hermann et al., 2015).

We find that our auxiliary loss achieves signifi-
cantly better ROUGE scores compared to the base
systems, and that the improvement is even more
pronounced when the true best sentences appear
later in the article. On the other hand, the pre-
training approach produces mixed results. We also
confirm that when summary-worthy sentences ap-
pear late, there is a large performance discrepancy
between the oracle summary and state-of-the-art
summarizers, indicating that learning to balance
lead bias with other features of news text is a note-
worthy issue to tackle.

2 Related Work

Modern summarization methods for news are typ-
ically based on neural network-based sequence-
to-sequence learning (Kalchbrenner et al., 2014;
Kim, 2014; Chung et al., 2014; Yin and Pei, 2015;
Cao et al., 2015; Cheng and Lapata, 2016; Nallap-
ati et al., 2017; Narayan et al., 2018a; Zhou et al.,
2018). In MLE-based training, extractive summa-
rizers are trained with gradient ascent to maximize
the likelihood of heuristically-generated ground-
truth binary labels (Nallapati et al., 2017). Many
MLE-based models do not perform as well as
their reinforcement learning-based (RL) competi-
tors that directly optimize ROUGE (Paulus et al.,
2018; Narayan et al., 2018b; Dong et al., 2018; Wu
and Hu, 2018). As RL-based models represent the
state of the art for extractive summarization, we
analyze them in this paper.

The closest work to ours is a recent study by
Kedzie et al. (2018) which showed that MLE-
based models learn a significant bias for selecting
early sentences when trained on news articles as
opposed to other domains. As much as 58% of
selected summary sentences come directly from
the lead. Moreover, when these models are trained
on articles whose sentences are randomly shuffled,

the performance drops considerably for news do-
main only. While this drop could be due to the
destruction of position cues, it may also arise be-
cause the article’s coherence and context were lost.

In this paper, we employ finer control on the
distortion of sentence position, coherence, and
context, and confirm that performance drops are
mainly due to the lack of position cues. We also
propose the first techniques to counter the effects
of lead bias in neural extractive systems.

3 Base Models for Extractive
Summarization

In supervised systems, given a document D =
{s1, ..., sn} with n sentences, a summary can be
seen as set of binary labels y1, . . . , yn ∈ {0, 1},
where yi = 1 indicates that the i-th sentence is
included in the summary.

We choose to experiment with two state-of-
the-art RL-based extractive models: RNES (Wu
and Hu, 2018) and BanditSum (Dong et al.,
2018). Both employ an encoder-decoder struc-
ture, where the encoder extracts sentence fea-
tures into fixed-dimensional vector representations
h1, . . . , hn, and a decoder produces the labels
y1, . . . , yn based on these sentence representa-
tions. RNES uses a CNN+bi-GRU encoder, and
BanditSum a hierarchical bi-LSTM. RNES’s de-
coder is auto-regressive, meaning it predicts the
current sentence’s label based on decisions made
on previous sentences; i.e., yt = f(D,ht, y1:t−1).
In BanditSum, there is no such dependence: it pro-
duces affinity scores for each sentence and the top
scoring sentences are then selected.

4 Lead Bias of News Systems

First, we investigate the impact of sentence posi-
tion on our models. We manipulate the original
CNN/Daily Mail dataset to preserve sentence po-
sition information at different levels. In the ran-
dom setting, sentences are shuffled randomly; in
reverse, they are in reverse order; in insert-lead
and insert-lead3, we insert an out-of-document
sentence (chosen randomly from the corpus) as the
first sentence or randomly as one of the first three
sentences, respectively.

In Table 2, we show BanditSum’s perfor-
mance,1 when trained and tested on the various
datasets. All models (except random) perform

1We notice the same trends on RNES.



6021

train setting
test setting original random reverse insert-lead insert-lead3 Mean Std. Dev.

Lead-3 baseline 32.68 22.81 17.94 27.67 27.68 25.76 5.00
original 33.85 26.18 20.71 31.71 31.11 28.71 4.72
random 30.88 29.70 29.79 29.97 30.09 30.09 0.42
reverse 21.35 26.32 33.59 21.63 21.65 24.91 4.72

insert-lead 33.21 26.07 20.70 33.41 31.59 29.00 4.93
insert-lead3 32.29 25.57 20.22 32.92 32.15 28.63 4.98

Table 2: BanditSum’s performance—calculated as the average between ROUGE-1,-2, and -L F1—on the validation set of the
CNN/Daily Mail corpus. The sentence position information is perturbed at different levels, as explained in Section 4.

worse when tested on a mismatched data pertur-
bation. Even when the distortion is at a single lead
position in insert-lead and insert-lead3, the per-
formance on the original data is significantly lower
than when trained without the distortion. These
results corroborate Kedzie et al. (2018)’s findings
for RL-based systems. Interestingly, the random
model has the best mean performance and the low-
est variation indicating that completely removing
the position bias may allow a model to focus on
learning robust sentence semantics.

5 Learning to Counter Position Bias

We present two methods which encourage models
to locate key phrases at diverse parts of the article.

5.1 Multi-Stage Training

This technique is inspired by the robust results
from the random model in section 4. We imple-
ment a multi-stage training method for both Ban-
ditSum and RNES where in the first few epochs,
we train on an ‘unbiased’ dataset where the sen-
tences in every training document are randomly
shuffled. We then fine-tune the models by train-
ing on the original training articles. The goal is to
prime the model to learn sentence semantics inde-
pendently of position, and then introduce the task
of balancing semantics and positional cues.

5.2 ROUGE-based Auxiliary Loss

We observed that BanditSum tends to converge to
a low-entropy policy, in the sense that the model’s
affinity scores are either 1 or 0 at the end of
training. Furthermore, over 68% of its selec-
tions are from the three leading sentences of the
source. Regularizing low-entropy policies can in-
crease a model’s propensity to explore potentially
good states or stay close to a known good policy
(Nachum et al., 2017; Galashov et al., 2019). We
extend this idea to summarization by introducing
a ROUGE-based loss which regularizes the model

policy using an estimate of the value of individual
sentences.

These sentence-level estimates are computed as
a distribution PR:

PR(x = i) =
r(si,G)∑n
j=1 r(sj ,G)

, (1)

where r is the average of ROUGE-1, -2 and -L
F1 scores between sentence si in the article and
the reference summary G. We would like the
model’s predictive distribution PM to approxi-
mately match PR. To compute PM, we normalize
the predicted scores from a non-auto-regressive
model. In an auto-regressive model such as RNES,
the decision of including a sentence depends on
those selected so far. So a straightforward KL ob-
jective is hard to implement, and we use this tech-
nique for BanditSum only.

Our auxiliary loss is defined as the KL diver-
gence: LKL = DKL(PR ‖ PM). The update rule
then becomes:

θ(t+1) = θ(t) + α
(
∇LM(θ(t)) + β∇LKL(θ(t))

)
(2)

where θ(t) represents the model’s parameters at
time step t, LM is the original model’s loss func-
tion, and β is a hyperparameter.

6 Experimental Setup

We use the CNN/Daily Mail dataset (Hermann
et al., 2015) with the standard train/dev/test splits
of 287,227/13,368/11,490. To avoid inconsisten-
cies, we built on top of the author-provided imple-
mentations for BanditSum and our faithful reim-
plementation of RNES.

To reduce training time, we pre-compute and
store the average of ROUGE-1, -2, and -L for ev-
ery sentence triplet of each article, using a HDF5
table and PyTables (PyTables Developers Team,
2002-2019; The HDF Group, 1997-2019). This al-
lows for a considerable increase in training speed.



6022

Model ROUGE Overlp
1 2 L %

Lead-3 40.06 17.53 36.18 100.0
Oracle 56.53 32.65 53.12 27.24
Refresh 40.0 18.2 36.6 –
NeuSum 40.15 17.80 36.63 58.24
RNES 41.15 18.81 37.75 68.44
RNES+pretrain 41.29 18.85 37.79 68.22
BanditSum 41.68 18.78 38.00 69.87
B.Sum+pretrain 41.68 18.79 37.99 70.77
B.Sum+entropy 41.71 18.87 38.04 64.83
BanditSum+KL 41.81* 18.96* 38.16* 65.13

Table 3: ROUGE scores for systems. ‘Overlp’ denotes
the model’s overlap in extraction choices with the lead-3
baseline. Scores significantly higher than BanditSum with
p < 0.001 (bootstrap resampling test) are marked with *.

We limit the maximum number of sentences con-
sidered in an article to the first 100.

All the models were trained for 4 epochs. For
the multi-stage training, we pretrain for 2 epochs,
then train on the original articles for 2 epochs. We
set the auxiliary loss hyperparameters α = 1e− 4
and β = 0.0095 in eq. 2 based on a grid search
using the Tune library (Liaw et al., 2018).

We also train a baseline entropy model by re-
placing LKL with the negated entropy of PM in
eq. 2. This loss penalizes low entropy, helping the
model explore, but it is ‘undirected’ compared to
our proposed method. We present the results of
Lead-3 baseline (first 3 sentences), and two other
competitive models—Refresh2 (Narayan et al.,
2018a) and NeuSum (Zhou et al., 2018).

Lastly, we include results from an oracle sum-
marizer, computed as the triplet of source sen-
tences with the highest average of ROUGE-1, -2
and -L scores against the abstractive gold standard.

7 Results and Discussion

Table 3 reports the F1 scores for ROUGE-1,-2 and
-L (Lin, 2004). We use the pyrouge3 wrapper li-
brary to evaluate the final models, while training
with a faster Python-only implementation4.

We test for significance between the baseline
models and our proposed techniques using the
bootstrap method. This method was first recom-
mended for testing significance in ROUGE scores
by Lin (2004), and has subsequently been advo-
cated as an appropriate measure in works such
as Dror et al. (2018) and Berg-Kirkpatrick et al.
(2012).

2We are unable to evaluate this model on the lead overlap
measure due to lack of access to the model outputs.

3www.github.com/bheinzerling/pyrouge
4www.github.com/Diego999/py-rouge

Figure 1: Training curves for BanditSum based models. Av-
erage ROUGE is the average of ROUGE-1, -2 and -L F1.

The simple entropy regularizer has a small but
not significant improvement, and pretraining has a
similar improvement only for RNES. But the aux-
iliary ROUGE loss significantly (p < 0.001) im-
proves over BanditSum, obtaining an extra 0.15
ROUGE points on average. The last column re-
ports the percentage of summary sentences which
overlap with the lead. The auxiliary loss leads to
a 4.7% absolute decrease in such selections com-
pared to the base system, while also reaching a
better ROUGE score. Figure 1 shows that the re-
ward (average ROUGE-1,-2,-L) for the auxiliary
loss model is consistently above the base.

We also examined the auxiliary loss model on
documents where the summary is mostly com-
prised of lead sentences Dearly, mostly sentences
much later in the article Dlate, and a dataset at the
midway point,Dmed. To create these sets, we rank
test articles using the average index of its summary
sentences in the source document. The 100 test
articles with lowest average index are Dearly, the
100 with highest value are Dlate and the 100 clos-
est to the median are Dmed. In Table 4, we can see
that the auxiliary loss model’s improvements are
even more amplified on Dmed and Dlate.

On the other hand, our pretraining results are
mixed. We hope to employ more controlled multi-
tasking methods (Kiperwasser and Ballesteros,
2018) in the future to deal with the issue.

The second line in Table 4 reports the ora-
cle ROUGE scores of the best possible extractive
summary. While all systems are quite close to the
oracle on Dearly they only reach half the perfor-
mance on Dlate. This gap indicates that our im-
provements only scratch the surface, but also that
this problem is worthy and challenging to explore.

It is worth noting that we have attempted to
build a single model which can summarize both

www.github.com/bheinzerling/pyrouge
www.github.com/Diego999/py-rouge


6023

Model Dearly Dmed Dlate
Lead-3 46.17 30.90 20.18
Oracle 50.52 47.92 42.21
RNES 41.76 32.11 20.62
RNES+pretrain 41.66 32.38 20.64
BanditSum 43.10 32.65 21.63
BanditSum+entropy 41.96 32.59 22.12
BanditSum+KL 42.63 33.05 21.96

Table 4: Average ROUGE-1, -2 and -L F1 scores on Dearly,
and Dmed, Dlate. Each set contains 100 documents.

lead-biased articles and those whose information
is spread throughout. Our aim was to encourage
the model to explore useful regions as a way of
learning better document semantics. But we hy-
pothesize that our models can be further improved
by learning to automatically predict when the lead
paragraph suffices as a summary, and when the
model should look further in the document.

8 Conclusion

In this paper, we have presented the first ap-
proaches for learning a summarization system by
countering the strong effect of summary-worthy
lead sentences. We demonstrate that recent sum-
marization systems over-exploit the inherent lead
bias present in news articles, to the detriment of
their summarization capabilities. We explore two
techniques aimed at learning to better balance po-
sitional cues with semantic ones. While our aux-
iliary loss method achieves significant improve-
ment, we note that there is a large gap which better
methods can hope to bridge in the future.

One approach, building on ours, is to examine
other ways to combine loss signals (Finn et al.,
2017), and to encourage exploration (Haarnoja
et al., 2018). We will also carry out deeper study
of the properties of Dearly and Dlate type docu-
ments and use them to inform new solutions. On
cursory analysis, the most frequent terms inDearly
tend to be about UK politics, while in Dlate they
are often related to British soccer.

Acknowledgments

This work is supported by the Natural Sciences
and Engineering Research Council of Canada, the
Institute for Data Valorisation (IVADO), Compute
Canada, and the CIFAR Canada AI Chair pro-
gram.

References
Taylor Berg-Kirkpatrick, David Burkett, and Dan

Klein. 2012. An empirical investigation of statisti-
cal significance in NLP. In Proceedings of the 2012
Joint Conference on Empirical Methods in Natural
Language Processing and Computational Natural
Language Learning, pages 995–1005, Jeju Island,
Korea. Association for Computational Linguistics.

Ronald Brandow, Karl Mitze, and Lisa F Rau. 1995.
Automatic condensation of electronic publications
by sentence selection. Information Processing &
Management, 31(5):675–685.

Ziqiang Cao, Furu Wei, Sujian Li, Wenjie Li, Ming
Zhou, and Houfeng Wang. 2015. Learning sum-
mary prior representation for extractive summariza-
tion. In Proceedings of the 53rd Annual Meeting of
the Association for Computational Linguistics.

Jianpeng Cheng and Mirella Lapata. 2016. Neural
summarization by extracting sentences and words.
In Proceedings of the 54th Annual Meeting of the
Association for Computational Linguistics (ACL).

Junyoung Chung, Caglar Gulcehre, Kyunghyun Cho,
and Yoshua Bengio. 2014. Empirical evaluation of
gated recurrent neural networks on sequence model-
ing. In NIPS 2014 Workshop on Deep Learning.

Yue Dong, Yikang Shen, Eric Crawford, Herke van
Hoof, and Jackie Chi Kit Cheung. 2018. Bandit-
sum: Extractive summarization as a contextual ban-
dit. In Proceedings of the 2018 Conference on Em-
pirical Methods in Natural Language Processing,
pages 3739–3748.

Rotem Dror, Gili Baumer, Segev Shlomov, and Roi Re-
ichart. 2018. The hitchhiker’s guide to testing statis-
tical significance in natural language processing. In
Proceedings of the 56th Annual Meeting of the As-
sociation for Computational Linguistics (Volume 1:
Long Papers), pages 1383–1392, Melbourne, Aus-
tralia. Association for Computational Linguistics.

Chelsea Finn, Pieter Abbeel, and Sergey Levine. 2017.
Model-agnostic meta-learning for fast adaptation of
deep networks. In Proceedings of the 34th In-
ternational Conference on Machine Learning, vol-
ume 70 of Proceedings of Machine Learning Re-
search, pages 1126–1135, International Convention
Centre, Sydney, Australia. PMLR.

Alexandre Galashov, Siddhant M Jayakumar, Leonard
Hasenclever, Dhruva Tirumala, Jonathan Schwarz,
Guillaume Desjardins, Wojciech M Czarnecki,
Yee Whye Teh, Razvan Pascanu, and Nicolas Heess.
2019. Information asymmetry in kl-regularized rl.
International Conference on Learning Representa-
tions (ICLR).

Tuomas Haarnoja, Aurick Zhou, Pieter Abbeel, and
Sergey Levine. 2018. Soft actor-critic: Off-policy
maximum entropy deep reinforcement learning with

https://www.aclweb.org/anthology/D12-1091
https://www.aclweb.org/anthology/D12-1091
https://www.aclweb.org/anthology/P18-1128
https://www.aclweb.org/anthology/P18-1128
http://proceedings.mlr.press/v70/finn17a.html
http://proceedings.mlr.press/v70/finn17a.html
http://proceedings.mlr.press/v80/haarnoja18b.html
http://proceedings.mlr.press/v80/haarnoja18b.html


6024

a stochastic actor. In Proceedings of the 35th In-
ternational Conference on Machine Learning, vol-
ume 80 of Proceedings of Machine Learning Re-
search, pages 1861–1870, Stockholmsmssan, Stock-
holm Sweden. PMLR.

Karl Moritz Hermann, Tomas Kocisky, Edward
Grefenstette, Lasse Espeholt, Will Kay, Mustafa Su-
leyman, and Phil Blunsom. 2015. Teaching ma-
chines to read and comprehend. In Advances in Neu-
ral Information Processing Systems, pages 1693–
1701.

Kai Hong and Ani Nenkova. 2014. Improving the
estimation of word importance for news multi-
document summarization. In Proceedings of the
14th Conference of the European Chapter of the As-
sociation for Computational Linguistics, pages 712–
721.

Nal Kalchbrenner, Edward Grefenstette, and Phil Blun-
som. 2014. A convolutional neural network for
modelling sentences. In Proceedings of the 52nd
Annual Meeting of the Association for Computa-
tional Linguistics (ACL).

Chris Kedzie, Kathleen McKeown, and Hal Daume III.
2018. Content selection in deep learning models of
summarization. In Proceedings of the 2018 Con-
ference on Empirical Methods in Natural Language
Processing, pages 1818–1828.

Yoon Kim. 2014. Convolutional neural networks for
sentence classification. In Proceedings of the 2014
Conference on Empirical Methods in Natural Lan-
guage Processing (EMNLP).

Eliyahu Kiperwasser and Miguel Ballesteros. 2018.
Scheduled multi-task learning: From syntax to
translation. Transactions of the Association of Com-
putational Linguistics, 6:225–240.

Richard Liaw, Eric Liang, Robert Nishihara, Philipp
Moritz, Joseph E Gonzalez, and Ion Stoica.
2018. Tune: A research platform for distributed
model selection and training. arXiv preprint
arXiv:1807.05118.

Chin-Yew Lin. 2004. Rouge: A package for automatic
evaluation of summaries. In Text Summarization
Branches Out: Proceedings of the ACL-04 Work-
shop.

Yang Liu. 2019. Fine-tune BERT for extractive sum-
marization. CoRR, abs/1903.10318.

Ofir Nachum, Mohammad Norouzi, and Dale Schuur-
mans. 2017. Improving policy gradient by exploring
under-appreciated rewards. In International Con-
ference on Learning Representations, pages 2775–
2785.

Ramesh Nallapati, Feifei Zhai, and Bowen Zhou. 2017.
SummaRuNNer: A recurrent neural network based
sequence model for extractive summarization of
documents. In Proceedings of the 31st AAAI Con-
ference on Artificial Intelligence.

Ramesh Nallapati, Bowen Zhou, Cicero dos Santos,
Çağlar Gu̇lçehre, and Bing Xiang. 2016. Ab-
stractive text summarization using sequence-to-
sequence rnns and beyond. In Proceedings of the
20th SIGNLL Conference on Computational Natu-
ral Language Learning (CoNLL).

Shashi Narayan, Shay B Cohen, and Mirella Lapata.
2018a. Don’t give me the details, just the summary!
topic-aware convolutional neural networks for ex-
treme summarization. In Proceedings of the 2018
Conference on Empirical Methods in Natural Lan-
guage Processing, pages 1797–1807.

Shashi Narayan, Shay B. Cohen, and Mirella Lapata.
2018b. Ranking sentences for extractive summa-
rization with reinforcement learning. In Proceed-
ings of the 2018 Conference of the North American
Chapter of the Association for Computational Lin-
guistics: Human Language Technologies (NAACL).

Ani Nenkova. 2005. Automatic text summarization of
newswire: Lessons learned from the document un-
derstanding conference. In AAAI, volume 5, pages
1436–1441.

Romain Paulus, Caiming Xiong, and Richard Socher.
2018. A deep reinforced model for abstractive sum-
marization. In International Conference on Learn-
ing Representations (ICLR).

PyTables Developers Team. 2002-2019. PyTables: Hi-
erarchical datasets in Python.

Barry Schiffman, Ani Nenkova, and Kathleen McK-
eown. 2002. Experiments in multidocument sum-
marization. In Proceedings of the Second Interna-
tional Conference on Human Language Technology
Research, pages 52–58.

The HDF Group. 1997-2019. Hierarchical Data For-
mat, version 5. Http://www.hdfgroup.org/HDF5/.

Yuxiang Wu and Baotian Hu. 2018. Learning to extract
coherent summary via deep reinforcement learning.
In Proceedings of the 32nd AAAI Conference on Ar-
tificial Intelligence (AAAI).

Wenpeng Yin and Yulong Pei. 2015. Optimizing sen-
tence modeling and selection for document summa-
rization. In Proceedings of the 24th International
Joint Conference on Artificial Intelligence (IJCAI),
pages 1383–1389.

Qingyu Zhou, Nan Yang, Furu Wei, Shaohan Huang,
Ming Zhou, and Tiejun Zhao. 2018. Neural docu-
ment summarization by jointly learning to score and
select sentences. In Proceedings of the 56th An-
nual Meeting of the Association for Computational
Linguistics (Volume 1: Long Papers), pages 654–
663, Melbourne, Australia. Association for Compu-
tational Linguistics.

http://proceedings.mlr.press/v80/haarnoja18b.html
http://arxiv.org/abs/1903.10318
http://arxiv.org/abs/1903.10318
https://openreview.net/forum?id=HkAClQgA-
https://openreview.net/forum?id=HkAClQgA-
http://www.pytables.org/
http://www.pytables.org/
https://www.aaai.org/ocs/index.php/AAAI/AAAI18/paper/view/16838
https://www.aaai.org/ocs/index.php/AAAI/AAAI18/paper/view/16838
http://ijcai.org/Abstract/15/199
http://ijcai.org/Abstract/15/199
http://ijcai.org/Abstract/15/199
https://www.aclweb.org/anthology/P18-1061
https://www.aclweb.org/anthology/P18-1061
https://www.aclweb.org/anthology/P18-1061

