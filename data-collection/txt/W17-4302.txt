



















































Entity Identification as Multitasking


Proceedings of the 2nd Workshop on Structured Prediction for Natural Language Processing, pages 7–11
Copenhagen, Denmark, September 7–11, 2017. c©2017 Association for Computational Linguistics

Entity Identification as Multitasking∗

Karl Stratos
Toyota Technological Institute at Chicago

stratos@ttic.edu

Abstract

Standard approaches in entity identifica-
tion hard-code boundary detection and
type prediction into labels and perform
Viterbi. This has two disadvantages: 1. the
runtime complexity grows quadratically in
the number of types, and 2. there is no nat-
ural segment-level representation. In this
paper, we propose a neural architecture
that addresses these disadvantages. We
frame the problem as multitasking, sep-
arating boundary detection and type pre-
diction but optimizing them jointly. De-
spite its simplicity, this architecture per-
forms competitively with fully structured
models such as BiLSTM-CRFs while scal-
ing linearly in the number of types. Fur-
thermore, by construction, the model in-
duces type-disambiguating embeddings of
predicted mentions.

1 Introduction

A popular convention in segmentation tasks such
as named-entity recognition (NER) and chunk-
ing is the so-called “BIO”-label scheme. It
hard-codes boundary detection and type predic-
tion into labels using the indicators “B” (Begin-
ning), “I” (Inside), and “O” (Outside). For in-
stance, the sentence Where is John Smith
is tagged as Where/O is/O John/B-PER
Smith/I-PER. In this way, we can treat the
problem as sequence labeling and apply standard
structured models such as CRFs.

But this approach has certain disadvantages.
First, the runtime complexity grows quadratically

∗Part of the work was done while the author was at
Bloomberg L. P.

in the number of types (assuming exact decoding
with first-order label dependency). We empha-
size that the asymptotic runtime remains quadratic
even if we heuristically prune previous labels
based on the BIO scheme. This is not an issue
when the number of types is small but quickly be-
comes problematic as the number grows. Second,
there is no segment-level prediction: every predic-
tion happens at the word-level. As a consequence,
models do not induce representations correspond-
ing to multi-word mentions, which can be useful
for downstream tasks such as named-entity disam-
biguation (NED).

In this paper, we propose a neural architecture
that addresses these disadvantages. Given a sen-
tence, the model uses bidirectional LSTMs (BiL-
STMs) to induce features and separately predicts:

1. Boundaries of mentions in the sentence.

2. Entity types of the boundaries.

Crucially, during training, the errors of these two
predictions are minimized jointly.

One might suspect that the separation could de-
grade performance; neither prediction accounts
for the correlation between entity types. But we
find that this is not the case due to joint optimiza-
tion. In fact, our model performs competitively
with fully structured models such as BiLSTM-
CRFs (Lample et al., 2016), implying that the
model is able to capture the entity correlation in-
directly by multitasking. On the other hand, the
model scales linearly in the number of types and
induces segment-level embeddings of predicted
mentions that are type-disambiguating by con-
struction.

7



2 Related Work

Our work is directly inspired by Lample et al.
(2016) who demonstrate that a simple neural ar-
chitecture based on BiLSTMs achieves state-of-
the-art performance on NER with no external
features. They propose two models. The first
makes structured prediction of NER labels with
a CRF loss (LSTM-CRF) using the conventional
BIO-label scheme. The second, which performs
slightly worse, uses a shift-reduce framework mir-
roring tansition-based dependency parsing (Ya-
mada and Matsumoto, 2003). While the latter also
scales linearly in the number of types and pro-
duces embeddings of predicted mentions, our ap-
proach is quite different. We frame the problem
as multitasking and do not need the stack/buffer
data structure. Semi-Markov models (Kong et al.,
2015; Sarawagi et al., 2004) explicitly incorporate
the segment structure but are computationally in-
tensive (quadratic in the sentence length).

Multitasking has been shown to be effective in
numerous previous works (Collobert et al., 2011;
Yang et al., 2016; Kiperwasser and Goldberg,
2016). This is especially true with neural networks
which greatly simplify joint optimization across
multiple objectives. Most of these works con-
sider multitasking across different problems. In
contrast, we decompose a single problem (NER)
into two natural subtasks and perform them jointly.
Particularly relevant in this regard is the parsing
model of Kiperwasser and Goldberg (2016) which
multitasks edge prediction and classification.

LSTMs (Hochreiter and Schmidhuber, 1997),
and other variants of recurrent neural networks
such as GRUs (Chung et al., 2014), have recently
been wildly successful in various NLP tasks (Lam-
ple et al., 2016; Kiperwasser and Goldberg, 2016;
Chung et al., 2014). Since there are many detailed
descriptions of LSTMs available, we omit a pre-
cise definition. For our purposes, it is sufficient to
treat an LSTM as a mapping φ : Rd × Rd′ → Rd′
that takes an input vector x and a state vector h to
output a new state vector h′ = φ(x, h).

3 Model

Let C denote the set of character types, W the
set of word types, and E the set of entity types.
Let ⊕ denote the vector concatenation operation.
Our model first constructs a network over a sen-
tence closely following Lample et al. (2016); we

describe it here for completeness. The model pa-
rameters Θ associated with this base network are

• Character embedding ec ∈ R25 for c ∈ C
• Character LSTMs φCf , φCb : R25×R25 → R25

• Word embedding ew ∈ R100 for w ∈ W
• Word LSTMs φWf , φWb : R150×R100 → R100

Letw1 . . . wn ∈ W denote a word sequence where
word wi has character wi(j) ∈ C at position j.
First, the model computes a character-sensitive
word representation vi ∈ R150 as

fCj = φ
C
f

(
ewi(j), f

C
j−1
) ∀j = 1 . . . |wi|

bCj = φ
C
b

(
ewi(j), b

C
j+1

) ∀j = |wi| . . . 1
vi = fC|wi| ⊕ bC1 ⊕ ewi

for each i = 1 . . . n.1 Next, the model computes

fWi = φ
W
f

(
vi, f

W
i−1
) ∀i = 1 . . . n

bWi = φ
W
b

(
vi, b

W
i+1

) ∀i = n . . . 1
and induces a character- and context-sensitive
word representation hi ∈ R200 as

hi = fWi ⊕ bWi (1)
for each i = 1 . . . n. These vectors are used to de-
fine the boundary detection loss and the type clas-
sification loss described below.

Boundary detection loss We frame boundary
detection as predicting BIO tags without types.
A natural approach is to optimize the condi-
tional probability of the correct tags y1 . . . yn ∈
{B,I,O}:
p(y1 . . .yn|h1 . . . hn)

∝ exp
(

n∑
i=1

Tyi−1,yi × gyi(hi)
)

(2)

where g : R200 → R3 is a function that ad-
justs the length of the LSTM output to the num-
ber of targets. We use a feedforward network
g(h) = W 2relu(W 1h + b1) + b2. We write Θ1
to refer to T ∈ R3×3 and the parameters in g. The
boundary detection loss is given by the negative
log likelihood:

L1 (Θ,Θ1) = −
∑
l

log p
(
y(l)|h(l)

)
1For simplicity, we assume some random initial state vec-

tors such as fC0 and bC|wi|+1 when we describe LSTMs.

8



where l iterates over tagged sentences in the data.
The global normalizer for (2) can be com-

puted using dynamic programming; see Collobert
et al. (2011). Note that the runtime complexity
of boundary detection is constant despite dynamic
programming since the number of tags is fixed
(three).

Type classification loss Given a mention bound-
ary 1 ≤ s ≤ t ≤ n, we predict its type using
(1) as follows. We introduce an additional pair
of LSTMs φEf , φ

E
b : R200 × R200 → R200 and

compute a corresponding mention representation
µ ∈ R|E| as

fEj = φ
E
f

(
hj , f

E
j−1
) ∀j = s . . . t

bEj = φ
E
b

(
hj , b

E
j+1

) ∀j = t . . . s
µ = q

(
fEt ⊕ bEs

)
(3)

where q : R400 → R|E| is again a feedforward
network that adjusts the vector length to |E|.2 We
write Θ2 to refer to the parameters in φEf , φ

E
b , q.

Now we can optimize the conditional probability
of the correct type τ :

p(τ |hs . . . ht) ∝ exp (µτ ) (4)

The type classification loss is given by the negative
log likelihood:

L2 (Θ,Θ2) = −
∑
l

log p
(
τ (l)|h(l)s . . . h(l)t

)
where l iterates over typed mentions in the data.

Joint loss The final training objective is to min-
imize the sum of the boundary detection loss and
the type classification loss:

L(Θ,Θ1,Θ2) = L1 (Θ,Θ1) + L2 (Θ,Θ2) (5)

In stochastic gradient descent (SGD), this amounts
to computing the tagging loss l1 and the classifi-
cation loss l2 (summed over all mentions) at each
annotated sentence, and then taking a gradient step
on l1 + l2. Observe that the base network Θ
is optimized to handle both tasks. During train-
ing, we use gold boundaries and types to optimize
L2 (Θ,Θ2). At test time, we predict boundaries
from the tagging layer (2) and classify them using
the classification layer (4).

2Clearly, one can consider different networks over the
boundary, for instance simple bag-of-words or convolutional
neural networks. We leave the exploration as future work.

CoNLL 2003 (4 types) F1 # words/sec
BiLSTM-CRF 90.22 3889
Mention2Vec 90.90 4825
OntoNotes (18 types) F1 # words/sec
BiLSTM-CRF 90.77 495
Mention2Vec 89.37 4949

Table 1: Test F1 scores on CoNLL 2003 and
OntoNotes newswire portion.

Model F1
McCallum and Li (2003) 84.04
Collobert et al. (2011) 89.59
Lample et al. (2016)–Greedy 89.15
Lample et al. (2016)–Stack 90.33
Lample et al. (2016)–CRF 90.94
Mention2Vec 90.90

Table 2: Test F1 scores on CoNLL 2003.

4 Experiments

Data We use two NER datasets: CoNLL 2003
which has four entity types PER, LOC, ORG and
MISC (Tjong Kim Sang and De Meulder, 2003),
and the newswire portion of OntoNotes Release
5.0 which has 18 entity types (Weischedel et al.,
2013).

Implementation and baseline We denote our
model Mention2Vec and implement it using the
DyNet library.3 We use the same pre-trained word
embeddings in Lample et al. (2016). We use the
Adam optimizer (Kingma and Ba, 2014) and ap-
ply dropout at all LSTM layers (Hinton et al.,
2012). We perform minimal tuning over devel-
opment data. Specifically, we perform a 5 × 5
grid search over learning rates 0.0001 . . . 0.0005
and dropout rates 0.1 . . . 0.5 and choose the con-
figuration that gives the best performance on the
dev set.

We also re-implement the BiLSTM-CRF model
of Lample et al. (2016); this is equivalent to opti-
mizing just L1(Θ,Θ1) but using typed BIO tags.
Lample et al. (2016) use different details in opti-
mization (SGD with gradient clipping), data pre-
processing (replacing every digit with a zero), and
the dropout scheme (droptout at BiLSTM input
(1)). As a result, our re-implementation is not di-
rectly comparable and obtains different (slightly
lower) results. But we emphasize that the main
goal of this paper is to demonstrate the utility the

3https://github.com/karlstratos/
mention2vec

9



PER In another letter dated January 1865, a well-to-do Washington matron wrote to Lincoln to plead for . . .
Chang and Washington were the only men’s seeds in action on a day that saw two seeded women’s . . .
“Just one of those things, I was just trying to make contact,” said Bragg.
Washington’s win was not comfortable, either.

LOC Lauck, from Lincoln, Nebraska, yelled a tirade of abuse at the court after his conviction for inciting . . .
. . . warring factions, with the PUK aming to break through to KDP’s headquarters in Saladhuddin.
. . . is not expected to travel to the West Bank before Monday,” Nabil Abu Rdainah told Reuters.
. . . off a bus near his family home in the village of Donje Ljupce in the municipality of Podujevo.

ORG English division three - Swansea v Lincoln.
SOCCER - OUT-OF-SORTS NEWCASTLE CRASH 2 1 AT HOME.
Moura, who appeared to have elbowed Cyprien in the final minutes of the 3 0 win by Neuchatel, was . . .
In Sofia: Leviski Sofia (Bulgaria) 1 Olimpija (Slovenia) 0

WORK OF ART . . . Bond novels, and “Treasure Island,” produced by Charlton Heston who also stars in the movie.
. . . probably started in 1962 with the publication of Rachel Carson’s book “Silent Spring.”
. . . Victoria Petrovich) spout philosophic bon mots with the self-concious rat-a-tat pacing of “Laugh In.”
Dennis Farney’s Oct. 13 page - one article “River of Despair,” about the poverty along the . . .

GPE . . . from a naval station at Treasure Island near the Bay Bridge to San Francisco to help fight fires.
. . . lived in an expensive home on Lido Isle, an island in Newport’s harbor, according to investigators.
. . . Doris Moreno, 37, of Bell Gardens; and Ana L. Azucena, 27, of Huntington Park.
One group of middle-aged manufacturing men from the company’s Zama plant outside Tokyo was . . .

ORG . . . initiative will spur members of the General Agreement on Tariffs and Trade to reach . . .
. . . question of Taiwan’s membership in the General Agreement on Tariffs and Trade should . . .
”He doesn’t know himself,” Kathy Stanwick of the Abortion Rights League says of . . .
. . . administrative costs, management and research, the Office of Technology Assessment just reported.

Table 3: Nearest neighbors of detected mentions in CoNLL 2003 and OntoNotes using (3).

proposed approach rather than obtaining a new
state-of-the-art result on NER.

4.1 NER Performance

Table 1 compares the NER performance and de-
coding speed between BiLSTM-CRF and Men-
tion2Vec. The F1 scores are obtained on test data.
The speed is measured by the average number of
words decoded per second.

On CoNLL 2003 in which the number of types
is small, our model achieves 90.50 compared to
90.22 of BiLSTM-CRF with minor speed im-
provement. This shows that despite the separation
between boundary detection and type classifica-
tion, we can achieve good performance through
joint optimization. On OntoNotes in which the
number of types is much larger, our model still
performs well with an F1 score of 89.37 but is
behind BiLSTM-CRF which achieves 90.77. We
suspect that this is due to strong correlation be-
tween mention types that fully structured models
can exploit more effectively. However, our model
is also an order of magnitude faster: 4949 com-
pared to 495 words/second.

Finally, Table 2 compares our model with other
works in the literature on CoNLL 2003. McCal-
lum and Li (2003) use CRFs with manually crafted
features; Collobert et al. (2011) use convolutional
neural networks; Lample et al. (2016) use BiL-
STMs in a greedy tagger (Greedy), a stack-based
model (Stack), and a global tagger using a CRF

output layer (CRF). Mention2Vec performs com-
petitively.

4.2 Mention Embeddings

Table 3 shows nearest neighbors of detected
mentions using the mention representations µ in
(3). Since µτ represents the score of type τ ,
the mention embeddings are clustered by en-
tity types by construction. The model induces
completely different representations even when
the mention has the same lexical form. For
instance, based on its context Lincoln re-
ceives a person, location, or organization repre-
sentation; Treasure Island receives a book
or location representation. The model also
learns representations for long multi-word expres-
sions such as the General Agreement on
Tariffs and Trade.

5 Conclusion

We have presented a neural architecture for en-
tity identification that multitasks boundary detec-
tion and type classification. Joint optimization en-
ables the base BiLSTM network to capture the
correlation between entities indirectly via multi-
tasking. As a result, the model is competitive
with fully structured models such as BiLSTM-
CRFs on CoNLL 2003 while being more scal-
able and also inducing context-sensitive mention
embeddings clustered by entity types. There are

10



many interesting future directions, such as apply-
ing this framework to NED in which type classi-
fication is much more fine-grained and finding a
better method for optimizing the multitasking ob-
jective (e.g., instead of using gold boundaries for
training, dynamically use predicted boundaries in
a reinforcement learning framework).

Acknowledgments

The author would like to thank Linpeng Kong for
his consistent help with DyNet and Miguel Balles-
teros for pre-trained word embeddings.

References
Junyoung Chung, Caglar Gulcehre, KyungHyun Cho,

and Yoshua Bengio. 2014. Empirical evaluation of
gated recurrent neural networks on sequence model-
ing. In NIPS Deep Learning Workshop.

Ronan Collobert, Jason Weston, Léon Bottou, Michael
Karlen, Koray Kavukcuoglu, and Pavel Kuksa.
2011. Natural language processing (almost) from
scratch. The Journal of Machine Learning Research
12:2493–2537.

Geoffrey E Hinton, Nitish Srivastava, Alex Krizhevsky,
Ilya Sutskever, and Ruslan R Salakhutdinov. 2012.
Improving neural networks by preventing co-
adaptation of feature detectors. arXiv preprint
arXiv:1207.0580 .

Sepp Hochreiter and Jürgen Schmidhuber. 1997.
Long short-term memory. Neural computation
9(8):1735–1780.

Diederik Kingma and Jimmy Ba. 2014. Adam: A
method for stochastic optimization. arXiv preprint
arXiv:1412.6980 .

Eliyahu Kiperwasser and Yoav Goldberg. 2016. Sim-
ple and accurate dependency parsing using bidirec-
tional lstm feature representations. Transactions
of the Association for Computational Linguistics
4:313–327.

Lingpeng Kong, Chris Dyer, and Noah A Smith.
2015. Segmental recurrent neural networks. arXiv
preprint arXiv:1511.06018 .

Guillaume Lample, Miguel Ballesteros, Sandeep Sub-
ramanian, Kazuya Kawakami, and Chris Dyer. 2016.
Neural architectures for named entity recognition.
In Proceedings of NAACL.

Andrew McCallum and Wei Li. 2003. Early results for
named entity recognition with conditional random
fields, feature induction and web-enhanced lexicons.
In Proceedings of the seventh conference on Natu-
ral language learning at HLT-NAACL 2003-Volume
4. Association for Computational Linguistics, pages
188–191.

Barbara Plank. 2016. Keystroke dynamics as signal for
shallow syntactic parsing. In Proceedings of COL-
ING.

Barbara Plank, Anders Søgaard, and Yoav Goldberg.
2016. Multilingual part-of-speech tagging with
bidirectional long short-term memory models and
auxiliary loss. In Proceedings of ACL.

Sunita Sarawagi, William W Cohen, et al. 2004. Semi-
markov conditional random fields for information
extraction. In NIPs. volume 17, pages 1185–1192.

Erik F Tjong Kim Sang and Fien De Meulder.
2003. Introduction to the conll-2003 shared task:
Language-independent named entity recognition. In
Proceedings of the seventh conference on Natural
language learning at HLT-NAACL 2003-Volume 4.
Association for Computational Linguistics, pages
142–147.

Ralph Weischedel, Martha Palmer, Mitchell Marcus,
Eduard Hovy, Sameer Pradhan, Lance Ramshaw,
Nianwen Xue, Ann Taylor, Jeff Kaufman, Michelle
Franchini, et al. 2013. Ontonotes release 5.0
ldc2013t19. Linguistic Data Consortium, Philadel-
phia, PA .

Hiroyasu Yamada and Yuji Matsumoto. 2003. Statis-
tical dependency analysis with support vector ma-
chines. In Proceedings of IWPT . volume 3, pages
195–206.

Zhilin Yang, Ruslan Salakhutdinov, and William Co-
hen. 2016. Multi-task cross-lingual sequence tag-
ging from scratch. arXiv preprint arXiv:1603.06270
.

11


