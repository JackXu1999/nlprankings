



















































REflex: Flexible Framework for Relation Extraction in Multiple Domains


Proceedings of the BioNLP 2019 workshop, pages 30–47
Florence, Italy, August 1, 2019. c©2019 Association for Computational Linguistics

30

REflex: Flexible Framework for Relation Extraction in Multiple Domains

Geeticka Chauhan
MIT CSAIL

geeticka@mit.edu

Matthew B. A. McDermott
MIT CSAIL

mmd@mit.edu

Peter Szolovits
MIT CSAIL

psz@mit.edu

Abstract
Systematic comparison of methods for relation
extraction (RE) is difficult because many ex-
periments in the field are not described pre-
cisely enough to be completely reproducible
and many papers fail to report ablation stud-
ies that would highlight the relative contribu-
tions of their various combined techniques. In
this work, we build a unifying framework for
RE, applying this on three highly used datasets
(from the general, biomedical and clinical do-
mains) with the ability to be extendable to new
datasets. By performing a systematic explo-
ration of modeling, pre-processing and train-
ing methodologies, we find that choices of pre-
processing are a large contributor performance
and that omission of such information can fur-
ther hinder fair comparison. Other insights
from our exploration allow us to provide rec-
ommendations for future research in this area.

1 Introduction

Relation Extraction (RE) has gained a lot of in-
terest from the community with the introduction
of the Semeval tasks from 2007 by (Girju et al.,
2007) and 2010 by (Hendrickx et al., 2009). The
task is a subset of information extraction (IE) with
the goal of finding semantic relationships between
concepts in a given sentence, and is an impor-
tant component of Natural Language Understand-
ing (NLU). Applications include automatic knowl-
edge base creation, question answering, as well as
analysis of unstructured text data. Since the in-
troduction of RE tasks in the general and medical
domains, many researchers have explored the per-
formance of different neural network architectures
on the datasets (Socher et al., 2012; Zeng et al.,
2014; Liu et al., 2016b; Sahu et al., 2016).

However, progress in RE is hampered by repro-
ducibility issues as well as the difficulty in assess-
ing which techniques in the literature will general-
ize to novel tasks, datasets and contexts. To assess

the extent of these problems, we performed a man-
ual review of 53 relevant neural RE papers1 citing
the three datasets (Hendrickx et al., 2009; Segura-
Bedmar et al., 2013; Uzuner et al., 2011). The
procedure for finding these papers is highlighted
in (Chauhan, 2019).

Reproducibility Reproducibility is important
for validating previous work and building upon it
(Fokkens et al., 2013). Lack of reproducibility can
be attributed to many factors such as difficulty in
availability of source code (Ince et al., 2012) and
omission of sources of variability such as hyperpa-
rameter details (Claesen and De Moor, 2015). We
found that only 16 out of the 53 relevant papers
had released their source code. 14 out of 53 pa-
pers were evaluated on multiple datasets, but the
source code was publicly available for only five of
those. Despite this, much of this code was lack-
ing in modularity to be easily extendable to new
datasets. In many cases, the process of reproduc-
ing the paper results was often unclear and lack
of documentation made this more difficult. Even
though most papers mentioned some hyperparam-
eter details, important details were missing such
as number of epochs, batch size, random initial-
ization seed, if any, and details about early stop if
that technique was applied.

Ablation Studies Lack of generalizability is
caused by a dearth of appropriate empirical evalu-
ation to identify the source of modeling gains. Ab-
lation studies are important for identifying sources
of improvements in results. Among the 53 papers
that we looked at, 20 of the 24 papers in the gen-
eral domain performed ablation studies. However,
only 10 out of 29 papers in the medical domain
performed one. Among these ablation studies,

1The 53 papers were filtered from a list of 728 papers
skimmed for relevance. Appendix A contains paper details.



31

key details related to pre-processing were missing,
which we found critical in our experiments.

In the absence of such information about causes
of large variability of results, fair comparison of
models becomes difficult. In this paper, we present
an open-source unifying framework enabling the
comparison of various training methodologies,
pre-processing, modeling techniques, and evalu-
ation metrics. The code is available at https:
//github.com/geetickachauhan/
relation-extraction.

The experimental goals of this framework are
identification of sources of variability in results
for the three datasets and provide the field with
a strong baseline model to compare against for
future improvements. The design goals of this
framework are identification of best practices for
relation extraction and to be a guide for approach-
ing new datasets.

By performing systematic comparison on three
datasets, we find that 1) pre-processing choices
can cause the largest variations in performance, 2)
reporting scores on one test set split is problem-
atic due to split bias. We perform other analyses
in section 5 and also include recommendations for
future research in this field in section 7.

Upon testing various combinations of our ap-
proaches, we achieve results near state of the art
ranges for the three datasets: 85.89% macro F1
for Semeval 2010 task 8 dataset (Hendrickx et al.,
2009) i.e. semeval, 71.97% macro F1 for DDI
Extraction 2013 (Segura-Bedmar et al., 2013) i.e.
ddi and 71.01% micro F1 for i2b2/VA 2010 re-
lation classification dataset (Uzuner et al., 2011)
i.e. i2b2. We refer to ddi and i2b2 as medi-
cal datasets, as they belong to the biomedical and
clinical domains, respectively.

Dataset Rel Eval Agreement Det
semeval 18 Macro 0.6-0.95 No
ddi 5 Macro >0.8; 0.55-0.72 Yes
i2b2 8 Micro - Yes

Table 1: Dataset information, with columns Rel =
number of relations, Eval = evaluation metric (all F1
scores), Agreement = Inter-annotator agreement, Det =
whether detection task from section 3.4 was evaluated
on. Rel column only includes relations used in offi-
cial evaluation metric. ddi was built from two sep-
arately annotated sources and therefore contains two
inter-annotator agreements.

2 Datasets

We summarize important information about these
datasets in table 1. We introduce detection and
classification tasks in section 3.4, but also indicate
the tasks evaluated for each dataset in table 1.

Semeval 2010 semeval consists of 8000 train-
ing sentences and 2,717 test sentences for the
multi-way classification of semantic relations be-
tween pairs of nominals. Not included in the offi-
cial evaluation is an Other class which is consid-
ered noisy, with annotators choosing this class if
no fit was found in the other classes. It is impor-
tant to note that this is a synthetically generated
dataset, and detection scores were not calculated
due to the noisy nature of the Other class.

DDI Extraction ddi consists of 1,017 texts
with 18,491 pharmacological substances and
5,021 drug-drug interactions from Pubmed articles
in the pharmacological literature. None class in-
dicating no interaction between the drug pairs is
included in the evaluation metric calculation.

i2b2/VA 2010 relations i2b2 consists of dis-
charge summaries from Partners Healthcare and
the MIMIC II Database (Saeed et al., 2011). They
released 394 training reports, 477 test reports and
877 unannotated reports. After the challenge, only
a part of the data was publicly released for re-
search. None relation was present in the data and
not considered in the official evaluation.

3 Methodology

Our framework breaks up processing into dif-
ferent stages, allowing for future modular addi-
tion of components. First, a formatter con-
verts the raw dataset into a common comma sep-
arated value (CSV) input format accepted by the
pre-processor, and this information is then
fed to the model, which performs the training, af-
ter which evaluation is performed on the test
set. With our framework, we test the following
variations in the main components:

3.1 Pre-Processing

We test various pre-processing methods after per-
forming simple tokenization and lower-casing of
the words: entity blinding used by Liu et al.
(2016b), stop-word and punctuation removal, and
digit normalization commonly applied for ddi in
(Zhao et al., 2016), and named entity recognition

https://github.com/geetickachauhan/relation-extraction
https://github.com/geetickachauhan/relation-extraction
https://github.com/geetickachauhan/relation-extraction


32

related replacement (we call this NER blinding).
We used the spaCy framework2 for tokenization
and to identify punctuation and digits.

Entity blinding and NER blinding are similar
concept blinding techniques where the first is per-
formed based on gold standard annotations, while
the second is performed by running NER on the
original sentence. We replace the words in the
sentence matching the entity or named entity span
with the target label and use those for training and
testing.

Entity labels for semeval were not anno-
tated with type information, whereas ddi identi-
fied drugs and i2b2 identified medical problems,
tests and treatments. Therefore, entity labels for
semeval were ENTITY, for ddi were DRUG
and for i2b2were PROBLEM, TREATMENT and
TEST. In this paper, we use fine-grained concept
type to refer to the presence of more than one con-
cept type, as in the the case of i2b2.

NER labels for semeval consisted of those
provided by the large english model by spaCy
and provided standard types such as PERSON and
ORGANIZATION, whereas those for the medical
datasets was provided by the scispacy medium
size model3 and did not provide types. In this case,
blinding consisted of replacing the words in the
sentence by Entity.

We chose the spaCy model for NER to com-
plement the extendable design goals of REflex.
Other options such as cTAKES (Savova et al.,
2010) for clinical data and MetaMAP4 for
biomedical data are highly specific to the dataset
type and require running additional scripts outside
of the REflex pipeline.

3.2 Modeling
We employ a baseline model based upon (Zeng
et al., 2014), (Santos et al., 2015) and (Jin et al.,
2018), which is a convolutional neural network
(CNN) with position embeddings and a ranking
loss (referred to as CRCNN in this paper). We
initialize the model with pre-trained word em-
beddings: the senna embeddings by Collobert
et al. (2011) for the general domain dataset and
the PubMed-PMC-wikipedia embeddings re-
leased by Pyssalo et al. (2013) for the medical
domain. We test several perturbations on top of
CRCNN model, such as piecewise max-pooling, as

2https://github.com/explosion/spaCy
3https://allenai.github.io/scispacy/
4https://metamap.nlm.nih.gov

suggested by Zeng et al. (2015) and the more re-
cent ELMo embeddings by Peters et al. (2018). To
compare different featurizations of contextualized
embeddings, we also employ the embeddings gen-
erated by the BERT model (rather than the stan-
dard fine-tuning approach). For ELMo, we use
the Original (5.5B) model weights in semeval
and PubMed contributed model weights in the
medical datasets released by (Peters et al., 2018).
For BERT, we use the BERT-large uncased model
(without whole word masking) in semeval re-
leased by (Devlin et al., 2018), BioBERT by
(Lee et al., 2019) in ddi and Clinical BERT by
(Alsentzer et al., 2019) in i2b2.

The fine-tuning approach, which tends to be
computationally expensive, has been thoroughly
explored for multiple tasks, including medical re-
lation extraction by Lee et al. (2019), but the
approach of featurizing them with an existing
model has not been explored in the literature as
much. We tested different ways of featurizing the
BERT contextualized embeddings for researchers
who want to utilize a less computationally inten-
sive technique, while still aiming for performance
gains for their task.

Because ELMo provides token level embed-
dings, we chose to concatenate them with the
word and position embeddings from CRCNN be-
fore the convolution phase. However, BERT pro-
vides word-piece level as well as sentence level
embeddings. The first was concatenated similar
to ELMo (which we call BERT-tokens), while the
second was concatenated with the fixed size sen-
tence representation outputted after convolution of
word and position embeddings (BERT-CLS).

3.3 Training

We explore two ways of doing hyperparame-
ter tuning: manual tuning and random search
(Bergstra and Bengio, 2012).

Evaluating on three datasets meant that we
needed to identify a default list of hyperparame-
ters by tuning on one of the datasets before we
could identify the hyperparameter list for the other
two. We chose semeval for initial tuning due
to its larger literature and because the CRCNN
model was originally evaluated on this dataset.
We started with reference hyperparameters listed
in Zeng et al. (2014) and Santos et al. (2015) and
identified default hyperparameters after tuning on
a dev set randomly sampled from the training data



33

of the semeval dataset. These default hyperpa-
rameters5 were used as starting points for manual
tuning on the medical datasets as well as random
search for all datasets.

We perform manual tuning on a subset of the
hyperparameters, mentioned in table 2. In or-
der to avoid overfitting in cross validation pointed
out by Cawley and Talbot (2010), we perform a
nested cross validation procedure, keeping a dev
fold for hyperparameter tuning and a held out fold
for score reporting.

On these dev folds, we perform paired t-tests for
each of the perturbations to the parameters listed
in table 2. Our first pass involves changing one hy-
perparameter per experiment and noting the ones
that cause a statistically significant improvement,
which helps us identify a narrower list of hyperpa-
rameters to tune on. We further refine the hyper-
parameter values in our second pass by testing on
values similar to those that were leading to statis-
tically significant improvements in the first pass.
For example, if we noticed that lower epoch val-
ues were helpful in the first pass, we tested them in
combination with the other optimal hyperparame-
ter values (from first pass) in the second pass.

For each of the datasets, we tuned based on their
official challenge evaluation metrics listed in sec-
tion 2. ddi and i2b2 had 5-fold nested cross
validation performed on them, whereas semeval
had 10-fold cross validation performed.

Random search was performed based on the
official evaluation metrics for each dataset, on a
fixed dev set randomly sampled from the training
data. Final distributions are listed in table 3.

3.4 Evaluation

The official challenge problems for all datasets
compared models based on multi-class classifica-
tion, but for the medical datasets, we were also
interested in looking at the changes in model per-
formance if we treated the task as a binary classi-
fication problem. This was based on the rationale
that in the drug literature, for example, pharma-
cologists would not want to sacrifice the ability
to identify a potentially life threatening drug in-
teraction pair, even if the type of the drug pair is
not known. Therefore, we report results for both
multi-class and binary classification scenarios. For
clarity, we refer to them in the rest of the paper as
classification and detection respectively.

5listed in source code

Detection results were obtained using our eval-
uation scripts by treating existing relations as one
class, ignoring the types outputted by the model.
The other class in this task was the None or Other
class, representing non-existing relations. Note
that we did not re-train our model for this.

In addition to evaluating on two tasks for the
medical and one task for the general dataset, we
comment on the implications of different evalua-
tion metrics in section 5.5.

4 Results

For experiments on the medical datasets i.e. i2b2
and ddi, we used hyperparameters found from
manual search individually performed on them.
semeval had the default hyperparameters used
for its experiments. These sets of hyperparame-
ters were used in all experiments other than those
reported in table 6, where we compare hyperpa-
rameter tuning methodologies.

Once we had a fixed set of hyperparameters for
each dataset, we tested the perturbations for pre-
processing as well as modeling in tables 4 and
5. Perturbations on the hyperparameter search are
listed in table 6 and compare performance with
different hyperparameter values found using dif-
ferent tuning strategies.

We generate the standard classification and the
additional detection scores by the procedure de-
scribed in section 3.4, and report these results un-
der the Class and Detect columns.

We also report additional experiments in tables
7 and 8 based on the improvements found in tables
4 and 5. For all results tables, we report official
test set results at the top, with accompanying cross
validated results (averaged over all folds with their
standard deviation) in smaller font below them.6

5 Discussion

Recently, CNNs have achieved strong perfor-
mance for text classification and are typically
more efficient than recurrent architectures (Bai
et al., 2018; Kalchbrenner et al., 2014; Wang et al.,
2015; Zhang et al., 2015b). The speed of our base-
line CRCNN model allows us to explore multiple
alternatives for every stage of our pipeline. We
discuss these results pertaining to the classifica-
tion task for all datasets and the detection task for

6Results tables for metrics other than the official ones
were omitted in the interest of space, but their analysis ex-
ists in section 5.5.



34

Hyperparameter Values
epoch {50,100,150,200}
lr decay [1e-3, 1e-4, 1e-5]
sgd momentum {T, F}
early stop {T, F}
pos embed {10, 50, 80, 100}
filter dimension {50, 150}
filter size 2-3-4, 3-4-5
batch size {70, 30}

Table 2: Hyperparameters explored for the first pass
of manual search. lr decay means learning rate decay
at [60, 120] epochs, pos embed refers to the position
embedding size.

Hyperparameter Distributions
epoch uniform(70, 300)
lr {constant, decay}
lr init uniform(1e-5, 0.001)

filter size
2-3, 2-3-4, 2-3-4-5

3-4-5, 3-4-5-6
early stop {T, F}
batch size uniform(30, 70)

Table 3: Hyperparameter distributions for random
search. Those written in {} are picked with equal prob-
abilities. The learning rate (lr) was uniformly initial-
ized, and decayed from 0.001 to the intialized value at
half of the number of epochs. If early stop was true,
patience was set to a fifth of the number of epochs. We
ran 100-120 experiments for each dataset to search for
optimal hyperparameters.

the medical datasets.

5.1 Pre-processing

Often, papers fail to mention the importance of
pre-processing in performance improvements. Ex-
periments in table 4 reveal that they can cause
larger variations in performance than modeling.

We applied pre-processing changes with the
CRCNN model with default hyperparameters for
semeval and manual hyperparameters for the
medical datasets. All comparisons are per-
formed against the original pre-processing tech-
nique, which involved using the original dataset
sentences in training and test.

Punctuation and digits hold more importance
for the ddi dataset, which is a biomedical dataset,
compared to the other two datasets. We looked
at examples where this technique led to an incor-
rect prediction, but original pre-processing led to
a correct one to investigate the source of perfor-
mance further. The examples indicate that removal

of punctuation is driving worse performance com-
pared to the normalization of digits. A detailed
analysis for these is present in (Chauhan, 2019).

Stop word removal is a common technique in
Natural Language Processing (NLP) to simplify
the sentence by cutting out commonly used words
such as the and is in order to simplify the sentence.
We found that stop words seem to be important
for relation extraction for all three datasets that we
looked at, to a smaller degree for i2b2 compared
to the other two datasets. Looking at examples
misclassified by this technique revealed important
stop words for different relations, which indicates
that the removal of stop words is not beneficial in
the relation extraction setting. Example types are
shown in (Chauhan, 2019).

The availability of fine-grained concept types
is likely to boost performance in relation extrac-
tion settings. The i2b2 dataset provided fine-
grained concept types in the form of medical prob-
lem, test and treatments. Entity blinding causes
almost 9% improvement in classification perfor-
mance and 1% improvement in detection perfor-
mance. In contrast, ddi only provided gold stan-
dard annotations for drug types in the sentence,
and while this does not cause statistically signifi-
cant improvements for cross validation, it does im-
prove test set classification performance by about
1.5% and detection performance by 1%. For these
medical datasets, NER blinding consisted of re-
placing the detected named entities by Entity be-
cause named entity types were not available. Due
to the coarse-grained nature of the entities, it hurts
classification performance significantly, and de-
tection performance a little.

While entity blinding hurts performance for
semeval, possibly due to the coarse-grained na-
ture of the replacement, NER blinding does not
hurt performance. Looking at misclassified exam-
ples for entity blinding and NER blinding tech-
niques supports this hypothesis (Chauhan, 2019).

To recall, entity blinding involved replacement
of entity words by Entity, while NER blinding in-
volved replacing named entities in the sentence
with labels such as ORGANIZATION and PER-
SON. In settings where fine-grained entity blind-
ing may not be helping, they may be helpful
as added features into the model, as shown by
(Socher et al., 2012).

For the medical datasets, while classification
performance varies highly with different pre-



35

Preprocess
Dataset semeval ddi i2b2

Class Detect Class Detect

Original
81.55 65.53 81.74 59.75 83.17

80.85 (1.31) 82.23 (0.32) 88.40 (0.48) 70.10 (0.85) 86.45 (0.58)

Entity Blinding
72.73 67.02 82.37 68.76 84.37

71.31 (1.14) 83.56 (2.05)• 89.45 (1.05)• 76.59 (1.07) 88.41 (0.37)

Punct and Digit
81.23 63.41 80.49 58.85 81.96

80.95 (1.21)• 80.44 (1.77) 87.52 (0.98) 69.37 (1.43)• 85.82 (0.43)

Punct, Digit and Stop
72.92 55.87 76.57 56.19 80.47

71.61 (1.25) 78.52 (1.99) 85.65 (1.21) 68.14 (2.05)• 84.84 (0.77)

NER Blinding
81.63 57.22 79.03 50.41 81.61

80.85 (1.07)• 78.06 (1.45) 86.79 (0.65) 66.26 (2.44) 86.72 (0.57)•

Table 4: Pre-processing techniques with CRCNN model. Row labels Original = simple tokenization and lower
casing of words, Punct = punctuation removal, Digit = digit removal and Stop = stop word removal. Test set results
at the top with cross validated results (average with standard deviation) below. All cross validated results are
statistically significant compared to Original pre-processing (p < 0.05) using a paired t-test except those marked
with a •

Modeling
Dataset semeval ddi i2b2

Class Detect Class Detect

CRCNN
81.55 65.53 81.74 59.75 83.17

80.85 (1.31) 82.23 (0.32) 88.40 (0.48) 70.10 (0.85) 86.45 (0.58)

Piecewise pool
81.59 63.01 80.62 60.85 83.69

80.55 (0.99)• 81.99 (0.38)• 88.47 (0.48)• 73.79 (0.97) 89.29 (0.61)

BERT-tokens
85.67 71.97 86.53 63.11 84.91

85.63 (0.83) 85.35 (0.53) 90.70 (0.46) 72.06 (1.36) 87.57 (0.75)

BERT-CLS
82.42 61.3 79.63 56.79 81.91

80.83 (1.18)• 82.71 (0.68)• 88.35 (0.77)• 67.37 (1.08) 85.43 (0.36)

ELMo
85.89 66.63 83.05 63.18 84.54

84.79 (1.08) 84.53 (0.96) 90.11 (0.56) 72.53 (0.80) 87.81 (0.34)

Table 5: Modeling techniques with original pre-processing. Test set results at the top with cross validated results
(average with standard deviation) below. All cross validated results are statistically significant compared to CRCNN
model (p < 0.05) using a paired t-test except those marked with a •. In terms of statistical significance, comparing
contextualized embeddings with each other reveals that BERT-tokens is equivalent to ELMo for i2b2, but for
semeval BERT-tokens is better than ELMo and for ddi BERT-tokens is better than ELMo only for detection.

processing techniques, detection is relatively un-
affected. In a setting where one cares more about
detection of relationships rather than multi-class
classification, one would be able to get away with
using non-complicated pre-processing techniques
to maintain reasonable performance.

5.2 Split Bias

All three datasets evaluate models based on one
score on the test set, which is common practice
for NLP challenges. Reporting one score as op-
posed to a distribution of scores has been shown to
be problematic by Reimers and Gurevych (2017)
for sequence tagging. Recently, Crane (2018) dis-
cuss similar problems for question-answering. We
show that even if you keep the same random ini-

tialization seed (all our experiments have a fixed
random initialization seed), split bias can be an-
other source of variation in scores.

In our experiments, significance testing of some
cross validated results reveals no significance even
when the test set result improves in performance.
This is particularly concerning for ddi where en-
tity blinding (called drug blinding in the litera-
ture) is used as a standard pre-processing tech-
nique without ablation studies demonstrating its
effectiveness. Our results suggest the contrary:
entity blinding seems to help test set performance
for ddi in table 4, but shows no statistical signifi-
cance. Table 8 further demonstrates that using this
in conjunction with other techniques results in test
score variations despite being statistically insignif-



36

Hyperparam Tuning
Dataset semeval ddi i2b2

Class Detect Class Detect

Default
81.55 62.55 80.29 55.15 81.98

80.85 (1.31) 81.62 (1.35) 87.76 (1.03) 67.28 (1.83) 86.57 (0.58)

Manual Search
- 65.53 81.74 59.75 83.17

82.23 (0.32)• 88.40 (0.48)• 70.10 (0.85) 86.45 (0.58)•

Random Search
82.2 62.29 79.04 55.0 80.77

81.10 (1.26)• 75.43 (1.48) 83.54 (0.60) 60.66 (1.43) 82.73 (0.49)

Table 6: Hyperparameter tuning methods with original pre-processing and fixed CRCNN model. Test set results
at the top with cross validated results (average with standard deviation) below. All cross validated results are
statistically significant compared to Default with p < 0.05 except those marked with a •. Note that hyperparameter
tuning can involve much higher performance variation depending on the distribution of the data. Therefore, even
though there is no statistical significance in the manual search case for the held out fold in the ddi dataset, there was
statistical significance for the dev fold which drove those set of hyperparameters. For both ddi and i2b2 datasets,
manual search is better than random search with p < 0.05.

Technique
Task

Classification Detection

E + ent
70.46 86.17

77.70(1.26) 89.36 (0.50)

B + ent
70.56 85.66

76.72 (1.04) 88.63 (0.33)

E + piece + ent
70.62 86.14

79.41 (0.53) 90.37 (0.44)

B + piece + ent
71.01 86.26

79.51 (1.09) 90.34 (0.53)

piece + ent
69.73 85.44

78.12 (1.10) 89.74 (0.44)

E + piece
63.19 84.92

74.76 (0.68) 89.90 (0.37)

B + piece
63.23 85.45

74.67 (0.89) 89.61 (0.68)

Table 7: Additional experiments for i2b2. E = ELMo,
B = BERT-tokens, ent = entity blinding, piece = piece-
wise pooling. All results are statistically significant
compared to BERT-tokens and ELMo models respec-
tively from table 5 and piece + ent row is statistically
significant compared to piecewise pool model as well
as entity blinding model. These are all statistically sig-
nificantly better than the CRCNN model from table 5

icant.
No statistical significance is seen even when the

test set result worsens in performance for BERT-
CLS in table 5 where it hurts test set performance
on ddi but is not statistically significant when
cross validation is performed.

5.3 Modeling

In table 5, we tested the generalizability of the
commonly used piecewise pooling technique pro-
posed in (Zeng et al., 2015), a variant of which

Technique
Task

Classification Detection

E + ent
68.69 83.72

86.25 (1.54) 91.35 (0.90)

B + ent
70.66 85.35

85.79 (1.54) 91.26 (0.63)

Table 8: Additional experiments for ddi. E = ELMo,
B = BERT-tokens, ent = entity blinding. Results are not
statistically significant compared to BERT-tokens and
ELMo models respectively from table 5 and not from
each other either.

was applied in the model by Luo et al. for i2b2.
We also tested the improvements offered by differ-
ent featurizations of contextualized embeddings,
which has not been explored much for relation ex-
traction.

Modeling changes were applied with the
original pre-processing technique for the
CRCNN model with default hyperparameters
for semeval and manual hyperparameters
for the medical datasets. All comparisons are
performed with the baseline performance of the
CRCNN model.

While piecewise pooling helps i2b2 by 1%,
it hurts test set performance on ddi and doesn’t
affect performance on semeval. While it may
be intuitive to split pooling by entity location, this
technique is not generalizable to other datasets.

We also found that while contextualized embed-
dings generally boost performance, they should
be concatenated with the word embeddings before
the convolution stage to cause a significant boost
in performance. We found ELMo and BERT-
tokens to boost performance significantly for all



37

datasets, but that BERT-CLS hurt performance for
the medical datasets. While BERT-CLS boosted
test set performance for semeval, this was not
found to be a statistically significant difference
for cross validation. Note that we featurized
ELMo similarly to BERT-tokens and the details
are present in section 3.2.

This indicates that the technique of featurizing
the contextualized embeddings is important for a
CNN architecture. Concatenating the contextual-
ized embeddings with the word embeddings keeps
a tighter coupling, which is helpful for relation ex-
traction where the word level associations are es-
sential in predicting the relation type.

5.4 Hyperparameter Tuning

Bergstra and Bengio (2012) show the superior-
ity of random search over grid search in terms
of faster convergence, but leave to future work
automating the procedure of manual tuning, i.e.
sequential optimization. Bayesian optimization
strategies could help with this (Snoek et al., 2012)
but often require expert knowledge for correct ap-
plication. We tested how manual tuning, requiring
less expert knowledge than Bayesian optimization,
would compare to the random search strategy in
table 6. For both i2b2 and ddi corpora, manual
search outperformed random search.

5.5 Evaluation Metrics

Picking the right evaluation metric for a dataset is
critical, and it is important to choose a metric that
has the biggest delta between different model per-
formances for example types we care about. Ta-
bles for different metric results for all datasets are
provided in Appendix B.

When using micro and macro statistics (preci-
sion, recall and F1), class imbalance dictates the
one to pick. Macro statistics are highly affected
by imbalance, whereas micro statistics are able to
recover well. Despite suffering due to class imbal-
ance, though, macro statistics may be more appro-
priate than micro as they provide stronger discrim-
inative capabilities by providing equal importance
to classes of smaller sizes. However, micro statis-
tics are as discriminative as macro statistics in set-
tings when the classes are relatively balanced. We
are going to talk about the classification tasks in
the next two paragraphs.

Compared to semeval, ddi and i2b2 suf-
fer from stark class imbalances. semeval has a

number of examples in non-Other classes rang-
ing from 200 or 300 to 1000. Other class has
about 3000 examples which are not included in
the official metric calculations. ddi has one class
with 228 examples, while the others have about
1000 examples. The None class has 21,948 exam-
ples which is included for the official score cal-
culations. i2b2 has five classes in the 100-500
range, while the others contain about 2000 exam-
ples. None is the largest class with 19,934 exam-
ples.

Using micro statistics is reasonable for i2b2
because the highly imbalanced class is not in-
cluded in the calculations. Therefore, this metric
is able to be as discriminative as macro statistics.
For example, test set micro F1 between baseline
and entity blinding techniques is 59.75 and 68.76,
while that for macro F1 is 36.44 and 43.76. In con-
trast, using micro statistics is a bad idea for ddi
because the performance on the None class would
drive most of the predictive results of the model.
For example, micro-F1 between baseline and NER
blinding is 88.69 and 86.18, whereas macro-F1 is
65.53 and 57.22. semeval does not have a stark
contrast between micro and macro scores due to
Other class not being included in the calculation.
Using either metric to evaluate models is reason-
able for this dataset.

The detection task does not suffer from such
variations due to the lower class imbalance. For
example, ddi dataset micro-F1 between baseline
and NER blinding model is 90.01 and 88.74, while
macro-F1 is 81.74 and 79.03. This further sug-
gests that modeling differences and pre-processing
differences cause more variation in performance in
settings when the class imbalance is higher.

6 Comparison with SOTA

The best classification test set results found are
listed in table 9. Note that we do not compare
the extraction task for datasets other than ddi be-
cause the official challenges only compared classi-
fication results. Even though the official challenge
did not rank models based on the detection task,
recent papers in the ddi literature mention these
results.

Wang et al. (2016) report a result of 88% on
semeval and do not provide any public source
code for replication purposes. Despite being be-
low the state of the art range, REflex provides
the best performing publicly available model for



38

Dataset Result Technique
semeval 85.89 E
ddi 71.97, 86.53 B
i2b2 71.01 B + piece + ent

Table 9: Best test set classification results for all
datasets, except ddi where detection results are men-
tioned after the classification results. piece = Piece-
wise pooling, ent = entity blinding, E = ELMo, B =
BERT-tokens. Result corresponds to F1 scores, macro
for semeval and ddi, but micro for i2b2.

this dataset. Zheng et al. (2017) report the best re-
sult on ddi (77.3%) but perform negative instance
filtering, which is a highly specific pre-processing
technique that does not fit with the flexible na-
ture of REflex. This technique cuts specific ex-
amples from the dataset, but the paper is unclear
about whether train as well as test data are short-
ened. If the test data is being shortened, the per-
formance comparison becomes unfair due to eval-
uation on different test samples. Unfortunately,
source code was not publicly available to answer
these questions.

Note that Zhao et al. (2016) show that negative
instance filtering causes a 4.1% improvement in
test set performance. If REflex were to use this
pre-processing technique, it would reach close to
the state-of-the-art (SOTA) number on the classi-
fication task. On the other hand, results from the
detection results outperform this model by 2.53%.

Sahu et al. (2016) (code unavailable) report a
state of the art result of 71.16% on i2b2, which
the results in table 9 are able to match. Note that
(Rink et al., 2011) report a result of 73.7% with a
support vector machine, but they used a larger ver-
sion of the dataset. Comparison against different
subsets of the dataset would not be fair.

Comparison against these numbers demon-
strates that REflex is the only open-source
framework, providing performance near SOTA
ranges for the three datasets. Therefore, REflex
can be used as a strong baseline model in future
relation extraction studies.

7 Conclusion

Our findings reveal variations offered by pre-
processing and training methodologies, which of-
ten go unreported. They indicate that comparing
models without having these techniques standard-
ized can make it difficult to assess the true source

of performance gains. Our key findings are:

1. Pre-processing can have a strong effect
on performance, sometimes more than modeling
techniques, as is the case of i2b2. Concept types
seem to offer useful information, perhaps reveal-
ing more general semantic information in the sen-
tence that can help with predictions. Fine-grained
Gold standard annotated concept types are most
beneficial, but those from automatically extracted
packages may also be useful as long as they con-
sist of multiple types. Punctuation and digits may
hold more importance in biomedical settings, but
stop words hold significance in all settings.

2. Reporting on one test set score can be prob-
lematic due to split bias, and a cross validation ap-
proach with significance tests may help ease some
of this bias. Drug blinding for ddi is commonly
used in the literature but does not seem to offer any
statistically significant improvements. Therefore,
it is unnecessary to use in this domain.

3. Contextualized embeddings are generally
helpful but the featurizing technique is important:
for CNN models, concatenating them with the
word embeddings before convolution is most ben-
eficial.

4. Picking the right hyperparameters for a
dataset is important to performance. We suggest
an initial manual hyperparameter search based
on cross validation significance tests because that
may be sufficient in most cases. If one is not
pressed for time, random search is a reasonable au-
tomated option for hyperparameter tuning, but re-
quires more experience for picking the right search
space and the right distributions for the hyperpa-
rameters.

5. Picking the right evaluation metrics for a new
dataset should be driven by class imbalance issues
for the classes chosen to be evaluated on.

Acknowledgments

This work was funded in part by a collaborative
agreement between MIT and Wistron Corp, the
National Institutes of Health (National Institutes
of Mental Health grant P50-MH106933), and a
Mitacs Globalink Research Award. Finally, the
authors would like to thank Di Jin and Elena
Sergeeva from the MIT-CSAIL Clinical Decision
Making Group for providing helpful feedback.



39

References

Heike Adel, Benjamin Roth, and Hinrich Schütze.
2016. Comparing convolutional neural networks to
traditional models for slot filling. In Proceedings of
the 2016 Conference of the North American Chap-
ter of the Association for Computational Linguis-
tics: Human Language Technologies, pages 828–
838. Association for Computational Linguistics.

Emily Alsentzer, John R Murphy, Willie Boag, Wei-
Hung Weng, Di Jin, Tristan Naumann, and Matthew
McDermott. 2019. Publicly available clinical bert
embeddings. arXiv preprint arXiv:1904.03323.

Shaojie Bai, J Zico Kolter, and Vladlen Koltun.
2018. An empirical evaluation of generic convolu-
tional and recurrent networks for sequence model-
ing. arXiv preprint arXiv:1803.01271.

James Bergstra and Yoshua Bengio. 2012. Random
search for hyper-parameter optimization. Journal of
Machine Learning Research, 13(Feb):281–305.

Rui Cai, Xiaodong Zhang, and Houfeng Wang. 2016.
Bidirectional recurrent convolutional neural network
for relation classification. In Proceedings of the
54th Annual Meeting of the Association for Compu-
tational Linguistics (Volume 1: Long Papers), vol-
ume 1, pages 756–765.

Gavin C Cawley and Nicola LC Talbot. 2010. On over-
fitting in model selection and subsequent selection
bias in performance evaluation. Journal of Machine
Learning Research, 11(Jul):2079–2107.

Geeticka Chauhan. 2019. REflex: Flexible Framework
for Relation Extraction in Multiple Domains. Mas-
ter’s thesis, Massachusetts Institute of Technology.

Veera Raghavendra Chikka and Kamalakar Karla-
palem. 2018. A hybrid deep learning approach for
medical relation extraction. CoRR.

Marc Claesen and Bart De Moor. 2015. Hyperpa-
rameter search in machine learning. arXiv preprint
arXiv:1502.02127.

Ronan Collobert, Jason Weston, Léon Bottou, Michael
Karlen, Koray Kavukcuoglu, and Pavel Kuksa.
2011. Natural language processing (almost) from
scratch. Journal of Machine Learning Research,
12(Aug):2493–2537.

Matt Crane. 2018. Questionable answers in question
answering research: Reproducibility and variability
of published results. Transactions of the Association
of Computational Linguistics, 6:241–252.

Jacob Devlin, Ming-Wei Chang, Kenton Lee, and
Kristina Toutanova. 2018. Bert: Pre-training of deep
bidirectional transformers for language understand-
ing. arXiv preprint arXiv:1810.04805.

Javid Ebrahimi and Dejing Dou. 2015. Chain based
rnn for relation classification. In Proceedings of the
2015 Conference of the North American Chapter of
the Association for Computational Linguistics: Hu-
man Language Technologies, pages 1244–1249.

Antske Fokkens, Marieke Van Erp, Marten Postma,
Ted Pedersen, Piek Vossen, and Nuno Freire. 2013.
Offspring from reproduction problems: What repli-
cation failure teaches us. In Proceedings of the
51st Annual Meeting of the Association for Compu-
tational Linguistics (Volume 1: Long Papers), vol-
ume 1, pages 1691–1701.

Roxana Girju, Preslav Nakov, Vivi Nastase, Stan Sz-
pakowicz, Peter Turney, and Deniz Yuret. 2007.
Semeval-2007 task 04: Classification of semantic re-
lations between nominals. In Proceedings of the 4th
International Workshop on Semantic Evaluations,
pages 13–18. Association for Computational Lin-
guistics.

Kazuma Hashimoto, Makoto Miwa, Yoshimasa Tsu-
ruoka, and Takashi Chikayama. 2013. Simple cus-
tomization of recursive neural networks for semantic
relation classification. In Proceedings of the 2013
Conference on Empirical Methods in Natural Lan-
guage Processing, pages 1372–1376.

Bin He, Yi Guan, and Rui Dai. 2018a. Classifying
medical relations in clinical text via convolutional
neural networks. Artificial intelligence in medicine.

Bin He, Yi Guan, and Rui Dai. 2018b. Convolutional
gated recurrent units for medical relation classifica-
tion. CoRR, abs/1807.11082.

Iris Hendrickx, Su Nam Kim, Zornitsa Kozareva,
Preslav Nakov, Diarmuid Ó Séaghdha, Sebastian
Padó, Marco Pennacchiotti, Lorenza Romano, and
Stan Szpakowicz. 2009. Semeval-2010 task 8:
Multi-way classification of semantic relations be-
tween pairs of nominals. In Proceedings of
the Workshop on Semantic Evaluations: Recent
Achievements and Future Directions, pages 94–99.
Association for Computational Linguistics.

Degen Huang, Zhenchao Jiang, Li Zou, and Lishuang
Li. 2017. Drug-drug interaction extraction from
biomedical literature using support vector machine
and long short term memory networks. Information
Sciences, 415.

Darrel C Ince, Leslie Hatton, and John Graham-
Cumming. 2012. The case for open computer pro-
grams. Nature, 482(7386):485.

Di Jin, Franck Dernoncourt, Elena Sergeeva, Matthew
McDermott, and Geeticka Chauhan. 2018. MIT-
MEDG at SemEval-2018 Task 7: Semantic Rela-
tion Classification via Convolution Neural Network.
In Proceedings of The 12th International Workshop
on Semantic Evaluation, pages 798–804. Associa-
tion for Computational Linguistics.



40

Wen Juan Hou and Bamfa Ceesay. 2018. Extraction
of drug-drug interaction using neural embedding.
Journal of Bioinformatics and Computational Biol-
ogy, 16.

Nal Kalchbrenner, Edward Grefenstette, and Phil Blun-
som. 2014. A convolutional neural network for
modelling sentences. In Proceedings of the 52nd
Annual Meeting of the Association for Computa-
tional Linguistics (Volume 1: Long Papers), pages
655–665. Association for Computational Linguis-
tics.

Ramakanth Kavuluru, Anthony Rios, and Tung Tran.
2017. Extracting drug-drug interactions with word
and character-level recurrent neural networks. 2017
IEEE International Conference on Healthcare Infor-
matics (ICHI), pages 5–12.

Jinhyuk Lee, Wonjin Yoon, Sungdong Kim,
Donghyeon Kim, Sunkyu Kim, Chan Ho So, and
Jaewoo Kang. 2019. Biobert: pre-trained biomed-
ical language representation model for biomedical
text mining. arXiv preprint arXiv:1901.08746.

Omer Levy, Minjoon Seo, Eunsol Choi, and Luke
Zettlemoyer. 2017. Zero-shot relation extraction
via reading comprehension. In Proceedings of the
21st Conference on Computational Natural Lan-
guage Learning (CoNLL 2017), pages 333–342. As-
sociation for Computational Linguistics.

Fei Li, Meishan Zhang, Guohong Fu, and Donghong
Ji. 2017. A neural joint model for entity and relation
extraction from biomedical text. BMC bioinformat-
ics, 18(1):198.

Jiwei Li and Dan Jurafsky. 2015. Do multi-sense em-
beddings improve natural language understanding?
arXiv preprint arXiv:1506.01070.

Q. Li, Z. Yang, L. Luo, L. Wang, Y. Zhang, H. Lin,
J. Wang, L. Yang, K. Xu, and Y. Zhang. 2018a.
A multi-task learning based approach to biomed-
ical entity relation extraction. In 2018 IEEE
International Conference on Bioinformatics and
Biomedicine (BIBM), pages 680–682.

Yifu Li, Ran Jin, and Yuan Luo. 2018b. Classifying
relations in clinical narratives using segment graph
convolutional and recurrent neural networks (seg-
gcrns). Journal of the American Medical Informat-
ics Association, 26(3):262–268.

Sangrak Lim and Jaewoo Kang. 2018a. Chemicalgene
relation extraction using recursive neural network.
In Database.

Sangrak Lim and Jaewoo Kang. 2018b. Drug drug in-
teraction extraction from the literature using a recur-
sive neural network. In PloS one.

Sangrak Lim, Kyubum Lee, and Jaewoo Kang. 2018.
Drug drug interaction extraction from the literature
using a recursive neural network. Plos one, 13:1–17.

Shengyu Liu, Kai Chen, Qingcai Chen, and Buzhou
Tang. 2016a. Dependency-based convolutional neu-
ral network for drug-drug interaction extraction.
2016 IEEE International Conference on Bioinfor-
matics and Biomedicine (BIBM), pages 1074–1080.

Shengyu Liu, Buzhou Tang, Qingcai Chen, and Xiao-
long Wang. 2016b. Drug-drug interaction extraction
via convolutional neural networks. Computational
and mathematical methods in medicine, 2016.

Yuan Luo. 2017. Recurrent neural networks for classi-
fying relations in clinical notes. Journal of Biomed-
ical Informatics, 72.

Yuan Luo, Yu Cheng, Özlem Uzuner, Peter Szolovits,
and Justin Starren. 2017. Segment convolutional
neural networks (seg-cnns) for classifying relations
in clinical notes. Journal of the American Medical
Informatics Association, 25(1):93–98.

Xinbo Lv, Yi Guan, Jinfeng Yang, and Jiawei Wu.
2016. Clinical relation extraction with deep learn-
ing. In International Journal of Hybrid Information
Technology.

Makoto Miwa and Mohit Bansal. 2016. End-to-end re-
lation extraction using lstms on sequences and tree
structures. In Proceedings of the 54th Annual Meet-
ing of the Association for Computational Linguistics
(Volume 1: Long Papers), pages 1105–1116. Asso-
ciation for Computational Linguistics.

Dat Quoc Nguyen and Karin Verspoor. 2018. Convolu-
tional neural networks for chemical-disease relation
extraction are improved with character-based word
embeddings. arXiv preprint arXiv:1805.10586.

Thien Huu Nguyen and Ralph Grishman. 2015. Com-
bining neural networks and log-linear models to im-
prove relation extraction. CoRR, abs/1511.05926.

Matthew Peters, Mark Neumann, Mohit Iyyer, Matt
Gardner, Christopher Clark, Kenton Lee, and Luke
Zettlemoyer. 2018. Deep contextualized word repre-
sentations. In Proceedings of the 2018 Conference
of the North American Chapter of the Association
for Computational Linguistics: Human Language
Technologies, Volume 1 (Long Papers), pages 2227–
2237. Association for Computational Linguistics.

Sampo Pyssalo, Filip Ginter, Hans Moen, Tapio
Salakoski, and Sophia Ananiadou. 2013. Distribu-
tional semantics resources for biomedical text pro-
cessing. In Proceedings of the 5th International
Symposium on Languages in Biology and Medicine,
Tokyo, Japan, pages 39–43.

Pengda Qin, Weiran Xu, and Jun Guo. 2016. An
empirical convolutional neural network approach
for semantic relation classification. Neurocomput.,
190:1–9.

Chanqin Quan, Lei Hua, Xiao Sun, and Wenjun Bai.
2016. Multichannel convolutional neural network
for biological relation extraction. In BioMed re-
search international.



41

Nils Reimers and Iryna Gurevych. 2017. Reporting
score distributions makes a difference: Performance
study of lstm-networks for sequence tagging. In
Proceedings of the 2017 Conference on Empirical
Methods in Natural Language Processing, pages
338–348, Copenhagen, Denmark. Association for
Computational Linguistics.

Bryan Rink, Sanda Harabagiu, and Kirk Roberts. 2011.
Automatic extraction of relations between medical
concepts in clinical texts. Journal of the American
Medical Informatics Association, 18(5):594–600.

Jonathan Rotsztejn, Nora Hollenstein, and Ce Zhang.
2018. Eth-ds3lab at semeval-2018 task 7: Effec-
tively combining recurrent and convolutional neural
networks for relation classification and extraction.
In Proceedings of The 12th International Workshop
on Semantic Evaluation, pages 689–696. Associa-
tion for Computational Linguistics.

Mohammed Saeed, Mauricio Villarroel, Andrew T
Reisner, Gari Clifford, Li-Wei Lehman, George
Moody, Thomas Heldt, Tin H Kyaw, Benjamin
Moody, and Roger G Mark. 2011. Multiparameter
intelligent monitoring in intensive care ii (mimic-ii):
a public-access intensive care unit database. Critical
care medicine, 39(5):952.

Sunil Sahu, Ashish Anand, Krishnadev Oruganty, and
Mahanandeeshwar Gattu. 2016. Relation extraction
from clinical texts using domain invariant convolu-
tional neural network. In Proceedings of the 15th
Workshop on Biomedical Natural Language Pro-
cessing, pages 206–215. Association for Computa-
tional Linguistics.

Sunil Kumar Sahu and Ashish Anand. 2018. Drug-
drug interaction extraction from biomedical texts us-
ing long short-term memory network. Journal of
Biomedical Informatics, 86:15 – 24.

Cicero Nogueira dos Santos, Bing Xiang, and Bowen
Zhou. 2015. Classifying relations by ranking with
convolutional neural networks. arXiv preprint
arXiv:1504.06580.

Guergana K Savova, James J Masanz, Philip V Ogren,
Jiaping Zheng, Sunghwan Sohn, Karin C Kipper-
Schuler, and Christopher G Chute. 2010. Mayo clin-
ical text analysis and knowledge extraction system
(ctakes): architecture, component evaluation and ap-
plications. Journal of the American Medical Infor-
matics Association, 17(5):507–513.

Isabel Segura-Bedmar, Paloma Martı́nez, and
Marı́a Herrero Zazo. 2013. Semeval-2013 task
9: Extraction of drug-drug interactions from
biomedical texts (ddiextraction 2013). In Second
Joint Conference on Lexical and Computational
Semantics (* SEM), Volume 2: Proceedings of
the Seventh International Workshop on Semantic
Evaluation (SemEval 2013), volume 2, pages
341–350.

Jasper Snoek, Hugo Larochelle, and Ryan P Adams.
2012. Practical bayesian optimization of machine
learning algorithms. In Advances in neural informa-
tion processing systems, pages 2951–2959.

Richard Socher, Brody Huval, Christopher D Manning,
and Andrew Y Ng. 2012. Semantic compositional-
ity through recursive matrix-vector spaces. In Pro-
ceedings of the 2012 joint conference on empirical
methods in natural language processing and com-
putational natural language learning, pages 1201–
1211. Association for Computational Linguistics.

Simon Suster, Madhumita Sushil, and Walter Daele-
mans. 2018. Revisiting neural relation classifica-
tion in clinical notes with external information. In
Proceedings of the Ninth International Workshop on
Health Text Mining and Information Analysis, pages
22–28. Association for Computational Linguistics.

Özlem Uzuner, Brett R South, Shuying Shen, and
Scott L DuVall. 2011. 2010 i2b2/va challenge on
concepts, assertions, and relations in clinical text.
Journal of the American Medical Informatics Asso-
ciation, 18(5):552–556.

Ngoc Thang Vu, Heike Adel, Pankaj Gupta, and Hin-
rich Schütze. 2016. Combining recurrent and convo-
lutional neural networks for relation classification.
In Proceedings of the 2016 Conference of the North
American Chapter of the Association for Computa-
tional Linguistics: Human Language Technologies,
pages 534–539. Association for Computational Lin-
guistics.

Linlin Wang, Zhu Cao, Gerard De Melo, and Zhiyuan
Liu. 2016. Relation classification via multi-level at-
tention CNNs. In Proceedings of the 54th annual
meeting of the Association for Computational Lin-
guistics (volume 1: long papers), volume 1, pages
1298–1307.

Peng Wang, Jiaming Xu, Bo Xu, Chenglin Liu, Heng
Zhang, Fangyuan Wang, and Hongwei Hao. 2015.
Semantic clustering and convolutional neural net-
work for short text categorization. In Proceedings
of the 53rd Annual Meeting of the Association for
Computational Linguistics and the 7th International
Joint Conference on Natural Language Processing
(Volume 2: Short Papers), volume 2, pages 352–357.

Wei Wang, Xi Yang, Canqun Yang, Xiao-Wei Guo, Xi-
ang Zhang, and Chengkun Wu. 2017. Dependency-
based long short term memory network for drug-
drug interaction extraction. BMC Bioinformatics,
18.

Kun Xu, Yansong Feng, Songfang Huang, and
Dongyan Zhao. 2015a. Semantic relation clas-
sification via convolutional neural networks
with simple negative sampling. arXiv preprint
arXiv:1506.07650.

Yan Xu, Ran Jia, Lili Mou, Ge Li, Yunchuan Chen,
Yangyang Lu, and Zhi Jin. 2016. Improved rela-
tion classification by deep recurrent neural networks



42

with data augmentation. In Proceedings of COLING
2016, the 26th International Conference on Compu-
tational Linguistics: Technical Papers, pages 1461–
1470. The COLING 2016 Organizing Committee.

Yan Xu, Lili Mou, Ge Li, Yunchuan Chen, Hao Peng,
and Zhi Jin. 2015b. Classifying relations via long
short term memory networks along shortest depen-
dency paths. In Proceedings of the 2015 conference
on empirical methods in natural language process-
ing, pages 1785–1794.

Wenpeng Yin, Katharina Kann, Mo Yu, and Hin-
rich Schütze. 2017. Comparative study of cnn
and rnn for natural language processing. CoRR,
abs/1702.01923.

Mo Yu, Matthew Gormley, and Mark Dredze. 2014.
Factor-based compositional embedding models. In
NIPS Workshop on Learning Semantics, pages 95–
101.

Daojian Zeng, Kang Liu, Yubo Chen, and Jun Zhao.
2015. Distant supervision for relation extraction via
piecewise convolutional neural networks. In Pro-
ceedings of the 2015 Conference on Empirical Meth-
ods in Natural Language Processing, pages 1753–
1762.

Daojian Zeng, Kang Liu, Siwei Lai, Guangyou Zhou,
and Jun Zhao. 2014. Relation classification via con-
volutional deep neural network. In Proceedings of
COLING 2014, the 25th International Conference
on Computational Linguistics: Technical Papers,
pages 2335–2344.

Dongxu Zhang and Dong Wang. 2015. Relation classi-
fication via recurrent neural network. arXiv preprint
arXiv:1508.01006.

Shu Zhang, Dequan Zheng, Xinchen Hu, and Ming
Yang. 2015a. Bidirectional long short-term memory
networks for relation classification. In Proceedings
of the 29th Pacific Asia Conference on Language,
Information and Computation, pages 73–78.

Xiang Zhang, Junbo Zhao, and Yann LeCun. 2015b.
Character-level convolutional networks for text clas-
sification. In Advances in neural information pro-
cessing systems, pages 649–657.

Yuhao Zhang, Peng Qi, and Christopher D. Manning.
2018. Graph convolution over pruned dependency
trees improves relation extraction. In Proceedings of
the 2018 Conference on Empirical Methods in Nat-
ural Language Processing, pages 2205–2215. Asso-
ciation for Computational Linguistics.

Zhehuan Zhao, Zhihao Yang, Ling Luo, Hongfei
Lin, and Jian Wang. 2016. Drug drug interac-
tion extraction from biomedical literature using syn-
tax convolutional neural network. Bioinformatics,
32(22):3444–3453.

Wei Zheng, Hongfei Lin, Ling Luo, Zhehuan Zhao,
Zhengguang Li, Yijia Zhang, Zhihao Yang, and
Jian Wang. 2017. An attention-based effective neu-
ral model for drug-drug interactions extraction. In
BMC Bioinformatics.



43

A
Q

ua
nt

ita
tiv

e
L

ite
ra

tu
re

R
ev

ie
w

pa
pe

r
ci

te
co

de
ab

la
tio

n
hy

pe
rp

ar
am

cr
os

sv
al

w
or

d-
em

be
d

da
ta

se
ts

So
ch

er
et

al
.(

20
12

)
89

0
y

•
y

•
y

2
Z

en
g

et
al

.(
20

14
)

47
7

•
y

y
y

y
1

Sa
nt

os
et

al
.(

20
15

)
22

0
•

y
y

y
y

1
N

gu
ye

n
an

d
V

er
sp

oo
r(

20
18

)
14

6
•

y
y

y
•

2
M

iw
a

an
d

B
an

sa
l(

20
16

)
17

5
•

y
y

y
•

3
L

ia
nd

Ju
ra

fs
ky

(2
01

5)
10

7
y

y
y

•
y

6
X

u
et

al
.(

20
15

a)
10

8
•

y
y

•
y

1
W

an
g

et
al

.(
20

16
)

10
2

•
y

•
•

y
1

H
as

hi
m

ot
o

et
al

.(
20

13
)

64
•

y
y

•
y

1
Z

ha
ng

an
d

W
an

g
(2

01
5)

68
•

y
•

y
y

2
V

u
et

al
.(

20
16

)
57

•
y

y
•

y
1

Y
in

et
al

.(
20

17
)

11
6

•
n

y
•

•
7

Y
u

et
al

.(
20

14
)

45
y

y
y

y
y

1
X

u
et

al
.(

20
16

)
54

y
y

y
•

•
1

Z
ha

ng
et

al
.(

20
15

a)
51

•
•

•
•

y
1

N
gu

ye
n

an
d

G
ri

sh
m

an
(2

01
5)

42
•

y
y

•
y

2
Q

in
et

al
.(

20
16

)
39

•
•

y
y

y
1

C
ai

et
al

.(
20

16
)

44
•

y
y

•
y

1
Sa

hu
et

al
.(

20
16

)
32

•
y

y
y

y
1

A
de

le
ta

l.
(2

01
6)

29
y

y
•

•
y

1
Z

en
g

et
al

.(
20

15
)

19
0

•
y

y
•

y
1

X
u

et
al

.(
20

15
b)

17
1

•
y

y
•

y
1

Z
ha

ng
et

al
.(

20
18

)
3

•
y

y
•

y
2

L
ev

y
et

al
.(

20
17

)
20

y
y

y
•

y
1

L
iu

et
al

.(
20

16
b)

48
•

•
y

•
y

1
Z

ha
o

et
al

.(
20

16
)

41
y

y
y

•
y

1
E

br
ah

im
ia

nd
D

ou
(2

01
5)

30
•

•
•

•
•

2
L

ie
ta

l.
(2

01
7)

27
y

y
y

y
y

2
Q

ua
n

et
al

.(
20

16
)

23
y

•
y

y
y

2



44

Pa
pe

r
ci

te
co

de
ab

la
tio

n
hy

pe
rp

ar
am

cr
os

sv
al

w
or

d-
em

be
d

da
ta

se
ts

Sa
hu

an
d

A
na

nd
(2

01
8)

13
y

y
y

•
y

1
L

iu
et

al
.(

20
16

a)
9

•
•

y
•

y
1

L
im

an
d

K
an

g
(2

01
8b

)
4

•
•

•
•

•
1

Z
he

ng
et

al
.(

20
17

)
12

•
y

y
y

y
1

W
an

g
et

al
.(

20
17

)
5

n
y

y
•

y
1

L
im

et
al

.(
20

18
)

1
y

y
y

y
y

2
K

av
ul

ur
u

et
al

.(
20

17
)

8
•

•
y

•
•

1
H

ua
ng

et
al

.(
20

17
)

4
•

•
y

•
y

1
Ju

an
H

ou
an

d
C

ee
sa

y
(2

01
8)

1
•

•
•

•
y

1
L

im
an

d
K

an
g

(2
01

8a
)

4
y

•
y

•
y

1
R

ot
sz

te
jn

et
al

.(
20

18
)

2
•

•
y

y
y

1
Ji

n
et

al
.(

20
18

)
0

•
y

y
y

y
1

Sa
hu

et
al

.(
20

16
)

31
•

y
y

y
y

1
L

uo
(2

01
7)

21
•

•
y

•
y

1
L

v
et

al
.(

20
16

)
15

•
•

•
•

•
1

Ji
n

et
al

.(
20

18
)

14
•

y
y

•
y

1
C

hi
kk

a
an

d
K

ar
la

pa
le

m
(2

01
8)

1
y

•
y

•
•

1
L

ie
ta

l.
(2

01
8b

)
0

y
•

y
y

y
1

L
ie

ta
l.

(2
01

8a
)

0
•

•
•

•
•

5
Su

st
er

et
al

.(
20

18
)

0
y

•
y

•
y

1
L

uo
et

al
.(

20
17

)
16

y
•

y
•

y
1

H
e

et
al

.(
20

18
a)

2
•

•
y

•
y

1
H

e
et

al
.(

20
18

b)
0

•
•

y
y

y
2

N
gu

ye
n

an
d

V
er

sp
oo

r(
20

18
)

1
•

y
y

•
y

1

Ta
bl

e
10

:
Fo

llo
w

in
g

ar
e

th
e

co
lu

m
ns

in
th

is
ta

bl
e:

ci
te

=
nu

m
be

r
of

pa
pe

rs
th

at
ci

te
d

th
e

pa
pe

r;
co

de
=

w
he

th
er

co
de

w
as

pu
bl

ic
ly

av
ai

la
bl

e
(y

fo
r

ye
s

an
d

•
fo

r
no

);
ab

la
tio

n
=

w
he

th
er

an
ab

la
tio

n
st

ud
y

w
as

pe
rf

or
m

ed
;

hy
pe

rp
ar

am
=

w
he

th
er

hy
pe

rp
ar

am
et

er
de

ta
ils

w
er

e
m

en
tio

ne
d;

cr
os

s
va

l=
w

he
th

er
cr

os
s

va
lid

at
io

n
de

ta
ils

w
er

e
m

en
tio

ne
d;

w
or

d-
em

be
d

=
w

he
th

er
in

fo
rm

at
io

n
ab

ou
tw

or
d

em
be

dd
in

gs
us

ed
w

as
m

en
tio

ne
d;

da
ta

se
ts

=
nu

m
be

ro
fd

at
as

et
s

ev
al

ua
te

d
on



45

B
E

va
lu

at
io

n
M

et
ri

c
R

es
ul

ts
on

Te
st

D
at

a

E
ac

h
ro

w
re

pr
es

en
ts

a
pr

e-
pr

oc
es

si
ng

,
m

od
el

in
g

te
ch

ni
qu

e
or

co
m

bi
na

tio
n

ba
se

d
on

th
e

ad
di

tio
na

l
ex

pe
ri

m
en

ts
ru

n
on

ea
ch

da
ta

se
t.

O
nl

y
te

st
se

t
re

su
lts

(a
s

op
po

se
d

to
cr

os
s

va
lid

at
io

n)
ar

e
re

po
rt

ed
fo

r
ea

se
of

an
al

ys
is

.
In

al
l

th
e

ta
bl

es
,B

as
el

in
e

re
fe

rs
to

th
e
C
R
C
N
N

m
od

el
w

ith
or

ig
in

al
pr

e-
pr

oc
es

si
ng

an
d

de
fa

ul
t

hy
pe

rp
ar

am
et

er
s

fo
rs
e
m
e
v
a
l

an
d

m
an

ua
lh

yp
er

pa
ra

m
et

er
s

fo
rt

he
m

ed
ic

al
da

ta
se

ts
(d
d
i

an
d
i
2
b
2

).
T

he
fo

llo
w

in
g

sh
or

tf
or

m
s

ar
e

us
ed

as
ro

w
la

be
ls

:
B

=
B

E
R

T-
to

ke
ns

E
=

E
L

M
o

E
nt

B
lin

d
=

E
nt

ity
B

lin
di

ng
Pi

ec
e

Po
ol

=
Pi

ec
ew

is
e

Po
ol

in
g

Te
ch

ni
qu

e
M

et
ri

c
ac

c
m

ic
ro

-P
m

ic
ro

-R
m

ic
ro

-F
1

m
ac

ro
-P

m
ac

ro
-R

m
ac

ro
-F

1

B
as

el
in

e
77

.1
1

79
.9

5
85

.1
1

82
.4

5
79

.2
5

84
.0

6
81

.5
5

E
nt

ity
B

lin
di

ng
67

.9
4

70
.7

2
77

.1
5

73
.8

69
.7

7
76

.3
1

72
.7

3
Pu

nc
ta

nd
D

ig
it

76
.4

8
79

.1
9

85
.4

2
82

.1
9

78
.3

3
84

.5
1

81
.2

3
Pu

nc
t,

D
ig

it
an

d
St

op
68

.2
8

73
.0

74
.7

8
73

.8
8

72
.8

4
73

.4
8

72
.9

2
N

E
R

B
lin

di
ng

77
.2

5
79

.3
86

.0
3

82
.5

3
78

.4
9

85
.1

3
81

.6
3

Pi
ec

ew
is

e
po

ol
77

.0
79

.5
4

85
.5

5
82

.4
4

78
.8

6
84

.7
1

81
.5

9
E

L
M

o
77

.7
7

81
.8

7
84

.6
2

83
.2

2
81

.2
4

83
.7

1
82

.4
2

B
E

R
T-

C
L

S
77

.7
7

81
.8

7
84

.6
2

83
.2

2
81

.2
4

83
.7

1
82

.4
2

B
E

R
T-

to
ke

ns
81

.3
86

.6
3

86
.7

4
86

.6
9

86
.0

8
85

.6
1

85
.6

7

Ta
bl

e
11

:D
iff

er
en

tE
va

lu
at

io
n

M
et

ri
c

re
su

lts
on

te
st

se
to

fs
e
m
e
v
a
l

da
ta

se
t.

O
nl

y
te

st
se

tr
es

ul
ts

ar
e

re
po

rt
ed

fo
re

as
e

of
an

al
ys

is
.M

et
ri

c
sh

or
tf

or
m

s
us

ed
ar

e
ac

c
=

ac
cu

ra
cy

;
P

=
pr

ec
is

io
n;

R
=

re
ca

ll.



46

Te
ch

ni
qu

e
M

et
ri

c
ac

c
m

ic
ro

-P
m

ic
ro

-R
m

ic
ro

-F
1

m
ac

ro
-P

m
ac

ro
-R

m
ac

ro
-F

1
C

la
ss

D
et

ec
t

C
la

ss
D

et
ec

t
C

la
ss

D
et

ec
t

C
la

ss
D

et
ec

t
C

la
ss

D
et

ec
t

C
la

ss
D

et
ec

t
C

la
ss

D
et

ec
t

B
as

el
in

e
88

.6
9

90
.0

1
88

.6
9

90
.0

1
88

.6
9

90
.0

1
88

.6
9

90
.0

1
72

.3
2

82
.0

6
63

.4
8

81
.4

3
65

.5
3

81
.7

4
E

nt
ity

B
lin

di
ng

89
.2

2
90

.4
4

89
.2

2
90

.4
4

89
.2

2
90

.4
4

89
.2

2
90

.4
4

71
.2

6
82

.9
9

64
.6

3
81

.7
9

67
.0

2
82

.3
7

Pu
nc

ta
nd

D
ig

it
88

.3
1

89
.6

1
88

.3
1

89
.6

1
88

.3
1

89
.6

1
88

.3
1

89
.6

1
69

.4
9

81
.7

60
.8

1
79

.4
3

63
.4

1
80

.4
9

Pu
nc

t,
D

ig
it

an
d

St
op

86
.5

8
87

.8
6

86
.5

8
87

.8
6

86
.5

8
87

.8
6

86
.5

8
87

.8
6

67
.4

78
.5

9
52

.7
2

74
.9

8
55

.8
7

76
.5

7
N

E
R

B
lin

di
ng

86
.1

8
88

.7
4

86
.1

8
88

.7
4

86
.1

8
88

.7
4

86
.1

8
88

.7
4

59
.1

3
79

.9
55

.9
3

78
.2

4
57

.2
2

79
.0

3
Pi

ec
ew

is
e

po
ol

88
.1

4
89

.5
4

88
.1

4
89

.5
4

88
.1

4
89

.5
4

88
.1

4
89

.5
4

70
.4

9
81

.3
9

60
.3

8
79

.9
1

63
.0

1
80

.6
2

E
89

.7
6

90
.9

7
89

.7
6

90
.9

7
89

.7
6

90
.9

7
89

.7
6

90
.9

7
73

.4
1

84
.3

6
63

.6
5

81
.9

66
.6

3
83

.0
5

B
E

R
T-

C
L

S
87

.8
4

89
.0

5
87

.8
4

89
.0

5
87

.8
4

89
.0

5
87

.8
4

89
.0

5
68

.2
80

.5
1

59
.3

1
78

.8
4

61
.3

79
.6

3
B

91
.3

1
92

.7
2

91
.3

1
92

.7
2

91
.3

1
92

.7
2

91
.3

1
92

.7
2

77
.6

6
87

.3
4

69
.2

7
85

.7
8

71
.9

7
86

.5
3

E
+

E
nt

ity
B

lin
di

ng
89

.9
7

91
.1

8
89

.9
7

91
.1

8
89

.9
7

91
.1

8
89

.9
7

91
.1

8
72

.4
4

84
.4

2
66

.4
1

83
.0

6
68

.6
9

83
.7

2
B

+
E

nt
ity

B
lin

di
ng

90
.9

3
92

.1
5

90
.9

3
92

.1
5

90
.9

3
92

.1
5

90
.9

3
92

.1
5

76
.7

9
86

.5
7

63
.3

9
84

.2
6

70
.6

6
85

.3
5

Ta
bl

e
12

:
D

iff
er

en
tE

va
lu

at
io

n
M

et
ri

c
re

su
lts

on
te

st
se

to
fd

d
i

da
ta

se
t.

O
nl

y
te

st
se

tr
es

ul
ts

ar
e

re
po

rt
ed

fo
re

as
e

of
an

al
ys

is
.

M
et

ri
c

sh
or

tf
or

m
s

us
ed

ar
e

ac
c

=
ac

cu
ra

cy
;P

=
pr

ec
is

io
n;

R
=

re
ca

ll.



47

Te
ch

ni
qu

e
M

et
ri

c
ac

c
m

ic
ro

-P
m

ic
ro

-R
m

ic
ro

-F
1

m
ac

ro
-P

m
ac

ro
-R

m
ac

ro
-F

1
C

la
ss

D
et

ec
t

C
la

ss
D

et
ec

t
C

la
ss

D
et

ec
t

C
la

ss
D

et
ec

t
C

la
ss

D
et

ec
t

C
la

ss
D

et
ec

t
C

la
ss

D
et

ec
t

B
as

el
in

e
78

.6
8

83
.1

7
61

.3
9

83
.1

7
58

.1
9

83
.1

7
59

.7
5

83
.1

7
49

.2
4

81
.1

6
34

.2
80

.2
9

36
.4

4
80

.6
9

E
nt

ity
B

lin
di

ng
81

.9
2

84
.3

7
68

.8
8

84
.3

7
68

.6
5

84
.3

7
68

.7
6

84
.3

7
53

.3
3

82
.3

2
40

.7
2

82
.2

7
43

.7
6

82
.2

9
Pu

nc
ta

nd
D

ig
it

77
.2

5
81

.9
6

58
.0

9
81

.9
6

59
.6

4
81

.9
6

58
.8

5
81

.9
6

49
.2

8
79

.5
3

33
.5

6
79

.9
2

34
.9

3
79

.7
1

Pu
nc

t,
D

ig
it

an
d

St
op

76
.0

5
80

.4
7

57
.1

5
80

.4
7

55
.2

7
80

.4
7

56
.1

9
80

.4
7

43
.2

6
77

.9
6

31
.1

6
77

.4
7

32
.9

9
77

.7
N

E
R

B
lin

di
ng

75
.1

2
81

.6
1

52
.5

8
81

.6
1

48
.4

2
81

.6
1

50
.4

1
81

.6
1

39
.4

4
79

.4
5

26
.3

78
.1

7
29

.1
5

78
.7

3
Pi

ec
ew

is
e

po
ol

78
.6

3
83

.6
9

59
.4

1
83

.6
9

62
.3

7
83

.6
9

60
.8

5
83

.6
9

46
.1

6
81

.4
1

35
.7

7
82

.1
7

36
.4

4
81

.7
6

E
80

.4
84

.5
4

64
.5

6
84

.5
4

61
.8

6
84

.5
4

63
.1

8
84

.5
4

59
.2

8
82

.6
9

36
.1

7
81

.9
7

38
.1

82
.3

1
B

E
R

T-
C

L
S

76
.9

4
81

.9
1

57
.6

6
81

.9
1

55
.9

5
81

.9
1

56
.7

9
81

.9
1

49
.8

8
76

.6
1

32
.4

79
.1

5
34

.0
5

79
.3

7
B

80
.7

9
84

.9
1

64
.9

2
84

.9
1

61
.4

84
.9

1
63

.1
1

84
.9

1
58

.0
5

83
.0

8
36

.8
82

.1
39

.3
1

82
.5

5
E

+
E

nt
ity

B
lin

di
ng

83
.6

2
86

.1
7

72
.4

3
86

.1
7

68
.6

86
.1

7
70

.4
6

86
.1

7
60

.7
9

84
.6

5
40

.1
1

83
.6

7
42

.9
9

84
.1

3
E

+
Pi

ec
e

Po
ol

+
E

nt
B

lin
d

83
.4

6
86

.1
4

71
.1

1
86

.1
4

70
.1

4
86

.1
4

70
.6

2
86

.1
4

54
.8

7
84

.3
7

42
.4

1
84

.1
3

44
.4

3
84

.2
5

E
nt

B
lin

d
+

Pi
ec

e
Po

ol
82

.7
2

85
.4

4
69

.4
9

85
.4

4
69

.9
8

85
.4

4
69

.7
3

85
.4

4
48

.8
2

83
.4

9
41

.9
7

83
.6

1
42

.8
9

83
.5

5
E

+
Pi

ec
e

Po
ol

80
.1

84
.9

2
61

.9
8

84
.9

2
64

.4
5

84
.9

2
63

.1
9

84
.9

2
49

.6
8

82
.7

9
36

.9
1

83
.4

3
37

.5
2

83
.0

9
B

+
E

nt
B

lin
d

83
.2

7
85

.6
6

71
.5

2
85

.6
6

69
.6

3
85

.6
6

70
.5

6
85

.6
6

55
.6

2
83

.9
38

.8
2

83
.4

4
41

.8
3

83
.6

6
B

+
E

nt
B

lin
d

+
Pi

ec
e

po
ol

83
.5

7
86

.2
6

70
.9

86
.2

6
71

.1
3

86
.2

6
71

.0
1

86
.2

6
55

.6
84

.4
3

42
.5

8
84

.4
9

44
.4

84
.4

6
B

+
Pi

ec
e

po
ol

80
.5

9
85

.4
5

63
.0

8
85

.4
5

63
.3

9
85

.4
5

63
.2

3
85

.4
5

56
.0

1
83

.5
1

36
.8

4
83

.5
9

38
.8

4
83

.5
5

Ta
bl

e
13

:D
iff

er
en

tE
va

lu
at

io
n

M
et

ri
c

re
su

lts
on

te
st

se
to

fi
2
b
2

da
ta

se
t.

O
nl

y
te

st
se

tr
es

ul
ts

ar
e

re
po

rt
ed

fo
re

as
e

of
an

al
ys

is
.M

et
ri

c
sh

or
tf

or
m

s
us

ed
ar

e
ac

c
=

ac
cu

ra
cy

;P
=

pr
ec

is
io

n;
R

=
re

ca
ll.


