



















































Event Timeline Generation from History Textbooks


Proceedings of the 4th Workshop on Natural Language Processing Techniques for Educational Applications, pages 69–77,
Taipei, Taiwan, December 1, 2017 c©2017 AFNLP

Event Timeline Generation from History Textbooks

Harsimran Bedia∗ Sangameshwar Patilb Swapnil Hingmireb Girish K. Palshikarb
{bedi.harsimran, sangameshwar.patil}@tcs.com
{swapnil.hingmire, gk.palshikar}@tcs.com

aDepartment of CSE, IIT Patna, India
bTCS Research, Pune, India

Abstract

Event timeline serves as the basic structure
of history, and it is used as a disposition
of key phenomena in studying history as a
subject in secondary school. In order to
enable a student to understand a histori-
cal phenomenon as a series of connected
events, we present a system for auto-
matic event timeline generation from his-
tory textbooks. Additionally, we propose
Message Sequence Chart (MSC) and time-
map based visualization techniques to vi-
sualize an event timeline. We also identify
key computational challenges in develop-
ing natural language processing based ap-
plications for history textbooks.

1 Introduction

With the advent of easy access to on-line edu-
cational content on the Internet through mobile
and electronic reading devices, there is increasing
trend of e-learning and hence creating resources
that support e-learning. An important advantage
of e-learning is it enables learners to do “any time,
any place, any pace” learning (California Depart-
ment of Education, 2012; Agrawal et al., 2013).

In this paper, we particularly focus on creating
event timeline (or chronology) from history text-
books. Event timelines play an important role in
understanding a historical phenomenon. It enables
a student to situate her knowledge of history in re-
lation to a spatio-temporal context.

De Keyser and Vandepitte (1998) identify dif-
ferent frames of reference that play a vital role
in a student’s understanding of a historical phe-
nomenon:

∗This work was done when the first author was at TCS
Research, Pune.

1. Chronological frame of reference, which fo-
cuses on key phenomena and their signifi-
cance over a period of time (e.g. key events
in the Renaissance).

2. Spatial frame of reference, which focuses on
key locations, geographies involved in the
phenomenon (e.g., spread of the Renaissance
across various parts of Europe)

3. Social frame of reference, which focuses on
how the social fields such as politics, eco-
nomics, culture, etc. interact within society
during the phenomenon (e.g., social, cultural,
religious characteristics of the Renaissance).

Stow and Haydn (2000) highlight importance of
these frames of reference to develop a student’s
ability to ask and answer questions like “When did
a particular phenomenon happen? What is its rel-
evance to the present and the future? What are the
key insights of it that should be learned?”

In this paper we primarily focus on the Chrono-
logical and Spatial frames of reference. We be-
lieve that it will also serve as a building block
for the Social frame of reference. In this paper,
we present a system for automatic event time-
line generation from history textbooks. In ad-
dition to event timeline creation, we also pro-
pose two techniques for visualization of a time-
line. The first technique uses Message Sequence
Chart (MSC) (Rudolph et al., 1996) to highlight
the interaction between multiple entities associ-
ated with a historical phenomenon. In the sec-
ond technique, we first associate each event in a
timeline with a time marker, a location, and one
or more actors, and create a time-map to capture
a spatio-temporal aspect of the timeline. An ad-
ditional important goal of this paper is to iden-
tify key research problems in developing natural

69



language processing based applications for history
textbooks.

The paper is organized as: in Section 2 we give
an overview of related work on timeline genera-
tion from a different type of text resources. In Sec-
tion 3 we highlight important use-cases of event
timelines. In Section 4 we propose our algorithm
for timeline generation. Section 5 discusses two
techniques for visualization of timelines. Experi-
mental evaluation of generated timelines is an ac-
tive area of research. In Section 6 we present
preliminary results on validation of events hav-
ing mention of time expressions. Section 7 dis-
cusses computational challenges in the construc-
tion of event timeline from NLP perspective. In
Section 8 we conclude and discuss prospects of
our work.

2 Related Work

Several authors (e.g. (Bamman and Smith, 2014;
Palmero Aprosio and Tonelli, 2015; Ge et al.,
2015)) have proposed use of encyclopaedic re-
sources like Wikipedia in event time-line construc-
tion of historical figures and events. It is impor-
tant to note that Wikipedia articles give a com-
prehensive overview of a historical phenomenon
and try to cover all facts with hyperlinks and ref-
erences to relevant material. Also, each Wikipedia
article is focussed on one phenomenon, and it is
likely to be authored independently of Wikipedia
articles that it hyperlinks. So, it is highly possi-
ble that the authors of a Wikipedia article may as-
sume that the reader has knowledge about other
Wikipedia articles that it hyperlinks. This ency-
clopedic rigor may not be necessary for primary
or secondary students, and such bombardment of
facts may not encourage a student to obtain an in-
terest in history. On the other hand, content in
the textbooks is organized such that each section
or chapter is focused on one concept and concepts
are progressively introduced with specific learning
goals (Agrawal et al., 2012).

Apart from Wikipedia, several authors have
constructed timelines from social media like Twit-
ter (e.g. (Alonso et al., 2017; Yao et al., 2016;
Li and Cardie, 2014)) or news articles (e.g. (Zhou
et al., 2016)). However, social media or news ar-
ticles are not intended to be consumed by history
students.

3 Use-Cases for Event Timeline for
History Text

We identify following use-cases for event time-
lines from history text:

1. Comparison of Timelines:
a) We can use timelines of two entities (e.g.
kings or emperors) to understand similarity
and differences between their lives. For ex-
ample, a student or a historian would like
to compare timelines of rulers who achieved
power on their own at a young age, e.g.,
Napoleon and Shivaji1. The similarities in
their lives as well as rise to power can be
easily seen from their timelines e.g., both re-
ceived military training early in their child-
hood. Both assumed leadership roles at a
very young age. Napolean was officer at
16. Shivaji conquered the Torna fort and
laid foundations of his kingdom at age of
15. They scored remarkable victories in their
twenties. Napolean became Master of France
at 30; whereas by age of 30, Shivaji, though
not formally a king, had already established
his rule over vast land of present day Maha-
rashtra state of India. Both died in their early
50s.
b) Timelines of two different dynasties or em-
pires also can be used to compare their rise
and fall (e.g., First French empire vs Second
French empire).
c) Comparison of timelines can be extended
beyond entities such as kings or empires. For
example, a student may be interested in com-
parison of two different civilizations e.g., the
Roman civilization vs. the Indus valley civi-
lization.

2. Causal Analysis of Events: Using textual
clues and text entailment techniques from
NLP combined with ordering of events from
timeline can be used to infer causes or con-
ditions that led to an event or a sequence of
events: e.g., seeds of World War II were al-
ready sown at the end of World War I. Such
a causal analysis can also be used for com-
parison of two event timelines. For example,
The Great Depression2 and The Great Reces-

1https://en.wikipedia.org/wiki/Shivaji
2https://en.wikipedia.org/wiki/Great_

Depression

70



sion3 are two major economic events that af-
fected the world population. One would like
to analyze the timelines of these two events
and understand common or different causes
of different events and their social, political,
economic consequences.

3. Pedagogical Applications: We believe that
event timelines and their formal representa-
tions can be used for creating pedagogical re-
sources that will be useful for students as well
as teachers of history. For example, students
can use event timelines for question answer-
ing while teachers can use them for automatic
question generation as well as automatic an-
swer evaluation.

Developing solutions to the use-cases discussed
above is part of future work. Our current focus is
to (a) automatically generate event timelines using
NLP tools and techniques, (b) develop solutions to
visualize timelines that would help student to un-
derstand history using succinct representations.

4 Our Method

In this section, we give details of our proposed sys-
tem.

4.1 Event Description
Defining an event for our system is crucial to our
task. For the purpose of history textbooks, an
event can be thought of an important thing that
happened or took place at a certain point of time.
It changed something or had some definite conse-
quences in the physical world. For the purpose of
this paper, we consider those events which are de-
scribed by a verb. Verbs like die, kill, defeat are
absolute physical action verbs giving a clear in-
dication that something important happened. On
the other hand, verbs like consider, regard, think
are related with a psychological or mental action
that did not happen in real. In this paper, we
assume that an event represents an activity, ac-
complishment, achievement, and change in phys-
ical state (Vendler, 1957, 1967; Casati and Varzi,
2015).

4.2 Dataset Creation
To create a gold standard dataset, we annotated
portions from following two history books – (i)

3https://en.wikipedia.org/wiki/Great_
Recession

Chapter 5: Consolidation and Expansion of the
Empire - Akbar (77 sentences) in Medieval In-
dia: From the Sultanate to the Mughals (Chan-
dra, 2007) and (ii) Chapter 23.3: Napoleon forges
an empire (113 sentences) from the book World
History (Harker, 2012). The schema used for an-
notation is briefly described in Table 1. For ev-
ery event, the schema consists of title, actors, lo-
cations, time/date expressions, and event descrip-
tion.

• event title (ET):= title of the event, a suc-
cinct phrase capturing the gist of the event

• actor i (Ai for i = 0, 1, . . . , n):= actors
mentioned in the sentence

– actor type (AT) = {person,
organization} := whether the actor
is a person or an organization (e.g. allies of
World War II4 can be treated as an organization)

• event time expression (T) := the frag-
ment of the sentence that represents temporal expres-
sion of the event

– time expression modifier (TM)
= {after, before, during,
beginning, end, early, late}

– time expression type (TT) =
{date, time, duration}

• location (L) := the location at which the event
happened

• event verb phrase (EV P) := the verb
phrase of the sentence that represents the event.

Table 1: Annotation Schema

Table 2 gives annotation of a few example sen-
tences from (Chandra, 2007, Chapter 5).

4.3 Event Timeline Generation

The algorithm (Table 3) has three main steps.
First, we extract the named entities in the text
using Stanford CoreNLP (Manning et al., 2014).
The PERSON and ORGANIZATION type named
entities form the set of actors. The LOCA-
TION entities give us spatial information about
the events. Then we resolve the co-references of
these entities. In the second step, we use SUTime
temporal expression tagger (Chang and Manning,
2012) to extract the temporal expressions from the
sentences having the mentions of actors or loca-
tions.

Our current system considers only those sen-
tences for creating a timeline which contain at
least one temporal expression. We name these sen-
tence as “timeline sentences”. We also provide fa-
cility to create an actor specific timeline genera-

71



ID Sentence Event title (ET )
S1 [Early in 1576]T , [Akbar]A0 [moved to]EV P [Ajmer]L. Akbar moved to Ajmer
S2 [Akbar]A0 [deputed]EV P [Raja Man Singh]A1 with a force of

5000 consisting of [Mughals]A2 and [Rajputs]A3 to lead a campaign
against [Rana Pratap]A4 .

Akbar deputed Raja Man
Singh against Rana Pratap

S3 In anticipation of such a move, [the Rana]A0 had [devastated the
entire region]EV P upto [Chittor]L so that [the Mughal
forces]A1 could get no food or fodder.

Rana Pratap devastated the
entire region upto Chittor

S4 [The Rana]A0 [advanced with a force of 3000]EV P from
his capital at [Kumbhalgarh]L.

Rana Pratap advanced from
his capital at Kumbhalgarh

S5 [The Rana]A0 [took a position]EV P near [Haldighati]L,
at the entrance of the defile leading to [Kumbhalgarh]L.

Rana Pratap took a position
near Haldighati

Table 2: Annotation of a few example sentences from (Chandra, 2007, Chapter 5)

tion. Given an actor, we filter those timeline sen-
tences that mention the actor or have co-reference
to the actor. In addition to named entities, we
identify relations mentioned in a sentence using
OpenIE component of Stanford CoreNLP (Angeli
et al., 2015). We select the relation which has
mentions of the maximum of a number of named
entities as the title of the sentence. The algorithm
for generating event timeline from a given piece of
text is given in Table 3.

• Input: Chapter or Section of a history textbook : C
• Output: Event timeline : T : {e1 ≺ e2 ≺ e3 ≺

. . . ≺ eN}, where ei =<event title (ET ), actors (A),
time expressions (T ), location (L) >

• Entity Extraction:
1. Identify named entities (e.g., person, organiza-

tion, location) in each sentence in C.
2. Resolve the co-references of entity mentions.
3. Extract set of sentences S which refer to these

named entities from C.
• Time-Expression Extraction:

– Identify time expressions in each sentence in S.
• Timeline Generation:

1. Let S′ ⊆ S such that each sentence in S′ con-
tains at least one time expression and at least an
actor.

2. Let T be initialized to empty timline.
3. For each sentence s ∈ S′ :

(a) Let A = {A0, A1, . . . , AK} be the list of
actors mentioned in s

(b) Let L = the location mentioned in s.
(if no location mention in s, L = NULL)

(c) Let T = the time expressions mentioned in
the sentence

(d) Identify relations between entities in s
using OpenIE component of Stanford
CoreNLP and select the relation with max-
imum number of named entities as title of
the event (ET )

(e) Append tuple e =< ET , A, T, L > to T
4. Print event timeline T .

Table 3: Algorithm for Timeline Generation

5 Visualization

Visualization of a timeline to promote better learn-
ing and understanding of students is highly rele-
vant to this task. Features of a timeline like the
flow of the events, the temporal and spatial ele-
ments of an event should be evidently clear in the
visual output. We propose two techniques for vi-
sualization of a timeline.

5.1 Message Sequence Chart (MSC)
MSC is widely used for the visualization of mes-
sage interchange of communicating entities with a
communication system (Rudolph et al., 1996). An
important goal of MSC is to do a visual abstraction
of causal relations between events and participa-
tion of different entities within a communication
system in these events. The diagram area of MSC
involves two dimensions: vertical and horizontal.
The vertical dimension represents time while the
horizontal dimension represents entities.

It is important to note that a historical phe-
nomenon is comprised of various entities (e.g.,
persons or organizations) and a set of ordered
events. Hence, we believe that MSC can be used to
visualize the timeline of a historical phenomenon
such that the vertical or time dimension captures
order of events that happened over a period, while
the horizontal or entity dimension represents enti-
ties involved in these events. Currently, we manu-
ally create MSCs explicitly specifying the entities
and the events. A sample MSC created using a
MSC generator tool5 for a sequence of events is
shown in Figure 1. Following text from (Harker,
2012) was used while generating the MSC:

“In only four years, from 1795 to 1799,
Napoleon rose from a relatively obscure position
as an officer in the French army to become master
of France. Napoleon Bonaparte was born in 1769

5https://www.websequencediagrams.com/

72



on the Mediterranean island of Corsica. When he
was nine years old, his parents sent him to a mil-
itary school. In 1785 , at the age of 16, he fin-
ished school and became a lieutenant in the ar-
tillery. When the Revolution broke out, Napoleon
joined the army of the new government. In Octo-
ber 1795, fate handed the young officer a chance
for glory.”

In future, we would use APIs of the library to
generate MSCs automatically.

5.2 Timeline with a Map (TimeMap)

As discussed earlier, the spatial frame of reference
is important in a student’s understanding of a his-
torical phenomenon. Hence, towards the goal of
enabling a student to realize the importance of ge-
ographical conditions of the location at which an
event happened we propose a map based visualiza-
tion system. For example, consider the following
text from (Chandra, 2007, Chapter 5): The battle
of Haldighati (18 Feb. 1576) was mainly fought
in the traditional manner between cavalrymen and
elephants, since the Mughals found it difficult to
transport any artillery, except light artillery over
the rough terrain.

It is important to note that Haldighati is a moun-
tain pass in western India6 and its geographical
characteristics played a vital role in the The battle
of Haldighati7. The example is illustrative in the
sense that it emphasizes both temporal and spatial
aspects in understanding the event: The battle of
Haldighati.

We generate a time map for a given event time-
line using TimeMapper8. The time map generated
by TimeMapper can be embedded in an HTML
page and can be easily viewed using a browser.
For each event in a timeline we show its title, de-
scription and temporal expression and if the loca-
tion of the event is available, then it is shown on
the map. The events in a timeline can be browsed
in sequential or random order by clicking on an
event in the timeline. A sample event of a timeline
can be seen in Figure 2.

6 Experimental Evaluation

Experimental evaluation of generated timelines is
an active area of research. As mentioned earlier,

6https://en.wikipedia.org/wiki/
Haldighati

7https://en.wikipedia.org/wiki/Battle_
of_Haldighati

8http://timemapper.okfnlabs.org/

in this paper, we focus only on the sentences hav-
ing mention of time expression. For the task of
timeline generation, sentences with the time ex-
pressions are important as they enable relative or-
dering of events.

For the evaluation, we use the annotated portion
from Chapter 5 (Consolidation and Expansion of
the Empire - Akbar) from (Chandra, 2007). The
dataset contains total 77 sentences having 1771
words. These sentences are linguistically com-
plex. There are 22 words on average per sen-
tence. Out of the 77 sentences, 27 sentences con-
tain events with time expression. For the event de-
tection task, the proposed algorithm achieves pre-
cision, recall and F1-measure of 0.647, 0.407 and
0.500 respectively.

We note here that this is a preliminary evalua-
tion because we are considering only those events
which are described by verbs. Further we have
not tackled relative ordering of implicit time ex-
pression. For a more comprehensive generation
and evaluation of event timelines, we need to ad-
dress these and the other challenges identified in
the Section 7. We recognize a more rigorous treat-
ment for the same as a significant direction for fu-
ture work.

7 Computational Challenges in Timeline
Generation

The inherent nature of historical events along with
its narration pose some specific challenges from
NLP viewpoint. We incurred these challenges
while annotating the data set and comparing it
with the results obtained from our system. They
are listed below:

7.1 Implicit temporal mentions and temporal
co-reference

There are cases when a period is given but
not in an explicit manner. In Table 4:R-1 we
can observe that the next twelve years
and this period refer to the time period of
1585-1592. To place the corresponding event(s)
on the timeline one needs to accurately resolve the
explicit mention of 1585 to the above co-referring
implicit time expressions.

7.2 Entity co-reference resolution

Co-reference resolution of entities (e.g., Person,
Location, Organization) is a well-studied problem
in NLP literature. In our proposed algorithm, we

73



Figure 1: Multi-actor interaction visualization using Message Sequence Chart

Figure 2: Sample screenshot of Time Map (spatio-temporal) corresponding to Table 1:S1 sentence

74



R-1 Implicit temporal mentions In 1585, Akbar moved to Lahore, and remained there for [the next
twelve years], watching the situation in the north-west. No Mughal
expedition was sent against Rana Pratap during [this period].

R-2 Event coreference resolution Prince Salim was [sent against]E1 the Rana in 1599, but achieved
little. He was again deputed for [the purpose]E1 in 1603, but he had
no heart in [the enterprise]E1. After his accession, Jahangir took up
[the matter]E1 more energetically.

R-3 Inaccuracy due to wrong Entity
coreference resolution

[Sagar]P1, [the son of Rana Udai Singh]P1, [who]P1 had
joined [Akbar]P2, during the rule of [Rana Pratap]P3, and granted
the title of Rana and installed at Chittor by [Jahangir]P4, was set aside,
and all the paraganas of Mewar, including Chittor were restored to [Rana
Amar Singh]P5.

R-4 Normalization of named entities [He]P1 died in 1597 at the young age of 51, due to an internal injury in-
curred by him while trying to draw a stiff bow.
...
[Prince Salim]P2 was sent against [the Rana]P1 in 1599, but
achieved little. [He]P2 was again deputed for the purpose in 1603,
but [he]P2 had no heart in the enterprise. After [his]P2 accession,
[Jahangir]P2 took up the matter more energetically.

R-5 Hierarchy of events Sagar, the son of Rana Udai Singh, who had joined Akbar, during the
rule of Rana Pratap, and granted the title of Rana and installed
at Chittor by Jahangir, was set aside, and all the paraganas of
Mewar, including Chittor were restored to the Rana.

R-6 Location as an actor At the time of Napoleon’s coup, France was still at war. In 1799,
[Britain, Austria, and Russia] joined forces with one goal in
mind, to drive Napoleon from power.

Table 4: Examples of computational challenges from NLP perspective faced while processing of history
text

use entity-centric co-reference annotator compo-
nent of Stanford CoreNLP (Clark and Manning,
2015).

In Table 4:R-3, we see the gold-standard coref-
erences for a sample sentence. The state-of-the-
art Stanford CoreNLP coreference algorithm is not
able to identify any of the gold-standard corefer-
ences and incorrectly identifies a coreference be-
tween the phrases Rana Pratap and Rana (in
the phrase “title of Rana”). For timeline gener-
ation task these errors in co-reference resolution
have a cascading effect on the accuracy of actor,
location identification etc. This results in incorrect
events participants on the timeline.

7.3 Event co-reference resolution

Apart from the person/entity level co-reference
resolution, history text poses very interest-
ing co-reference resolution challenges at event
level. In Table 4:R-2, sent against is an
event involving two entities Prince Salim
and the Rana. This event (E1) is referred
to as the purpose, the enterprise,
the matter in the subsequent lines.

7.4 Normalization of entity names

In the historical domain, a person of importance
has many names or titles throughout his/her life-

time.

• Title resolution: With reference to the Ra-
jputs9, The Rana was a standard epithet given
to the current heir of the Rajput dynasty.
In (Chandra, 2007, Chapter 5), initially the
title the Rana is used to refer to Rana
Pratap Singh. Further in the chapter
his son Rana Amar Singh is referred
to by the same title. In Table 4:R-4, He
and the Rana refer to Rana Pratap ac-
cording to the output of Stanford CoreNLP
Co-Reference Annotator. But in real, the
Rana refers to Rana Amar Singh.

• Multiple names to same person: Another
case of this challenge arises when two names
are used for the same person like Jahangir10

is also referred to as Prince Salim.

• Location standardization: The problem
of standardization is also applicable to loca-
tions. Cities or states names mentioned in
history might have been replaced with new
names at present. This poses a problem when
it comes to locating that place on a map. For

9https://en.wikipedia.org/wiki/Rajput
10https://en.wikipedia.org/wiki/

Jahangir

75



example the state of Mewat11 mentioned in
(Chandra, 2007, Chapter 5) does not exist on
India’s map.

7.5 Hierarchy of events

The task of event extraction is a complicated
one. In simple sentences the event verb and
its arguments are clear. But if we look at Ta-
ble 4:R-5, hierarchy within events is observed.
In this example was set aside is the key
event, however, phrases like Sagar joined
Akbar, granted the title, installed
at Chittor, were restored, etc. indicate
related and sub-events of the key event.

7.6 Location-Actor ambiguity

There are many instances where a location
is associated with event verbs which are ap-
plicable on actors. For example in Ta-
ble 4:R-6, the countries France, Britain,
Austria, Russia are not locations, rather
they are actors of type organization.

7.7 Event title generation

While visualizing a timeline instead of showing a
complete event sentence, it is more useful to gen-
erate and show a short and succinct title for each
event. However, generating such a title is chal-
lenging.

Events in text are typically described using
verbs. One straight-forward approach to gener-
ate title of an event could be to use the main
action verb and its associated subject(s) and ob-
ject(s). However, in many cases, events are
also described using non-verbal (e.g, nominal) ex-
pressions. For instance, consider the sentence
– The Great Depression lasted from
1929 to 1939. Here the event The Great
Depression occurs in nominal form.

In other cases, event sentences may contain
multiple sub-events (e.g., Table 4:R-5). They can
be associated with actors, location, time/date, re-
lations or with other events. So it is important to
identify the different kinds of events to come up
with a succinct title describing the complete event.

7.8 Evaluation

There are three important aspects on which an
automatically generated timeline should be eval-
uated. The first aspect is precision and recall of

11https://en.wikipedia.org/wiki/Mewat

events extracted from the text. This aspect mainly
does an evaluation of event extraction component
of timeline generation algorithm. The second as-
pect is an evaluation of title generation and extrac-
tion of relevant named entities from text. The third
aspect is an evaluation of order of events in an au-
tomatically generated timeline. It is important to
note that these three aspects are interlinked to each
other. Hence, it necessitates appropriate evalua-
tion measure(s) for timeline evaluation that will
collectively consider the three aspects discussed
above.

There is also need of live user studies where stu-
dents of history participate to evaluate utility of
timeline visualization techniques in understanding
historical phenomena. We will explore both em-
pirical and user evaluation of timeline generation
in the future.

8 Conclusions and Future Work

In this paper, we propose a system for genera-
tion of event timeline from history textbooks. We
also propose two techniques to visualize a time-
line. Message Sequence Chart based visualiza-
tion enables a student to observe involvement of
multiple actors in a historical phenomenon. On
the other hand, time-map based visualization en-
ables a student to understand spatio-temporal as-
pects. We believe that both these visualization
techniques will increase a student’s interest and
curiosity in learning history as a subject. Hence,
in addition to a working system, we also iden-
tify key computational challenges in creating NLP
based applications for history subject. Of course,
the system proposed in this paper can be improved
across many dimensions. Currently, we are gener-
ating a timeline specific to a human actor. In the
future, we would like to generate a timeline for a
non-human actor, e.g., a timeline of art or science
in the Renaissance. We also aim to define annota-
tion guidelines for annotation of historical events
and release a much larger annotated dataset that
can be used for various tasks such as entity/event
extraction and segmentation, co-reference resolu-
tion of named entities as well as events.

References
Rakesh Agrawal, Sunandan Chakraborty, Sreenivas

Gollapudi, Anitha Kannan, and Krishnaram Ken-
thapadi. 2012. Quality of textbooks: an empirical
study. In ACM Annual Symposium on Computing

76



for Development, ACM DEV ’12, Atlanta, GA, USA
- March 10 - 11, 2012, page 16:1.

Rakesh Agrawal, Sreenivas Gollapudi, Anitha Kannan,
and Krishnaram Kenthapadi. 2013. Studying from
electronic textbooks. In 22nd ACM International
Conference on Information and Knowledge Man-
agement, CIKM’13, San Francisco, CA, USA, Oc-
tober 27 - November 1, 2013, pages 1715–1720.

Omar Alonso, Serge-Eric Tremblay, and Fernando
Diaz. 2017. Automatic generation of event timelines
from social data. In Proceedings of the 2017 ACM
on Web Science Conference, WebSci 2017, Troy, NY,
USA, June 25 - 28, 2017, pages 207–211.

Gabor Angeli, Melvin Jose Johnson Premkumar, and
Christopher D. Manning. 2015. Leveraging linguis-
tic structure for open domain information extraction.
In Proceedings of the 53rd Annual Meeting of the
Association for Computational Linguistics and the
7th International Joint Conference on Natural Lan-
guage Processing of the Asian Federation of Natural
Language Processing, ACL 2015, July 26-31, 2015,
Beijing, China, Volume 1: Long Papers, pages 344–
354.

David Bamman and Noah Smith. 2014. Unsupervised
discovery of biographical structure from text. Trans-
actions of the Association for Computational Lin-
guistics, 2:363–376.

California Department of Education. 2012. Education
technology task force work group facilitators.

Roberto Casati and Achille Varzi. 2015. Events. In
Edward N. Zalta, editor, The Stanford Encyclopedia
of Philosophy, winter 2015 edition. Metaphysics Re-
search Lab, Stanford University.

Satish Chandra. 2007. Medieval India: From Sultanat
to the Mughals- Mughal Empire: Part Two. Har
Anand Publications.

Angel X. Chang and Christopher D. Manning. 2012.
Sutime: A library for recognizing and normalizing
time expressions. In Proceedings of the Eighth In-
ternational Conference on Language Resources and
Evaluation, LREC 2012, Istanbul, Turkey, May 23-
25, 2012, pages 3735–3740.

Kevin Clark and Christopher D. Manning. 2015.
Entity-centric coreference resolution with model
stacking. In Proceedings of the 53rd Annual Meet-
ing of the Association for Computational Linguistics
and the 7th International Joint Conference on Natu-
ral Language Processing of the Asian Federation of
Natural Language Processing, ACL 2015, July 26-
31, 2015, Beijing, China, Volume 1: Long Papers,
pages 1405–1415.

R. De Keyser and P. Vandepitte. 1998. Historical
formation. Design of vision. Flemish Board for
Catholic Secondary Education, Brussel, Belgium.

Tao Ge, Wenzhe Pei, Heng Ji, Sujian Li, Baobao
Chang, and Zhifang Sui. 2015. Bring you to the
past: Automatic generation of topically relevant
event chronicles. In Proceedings of the 53rd Annual
Meeting of the Association for Computational Lin-
guistics and the 7th International Joint Conference
on Natural Language Processing of the Asian Fed-
eration of Natural Language Processing, ACL 2015,
July 26-31, 2015, Beijing, China, Volume 1: Long
Papers, pages 575–585.

Shieh Harker. 2012. World History
II. https://worldhistoryii.
wordpress.com/2012/10/12/
23-3-napoleon-forges-an-empire/.
Accessed: 2017-08-23.

Jiwei Li and Claire Cardie. 2014. Timeline generation:
tracking individuals on twitter. In 23rd International
World Wide Web Conference, WWW ’14, Seoul, Re-
public of Korea, April 7-11, 2014, pages 643–652.

Christopher D. Manning, Mihai Surdeanu, John Bauer,
Jenny Rose Finkel, Steven Bethard, and David Mc-
Closky. 2014. The stanford corenlp natural language
processing toolkit. In Proceedings of the 52nd An-
nual Meeting of the Association for Computational
Linguistics, ACL 2014, June 22-27, 2014, Baltimore,
MD, USA, System Demonstrations, pages 55–60.

Alessio Palmero Aprosio and Sara Tonelli. 2015. Rec-
ognizing biographical sections in wikipedia. In Pro-
ceedings of the 2015 Conference on Empirical Meth-
ods in Natural Language Processing, pages 811–
816, Lisbon, Portugal. Association for Computa-
tional Linguistics.

Ekkart Rudolph, Peter Graubmann, and Jens
Grabowski. 1996. Tutorial on message sequence
charts. Computer Networks and ISDN Systems,
28(12):1629–1641.

William Stow and Terry Haydn. 2000. Issues in the
teaching of chronology. In Issues in history teach-
ing. London ; New York : Routledge.

Zeno Vendler. 1957. Verbs and times. The Philosophi-
cal Review, 66(2):143–160.

Zeno Vendler. 1967. Linguistics in Philosophy. Cor-
nell University Press.

Jin-ge Yao, Feifan Fan, Wayne Xin Zhao, Xiaojun
Wan, Edward Y. Chang, and Jianguo Xiao. 2016.
Tweet timeline generation with determinantal point
processes. In Proceedings of the Thirtieth AAAI
Conference on Artificial Intelligence, February 12-
17, 2016, Phoenix, Arizona, USA., pages 3080–
3086.

Deyu Zhou, Haiyang Xu, Xin-Yu Dai, and Yulan He.
2016. Unsupervised storyline extraction from news
articles. In Proceedings of the Twenty-Fifth Inter-
national Joint Conference on Artificial Intelligence,
IJCAI 2016, New York, NY, USA, 9-15 July 2016,
pages 3014–3021.

77


