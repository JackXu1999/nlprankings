



















































A Dataset for Document Grounded Conversations


Proceedings of the 2018 Conference on Empirical Methods in Natural Language Processing, pages 708–713
Brussels, Belgium, October 31 - November 4, 2018. c©2018 Association for Computational Linguistics

708

A Dataset for Document Grounded Conversations

Kangyan Zhou, Shrimai Prabhumoye, Alan W Black
Carnegie Mellon University, Pittsburgh, PA, USA

{kangyanz, sprabhum, awb}@cs.cmu.edu

Abstract

This paper introduces a document grounded
dataset for conversations. We define “Docu-
ment Grounded Conversations” as conversa-
tions that are about the contents of a specified
document. In this dataset the specified docu-
ments were Wikipedia articles about popular
movies. The dataset contains 4112 conversa-
tions with an average of 21.43 turns per con-
versation. This positions this dataset to not
only provide a relevant chat history while gen-
erating responses but also provide a source of
information that the models could use. We
describe two neural architectures that provide
benchmark performance on the task of gen-
erating the next response. We also evaluate
our models for engagement and fluency, and
find that the information from the document
helps in generating more engaging and fluent
responses.

1 Introduction

At present, dialog systems are considered to be ei-
ther task-oriented, where a specific task is the goal
of the conversation (e.g. getting bus information
or weather for a particular location); or non-task
oriented where conversations are more for the sake
of themselves, be it entertainment or passing the
time. Ultimately, we want our agents to smoothly
interleave between task-related information flow
and casual chat for the given situation. There is
a dire need of a dataset which caters to both these
objectives.

Serban et al. (2015) provide a comprehensive
list of available datasets for building end-to-end
conversational agents. Datasets based on movie
scripts (Lison and Tiedemann, 2016; Danescu-
Niculescu-Mizil and Lee, 2011a) contain artifi-
cial conversations. The Ubuntu Dialogue Corpus
(Lowe et al., 2015) is based on technical support
logs from the Ubuntu forum. The Frames dataset

(Asri et al., 2017) was collected to solve the prob-
lem of frame tracking. These datasets do not pro-
vide grounding of the information presented in the
conversations. Zhang et al. (2018) focuses on per-
sonas in dialogues: each worker has a set of pre-
defined facts about the persona that they can talk
about. Most of these datasets lack conversations
with large number of on-topic turns.

We introduce a new dataset which addresses the
concerns of grounding in conversation responses,
context and coherence in responses. We present a
dataset which has real human conversations with
grounding in a document. Although our exam-
ples use Wikipedia articles about movies, we see
the same techniques being valid for other external
documents such as manuals, instruction booklets,
and other informational documents. We build a
generative model with and without the document
information and find that the responses generated
by the model with the document information is
more engaging (+7.5% preference) and more flu-
ent (+0.96 MOS). The perplexity also shows a
11.69 point improvement.

2 The Document Grounded Dataset

To create a dataset for document grounded con-
versations, we seek the following things: (1) A set
of documents (2) Two humans chatting about the
content of the document for more than 12 turns.
We collected conversations about the documents
through Amazon Mechanical Turk (AMT). We re-
strict the topic of the documents to be movie-
related articles to facilitate the conversations. We
initially experimented with different potential do-
mains. Since movies are engaging and widely
known, people actually stay on task when dis-
cussing them. In fact in order to make the task
interesting, we offered a choice of movies to the
participants so that they are invested in the task.



709

2.1 Document Set Creation

We choose Wikipedia (Wiki) 1 articles to cre-
ate a set of documents D = {d1, . . . , d30} for
grounding of conversations. We randomly select
30 movies, covering various genres like thriller,
super-hero, animation, romantic, biopic etc. We
extract the key information provided in the Wiki
article and divide it into four separate sections.
This was done to reduce the load of the users to
read, absorb and discuss the information in the
document. Hence, each movie document di con-
sists of four sections {s1, s2, s3, s4} correspond-
ing to basic information and three key scenes of
the movie. The basic information section s1 con-
tains data from the Wikipedia article in a stan-
dard form such as year, genre, director. It also
includes a short introduction about the movie, rat-
ings from major review websites, and some crit-
ical responses. Each of the key scene sections
{s2, s3, s4} contains one short paragraph from the
plot of the movie. Each paragraph contains on an
average 7 sentences and 143 words. These para-
graphs were extracted automatically from the orig-
inal articles, and were then lightly edited by hand
to make them of consistent size and detail. An ex-
ample of the document is attached in Appendix.

2.2 Dataset Creation

To create a dataset of conversations which uses the
information from the document, involves the par-
ticipation of two workers. Hence, we explore two
scenarios: (1) Only one worker has access to the
document and the other worker does not and (2)
Both the workers have access to the document. In
both settings, they are given the common instruc-
tions of chatting for at least 12 turns.

Scenario 1: One worker has document. In this
scenario, only one worker has access to the docu-
ment. The other worker cannot see the document.
The instruction to the worker with the document
is: Tell the other user what the movie is, and try
to persuade the other user to watch/not to watch
the movie using the information in the document;
and the instruction to the worker without the doc-
ument is: After you are told the name of the movie,
pretend you are interested in watching the movie,
and try to gather all the information you need to
make a decision whether to watch the movie in the
end. An example of part of the dialogue for this

1https://en.wikipedia.org

user2: Hey have you seen the inception?
user1: No, I have not but have heard of it.

What is it about
user2: It’s about extractors that perform

experiments using military technology
on people to retrieve info about their
targets.

Table 1: An example conversation for scenario 1. User
1 does not have access to the document, while User 2
does. The full dialogue is attached in the Appendix.

User 2: I thought The Shape of Water was
one of Del Toro’s best works.
What about you?

User 1: Did you like the movie?
User 1: Yes, his style really extended the story.
User 2: I agree. He has a way with fantasy

elements that really helped this story
be truly beautiful.

Table 2: An example conversation for scenario 2. Both
User 1 and User 2 have access to the Wiki document.
The full dialogue is attached in the Appendix.

scenario is shown in Table 1.

Scenario 2: Both workers have document. In
this scenario, both the workers have access to the
same Wiki document. The instruction given to
the workers are: Discuss the content in the doc-
ument with the other user, and show whether you
like/dislike the movie. An example of the dialogue
for this scenario is shown in Table 2.

Workflow: When the two workers enter the
chat-room, they are initially given only the first
section on basic information s1 of the document
di. After the two workers complete 3 turns (for the
first section 6 turns is needed due to initial greet-
ings), the users will be shown the next section. The
users are encouraged to discuss information in the
new section, but are not constrained to do so.

2.3 Dataset Statistics
The dataset consists of total 4112 conversations
with an average of 21.43 turns. The number of
conversations for scenario 1 is 2128 and for sce-
nario 2 it is 1984. We consider a turn to be an
exchange between two workers (say w1 and w2).
Hence an exchange of w1, w2, w1 has 2 turns (w1,
w2) and (w2, w1). We show the comparison of our
dataset as CMU Document Grounded Conversa-
tions (CMU DoG) with other datasets in Table 3.



710

Dataset # Utterances Avg. # of Turns
CMU DoG 130000 31
Persona-chat (Zhang et al., 2018) 164,356 14
Cornell Movie (Danescu-Niculescu-Mizil and Lee, 2011b) 304,713 1.38
Frames dataset (Asri et al., 2017) 19,986 15

Table 3: Comparison with other datasets. The average number of turns are calculated as the number of utterances
divided by the number of conversations for each of the datasets.

Rating 1 Rating 2 Rating 3 Rating 2& 3
Total # of conversations 1443 2142 527 2669
Total # of utterances 28536 80104 21360 101464
Average # utterances/conversation 19.77(13.68) 35.39(8.48) 40.53(12.92) 38.01(9.607)
Average length of utterance 7.51(50.19) 10.56(8.51) 16.57(15.23) 11.83(10.58)

Table 4: The statistics of the dataset. Standard deviation in parenthesis.

One of the salient features of CMUDoG dataset
is that it has mapping of the conversation turns
to each section of the document, which can then
be used to model conversation responses. Another
useful aspect is that we report the quality of the
conversations in terms of how much the conversa-
tion adheres to the information in the document.

Split Criteria: We automatically measure the
quality of the conversations using BLEU (Pap-
ineni et al., 2002) score. We use BLEU because
we want to measure the overlap of the turns of
the conversation with the sections of the docu-
ment. Hence, a good quality conversation should
use more information from the document than a
low quality conversation. We divide our dataset
into three ratings based on this measure. The
BLEU score is calculated between all the utter-
ances {x1, . . . , xn} of a conversation Ci and the
document di corresponding to Ci. We eliminate
incomplete conversations that have less than 10
turns. The percentiles for the remaining conver-
sations are shown in Table 5. We split the dataset
into three ratings based on BLEU score.

Percentile 20 40 60 80 99
BLEU 0.09 0.20 0.34 0.53 0.82

Table 5: The distribution of BLEU score for conversa-
tions with more than 10 turns.

Rating 1: Conversations are given a rating of 1
if their BLEU score is less than or equal to 0.1. We
consider these conversations to be of low-quality.

Rating 2: All the conversations that do not fit in
rating 1 and 3 are marked with a rating of 2.

Rating 3: Conversations are labeled with a rat-
ing of 3, only if the conversation has more than
12 turns and has a BLEU score larger than 0.587.
This threshold was calculated by summing the
mean (0.385) and the standard deviation (0.202)
of BLEU scores of the conversations that do not
belong rating 1.

The average BLEU score for workers who have
access to the document is 0.22 whereas the aver-
age BLEU score for the workers without access to
the document is 0.03. This suggests that even if the
workers had external knowledge about the movie,
they have not extensively used it in the conversa-
tion. It also suggests that the workers with the doc-
ument have not used the information from the doc-
ument verbatim in the conversation. Table 4 shows
the statistics on the total number of conversations,
utterances, and average number of utterances per
conversation and average length of utterances for
all the three ratings.

3 Models

In this section we discuss models which can lever-
age the information from the document for gener-
ating responses. We explore generative models for
this purpose. Given a dataset X = {x0, . . . , xn}
of utterances in a conversation Ci, we consider
two settings: (1) to generate a response xi+1 when
given only the current utterance xi and (2) to gen-
erate a response xi+1 when given the correspond-
ing section si and the previous utterance xi.

Without section: We use the sequence-to-
sequence model (Sutskever et al., 2014) to build
our baseline model. Formally, let θE represent the



711

parameters of the encoder. Then the representation
hxi of the current utterance xi is given by:

hxi = Encoder(xi;θE) (1)

Samples of xi+1 are generated as follows:

p(x̂|hxi) =
∏
t

p(x̂t|x̂<t,hxi) (2)

where, x̂<t are the tokens generated before x̂t. We
also use global attention (Luong et al., 2015) with
copy mechanism (See et al., 2017) to guide our
generators to replace the unknown (UNK) tokens.
We call this model SEQ.

With section: We extend the sequence-to-
sequence framework to include the section si cor-
responding the current turn. We use the same en-
coder to encode both the utterance and the section.
We get the representation hxi of the current utter-
ance xi using Eq. 1. The representation of the
section is given by:

hsi = Encoder(si;θE) (3)

The input at each time step t to the generative
model is given by ht = [xt−1;hs], where xt−1
is the embedding of the word at the previous time
step. We call this model SEQS.

Experimental Setup: For both SEQ and SEQS
model, we use a two-layer bidirectional LSTM
as the encoder and a LSTM as the decoder. The
dropout rate of the LSTM output is set to be 0.3.
The size of hidden units for both LSTMs is 300.
We set the word embedding size to be 100, since
the size of vocabulary is relatively small2. The
models are trained with adam (Kingma and Ba,
2014) optimizer with learning rate 0.001 until they
converge on the validation set for the perplexity
criteria. We use beam search with size 5 for re-
sponse generation. We use all the data (i.e all
the conversations regardless of the rating and sce-
nario) for training and testing. The proportion of
train/validation/test split is 0.8/0.05/0.15.

4 Evaluation

In what follows, we first present an analysis of
the dataset, then provide an automatic metric for
evaluation of our models–perplexity and finally
present the results of human evaluation of the gen-
erated responses for engagement and fluency.

scenario NW LT
1 0.78 12.85
2 5.84 117.12

Table 6: The results of data analysis. LT refers to the
average length of xi in scenario 1 and xi, . . . , xi+k in
scenario 2.

Dataset analysis: We perform two kinds of au-
tomated evaluation to investigate the usefulness of
the document in the conversation. The first one
is to investigate if the workers use the informa-
tion from the document in the conversation. The
second analysis is to show that the document adds
value to the conversation. Let the set of tokens in
the current utterance xi be N , the set of tokens
in the current section si be M , the set of tokens
in the previous three utterances be H , and the set
of stop words be S. In scenario 1, we calculate
the set operation (NW) as |((N ∩ M) \ H) \ S|.
Let the tokens that appear in all the utterances
(xi, . . . , xi+k) corresponding to the current sec-
tion si be K and the tokens that appear in all the
utterances (xi, . . . , xi+p) corresponding to the pre-
vious section si−1 be P . In scenario 2, we calcu-
late the set operation (NW) as |((K∩M)\P )\S|.
The results in Table 6 show that people use the in-
formation in the new sections and are not fixated
on old sections. It also shows that they use the
information to construct the responses.

Perplexity: To automatically evaluate the flu-
ency of the models, we use perplexity measure.
We build a language model on the train set of re-
sponses using ngrams up to an order of 33. The
generated test responses achieve a perplexity of
21.8 for the SEQ model and 10.11 for the SEQS
model. This indicates that including the sections
of document helps in the generation process.

4.1 Human Evaluation

We also perform two kinds of human evaluations
to evaluate the quality of predicted utterances – en-
gagement and fluency. These experiments are per-
formed on Amazon Mechanical Turk.

Engagement: We set up a pairwise comparison
following Bennett (2005) to evaluate the engage-
ment of the generated responses. The test presents
the chat history (1 utterance) and then, in random

2The total number of tokens is 46000, and we limit the
vocabulary to be 10000 tokens.

3We use the SRILM toolkit (Stolcke, 2002)



712

order, its corresponding response produced by the
SEQ and SEQS models. A third option “No Pref-
erence” was given to participants to mark no pref-
erence for either of the generated responses. The
instruction given to the participants is “Given the
above chat history as context, you have to pick
the one which can be best used as the response
based on the engagingness.” We randomly sam-
ple 90 responses from each model. Each response
was annotated by 3 unique workers and we take
majority vote as the final label. The result of the
test is that SEQ generated responses were chosen
only 36.4% times as opposed to SEQS generated
responses which were chosen 43.9% and the “No
Preference” option was chosen 19.6% of times.
This result shows the information from the sec-
tions improves the engagement of the generated
responses.

Fluency: The workers were asked to evaluate
the fluency of the generated response on a scale
of 1 to 4, where 1 is unreadable and 4 is perfectly
readable. We randomly select 120 generated re-
sponses from each model and each response was
annotated by 3 unique workers. The SEQ model
got a low score of 2.88, contrast to the SEQS score
of 3.84. This outcome demonstrates that the in-
formation in the section also helps in guiding the
generator to produce fluent responses.

5 Conclusion

In this paper we introduce a crowd-sourced con-
versations dataset that is grounded in a predefined
set of documents which is available for download
4. We perform multiple automatic and human
judgment based analysis to understand the value
the information from the document provides to the
generation of responses. The SEQS model which
uses the information from the section to generate
responses outperforms the SEQ model in the eval-
uation tasks of engagement, fluency and perplex-
ity.

Acknowledgments

This work was funded by a fellowship from
Robert Bosch, and in part by Facebook Inc. and
Microsoft Corporation. This work was performed
as a part of The Conversational Intelligence Chal-
lenge (ConvAI, NIPS 2017) and we would like
to thank the ConvAI team. We are also grateful

4https://www.github.com/festvox/datasets/CMU DoG

to the anonymous reviewers for their constructive
feedback and to Carolyn Penstein Rose, Shivani
Poddar, Sreecharan Sankaranarayanan, Samridhi
Shree Choudhary and Zhou Yu for valuable
discussions at earlier stages of this work.

References
Layla El Asri, Hannes Schulz, Shikhar Sharma,

Jeremie Zumer, Justin Harris, Emery Fine, Rahul
Mehrotra, and Kaheer Suleman. 2017. Frames: A
corpus for adding memory to goal-oriented dialogue
systems. arXiv preprint arXiv:1704.00057.

Christina L Bennett. 2005. Large scale evaluation of
corpus-based synthesizers: Results and lessons from
the blizzard challenge 2005. In Ninth European
Conference on Speech Communication and Technol-
ogy.

Cristian Danescu-Niculescu-Mizil and Lillian Lee.
2011a. Chameleons in imagined conversations: A
new approach to understanding coordination of lin-
guistic style in dialogs. In Proceedings of the
2nd Workshop on Cognitive Modeling and Compu-
tational Linguistics, pages 76–87. Association for
Computational Linguistics.

Cristian Danescu-Niculescu-Mizil and Lillian Lee.
2011b. Chameleons in imagined conversations: A
new approach to understanding coordination of lin-
guistic style in dialogs. In Proceedings of the Work-
shop on Cognitive Modeling and Computational
Linguistics, ACL 2011.

Diederik P Kingma and Jimmy Ba. 2014. Adam: A
method for stochastic optimization. arXiv preprint
arXiv:1412.6980.

Pierre Lison and Jörg Tiedemann. 2016. Opensub-
titles2016: Extracting large parallel corpora from
movie and tv subtitles.

Ryan Lowe, Nissan Pow, Iulian Serban, and Joelle
Pineau. 2015. The ubuntu dialogue corpus: A large
dataset for research in unstructured multi-turn dia-
logue systems. arXiv preprint arXiv:1506.08909.

Minh-Thang Luong, Hieu Pham, and Christopher D
Manning. 2015. Effective approaches to attention-
based neural machine translation. arXiv preprint
arXiv:1508.04025.

Kishore Papineni, Salim Roukos, Todd Ward, and Wei-
Jing Zhu. 2002. Bleu: a method for automatic eval-
uation of machine translation. In Proceedings of
the 40th annual meeting on association for compu-
tational linguistics, pages 311–318. Association for
Computational Linguistics.

Abigail See, Peter J Liu, and Christopher D Manning.
2017. Get to the point: Summarization with pointer-
generator networks. In Proc. ACL.



713

Iulian Vlad Serban, Ryan Lowe, Peter Henderson, Lau-
rent Charlin, and Joelle Pineau. 2015. A survey of
available corpora for building data-driven dialogue
systems. arXiv preprint arXiv:1512.05742.

Andreas Stolcke. 2002. Srilm-an extensible language
modeling toolkit. In Seventh international confer-
ence on spoken language processing.

Ilya Sutskever, Oriol Vinyals, and Quoc V Le. 2014.
Sequence to sequence learning with neural net-
works. In Advances in neural information process-
ing systems, pages 3104–3112.

Saizheng Zhang, Emily Dinan, Jack Urbanek, Arthur
Szlam, Douwe Kiela, and Jason Weston. 2018. Per-
sonalizing dialogue agents: I have a dog, do you
have pets too? arXiv preprint arXiv:1801.07243.


