



















































Visually Grounded Neural Syntax Acquisition


Proceedings of the 57th Annual Meeting of the Association for Computational Linguistics, pages 1842‚Äì1861
Florence, Italy, July 28 - August 2, 2019. c¬©2019 Association for Computational Linguistics

1842

Visually Grounded Neural Syntax Acquisition

Haoyue Shi‚Ä†,‚àó Jiayuan Mao‚Ä°,‚àó Kevin Gimpel‚Ä† Karen Livescu‚Ä†

‚Ä†: Toyota Technological Institute at Chicago, IL, USA
‚Ä°: ITCS, Institute for Interdisciplinary Information Sciences, Tsinghua University, China

{freda, kgimpel, klivescu}@ttic.edu, mjy14@mails.tsinghua.edu.cn

Abstract

We present the Visually Grounded Neural
Syntax Learner (VG-NSL), an approach for
learning syntactic representations and struc-
tures without explicit supervision. The model
learns by looking at natural images and read-
ing paired captions. VG-NSL generates con-
stituency parse trees of texts, recursively com-
poses representations for constituents, and
matches them with images. We define the
concreteness of constituents by their matching
scores with images, and use it to guide the
parsing of text. Experiments on the MSCOCO
data set show that VG-NSL outperforms var-
ious unsupervised parsing approaches that do
not use visual grounding, in terms of F1 scores
against gold parse trees. We find that VG-
NSL is much more stable with respect to the
choice of random initialization and the amount
of training data. We also find that the con-
creteness acquired by VG-NSL correlates well
with a similar measure defined by linguists. Fi-
nally, we also apply VG-NSL to multiple lan-
guages in the Multi30K data set, showing that
our model consistently outperforms prior un-
supervised approaches.1

1 Introduction

We study the problem of visually grounded syn-
tax acquisition. Consider the images in Figure 1,
paired with the descriptive texts (captions) in En-
glish. Given no prior knowledge of English, and
sufficient such pairs, one can infer the correspon-
dence between certain words and visual attributes,
(e.g., recognizing that ‚Äúa cat‚Äù refers to the objects
in the blue boxes). One can further extract con-
stituents, by assuming that concrete spans of words
should be processed as a whole, and thus form the

‚àóHS and JM contributed equally to the work.
1 Project page: https://ttic.uchicago.edu/

Àúfreda/project/vgnsl

A cat stands under an umbrella.

A cat is on the ground.

A dog sits under an umbrella.

Figure 1: We propose to use image-caption pairs to
extract constituents from text, based on the assumption
that similar spans should be matched to similar visual
objects and these concrete spans form constituents.

constituents. Similarly, the same process can be
applied to verb or prepositional phrases.

This intuition motivates the use of image-text
pairs to facilitate automated language learning, in-
cluding both syntax and semantics. In this paper
we focus on learning syntactic structures, and pro-
pose the Visually Grounded Neural Syntax Learner
(VG-NSL, shown in Figure 2). VG-NSL acquires
syntax, in the form of constituency parsing, by
looking at images and reading captions.

At a high level, VG-NSL builds latent con-
stituency trees of word sequences and recursively
composes representations for constituents. Next,
it matches the visual and textual representations.
The training procedure is built on the hypothesis
that a better syntactic structure contributes to a
better representation of constituents, which then
leads to better alignment between vision and lan-
guage. We use no human-labeled constituency trees
or other syntactic labeling (such as part-of-speech
tags). Instead, we define a concreteness score of
constituents based on their matching with images,
and use it to guide the parsing of sentences. At test
time, no images paired with the text are needed.

We compare VG-NSL with prior approaches to
unsupervised language learning, most of which

https://ttic.uchicago.edu/~freda/project/vgnsl
https://ttic.uchicago.edu/~freda/project/vgnsl


1843

do not use visual grounding. Our first finding is
that VG-NSL improves over the best previous ap-
proaches to unsupervised constituency parsing in
terms of F1 scores against gold parse trees. We
also find that many existing approaches are quite
unstable with respect to the choice of random ini-
tialization, whereas VG-NSL exhibits consistent
parsing results across multiple training runs. Third,
we analyze the performance of different models
on different types of constituents, and find that
our model shows substantial improvement on noun
phrases and prepositional phrases which are com-
mon in captions. Fourth, VG-NSL is much more
data-efficient than prior work based purely on text,
achieving comparable performance to other ap-
proaches using only 20% of the training captions.
In addition, the concreteness score, which emerges
during the matching between constituents and im-
ages, correlates well with a similar measure defined
by linguists. Finally, VG-NSL can be easily ex-
tended to multiple languages, which we evaluate
on the Multi30K data set (Elliott et al., 2016, 2017)
consisting of German and French image captions.

2 Related Work

Linguistic structure induction from text. Re-
cent work has proposed several approaches for in-
ducing latent syntactic structures, including con-
stituency trees (Choi et al., 2018; Yogatama et al.,
2017; Maillard and Clark, 2018; Havrylov et al.,
2019; Kim et al., 2019; Drozdov et al., 2019) and
dependency trees (Shi et al., 2019), from the distant
supervision of downstream tasks. However, most
of the methods are not able to produce linguisti-
cally sound structures, or even consistent ones with
fixed data and hyperparameters but different ran-
dom initializations (Williams et al., 2018).

A related line of research is to induce latent
syntactic structure via language modeling. This
approach has achieved remarkable performance
on unsupervised constituency parsing (Shen et al.,
2018a, 2019), especially in identifying the bound-
aries of higher-level (i.e., larger) constituents. To
our knowledge, the Parsing-Reading-Predict Net-
work (PRPN; Shen et al., 2018a) and the Ordered
Neuron LSTM (ON-LSTM; Shen et al., 2019) cur-
rently produce the best fully unsupervised con-
stituency parsing results. One issue with PRPN,
however, is that it tends to produce meaningless
parses for lower-level (smaller) constituents (Phu
Mon Htut et al., 2018).

Over the last two decades, there has been ex-
tensive study targeting unsupervised constituency
parsing (Klein and Manning, 2002, 2004, 2005;
Bod, 2006a,b; Ponvert et al., 2011) and dependency
parsing (Klein and Manning, 2004; Smith and Eis-
ner, 2006; Spitkovsky et al., 2010; Han et al., 2017).
However, all of these approaches are based on lin-
guistic annotations. Specifically, they operate on
the part-of-speech tags of words instead of word
tokens. One exception is Spitkovsky et al. (2011),
which produces dependency parse trees based on
automatically induced pseudo tags.

In contrast to these existing approaches, we fo-
cus on inducing constituency parse trees with vi-
sual grounding. We use parallel data from another
modality (i.e., paired images and captions), instead
of linguistic annotations such as POS tags. We in-
clude a detailed comparison between some related
works in the supplementary material.

There has been some prior work on improv-
ing unsupervised parsing by leveraging extra sig-
nals, such as parallel text (Snyder et al., 2009),
annotated data in another language with parallel
text (Ganchev et al., 2009), annotated data in other
languages without parallel text (Cohen et al., 2011),
or non-parallel text from multiple languages (Co-
hen and Smith, 2009). We leave the integration of
other grounding signals as future work.

Grounded language acquisition. Grounded lan-
guage acquisition has been studied for image-
caption data (Christie et al., 2016a), video-caption
data (Siddharth et al., 2014; Yu et al., 2015), and
visual reasoning (Mao et al., 2019). However, ex-
isting approaches rely on human labels or rules for
classifying visual attributes or actions. Instead, our
model induces syntax structures with no human-
defined labels or rules.

Meanwhile, learning visual-semantic representa-
tions in a joint embedding space (Ngiam et al.,
2011) is a widely studied approach, and has
achieved remarkable results on image-caption re-
trieval (Kiros et al., 2014; Faghri et al., 2018; Shi
et al., 2018a), image caption generation (Kiros
et al., 2014; Karpathy and Fei-Fei, 2015; Ma et al.,
2015), and visual question answering (Malinowski
et al., 2015). In this work, we borrow this idea to
match visual and textual representations.

Concreteness estimation. Turney et al. (2011)
define concrete words as those referring to things,
events, and properties that we can perceive directly
with our senses. Subsequent work has studied



1844

Image Encoder

Image

A cat is on the ground

Caption

Structure and Representation
Inference

ùíó(ùëñ)
ùíÑ1
(ùëñ)

ùíÑ2
(ùëñ)

ùíÑ3
(ùëñ)

ùíó(ùëñ)

Constituency Parse Tree

Visual-Semantic Embeddings

Embeddings of Constituents

Image Embedding

(Score-Sample-Combine)

Figure 2: VG-NSL consists of two modules: a textual module for inferring structures and representations for
captions, and a visual-semantic module for matching constituents with images. VG-NSL induces constituency
parse trees of captions by looking at images and reading paired captions.

word-level concreteness estimation based on text
(Turney et al., 2011; Hill et al., 2013), human judg-
ments (Silberer and Lapata, 2012; Hill and Ko-
rhonen, 2014a; Brysbaert et al., 2014), and multi-
modal data (Hill and Korhonen, 2014b; Hill et al.,
2014; Kiela et al., 2014; Young et al., 2014; Hessel
et al., 2018; Silberer et al., 2017; Bhaskar et al.,
2017). As with Hessel et al. (2018) and Kiela et al.
(2014), our model uses multi-modal data to esti-
mate concreteness. Compared with them, we define
concreteness for spans instead of words, and use it
to induce linguistic structures.

3 Visually Grounded Neural Syntax
Learner

Given a set of paired images and captions, our goal
is to learn representations and structures for words
and constituents. Toward this goal, we propose the
Visually Grounded Neural Syntax Learner (VG-
NSL), an approach for the grounded acquisition of
syntax of natural language. VG-NSL is inspired by
the idea of semantic bootstrapping (Pinker, 1984),
which suggests that children acquire syntax by first
understanding the meaning of words and phrases,
and linking them with the syntax of words.

At a high level (Figure 2), VG-NSL consists of
2 modules. First, given an input caption (i.e., a
sentence or a smaller constituent), as a sequence of
tokens, VG-NSL builds a latent constituency parse
tree, and recursively composes representations for
every constituent. Next, it matches textual represen-
tations with visual inputs, such as the paired image
with the constituents. Both modules are jointly
optimized from natural supervision: the model ac-
quires constituency structures, composes textual
representations, and links them with visual scenes,
by looking at images and reading paired captions.

3.1 Textual Representations and Structures
VG-NSL starts by composing a binary constituency
structure of text, using an easy-first bottom-up
parser (Goldberg and Elhadad, 2010). The compo-
sition of the tree from a caption of length n consists
of n‚àí1 steps. Let X(t) = (x(t)1 ,x

(t)
2 , ¬∑ ¬∑ ¬∑ ,x

(t)
k ) de-

note the textual representations of a sequence of
constituents after step t, where k = n‚àí t. For sim-
plicity, we use X(0) to denote the word embeddings
for all tokens (the initial representations).

At step t, a score function score(¬∑; Œò), parameter-
ized by Œò, is evaluated on all pairs of consecutive
constituents, resulting in a vector score(X(t‚àí1); Œò)
of length n‚àí t:

score(X(t‚àí1); Œò)j

, score
([

x
(t‚àí1)
j ,x

(t‚àí1)
j+1

]
; Œò
)
.

We implement score(¬∑; Œò) as a two-layer feed-
forward network.

A pair of constituents
(
x
(t‚àí1)
j‚àó ,x

(t‚àí1)
j‚àó+1

)
is sam-

pled from all pairs of consecutive constituents,
with respect to the distribution produced by a
softmax:2

Pr [j‚àó] =
exp

(
score

(
X(t‚àí1); Œò

)
j‚àó

)
‚àë

j exp
(

score
(
X(t‚àí1); Œò

)
j

) .
The selected pair is combined to form a single new
constituent. Thus, after step t, the number of con-
stituents is decreased by 1. The textual represen-
tation for the new constituent is defined as the L2-
normed sum of the two component constituents:

combine
(
x
(t‚àí1)
j‚àó ,x

(t‚àí1)
j‚àó+1

)
,

x
(t‚àí1)
j‚àó + x

(t‚àí1)
j‚àó+1‚à•‚à•‚à•x(t‚àí1)j‚àó + x(t‚àí1)j‚àó+1 ‚à•‚à•‚à•

2

.

2 At test time, we take the argmax.



1845

a cat is on the ground

Step #1: 0.4 0.1     0.1   0.1     0.3

(a cat) is on the ground

Step #2: 0.25    0.15   0.15    0.45

(a cat) is on (the ground)

Step #3: 0.25    0.15        0.6

(a cat) is (on (the ground))

Step #4: 0.35            0.65

(a cat) (is (on (the ground)))

Step #5: 1.0

((a cat) (is (on (the ground))))

Figure 3: An illustration of how VG-NSL composes a
constituency parse tree. At each step, the score func-
tion score is evaluated on all pairs of consecutive con-
stituents (dashed lines). Next, a pair of constituents is
sampled from all pairs w.r.t. a distribution computed by
the softmax of all predicted scores. The selected pair
of constituents is combined into a larger one, while the
other constituents remain unchanged (solid lines).

We find that using a more complex encoder for
constituents, such as GRUs, will cause the repre-
sentations to be highly biased towards a few salient
words in the sentence (e.g., the encoder encodes
only the word ‚Äúcat‚Äù while ignoring the rest part of
the caption; Shi et al., 2018a; Wu et al., 2019). This
significantly degrades the performance of linguistic
structure induction.

We repeat this score-sample-combine process
for n ‚àí 1 steps, until all words in the input text
have been combined into a single constituent (Fig-
ure 3). This ends the inference of the constituency
parse tree. Since at each time step we combine two
consecutive constituents, the derived tree t contains
2n‚àí 1 constituents (including all words).

3.2 Visual-Semantic Embeddings

We follow an approach similar to that of Kiros
et al. (2014) to define the visual-semantic embed-
ding (VSE) space for paired images and text con-
stituents. Let v(i) denote the vector representation
of an image i, and c(i)j denote the vector represen-
tation of the j-th constituent of its corresponding
text caption. During the matching with images, we
ignore the tree structure and index them as a list of
constituents. A function m(¬∑, ¬∑; Œ¶) is defined as the

matching score between images and texts:

m(v(i), c
(i)
j ; Œ¶) , cos(Œ¶v, c)

where the parameter vector Œ¶ aligns the visual and
textual representations into a joint space.

3.3 Training

We optimize the visual-semantic representations
(Œ¶) and constituency structures (Œò) in an alternat-
ing approach. At each iteration, given constituency
parsing results of caption, Œ¶ is optimized for match-
ing the visual and the textual representations. Next,
given the visual grounding of constituents, Œò is op-
timized for producing constituents that can be bet-
ter matched with images. Specifically, we optimize
textual representations and the visual-semantic em-
bedding space using a hinge-based triplet ranking
loss:

L(Œ¶;V, C) =‚àë
i,k 6=i,j,`

[
m(c

(k)
` ,v

(i))‚àím(c(i)j ,v
(i)) + Œ¥

]
+

+
‚àë
i,k 6=i,j

[
m(c

(i)
j ,v

(k))‚àím(c(i)j ,v
(i)) + Œ¥

]
+
,

where i and k index over all image-caption pairs
in the data set, while j and ` enumerate all con-
stituents of a specific caption (c(i) and c(k), respec-
tively), V = {v(i)} is the set of image representa-
tions, C = {c(i)j } is the set of textual representa-
tions of all constituents, and Œ¥ is a constant margin,
[¬∑]+ denotes max(0, ¬∑). The loss L extends the loss
for image-caption retrieval of Kiros et al. (2014),
by introducing the alignments between images and
sub-sentence constituents.

We optimize textual structures via distant super-
vision: they are optimized for a better alignment
between the derived constituents and the images.
Intuitively, the following objective encourages ad-
jectives to be associated (combined) with the corre-
sponding nouns, and verbs/prepositions to be asso-
ciated (combined) with the corresponding subjects
and objects. Specifically, we use REINFORCE
(Williams, 1992) as the gradient estimator for Œò.
Consider the parsing process of a specific caption
c(i), and denote the corresponding image embed-
ding v(i). For a constituent z of c(i), we define its



1846

(visual) concreteness concrete(z,v(i)) as:

concrete(z,v(i)) =‚àë
k 6=i,p

[
m(z,v(i))‚àím(c(k)p ,v(i))‚àí Œ¥‚Ä≤

]
+

+
‚àë
k 6=i

[
m(z,v(i))‚àím(z,v(k))‚àí Œ¥‚Ä≤

]
+
, (1)

where Œ¥‚Ä≤ is a fixed margin. At step t, we define
the reward function for a combination of a pair of
constituents (x(t‚àí1)j , x

(t‚àí1)
j+1 ) as:

r(x
(t‚àí1)
j ,x

(t‚àí1)
j+1 ) = concrete(z,v

(i)) (2)

where z , combine(x(t‚àí1)j ,x
(t‚àí1)
j+1 ). In plain

words, at each step, we encourage the model to
compose a constituent that maximizes the align-
ment between the new constituent and the corre-
sponding image. During training, we sample con-
stituency parse trees of captions, and reinforce each
composition step using Equation 2. During test, no
paired images of text are needed.

3.4 The Head-Initial Inductive Bias
English and many other Indo-European languages
are usually head-initial (Baker, 2001). For exam-
ple, in verb phrases or prepositional phrases, the
verb (or the preposition) precedes the complements
(e.g., the object of the verb). Consider the simple
caption a white cat on the lawn. While the asso-
ciation of the adjective (white) could be induced
from the visual grounding of phrases, whether the
preposition (on) should be associated with a white
cat or the lawn is more challenging to induce. Thus,
we impose an inductive bias to guide the learner
to correctly associate prepositions with their com-
plements, determiners with corresponding noun
phrases, and complementizers with the correspond-
ing relative clauses. Specifically, we discourage
abstract constituents (i.e., constituents that cannot
be grounded in the image) from being combined
with a preceding constituent, by modifying the orig-
inal reward definition (Equation 2) as:

r‚Ä≤(x
(t‚àí1)
j ,x

(t‚àí1)
j+1 )

=
r(x

(t‚àí1)
j ,x

(t‚àí1)
j+1 )

Œª ¬∑ abstract(x(t‚àí1)j+1 ,v(i)) + 1
,

(3)

where Œª is a scalar hyperparameter, v(i) is the im-
age embedding corresponding to the caption be-
ing parsed, and abstract denotes the abstractness

of the span, defined analogously to concreteness
(Equation 1):

abstract(z,v(i)) =‚àë
k 6=i,p

[
m(c(k)p ,v

(i))‚àím(z,v(i)) + Œ¥‚Ä≤
]
+

+
‚àë
k 6=i

[
m(z,v(k))‚àím(z,v(i)) + Œ¥‚Ä≤

]
+
,

The intuition here is that the initial heads for
prepositional phrases (e.g., on) and relative clauses
(e.g., which, where) are usually abstract words.
During training, we encourage the model to as-
sociate these abstract words with the succeeding
constituents instead of the preceding ones. It is
worth noting that such an inductive bias is language-
specific, and cannot be applied to head-final lan-
guages such as Japanese (Baker, 2001). We leave
the design of head-directionality inductive biases
for other languages as future work.

4 Experiments

We evaluate VG-NSL for unsupervised parsing
in a few ways: F1 score with gold trees, self-
consistency across different choices of random ini-
tialization, performance on different types of con-
stituents, and data efficiency. In addition, we find
that the concreteness score acquired by VG-NSL
is consistent with a similar measure defined by
linguists. We focus on English for the main experi-
ments, but also extend to German and French.

4.1 Data Sets and Metrics
We use the standard split of the MSCOCO data
set (Lin et al., 2014), following Karpathy and Fei-
Fei (2015). It contains 82,783 images for training,
1,000 for development, and another 1,000 for test-
ing. Each image is associated with 5 captions.

For the evaluation of constituency parsing, the
Penn Treebank (PTB; Marcus et al., 1993) is a
widely used, manually annotated data set. However,
PTB consists of sentences from abstract domains,
e.g., the Wall Street Journal (WSJ), which are not
visually grounded and whose linguistic structures
can hardly be induced by VG-NSL. Here we eval-
uate models on the MSCOCO test set, which is
well-matched to the training domain; we leave the
extension of our work to more abstract domains
to future work. We apply Benepar (Kitaev and
Klein, 2018),3 an off-the-shelf constituency parser

3 https://pypi.org/project/benepar

https://pypi.org/project/benepar


1847

with state-of-the-art performance (95.52 F1 score)
on the WSJ test set,4 to parse the captions in the
MSCOCO test set as gold constituency parse trees.
We evaluate all of the investigated models using
the F1 score compared to these gold parse trees.5

4.2 Baselines
We compare VG-NSL with various baselines for
unsupervised tree structure modeling of texts. We
can categorize the baselines by their training objec-
tive or supervision.

Trivial tree structures. Similarly to recent work
on latent tree structures (Williams et al., 2018; Phu
Mon Htut et al., 2018; Shi et al., 2018b), we include
three types of trivial baselines without linguistic
information: random binary trees, left-branching
binary trees, and right-branching binary trees.

Syntax acquisition by language modeling and
statistics. Shen et al. (2018a) proposes the
Parsing-Reading-Predict Network (PRPN), which
predicts syntactic distances (Shen et al., 2018b)
between adjacent words, and composes a binary
tree based on the syntactic distances to improve
language modeling. The learned distances can be
mapped into a binary constituency parse tree, by
recursively splitting the sentence between the two
consecutive words with the largest syntactic dis-
tance.

Ordered neurons (ON-LSTM; Shen et al., 2019)
is a recurrent unit based on the LSTM cell (Hochre-
iter and Schmidhuber, 1997) that explicitly regular-
izes different neurons in a cell to represent short-
term or long-term information. After being trained
on the language modeling task, Shen et al. (2019)
suggest that the gate values in ON-LSTM cells
can be viewed as syntactic distances (Shen et al.,
2018b) between adjacent words to induce latent
tree structures. ON-LSTM has the state-of-the-art
unsupervised constituency parsing performance on
the WSJ test set. We train both PRPN and ON-
LSTM on all captions in the MSCOCO training set
and use the models as baselines.

Inspired by the syntactic distance‚Äìbased ap-
proaches (Shen et al., 2018a, 2019), we also in-
troduce another baseline, PMI, which uses negative

4 We also manually label the constituency parse trees for
50 captions randomly sampled from the MSCOCO test split,
where Benepar has an F1 score of 95.65 with the manual labels.
Details can be found in the supplementary material.

5 Following convention (Sekine and Collins, 1997), we re-
port the F1 score across all constituents in the data set, instead
of the average of sentence-level F1 scores.

pointwise mutual information (Church and Hanks,
1990) between adjacent words as the syntactic dis-
tance. We compose constituency parse trees based
on the distances in the same way as PRPN and
ON-LSTM.

Syntax acquisition from downstream tasks.
Choi et al. (2018) propose to compose binary con-
stituency parse trees directly from downstream
tasks using the Gumbel softmax trick (Jang et al.,
2017). We integrate a Gumbel tree-based caption
encoder into the visual semantic embedding ap-
proach (Kiros et al., 2014). The model is trained
on the downstream task of image-caption retrieval.

Syntax acquisition from concreteness estima-
tion. Since we apply concreteness information
to train VG-NSL, it is worth comparing against un-
supervised constituency parsing based on previous
approaches for predicting word concreteness. This
set of baselines includes semi-supervised estima-
tion (Turney et al., 2011), crowdsourced labeling
(Brysbaert et al., 2014), and multimodal estima-
tion (Hessel et al., 2018). Note that none of these
approaches has been applied to unsupervised con-
stituency parsing. Implementation details can be
found in the supplementary material.

Based on the concreteness score of words, we
introduce another baseline similar to VG-NSL.
Specifically, we recursively combine two consecu-
tive constituents with the largest average concrete-
ness, and use the average concreteness as the score
for the composed constituent. The algorithm gen-
erates binary constituency parse trees of captions.
For a fair comparison, we implement a variant of
this algorithm that also uses a head-initial inductive
bias and include the details in the appendix.

4.3 Implementation Details
Across all experiments and all models (including
baselines such as PRPN, ON-LSTM, and Gum-
bel), the embedding dimension for words and con-
stituents is 512. For VG-NSL, we use a pre-trained
ResNet-101 (He et al., 2016), trained on ImageNet
(Russakovsky et al., 2015), to extract vector em-
beddings for images. Thus, Œ¶ is a mapping from a
2048-D image embedding space to a 512-D visual-
semantic embedding space. As for the score func-
tion in constituency parsing, we use a hidden di-
mension of 128 and ReLU activation. All VG-NSL
models are trained for 30 epochs. We use an Adam
optimizer (Kingma and Ba, 2015) with initial learn-
ing rate 5√ó 10‚àí4 to train VG-NSL. The learning



1848

Model NP VP PP ADJP Avg. F1 Self F1
Random 47.3¬±0.3 10.5¬±0.4 17.3¬±0.7 33.5¬±0.8 27.1¬±0.2 32.4
Left 51.4 1.8 0.2 16.0 23.3 N/A
Right 32.2 23.4 18.7 14.4 22.9 N/A
PMI 54.2 16.0 14.3 39.2 30.5 N/A
PRPN (Shen et al., 2018a) 72.8¬±9.7 33.0¬±9.1 61.6¬±9.9 35.4¬±4.3 52.5¬±2.6 60.3
ON-LSTM (Shen et al., 2019) 74.4¬±7.1 11.8¬±5.6 41.3¬±16.4 44.0¬±14.0 45.5¬±3.3 69.3
Gumbel (Choi et al., 2018)‚Ä† 50.4¬±0.3 8.7¬±0.3 15.5¬±0.0 34.8¬±1.6 27.9¬±0.2 40.1

VG-NSL (ours)‚Ä† 79.6¬±0.4 26.2¬±0.4 42.0¬±0.6 22.0¬±0.4 50.4¬±0.3 87.1
VG-NSL+HI (ours)‚Ä† 74.6¬±0.5 32.5¬±1.5 66.5¬±1.2 21.7¬±1.1 53.3¬±0.2 90.2
VG-NSL+HI+FastText (ours)*‚Ä† 78.8¬±0.5 24.4¬±0.9 65.6¬±1.1 22.0¬±0.7 54.4¬±0.4 89.8

Concreteness estimation‚Äìbased models

Turney et al. (2011)* 65.5 30.8 35.3 30.4 42.5 N/A
Turney et al. (2011)+HI* 74.5 26.2 47.6 25.6 48.9 N/A
Brysbaert et al. (2014)* 54.1 27.8 27.0 33.1 34.1 N/A
Brysbaert et al. (2014)+HI* 73.4 23.9 50.0 26.1 47.9 N/A
Hessel et al. (2018)‚Ä† 50.9 21.7 32.8 27.5 33.2 N/A
Hessel et al. (2018)+HI‚Ä† 72.5 34.4 65.8 26.2 52.9 N/A

Table 1: Recall of specific typed phrases, and overall F1 score, evaluated on the MSCOCO test split, averaged over
5 runs with different random initializations. We also include self-agreement F1 score (Williams et al., 2018) across
the 5 runs. ¬± denotes standard deviation. * denotes models requiring extra labels and/or corpus, and ‚Ä† denotes
models requiring a pre-trained visual feature extractor. We highlight the best number in each column among all
models that do not require extra data other than paired image-caption data, as well as the overall best number. The
Left, Right, PMI, and concreteness estimation‚Äìbased models have no standard deviation or self F1 (shown as N/A)
as they are deterministic given the training and/or testing data.

rate is re-initialized to 2.5√ó 10‚àí4 after 15 epochs.
We tune other hyperparameters of VG-NSL on the
development set using the self-agreement F1 score
(Williams et al., 2018) over 5 runs with different
choices of random initialization.

4.4 Results: Unsupervised Constituency
Parsing

We evaluate the induced constituency parse trees
via the overall F1 score, as well as the recall of
four types of constituents: noun phrases (NP), verb
phrases (VP), prepositional phrases (PP), and ad-
jective phrases (ADJP) (Table 1). We also evaluate
the robustness of models trained with fixed data
and hyperparameters, but different random initial-
ization, in two ways: via the standard deviation of
performance across multiple runs, and via the self-
agreement F1 score (Williams et al., 2018), which
is the average F1 taken over pairs of different runs.

Among all of the models which do not require
extra labels, VG-NSL with the head-initial induc-
tive bias (VG-NSL+HI) achieves the best F1 score.
PRPN (Shen et al., 2018a) and a concreteness
estimation-based baseline (Hessel et al., 2018) both

produce competitive results. It is worth noting that
the PRPN baseline reaches this performance with-
out any information from images. However, the
performance of PRPN is less stable than that of
VG-NSL across random initializations. In contrast
to its state-of-the-art performance on the WSJ full
set (Shen et al., 2019), we observe that ON-LSTM
does not perform well on the MSCOCO caption
data set. However, it remains the best model for ad-
jective phrases, which is consistent with the result
reported by Shen et al. (2019).

In addition to the best overall F1 scores, VG-
NSL+HI achieves competitive scores across most
phrase types (NP, VP and PP). Our models (VG-
NSL and VG-NSL+HI) perform the best on NP and
PP, which are the most common visually grounded
phrases in the MSCOCO data set. In addition, our
models produce much higher self F1 than the base-
lines (Shen et al., 2018a, 2019; Choi et al., 2018),
showing that they reliably produce reasonable con-
stituency parse trees with different initialization.

We also test the effectiveness of using pre-
trained word embeddings. Specifically, for VG-
NSL+HI+FastText, we use a pre-trained FastText



1849

0 20 40 60 80 100

Percentage (%)

30

35

40

45

50

F
1

w
it

h
go

ld
tr

ee
s

PRPN

ON-LSTM

VG-NSL

VG-NSL+HI

(a) The percent data-F1 curves.

0 20 40 60 80 100

Percentage (%)

40

50

60

70

80

90

se
lf

F
1

PRPN

ON-LSTM

VG-NSL

VG-NSL+HI

(b) The percent data-self F1 curves.

Figure 4: F1 score and self F1 score with respect to the
amount of training data. All numbers are averaged over
5 runs with different random initialization.

embedding (300-D, Joulin et al., 2016), concate-
nated with a 212-D trainable embedding, as the
word embedding. Using pre-trained word embed-
dings further improves performance to an average
F1 of 54.4% while keeping a comparable self F1.

4.5 Results: Data Efficiency
We compare the data efficiency for PRPN (the
strongest baseline method), ON-LSTM, VG-NSL,
and VG-NSL+HI. We train the models using
1%, 2%, 5%, 10%, 20%, 50% and 100% of the
MSCOCO training set, and report the overall F1
and self F1 scores on the test set (Figure 4).

Compared to PRPN trained on the full training
set, VG-NSL and VG-NSL+HI reach comparable
performance using only 20% of the data (i.e., 8K
images with 40K captions). VG-NSL tends to
quickly become more stable (in terms of the self
F1 score) as the amount of data increases, while
PRPN and ON-LSTM remain less stable.

4.6 Analysis: Consistency with Linguistic
Concreteness

During training, VG-NSL acquires concreteness
estimates for constituents via Equation 1. Here, we
evaluate the consistency between word-level con-
creteness estimates induced by VG-NSL and those
produced by other methods (Turney et al., 2011;
Brysbaert et al., 2014; Hessel et al., 2018). Specifi-
cally, we measure the correlation between the con-

Model/method VG-NSL (+HI)

Turney et al. (2011) 0.74 0.72
Brysbaert et al. (2014) 0.71 0.71
Hessel et al. (2018) 0.84 0.85

Table 2: Agreement between our concreteness esti-
mates and existing models or labels, evaluated via the
Pearson correlation coefficient computed over the most
frequent 100 words in the MSCOCO test set, averaged
over 5 runs with different random initialization.

Model Criterion Avg. F1 Self F1
VG-NSL Self F1 50.4 ¬±0.3 87.1
VG-NSL R@1 47.7 ¬±0.6 83.4

VG-NSL+HI Self F1 53.3 ¬±0.2 90.2
VG-NSL+HI R@1 53.1 ¬±0.2 88.7

Table 3: Average F1 scores and Self F1 scores of VG-
NSL and VG-NSL+HI with different model selection
methods. R@1 denotes using recall at 1 (Kiros et al.,
2014) as the model selection criterion. All hyperparam-
eters are tuned with respect to self-agreement F1 score.
The numbers are comparable to those in Table 1.

creteness estimated by VG-NSL on MSCOCO test
set and existing linguistic concreteness definitions
(Table 2). For any word, of which the representa-
tion is z, we estimate its concreteness by taking
the average of concrete(z,v(i)), across all associ-
ated images v(i). The high correlation between
VG-NSL and the concreteness scores produced by
Turney et al. (2011) and Brysbaert et al. (2014)
supports the argument that the linguistic concept
of concreteness can be acquired in an unsupervised
way. Our model also achieves a high correlation
with Hessel et al. (2018), which also estimates word
concreteness based on visual-domain information.

4.7 Analysis: Self-Agreement F1 Score as the
Criterion for Model Selection

We introduce a novel hyperparameter tuning
and model selection method based on the self-
agreement F1 score.

Let M(i,j)H denote the j-th checkpoint of the i-
th model trained with hyperparameters H, where
M(i1,¬∑)H andM

(i2,¬∑)
H differ in their random initial-

ization. The hyperparametersH are tuned to maxi-
mize: ‚àë

1‚â§i<k‚â§N
max
|ji‚àíjk|<Œ¥

F1
(
M(i,ji)H ,M

(k,jk)
H

)
,

where F1(¬∑, ¬∑) denotes the F1 score between the
trees generated by two models, N the number of



1850

Model EN DE FR

PRPN 30.8 ¬±17.9 31.5 ¬±8.9 27.5 ¬±7.0
ON-LSTM 38.7 ¬±12.7 34.9 ¬±12.3 27.7 ¬±5.6
VG-NSL 33.5 ¬±0.2 36.3 ¬±0.2 34.3 ¬±0.6
VG-NSL+HI 38.7 ¬±0.2 38.3 ¬±0.2 38.1 ¬±0.6

Table 4: F1 scores on the Multi30K test split (Young
et al., 2014; Elliott et al., 2016, 2017), averaged over 5
runs with different random initialization. ¬± denotes the
standard deviation.

different runs, and Œ¥ the margin to ensure only
nearby checkpoints are compared.6

After finding the best hyperparameters H0, we
train the model for another N times with different
random initialization, and select the best models by

arg max
{j`}N`=1

‚àë
1‚â§i<k‚â§N

F1
(
M(i,ji)H0 ,M

(k,jk)
H0

)
.

We compare the performance of VG-NSL se-
lected by the self F1 score and that selected by re-
call at 1 in image-to-text retrieval (R@1 in Table 3;
Kiros et al., 2014). As a model selection criterion,
self F1 consistently outperforms R@1 (avg. F1:
50.4 vs. 47.7 and 53.3 vs. 53.1 for VG-NSL and
VG-NSL+HI, respectively). Meanwhile, it is worth
noting that even if we select VG-NSL by R@1, it
shows better stability compared with PRPN and
ON-LSTM (Table 1), in terms of the score variance
across different random initialization and self F1.
Specifically, the variance of avg. F1 is always less
than 0.6 while the self F1 is greater than 80.

Note that the PRPN and ON-LSTM models are
not tuned using self F1, since these models are usu-
ally trained for hundreds or thousands of epochs
and thus it is computationally expensive to evalu-
ate self F1. We leave the efficient tuning of these
baselines by self F1 as a future work.

4.8 Extension to Multiple Languages
We extend our experiments to the Multi30K data
set, which is built on the Flickr30K data set (Young
et al., 2014) and consists of English, German (El-
liott et al., 2016), and French (Elliott et al., 2017)
captions. For Multi30K, there are 29,000 images in
the training set, 1,014 in the development set and
1,000 in the test set. Each image is associated with
one caption in each language.

We compare our models to PRPN and ON-
LSTM in terms of overall F1 score (Table 4). VG-
NSL with the head-initial inductive bias consis-

6 In all of our experiments, N = 5, Œ¥ = 2.

tently performs the best across the three languages,
all of which are highly head-initial (Baker, 2001).
Note that the F1 scores here are not comparable to
those in Table 1, since Multi30K (English) has 13x
fewer captions than MSCOCO.

5 Discussion

We have proposed a simple but effective model,
the Visually Grounded Neural Syntax Learner, for
visually grounded language structure acquisition.
VG-NSL jointly learns parse trees and visually
grounded textual representations. In our exper-
iments, we find that this approach to grounded
language learning produces parsing models that
are both accurate and stable, and that the learning
is much more data-efficient than a state-of-the-art
text-only approach. Along the way, the model ac-
quires estimates of word concreteness.

The results suggest multiple future research di-
rections. First, VG-NSL matches text embeddings
directly with embeddings of entire images. Its per-
formance may be boosted by considering struc-
tured representations of both images (e.g., Lu et al.,
2016; Wu et al., 2019) and texts (Steedman, 2000).
Second, thus far we have used a shared representa-
tion for both syntax and semantics, but it may be
useful to disentangle their representations (Steed-
man, 2000). Third, our best model is based on
the head-initial inductive bias. Automatically ac-
quiring such inductive biases from data remains
challenging (Kemp et al., 2006; Gauthier et al.,
2018). Finally, it may be possible to extend our ap-
proach to other linguistic tasks such as dependency
parsing (Christie et al., 2016b), coreference resolu-
tion (Kottur et al., 2018), and learning pragmatics
beyond semantics (Andreas and Klein, 2016).

There are also limitations to the idea of grounded
language acquisition. In particular, the current ap-
proach has thus far been applied to understanding
grounded texts in a single domain (static visual
scenes for VG-NSL). Its applicability could be ex-
tended by learning shared representations across
multiple modalities (Castrejon et al., 2016) or in-
tegrating with pure text-domain models (such as
PRPN, Shen et al., 2018a).

Acknowledgement

We thank Allyson Ettinger for helpful suggestions
on this work, and the anonymous reviewers for
their valuable feedback.



1851

References

Jacob Andreas and Dan Klein. 2016. Reasoning about
pragmatics with neural listeners and speakers. In
Proc. of EMNLP.

Mark C. Baker. 2001. The Atoms of Language: The
Mind‚Äôs Hidden Rules of Grammar. Basic books.

Sai Abishek Bhaskar, Maximilian KoÃàper,
Sabine Schulte Im Walde, and Diego Frassinelli.
2017. Exploring multi-modal text+image models
to distinguish between abstract and concrete nouns.
In Proc. of the IWCS workshop on Foundations of
Situated and Multimodal Communication.

Ann Bies, Mark Ferguson, Karen Katz, Robert Mac-
Intyre, Victoria Tredinnick, Grace Kim, Mary Ann
Marcinkiewicz, and Britta Schasberger. 1995.
Bracketing guidelines for treebank II style Penn tree-
bank project. University of Pennsylvania, 97.

Rens Bod. 2006a. An all-subtrees approach to unsuper-
vised parsing. In Proc. of COLING-ACL.

Rens Bod. 2006b. Unsupervised parsing with U-DOP.
In Proc. of CoNLL.

Marc Brysbaert, Amy Beth Warriner, and Victor Ku-
perman. 2014. Concreteness ratings for 40 thousand
generally known English word lemmas. Behav. Res.
Methods, 46(3):904‚Äì911.

Lluis Castrejon, Yusuf Aytar, Carl Vondrick, Hamed
Pirsiavash, and Antonio Torralba. 2016. Learning
aligned cross-modal representations from weakly
aligned data. In Proc. of CVPR.

Jihun Choi, Kang Min Yoo, and Sang-goo Lee. 2018.
Learning to compose task-specific tree structures. In
Proc. of AAAI.

Gordon Christie, Ankit Laddha, Aishwarya Agrawal,
Stanislaw Antol, Yash Goyal, Kevin Kochersberger,
and Dhruv Batra. 2016a. Resolving language and
vision ambiguities together: Joint segmentation
& prepositional attachment resolution in captioned
scenes. In Proc. of EMNLP.

Gordon Christie, Ankit Laddha, Aishwarya Agrawal,
Stanislaw Antol, Yash Goyal, Kevin Kochersberger,
and Dhruv Batra. 2016b. Resolving language
and vision ambiguities together: Joint segmentation
& prepositional attachment resolution in captioned
scenes. In Proc. of EMNLP.

Kenneth Ward Church and Patrick Hanks. 1990. Word
association norms, mutual information, and lexicog-
raphy. Comput. Linguist., 16(1):22‚Äì29.

Shay Cohen and Noah A. Smith. 2009. Shared logistic
normal distributions for soft parameter tying in un-
supervised grammar induction. In Proc. of NAACL-
HLT.

Shay B. Cohen, Dipanjan Das, and Noah A. Smith.
2011. Unsupervised structure prediction with non-
parallel multilingual guidance. In Proc. of EMNLP.

Max Coltheart. 1981. The MRC psycholinguistic
database. Q. J. Exp. Psychol., 33(4):497‚Äì505.

Andrew Drozdov, Pat Verga, Mohit Yadav, Mohit Iyyer,
and Andrew McCallum. 2019. Unsupervised latent
tree induction with deep inside-outside recursive au-
toencoders. In Proc. of NAACL-HLT.

Desmond Elliott, Stella Frank, Loƒ±Ãàc Barrault, Fethi
Bougares, and Lucia Specia. 2017. Findings of the
second shared task on multimodal machine transla-
tion and multilingual image description. In Proc. of
WMT.

Desmond Elliott, Stella Frank, Khalil Sima‚Äôan, and Lu-
cia Specia. 2016. Multi30K: Multilingual English-
German image descriptions. In Proc. of the 5th
Workshop on Vision and Language.

Fartash Faghri, David J. Fleet, Jamie Ryan Kiros, and
Sanja Fidler. 2018. VSE++: Improving visual-
semantic embeddings with hard negatives. In Proc.
of BMVC.

Kuzman Ganchev, Jennifer Gillenwater, and Ben
Taskar. 2009. Dependency grammar induction via
bitext projection constraints. In Proc. of ACL-
IJCNLP.

Jon Gauthier, Roger Levy, and Joshua B. Tenen-
baum. 2018. Word learning and the acquisition
of syntactic‚Äìsemantic overhypotheses. In Proc. of
CogSci.

Yoav Goldberg and Michael Elhadad. 2010. An effi-
cient algorithm for easy-first non-directional depen-
dency parsing. In Proc. of NAACL-HLT.

Wenjuan Han, Yong Jiang, and Kewei Tu. 2017. De-
pendency grammar induction with neural lexicaliza-
tion and big training data. In Proc. of EMNLP.

Serhii Havrylov, GermaÃÅn Kruszewski, and Armand
Joulin. 2019. Cooperative learning of disjoint syn-
tax and semantics. In Proc. of NAACL-HLT.

Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian
Sun. 2016. Deep residual learning for image recog-
nition. In Proc. of CVPR.

Jack Hessel, David Mimno, and Lillian Lee. 2018.
Quantifying the visual concreteness of words and
topics in multimodal datasets. In Proc. of NAACL-
HLT.

Felix Hill, Douwe Kiela, and Anna Korhonen. 2013.
Concreteness and corpora: A theoretical and practi-
cal study. In Proc. of CMCL.

Felix Hill and Anna Korhonen. 2014a. Concreteness
and subjectivity as dimensions of lexical meaning.
In Proc. of ACL.

https://aclweb.org/anthology/D16-1125
https://aclweb.org/anthology/D16-1125
https://www.aclweb.org/anthology/W/W17/W17-7101.pdf
https://www.aclweb.org/anthology/W/W17/W17-7101.pdf
http://www.aclweb.org/anthology/P06-1109
http://www.aclweb.org/anthology/P06-1109
http://aclweb.org/anthology/W06-2912
https://link.springer.com/article/10.3758/s13428-013-0403-5
https://link.springer.com/article/10.3758/s13428-013-0403-5
https://www.cv-foundation.org/openaccess/content_cvpr_2016/papers/Castrejon_Learning_Aligned_Cross-Modal_CVPR_2016_paper.pdf
https://www.cv-foundation.org/openaccess/content_cvpr_2016/papers/Castrejon_Learning_Aligned_Cross-Modal_CVPR_2016_paper.pdf
https://www.cv-foundation.org/openaccess/content_cvpr_2016/papers/Castrejon_Learning_Aligned_Cross-Modal_CVPR_2016_paper.pdf
https://www.aaai.org/ocs/index.php/AAAI/AAAI18/paper/view/16682/16055
https://aclweb.org/anthology/D16-1156
https://aclweb.org/anthology/D16-1156
https://aclweb.org/anthology/D16-1156
https://aclweb.org/anthology/D16-1156
https://aclweb.org/anthology/D16-1156
https://aclweb.org/anthology/D16-1156
https://aclweb.org/anthology/D16-1156
https://aclweb.org/anthology/D16-1156
http://www.aclweb.org/anthology/J90-1003.pdf
http://www.aclweb.org/anthology/J90-1003.pdf
http://www.aclweb.org/anthology/J90-1003.pdf
http://www.aclweb.org/anthology/N/N09/N09-1009
http://www.aclweb.org/anthology/N/N09/N09-1009
http://www.aclweb.org/anthology/N/N09/N09-1009
http://www.aclweb.org/anthology/D11-1005
http://www.aclweb.org/anthology/D11-1005
https://journals.sagepub.com/doi/pdf/10.1080/14640748108400805
https://journals.sagepub.com/doi/pdf/10.1080/14640748108400805
https://arxiv.org/pdf/1904.02142.pdf
https://arxiv.org/pdf/1904.02142.pdf
https://arxiv.org/pdf/1904.02142.pdf
http://www.aclweb.org/anthology/W17-4718
http://www.aclweb.org/anthology/W17-4718
http://www.aclweb.org/anthology/W17-4718
http://aclweb.org/anthology/W16-3210
http://aclweb.org/anthology/W16-3210
http://bmvc2018.org/contents/papers/0344.pdf
http://bmvc2018.org/contents/papers/0344.pdf
http://www.aclweb.org/anthology/P/P09/P09-1042
http://www.aclweb.org/anthology/P/P09/P09-1042
https://mindmodeling.org/cogsci2018/papers/0327/0327.pdf
https://mindmodeling.org/cogsci2018/papers/0327/0327.pdf
http://delivery.acm.org/10.1145/1860000/1858114/p742-goldberg.pdf
http://delivery.acm.org/10.1145/1860000/1858114/p742-goldberg.pdf
http://delivery.acm.org/10.1145/1860000/1858114/p742-goldberg.pdf
https://www.aclweb.org/anthology/D17-1176
https://www.aclweb.org/anthology/D17-1176
https://www.aclweb.org/anthology/D17-1176
https://arxiv.org/pdf/1902.09393.pdf
https://arxiv.org/pdf/1902.09393.pdf
http://openaccess.thecvf.com/content_cvpr_2016/papers/He_Deep_Residual_Learning_CVPR_2016_paper.pdf
http://openaccess.thecvf.com/content_cvpr_2016/papers/He_Deep_Residual_Learning_CVPR_2016_paper.pdf
http://aclweb.org/anthology/N18-1199
http://aclweb.org/anthology/N18-1199
http://www.aclweb.org/anthology/W/W13/W13-2609.pdf
http://www.aclweb.org/anthology/W/W13/W13-2609.pdf
http://www.aclweb.org/anthology/P14-2118
http://www.aclweb.org/anthology/P14-2118


1852

Felix Hill and Anna Korhonen. 2014b. Learning ab-
stract concept embeddings from multi-modal data:
Since you probably cant see what i mean. In Proc.
of EMNLP.

Felix Hill, Roi Reichart, and Anna Korhonen. 2014.
Multi-modal models for concrete and abstract con-
cept meaning. TACL, 2(1):285‚Äì296.

Sepp Hochreiter and JuÃàrgen Schmidhuber. 1997. Long
short-term memory. Neural Comput., 9(8):1735‚Äì
1780.

Eric Jang, Shixiang Gu, and Ben Poole. 2017. Categor-
ical reparameterization with Gumbel-softmax. In
Proc. of ICLR.

Fred Jelinek, Robert L Mercer, Lalit R Bahl, and
James K Baker. 1977. Perplexity‚Äîa measure of the
difficulty of speech recognition tasks. The Journal
of the Acoustical Society of America, 62(S1):S63‚Äì
S63.

Armand Joulin, Edouard Grave, Piotr Bojanowski,
Matthijs Douze, HeÃÅrve JeÃÅgou, and Tomas Mikolov.
2016. FastText.zip: Compressing text classification
models. arXiv preprint arXiv:1612.03651.

Andrej Karpathy and Li Fei-Fei. 2015. Deep visual-
semantic alignments for generating image descrip-
tions. In Proc. of CVPR.

Charles K. Kemp, Amy Perfors, and Joshua B. Tenen-
baum. 2006. Learning overhypotheses. In Proc. of
CogSci.

Douwe Kiela, Felix Hill, Anna Korhonen, and Stephen
Clark. 2014. Improving multi-modal representa-
tions using image dispersion: Why less is sometimes
more. In Proc. of ACL.

Yoon Kim, Alexander M Rush, Lei Yu, Adhiguna Kun-
coro, Chris Dyer, and GaÃÅbor Melis. 2019. Unsuper-
vised recurrent neural network grammars. In Proc.
of NAACL-HLT.

Diederik P. Kingma and Jimmy Ba. 2015. Adam:
A method for stochastic optimization. In Proc. of
ICLR.

Ryan Kiros, Ruslan Salakhutdinov, and Richard S.
Zemel. 2014. Unifying visual-semantic embed-
dings with multimodal neural language models.
arXiv:1411.2539.

Nikita Kitaev and Dan Klein. 2018. Constituency pars-
ing with a self-attentive encoder. In Proc. of ACL.

Dan Klein and Christopher D. Manning. 2002. A
generative constituent-context model for improved
grammar induction. In Proc. of ACL.

Dan Klein and Christopher D. Manning. 2004. Corpus-
based induction of syntactic structure: Models of de-
pendency and constituency. In Proc. of ACL.

Dan Klein and Christopher D. Manning. 2005. Nat-
ural language grammar induction with a genera-
tive constituent-context model. Pattern Recognition,
38(9):1407‚Äì1419.

Satwik Kottur, JoseÃÅ MF Moura, Devi Parikh, Dhruv Ba-
tra, and Marcus Rohrbach. 2018. Visual coreference
resolution in visual dialog using neural module net-
works. In Proc. of ECCV.

Tsung-Yi Lin, Michael Maire, Serge Belongie, James
Hays, Pietro Perona, Deva Ramanan, Piotr DollaÃÅr,
and C. Lawrence Zitnick. 2014. Microsoft COCO:
Common objects in context. In Proc. of ECCV.

Cewu Lu, Ranjay Krishna, Michael Bernstein, and
Li Fei-Fei. 2016. Visual relationship detection with
language priors. In Proc. of ECCV.

Lin Ma, Zhengdong Lu, Lifeng Shang, and Hang Li.
2015. Multimodal convolutional neural networks
for matching image and sentence. In Proc. of CVPR.

Jean Maillard and Stephen Clark. 2018. Latent tree
learning with differentiable parsers: Shift-reduce
rarsing and chart parsing. In Proc. of the Workshop
on the Relevance of Linguistic Structure in Neural
Architectures for NLP.

Mateusz Malinowski, Marcus Rohrbach, and Mario
Fritz. 2015. Ask your neurons: A neural-based ap-
proach to answering questions about images. In
Proc. of ICCV.

Jiayuan Mao, Chuang Gan, Pushmeet Kohli, Joshua B
Tenenbaum, and Jiajun Wu. 2019. The neuro-
symbolic concept learner: Interpreting scenes,
words, and sentences from natural supervision. In
Proc. of ICLR.

Mitchell Marcus, Beatrice Santorini, and Mary Ann
Marcinkiewicz. 1993. Building a large annotated
corpus of English: The Penn treebank. Comput. Lin-
guist., 19(2).

Jiquan Ngiam, Aditya Khosla, Mingyu Kim, Juhan
Nam, Honglak Lee, and Andrew Y. Ng. 2011. Mul-
timodal deep learning. In Proc. of ICML.

Phu Mon Htut, Kyunghyun Cho, and Samuel R. Bow-
man. 2018. Grammar induction with neural lan-
guage models: An unsual replication. In Proc. of
EMNLP.

Steven Pinker. 1984. Language Learnability and Lan-
guage Development. Cambridge University Press.

Elias Ponvert, Jason Baldridge, and Katrin Erk. 2011.
Simple unsupervised grammar induction from raw
rext with cascaded finite state models. In Proc. of
ACL.

Olga Russakovsky, Jia Deng, Hao Su, Jonathan Krause,
Sanjeev Satheesh, Sean Ma, Zhiheng Huang, An-
drej Karpathy, Aditya Khosla, Michael Bernstein,
Alexander C. Berg, and Li Fei-Fei. 2015. ImageNet
large scale visual recognition challenge. IJCV,
115(3):211‚Äì252.

http://www.aclweb.org/anthology/D14-1032
http://www.aclweb.org/anthology/D14-1032
http://www.aclweb.org/anthology/D14-1032
http://www.aclweb.org/anthology/Q14-1023
http://www.aclweb.org/anthology/Q14-1023
https://www.mitpressjournals.org/doi/pdfplus/10.1162/neco.1997.9.8.1735
https://www.mitpressjournals.org/doi/pdfplus/10.1162/neco.1997.9.8.1735
https://openreview.net/pdf?id=rkE3y85ee
https://openreview.net/pdf?id=rkE3y85ee
https://arxiv.org/pdf/1612.03651.pdf
https://arxiv.org/pdf/1612.03651.pdf
https://www.cv-foundation.org/openaccess/content_cvpr_2015/papers/Karpathy_Deep_Visual-Semantic_Alignments_2015_CVPR_paper.pdf
https://www.cv-foundation.org/openaccess/content_cvpr_2015/papers/Karpathy_Deep_Visual-Semantic_Alignments_2015_CVPR_paper.pdf
https://www.cv-foundation.org/openaccess/content_cvpr_2015/papers/Karpathy_Deep_Visual-Semantic_Alignments_2015_CVPR_paper.pdf
http://csjarchive.cogsci.rpi.edu/Proceedings/2006/docs/p417.pdf
http://www.aclweb.org/anthology/P14-2135
http://www.aclweb.org/anthology/P14-2135
http://www.aclweb.org/anthology/P14-2135
https://arxiv.org/pdf/1904.03746.pdf
https://arxiv.org/pdf/1904.03746.pdf
https://arxiv.org/pdf/1412.6980.pdf
https://arxiv.org/pdf/1412.6980.pdf
https://arxiv.org/pdf/1411.2539.pdf
https://arxiv.org/pdf/1411.2539.pdf
http://aclweb.org/anthology/P18-1249
http://aclweb.org/anthology/P18-1249
http://www.aclweb.org/anthology/P02-1017
http://www.aclweb.org/anthology/P02-1017
http://www.aclweb.org/anthology/P02-1017
http://www.aclweb.org/anthology/P04-1061.pdf
http://www.aclweb.org/anthology/P04-1061.pdf
http://www.aclweb.org/anthology/P04-1061.pdf
https://www.sciencedirect.com/science/article/abs/pii/S0031320305000270
https://www.sciencedirect.com/science/article/abs/pii/S0031320305000270
https://www.sciencedirect.com/science/article/abs/pii/S0031320305000270
http://openaccess.thecvf.com/content_ECCV_2018/papers/Satwik_Kottur_Visual_Coreference_Resolution_ECCV_2018_paper.pdf
http://openaccess.thecvf.com/content_ECCV_2018/papers/Satwik_Kottur_Visual_Coreference_Resolution_ECCV_2018_paper.pdf
http://openaccess.thecvf.com/content_ECCV_2018/papers/Satwik_Kottur_Visual_Coreference_Resolution_ECCV_2018_paper.pdf
https://link.springer.com/chapter/10.1007/978-3-319-10602-1_48
https://link.springer.com/chapter/10.1007/978-3-319-10602-1_48
https://link.springer.com/chapter/10.1007/978-3-319-46448-0_51
https://link.springer.com/chapter/10.1007/978-3-319-46448-0_51
https://www.cv-foundation.org/openaccess/content_iccv_2015/papers/Ma_Multimodal_Convolutional_Neural_ICCV_2015_paper.pdf
https://www.cv-foundation.org/openaccess/content_iccv_2015/papers/Ma_Multimodal_Convolutional_Neural_ICCV_2015_paper.pdf
http://aclweb.org/anthology/W18-2903
http://aclweb.org/anthology/W18-2903
http://aclweb.org/anthology/W18-2903
https://www.cv-foundation.org/openaccess/content_iccv_2015/papers/Malinowski_Ask_Your_Neurons_ICCV_2015_paper.pdf
https://www.cv-foundation.org/openaccess/content_iccv_2015/papers/Malinowski_Ask_Your_Neurons_ICCV_2015_paper.pdf
https://openreview.net/pdf?id=rJgMlhRctm
https://openreview.net/pdf?id=rJgMlhRctm
https://openreview.net/pdf?id=rJgMlhRctm
http://www.aclweb.org/anthology/J93-2004.pdf
http://www.aclweb.org/anthology/J93-2004.pdf
http://www.icml-2011.org/papers/399_icmlpaper.pdf
http://www.icml-2011.org/papers/399_icmlpaper.pdf
http://aclweb.org/anthology/D18-1544
http://aclweb.org/anthology/D18-1544
https://aclweb.org/anthology/P11-1108
https://aclweb.org/anthology/P11-1108
https://link.springer.com/content/pdf/10.1007%2Fs11263-015-0816-y.pdf
https://link.springer.com/content/pdf/10.1007%2Fs11263-015-0816-y.pdf


1853

Satoshi Sekine and Michael Collins. 1997. Evalb
bracket scoring program.

Yikang Shen, Zhouhan Lin, Chin-Wei Huang, and
Aaron Courville. 2018a. Neural language modeling
by jointly learning syntax and lexicon. In Proc. of
ICLR.

Yikang Shen, Zhouhan Lin, Athul Paul Jacob, Alessan-
dro Sordoni, Aaron Courville, and Yoshua Bengio.
2018b. Straight to the tree: Constituency parsing
with neural syntactic distance. In Proc. of ACL.

Yikang Shen, Shawn Tan, Alessandro Sordoni, and
Aaron Courville. 2019. Ordered neurons: Integrat-
ing tree structures into recurrent neural networks. In
Proc. of ICLR.

Haoyue Shi, Jiayuan Mao, Tete Xiao, Yuning Jiang,
and Jian Sun. 2018a. Learning visually-grounded
semantics from contrastive adversarial samples. In
Proc. of COLING.

Haoyue Shi, Hao Zhou, Jiaze Chen, and Lei Li. 2018b.
On tree-based neural sentence modeling. In Proc. of
EMNLP.

Jiaxin Shi, Lei Hou, Juanzi Li, Zhiyuan Liu, and Han-
wang Zhang. 2019. Learning to embed sentences
using attentive recursive trees. In Proc. of AAAI.

N. Siddharth, Andrei Barbu, and Jeffrey Mark Siskind.
2014. Seeing what you‚Äôre told: Sentence-guided ac-
tivity recognition in video. In Proc. of CVPR.

Carina Silberer, Vittorio Ferrari, and Mirella Lapata.
2017. Visually grounded meaning representations.
TPAMI, 39(11):2284‚Äì2297.

Carina Silberer and Mirella Lapata. 2012. Grounded
models of semantic representation. In Proc. of
EMNLP-CoNLL.

Noah A. Smith and Jason Eisner. 2006. Annealing
structural bias in multilingual weighted grammar in-
duction. In Proc. of COLING-ACL.

Benjamin Snyder, Tahira Naseem, and Regina Barzi-
lay. 2009. Unsupervised multilingual grammar in-
duction. In Proc. of ACL-IJCNLP.

Valentin I. Spitkovsky, Hiyan Alshawi, Angel X.
Chang, and Daniel Jurafsky. 2011. Unsupervised de-
pendency parsing without gold part-of-speech tags.
In Proc. of EMNLP.

Valentin I. Spitkovsky, Hiyan Alshawi, and Daniel Ju-
rafsky. 2010. From baby steps to leapfrog: How
‚Äúless is more‚Äù in unsupervised dependency parsing.
In Proc. of NAACL-HLT.

Mark Steedman. 2000. The Syntactic Process. MIT
press Cambridge, MA.

Peter D. Turney, Yair Neuman, Dan Assaf, and Yohai
Cohen. 2011. Literal and metaphorical sense iden-
tification through concrete and abstract context. In
Proc. of EMNLP.

Adina Williams, Andrew Drozdov, and Samuel R.
Bowman. 2018. Do latent tree learning models
identify meaningful structure in sentences? TACL,
6:253‚Äì267.

Ronald J. Williams. 1992. Simple statistical gradient-
following algorithms for connectionist reinforce-
ment learning. Mach. Learn., 8(3-4):229‚Äì256.

Hao Wu, Jiayuan Mao, Yufeng Zhang, Weiwei Sun,
Yuning Jiang, Lei Li, and Wei-Ying Ma. 2019. Uni-
fied Visual-Semantic Embeddings: Bridging Vision
and Language with Structured Meaning Representa-
tions. In Proc. of CVPR.

Dani Yogatama, Phil Blunsom, Chris Dyer, Edward
Grefenstette, and Wang Ling. 2017. Learning to
compose words into sentences with reinforcement
learning. In Proc. of ICLR.

Peter Young, Alice Lai, Micah Hodosh, and Julia Hock-
enmaier. 2014. From image descriptions to visual
denotations: New similarity metrics for semantic in-
ference over event descriptions. TACL, 2:67‚Äì78.

Haonan Yu, N. Siddharth, Andrei Barbu, and Jef-
frey Mark Siskind. 2015. A compositional frame-
work for grounding language inference, generation,
and acquisition in video. JAIR, 52:601‚Äì713.

Supplementary Material

The supplementary material is organized as fol-
lows. First, in Section A, we summarize and com-
pare existing models for constituency parsing with-
out explicit syntactic supervision. Next, in Sec-
tion B, we present more implementation details of
VG-NSL. Third, in Section C, we present the im-
plementation details for all of our baseline models.
Fourth, in Section D, we present the evaluation de-
tails of Benepar (Kitaev and Klein, 2018) on the
MSCOCO data set. Fifth, in Section E, we qualita-
tively and quantitatively compare the concreteness
scores estimated or labeled by different methods.
Finally, in Section F, we show sample trees gener-
ated by VG-NSL on the MSCOCO test set.

A Overview of Models for Constituency
Parsing without Explicit Syntactic
Supervision

Shown in Table 5, we compare existing models
for constituency parsing without explicit syntactic
supervision, with respect to their learning objective,
dependence on extra labels or extra corpus, and
other features. The table also includes the analysis
of previous works on parsing sentences based on
gold part-of-speech tags.

https://nlp.cs.nyu.edu/evalb/
https://nlp.cs.nyu.edu/evalb/
https://openreview.net/forum?id=rkgOLb-0W
https://openreview.net/forum?id=rkgOLb-0W
http://aclweb.org/anthology/P18-1108
http://aclweb.org/anthology/P18-1108
https://openreview.net/pdf?id=B1l6qiR5F7
https://openreview.net/pdf?id=B1l6qiR5F7
http://aclweb.org/anthology/C18-1315
http://aclweb.org/anthology/C18-1315
http://aclweb.org/anthology/D18-1492
https://arxiv.org/pdf/1811.02338.pdf
https://arxiv.org/pdf/1811.02338.pdf
https://www.cv-foundation.org/openaccess/content_cvpr_2014/papers/Siddharth_Seeing_What_Youre_2014_CVPR_paper.pdf
https://www.cv-foundation.org/openaccess/content_cvpr_2014/papers/Siddharth_Seeing_What_Youre_2014_CVPR_paper.pdf
https://ieeexplore.ieee.org/iel7/34/8055017/07765034.pdf
http://www.aclweb.org/anthology/D12-1130
http://www.aclweb.org/anthology/D12-1130
http://www.aclweb.org/anthology/P06-1072
http://www.aclweb.org/anthology/P06-1072
http://www.aclweb.org/anthology/P06-1072
http://www.aclweb.org/anthology/P/P09/P09-1009
http://www.aclweb.org/anthology/P/P09/P09-1009
http://www.aclweb.org/anthology/D11-1118
http://www.aclweb.org/anthology/D11-1118
http://www.aclweb.org/anthology/N10-1116
http://www.aclweb.org/anthology/N10-1116
http://www.aclweb.org/anthology/D11-1063
http://www.aclweb.org/anthology/D11-1063
http://aclweb.org/anthology/Q18-1019
http://aclweb.org/anthology/Q18-1019
https://link.springer.com/content/pdf/10.1007/BF00992696.pdf
https://link.springer.com/content/pdf/10.1007/BF00992696.pdf
https://link.springer.com/content/pdf/10.1007/BF00992696.pdf
https://arxiv.org/abs/1904.05521v1
https://arxiv.org/abs/1904.05521v1
https://arxiv.org/abs/1904.05521v1
https://arxiv.org/abs/1904.05521v1
https://openreview.net/pdf?id=Skvgqgqxe
https://openreview.net/pdf?id=Skvgqgqxe
https://openreview.net/pdf?id=Skvgqgqxe
http://www.aclweb.org/anthology/Q14-1006
http://www.aclweb.org/anthology/Q14-1006
http://www.aclweb.org/anthology/Q14-1006
https://www.jair.org/index.php/jair/article/view/10938/26065
https://www.jair.org/index.php/jair/article/view/10938/26065
https://www.jair.org/index.php/jair/article/view/10938/26065


1854

Model Objective Extra Label Multi- Stochastic Extra
modal Corpus

CCM (Klein and Manning, 2002)* MAP POS 7 3 7
DMV-CCM (Klein and Manning, 2005)* MAP POS 7 3 7
U-DOP (Bod, 2006b)* Probability Estimation POS 7 7 7
UML-DOP (Bod, 2006a)* MAP POS 7 3 7

PMI N/A 7 7 7 7
Random N/A 7 7 3 7
Left N/A 7 7 7 7
Right N/A 7 7 7 7
PRPN (Shen et al., 2018a) LM 7 7 3 7
ON-LSTM (Shen et al., 2019) LM 7 7 3 7
Gumbel softmax(Choi et al., 2018) Cross-modal Retrieval 7 3 3 7

VG-NSL (ours) Cross-modal Retrieval 7 3 3 7
VG-NSL+HI (ours) Cross-modal Retrieval 7 3 3 7

Concreteness estimation based models

Turney et al. (2011)* N/A Concreteness
(Partial)

7 7 3

Turney et al. (2011)+HI* N/A Concreteness
(Partial)

7 7 3

Brysbaert et al. (2014)* N/A Concreteness
(Full)

7 7 7

Brysbaert et al. (2014)+HI* N/A Concreteness
(Full)

7 7 7

Hessel et al. (2018) N/A 7 3 7 7
Hessel et al. (2018)+HI N/A 7 3 7 7

Table 5: Comparison of models for constituency parsing without explicit syntactic supervision. * denotes models
requiring extra labels, such as POS tags or manually labeled concreteness scores. All multimodal methods listed
in the table require a pretrained visual feature extractor (i.e., ResNet-101; He et al., 2016). A model is labeled
as stochastic if for fixed training data and hyperparameters the model may produce different results (e.g., due
to different choices of random initialization). To the best of our knowledge, results on concreteness estimation
(Turney et al., 2011; Brysbaert et al., 2014; Hessel et al., 2018) have not been applied to unsupervised parsing so
far.

aaa
!!!

b
bb

"
""

Q
Q

ÔøΩ
ÔøΩ

Z
Z

ÔøΩ
ÔøΩ

@@ÔøΩÔøΩ
A cat

is

on

the

ground

(a) Left-branching tree.

H
HH

ÔøΩ
ÔøΩÔøΩ

A
b
bb

"
""

cat
b
bb

"
""

is
b
bb

"
""

on
Z
Z

ÔøΩ
ÔøΩ

the ground
(b) Right-branching tree.

Figure 5: Examples of some trivial tree structures.

B Implementation Details for VG-NSL

We adopt the code released by Faghri et al. (2018)7

as the visual-semantic embedding module for VG-
NSL. Following them, we fix the margin Œ¥ to 0.2.
We also use the vocabulary provided by Faghri et al.

7https://github.com/fartashf/vsepp

(2018),8 which contains 10,000 frequent words in
the MSCOCO data set. Out-of-vocabulary words
are treated as unseen words. For either VG-NSL or
baselines, we use the same vocabulary if applica-
ble.

8http://www.cs.toronto.edu/Àúfaghri/
vsepp/vocab.tar

https://github.com/fartashf/vsepp
http://www.cs.toronto.edu/~faghri/vsepp/vocab.tar
http://www.cs.toronto.edu/~faghri/vsepp/vocab.tar


1855

Hyperparameter tuning. As stated in main text,
we use the self-agreement F1 score (Williams et al.,
2018) as an unsupervised signal for tuning all
hyperparamters. Besides the learning rate and
other conventional hyperparameters, we also tune
Œª, the hyperparameter for the head-initial bias
model. Œª indicates the weight of penalization for
‚Äúright abstract constituents‚Äù. We choose Œª from
{1, 2, 5, 10, 20, 50, 100} and found that Œª = 20
gives the best self-agreement F1 score.

C Implementation Details for Baselines

Trivial tree structures. We show examples for
left-branching binary trees and right-branching bi-
nary trees in Figure 5. As for binary random trees,
we iteratively combine two randomly selected adja-
cent constituents. This procedure is similar to that
shown in Algorithm 2.

Parsing-Reading-Predict Network (PRPN).
We use the code released by Shen et al. (2018a)
to train PRPN.9 We tune the hyperparameters
with respect to language modeling perplexity
(Jelinek et al., 1977). For a fair comparison, we
fix the hidden dimension of all hidden layers
of PRPN as 512. We use an Adam optimizer
(Kingma and Ba, 2015) to optimize the parameters.
The tuned parameters are number of layers (1,
2, 3) and learning rate (1 √ó 10‚àí3, 5 √ó 10‚àí4,
2√ó 10‚àí4). The models are trained for 100 epochs
on the MSCOCO dataset and 1,000 epochs on the
Multi30K dataset, and are early stopped using the
criterion of language model perplexity.

Ordered Neurons (ON-LSTM). We use the
code release by Shen et al. (2019) to train ON-
LSTM.10 We tune the hyperparameters with respect
to language modeling perplexity (Jelinek et al.,
1977), and use perplexity as an early stopping crite-
rion. For a fair comparison, the hidden dimension
of all hidden layers is set to 512, and the chunk
size is changed to 16 to fit the hidden layer size.
Following the original paper (Shen et al., 2019),
we set the number of layers to be 3, and report
the constituency parse tree with respect to the gate
values output by the second layer of ON-LSTM.
In order to obtain a better perplexity, we explore
both Adam (Kingma and Ba, 2015) and SGD as
the optimizer. We tune the learning rate (1√ó 10‚àí3,

9https://github.com/yikangshen/PRPN
10https://github.com/yikangshen/

Ordered-Neurons

Algorithm 1: Constituency parsing based on
given syntactic distance.
Input: text length m, list of syntactic

distances d = (d1, d2, . . . , dm‚àí1)
Output: Boundaries of constituents

B = {(Li, Ri)}i=1,...,m‚àí1
B = parse(d, 1, m)

Function parse(d, left, right)
if left = right then

return EmptySet
end
p = arg maxj‚àà[left,right-1] dj
boundaries = union(
{(left, right)},
parse (d, left, left + p),
parse (d, left+p+ 1, right)

)
return boundaries

5 √ó 10‚àí4, 2 √ó 10‚àí4 for Adam, and 0.1, 1, 10, 30
for SGD). The models are trained for 100 epochs
on the MSCOCO dataset and 1,000 epochs on the
Multi30K dataset, and are early stopped using the
criterion of language model perplexity.

PMI based constituency parsing. We estimate
the pointwise mutual information (PMI; Church
and Hanks, 1990) between two words using all
captions in MSCOCO training set. We apply nega-
tive PMI as syntactic distance (Shen et al., 2018b)
to generate a binary constituency parse tree recur-
sively. The method of constituency parsing with a
given list of syntactic distances is shown in Algo-
rithm 1.

Gumbel-softmax based latent tree. We inte-
grate Gumbel-softmax latent tree based text en-
coder (Choi et al., 2018)11 to the visual semantic
embedding framework (Faghri et al., 2018), and
use the tree structure produced by it as a baseline.

Concreteness estimation. For the semi-
supervised concreteness estimation, we reproduce
the experiments by Turney et al. (2011), applying
the manually labeled concreteness scores for 4,295
words from the MRC Psycholinguistic Database
Machine Usable Dictionary (Coltheart, 1981) as
supervision,12 and use English Wikipedia pages

11https://github.com/jihunchoi/
unsupervised-treelstm

12http://ota.oucs.ox.ac.uk/headers/1054.
xml

https://github.com/yikangshen/PRPN
https://github.com/yikangshen/Ordered-Neurons
https://github.com/yikangshen/Ordered-Neurons
https://github.com/jihunchoi/unsupervised-treelstm
https://github.com/jihunchoi/unsupervised-treelstm
http://ota.oucs.ox.ac.uk/headers/1054.xml
http://ota.oucs.ox.ac.uk/headers/1054.xml


1856

Turney et al. (2011) Brysbaert et al. (2014) Hessel et al. (2018) VG-NSL+HI

Turney et al. (2011) 1.00 0.84 0.58 0.72
Brysbaert et al. (2014) 0.84 1.00 0.55 0.71
Hessel et al. (2018) 0.58 0.55 1.00 0.85
VG-NSL+HI 0.72 0.71 0.85 1.00

Table 6: Pearson correlation coefficients between existing concreteness estimation methods, including baselines
and VG-NSL+HI. In order to make a fair comparison, the correlation coefficients are evaluated on the 100 most
frequent words on MSCOCO test set.

-1.5

-1

-0.5

0

0.5

1

Turney et al., 2011 Brysbaert et al., 2014 Hessel et al., 2018 VG-NSL+HI (ours)

cat                   on                 ground              while              young               wood                who  wet

Figure 6: Normalized concreteness scores of example words.

to estimate PMI between words.13 The PMI is
then used to compute similarity between seen and
unseen words, which is further used as weights
to estimate concreteness for unseen words. For
the concreteness scores from crowdsourcing,
we use the released data set of Brysbaert et al.
(2014).14 Similarly to VG-NSL, the multimodal
concreteness score (Hessel et al., 2018) is also
estimated on the MSCOCO training set, using an
open-sourced implementation.15

Constituency parsing with concreteness scores.
Denote Œ±(w) as the concreteness score estimated
by a model for the word w. Given a sequence of
concreteness scores of caption tokens denoted by
(Œ±(w1), Œ±(w2), . . . , Œ±(wm)), we aim to produce a
binary constituency parse tree. We first normal-
ize the concreteness scores to the range of [‚àí1, 1],
via:16

Œ±‚Ä≤(wi) =
2
(
Œ±(wi)‚àí maxj Œ±(wj)‚àíminj Œ±(wj)2

)
maxj Œ±(wj)‚àíminj Œ±(wj)

.

We treat unseen words (i.e., out-of-vocabulary
words) in the same way in VG-NSL, by assigning

13https://dumps.wikimedia.org/other/
static_html_dumps/April_2007/en/

14http://crr.ugent.be/archives/1330
15https://github.com/victorssilva/

concreteness
16 For the concreteness scores estimated by Hessel et al.

(2018), we let Œ±(w) = logŒ±(w) before normalizing, as the
original scores are in the range of (0,+‚àû).

the concreteness of ‚àí1 to unseen words, with the
assumption that unseen words are the most abstract
ones.

We compose constituency parse trees using the
normalized concreteness scores by iteratively com-
bining consecutive constituents. At each step, we
select two adjacent constituents (initially, words)
with the highest average concreteness score and
combine them into a larger constituent, of which
the concreteness is the average of its children. We
repeat the above procedure until there is only one
constituent left.

As for the head-initial inductive bias, we weight
the concreteness of the right constituent with a hy-
perparemeter œÑ > 1 when ranking all pairs of con-
secutive constituents during selection. Meanwhile,
the concreteness of the composed constituent re-
mains the average of the two component con-
stituents. In order to keep consistent with VG-NSL,
we set œÑ = 20 in all of our experiments.

The procedure is summarized in Algorithm 2.

D Details of Manual Ground Truth
Evaluation

It is important to confirm that the constituency
parse trees of the MSCOCO captions produced
by Benepar (Kitaev and Klein, 2018) are of high
enough qualities, so that they can serve as reliable
ground truth for further evaluation of other models.
To verify this, we randomly sample 50 captions

https://dumps.wikimedia.org/other/static_html_dumps/April_2007/en/
https://dumps.wikimedia.org/other/static_html_dumps/April_2007/en/
http://crr.ugent.be/archives/1330
https://github.com/victorssilva/concreteness
https://github.com/victorssilva/concreteness


1857

XXXXXX
ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ

PPPP
ÔøΩÔøΩÔøΩÔøΩ

Three white sinks

PPPPP
ÔøΩÔøΩÔøΩÔøΩÔøΩ

in
XXXXX

ÔøΩÔøΩÔøΩÔøΩÔøΩ

Q
Q

ÔøΩ
ÔøΩ
a bathroom

b
bb

"
""

under mirrors
(a) Constituency parse tree labeled by Benepar (Kitaev and Klein, 2018).

hhhhhhhhhh
ÔøΩÔøΩ

((((((((((

PPPP
ÔøΩÔøΩÔøΩÔøΩ

Three white sinks
Q
Q

ÔøΩ
ÔøΩ

in
Q
Q

ÔøΩ
ÔøΩ

a bathroom

b
bb

"
""

under mirrors

(b) Manually labeled constituency parse tree.

Figure 7: A failure example by Benepar, where it fails to parse the noun phrase ‚Äúthree white sinks in a bathroom
under mirrors‚Äù ‚Äì according to human commonsense, it is much more common for sinks, rather than a bathroom,
to be under mirrors. However, most of the constituents (e.g., ‚Äúthree white sinks‚Äù and ‚Äúunder mirrors‚Äù) are still
successfully extracted by Benepar.

Algorithm 2: Constituency parsing based on
concreteness estimation.
Input: list of normalized concreteness scores

a = (a1, a2, . . . , am), hyperparameter
œÑ

Output: Boundaries of constituents
B = {(Li, Ri)}i=1,...,m‚àí1

for j = 1 to m do
leftj = j
rightj = j

end
while len(a) > 1 do

p = arg maxj aj + œÑaj+1
add (leftp, rightp+1) to B
a = a<p + (

ap+ap+1
2 ) + a>p+1

left = left<p + (leftp) + left>p+1
right = right<p + (rightp+1) + right>p+1

end

from the MSCOCO test split, and manually label
the constituency parse trees without reference to
either Benepar or the paired images, following the
principles by Bies et al. (1995) as much as possi-
ble.17 Note that we only label the tree structures

17 The manually labeled constituency parse trees are
publicly available at https://ttic.uchicago.edu/
Àúfreda/vgnsl/manually_labeled_trees.txt

without constituency labels (e.g., NP and PP). Most
failure cases by Benepar are related to human com-
monsense in resolving parsing ambiguities, e.g.,
prepositional phrase attachments (Figure 7).

We compare the manually labeled trees and those
produced by Benepar (Kitaev and Klein, 2018), and
find that the F1 score between them are 95.65.

E Concreteness by Different Models

E.1 Correlation between Different
Concreteness Estimations

We report the correlation of different methods for
concreteness estimation, shown in (Table 6). The
concreteness given by Turney et al. (2011) and
Brysbaert et al. (2014) highly correlate with each
other. The concreteness scores estimated on multi-
modal dataset (Hessel et al., 2018) also moder-
ately correlates with the aforementioned two meth-
ods (Turney et al., 2011; Brysbaert et al., 2014).
Compared to the concreteness estimated by Hessel
et al. (2018), the one estimated by our model has a
stronger correlation with the scores estimated from
linguistic data (Turney et al., 2011; Brysbaert et al.,
2014).

https://ttic.uchicago.edu/~freda/vgnsl/manually_labeled_trees.txt
https://ttic.uchicago.edu/~freda/vgnsl/manually_labeled_trees.txt


1858

E.2 Concreteness Scores of Sample Words by
Different Methods

We present the concreteness scores estimated or
labeled by different methods in Figure 6, which
qualitatively shows that different methods correlate
with others well.

F Sample Trees Generated by VG-NSL

Figure 8 shows the sample trees generated by
VG-NSL with the head-initial inductive bias (VG-
NSL+HI). All captions are chosen from the
MSCOCO test set.



1859

XXXXX
ÔøΩÔøΩÔøΩÔøΩÔøΩ

cc##
a kitchen

XXXXX
ÔøΩÔøΩÔøΩÔøΩÔøΩ

with
XXXXX
ÔøΩÔøΩÔøΩÔøΩÔøΩ

b
b

"
"

two windows

H
HH

ÔøΩ
ÔøΩÔøΩ

and
H
HH

ÔøΩ
ÔøΩÔøΩ

two
Q
Q

ÔøΩ
ÔøΩ

metal sinks
(a) a kitchen with two windows and two metal sinks

hhhhhhh
(((((((

HHH
ÔøΩÔøΩÔøΩ

a
HHH

ÔøΩÔøΩÔøΩ
blue

Q
Q

ÔøΩ
ÔøΩ

small plane

aaa
!!!

standing
b
bb

"
""

at
Q
Q

ÔøΩ
ÔøΩ

the airstrip
(b) a blue small plane standing at the airstrip

PPPP
ÔøΩÔøΩÔøΩÔøΩ

HHH
ÔøΩÔøΩÔøΩ

ZZÔøΩÔøΩ
young boy

sitting

HHH
ÔøΩÔøΩÔøΩ

on
b
bb

"
""

top
Q
Q

ÔøΩ
ÔøΩ

of
QQÔøΩÔøΩ

a briefcase
(c) young boy sitting on top of a briefcase

XXXXXX
ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ

PPPP
ÔøΩÔøΩÔøΩÔøΩ

b
bb

"
""

a
ZZÔøΩÔøΩ

small dog

eating

aaa
!!!

@@ÔøΩÔøΩ
a plate

Z
Z

ÔøΩ
ÔøΩ

of broccoli

(d) a small dog eating a plate of broccoli



1860

hhhhhhhh
((((((((

hhhhhhhhhh

((((((((((

PPPPP
ÔøΩÔøΩÔøΩÔøΩÔøΩ

ZZÔøΩÔøΩ
a building

HHH
ÔøΩÔøΩÔøΩ

with
HHH

ÔøΩÔøΩÔøΩ
a

HHH
ÔøΩÔøΩÔøΩ

bunch
cc##

of people

H
HH

ÔøΩ
ÔøΩÔøΩ

standing around

it

(e) a building with a bunch of people standing around it

XXXXX
ÔøΩÔøΩÔøΩÔøΩÔøΩ

aaa
!!!

ll,,
a horse

walking

aaa
!!!

by
aaa

!!!

@@ÔøΩÔøΩ
a tree

b
b

"
"

in
ZZÔøΩÔøΩ

the woods
(f) a horse walking by a tree in the woods

``````ÃÄ
       

XXXXX
ÔøΩÔøΩÔøΩÔøΩÔøΩ

aaa
!!!

the
b
b

"
"

golden waffle

b
b

"
"

has
cc##

a banana

\\ÔøΩÔøΩ
in it

(g) the golden waffle has a banana in it .

hhhhhhh
(((((((

aaaa
!!!!

@@ÔøΩÔøΩ
a bowl

b
bb

"
""

full
Z
Z

ÔøΩ
ÔøΩ

of oranges

HHH
ÔøΩÔøΩÔøΩ

that
H
HH

ÔøΩÔøΩÔøΩ
still

QQÔøΩÔøΩ
have stems

(h) a bowl full of oranges that still have stems



1861

``````
      

b
bb

"
""

there
ZZÔøΩÔøΩ

is
cc##

a person

aaaa
!!!!

that
PPPP
ÔøΩÔøΩÔøΩÔøΩ

is
XXXXX

ÔøΩÔøΩÔøΩÔøΩÔøΩ
sitting

PPPP
ÔøΩÔøΩÔøΩÔøΩ

Q
Q

ÔøΩ
ÔøΩ

in
ll,,

the boat

b
b

"
"

on
cc##

the water
(i) there is a person that is sitting in the boat on the water

XXXXX
ÔøΩÔøΩÔøΩÔøΩÔøΩ

PPPP
ÔøΩÔøΩÔøΩÔøΩ

Q
Q

ÔøΩ
ÔøΩ
a sandwich

cc##
and soup

b
b

"
"

sit
ZZÔøΩÔøΩ

on
@@ÔøΩÔøΩ

a table
(j) a sandwich and soup sit on a table

XXXXXX
ÔøΩÔøΩÔøΩÔøΩÔøΩÔøΩ

b
bb

"
""

a
b
b

"
"

big umbrella

H
HH

ÔøΩ
ÔøΩÔøΩ

sitting
b
bb

"
""

on
ZZÔøΩÔøΩ

the beach
(k) a big umbrella sitting on the beach

Figure 8: Examples of parsing trees generated by VG-NSL.


