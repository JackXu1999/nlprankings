



















































Learning to Write with Cooperative Discriminators


Proceedings of the 56th Annual Meeting of the Association for Computational Linguistics (Long Papers), pages 1638–1649
Melbourne, Australia, July 15 - 20, 2018. c©2018 Association for Computational Linguistics

1638

Learning to Write with Cooperative Discriminators

Ari Holtzman† Jan Buys† Maxwell Forbes†
Antoine Bosselut† David Golub† Yejin Choi†‡

†Paul G. Allen School of Computer Science & Engineering, University of Washington
‡Allen Institute for Artificial Intelligence

{ahai,jbuys,mbforbes,antoineb,golubd,yejin}@cs.washington.edu

Abstract

Despite their local fluency, long-form text
generated from RNNs is often generic,
repetitive, and even self-contradictory. We
propose a unified learning framework that
collectively addresses all the above issues
by composing a committee of discrimina-
tors that can guide a base RNN genera-
tor towards more globally coherent gen-
erations. More concretely, discriminators
each specialize in a different principle of
communication, such as Grice’s maxims,
and are collectively combined with the
base RNN generator through a compos-
ite decoding objective. Human evaluation
demonstrates that text generated by our
model is preferred over that of baselines
by a large margin, significantly enhancing
the overall coherence, style, and informa-
tion of the generations.

1 Introduction

Language models based on Recurrent Neural Net-
works (RNNs) have brought substantial advance-
ments across a wide range of language tasks (Joze-
fowicz et al., 2016; Bahdanau et al., 2015; Chopra
et al., 2016). However, when used for long-
form text generation, RNNs often lead to degen-
erate text that is repetitive, self-contradictory, and
overly generic, as shown in Figure 1.

We propose a unified learning framework that
can address several challenges of long-form text
generation by composing a committee of discrim-
inators each specializing in a different principle
of communication. Starting with an RNN lan-
guage model, our framework learns to construct
a more powerful generator by training a number
of discriminative models that can collectively ad-
dress limitations of the base RNN generator, and

Context: The two guards thudded into the door on the 
other side and began pounding on it, shouting furiously. 
Scious raised the large bunch of keys then placed them in 
a large pocket in his coat. "Come, we have to go," he 
whispered and moved up the corridor, the guards still 
hammering on the door. Jared looked around. The table 
next to the room they had been in was bare.

LM: There was a small table set into the center of the table, 
and a table with two chairs and a table. A chair sat next to 
the couch. A large man stood in the doorway of the room, 
his arms crossed over his chest. "What 's up?" He asked.

L2W: Empty. It looked like some kind of prison. There were 
no windows, no doors, no windows. No sign of anyone in the 
house. No one had ever been here before. 

Reference: Only a flagon of wine and a couple of mugs 
plus a crude dice game. Light flickered in the stone 
corridor from lanterns on the walls. The place was dank 
and gloomy, moss in scattered patches on the floor and 
walls. The corridor ended just beyond the door to their 
former prison. No one else was about.

Figure 1: Sample generations from an RNN lan-
guage model (LM) and our system (L2W) con-
ditioning on the context shown on the top. The
red, underlined text highlights repetitions, while
the blue, italicized text highlights details that have
a direct semantic parallel in the reference text.

then learns how to weigh these discriminators to
form the final decoding objective. These “cooper-
ative” discriminators complement each other and
the base language model to form a stronger, more
global decoding objective.

The design of our discriminators are inspired
by Grice’s maxims (Grice et al., 1975) of quan-
tity, quality, relation, and manner. The discrimi-
nators learn to encode these qualities through the
selection of training data (e.g. distinguishing a
true continuation from a randomly sampled one
as in §3.2 Relevance Model), which includes gen-
erations from partial models (e.g. distinguishing
a true continuation from one generated by a lan-
guage model as in §3.2 Style Model). The system



1639

then learns to balance these discriminators by ini-
tially weighing them uniformly, then continually
updating its weights by comparing the scores the
system gives to its own generated continuations
and to the reference continuation.

Empirical results (§5) demonstrate that our
learning framework is highly effective in convert-
ing a generic RNN language model into a substan-
tially stronger generator. Human evaluation con-
firms that language generated by our model is pre-
ferred over that of competitive baselines by a large
margin in two distinct domains, and significantly
enhances the overall coherence, style, and infor-
mation content of the generated text. Automatic
evaluation shows that our system is both less repet-
itive and more diverse than baselines.

2 Background

RNN language models learn the conditional prob-
ability P (xt|x1, ..., xt−1) of generating the next
word xt given all previous words. This condi-
tional probability learned by RNNs often assigns
higher probability to repetitive, overly generic sen-
tences, as shown in Figure 1 and also in Table 3.
Even gated RNNs such as LSTMs (Hochreiter
and Schmidhuber, 1997) and GRUs (Cho et al.,
2014) have difficulties in properly incorporating
long-term context due to explaining-away effects
(Yu et al., 2017b), diminishing gradients (Pascanu
et al., 2013), and lack of inductive bias for the net-
work to learn discourse structure or global coher-
ence beyond local patterns.

Several methods in the literature attempt to ad-
dress these issues. Overly simple and generic gen-
eration can be improved by length-normalizing the
sentence probability (Wu et al., 2016), future cost
estimation (Schmaltz et al., 2016), or a diversity-
boosting objective function (Shao et al., 2017; Vi-
jayakumar et al., 2016). Repetition can be re-
duced by prohibiting recurrence of the trigrams as
a hard rule (Paulus et al., 2018). However, such
hard constraints do not stop RNNs from repeating
through paraphrasing while preventing occasional
intentional repetition.

We propose a unified framework to address all
these related challenges of long-form text genera-
tion by learning to construct a better decoding ob-
jective, generalizing over various existing modifi-
cations to the decoding objective.

3 The Learning Framework

We propose a general learning framework for con-
ditional language generation of a sequence y given
a fixed context x. The decoding objective for gen-
eration takes the general form

fλ(x,y) = log(Plm(y|x))+
∑
k

λksk(x,y), (1)

where every sk is a scoring function. The
proposed objective combines the RNN language
model probability Plm (§3.1) with a set of ad-
ditional scores sk(x,y) produced by discrimi-
natively trained communication models (§3.2),
which are weighted with learned mixture coeffi-
cients λk (§3.3). When the scores sk are log prob-
abilities, this corresponds to a Product of Experts
(PoE) model (Hinton, 2002).

Generation is performed using beam search
(§3.4), scoring incomplete candidate generations
y1:i at each time step i. The RNN language
model decomposes into per-word probabilities via
the chain rule. However, in order to allow for
more expressivity over long range context we do
not require the discriminative model scores to fac-
torize over the elements of y, addressing a key
limitation of RNNs. More specifically, we use
an estimated score s′k(x,y1:i) that can be com-
puted for any prefix of y = y1:n to approxi-
mate the objective during beam search, such that
s′k(x,y1:n) = sk(x,y). To ensure that the train-
ing method matches this approximation as closely
as possible, scorers are trained to discriminate pre-
fixes of the same length (chosen from a predeter-
mined set of prefix lengths), rather than complete
continuations, except for the entailment module as
described in §3.2 Entailment Model. The prefix
scores are re-estimated at each time-step, rather
than accumulated over beam search.

3.1 Base Language Model
The RNN language model treats the context x and
the continuation y as a single sequence s:

logPlm(s) =
∑
i

logPlm(si|s1:i−1). (2)

3.2 Cooperative Communication Models
We introduce a set of discriminators, each of
which encodes an aspect of proper writing that
RNNs usually fail to capture. Each model is
trained to discriminate between good and bad gen-
erations; we vary the model parameterization and



1640

training examples to guide each model to focus on
a different aspect of Grice’s Maxims. The discrim-
inator scores are interpreted as classification prob-
abilities (scaled with the logistic function where
necessary) and interpolated in the objective func-
tion as log probabilities.

Let D = {(x1,y1), . . . (xn,yn)} be the set of
training examples for conditional generation. Dx
denote all contexts and Dy all continuations. The
scoring functions are trained on prefixes of y to
simulate their application to partial continuations
at inference time.

In all models the first layer embeds each word
w into a 300-dimensional vector e(w) initialized
with GloVe (Pennington et al., 2014) pretrained-
embeddings.

Repetition Model
This model addresses the maxim of Quantity by
biasing the generator to avoid repetitions. The
goal of the repetition discriminator is to learn to
distinguish between RNN-generated and gold con-
tinuations by exploiting our empirical observation
that repetitions are more common in completions
generated by RNN language models. However, we
do not want to completely eliminate repetition, as
words do recur in English.

In order to model natural levels of repetition, a
score di is computed for each position in the con-
tinuation y based on pairwise cosine similarity be-
tween word embeddings within a fixed window of
the previous k words, where

di = max
j=i−k...i−1

(CosSim(e(yj), e(yi))), (3)

such that di = 1 if yi is repeated in the window.
The score of the continuation is then defined as

srep(y) = σ(w
>
r RNNrep(d)), (4)

where RNNrep(d) is the final state of a unidirec-
tional RNN ran over the similarity scores d =
d1 . . . dn and wr is a learned vector. The model
is trained to maximize the ranking log likelihood

Lrep =
∑

(x,yg)∈D,
ys∼LM(x)

log σ(srep(yg)− srep(ys)), (5)

which corresponds to the probability of the gold
ending yg receiving a higher score than the ending
sampled from the RNN language model.

Entailment Model
Judging textual quality can be related to the nat-
ural language inference (NLI) task of recognizing
textual entailment (Dagan et al., 2006; Bowman
et al., 2015): we would like to guide the generator
to neither contradict its own past generation (the
maxim of Quality) nor state something that read-
ily follows from the context (the maxim of Quan-
tity). The latter case is driven by the RNNs habit
of paraphrasing itself during generation.

We train a classifier that takes two sentences a
and b as input and predicts the relation between
them as either contradiction, entailment or neu-
tral. We use the neutral class probability of the
sentence pair as discriminator score, in order to
discourage both contradiction and entailment. As
entailment classifier we use the decomposable at-
tention model (Parikh et al., 2016), a competitive,
parameter-efficient model for entailment classifi-
cation.1 The classifier is trained on two large en-
tailment datasets, SNLI (Bowman et al., 2015) and
MultiNLI (Williams et al., 2017), which together
have more than 940,000 training examples. We
train separate models based on the vocabularies of
each of the datasets we use for evaluation.

In contrast to our other communication models,
this classifier cannot be applied directly to the full
context and continuation sequences it is scoring.
Instead every completed sentence in the continu-
ation should be scored against all preceding sen-
tences in both the context and continuation.

Let t(a,b) be the log probability of the neu-
tral class. Let S(y) be the set of complete sen-
tences in y, Slast(y) the last complete sentence,
and Sinit(y) the sentences before the last complete
sentence. We compute the entailment score of
Slast(y) against all preceding sentences in x and
y, and use the score of the sentence-pair for which
we have the least confidence in a neutral classifi-
cation:

sentail(x,y) = mina∈S(x)∪Sinit(y)t(a, Slast(y)).
(6)

Intuitively, we only use complete sentences be-
cause the ending of a sentence can easily flip en-
tailment. As a result, we carry over entailment
score of the last complete sentence in a genera-
tion until the end of the next sentence, in order to
maintain the presence of the entailment score in
the objective. Note that we check that the current

1We use the version without intra-sentence attention.



1641

Data: context x, beam size k, sampling temperature t
Result: best continuation
best = None
beam = [x]
for step = 0; step < max steps; step = step +1 do

next beam = []
for candidate in beam do

next beam.extend(next k(candidate))
if termination score(candidate) > best.score

then
best = candidate.append(term)

end
end
for candidate in next beam do

. score with models
candidate.score += fλ(candidate)

end
. sample k candidates by score

beam = sample(next beam, k, t)
end
if learning then

update λ with gradient descent by comparing best
against the gold.

end
return best

Algorithm 1: Inference/Learning in the Learning
to Write Framework.

sentence is not directly entailed or contradicted
by a previous sentence and not the reverse. 2 In
contrast to our other models, the score this model
returns only corresponds to a subsequence of the
given continuation, as the score is not accumu-
lated across sentences during beam search. Instead
the decoder is guided locally to continue complete
sentences that are not entailed or contradicted by
the previous text.

Relevance Model

The relevance model encodes the maxim of Rela-
tion by predicting whether the content of a candi-
date continuation is relevant to the given context.
We train the model to distinguish between true
continuations and random continuations sampled
from other (human-written) endings in the corpus,
conditioned on the given context.

First both the context and continuation se-
quences are passed through a convolutional layer,
followed by maxpooling to obtain vector represen-
tations of the sequences:

a = maxpool(conva(e(x))), (7)

b = maxpool(convb(e(y))). (8)

2If the current sentence entails a previous one it may sim-
ply be adding more specific information, for instance: “He
hated broccoli. Every time he ate broccoli he was reminded
that it was the thing he hated most.”

The goal of maxpooling is to obtain a vector rep-
resenting the most important semantic information
in each dimension.

The scoring function is then defined as

srel = w
T
l · (a ◦ b), (9)

where element-wise multiplication of the context
and continuation vectors will amplify similarities.

We optimize the ranking log likelihood

Lrel =
∑

(x,yg)∈D,
yr∼Dy

log σ(srel(x,yg)− srel(x,yr)),

(10)
where yg is the gold ending and yr is a randomly
sampled ending.

Lexical Style Model
In practice RNNs generate text that exhibit much
less lexical diversity than their training data. To
counter this effect we introduce a simple dis-
criminator based on observed lexical distributions
which captures writing style as expressed through
word choice. This classifier therefore encodes as-
pects of the maxim of Manner.

The scoring function is defined as

sbow(y) = w
T
s maxpool(e(y)). (11)

The model is trained with a ranking loss us-
ing negative examples sampled from the language
model, similar to Equation 5.

3.3 Mixture Weight Learning
Once all the communication models have been
trained, we learn the combined decoding objec-
tive. In particular we learn the weight coefficients
λk in equation 1 to linearly combine the scoring
functions, using a discriminative loss

Lmix =
∑

(x,y)∈D

(fλ(x,y)− fλ(x,A(x))2, (12)

where A is the inference algorithm for beam
search decoding. The weight coefficients are thus
optimized to minimize the difference between the
scores assigned to the gold continuation and the
continuation predicted by the current model.

Mixture weights are learned online: Each suc-
cessive generation is performed based on the cur-
rent values of λ, and a step of gradient descent
is then performed based on the prediction. This
has the effect that the objective function changes



1642

BookCorpus TripAdvisor
Model BLEU Meteor Length Vocab Trigrams BLEU Meteor Length Vocab % Trigrams
L2W 0.52 6.8 43.6 73.8 98.9 1.7 11.0 83.8 64.1 96.2

ADAPTIVELM 0.52 6.3 43.5 59.0 92.7 1.94 11.2 94.1 52.6 92.5
CACHELM 0.33 4.6 37.9 31.0 44.9 1.36 7.2 52.1 39.2 57.0
SEQ2SEQ 0.32 4.0 36.7 23.0 33.7 1.84 8.0 59.2 33.9 57.0
SEQGAN 0.18 5.0 28.4 73.4 99.3 0.73 6.7 47.0 57.6 93.4

REFERENCE 100.0 100.0 65.9 73.3 99.7 100.0 100.0 92.8 69.4 99.4

Table 1: Results for automatic evaluation metrics for all systems and domains, using the original con-
tinuation as the reference. The metrics are: Length - Average total length per example; Trigrams - %
unique trigrams per example; Vocab - % unique words per example.

dynamically during training: As the current sam-
ples from the model are used to update the mixture
weights, it creates its own learning signal by ap-
plying the generative model discriminatively. The
SGD learning rate is tuned separately for each
dataset.

3.4 Beam Search

Due to the limitations of greedy decoding and the
fact that our scoring functions do not decompose
across time steps, we perform generation with a
beam search procedure, shown in Algorithm 1.
The naive approach would be to perform beam
search based only on the language model, and then
rescore the k best candidate completions with our
full model. We found that this approach leads to
limited diversity in the beam and therefore cannot
exploit the strengths of the full model.

Instead we score the current hypotheses in the
beam with the full decoding objective: First, each
hypothesis is expanded by selecting the k high-
est scoring next words according to the language
model (we use beam size k = 10). Then k se-
quences are sampled from the k2 candidates ac-
cording to the (softmax normalized) distribution
over the candidate scores given by the full de-
coding objective. Sampling is performed in order
to increase diversity, using a temperature of 1.8,
which was tuned by comparing the coherence of
continuations on the validation set.

At each step, the discriminator scores are re-
computed for all candidates, with the exception of
the entailment score, which is only recomputed for
hypotheses which end with a sentence terminat-
ing symbol. We terminate beam search when the
termination score, the maximum possible score
achievable by terminating generation at the current
position, is smaller than the current best score.

4 Experiments

4.1 Corpora

We use two English corpora for evaluation. The
first is the TripAdvisor corpus (Wang et al., 2010),
a collection of hotel reviews with a total of 330
million words.3 The second is the BookCorpus
(Zhu et al., 2015), a 980 million word collection
of novels by unpublished authors.4 In order to
train the discriminators, mixing weights, and the
SEQ2SEQ and SEQGAN baselines, we segment
both corpora into sections of length ten sentences,
and use the first 5 sentence as context and the sec-
ond 5 as the continuation. See supplementary ma-
terial for further details.

4.2 Baselines

ADAPTIVELM Our first baseline is the same
Adaptive Softmax (Grave et al., 2016) language
model used as base generator in our framework
(§3.1). This enables us to evaluate the effect of
our enhanced decoding objective directly. A 100k
vocabulary is used and beam search with beam
size of 5 is used at decoding time. ADAPTIVELM
achieves perplexity of 37.46 and 18.81 on Book-
Corpus and TripAdvisor respectively.

CACHELM As another LM baseline we include
a continuous cache language model (Grave et al.,
2017) as implemented by Merity et al. (2018),
which recently obtained state-of-the-art perplex-
ity on the Penn Treebank corpus (Marcus et al.,
1993). Due to memory constraints, we use a vo-
cabulary size of 50k for CACHELM. To generate,
beam search decoding is used with a beam size 5.
CACHELM obtains perplexities of 70.9 and 29.71
on BookCorpus and TripAdvisor respectively.

3http://times.cs.uiuc.edu/˜wang296/
Data/

4http://yknzhu.wixsite.com/mbweb

http://times.cs.uiuc.edu/~wang296/Data/
http://times.cs.uiuc.edu/~wang296/Data/
http://yknzhu.wixsite.com/mbweb


1643

BookCorpus Specific Criteria Overall Quality
L2W vs. Repetition Contradiction Relevance Clarity Better Equal Worse

ADAPTIVELM +0.48 +0.18 +0.12 +0.11 47% 20% 32%
CACHELM +1.61 +0.37 +1.23 +1.21 86% 6% 8%
SEQ2SEQ +1.01 +0.54 +0.83 +0.83 72% 7% 21%
SEQGAN +0.20 +0.32 +0.61 +0.62 63% 20% 17%

LM VS. REFERENCE -0.10 -0.07 -0.18 -0.10 41% 7 % 52%
L2W VS. REFERENCE +0.49 +0.37 +0.46 +0.55 53% 18% 29%

TripAdvisor Specific Criteria Overall Quality
L2W vs. Repetition Contradiction Relevance Clarity Better Equal Worse

ADAPTIVELM +0.23 -0.02 +0.19 -0.03 47% 19% 34%
CACHELM +1.25 +0.12 +0.94 +0.69 77% 9% 14%
SEQ2SEQ +0.64 +0.04 +0.50 +0.41 58% 12% 30%
SEQGAN +0.53 +0.01 +0.49 +0.06 55% 22% 22%

LM VS. REFERENCE -0.10 -0.04 -0.15 -0.06 38% 10% 52%
L2W VS. REFERENCE -0.49 -0.36 -0.47 -0.50 25% 18% 57%

Table 2: Results of crowd-sourced evaluation on different aspects of the generation quality as well as
overall quality judgments. For each sub-criteria we report the average of comparative scores on a scale
from -2 to 2. For the overall quality evaluation decisions are aggregated over 3 annotators per example.

SEQ2SEQ As our evaluation can be framed as
sequence-to-sequence transduction, we compare
against a seq2seq model directly trained to predict
5 sentence continuations from 5 sentences of con-
text, using the OpenNMT attention-based seq2seq
implementation (Klein et al., 2017). Similarly to
CACHELM, a 50k vocabulary was used and beam
search decoding was performed with a beam size
of 5.

SEQGAN Finally, as our use of discrimina-
tors is related to Generative Adversarial Networks
(GANs), we use SeqGAN (Yu et al., 2017a), a
GAN for discrete sequences trained with policy
gradients.5 This model is trained on 10 sentence
sequences, which is significantly longer than pre-
vious experiments with GANs for text; the vocab-
ulary is restricted to 25k words to make training
tractable. Greedy sampling was found to outper-
form beam search. For implementation details, see
the supplementary material.

4.3 Evaluation Setup

We pose the evaluation of our model as the task
of generating an appropriate continuation given an
initial context. In our open-ended generation set-
ting the continuation is not required to be a spe-
cific length, so we require our models and base-
lines to generate 5-sentence continuations, consis-
tent with the way the discriminator and seq2seq
baseline datasets are constructed.

Previous work has reported that automatic mea-

5We use the implementation available at https://
github.com/nhynes/abc.

sures such as BLEU (Papineni et al., 2002) and
Meteor (Denkowski and Lavie, 2010) do not lead
to meaningful evaluation when used for long
or creative text generation where there can be
high variance among acceptable generation out-
puts (Wiseman et al., 2017; Vedantam et al., 2015).
However, we still report these measures as one
component of our evaluation. Additionally we re-
port a number of custom metrics which capture
important properties of the generated text: Length
– Average sequence length per example; Trigrams
– percentage of unique trigrams per example; Vo-
cab – percentage of unique words per example.
Endings generated by our model and the baselines
are compared against the reference endings in the
original text. Results are given in Table 1.

For open-ended generation tasks such as our
own, human evaluation has been found to be the
only reliable measure (Li et al., 2016b; Wiseman
et al., 2017). For human evaluation, two possi-
ble endings are presented to a human, who as-
sesses the text according to several criteria, which
are closely inspired by Grice’s Maxims: repeti-
tion, contradiction, relevance and clarity. See sup-
plementary material for examples of the evalua-
tion forms we used. For each criterion, the two
continuations are compared using a 5-point Likert
scale, to which we assign numerical values of −2
to 2. The scale measures whether one generation
is strongly or somewhat preferred above the other,
or whether they are equal. Finally, the human is
asked to make a judgement about overall quality:
which ending is better, or are they of equal qual-

https://github.com/nhynes/abc
https://github.com/nhynes/abc


1644

CONTEXT We thoroughly enjoyed staying at this hotel. We travelled with our kids aged 4 and 6. The rooms were
clean, spacious and well maintained. The beds were great and all of us slept well. The hotel provided
vouchers towards breakfast at the adjoining restaurant.

L2W We didn’t have breakfast, so can’t comment on that. The concierge was very helpful, and gave us direc-
tions, etc. Overall, we would definitely recommend this hotel to others. We would stay here again in a
heartbeat. If you’re looking for a great location, and good value, I’d recommend this hotel.

ADAPTIVELM The breakfast buffet was very good, and the staff was very friendly and helpful, and it was a great way to
start our day! I would definitely stay here again, and would recommend it to my friends, and would stay
there again if I ever go back to Montreal. The location was great, and the staff was friendly and helpful.
I would definitely stay here again!!

CACHELM The staff was very friendly and helpful. The hotel is located in a great location. It is right in the middle
of the gaslamp district. I would recommend this hotel to anyone. I would definitely stay here again.

SEQ2SEQ The staff were very friendly and helpful. The hotel is in a great location. The staff were very friendly and
helpful. The hotel is in a great location. The staff were very friendly and helpful.

SEQGAN We had a breakfast at Shula’s & a delicious breakfast. The staff was very helpful and helpful. The
breakfast was great as well. The staff was very helpful and friendly. We had a great service and the food
was excellent.

REFERENCE The restaurant was great and we used the vouchers towards whatever breakfast we ordered. The hotel
had amazing grounds with a putting golf course that was fun for everyone. The pool was fantastic and
we lucked out with great weather. We spent many hours in the pool, lounging, playing shuffleboard and
snacking from the attached bar. The happy hour was great perk.

Table 3: Example continuations generated by our model (L2W) and various baselines (all given the
same context from TripAdvisor) compared to the reference continuation. For more examples go to
https://ari-holtzman.github.io/l2w-demo/.

ity?
The human evaluation is performed on 100 ex-

amples selected from the test set of each corpus,
for every pair of generators that are compared. We
present the examples to workers on Amazon Me-
chanical Turk, using three annotators for each ex-
ample. The results are given in Table 2. For the
Likert scale, we report the average scores for each
criterion, while for the overall quality judgement
we simply aggregate votes across all examples.

5 Results and Analysis

5.1 Quantitative Results
The absolute performance of all the evaluated sys-
tems on BLEU and Meteor is quite low (Table 1),
as expected. However, in relative terms L2W is
superior or competitive with all the baselines, of
which ADAPTIVELM performs best. In terms of
vocabulary and trigram diversity only SEQGAN
is competitive with L2W, likely due to the fact
that sampling based decoding was used. For gen-
eration length only L2W and ADAPTIVELM even
approach human levels, with the former better on
BookCorpus and the latter on TripAdvisor.

Under the crowd-sourced evaluation (Table 2),
on BookCorpus our model is consistently favored
over the baselines on all dimensions of compar-
ison. In particular, our model tends to be much
less repetitive, while being more clear and rel-
evant than the baselines. ADAPTIVELM is the

most competitive baseline owing partially to the
robustness of language models and to greater vo-
cabulary coverage through the adaptive softmax.
SEQGAN, while failing to achieve strong co-
herency, is surprisingly diverse, but tended to pro-
duce far shorter sentences than the other models.
CACHELM has trouble dealing with the complex
vocabulary of our domains without the support of
either a hierarchical vocabulary structure (as in
ADAPTIVELM) or a structured training method
(as with SEQGAN), leading to overall poor re-
sults. While the SEQ2SEQ model has low con-
ditional perplexity, we found that in practice it is
less able to leverage long-distance dependencies
than the base language model, producing more
generic output. This reflects our need for more
complex evaluations for generation, as such mod-
els are rarely evaluated under metrics that inspect
characteristics of the text, rather than ability to
predict the gold or overlap with the gold.

For the TripAdvisor corpus, L2W is ranked
higher than the baselines on overall quality, as well
as on most individual metrics, with the exception
that it fails to improve on contradiction and clar-
ity over the ADAPTIVELM (which is again the
most competitive baseline). Our model’s strongest
improvements over the baselines are on repetition
and relevance.

https://ari-holtzman.github.io/l2w-demo/


1645

Trip Advisor Ablation
Ablation vs. LM Repetition Contradiction Relevance Clarity Better Neither Worse

REPETITION ONLY +0.63 +0.30 +0.37 +0.42 50% 23% 27%
ENTAILMENT ONLY +0.01 +0.02 +0.05 -0.10 39% 20% 41%
RELEVANCE ONLY -0.19 +0.09 +0.10 +0.060 36% 22% 42%

LEXICAL STYLE ONLY +0.11 +0.16 +0.20 +0.16 38% 25% 38%
ALL +0.23 -0.02 +0.19 -0.03 47% 19% 34%

Table 4: Crowd-sourced ablation evaluation of generations on TripAdvisor. Each ablation uses only one
discriminative communication model, and is compared to ADAPTIVELM.

Ablation

To investigate the effect of individual discrimina-
tors on the overall performance, we report the re-
sults of ablations of our model in Table 4. For each
ablation we include only one of the communica-
tion modules, and train a single mixture coeffi-
cient for combining that module and the language
model. The diagonal of Table 4 contains only pos-
itive numbers, indicating that each discriminator
does help with the purpose it was designed for.
Interestingly, most discriminators help with most
aspects of writing, but all except repetition fail to
actually improve the overall quality over ADAP-
TIVELM.

The repetition module gives the largest boost by
far, consistent with the intuition that many of the
deficiencies of RNN as a text generator lie in se-
mantic repetition. The entailment module (which
was intended to reduce contradiction) is the weak-
est, which we hypothesize is the combination of
(a) mismatch between training and test data (since
the entailment module was trained on SNLI and
MultiNLI) and (b) the lack of smoothness in the
entailment scorer, whose score could only be up-
dated upon the completion of a sentence.

Crowd Sourcing

Surprisingly, L2W is even preferred over the orig-
inal continuation of the initial text on BookCor-
pus. Qualitative analysis shows that L2W’s con-
tinuation is often a straightforward continuation
of the original text while the true continuation
is more surprising and contains complex refer-
ences to earlier parts of the book. While many of
the issues of automatic metrics (Liu et al., 2016;
Novikova et al., 2017) have been alleviated by
crowd-sourcing, we found it difficult to incentivize
crowd workers to spend significant time on any
one datum, forcing them to rely on a shallower un-
derstanding of the text.

5.2 Qualitative Analysis

L2W generations are more topical and stylisti-
cally coherent with the context than the baselines.
Table 3 shows that L2W, ADAPTIVELM, and
SEQGAN all start similarly, commenting on the
breakfast buffet, as breakfast was mentioned in the
last sentence of the context. The language model
immediately offers generic compliments about the
breakfast and staff, whereas L2W chooses a rea-
sonable but less obvious path, stating that the pre-
viously mentioned vouchers were not used. In
fact, L2W is the only system not to use the line
“The staff was very friendly and helpful.”, de-
spite this sentence appearing in less than 1% of
reviews. The semantics of this sentence, however,
is expressed in many different surface forms in the
training data (e.g., “The staff were kind and quick
to respond.”).

The CACHELM begins by generating the
same over-used sentence and only produce short,
generic sentences throughout. Seq2Seq simply re-
peats sentences that occur often in the training
set, repeating one sentence three times and an-
other twice. This indicates that the encoded con-
text is essentially being ignored as the model fails
to align the context and continuation.

The SEQGAN system is more detailed, e.g.
mentioning a specific location “Shula’s” as would
be expected given its highly diverse vocabulary (as
seen in Table 1). Yet it repeats itself in the first sen-
tence. (e.g. “had a breakfast”, “and a delicious
breakfast”). Consequently SEQGAN quickly de-
volves into generic language, repeating the incred-
ibly common sentence “The staff was very helpful
and friendly.”, similar to SEQ2SEQ.

The L2W models do not fix every degenerate
characteristic of RNNs. The TripAdvisor L2W
generation consists of meaningful but mostly dis-
connected sentences, whereas human text tends
to build on previous sentences, as in the refer-
ence continuation. Furthermore, while L2W re-



1646

peats itself less than any of our baselines, it still
paraphrases itself, albeit more subtly: “we would
definitely recommend this hotel to others.” com-
pared to “I’d recommend this hotel.” This ex-
ample also exposes a more fine-grained issue:
L2W switches from using “we” to using “I” mid-
generation. Such subtle distinctions are hard to
capture during beam re-ranking and none of our
models address the linguistic issues of this sub-
tlety.

6 Related Work

Alternative Decoding Objectives A number of
papers have proposed alternative decoding ob-
jectives for generation (Shao et al., 2017). Li
et al. (2016a) proposed a diversity-promoting ob-
jective that interpolates the conditional probabil-
ity score with negative marginal or reverse condi-
tional probabilities. Yu et al. (2017b) also incor-
porate the reverse conditional probability through
a noisy channel model in order to alleviate the
explaining-away problem, but at the cost of sig-
nificant decoding complexity, making it impracti-
cal for paragraph generation. Modified decoding
objectives have long been a common practice in
statistical machine translation (Koehn et al., 2003;
Och, 2003; Watanabe et al., 2007; Chiang et al.,
2009) and remain common with neural machine
translation, even when an extremely large amount
of data is available (Wu et al., 2016). Inspired
by all the above approaches, our work presents a
general learning framework together with a more
comprehensive set of composite communication
models.

Pragmatic Communication Models Models
for pragmatic reasoning about communicative
goals such as Grice’s maxims have been pro-
posed in the context of referring expression gen-
eration (Frank and Goodman, 2012). Andreas and
Klein (2016) proposed a neural model where can-
didate descriptions are sampled from a genera-
tively trained speaker, which are then re-ranked
by interpolating the score with that of the lis-
tener, a discriminator that predicts a distribution
over choices given the speaker’s description. Sim-
ilar to our work the generator and discriminator
scores are combined to select utterances which fol-
low Grice’s maxims. Yu et al. (2017c) proposed
a model where the speaker consists of a convolu-
tional encoder and an LSTM decoder, trained with
a ranking loss on negative samples in addition to

optimizing log-likelihood.

Generative Adversarial Networks GANs
(Goodfellow et al., 2014) are another alternative
to maximum likelihood estimation for generative
models. However, backpropagating through
discrete sequences and the inherent instability
of the training objective (Che et al., 2017) both
present significant challenges. While solutions
have been proposed to make it possible to train
GANs for language (Che et al., 2017; Yu et al.,
2017a) they have not yet been shown to produce
high quality long-form text, as our results confirm.

Generation with Long-term Context Several
prior works studied paragraph generation using
sequence-to-sequence models for image captions
(Krause et al., 2017), product reviews (Lipton
et al., 2015; Dong et al., 2017), sport reports
(Wiseman et al., 2017), and recipes (Kiddon et al.,
2016). While these prior works focus on develop-
ing neural architectures for learning domain spe-
cific discourse patterns, our work proposes a gen-
eral framework for learning a generator that is
more powerful than maximum likelihood decod-
ing from an RNN language model for an arbitrary
target domain.

7 Conclusion

We proposed a unified learning framework for the
generation of long, coherent texts, which over-
comes some of the common limitations of RNNs
as text generation models. Our framework learns a
decoding objective suitable for generation through
a learned combination of sub-models that capture
linguistically-motivated qualities of good writing.
Human evaluation shows that the quality of the
text produced by our model exceeds that of com-
petitive baselines by a large margin.

Acknowledgments

We thank the anonymous reviewers for their in-
sightful feedback and Omer Levy for helpful dis-
cussions. This research was supported in part by
NSF (IIS-1524371), DARPA CwC through ARO
(W911NF-15-1-0543), Samsung AI Research, and
gifts by Tencent, Google, and Facebook.

References
Jacob Andreas and Dan Klein. 2016. Reasoning about

pragmatics with neural listeners and speakers. In

https://doi.org/10.18653/v1/D16-1125
https://doi.org/10.18653/v1/D16-1125


1647

Proceedings of the Conference on Empirical Meth-
ods in Natural Language Processing, pages 1173–
1182. Association for Computational Linguistics.

Dzmitry Bahdanau, Kyunghyun Cho, and Yoshua Ben-
gio. 2015. Neural machine translation by jointly
learning to align and translate. In International Con-
ference on Learning Representations.

Samuel R. Bowman, Gabor Angeli, Christopher Potts,
and Christopher D. Manning. 2015. A large an-
notated corpus for learning natural language infer-
ence. In Proceedings of the Conference on Empiri-
cal Methods in Natural Language Processing, pages
632–642. Association for Computational Linguis-
tics.

Tong Che, Yanran Li, Ruixiang Zhang, R. Devon
Hjelm, Wenjie Li, Yangqiu Song, and Yoshua
Bengio. 2017. Maximum-likelihood augmented
discrete generative adversarial networks. CoRR,
abs/1702.07983.

David Chiang, Kevin Knight, and Wei Wang. 2009.
11,001 new features for statistical machine trans-
lation. In Proceedings of Human Language Tech-
nologies: The 2009 Annual Conference of the North
American Chapter of the Association for Compu-
tational Linguistics, pages 218–226, Boulder, Col-
orado. Association for Computational Linguistics.

Kyunghyun Cho, Bart van Merriënboer, Dzmitry Bah-
danau, and Yoshua Bengio. 2014. On the properties
of neural machine translation: Encoder–decoder ap-
proaches. In Proceedings of SSST-8, Eighth Work-
shop on Syntax, Semantics and Structure in Statisti-
cal Translation, pages 103–111.

Sumit Chopra, Michael Auli, and Alexander M. Rush.
2016. Abstractive sentence summarization with at-
tentive recurrent neural networks. In Proceedings
of the Conference of the North American Chapter
of the Association for Computational Linguistics:
Human Language Technologies, pages 93–98, San
Diego, California. Association for Computational
Linguistics.

Ido Dagan, Oren Glickman, and Bernardo Magnini.
2006. The pascal recognising textual entailment
challenge. In Proceedings of the First Inter-
national Conference on Machine Learning Chal-
lenges: Evaluating Predictive Uncertainty Visual
Object Classification, and Recognizing Textual En-
tailment, MLCW’05, pages 177–190, Berlin, Hei-
delberg. Springer-Verlag.

Michael Denkowski and Alon Lavie. 2010. Extend-
ing the METEOR Machine Translation Evaluation
Metric to the Phrase Level. In Proceedings of the
Conference of the North American Chapter of the
Association for Computational Linguistics: Human
Language Technologies, pages 250–253.

Li Dong, Shaohan Huang, Furu Wei, Mirella Lapata,
Ming Zhou, and Ke Xu. 2017. Learning to generate

product reviews from attributes. In Proceedings of
the 15th Conference of the European Chapter of the
Association for Computational Linguistics: Volume
1, Long Papers, pages 623–632, Valencia, Spain.
Association for Computational Linguistics.

Michael C. Frank and Noah D. Goodman. 2012. Pre-
dicting pragmatic reasoning in language games. Sci-
ence, 336(6084):998–998.

Ian Goodfellow, Jean Pouget-Abadie, Mehdi Mirza,
Bing Xu, David Warde-Farley, Sherjil Ozair, Aaron
Courville, and Yoshua Bengio. 2014. Generative ad-
versarial nets. In Advances in Neural Information
Processing Systems, pages 2672–2680.

Edouard Grave, Armand Joulin, Moustapha Cissé,
David Grangier, and Hervé Jégou. 2016. Efficient
softmax approximation for gpus. arXiv preprint
arXiv:1609.04309.

Edouard Grave, Armand Joulin, and Nicolas Usunier.
2017. Improving neural language models with a
continuous cache. In International Conference on
Learning Representations.

H Paul Grice, Peter Cole, Jerry Morgan, et al. 1975.
Logic and conversation. 1975, pages 41–58.

Geoffrey E Hinton. 2002. Training products of experts
by minimizing contrastive divergence. Neural Com-
putation, 14(8):1771–1800.

Sepp Hochreiter and Jürgen Schmidhuber. 1997.
Long short-term memory. Neural Computation,
9(8):1735–1780.

Rafal Jozefowicz, Oriol Vinyals, Mike Schuster, Noam
Shazeer, and Yonghui Wu. 2016. Exploring the lim-
its of language modeling. CoRR, abs/1602.02410.

Chloé Kiddon, Luke Zettlemoyer, and Yejin Choi.
2016. Globally coherent text generation with neu-
ral checklist models. In Proceedings of the Con-
ference on Empirical Methods in Natural Language
Processing, pages 329–339.

Guillaume Klein, Yoon Kim, Yuntian Deng, Jean
Senellart, and Alexander M. Rush. 2017. Opennmt:
Open-source toolkit for neural machine translation.
In Proceedings of the Association of Computational
Linguistics.

Philipp Koehn, Franz Josef Och, and Daniel Marcu.
2003. Statistical phrase-based translation. In Pro-
ceedings of the 2003 Conference of the North Amer-
ican Chapter of the Association for Computational
Linguistics on Human Language Technology - Vol-
ume 1, pages 48–54. Association for Computational
Linguistics.

Jonathan Krause, Justin Johnson, Ranjay Krishna, and
Li Fei-Fei. 2017. A hierarchical approach for gener-
ating descriptive image paragraphs. In Proceedings
of the Conference on Computer Vision and Pattern
Recognition.

https://doi.org/10.18653/v1/D15-1075
https://doi.org/10.18653/v1/D15-1075
https://doi.org/10.18653/v1/D15-1075
http://arxiv.org/abs/1702.07983
http://arxiv.org/abs/1702.07983
http://dl.acm.org/citation.cfm?id=1620754.1620786
http://dl.acm.org/citation.cfm?id=1620754.1620786
http://www.aclweb.org/anthology/N16-1012
http://www.aclweb.org/anthology/N16-1012
https://doi.org/10.1007/11736790_9
https://doi.org/10.1007/11736790_9
https://www.aclweb.org/anthology/D12-1097
https://www.aclweb.org/anthology/D12-1097
https://www.aclweb.org/anthology/D12-1097
http://www.aclweb.org/anthology/E17-1059
http://www.aclweb.org/anthology/E17-1059
https://doi.org/10.1126/science.1218633
https://doi.org/10.1126/science.1218633
http://arxiv.org/abs/1612.04426
http://arxiv.org/abs/1612.04426
http://arxiv.org/abs/1602.02410
http://arxiv.org/abs/1602.02410
https://aclweb.org/anthology/D16-1032
https://aclweb.org/anthology/D16-1032
https://doi.org/10.18653/v1/P17-4012
https://doi.org/10.18653/v1/P17-4012
https://doi.org/10.3115/1073445.1073462


1648

Jiwei Li, Michel Galley, Chris Brockett, Jianfeng Gao,
and Bill Dolan. 2016a. A diversity-promoting ob-
jective function for neural conversation models. In
Conference of the North American Chapter of the
Association for Computational Linguistics: Human
Language Technologies, pages 110–119, San Diego,
California. Association for Computational Linguis-
tics.

Jiwei Li, Will Monroe, Alan Ritter, Dan Jurafsky,
Michel Galley, and Jianfeng Gao. 2016b. Deep rein-
forcement learning for dialogue generation. In Pro-
ceedings of the Conference on Empirical Methods
in Natural Language Processing, pages 1192–1202,
Austin, Texas. Association for Computational Lin-
guistics.

Zachary Chase Lipton, Sharad Vikram, and Julian
McAuley. 2015. Capturing meaning in product re-
views with character-level generative text models.
CoRR, abs/1511.03683.

Chia-Wei Liu, Ryan Lowe, Iulian Serban, Mike Nose-
worthy, Laurent Charlin, and Joelle Pineau. 2016.
How not to evaluate your dialogue system: An em-
pirical study of unsupervised evaluation metrics for
dialogue response generation. In Proceedings of the
Conference on Empirical Methods in Natural Lan-
guage Processing, pages 2122–2132, Austin, Texas.
Association for Computational Linguistics.

Mitchell P Marcus, Mary Ann Marcinkiewicz, and
Beatrice Santorini. 1993. Building a large annotated
corpus of english: The penn treebank. Computa-
tional Linguistics, 19(2):313–330.

Stephen Merity, Nitish Shirish Keskar, and Richard
Socher. 2018. Regularizing and optimizing lstm lan-
guage models. ICLR.

Jekaterina Novikova, Ondřej Dušek, Amanda Cer-
cas Curry, and Verena Rieser. 2017. Why we
need new evaluation metrics for nlg. In Proceed-
ings of the Conference on Empirical Methods in
Natural Language Processing, pages 2241–2252,
Copenhagen, Denmark. Association for Computa-
tional Linguistics.

Franz Josef Och. 2003. Minimum error rate train-
ing in statistical machine translation. In Proceed-
ings of the 41st Annual Meeting of the Association
for Computational Linguistics, pages 160–167, Sap-
poro, Japan. Association for Computational Linguis-
tics.

Kishore Papineni, Salim Roukos, Todd Ward, and Wei-
Jing Zhu. 2002. Bleu: a method for automatic
evaluation of machine translation. In Proceedings
of the Association for Computational Linguistics,
pages 311–318. Association for Computational Lin-
guistics.

Ankur Parikh, Oscar Täckström, Dipanjan Das, and
Jakob Uszkoreit. 2016. A decomposable attention

model for natural language inference. In Proceed-
ings of the Conference on Empirical Methods in Nat-
ural Language Processing, pages 2249–2255. Asso-
ciation for Computational Linguistics.

Razvan Pascanu, Tomas Mikolov, and Yoshua Bengio.
2013. On the difficulty of training recurrent neural
networks. In International Conference on Machine
Learning (ICML), pages 1310–1318.

Romain Paulus, Caiming Xiong, and Richard Socher.
2018. A deep reinforced model for abstractive sum-
marization. CoRR, abs/1705.04304.

Jeffrey Pennington, Richard Socher, and Christopher
Manning. 2014. Glove: Global vectors for word
representation. In Proceedings of the Conference on
Empirical Methods in Natural Language Process-
ing, pages 1532–1543, Doha, Qatar. Association for
Computational Linguistics.

Allen Schmaltz, Alexander M. Rush, and Stuart
Shieber. 2016. Word ordering without syntax. In
Proceedings of the Conference on Empirical Meth-
ods in Natural Language Processing, pages 2319–
2324, Austin, Texas. Association for Computational
Linguistics.

Yuanlong Shao, Stephan Gouws, Denny Britz, Anna
Goldie, Brian Strope, and Ray Kurzweil. 2017.
Generating high-quality and informative conversa-
tion responses with sequence-to-sequence models.
In Proceedings of the Conference on Empirical
Methods in Natural Language Processing, pages
2210–2219. Association for Computational Linguis-
tics.

Ramakrishna Vedantam, C Lawrence Zitnick, and Devi
Parikh. 2015. Cider: Consensus-based image de-
scription evaluation. In Proceedings of the IEEE
Conference on Computer Vision and Pattern Recog-
nition, pages 4566–4575.

Ashwin K Vijayakumar, Michael Cogswell, Ram-
prasath R Selvaraju, Qing Sun, Stefan Lee, David
Crandall, and Dhruv Batra. 2016. Diverse beam
search: Decoding diverse solutions from neural se-
quence models. arXiv preprint arXiv:1610.02424.

Hongning Wang, Yue Lu, and ChengXiang Zhai. 2010.
Latent aspect rating analysis on review text data: a
rating regression approach. In SIGKDD Conference
on Knowledge Discovery and Data Mining.

Taro Watanabe, Jun Suzuki, Hajime Tsukada, and
Hideki Isozaki. 2007. Online large-margin train-
ing for statistical machine translation. In Proceed-
ings of the 2007 Joint Conference on Empirical
Methods in Natural Language Processing and Com-
putational Natural Language Learning (EMNLP-
CoNLL), pages 764–773, Prague, Czech Republic.
Association for Computational Linguistics.

Adina Williams, Nikita Nangia, and Samuel R. Bow-
man. 2017. A broad-coverage challenge corpus for
sentence understanding through inference. CoRR,
abs/1704.05426.

http://www.aclweb.org/anthology/N16-1014
http://www.aclweb.org/anthology/N16-1014
https://aclweb.org/anthology/D16-1127
https://aclweb.org/anthology/D16-1127
http://arxiv.org/abs/1511.03683
http://arxiv.org/abs/1511.03683
https://aclweb.org/anthology/D16-1230
https://aclweb.org/anthology/D16-1230
https://aclweb.org/anthology/D16-1230
https://www.aclweb.org/anthology/D17-1238
https://www.aclweb.org/anthology/D17-1238
https://doi.org/10.3115/1075096.1075117
https://doi.org/10.3115/1075096.1075117
https://www.aclweb.org/anthology/P02-1040
https://www.aclweb.org/anthology/P02-1040
https://doi.org/10.18653/v1/D16-1244
https://doi.org/10.18653/v1/D16-1244
http://www.aclweb.org/anthology/D14-1162
http://www.aclweb.org/anthology/D14-1162
https://aclweb.org/anthology/D16-1255
http://aclweb.org/anthology/D17-1235
http://aclweb.org/anthology/D17-1235
http://www.aclweb.org/anthology/D/D07/D07-1080
http://www.aclweb.org/anthology/D/D07/D07-1080
http://arxiv.org/abs/1704.05426
http://arxiv.org/abs/1704.05426


1649

Sam Wiseman, Stuart Shieber, and Alexander Rush.
2017. Challenges in data-to-document generation.
In Proceedings of the Conference on Empirical
Methods in Natural Language Processing, pages
2253–2263, Copenhagen, Denmark. Association for
Computational Linguistics.

Yonghui Wu, Mike Schuster, Zhifeng Chen, Quoc V.
Le, Mohammad Norouzi, Wolfgang Macherey,
Maxim Krikun, Yuan Cao, Qin Gao, Klaus
Macherey, Jeff Klingner, Apurva Shah, Melvin
Johnson, Xiaobing Liu, Lukasz Kaiser, Stephan
Gouws, Yoshikiyo Kato, Taku Kudo, Hideto
Kazawa, Keith Stevens, George Kurian, Nishant
Patil, Wei Wang, Cliff Young, Jason Smith, Jason
Riesa, Alex Rudnick, Oriol Vinyals, Greg Corrado,
Macduff Hughes, and Jeffrey Dean. 2016. Google’s
neural machine translation system: Bridging the gap
between human and machine translation. CoRR,
abs/1609.08144.

Lantao Yu, Weinan Zhang, Jun Wang, and Yong Yu.
2017a. Seqgan: Sequence generative adversarial
nets with policy gradient. In Proceedings of the As-
sociation for the Advancement of Artificial Intelli-
gence, pages 2852–2858.

Lei Yu, Phil Blunsom, Chris Dyer, Edward Grefen-
stette, and Tomas Kocisky. 2017b. The neural noisy
channel. In International Conference on Learning
Representations.

Licheng Yu, Hao Tan, Mohit Bansal, and Tamara L
Berg. 2017c. A joint speaker-listener-reinforcer
model for referring expressions. In Proceedings
of the Conference on Computer Vision and Pattern
Recognition, volume 2.

Yukun Zhu, Ryan Kiros, Richard Zemel, Ruslan
Salakhutdinov, Raquel Urtasun, Antonio Torralba,
and Sanja Fidler. 2015. Aligning books and movies:
Towards story-like visual explanations by watch-
ing movies and reading books. In arXiv preprint
arXiv:1506.06724.

https://www.aclweb.org/anthology/D17-1239
http://arxiv.org/abs/1609.08144
http://arxiv.org/abs/1609.08144
http://arxiv.org/abs/1609.08144

