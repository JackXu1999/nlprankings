



















































CASICT-DCU Neural Machine Translation Systems for WMT17


Proceedings of the Conference on Machine Translation (WMT), Volume 2: Shared Task Papers, pages 428–431
Copenhagen, Denmark, September 711, 2017. c©2017 Association for Computational Linguistics

CASICT-DCU Neural Machine Translation Systems for WMT17

Jinchao Zhang1 Peerachet Porkaew1 Jiawei Hu1 Qiuye Zhao1 Qun Liu2,1
1Key Laboratory of Intelligent Information Processing,

Institute of Computing Technology, Chinese Academy of Sciences
2ADAPT Centre, School of Computing, Dublin City University

{zhangjinchao,dingchunfa,hujiawei,zhaoqiuye,liuqun}@ict.ac.cn

Abstract

We participated in the WMT 2016 shared
news translation task on English ↔ Chi-
nese language pair. Our systems are based
on the encoder-decoder neural machine
translation model with the attention mech-
anism. We employ the Gated Recurrent
Unit (GRU) with the linear associative
connection to build deep encoder and ad-
dress the unknown words with the dic-
tionary replace approach. The dictionar-
ies are extracted from the parallel train-
ing data with unsupervised word align-
ment method. In the decoding procedure,
the translation probabilities of the target
word from different models are averagely
combined as the ensemble strategy. In this
paper, we introduce our systems from data
preprocessing to post-editing in details.

1 Introduction

We build the Neural Machine Translation sys-
tems CASICT-DCU for WMT17 English↔ Chi-
nese news translation task. Our systems are
based on the encoder-decoder model with the at-
tention mechanism, which is also known as the
RNNSearch model (Bahdanau et al., 2015). To
construct the deep RNN network, we employ the
Gated Recurrent Unit (Cho et al., 2014b) with
the linear associative connection (Wang et al.,
2017) to ensure the fluent gradient propagation.
Adadelta (Zeiler, 2012) algorithm is used to op-
timize the parameters and stochastic gradient de-
scent algorithm with small learning rate is used
in the fine-tuning stage. We extract dictionaries
from parallel training data with the unsupervised
method to address the unknown words in target
translation according to the word alignment vec-
tor. During the decoding, the ensemble strategy is

used to combine the translation probabilities of the
target word from different models.

2 System Description

The neural machine translation model (Kalch-
brenner and Blunsom, 2013; Cho et al., 2014b;
Sutskever et al., 2014) aims to capture the transla-
tion knowledge through training a neural network
in the end-to-end style. Our systems are built on
the RNNSearch neural machine translation model.
Formally, given a source sentence x = x1, ..., xm
and a target sentence y = y1, ..., yn, NMT models
the translation probability as

P (y|x) =
n∏

t=1

P (yt|y<t, x), (1)

where y<t = y1, ..., yt−1. The generation proba-
bility of yt is

P (yt|y<t, x) = g(yt−1, ct, st), (2)

where g(·) is a softmax regression function, yt−1
is the newly translated target word and st is the
hidden states of decoder which represents the
translation status. The attention ct denotes the re-
lated source words for generating yt and is com-
puted as the weighted-sum of source represen-
tation h upon an alignment vector αt shown in
Eq.(3) where the align(·) function is a feedfor-
ward network with softmax normalization.

ct =
m∑

j=1

αt,jhj

αt,j = align(st,hj)

(3)

The hidden states st are updated as

st = f(st−1,yt−1, ct), (4)

428



Encoder

h1 h2 hm

Decoder

...

x1 x2 xm...

...

Attention

...

<s> y1 yn-1...

Ct

Softmax

y1 y2 yn...

1
~

tS

1tS

1ty...

...

Figure 1: The general architecture of our systems.

where f(·) is a recurrent function.
We adopt a varietal attention mechanism1 in our

system which is implemented as

s̃t = f1(st−1,yt−1),

αt,j = align(s̃t,hj),

st = f2(s̃t, ct),

(5)

where f1(·) and f2(·) are recurrent functions.
To construct deep network, we use the linear

associative unit (LAU) to ensure fluent gradient
propagation. The LAU is computed as

rt = σ(Wxrxt +Whrht−1),

zt = σ(Wxzxt +Whzht−1),

gt = σ(Wsgxt +Whght−1),

h̃t = tanh((1− rt)�Wxhxt +Whh(rt � ht−1)),
ht = ((1− zt)� ht−1 + zt � h̃t)� (1− gt) + gt
� (Wxxt)

(6)

where W∗ is the weight matrices, xt is the input at
time t and ht−1 is the hidden states at time t − 1.
The LAU allows the input linearly forward prop-
agates in a certain scale to acquire fluent gradi-
ent back propagation. It works like residual con-
nections (He et al., 2016) and fast-forward con-
nections (Zhou et al., 2016) and makes build deep
network possible. Our encoder is a 4 layers LAU
network where forward LAU and backward LAU
are alternately stacked. The general architecture
of our systems is shown in Figure 1.

3 Pipeline Description

We introduce the pipeline of building the transla-
tion systems from data preprocessing to post edit-

1https://github.com/nyu-dl/dl4mt-
tutorial/tree/master/session2

ing in this section.

3.1 Data Preprocessing

For English ↔ Chinese news translation task,
WMT 2017 provides tree parts of data: News
Commentary v12, UN Parallel Corpus V1.0 and
CWMT Corpus. We used all corpora to train
our translation systems. For English sentences,
the Moses tokenization script2 is employed to ex-
ecute the tokenization processing. For Chinese
sentences, we used our in-house word segmentor
called ”PBCLAS” to do the word segmentation.
The word segmentation criterion follows the Chi-
nese People’s Daily format. We filter the dupli-
cated sentences and the sentences that are too long
(more than 120 words) or too short (less than 5
words). The training corpus is case-sensitive.

3.2 Vocabulary

Our systems are based on the words rather than
sub-words (Sennrich et al., 2016; Wu et al., 2016).
For our system is serially trained on the single
GPU with restricted memory space, the source vo-
cabulary size is set to 100,000 and the target vo-
cabulary size is set to 50,000. The words that out
of the vocabulary are represented by the ”UNK”
symbol.

3.3 Training Details

The sentence length for training systems is up to
120. The word embedding dimension is set to 512
and the hidden layer size is 512. Square matrices
are initialized in a random orthogonal way. Non-
square matrices are initialized by sampling each
element from the Gaussian distribution with mean
0 and variance 0.012. All biases are initialized to
0. Parameters are updated by Mini-batch Gradi-
ent Descent and the learning rate is controlled by
the AdaDelta algorithm with the decay constant
ρ = 0.95 and the denominator constant � = 1e−6.
The batch size is 80. We use stochastic gradi-
ent descent with small learning rates as 0.0001 to
fine-tune the models. Dropout strategy (Srivastava
et al., 2014) is applied to the output layer with the
dropout rate 0.5 to avoid over-fitting. The gra-
dients of the cost function which have L2 norm
larger than a predefined threshold 1.0 is normal-
ized to the threshold to avoid gradients explosion
(Pascanu et al., 2013). We exploit length normal-

2https://github.com/moses-
smt/mosesdecoder/tree/master/scripts/tokenizer/tokenizer.perl

429



ization (Cho et al., 2014a) on candidate transla-
tions and the beam size for decoding is 12.

3.4 UNK Replace

As the vocabulary sizes are restricted, target sen-
tences may contain “UNK” symbols, which leads
to sense ambiguity. We attempt to extract a dictio-
nary to replace the “UNK” symbol in target sen-
tence. We use the “fast align” 3 word alignment
tool to generate the word alignment and extract
the dictionary through keeping the highest trans-
lation probability. We extract English→ Chinese
and Chinese→ English dictionaries in this way.

At the decoding stage of NMT, we regard
the source word that possesses highest alignment
probability as the one that generates the target
word. Once a “UNK” symbol is generated, we lo-
cate the corresponding source word and translate
it with the dictionary. If the source word is not
in the dictionary, it will be presented in the target
sentence.

3.5 Model Ensemble

To add the diversity of systems, we train sev-
eral models and combine them with the ensemble
strategy. These models are initialized with differ-
ent weight parameters. Each model produces the
probability distribution on the target vocabulary at
each step of decoding procedure. These proba-
bility distributions are averagely combined as the
ultimate distribution for beam searching. For our
UNK replace strategy, the word alignment vectors
that produced by models are also averagely com-
bined to determine the corresponding source word.

4 Experimental Results

4.1 English to Chinese

We ensemble 5 models for English to Chinese
translation. The performance of the system on
the validation set is presented in Table 1. We
figure that the ensemble strategy brings +0.86
BLEU points improvement and the UNK replace
approach provide further +1.57 BLEU points.

4.2 Chinese to English

We ensemble 6 models for Chinese to English
translation. Table 2 presents the performance of
system on the validation set. Same as the English

3https://github.com/clab/fast align

Model BLEU
Single Model 25.22
Ensemble 6 26.08+0.86

+UNK Replace 27.65+1.57

Table 1: The model performances on the valida-
tion set in English to Chinese direction.

to Chinese translation, the ensemble and UNK re-
place approaches can enhance the system perfor-
mance over a single model. The ensemble strategy
improves the system by +0.74 BLEU points and
the UNK replace approach achieves further +0.51
BLEU point gain. Table 3 shows the performance
of our systems on the test set.

Model BLEU-cased
Single Model 18.13
Ensemble 5 18.87+0.74

+ UNK Replace 19.38+0.51

Table 2: The model performances on the valida-
tion set in Chinese to English direction.

Direction BLEU BLEU-cased
English→ Chinese 30.5 30.5
Chinese→ English 23.4 22.3

Table 3: The performance of our systems on the
test set.

5 Conclusion

We present CASICT-DCU neural machine transla-
tion systems for the WMT17 shared news transla-
tion task on English↔Chinese language pair. The
Gated Recurrent Unit (GRU) with the linear asso-
ciative connection are employed to build the deep
encoder. We extract dictionaries from the parallel
training data with unsupervised word alignment
approach. We locate the source word that gener-
ates the ”UNK” symbol in target sentence accord-
ing to the word alignment vector and translate it
with the dictionary. In the decoding procedure, the
translation probabilities of the target word from
different models are averagely combined as the
ensemble strategy to further improve the perfor-
mance.

430



Acknowledgments

Qun Liu’s work is partially supported by Science
Foundation Ireland in the ADAPT Centre for Dig-
ital Content Technology (www.adaptcentre.ie) at
Dublin City University funded under the SFI Re-
search Centres Programme (Grant 13/RC/2106)
co-funded under the European Regional Develop-
ment Fund.

References
Dzmitry Bahdanau, Kyunghyun Cho, and Yoshua Ben-

gio. 2015. Neural machine translation by jointly
learning to align and translate. In Proceedings of
ICLR2015.

Kyunghyun Cho, Bart Van Merrienboer, Dzmitry Bah-
danau, and Yoshua Bengio. 2014a. On the prop-
erties of neural machine translation: Encoderde-
coder approaches. In Eighth Workshop on Syn-
tax,Semantics and Structure in Statistical Transla-
tion.

Kyunghyun Cho, Bart van Merrienboer, Caglar Gul-
cehre, Dzmitry Bahdanau, Fethi Bougares, Holger
Schwenk, and Yoshua Bengio. 2014b. Learning
phrase representations using rnn encoder–decoder
for statistical machine translation. In Proceedings
of EMNLP 2014. Doha, Qatar, pages 1724–1734.

Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian
Sun. 2016. Deep residual learning for image recog-
nition. In Proceedings of the IEEE Conference
on Computer Vision and Pattern Recognition. pages
770–778.

Nal Kalchbrenner and Phil Blunsom. 2013. Recur-
rent continuous translation models. In Proceedings
of EMNLP2013. Seattle, Washington, USA, pages
1700–1709.

Razvan Pascanu, Tomas Mikolov, and Yoshua Bengio.
2013. On the difficulty of training recurrent neural
networks. ICML (3) 28:1310–1318.

Rico Sennrich, Barry Haddow, and Alexandra Birch.
2016. Neural machine translation of rare words with
subword units. In Proceedings of ACL2016. pages
1715–1725.

Nitish Srivastava, Geoffrey E Hinton, Alex Krizhevsky,
Ilya Sutskever, and Ruslan Salakhutdinov. 2014.
Dropout: a simple way to prevent neural networks
from overfitting. Journal of Machine Learning Re-
search 15(1):1929–1958.

Ilya Sutskever, Oriol Vinyals, and Quoc V. Le. 2014.
Sequence to sequence learning with neural net-
works. CoRR abs/1409.3215.

Mingxuan Wang, Zhengdong Lu, Jie Zhou, and Qun
Liu. 2017. Deep neural machine translation with lin-
ear associative unit. CoRR abs/1705.00861.

Yonghui Wu, Mike Schuster, Zhifeng Chen, Quoc V
Le, Mohammad Norouzi, Wolfgang Macherey,
Maxim Krikun, Yuan Cao, Qin Gao, Klaus
Macherey, et al. 2016. Google’s neural ma-
chine translation system: Bridging the gap between
human and machine translation. arXiv preprint
arXiv:1609.08144 .

Matthew D Zeiler. 2012. Adadelta: an adaptive learn-
ing rate method. arXiv preprint arXiv:1212.5701 .

Jie Zhou, Ying Cao, Xuguang Wang, Peng Li, and Wei
Xu. 2016. Deep recurrent models with fast-forward
connections for neural machine translation. In Pro-
ceedings of EMNLP2016.

431


