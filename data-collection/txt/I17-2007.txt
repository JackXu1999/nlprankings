



















































Sequence to Sequence Learning for Event Prediction


Proceedings of the The 8th International Joint Conference on Natural Language Processing, pages 37–42,
Taipei, Taiwan, November 27 – December 1, 2017 c©2017 AFNLP

Sequence to Sequence Learning for Event Prediction

Dai Quoc Nguyen1, Dat Quoc Nguyen2, Cuong Xuan Chu3,
Stefan Thater1, Manfred Pinkal1

1Department of Computational Linguistics, Saarland University, Germany
{daiquocn, stth, pinkal}@coli.uni-saarland.de

2Department of Computing, Macquarie University, Australia
dat.nguyen@mq.edu.au

3Max Planck Institute for Informatics, Germany
cxchu@mpi-inf.mpg.de

Abstract

This paper presents an approach to the
task of predicting an event description
from a preceding sentence in a text. Our
approach explores sequence-to-sequence
learning using a bidirectional multi-layer
recurrent neural network. Our approach
substantially outperforms previous work
in terms of the BLEU score on two
datasets derived from WIKIHOW and DE-
SCRIPT respectively. Since the BLEU
score is not easy to interpret as a mea-
sure of event prediction, we complement
our study with a second evaluation that ex-
ploits the rich linguistic annotation of gold
paraphrase sets of events.

1 Introduction

We consider a task of event prediction which aims
to generate sentences describing a predicted event
from the preceding sentence in a text. The follow-
ing example presents an instruction in terms of a
sequence of contiguous event descriptions for the
activity of baking a cake:

Gather ingredients. Turn on oven. Combine
ingredients into a bowl. Pour batter in pan.
Put pan in oven. Bake for specified time.

The task is to predict event description “Put pan in
oven” from sentence “Pour batter in pan”, or how
to generate the continuation of the story, i.e., the
event following “Bake for specified time”, which
might be “Remove pan from oven”. Event predic-
tion models an important facet of semantic expec-
tation, and thus will contribute to text understand-
ing as well as text generation. We propose to em-

ploy sequence-to-sequence learning (SEQ2SEQ)
for this task.

SEQ2SEQ have received significant research at-
tention, especially in machine translation (Cho
et al., 2014; Sutskever et al., 2014; Bahdanau et al.,
2015; Luong et al., 2015), and in other NLP tasks
such as parsing (Vinyals et al., 2015; Dong and La-
pata, 2016), text summarization (Nallapati et al.,
2016) and multi-task learning (Luong et al., 2016).
In general, SEQ2SEQ uses an encoder which typ-
ically is a recurrent neural network (RNN) (El-
man, 1990) to encode a source sequence, and then
uses another RNN which we call decoder to de-
code a target sequence. The goal of SEQ2SEQ
is to estimate the conditional probability of gen-
erating the target sequence given the encoding
of the source sequence. These characteristics of
SEQ2SEQ allow us to approach the event predic-
tion task. SEQ2SEQ has been applied to text pre-
diction by Kiros et al. (2015) and Pichotta and
Mooney (2016). We also use SEQ2SEQ for pre-
diction of what comes next in a text. However,
there are several key differences.

• We collect a new dataset based on the largest
available resource of instructional texts, i.e.,
WIKIHOW1, consisting of pairs of adjacent
sentences, which typically describe contigu-
ous members of an event chain characterizing
a complex activity. We also present another
dataset based on the DESCRIPT corpus—a
crowdsourced corpus of event sequence de-
scriptions (Wanzare et al., 2016). While the
WIKIHOW-based dataset helps to evaluate
the models in an open-domain setting, the
DESCRIPT-based dataset is used to evaluate
the models in a closed-domain setting.

1www.wikihow.com

37



• Pichotta and Mooney (2016) use the BLEU
score (Papineni et al., 2002) for evaluation
(i.e., the standard evaluation metric used in
machine translation), which measures sur-
face similarity between predicted and actual
sentences. We complement this evaluation
by measuring prediction accuracy on the se-
mantic level. To this purpose, we use the
gold paraphrase sets of event descriptions in
the DESCRIPT corpus, e.g., “Remove cake”,
“Remove from oven” and “Take the cake out
of oven” belong to the same gold paraphrase
set of taking out oven. The gold paraphrase
sets allow us to access the correctness of the
prediction which could not be attained by us-
ing the BLEU measure.

• We explore multi-layer RNNs which have
currently shown the advantage over sin-
gle/shallow RNNs (Sutskever et al., 2014;
Vinyals et al., 2015; Luong et al., 2015). We
use a bidirectional RNN architecture for the
encoder and examine the RNN decoder with
or without attention mechanism. We achieve
better results than previous work in terms of
BLEU score.

2 Sequence to Sequence Learning

Given a source sequence x1, x2, ..., xm and a tar-
get sequence y1, y2, ..., yn, sequence to sequence
learning (SEQ2SEQ) is to estimate the conditional
probability Pr(y1, y2, ..., yn | x1, x2, ..., xm)
(Sutskever et al., 2014; Cho et al., 2014; Bah-
danau et al., 2015; Vinyals et al., 2015; Luong
et al., 2016). Typically, SEQ2SEQ consists of a
RNN encoder and a RNN decoder. The RNN
encoder maps the source sequence into a vector
representation c which is then fed as input to the
decoder for generating the target sequence.

We use a bidirectional RNN (BiRNN) architec-
ture (Schuster and Paliwal, 1997) for mapping the
source sequence x1, x2, ..., xm into the list of en-
coder states se1, s

e
2, ..., s

e
m.

The RNN decoder is able to work with or with-
out attention mechanism. When not using atten-
tion mechanism (Sutskever et al., 2014; Cho et al.,
2014), the vector representation c is the last state
sem of the encoder, which is used to initialize the
decoder. Then, at the timestep i (1 ≤ i ≤ n), the
RNN decoder takes into account the hidden state
sdi−1 and the previous input yi−1 to output the hid-
den state sdi and generate the target yi.

Attention mechanism allows the decoder to at-
tend to different parts of the source sequence at
one position of a timestep of generating the tar-
get sequence (Bahdanau et al., 2015; Luong et al.,
2015; Vinyals et al., 2015). We adapt the attention
mechanism proposed by Vinyals et al. (2015) to
employ a concatenation of the hidden state sdi and
the vector representation c to make predictions at
the timestep i.

We use two advanced variants of RNNs that re-
place the cells of RNNs with the Long Sort Term
Memory (LSTM) cells (Hochreiter and Schmid-
huber, 1997) and the Gated Recurrent Unit (GRU)
cells (Cho et al., 2014). We also use a deeper ar-
chitecture of multi-layers, to model complex inter-
actions in the context. This is different from Kiros
et al. (2015) and Pichotta and Mooney (2016)
where they only use a single layer. So we in fact
experiment with Bidirectional-LSTM multi-layer
RNN (BiLSTM) and Bidirectional-GRU multi-
layer RNN (BiGRU).

3 Experiments

3.1 Datasets

Figure 1: An WIKIHOW activity example.

WIKIHOW-based dataset: WIKIHOW is the
largest collection of “how-to” tasks, created by
an online community, where each task is repre-
sented by sub-tasks with detailed descriptions and
pictorial illustrations, e.g., as shown in Figure 1.
We collected 168K articles (e.g., “Bake-a-Cake”)
consisting of 238K tasks (e.g., “Making Vanilla
Pound Cake”) and approximately 1.59 millions
sub-tasks (e.g., “Gather your ingredients”, “Pre-
heat the oven to 325 degrees”), representing a
wide variety of activities and events. Then we cre-
ated a corpus of approximately 1.34 million pairs
of subsequent sub-tasks (i.e., source and target

38



sentences for the SEQ2SEQ model), for which we
have the training set of approximately 1.28 million
pairs, the development and test sets of 26,800 pairs
in each. This dataset aims to evaluate the models
in an open-domain setting where the predictions
can go into many kinds of directions.

DESCRIPT-based dataset: The DESCRIPT cor-
pus (Wanzare et al., 2016) is a crowdsourced cor-
pus of event sequence descriptions on 40 different
scenarios with approximately 100 event sequence
descriptions per scenario. In addition, the corpus
includes the gold paraphrase sets of event descrip-
tions. From the DESCRIPT corpus, we create a
new corpus of 29,150 sentence pairs of an event
and its next contiguous event. Then, for each 10
sentence pairs, the 5th and 10th pairs are used for
the development and test sets respectively, and 8
remaining pairs are used for the training set. Thus,
each of the development and test sets has 2,915
pairs, and the training set has 23,320 pairs. This
dataset helps to assess the models in a closed-
domain setting where the goal is trying to achieve
a reasonable accuracy.

3.2 Implementation details

The models are implemented in TensorFlow
(Abadi et al., 2016) and trained with/without at-
tention mechanism using the training sets. Then,
given a source sentence describing an event as
input, the trained models are used to generate
a sentence describing a predicted event. We
use the BLEU metric (Papineni et al., 2002) to
evaluate the generated sentences against the tar-
get sentences corresponding to the source sen-
tences. A SEQ2SEQ architecture using a single
layer adapted by Pichotta and Mooney (2016) is
treated as the BASELINE model.

We found vocabulary sizes of 30,000 and
5,000 most frequent words as optimal for the
WIKIHOW and DESCRIPT-based datasets, re-
spectively. Words not occurring in the vocabu-
lary are mapped to a special token UNK. Word
embeddings are initialized using the pre-trained
300-dimensional word embeddings provided by
Word2Vec (Mikolov et al., 2013) and then up-
dated during training. We use two settings
of a single BiLSTM/BiGRU layer (1-LAYER-
BISEQ2SEQ) and two BiLSTM/BiGRU layers (2-
LAYER-BISEQ2SEQ). We use 300 hidden units
for both encoder and decoder. Dropout (Srivas-
tava et al., 2014) is applied with probability of 0.5.

The training objective is to minimize the cross-
entropy loss using the Adam optimizer (Kingma
and Ba, 2015) and a mini-batch size of 64. The
initial learning rate for Adam is selected from
{0.0001, 0.0005, 0.001, 0.005, 0.01}. We run up
to 100 training epochs, and we monitor the BLEU
score after each training epoch and select the best
model which produces highest BLEU score on the
development set.

3.3 Evaluation using BLEU score

Table 1 presents our BLEU scores with models
trained on WIKIHOW and DESCRIPT-based data
on the respective test sets. There are significant
differences in attending to the WIKIHOW sen-
tences and the DESCRIPT sentences. The BLEU
scores between the two datasets cannot be com-
pared because of the much larger degree of varia-
tion in WIKIHOW. The scores reported in Pichotta
and Mooney (2016) on WIKIPEDIA are not com-
parable to our scores for the same reason.

Model WIKIHOW DESCRIPT
GRU LSTM GRU LSTM

BASELINENON-ATT 1.67 1.68 4.31 4.69
1-LAYER-BISEQ2SEQNON-ATT 2.21 2.01 4.85 5.15
2-LAYER-BISEQ2SEQNON-ATT 2.53 2.69 4.98 5.42
BASELINEATT 1.86 2.03 4.03 4.01
1-LAYER-BISEQ2SEQATT 2.53 2.58 4.38 4.47
2-LAYER-BISEQ2SEQATT 2.86 2.81 4.76 5.29

Table 1: The BLEU scores on the DESCRIPT and
WIKIHOW-based test sets. We use subscripts ATT
and NON-ATT to denote models with and without
using attention mechanism, respectively.

Table 1 shows that 1-LAYER-BISEQ2SEQ ob-
tains better results than the strong BASELINE.
Specifically, 1-LAYER-BISEQ2SEQ improves the
baselines with 0.3+ BLEU in both cases of ATT
and NON-ATT, indicating the usefulness of using
bidirectional architecture. Furthermore, the two-
layer architecture produces better scores than the
single layer architecture. Using more layers can
help to capture prominent linguistic features, that
is probably the reason why deeper layers empiri-
cally work better.

As shown in Table 1, the GRU-based models
obtains similar results to the LSTM-based mod-
els on the WIKIHOW-based dataset, but achieves
lower scores on the DESCRIPT-based dataset.
This could show that LSTM cells with memory
gate may help to better remember linguistic fea-

39



≤ 5 ≤ 10 > 10
0

2

4

6

8

10

5.49

4.37

1.52

6.19

4.21
3.6

4.9
5.54

3.19

5.93
5.45

0.1

Sentence length

B
L

E
U

sc
or

e
GRUATT LSTMATT

GRUNON-ATT LSTMNON-ATT

Figure 2: The BLEU scores of two-layer BiLSTM
BISEQ2SEQ with/without attention on the DE-
SCRIPT-based test set with respect to the source
sentence lengths.

tures than GRU cells without memory gate for the
closed-domain setting.

The ATT model outperforms the NON-ATT
model on the WIKIHOW-based dataset, but not on
the DESCRIPT-based dataset. This is probably be-
cause neighboring WIKIHOW sentences (i.e., sub-
task headers) are more parallel in structure (see
“Pour batter in pan” and “Put pan in oven” from
the initial example), which could be related to the
fact that they are in general shorter. Figure 2 shows
that the ATT model actually works well for DE-
SCRIPT pairs with a short source sentence, while
its performance decreases with longer sentences.

3.4 Evaluation based on paraphrase sets

BLEU scores are difficult to interpret for the task:
BLEU is a surface-based measure as mentioned in
(Qin and Specia, 2015), while event prediction is
essentially a semantic task. Table 2 shows output
examples of the two-layer BILSTM SEQ2SEQ
NON-ATT on the DESCRIPT-based dataset. Al-
though the target and predicted sentences have
different surface forms, they are perfect para-
phrases of the same type of event.

To assess the semantic success of the predic-
tion model, we use the gold paraphrase sets of
event descriptions provided by the DESCRIPT cor-
pus for 10 of its scenarios. We consider a subset of
682 pairs, for which gold paraphrase information
is available, and check, whether a target event and
its corresponding predicted event are paraphrases,

Source: combine and mix all the ingredients as the
recipe delegates

Target: pour ingredients into a cake pan
Predicted: put batter into baking pan
Source: put cake into oven
Target: wait for cake to bake
Predicted: bake for specified time
Source: make an appointment with your hair stylist
Target: go to salon for appointment
Predicted: drive to the barber shop

Table 2: Prediction examples.

Model Accuracy (%)
BASELINENON-ATT 23.9
1-LAYER-BISEQ2SEQNON-ATT 27.3
2-LAYER-BISEQ2SEQNON-ATT 24.0
BASELINEATT 23.6
1-LAYER-BISEQ2SEQATT 23.0
2-LAYER-BISEQ2SEQATT 25.5

Table 3: The accuracy results of the LSTM-based
models on the subset of 682 pairs.

i.e., belong to the same gold paraphrase set.
The accuracy results are given in Table 3 for

the same LSTM-based models taken from Section
3.3. Accuracy is measured as the percentage of
predicted sentences that occur token-identical in
the paraphrase set of the corresponding target sen-
tences. Our best model outperforms Pichotta and
Mooney (2016)’s BASELINE by 3.4%.

Since the DeScript gold sets do not contain
all possible paraphrases, an expert (computational
linguist) checked cases of near misses between
Target and Predicted (i.e. similar to the cases
shown in Table 2) in a restrictive manner, not
counting borderline cases. So we achieve a final
average accuracy of about 31%, which is the sum
of an average accuracy over 6 models in Table 3
(24%) and an average accuracy (7%) of checking
cases of near misses (i.e, Target and Predicted are
clearly event paraphrases).

The result does not look really high, but the task
is difficult: on average, one out of 26 paraphrase
sets (i.e., event types) per scenario has to be pre-
dicted, the random baseline is about 4% only. Also
we should be aware that the task is prediction of
an unseen event, not classification of a given event
description. Continuations of a story are under-
determined to some degree, which implies that the
upper bound for human guessing cannot be 100 %,
but must be substantially lower.

40



4 Conclusions

In this paper, we explore the task of event pre-
diction, where we aim to predict a next event
addressed in a text based on the description
of the preceding event. We created the new
open-domain and closed-domain datasets based on
WIKIHOW and DESCRIPT which are available to
the public at: https://github.com/daiquocnguyen/
EventPrediction. We demonstrated that more ad-
vanced SEQ2SEQ models with a bidirectional and
multi-layer RNN architecture substantially outper-
form the previous work. We also introduced an
alternative evaluation method for event prediction
based on gold paraphrase sets, which focuses on
semantic agreement between the target and pre-
dicted sentences.

Acknowledgments

This research was funded by the German Research
Foundation (DFG) as part of SFB 1102 “Informa-
tion Density and Linguistic Encoding.” We would
like to thank Hannah Seitz for her kind help and
support. We thank anonymous reviewers for their
helpful comments.

References
Martı́n Abadi, Ashish Agarwal, Paul Barham, Eugene

Brevdo, Zhifeng Chen, Craig Citro, Gregory S. Cor-
rado, Andy Davis, Jeffrey Dean, Matthieu Devin,
Sanjay Ghemawat, Ian J. Goodfellow, Andrew Harp,
Geoffrey Irving, Michael Isard, Yangqing Jia, Rafal
Józefowicz, Lukasz Kaiser, Manjunath Kudlur, Josh
Levenberg, Dan Mané, Rajat Monga, Sherry Moore,
Derek Gordon Murray, Chris Olah, Mike Schuster,
Jonathon Shlens, Benoit Steiner, Ilya Sutskever, Ku-
nal Talwar, Paul A. Tucker, Vincent Vanhoucke, Vi-
jay Vasudevan, Fernanda B. Viégas, Oriol Vinyals,
Pete Warden, Martin Wattenberg, Martin Wicke,
Yuan Yu, and Xiaoqiang Zheng. 2016. Tensor-
Flow: Large-Scale Machine Learning on Heteroge-
neous Distributed Systems. Software available from
http://tensorflow.org/.

Dzmitry Bahdanau, Kyunghyun Cho, and Yoshua Ben-
gio. 2015. Neural machine translation by jointly
learning to align and translate. In Proceedings of
the 3rd International Conference on Learning Rep-
resentations.

Kyunghyun Cho, Bart van Merrienboer, Caglar Gul-
cehre, Dzmitry Bahdanau, Fethi Bougares, Hol-
ger Schwenk, and Yoshua Bengio. 2014. Learn-
ing Phrase Representations using RNN Encoder–
Decoder for Statistical Machine Translation. In Pro-
ceedings of the 2014 Conference on Empirical Meth-

ods in Natural Language Processing, pages 1724–
1734.

Li Dong and Mirella Lapata. 2016. Language to logi-
cal form with neural attention. In Proceedings of the
54th Annual Meeting of the Association for Compu-
tational Linguistics (Volume 1: Long Papers), pages
33–43.

Jeffrey L. Elman. 1990. Finding structure in time.
Cognitive Science, pages 179–211.

Sepp Hochreiter and Jürgen Schmidhuber. 1997. Long
short-term memory. Neural Computation, pages
1735–1780.

Diederik P. Kingma and Jimmy Ba. 2015. Adam: A
method for stochastic optimization. In Proceed-
ings of the 3rd International Conference on Learn-
ing Representations.

Ryan Kiros, Yukun Zhu, Ruslan Salakhutdinov,
Richard S. Zemel, Antonio Torralba, Raquel Urta-
sun, and Sanja Fidler. 2015. Skip-thought vectors.
In Proceedings of the 28th International Conference
on Neural Information Processing Systems, pages
3294–3302.

Minh-Thang Luong, Quoc V. Le, Ilya Sutskever, Oriol
Vinyals, and Lukasz Kaiser. 2016. Multi-task se-
quence to sequence learning. In Proceedings of the
4th International Conference on Learning Represen-
tations.

Minh-Thang Luong, Hieu Pham, and Christopher D.
Manning. 2015. Effective approaches to attention-
based neural machine translation. In Proceedings of
the 2015 Conference on Empirical Methods in Nat-
ural Language Processing, pages 1412–1421.

Tomas Mikolov, Ilya Sutskever, Kai Chen, Gregory S.
Corrado, and Jeffrey Dean. 2013. Distributed rep-
resentations of words and phrases and their com-
positionality. In Advances in Neural Information
Processing Systems 26: 27th Annual Conference on
Neural Information Processing Systems 2013, pages
3111–3119.

Ramesh Nallapati, Bowen Zhou, Cicero dos Santos,
Caglar Gulcehre, and Bing Xiang. 2016. Ab-
stractive Text Summarization using Sequence-to-
sequence RNNs and Beyond. In Proceedings of the
20th SIGNLL Conference on Computational Natural
Language Learning, pages 280–290.

Kishore Papineni, Salim Roukos, Todd Ward, and Wei-
Jing Zhu. 2002. Bleu: A method for automatic eval-
uation of machine translation. In Proceedings of the
40th Annual Meeting on Association for Computa-
tional Linguistics, pages 311–318.

Karl Pichotta and Raymond J. Mooney. 2016. Using
sentence-level lstm language models for script infer-
ence. In Proceedings of the 54th Annual Meeting of
the Association for Computational Linguistics (Vol-
ume 1: Long Papers), pages 279–289.

41



Ying Qin and Lucia Specia. 2015. Truly exploring
multiple references for machine translation evalua-
tion. In Proceedings of the 18th Annual Conference
of the European Association for Machine Transla-
tion, pages 113–120.

M. Schuster and K.K. Paliwal. 1997. Bidirectional re-
current neural networks. IEEE Transactions on Sig-
nal Processing, pages 2673–2681.

Nitish Srivastava, Geoffrey Hinton, Alex Krizhevsky,
Ilya Sutskever, and Ruslan Salakhutdinov. 2014.
Dropout: A simple way to prevent neural networks
from overfitting. Journal of Machine Learning Re-
search, pages 1929–1958.

Ilya Sutskever, Oriol Vinyals, and Quoc V. Le. 2014.
Sequence to sequence learning with neural net-
works. In Proceedings of the 27th International
Conference on Neural Information Processing Sys-
tems, pages 3104–3112.

Oriol Vinyals, Lukasz Kaiser, Terry Koo, Slav Petrov,
Ilya Sutskever, and Geoffrey Hinton. 2015. Gram-
mar as a foreign language. In Advances in Neu-
ral Information Processing Systems 28, pages 2773–
2781.

Lilian D. A. Wanzare, Alessandra Zarcone, Stefan
Thater, and Manfred Pinkal. 2016. Descript: A
crowdsourced corpus for the acquisition of high-
quality script knowledge. In Proceedings of the
Tenth International Conference on Language Re-
sources and Evaluation, pages 3494–3501.

42


