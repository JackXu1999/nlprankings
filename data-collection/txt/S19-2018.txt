



















































HHMM at SemEval-2019 Task 2: Unsupervised Frame Induction using Contextualized Word Embeddings


Proceedings of the 13th International Workshop on Semantic Evaluation (SemEval-2019), pages 125–129
Minneapolis, Minnesota, USA, June 6–7, 2019. ©2019 Association for Computational Linguistics

125

HHMM at SemEval-2019 Task 2: Unsupervised Frame Induction using
Contextualized Word Embeddings

Saba Anwar?, Dmitry Ustalov†, Nikolay Arefyev‡, §, Simone Paolo Ponzetto†,
Chris Biemann?, and Alexander Panchenko?,�

?Language Technology Group, Department of Informatics, University of Hamburg, Germany
�Skolkovo Institute of Science and Technology, Russia

{anwar,biemann,panchenko}@informatik.uni-hamburg.de
†Data and Web Science Group, University of Mannheim, Germany
{dmitry,simone}@informatik.uni-mannheim.de

‡Samsung R&D Institute Russia
§Lomonosov Moscow State University, Russia

narefyev@cs.msu.ru

Abstract

We present our system for semantic frame in-
duction that showed the best performance in
Subtask B.1 and finished as the runner-up in
Subtask A of the SemEval 2019 Task 2 on un-
supervised semantic frame induction (Qasem-
iZadeh et al., 2019). Our approach separates
this task into two independent steps: verb clus-
tering using word and their context embed-
dings and role labeling by combining these
embeddings with syntactical features. A sim-
ple combination of these steps shows very
competitive results and can be extended to pro-
cess other datasets and languages.

1 Introduction

Recent years have seen a lot of interest in
computational models of frame semantics, with
the availability of annotated sources like Prop-
Bank (Palmer et al., 2005) and FrameNet (Baker
et al., 1998). Unfortunately, such annotated re-
sources are very scarce due to their language and
domain specificity. Consequently, there has been
work that investigated methods for unsupervised
frame acquisition and parsing (Lang and Lapata,
2010; Modi et al., 2012; Kallmeyer et al., 2018;
Ustalov et al., 2018). Researchers have used
different approaches to induce frames, includ-
ing clustering verb-specific arguments as per their
roles (Lang and Lapata, 2010), subject-verb-object
triples (Ustalov et al., 2018), syntactic depen-
dency representation using dependency formats
like CoNLL (Modi et al., 2012; Titov and Kle-
mentiev, 2012), and latent-variable PCFG mod-
els (Kallmeyer et al., 2018).

The SemEval 2019 task of semantic frame and
role induction consists of three subtasks: (A)

learning the frame type of the highlighted verb
from the context in which it has been used; (B.1)
clustering the highlighted arguments of the verb
into specific roles as per the frame type of that
verb, e.g., Buyer, Goods, etc.; (B.2) clustering
the arguments into generic roles as per VerbNet
classes (Schuler, 2005), without considering the
frame type of the verb, i.e., Agent, Theme, etc.

Our approach to frame induction is similar to
the word sense induction approach by Arefyev
et al. (2018), which uses tf–idf-weighted context
word embeddings for a shared task on word sense
induction by Panchenko et al. (2018). In this unsu-
pervised task, our approach for clustering mainly
consists of exploring the effectiveness of already
available pre-trained models.1 Main contributions
of this paper are:

1. a method that uses contextualized distribu-
tional word representations (embeddings) for
grouping verbs to frame type clusters (Sub-
task A);

2. a method that combines word and con-
text embeddings for clustering arguments of
verbs to frame slots (Subtasks B.1 and B.2).

The key difference of our approach with re-
spect to prior work by Arefyev et al. (2018) and
Kallmeyer et al. (2018) is that we have only used
pre-trained embeddings to disambiguate the verb
senses and then combined these embeddings with
additional features for semantic labeling of the
verb roles.2

1HHMM is an abbreviation for Hansestadt Hamburg,
Mannheim, and Moscow. It is chosen to avoid confusion with
hidden Markov models.

2Our code is available at https://github.com/
uhh-lt/semeval2019-hhmm.

https://github.com/uhh-lt/semeval2019-hhmm
https://github.com/uhh-lt/semeval2019-hhmm


126

The remainder of the paper is organized as fol-
lows. The methodology and the results for each
subtask are discussed in Sections 2, 3 and 4 re-
spectively, followed by the conclusion in Sec-
tion 5.

2 Subtask A: Grouping Verbs to Frame
Type Clusters

In this subtask, each sentence has a highlighted
verb, which is usually the predicate. The goal is to
label each highlighted verb according to the frame
evoked by the sentence. The gold standard for this
subtask is based on the FrameNet (Baker et al.,
1998) definitions for frames.

2.1 Method

Since sentences evoking the same frame should
receive the same labels, we used a verb cluster-
ing approach and experimented with a number of
pre-trained word and sentence embeddings mod-
els, namely Word2Vec (Mikolov et al., 2013),
ELMo (Peters et al., 2018), Universal Sentence
Embeddings (Conneau et al., 2017), and fast-
Text (Bojanowski et al., 2017). This setup is sim-
ilar to treating the frame induction task as a word
sense disambiguation task (Brown et al., 2011).

We experimented with embedding different lex-
ical units, such as verb (V), its sentence (context,
C), subject-verb-object (SVO) triples, and verb ar-
guments. Combination of context and word rep-
resentations (C+W) from Word2Vec and ELMo
turned out to be the best combination in our case.

We used the standard Google News Word2Vec
embedding model by Mikolov et al. (2013). Since
this model is trained on individual words only and
the SemEval dataset contained phrasal verbs, such
as fall back and buy out, we have considered only
the first word in the phrase. If this word is not
present in the model vocabulary, we fall back to
a zero-filled vector. When aggregating a context
into a vector, we used the tf–idf-weighted average
of the word embeddings for this context as pro-
posed by Arefyev et al. (2018). We tuned these
weights on the development dataset.

We used the ELMo contextualized embedding
model by Peters et al. (2018) that generates
vectors of a whole context. Similarly to fast-
Text (Bojanowski et al., 2017), ELMo can produce
character-level word representations to handle out-
of-vocabulary words. In all our experiments we
used the same pre-trained ELMo model available

Method Pu F1 B3 F1

t w2v[C+W]norm 76.68 68.10
¨ ELMo[C+W]norm 77.03 69.50

A Cluster Per Verb 73.78 65.35
3 Winner 78.15 70.70

Table 1: Our results on Subtask A: Grouping Verbs to
Frame Type Clusters. Purity F1-score is denoted as Pu
F1, B-Cubed F1-score is denoted as B3 F1. t denotes
our final submission (# 536426), ¨ denotes our post-
competition result, A denotes a baseline, and 3 de-
notes the submission of the winning team.

on TensorFlow Hub.3 Among all the layers of this
model, we used the mean-pooling layer for word
and context embeddings.

2.2 Results and Discussion

We experimented with different clustering algo-
rithms provided by scikit-learn (Pedregosa et al.,
2011), namely agglomerative clustering, DB-
SCAN, and affinity propagation. After the model
selection on the development dataset, we have
chosen agglomerative clustering for further eval-
uation. Although both ELMo and Word2Vec
showed the best results on the development dataset
with single linkage, we opted average linkage after
analyzing t-SNE plots (van der Maaten and Hin-
ton, 2008).

Table 1 shows our results obtained on Sub-
task A. Our final submission (t) used agglom-
erative clustering of normalized vectors obtained
by concatenating the context and verb vectors
from the Word2Vec model. In particular, we
found that the best performance is attained for
Manhattan affinity and 150 clusters. During our
post-competition experiments (¨), we found that
ELMo performed better than Word2Vec when a
higher number of clusters, 235, was specified.

3 Subtask B.1: Clustering Arguments of
Verbs to Frame-Specific Slots

In this subtask, each sentence has a set of high-
lighted nouns or noun phrases corresponding to
the slots of the evoked frame. Additionally, each
sentence is provided with the same highlighted
verb as in Subtask A (Section 2). The goal is
to label each highlighted verb according to the
evoked frame and to assign each highlighted to-

3https://tfhub.dev/google/elmo/2

https://tfhub.dev/google/elmo/2


127

Method Pu F1 B3 F1
Agglomerative Clustering

t
Subtask A: w2v[C+W]

62.10 49.49
Subtask B.2: ID

Logistic Regression

�
Subtask A: w2v[C+W]norm

66.81 55.61
Subtask B.2: ELMo[C+W+V]+ID+B+123

¨
Subtask A: ELMo[C+W]norm

68.22 58.61
Subtask B.2: w2v[C+W+V]+ID+B+123

A Cluster Per Dependency Role 57.99 45.79
3 Winner 62.10 49.49

Table 2: Our results on Subtask B.1: Clustering Ar-
guments of Verbs to Frame-Specific Slots. Purity F1-
score is denoted as Pu F1, B-Cubed F1-score is denoted
as B3 F1. t denotes our final submission (# 535483),
� denotes a supervised Logistic Regression submission
that does not comply to the task rules, ¨ denotes our
post-competition result, A denotes a baseline, and 3
denotes the submission of the winning team.

ken a frame-specific semantic role identifier. The
gold standard for this subtask is annotated with
FrameNet frames and roles (Baker et al., 1998).

3.1 Method

Since Subtask B.1 asks to assign role labels to
highlighted tokens as per the frame type of the
verb, we attempted this by merging the output of
verb frame types from Subtask A (Section 2) and
the output of generic role labels from Subtask B.2
(Section 4). We used UKN (unknown) slot identi-
fier for the tokens present in Subtask B.1, but miss-
ing in Subtask B.2.

3.2 Results and Discussion

Table 2 shows the results from merging our so-
lutions for Subtasks A and B.2, as described in
Sections 2 and 4, correspondingly. For our final
submission (t), we merged the frame types ob-
tained by clustering the Word2Vec embeddings of
the sentence (context, C) and verb (word, W), and
the role labels obtained by clustering the vector
of inbound dependencies (ID). However, we ob-
served that the logistic regression model demon-
strated better performance in Subtask B.2 than any
clustering technique we tried, including our final
submission (t) and the baselines. But this per-
formance was further improved by combining the
results from post-competition experiments of Sub-
task A and Subtask B.2 (¨).

4 Subtask B.2: Clustering Arguments of
Verbs to Generic Roles

In Subtask B.2, similarly to Subtask B.1 (Sec-
tion 3), each sentence has a set of highlighted
nouns or noun phrases that correspond to the slots
of the evoked frame. The goal is to label each
highlighted token with a high-level generic class,
such as Agent or Patient. However, unlike Sub-
task B.1, the verb frame labeling part is omitted.
The gold standard for this subtask is annotated as
according to the VerbNet classes (Schuler, 2005).

4.1 Method

When addressing this subtask, we experimented
with combining the embeddings of the word (W)
filling the role, its sentence (context, C), and
the highlighted verb (V). To handle the out-of-
vocabulary roles in the case of Word2Vec embed-
dings, each role was tokenized and embeddings
for each token were averaged. If a token is still not
present in the vocabulary, then a zero-filled vector
was used as its embedding. During prototyping
we developed several features that improved the
performance score, namely inbound dependencies
(ID), which represent the dependency label from
the head to the role (dependent) and two trivial
baselines: Boolean (B) and 123.

We built a negative one-hot encoding feature
vector to represent the inbound dependencies of
the word corresponding to the role. Thus, for each
dependency of the given role (in case of a multi-
word expression), we fill -1 if the dependency re-
lationship holds, otherwise 0 is filled. During our
experiments for the development test, we also used
the outbound dependencies, which represent the
dependency label from the role (head) to the de-
pendent words. So we used -1 for inbound and 1
for outbound. But since they did not perform well
in comparison to inbound dependencies, they were
not considered for submitted runs.

For the Boolean baseline, given the position of
the verb in the sentence pv and the position of the
target token pt, we assign the role 0 to t if pv < pt,
otherwise 1. For the 123 baseline, we assign its
index to each highlighted slot filler. For example,
if five slots need to be labelled, the first one will be
labelled as 1 and the last one will be labelled as 5.

4.2 Results and Discussion

Table 3 shows our results on Subtask B.2. We
found that the trivial Boolean approach outper-



128

Method Pu F1 B3 F1
Agglomerative Clustering
t w2v[C]+ID 62.00 42.10
¨ ELMo[C]+ID 50.37 34.89

Logistic Regression
� ELMo[C+W+V]+ID+B+123 73.14 57.37
¨ w2v[C+W+V]+ID+B+123 74.36 58.83

A
Cluster Per Dependency Role 56.05 39.03
Boolean Baseline 67.16 46.78
Inbound Dependencies (ID) 66.05 45.77

3 Winner 64.16 45.65

Table 3: Our results on Subtask B.2: Clustering Ar-
guments of Verbs to Generic Roles. Purity F1-score
is denoted as Pu F1, B-Cubed F1-score is denoted as
B3 F1. t denotes our final submission (# 535480), �
denotes a supervised Logistic Regression submission
that does not comply to the task rules, ¨ denotes our
post-competition result, A denotes a baseline, and 3
denotes the submission of the winning team.

formed LPCFG (Kallmeyer et al., 2018) and all
the standard baselines, including cluster per de-
pendency role (OneClustPerGrType), on the
development dataset.4

Similarly to our solution for Subtask A (Sec-
tion 2), we tried different clustering algorithms
to cluster arguments of verbs to generic roles
and found that the best clustering performance is
shown by agglomerative clustering with Euclidean
affinity, Ward’s method linkage, and two clusters.
Our final submission (t) used the combination
of inbound dependencies and Word2Vec embed-
ding for sentence (context, C), which performed
marginally better than the cluster per dependency
role (OneClustPerGrType) baseline, but still
not better than such trivial baselines as Boolean or
123. Replacing Word2Vec with ELMo in our post-
competition experiments have lowered the perfor-
mance further.

In order to estimate our upper bound of the per-
formance, we compared our best-performing clus-
tering algorithm, i.e., agglomerative clustering, to
a logistic regression model. We found that the
combination of sentence (context, C), target word
(W), and verb (V) vectors, enhanced with our other
features, shows substantially better results than a
simple clustering model (�). However, we did not
observe a noticeable difference between the per-

4On the development dataset for Subtask B.2, the Boolean
baseline demonstrated B-Cubed F1 = 57.98, while LPCFG
and cluster per dependency role yielded F1 = 40.05 and
F1 = 50.79, correspondingly.

formance of the underlying embedding models.
As the model was trained on the development

dataset that contained 20 roles in contrast to the
test set which contained 32 roles, this approach
has its limitations due to this difference of the
number and meaning of roles. We believe that
the performance could be improved using semi-
supervised clustering methods, yet during proto-
typing with the pairwise-constrained k-Means al-
gorithm (Basu et al., 2004) we did not observe any
performance improvements.

5 Conclusion

We presented an approach for unsupervised se-
mantic frame and role induction that uses word
and context embeddings. It separates the task into
two independent steps: verb clustering and role
labelling, using combination of these embeddings
enhanced with syntactical features. Our approach
showed the best performance in Subtask B.1 and
also finished as the runner-up in Subtask A of this
shared task, and it can be easily extended to pro-
cess other datasets and languages.

Acknowledgments

We acknowledge the support of the Deutsche For-
schungsgemeinschaft (DFG) under the “JOIN-T”
and “ACQuA” projects and the German Academic
Exchange Service (DAAD). We thank the Sem-
Eval organizers for an inspiring shared task and
their quick responses to all our questions. We are
grateful to four anonymous reviewers who offered
useful comments. Finally, we thank the Linguis-
tic Data Consortium (LDC) for the provided Penn
Treebank dataset (Marcus et al., 1993).

References

Nikolay Arefyev, Pavel Ermolaev, and Alexander
Panchenko. 2018. How much does a word weight?
Weighting word embeddings for word sense in-
duction. In Computational Linguistics and Intel-
lectual Technologies: Papers from the Annual In-
ternational Conference “Dialogue”, pages 68–84,
Moscow, Russia. RSUH.

Collin F. Baker, Charles J. Fillmore, and John B. Lowe.
1998. The Berkeley FrameNet Project. In Pro-
ceedings of the 36th Annual Meeting of the Associ-
ation for Computational Linguistics and 17th Inter-
national Conference on Computational Linguistics
- Volume 1, ACL ’98, pages 86–90, Montréal, QC,
Canada. Association for Computational Linguistics.

http://www.dialog-21.ru/media/4538/arefyevn_ermolaevp_panchenkoa.pdf
http://www.dialog-21.ru/media/4538/arefyevn_ermolaevp_panchenkoa.pdf
http://www.dialog-21.ru/media/4538/arefyevn_ermolaevp_panchenkoa.pdf
https://doi.org/10.3115/980845.980860


129

Sugato Basu, Arindam Banerjee, and Raymond J.
Mooney. 2004. Active Semi-Supervision for Pair-
wise Constrained Clustering. In Proceedings of the
2004 SIAM International Conference on Data Min-
ing, SDM 2004, pages 333–344, Lake Buena Vista,
FL, USA. SIAM.

Piotr Bojanowski, Edouard Grave, Armand Joulin, and
Tomas Mikolov. 2017. Enriching Word Vectors with
Subword Information. Transactions of the Associa-
tion for Computational Linguistics, 5:135–146.

Susan Windisch Brown, Dmitriy Dligach, and Martha
Palmer. 2011. VerbNet Class Assignment as a
WSD Task. In Proceedings of the Ninth Inter-
national Conference onComputational Semantics,
IWCS 2011, pages 85–94, Oxford, UK.

Alexis Conneau, Douwe Kiela, Holger Schwenk, Loı̈c
Barrault, and Antoine Bordes. 2017. Supervised
Learning of Universal Sentence Representations
from Natural Language Inference Data. In Proceed-
ings of the 2017 Conference on Empirical Methods
in Natural Language Processing, pages 670–680,
Copenhagen, Denmark. Association for Computa-
tional Linguistics.

Laura Kallmeyer, Behrang QasemiZadeh, and Jackie
Chi Kit Cheung. 2018. Coarse Lexical Frame Ac-
quisition at the Syntax–Semantics Interface Using a
Latent-Variable PCFG Model. In Proceedings of the
Seventh Joint Conference on Lexical and Computa-
tional Semantics, *SEM 2018, pages 130–141, New
Orleans, LA, USA. Association for Computational
Linguistics.

Joel Lang and Mirella Lapata. 2010. Unsupervised
Induction of Semantic Roles. In Human Lan-
guage Technologies: The 2010 Annual Conference
of the North American Chapter of the Association
for Computational Linguistics, pages 939–947, Los
Angeles, CA, USA. Association for Computational
Linguistics.

Laurens van der Maaten and Geoffrey Hinton. 2008.
Visualizing Data using t-SNE. Journal of Machine
Learning Research, 9:2579–2605.

Mitchell P. Marcus, Mary Ann Marcinkiewicz, and
Beatrice Santorini. 1993. Building a Large Anno-
tated Corpus of English: The Penn Treebank. Com-
putational Linguistics, 19(2):313–330.

Tomas Mikolov, Ilya Sutskever, Kai Chen, Greg S. Cor-
rado, and Jeffrey Dean. 2013. Distributed Represen-
tations of Words and Phrases and their Composition-
ality. In Advances in Neural Information Processing
Systems 26, pages 3111–3119. Curran Associates,
Inc., Harrahs and Harveys, NV, USA.

Ashutosh Modi, Ivan Titov, and Alexandre Klementiev.
2012. Unsupervised Induction of Frame-Semantic
Representations. In Proceedings of the NAACL-HLT
Workshop on the Induction of Linguistic Structure,
pages 1–7, Montréal, QC, Canada. Association for
Computational Linguistics.

Martha Palmer, Daniel Gildea, and Paul Kingsbury.
2005. The Proposition Bank: An Annotated Cor-
pus of Semantic Roles. Computational Linguistics,
31(1):71–106.

Alexander Panchenko, Anastasia Lopukhina, Dmitry
Ustalov, Konstantin Lopukhin, Nikolay Arefyev,
Alexey Leontyev, and Natalia Loukachevitch. 2018.
RUSSE’2018: A Shared Task on Word Sense In-
duction for the Russian Language. In Computa-
tional Linguistics and Intellectual Technologies: Pa-
pers from the Annual International Conference “Di-
alogue”, pages 547–564, Moscow, Russia. RSUH.

Fabian Pedregosa, Gaël Varoquaux, Alexandre Gram-
fort, Vincent Michel, Bertrand Thirion, et al. 2011.
Scikit-learn: Machine Learning in Python. Journal
of Machine Learning Research, 12:2825–2830.

Matthew Peters, Mark Neumann, Mohit Iyyer, Matt
Gardner, Christopher Clark, Kenton Lee, and Luke
Zettlemoyer. 2018. Deep Contextualized Word Rep-
resentations. In Proceedings of the 2018 Conference
of the North American Chapter of the Association
for Computational Linguistics: Human Language
Technologies, Volume 1 (Long Papers), NAACL-
HLT 2018, pages 2227–2237, New Orleans, LA,
USA. Association for Computational Linguistics.

Behrang QasemiZadeh, Miriam R. L. Petruck, Regina
Stodden, Laura Kallmeyer, and Marie Candito.
2019. SemEval-2019 Task 2: Unsupervised Lexi-
cal Frame Induction. In Proceedings of the 13th In-
ternational Workshop on Semantic Evaluation, Min-
neapolis, MN, USA. Association for Computational
Linguistics.

Karin Kipper Schuler. 2005. VerbNet: A Broad-
coverage, Comprehensive Verb Lexicon. Ph.D. the-
sis, University of Pennsylvania, Philadelphia, PA,
USA.

Ivan Titov and Alexandre Klementiev. 2012. A
Bayesian Approach to Unsupervised Semantic Role
Induction. In Proceedings of the 13th Conference of
the European Chapter of the Association for Compu-
tational Linguistics, EACL 2012, pages 12–22, Avi-
gnon, France. Association for Computational Lin-
guistics.

Dmitry Ustalov, Alexander Panchenko, Andrei Kutu-
zov, Chris Biemann, and Simone Paolo Ponzetto.
2018. Unsupervised Semantic Frame Induction us-
ing Triclustering. In Proceedings of the 56th Annual
Meeting of the Association for Computational Lin-
guistics (Volume 2: Short Papers), ACL 2018, pages
55–62, Melbourne, VIC, Australia. Association for
Computational Linguistics.

https://doi.org/10.1137/1.9781611972740.31
https://doi.org/10.1137/1.9781611972740.31
https://transacl.org/ojs/index.php/tacl/article/view/999
https://transacl.org/ojs/index.php/tacl/article/view/999
https://aclweb.org/anthology/W11-0110
https://aclweb.org/anthology/W11-0110
https://www.aclweb.org/anthology/D17-1070
https://www.aclweb.org/anthology/D17-1070
https://www.aclweb.org/anthology/D17-1070
https://doi.org/10.18653/v1/S18-2016
https://doi.org/10.18653/v1/S18-2016
https://doi.org/10.18653/v1/S18-2016
https://aclweb.org/anthology/N10-1137
https://aclweb.org/anthology/N10-1137
http://www.jmlr.org/papers/v9/vandermaaten08a.html
https://aclweb.org/anthology/J93-2004
https://aclweb.org/anthology/J93-2004
https://papers.nips.cc/paper/5021-distributed-representations-of-words-and-phrases-and-their-compositionality.pdf
https://papers.nips.cc/paper/5021-distributed-representations-of-words-and-phrases-and-their-compositionality.pdf
https://papers.nips.cc/paper/5021-distributed-representations-of-words-and-phrases-and-their-compositionality.pdf
http://www.aclweb.org/anthology/W12-1901
http://www.aclweb.org/anthology/W12-1901
https://doi.org/10.1162/0891201053630264
https://doi.org/10.1162/0891201053630264
http://www.dialog-21.ru/media/4539/panchenkoaplusetal.pdf
http://www.dialog-21.ru/media/4539/panchenkoaplusetal.pdf
http://www.jmlr.org/papers/v12/pedregosa11a.html
https://aclweb.org/anthology/N18-1202
https://aclweb.org/anthology/N18-1202
https://repository.upenn.edu/dissertations/AAI3179808
https://repository.upenn.edu/dissertations/AAI3179808
http://www.aclweb.org/anthology/E12-1003
http://www.aclweb.org/anthology/E12-1003
http://www.aclweb.org/anthology/E12-1003
https://aclweb.org/anthology/P18-2010
https://aclweb.org/anthology/P18-2010

