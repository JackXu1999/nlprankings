



















































Joint Segmentation and Tagging with Coupled Sequences Labeling


Proceedings of COLING 2012: Posters, pages 951–964,
COLING 2012, Mumbai, December 2012.

Joint Segmentation and Tagging
with Coupled Sequences Labeling

Xipeng Qiu1, Feng Ji1,2, Jiayi Zhao1 and Xuanjing Huang1

(1) School of Computer Science, Fudan University
(2) Suntec Software (Shanghai) Co. Ltd.

{xpqiu,fengji,11210240073,xjhuang}@fudan.edu.cn

A
Segmentation and tagging task is the fundamental problem in natural language processing (NLP).
Traditional methods solve this problem in either pipeline or joint cross-label ways, which suffer
from error propagation and large number of labels respectively. In this paper, we present a novel
joint model for segmentation and tagging, which integrates two dependent Markov chains. One
chain is used for segmentation, and the other is for tagging. The model parameters can be estimated
simultaneously. Besides, we can optimize the whole model by improving the single chain. The
experiments show that our model could achieve higher performance over traditional models on
both English shallow parsing and Chinese word segmentation and POS tagging tasks.

T A C

基于双链序列标注的联合切分和标注模型

在自然语言处理中，序列标注模型是最常见的模型，也有着广泛地应用。针对常见
的可分解为分段和标注两个子任务的复杂序列标注问题，我们提出了双链序列标注模型。
该模型中存在着两条相互联系的马尔科夫链。为此我们提出了一个同时求解这两条链上最
优序列的解码算法。同时利用这两条链，针对不同的实际应用场景可以组合出不同的标注
模型，使用不同的解码算法完成实际的标注任务。为了能够适应不同的解码算法，我们还
提出了一个能够利用异构语料训练模型的参数学习算法。在多个语料上的实验表明，我们
提出的模型性能要优于其他模型，并能在同一个模型内完成多种标注任务。

K : Coupled Sequences Labeling, Segmentation, Tagging.
K C :双链序列标注,切分,标注.

951



Figure 1: Coupled Sequences Labeling
Model (双链序列标注模型)

Figure 2: Factorial CRF Model (FCRF
模型)

(a) segment by only using the linear
chain s

(b) label a segmented sentence (c) simultaneously segment and label a
sentence

Figure 3: Coupled Sequences Labeling Model for Different Tasks (处理不同任务时的双链序列
标注模型变换), where gray nodes are observed nodes.

Table 1: Feature templates for shallow parsing (浅层句法分析特征模板)

Joint Cross-Product Model Coupled Sequence Labeling Model

wi−2yi, wi−1yi, wiyi, wi+1yi, wi+2yi
wi−1si, wisi, wi+1si
wi−2ti, wi−1ti, witi, wi+1ti, wi+2ti

wi−1wiyi, wiwi+1yi
wi−1wisi, wiwi+1si
wi−1witi, wiwi+1ti

pi−2yi, pi−1yi, piyi, pi+1yi, pi+2yi
pi−1si, pisi, wi+1si
pi−2ti, pi−1ti, piti, pi+1ti, pi+2ti

pi−2pi−1yi, pi−1piyi, pipi+1yi, pi+1pi+2yi
pi−2pi−1si, pi−1pisi, pipi+1si, pi+1pi+2si
pi−3pi−2ti, pi−2pi−1ti, pi−1piti, pipi+1ti,
pi+1pi+2ti, pi+2pi+3ti, pi−1pi+1ti

pi−2pi−1piyi, pi−1pipi+1yi, pipi+1pi+2yi pi−2pi−1pisi, pi−1pipi+1si, pipi+1pi+2si

yi−1yi

wisiti
wisi−1si
wi−1ti−1ti, witi−1ti, pi−1ti−1ti, piti−1ti
si−1ti−1si, ti−1siti

952



Table 2: Feature templates for Chinese S&T (中文分词、词性标注特征模板)

Joint Cross-Label Model Coupled Sequence Labeling Model

ci−2yi, ci−1yi, ciyi, ci+1yi, ci+2yi
ci−2si, ci−1si, cisi, ci+1si, ci+2si
ci−3ti, ci−2ti, ci−1ti, citi, ci+1ti, ci+2ti, ci+3ti

ci−1ciyi, cici+1yi, ci−1ci+1yi
ci−1cisi, cici+1si, ci−1ci+1si
ci−3ci−2ti, ci−2ci−1ti, ci−1citi, cici+1ti,
ci+1ci+2ti, ci+2ci+3ti, ci−2citi, cici+2ti

yi−1yi
cisiti
ci−1ti−1ti, si−1si
si−1ti−1si, ti−1siti

input : Taggging training dataset: (xi, si, ti), i = 1, · · · ,M , ;
input : Segmentation training dataset (optional): (xi, si), i = M + 1, · · · , M + N , ;
input : Parameters: C, K.
output: w
Initialize: cw← 0,w← 0;
for k = 0 · · ·K − 1 do

random select an integer number l ∈ (1, . . . , M + N) with no repeat;
if l ≤M then

receive an example (xl, sl, tl);
predict (2nd Viterbi): (ŝl, t̂l) = argmax

s,t
⟨w, Φst(xl, s, t)⟩;

if (ŝl, t̂l) ̸= (sl, tl) then
update with w with Eq. 10, where (·) is (xl, sl, tl) and (∗) is (xl, ŝl, t̂l);

end
else

receive an example (xl, sl);
predict (1st Viterbi): ŝl = argmax

s
⟨w, Φs(xl, s)⟩;

if ŝl ̸= si then
update with w with Eq. 10, where (·) is (xl, sl) and (∗) is (xl, ŝl);

end
end

end
w = cw/K ;
Algorithm 1: Online Learning Algorithm for Coupled Sequences Labeling Model. (双链序列标
注在线学习算法)

953



1 Introduction
In the fields of natural language processing (NLP), joint segmentation and tagging (S&T) task is
an important research topic. Many NLP problems can be transformed to joint S&T task, such as
shallow parsing(Sha and Pereira, 2003), named entity recognition(Zhou and Su, 2002), Chinese
part-of-speech (POS) tagging(Ratnaparkhi, 1996) and so on. For example, there are no explic-
itly boundaries between words in Chinese sentence. Therefore, sentence must be segmented into
sequence of words, in which each word would be assigned with a POS tag.

Recently many research works focused on joint S&T tasks, which can be categorized into twoways:
pipeline and cross-label.

The pipeline approaches are to solve two subtasks in order, segmentation and tagging. However,
the obvious disadvantage of these approaches is error propagation, which significantly affects the
whole performance.

The cross-label approaches can avoid the problem of error propagation and achieve more higher
performance on both subtasks (Ng and Low, 2004). However, due to the large number of labels,
two problems arise: (1) The amount of parameters increases rapidly and would be apt to overfit to
the training corpus; (2) The decoding efficiency by dynamic programming would decrease.

In addition, joint cross-label approaches cannot segment or tag sentences separately. For example,
in Chinese POS tagging task, the joint model cannot segment sentences individually without tag-
ging the sentences. Moreover, if the sentences are already segmented, the joint model can not tag
individually with the existing segmentation information.

In this paper, we present a novel joint model for S&T task with coupled sequences labeling. The
proposed model integrates two linear Markov chains with a two dimensional structure. One chain
is used for segmentation, and the other is for tagging. These two chains are labeled simultaneously,
so our method does not suffer from error propagation. Unlike cross-label model, the number of
labels in our model is much smaller. Experiments on two tasks, shallow parsing and Chinese POS
tagging, demonstrate the effectiveness of our model.

The contributions of our methods are as follows:

1. Instead of cross-product labels, two types of nodes in our model make us represent features
more flexibly.

2. Exact decoding algorithm can be employed to find the best S&T sequences simultaneously.

3. Our method not only can do joint S&T task, it can also segment or tag sentences separately.

4. Our model can be trained simultaneously with the heterogeneous data sources.

It is very important in practice that to utilize the heterogeneous data sources. For example in Chi-
nese POS tagging, we can use two datasets (segmentation dataset and POS tagging dataset) for
training parameters. This character is especially useful since the segmentation dataset is more eas-
ily annotated than POS tagging dataset.

The rest of the paper is organized as follows: In section 2, we describe the general sequence labeling
method. In section 3 we present our novel model with coupled sequences labeling, then we analysis
its complexity and discuss its applications. The experimental results are shown in section 4. In
section 5, we introduce the related works. Finally, we conclude our work in section 6.

954



2 Joint Sequences Labeling Model
In this section, we first introduce and analyze joint S&T taskwith common sequence labelingmodel.
Then, we present the joint cross-label approach and analyze its complexity.

2.1 Sequence Labeling Model
Sequence labeling is the task of assigning labels y = y1, . . . , yL to an input sequence x =
x1, . . . , xL.

Give a sample x, we define the feature vector asΦ(x, y). Thus, we can label xwith a score function,

ŷ = argmax
y

F (w, Φ(x, y)), (1)

wherew is the parameter of functionF (·). The feature vectorΦ(x, y) consists of lots of overlapping
features, which is the chief benefit of discriminative model.

For example, in first-order Markov sequence labeling model, the feature can be denoted as
ϕk(yi−1, yi, x, i), where i is the position in the sequence. Then the score function can be rewritten
as

ŷ = argmax
y

F (

L∑

i=1

∑

k

wkϕk(yi−1, yi, x, i)), (2)

where L is length of x.

2.2 Joint S&T with Cross-Label Sequence Labeling Model
In the traditional approach for joint S&T, each label yi is the cross-product of segmentation label
si and tagging label ti, usually with the form of si-ti. Therefore, the state space of cross-labels is
|Y| = |S|×|T |, where |S|, |T | is the number of segmentation labels and tagging labels, respectively.
In real applications, |S| is always small, while |T | will be very large. In segmentation task, there
are several commonly used label sets such as {B, I}, {B, I, O}, {B, I, E, S}, etc. For example, {B,
I, E, S} represent Begin, Inside, End of a multi-node segmentation, and Single node segmentation
respectively. In tagging task, the label set depends on the detail definition of the task, such as
{PER, LOC, ORG, MISC} in classic name entity recognition task, and {NNS, NNPS, NNP, ...} in
Part-of-Speech tagging task.

Although joint learning with cross-label can avoid error propagation, which usually occurs in
pipeline frameworks, the complexity of decoding algorithm would be increased rapidly due to the
increased state space. Suppose we use first order Viterbi algorithm for decoding in linear chain
model, the complexity is (|S||T |)2L in such joint labeling frameworks, while (|S|2 + |T |2)L in
pipeline frameworks.

3 Coupled Sequences Labeling Model
In this section, wewill describe the coupled sequences labelingmodel in detail, and propose an exact
inference algorithm for finding two best sequences simultaneously. Then we apply this model to the
problems mentioned in the beginning of this paper. Finally an online training algorithm is proposed
to learn the parameters of our model by optimizing two difference inference algorithms.

955



3.1 Model Description
Different from the cross-label model, we define two sequences s = s1, . . . , sL and t = t1, . . . , tL
for an input sequence x = x1, . . . , xL. s and t represent the segmentation and tagging labels re-
spectively.

Then we employ a hybrid model by integrating these two linear chains. While keeping relative
independence and completeness of these two chains, we also consider the interactions between them
in order to cope with error propagation. The graphic structure of our model is shown in Figure 1.

Besides the original undirected edges (hereinafter to be referred as edges) existed in two lin-
ear chains, corresponding to e(si−1, si) and e(ti−1, ti), we also append two kinds of edges be-
tween different chains. e(si, ti) is equivalent to the representation of “Cross-Label” mentioned
in section 2.2. Meanwhile, we also add an edge e(ti−1, si) into the model. This change brings
about two new different cliques, respectively associated with variables C1 = {si−1, ti−1, si} and
C2 = {ti−1, si, ti},which essentially gives rise to the increment of the complexity of our model.
The reason for this change is to avoid the “label bias” problem citeLafferty:2001 in factorial CRF
(FCRF) (Sutton et al., 2004). FCRF model has a similar graphic structure to our model, shown in
Figure 2. As in the case of Chinese POS tagging, if given a context si−1 = “B”, ti−1 = “NN” and si
= “E”, ti would be assigned to “JJ” instead of “NN” with a higher probability, since the transition
from “NN” to “JJ” defeats against the transition to “NN” while si = “E” has no effect. However, si
= “M” provides a strong clue, which implies that word wi−1 and wi are in the same segmentation
and would be assigned to the same label.

3.2 Inference Algorithm
According to the theory of probabilistic graphical models (Koller and Friedman, 2009), we can
define a score function F (·) as the logarithmic potential function:

F (w, Φ(x, s, t)) =
L∑

i

{wT ΦC1(si−1, ti−1, si, x, i) + wT ΦC2(ti−1, si, ti, x, i)}, (3)

Given an observed sequence x, the aim of inference algorithm is to find two best label sequences
simultaneously with the highest score. In order to adapt to our model with two kinds of 3-variable
cliques, wemake somemodifications of a second order Viterbi algorithm (Thede andHarper, 1999).
We define two functions for recording the score of the best partial path from the beginning of the
sequence to the position i:

δi(ti−1, si) , F (w, Φ(x, s0:i, t0:i−1)) = argmax
si−1

{ηi−1(si−1, ti−1) + wT ΦC1(si−1, ti−1, si, x, i)},(4)

ηi(si, ti) , F (w, Φ(x, s0:i, t0:i)) = argmax
ti−1

{δi(ti−1, si) + wT ΦC2(ti−1, si, ti, x, i)},

Initially, only features associated with variables s0 and t0 are hired. Without loss of generality, we
set s−1 = “BoS” 1, t−1 = “BoT” 2 and η−1(s−1, t−1) = 0. Then iteratively calculate these two

1denotes “Beginning of Segmentation”
2denotes “Beginning of Tagging”

956



score functions for any possible partial path. At last, the final score of two label sequences is

F (w, Φ(x, s, t)) = ηL(sL, tL), (5)

Compared with the complexity of other joint models, the complexity of our model isO((|S|2|T |+
|T |2|S|)L), which is lower than cross-label model but higher than pipeline model. Although the
asymptotic complexity is higher than pipeline model, the advantage is that our model would not
suffer from error propagation and could make use of label information more efficiently.

3.3 Discussion of Coupled Sequences Labeling Model
As shown in Figure 1, our model can label two sequences simultaneously. However, we hope our
model can be applied to solve the “inconsistent” problem (Section 1). Although two linear chains
s and t are modeled in a hybrid framework, they still retain its complete structure. This means that
we can independently use the linear chain s to segment a sentence (Figure 3a), while use the linear
chain t to label a segmented sentence (Figure 3b) or use the whole structure to label two sequences
together (Figure 3c). Therefore, we need two inference algorithms, respectively a first order Viterbi
algorithm for segmenting a sentence when only using the linear chain s, and a second order Viterbi
algorithm (see Section 3.2) for other two applications. The main idea behind this method is the fact
that there are many overlapping features used in both segmentation and tagging tasks since most of
the features are extracted from a local context.

Another reason to employ different inference algorithms is tomaintain the decoding speed for differ-
ent applications. If only used in the segmentation task, the complexity of our method is O(|S|2L).
If applied to tag a segmented sentence, the complexity is O((|T |+ |T |2)L) = O(|T |2L). If used
in the joint labeling task, its complexity is still O((|S|2|T |+ |T |2|S|)L).
However, in the coupled sequences labelingmodel, two linear chains are highly dependent due to the
edge e(ti−1, si). It implies that if we train a model by using the whole structure, we cannot directly
use the segmentation features, which are only related to the segmentation chain s. Therefore, we
need to optimize the whole structure together with the segmentation chain.

Besides training a model with a corpus annotated segmentation and tagging labels, we can also use
heterogeneous corpora because two inference algorithms are jointly optimized. It is very meaning-
ful in real applications. As we all known, difficulties of annotating corpus for different tasks are
different. In our setting, segmentation corpus are easy to annotate while tagging corpus are diffi-
culty. As a result, we can easily obtain a large segmentation corpus while a small tagging corpus.
Because we aim to optimize two chains simultaneously, it is possible for us to training a unified
model with these two different scale corpora. We can learn parameters from a small tagging corpus
for two chains, and learn parameters from a large segmentation corpus for the segmentation chain.

3.4 Learning Parameters with Passive-Aggressive Algorithm
In the training stage, we use passive-aggressive algorithm to learn the model parameters. Passive-
aggressive (PA) algorithm (Crammer and Singer, 2003; Crammer et al., 2006) was proposed for
normal multi-class classification and can be easily extended to structure learning (Crammer et al.,
2005). Like perceptron, PA is an online learning algorithm.

Because two inference algorithms are needed to optimize in our framework, without loss of gen-
erality, we use (·) to represent the gold answer while (∗) to the response of an inference algorithm

957



with the highest score. In the segmentation task, (·) equals to (x, s) and (∗) is (x, ŝ). In the joint
task, (·) denotes (x, s, t) and (∗) is (x, ŝ, t̂). Here ŝ, t̂ are the incorrect labels with the highest scores.
We can define themargin γ(w; (·)) as

γ(w; (·)) = F (w, Φ(·))− F (w, Φ(∗)), (6)

Thus, we calculate the hinge loss ℓ(w; (·)) (abbreviated as ℓw) by

ℓw =

{
0, γ(w; (·)) > 1
1 − γ(w; (·)), otherwise (7)

In round k, the new weight vector wk+1 is calculated by

wk+1 = argminw
1

2
||w− wk||2 + C · ξ, (8)

s.t. ℓ(w; (·)) <= ξ and ξ >= 0 (9)

where ξ is a non-negative slack variable, and C is a positive parameter which controls the influence
of the slack term on the objective function.

Following the derivation in PA (Crammer et al., 2006), we can get the update rule,

wk+1 = wk + τk(Φ(·)− Φ(∗)), (10)

where
τk = min(C,

ℓk(w; (·))
∥Φ(·)− Φ(∗)∥2 ) (11)

Our training algorithm is based on PA algorithm and shown in Algorithm 1. In our algorithm,
the input examples are randomly selected in each round k. According to the source of the selected
example, we obtain the best response by using the proper inference algorithm, and finally update the
parameters w. Following (Collins, 2002), the average strategy is also adopted to avoid overfitting
problem.

4 Experiments
We employ two joint sequence labeling tasks to show the performance of our model. In the follow-
ing section, we would report our experiment settings and discuss the experiment results.

We compare our method with cross-label model and factorial model with PA algorithm. The fac-
torial model is similar with Factorial CRF(Sutton et al., 2007), but its parameters are learning with
PA algorithm.

We use the standard evaluation metrics F1 score, which is the harmonic mean of precision P (per-
centage of predict phrases that exactly match the reference phrases) and recall R (percentage of
reference phrases that returned by system).

4.1 Datasets
In order to demonstrate the performance of our proposed model, we employ two joint segmentation
and tagging tasks, respectively English shallow parsing and Chinese word segmentation and POS
tagging (Chinese S&T).

958



In English shallow parsing, the corpus from CoNLL 2000 shared task is commonly used, which
contains 8936 sentences for training and 2012 sentences for testing. We employ the commonly
used label set {B, M, E, S} in the segmentation task. 12 tagging labels, such as noun phrase (NP),
verb phrase (VP),…and others (O), are used in the sequence tagging task.

In Chinese S&T, we employ the Chinese Treebank (CTB) corpus, obtained from the Fourth Inter-
national SIGHAN Bakeoff datasets (Jin and Chen, 2008). The label set {B, M,E, S} is also used
for segmentation task.

4.2 Performance of Coupled Sequences Labeling Model
In the first experiment, we aim to compare the performances of our coupled sequences labeling
model with other traditional joint models. Feature templates used in this experiment are summarized
in Table 1 for English shallow parsing and in Table 2 for Chinese word segmenation and POS
tagging, in which wi denotes ith word, pi denotes ith POS tag, ci denotes ith Chinese character.

We compare the total performance between traditional joint cross-label model, factorial model and
our model. To learn the parameters of these models, we employ PA algorithm with an average
parameter strategy to avoid the overfitting problem. The maximum amount of iterations is fixed to
be 50.

The experiment results are shown in Table 3 for English shallow parsing, and in Table 4 for Chinese
S&T. We also provides the performances of other methods reported in papers.

Table 3: Performances in English Shallow Parsing

Method F1
Cross-Label CRFs 93.88
Voted Perceptrons (Carreras and Marquez,
2004)

93.74

Cross-Label model 93.47
Factorial model 93.11
Our model 93.94

Table 4: Performances in
Chinese S&T

Method F1
Pipeline 89.04
100-best reranking 89.23
Cross-label model 89.18
Factorial model 88.64
Our model 89.32

In English shallow parsing, our coupled sequences labeling model achieves the best performance
than other two methods. We are surprised to find that the performance of the factorial model is
lower than the joint cross-label model because of the “label bias” problem. However, a cross edge
e(ti−1, si) is added into our coupled sequences model and shows its ability to avoid this problem.
Experimental results in Chinese S&T show the similar conclusions.

4.3 Performance on Heterogeneous Corpora
The second experiment is to jointly train a unified model with heterogeneous corpora. In this ex-
periment, we are expected to find out whether additional resources could increase the performance
simultaneously on two different tasks.

We randomly divide the training corpus into two equal parts. One part is used as the joint S&T
training corpus while another part is used for just segmentation training corpus.

For joint sequence labeling task, we employ our second order decoding algorithm (see 3.2) and the
same feature templates (listed in Table 1 and Table 2) to extract features. For segmentation task, we

959



use the first order Viterbi algorithm to find the most possible segmentation. Only feature templates
(listed in Table 1) irrelevant to tagging task are used for the segmentation task. Therefore template
such as wi−1ti would not be used to extract the segmentation features. Moreover this means two
different tasks would share many common features in the training stage. The final test performances
are shown in Table 5.

We experiment three real scenarios, respectively only segmenting a sentence, tagging a segmented
sentence and jointly labeling a sentence. Notice that these different tasks use the same model in this
experiment. Joint cross-label approach is chosen as the baseline, but this method cannot segment
a sentence individually or tag a segmented sentence. However, our coupled sequences labeling
model can handle these tasks in a unified model.

The experimental results are shown in Table 5 for English shallow parsing, and in Table 6 for
Chinese S&T.

Table 5: Performances on English shallow parsing

Corpus 1 Corpus 2 Segments Segments(Joint) Joint Tagging
Cross-label used - - 94.97 92.67 -
Cross-label used used - 95.56 93.47 -
Our model used - 94.24 95.14 93.02 95.20
Our model used used 94.89 95.65 93.94 96.02
Our model used used as Seg 94.68 95.56 93.61 95.73
Note 1: “used” means that the corpus is used joint S&T task with both segmentation and tagging labels, “used as Seg” means
that the corpus is just used with segmentation labels.

Note 2: “Segments” means the performance of segmentation which just used the segmentation chain, “Segments(joint)” means

the performance of segmentation in joint labeling, “Tagging” is the performance of tagging when given gold segmentation

labels.

Table 6: Performances on Chinese S&T

Corpus1 Corpus2 Segments Segments(Joint) Joint Tagging
Cross-label used - - 93.53 87.05 -
Cross-label used used - 94.85 89.18 -
Our model used - 92.56 93.70 87.39 89.28
Our model used used 94.37 94.71 89.32 91.87
Our model used used as Seg 94.15 95.03 89.21 91.30

In Chinese S&T, we can find that our coupled model on joint labeling task can outperform the
cross-label model in both the experiments of using half of the corpus and full corpus. With using
the second corpus, all models have better performances. This result demonstrates a common sense
in machine learning community “more data, more performance”. However, after adding the second
corpus, the performance of the joint task is promoted, but still lower than using the full annotations.
It is reasonable because the second corpus is only used as a segmentation corpus. This means we
only employ half of the POS annotations to train our model. Experimental results on segmentation
task show that after adding the second corpus, our model improves the performance and slightly
behind themodel trainedwith the full annotations. With the performance increases on segmentation,
the performance of tagging a segmented sentence is increased as well.

Similar conclusions can be found in the experiments of English shallow parsing.

The results also indicate that two different tasks efficiently help each other via shared features.

960



Therefore, we believe that additional resources could be introduced into our model more flexible
and be helpful to the final performance.

4.4 Decoding Speed
At last, we also list the decoding speed for different tasks in Table 7.
Table 7: Decoding speed on English Shallow Parsing and Chinese S&T task. (sentences/second)

English Shallow Parsing Chinese S&T
Seg Seg(Joint) Joint Tagging Seg Seg(Joint) Joint Tagging

Cross-label - 1503 1453 - - 117 113 -
Our model 22995 1467 1435 1601 17572 130 124 153

Compared to the joint cross-label approach in both corpora, our model has the equivalent decoding
speed on the joint task. While on the task of tagging a segmented sentence, our model provides a
slight decoding speedup. The reason is that the states of segmentation are much less than tagging.
However, on the only segmentation task, our model provides a decoding speedup over 10 times,
since we can use the segmentation chain independently in our model.

5 Related Works
Several methods have been proposed to cope with the problems of joint S&T task.

Sutton et al. (2004, 2007) proposed Dynamic Conditional Random Fields (DCRF) to jointly repre-
sent the different tasks in a single graphical model. However, the exact training and inference for
DCRF are time-consuming.

Duh (2005) proposed a model for jointly labeling multiple sequences. The model is based on the
Factorial Hidden Markov Model (FHMM). Since FHMM is directed graphical model, FHMM re-
quires considerably less computation than DCRFs and exact inference is easily achievable. How-
ever, the FHMM’s generative framework cannot take full advantage of context features, so its
performance is lower than DCRF.

Different with our model applied in joint S&T task, both the DCRF and FHMMare used in POS tag-
ging and NP Chunking tasks. These two tasks are not strongly dependent on each other. Therefore,
their models are relatively simplified for joint S&T task.

6 Conclusion
In this paper, we propose a novel joint S&T model by integrating two linear chains into a coupled
sequence labeling model. Our approach does not suffer from the problem of error propagation,
which usually occurs in pipeline models. Meanwhile, our proposed model would not result in the
rapid increase of states as cross-label models. Our model also takes the advantage of more flexible
feature representation, a uniform model with a flexible combination of labeling tasks, etc.

Acknowledgments
We would like to thank the anonymous reviewers for their valuable comments. This work was
funded by NSFC (No.61003091 and No.61073069), 863 Program (No.2011AA010604) and 973
Program (No.2010CB327900).

961



References
Carreras, X. andMarquez, L. (2004). Phrase recognition by filtering and ranking with perceptrons.
Recent advances in natural language processing III: selected papers from RANLP 2003, 260:205.

Collins, M. (2002). Discriminative training methods for hidden markov models: Theory and
experiments with perceptron algorithms. In Proceedings of the 2002 Conference on Empirical
Methods in Natural Language Processing.

Crammer, K., Dekel, O., Keshet, J., Shalev-Shwartz, S., and Singer, Y. (2006). Online passive-
aggressive algorithms. Journal of Machine Learning Research, 7:551–585.

Crammer, K., McDonald, R., and Pereira, F. (2005). Scalable large-margin online learning for
structured classification. In NIPS Workshop on Learning With Structured Outputs. Citeseer.

Crammer, K. and Singer, Y. (2003). Ultraconservative online algorithms for multiclass problems.
Journal of Machine Learning Research, 3:951–991.

Duh, K. (2005). Jointly labeling multiple sequences: A factorial HMM approach. In Proceed-
ings of the ACL Student Research Workshop, pages 19–24, Ann Arbor, Michigan. Association for
Computational Linguistics.

Jin, C. and Chen, X. (2008). The fourth international chinese language processing bakeoff: Chi-
nese word segmentation, named entity recognition and chinese pos tagging. In Sixth SIGHAN
Workshop on Chinese Language Processing, page 69.

Koller, D. and Friedman, N. (2009). Probabilistic Graphical Models: Principles and Techniques.
MIT Press.

Ng, H. and Low, J. (2004). Chinese part-of-speech tagging: one-at-a-time or all-at-once? word-
based or character-based. In Proceedings of EMNLP, volume 4.

Ratnaparkhi, A. (1996). A maximum entropy model for part-of-speech tagging. In Brill, E. and
Church, K., editors, Proceedings of the EmpiricalMethods in Natural Language Processing, pages
133–142.

Sha, F. and Pereira, F. (2003). Shallow parsing with conditional random fields. In Proceedings of
the 2003 Conference of the North American Chapter of the Association for Computational Linguis-
tics on Human Language Technology-Volume 1, pages 134–141. Association for Computational
Linguistics.

Sutton, C., McCallum, A., and Rohanimanesh, K. (2007). Dynamic conditional random fields:
Factorized probabilistic models for labeling and segmenting sequence data. J. Mach. Learn. Res.,
8:693–723.

Sutton, C., Rohanimanesh, K., and McCallum, A. (2004). Dynamic conditional random fields:
Factorized probabilistic models for labeling and segmenting sequence data. In Proceedings of the
twenty-first international conference on Machine learning, page 99. ACM.

Thede, S. M. and Harper, M. P. (1999). A second-order hidden markov model for part-of-speech
tagging. In Proceedings of the 37th annual meeting of the Association for Computational Linguis-
tics on Computational Linguistics, pages 175–182. Association for Computational Linguistics.

962



Zhou, G. and Su, J. (2002). Named entity recognition using an HMM-based chunk tagger. In
Proceedings of the 40th Annual Meeting on Association for Computational Linguistics, pages
473–480. Association for Computational Linguistics.

963




