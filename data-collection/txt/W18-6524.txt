



















































Automatic Evaluation of Neural Personality-based Chatbots


Proceedings of The 11th International Natural Language Generation Conference, pages 189–194,
Tilburg, The Netherlands, November 5-8, 2018. c©2018 Association for Computational Linguistics

189

Automatic Evaluation of Neural Personality-based Chatbots

Yujie Xing and Raquel Fernández
Institute for Logic, Language and Computation

University of Amsterdam
yujie.xing@outlook.com raquel.fernandez@uva.nl

Abstract

Stylistic variation is critical to render
the utterances generated by conversational
agents natural and engaging. In this paper,
we focus on sequence-to-sequence models
for open-domain dialogue response gener-
ation and propose a new method to eval-
uate the extent to which such models are
able to generate responses that reflect dif-
ferent personality traits.

1 Introduction

The advent of deep learning methods has led
to the development of data-driven conversational
agents for informal open-domain dialogue (see
Serban et al., 2016a, for a review). These chat-
bot systems model conversation as a sequence-to-
sequence (SEQ2SEQ) problem (Sutskever et al.,
2014) and rely on large amounts of unannotated
dialogue data for training. We investigate whether
such models are able to generate responses that re-
flect different personality traits. We test two kinds
of models: The speaker-based model by Li et al.
(2016b), where response generation is conditioned
on the individual speaker, and a personality-based
model similar to Herzig et al. (2017), where gen-
eration is conditioned on a personality type.

Evaluating the output of chatbot systems is re-
markably difficult (Liu et al., 2016). To make
progress in this direction with regards to person-
ality aspects, we propose a new statistical evalu-
ation method that leverages an existing personal-
ity recogniser (Mairesse et al., 2007), thus avoid-
ing the need for specialised corpora or manual
annotations. We adopt the Big Five psycholog-
ical model of personality (Norman, 1963), also
called OCEAN for the initials of the five person-
ality traits considered: Openness, Conscientious-
ness, Extraversion, Agreeableness, and Neuroti-

cism. Each of the traits is represented by a scalar
value on a scale from 1 to 7.

In the remainder of the paper, we introduce the
models we examine and describe our new evalua-
tion method. Our results show that the models are
able to generate output that reflects distinct per-
sonalities, over a baseline encoding chance per-
sonality variation. We conclude with a brief dis-
cussion on related work.

2 Dialogue Generation Models

The generation models we make use of are stan-
dard SEQ2SEQ models consisting of an encoder
LSTM, an attention mechanism, and a decoder
LSTM (Sutskever et al., 2014; Bahdanau et al.,
2015). The model processes context-response
pairs, where the context X = x1, x2, . . . , xm cor-
responds to the latest utterance(s) in the dialogue
and the response Y = y1, y2, . . . , yn is the utter-
ance to be generated next. The probability of the
response Y given the context X is predicted as:

p(Y |X) =
∏n

t=1 p(yt|y1, . . . , yt−1, X) (1)

The attention mechanism by Yao et al. (2015) is
used over the hidden states of the encoder LSTM
to generate a context vector ct that determines the
relative importance of the words in the context ut-
terance at each decoding step t. Then the proba-
bility of each word wk (k ∈ |V |, where V is the
vocabulary) to be the next word at step t is pre-
dicted with a softmax function:

Pt(wk) =
exp((W )k·f(ct,ht))∑|V |

k=1 exp((W )k·f(ct,ht))
(2)

where ht is the hidden state of the decoder LSTM
and f is an activation function. The weights of
matrix W ∈ R|V |×d are learned during training,
with d being the number of hidden cells.

Both the Speaker Model and the Personality
Model we describe below include 4-layer LSTMs
with 1024 hidden cells per layer.



190

2.1 Speaker Model

Our starting point is the persona-based model by
Li et al. (2016b).1 In this model, each speaker is
associated with an embedding vvvs learned during
training. Whenever a response by speaker s is en-
countered during training, the corresponding em-
bedding vvvs is inserted into the first hidden layer of
the decoder LSTM at each time step (i.e., condi-
tioning each word in the utterance). The hidden
states ht of the decoder LSTM is thus calculated
as follows (where y∗t is the embedding of the re-
sponse word at time t, and g stands for the LSTM
cell operations):

ht = g(ht−1, y
∗
t , ct−1, vvvs) (3)

Li et al. (2016b) evaluated their model regarding
individual content (factual) consistency. Our goal
is to evaluate whether the model preserves individ-
ual stylistic aspects related to personality traits.

2.2 Personality Model

We modify the Speaker Model to allow for the
generation of responses reflecting different per-
sonality types. To this end, instead of leverag-
ing speaker embeddings, we estimate the OCEAN
scores for each speaker and insert a personality
embedding vvvo into the first layer of the LSTM de-
coder.2

OCEAN scores are 5-dimensional vectors o,
where each dimension ranges from 1 to 7. We nor-
malise them to the range [−1, 1] and then embed
them with a linear layer: vvvo = Wo · o−43 , where
Wo ∈ R5×d is learned during training, thus learn-
ing relationships between OCEAN trait values and
properties of the utterances. Whenever a response
with personality traits o is encountered, we insert
vvvo into the first hidden layer of the decoder LSTM.
Thus, the hidden states ht are now calculated as:

ht = g(ht−1, y
∗
t , ct−1, vvvo) (4)

This version of the model is similar to Herzig et al.
(2017).3 The authors focus on the customer ser-
vice domain and evaluate the model output’s style

1See http://github.com/jiweil/Neural-
Dialogue-Generation. We reimplemented the model
in PyTorch.

2The procedure for assigning OCEAN scores to a given
speaker is explained in the next section.

3Our personality model is a modified version of our reim-
plementation of the code by Li et al. (2016b) (see footnote 1).
The code by Herzig et al. (2017) is not readily available.

for only two personality traits with human evalu-
ation. In contrast, we deal with open-domain chat
and assess all OCEAN traits globally, using the
automatic method we describe Section 4.

3 Experimental Setup

3.1 Dataset

We use transcripts from two American situation
comedy television series: Friends4 and The Big
Bang Theory.5 We consider only those charac-
ters who contribute a minimum of 2000 turns,
which results in 13 characters (6 from Friends
and 7 from The Big Bang Theory). We assign
a unique speaker id to each character. In addi-
tion, we estimate the personality of each charac-
ter as follows: for each character, we randomly
select 50 samples of 500 utterances each, and es-
timate the OCEAN scores for each sample us-
ing the personality recogniser by Mairesse et al.
(2007), which exploits linguistic features from
‘Linguistic Inquiry and Word Count’ (Pennebaker
and King, 1999) and the MRC Psycholinguistic
database (Coltheart, 1981).6 We assign to each
character the OCEAN score resulting from taking
the arithmetic mean of the estimated scores for the
corresponding 50 samples.

We consider every two consecutive turns in a
scene to be a context-response pair and annotate
each response with either the speaker id or the
speaker’s OCEAN scores. The resulting dataset
contains ∼86k context-response pairs, of which
around 2000 pairs were randomly selected and re-
served for validation.

3.2 Training

Given the relatively small size of the TV-series
dataset, following Li et al. (2016b) we use the
OpenSubtitles dataset (Tiedemann, 2009) to pre-
train the model. OpenSubtitles is a large open-
domain repository containing over 50M lines from
movie subtitles. Since this data does not include
information on which character is the speaker of
each line, we simply take each two consecutive
lines to be a context-response pair. Due to limi-
tations regarding computational power, we lever-

4https://sites.google.com/site/
friendstvcorpus/

5https://bigbangtrans.wordpress.com/
6We choose this recogniser because it can estimate nu-

merical scores for each OCEAN trait, instead of binary clas-
sifications, and it’s open source. For more details, we refer
the reader to Mairesse et al. (2007).

http://github.com/jiweil/Neural-
Dialogue-Generation
https://sites.google.com/site/friendstvcorpus/
https://sites.google.com/site/friendstvcorpus/
https://bigbangtrans.wordpress.com/


191

age only a subset of the dataset: ∼1.8M pairs for
training and ∼75k pairs for validation.

We train a standard SEQ2SEQ model for 15 iter-
ations on the OpenSubtitles training set, until per-
plexity becomes stable in the validation set. We
then initialise the Speaker and Personality models
using the parameters learned with OpenSubtitles
and train them on the TV-series training set for 30
more iterations, until the perplexity in the corre-
sponding validation set stabilises.

We use the same settings as Li et al. (2016b)
for training: We set the batch size to 128, the
learning rate to 1.0 (halved after the 6th iteration),
the threshold for clipping gradients to 5, and the
dropout rate to 0.2. Vocabulary size is 25, 000
and the maximum length of an input sentence is
50. All parameters (including the speaker embed-
dings in the Speaker Model) are initialised sam-
pling from the uniform distribution on [−0.1, 0.1].

3.3 Testing

For testing, we again leverage OpenSubtitles to
extract a large subset of ∼2.5M utterances not
present in the training or validation sets. Using
each of the utterances in this set as context, we let
the trained Speaker and Personality models gener-
ate responses for each of the 13 characters, em-
ploying Stochastic Greedy Sampling (Li et al.,
2017). Since general responses are a known prob-
lem in neural response generation chatbots (Sor-
doni et al., 2015; Serban et al., 2016b; Li et al.,
2016a; Zhang et al., 2018) and our goal is to fo-
cus on personality-related stylistic differences, we
remove the most frequent 100 responses common
to all characters/personalities. After this cleaning
step, we end up with ∼700k responses per charac-
ter/personality. We refer to the clean set of gener-
ated responses as the evaluation set.

4 Evaluation Method

We propose a new evaluation method to measure
whether persona-based neural dialogue generation
models are able to produce responses with distin-
guishable personality traits for different characters
and different personality types.

Using the evaluation set, for each character we
randomly select 250 samples of 500 responses
and calculate the OCEAN scores for each sam-
ple. Recall that the OCEAN scores correspond
to 5-dimensional vectors. We label each of these
250 vectors with the corresponding character. This

gives us 13 gold classes—one for each character—
with 250 datapoints each. We then use a support
vector machine classifier7 to test to what extent
the OCEAN scores estimated from the generated
responses allow us to recover the gold character
classes. We compute results using 5-fold cross-
validation (training on 80% of the set and testing
on the remaining 20% once for each fold). We re-
port average scores over ten iterations of this pro-
cedure (i.e., 5× 10).

We consider a baseline obtained by randomis-
ing the gold character label in the set of gener-
ated responses, which indicates the level of per-
formance we may expect by chance. In addition,
we use the procedure described above to discrimi-
nate between characters using their original (gold)
utterances from the transcripts, rather than model-
generated responses. This serves as a sanity check
for the personality recogniser used to estimate the
OCEAN scores—if the recogniser cannot detect
personality differences among the characters in the
original transcripts, it is not reasonable to expect
that the models will be able to generate responses
with different personality styles—and provides an
upper bound for the performance we can expect to
achieve when evaluating generated responses.

Given that the particular personality recogniser
we use (Mairesse et al., 2007) was not optimised
for dialogues from TV-series transcripts, as an ad-
ditional sanity check we compare its performance
on the original (gold) utterances with a bag-of-
words (BoW) approach. This allows us to test
whether the recogniser may only be detecting triv-
ial patterns of word usage.8 We select the top 200
most frequent words over the original utterances
as features, without removing words typically con-
sidered stop words such as pronouns or discourse
markers, since they may be personality indicators.
Then we run the same classification procedure us-
ing these BoW representations.

5 Results

In Table 1, we report average F1 score per charac-
ter (including precision and recall) for the Speaker

7We use the SVM implementation in Python’s
scikit-learn library with radial basis function ker-
nel. We tune the regularisation parameter C and use default
settings for all other parameters. We tried a range of different
algorithms, including k-means and agglomerative cluster-
ing as well as a multi-layer perceptron classifier, always
obtaining the same trends in the results.

8We thank one of the anonymous reviewers for suggesting
this additional test.



192

Friends Precision Recall F1

Baseline 0.16 (σ=.01) 0.16 (σ=.01) 0.16
Gold 0.61 (σ=.12) 0.61 (σ=.16) 0.61
Speaker 0.32 (σ=.02) 0.32 (σ=.05) 0.32
Personality 0.22 (σ=.04) 0.23 (σ=.09) 0.23

Big Bang Theory Precision Recall F1

Baseline 0.15 (σ=.01) 0.15 (σ=.02) 0.15
Gold 0.69 (σ=.11) 0.69 (σ=.16) 0.69
Speaker 0.46 (σ=.20) 0.47 (σ=.23) 0.47
Personality 0.29 (σ=.19) 0.31 (σ=.24) 0.30

Table 1: Average scores for 6 characters in Friends (left) and 7 characters in The Big Bang Theory (right)

and the Personality models, as well as the base-
line and gold data. The results for these four con-
ditions are all statistically significantly different
from each other.9

5.1 Lower and Upper Bounds

The first thing to note is that the results on the gold
transcripts are higher than the baseline, reaching
61% F1 score on Friends and 69% on The Big
Bang Theory. This indicates that the evaluation
method is able to distinguish between the differ-
ent personalities in the data reasonably well. Ap-
parently, The Big Bang Theory characters are more
distinct from each other than those in Friends.

When we use the BoW approach on the gold
transcripts instead of the representations by the
personality recogniser, we obtain significantly
lower results: 23% F1 score on Friends and 19%
on The Big Bang Theory.10 The personality recog-
niser thus detects patterns that go beyond what can
be captured with BoW representations.

5.2 Speaker and Personality Models

We find that the responses generated by the
Speaker model display consistent personality vari-
ation above baseline, although a significant level
of the personality markers found in the original
data seems to be lost (32% vs. 61% and 47%
vs. 69%). The results obtained for the Personal-
ity model are significantly above baseline as well
(23% vs. 16% and 30% vs. 15%). We also see that
the personality traits found in the responses gen-
erated by the Personality model yield lower dis-
tinguishability than those by the Speaker model.
This is to be expected, since the Personality model
generates responses for a personality type, which

9Significance is tested with a two-independent-sample t-
test on the results of 10 iterations, first using Levene’s test to
assess the equality of variances and then applying Welch’s or
Student’s t-test accordingly.

10We also run this experiment removing stop words (using
the list of English stop words from scikit-learn), ob-
taining almost identical results: 22% F1 score on Friends and
18% on The Big Bang Theory.

should be more varied (and hence less distinguish-
able) than those by an individual speaker.

An advantage of the Personality model, how-
ever, is that in principle it allows us to generate
responses for novel, predefined personalities that
have not been seen during training. To test this
potential, we create five extreme personality types
by setting up the score of one of the OCEAN traits
to a high value (6.5) and all remaining four traits
to an average value (3.5). We then let the model
generate responses to all the utterances in the eval-
uation set for each of these extreme personalities
and evaluate the extent to which the responses dif-
fer in style following the same procedure as in the
previous experiment. Table 2 shows the results.

Precision Recall F1

Baseline 0.19 0.19 0.19
Average 0.53 (σ=.07) 0.53 (σ=.09) 0.53
Open 0.46 0.46 0.46
Conscientious 0.59 0.62 0.61
Extravert 0.63 0.65 0.64
Agreeable 0.53 0.50 0.51
Neurotic 0.44 0.42 0.43

Table 2: Average scores for personality types with
high value for different OCEAN personality traits

We find that the generated responses are distin-
guishable with 53% average F1 score. This indi-
cates that the model has learned to generalise be-
yond the training data. Table 3 shows some exam-
ples of generated responses.

Joey (Friends): Oh, of course I love you, baby.
Raj (Big Bang): I don’t love you.

Open: You are beautiful!
Agreeable: Oh I, I love you too.

Table 3: Responses to Do you love me? by the Per-
sonality model for personality types of given char-
acters and extreme types not seen during training



193

6 Related Work and Conclusion

In recent years, there has been a surge of work on
modelling different stylistic aspects, such as po-
liteness and formality, in Natural Language Gen-
eration with deep learning methods (among oth-
ers, Sennrich et al., 2016; Hu et al., 2017; Fi-
cler and Goldberg, 2017; Niu and Bansal, 2018).
Regarding generation in dialogue systems, be-
sides the two response generation models we have
tested, other recent approaches to open-domain
dialogue have considered stylistic aspects. For
example, Yang et al. (2017) leverage metadata
about speakers’ personal information, such as age
and gender, to condition generation using domain
adaptation methods; while Luan et al. (2017) use
multi-task learning to incorporate an autoencoder
that learns the speaker’s language style from non-
conversational data such as blog posts. The output
of these models could also be assessed for person-
ality differences using our method.

More recently, Oraby et al. (2018) have used
the statistical rule-based generator PERSONAGE
(Mairesse and Walker, 2010) to create a syn-
thetic corpus with personality variation within the
restaurant domain. They use the data to train and
evaluate neural generation models that produce
linguistic output given a dialogue act and a set of
semantic slots, plus different degrees of personal-
ity information, and show that the generated out-
put correlates reasonably well with the synthetic
data generated by PERSONAGE. Our work differs
from Oraby et al. (2018) in several respects: We
focus on open-domain chit-chat dialogue, where
the input to the model is surface text (rather than
semantic representations such as dialogue acts)
from naturally occurring dialogue data. Rather
than relying on parallel data with systematic per-
sonality variation, we exploit a personality recog-
niser. In this respect, our approach has some sim-
ilarities to Niu and Bansal (2018), who use a po-
liteness classifier for stylistic dialogue generation.
Here we have used the personality recogniser by
Mairesse et al. (2007), which may not be ideal as it
was originally trained on snippets of conversations
combined with stream of consciousness essays.
Our method, however, is not tied to this particular
recogniser—any other personality recogniser that
produces numerical scores may be used instead.

We think that the automatic evaluation method
we have proposed can be a useful complement to
qualitative human evaluation of chatbot models.

Our study shows that the models under investiga-
tion produce output that retains some stylistic fea-
tures related to personality, and can learn surface
patterns that generalise beyond the training data.

Acknowledgements

RF kindly acknowledges funding by the Nether-
lands Organisation for Scientific Research
(NWO), under VIDI grant 276-89-008, Asymme-
try in Conversation.

References

Dzmitry Bahdanau, Kyunghyun Cho, and Yoshua Ben-
gio. 2015. Neural machine translation by jointly
learning to align and translate. In Proceedings of
ICLR.

Max Coltheart. 1981. The MRC psycholinguistic
database. The Quarterly Journal of Experimental
Psychology Section A, 33(4):497–505.

Jessica Ficler and Yoav Goldberg. 2017. Controlling
linguistic style aspects in neural language genera-
tion. In Proceedings of the Workshop on Stylistic
Variation, pages 94–104. Association for Computa-
tional Linguistics.

Jonathan Herzig, Michal Shmueli-Scheuer, Tommy
Sandbank, and David Konopnicki. 2017. Neural
response generation for customer service based on
personality traits. In Proceedings of The 10th Inter-
national Natural Language Generation conference,
pages 252–256.

Zhiting Hu, Zichao Yang, Xiaodan Liang, Ruslan
Salakhutdinov, and Eric P Xing. 2017. Controlla-
bale text generation. In Proceedings of ICML.

Jiwei Li, Michel Galley, Chris Brockett, Jianfeng Gao,
and Bill Dolan. 2016a. A diversity-promoting ob-
jective function for neural conversation models. In
Proceedings of the 2016 Conference of the North
American Chapter of the Association for Computa-
tional Linguistics: Human Language Technologies,
pages 110–119, San Diego, California. Association
for Computational Linguistics.

Jiwei Li, Michel Galley, Chris Brockett, Georgios Sp-
ithourakis, Jianfeng Gao, and Bill Dolan. 2016b. A
persona-based neural conversation model. In Pro-
ceedings of the 54th Annual Meeting of the Associa-
tion for Computational Linguistics (Volume 1: Long
Papers), pages 994–1003. Association for Computa-
tional Linguistics.

Jiwei Li, Will Monroe, and Dan Jurafsky. 2017. Data
distillation for controlling specificity in dialogue
generation. arXiv preprint arXiv:1702.06703.

http://www.aclweb.org/anthology/N16-1014
http://www.aclweb.org/anthology/N16-1014
https://doi.org/10.18653/v1/P16-1094
https://doi.org/10.18653/v1/P16-1094


194

Chia-Wei Liu, Ryan Lowe, Iulian Serban, Mike Nose-
worthy, Laurent Charlin, and Joelle Pineau. 2016.
How not to evaluate your dialogue system: An em-
pirical study of unsupervised evaluation metrics for
dialogue response generation. In Proceedings of the
2016 Conference on Empirical Methods in Natural
Language Processing (EMNLP).

Yi Luan, Chris Brockett, Bill Dolan, Jianfeng Gao,
and Michel Galley. 2017. Multi-task learning for
speaker-role adaptation in neural conversation mod-
els. In Proceedings of the Eighth International Joint
Conference on Natural Language Processing (Vol-
ume 1: Long Papers), pages 605–614.

François Mairesse and Marilyn A Walker. 2010.
Towards personality-based user adaptation: psy-
chologically informed stylistic language genera-
tion. User Modeling and User-Adapted Interaction,
20(3):227–278.

François Mairesse, Marilyn A Walker, Matthias R
Mehl, and Roger K Moore. 2007. Using linguis-
tic cues for the automatic recognition of personality
in conversation and text. Journal of artificial intelli-
gence research, 30:457–500.

Tong Niu and Mohit Bansal. 2018. Polite dialogue gen-
eration without parallel data. Transactions of the As-
sociation for Computational Linguistics, 6:273–389.

Warren T Norman. 1963. Toward an adequate tax-
onomy of personality attributes: Replicated fac-
tor structure in peer nomination personality ratings.
The Journal of Abnormal and Social Psychology,
66(6):574.

Shereen Oraby, Lena Reed, Shubhangi Tandon,
TS Sharath, Stephanie Lukin, and Marilyn Walker.
2018. Controlling personality-based stylistic varia-
tion with neural natural language generators. In Pro-
ceedings of SIGdial.

James W Pennebaker and Laura A King. 1999. Lin-
guistic styles: Language use as an individual differ-
ence. Journal of personality and social psychology,
77(6):1296.

Rico Sennrich, Barry Haddow, and Alexandra Birch.
2016. Controlling politeness in neural machine
translation via side constraints. In Proceedings of
the 2016 Conference of the North American Chap-
ter of the Association for Computational Linguistics:
Human Language Technologies, pages 35–40.

Iulian V. Serban, Ryan Lowe, Laurent Charlin, and
Joelle Pineau. 2016a. Generative deep neural net-
works for dialogue: A short review. In 30th Con-
ference on Neural Information Processing Systems
(NIPS 2016), Workshop on Learning Methods for
Dialogue.

Iulian V. Serban, Alessandro Sordoni, Yoshua Bengio,
Aaron Courville, and Joelle Pineau. 2016b. Build-
ing end-to-end dialogue systems using generative hi-
erarchical neural network models. In Proceedings

of the Thirtieth AAAI Conference on Artificial Intel-
ligence, AAAI’16, pages 3776–3783. AAAI Press.

Alessandro Sordoni, Michel Galley, Michael Auli,
Chris Brockett, Yangfeng Ji, Margaret Mitchell,
Jian-Yun Nie, Jianfeng Gao, and Bill Dolan. 2015.
A neural network approach to context-sensitive gen-
eration of conversational responses. In Proceed-
ings of the 2015 Conference of the North Ameri-
can Chapter of the Association for Computational
Linguistics: Human Language Technologies, pages
196–205, Denver, Colorado. Association for Com-
putational Linguistics.

Ilya Sutskever, Oriol Vinyals, and Quoc V Le. 2014.
Sequence to sequence learning with neural net-
works. In Advances in neural information process-
ing systems, pages 3104–3112.

Jörg Tiedemann. 2009. News from OPUS-A collection
of multilingual parallel corpora with tools and in-
terfaces. In Recent Advances in Natural Language
Processing, volume 5, pages 237–248.

Min Yang, Zhou Zhao, Wei Zhao, Xiaojun Chen, Jia
Zhu, Lianqiang Zhou, and Zigang Cao. 2017. Per-
sonalized response generation via domain adapta-
tion. In Proceedings of the 40th International ACM
SIGIR Conference on Research and Development
in Information Retrieval, SIGIR ’17, pages 1021–
1024, New York, NY, USA. ACM.

Kaisheng Yao, Geoffrey Zweig, and Baolin Peng.
2015. Attention with intention for a neu-
ral network conversation model. arXiv preprint
arXiv:1510.08565.

Saizheng Zhang, Emily Dinan, Jack Urbanek, Arthur
Szlam, Douwe Kiela, and Jason Weston. 2018. Per-
sonalizing Dialogue Agents: I have a dog, do you
have pets too? ArXiv e-prints.

http://dl.acm.org/citation.cfm?id=3016387.3016435
http://dl.acm.org/citation.cfm?id=3016387.3016435
http://dl.acm.org/citation.cfm?id=3016387.3016435
http://www.aclweb.org/anthology/N15-1020
http://www.aclweb.org/anthology/N15-1020
https://doi.org/10.1145/3077136.3080706
https://doi.org/10.1145/3077136.3080706
https://doi.org/10.1145/3077136.3080706
http://arxiv.org/abs/1801.07243
http://arxiv.org/abs/1801.07243
http://arxiv.org/abs/1801.07243

