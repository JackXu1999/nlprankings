




































Adapting Word Embeddings to New Languages with Morphological and Phonological Subword Representations


Proceedings of the 2018 Conference on Empirical Methods in Natural Language Processing, pages 3285–3295
Brussels, Belgium, October 31 - November 4, 2018. c©2018 Association for Computational Linguistics

3285

Adapting Word Embeddings to New Languages
with Morphological and Phonological Subword Representations

Aditi Chaudhary, Chunting Zhou, Lori Levin,
Graham Neubig, David R. Mortensen, Jaime G. Carbonell
Language Technologies Institute, Carnegie Mellon University

{aschaudh,ctzhou,lsl,gneubig,dmortens,jgc}@cs.cmu.edu

Abstract

Much work in Natural Language Processing
(NLP) has been for resource-rich languages,
making generalization to new, less-resourced
languages challenging. We present two ap-
proaches for improving generalization to low-
resourced languages by adapting continuous
word representations using linguistically mo-
tivated subword units: phonemes, morphemes
and graphemes. Our method requires neither
parallel corpora nor bilingual dictionaries and
provides a significant gain in performance over
previous methods relying on these resources.
We demonstrate the effectiveness of our ap-
proaches onNamedEntity Recognition for four
languages, namely Uyghur, Turkish, Bengali
and Hindi, of which Uyghur and Bengali are
low resource languages, and also perform ex-
periments on Machine Translation. Exploit-
ing subwords with transfer learning gives us a
boost of +15.2 NER F1 for Uyghur and +9.7
F1 for Bengali. We also show improvements
in the monolingual setting where we achieve
(avg.) +3 F1 and (avg.) +1.35 BLEU.

1 Introduction

Continuous word representations have demon-
strated utility in state-of-the-art neural models for
several NLP tasks, such as named entity recogni-
tion (NER;Ma andHovy (2016)), machine reading
(Tan et al., 2017), sentiment analysis (Tang et al.,
2016; Yu et al., 2018), and machine translation
(MT; Qi et al. (2018)). While the training of these
word vectors does not rely on explicit human su-
pervision, their quality is highly contingent on the
size and quality of the unlabeled corpora available.
There are over 7000 languages in the world (Ham-
marström et al., 2018), and corpora with sufficient
size and coverage are available for just a handful,
making it unclear how these methods will perform
in the more common low-resource setting.

Disheartening though this high dependence on
resources sounds, several efforts (Adams et al.,
2017; Haghighi et al., 2008; Bharadwaj et al.,
2016; Mayhew et al., 2017) have shown consid-
erable performance gains across different tasks in
the low resource setting by transferring knowledge
from related high-resource languages. Most exist-
ing approaches for learning cross-lingual word em-
beddings (Ruder, 2017) either extend the monolin-
gual objective function by adding a cross-lingual
regularization objective which is then jointly opti-
mized or use mapping-based approaches to align
similar words across languages. These post-hoc
coordination methods rely on bilingual lexicons
or parallel corpora, which are typically of limited
quantity and uncertain quality.

In this paper, we take a different task: fo-
cusing instead on the similarity of the surface
forms, phonology, or morphology of the two trans-
fer languages. Specifically, inspired by Ling
et al. (2015), who demonstrate the effectiveness
of character-level modeling for knowledge shar-
ing in multilingual scenarios, we propose two ap-
proaches to transfer word embeddings using differ-
ent types of linguistically-inspired subword-level
information. Both approaches focus on mapping
the low resource language embeddings closer to
those of the high resource language and are ex-
ecuted using two different training regimes. We
explore the effect of different subword units—
characters, lemmas, inflectional properties, and
phonemes— as each one offers a unique linguis-
tic insight, discussed more in Section 3. Our pro-
posed approaches do require language specific re-
sources, but importantly do not depend on cross-
lingual resources and achieve considerable perfor-
mance gains over existing methods which do.

We evaluate our proposed approach on two
downstream tasks: NER, which deals with detect-
ing and classifying Named Entities (NEs) into pre-



3286

defined categories (Nadeau and Sekine, 2007), and
MT to English. For the purposes of error analy-
sis and discussion, we focus on the NER task in
particular. NEs are typically noun phrases and oc-
cur rarely in the corpus, making the generalization
across types and domains difficult. We chose NER
as our test bed because word vectors have a di-
rect impact on NER model performance— as sug-
gested by (Ruder, 2017) and observed by us in Ta-
ble 3, where themodel without any pre-trained em-
beddings scores an average of 18 F1 points less. It
thus provides a transparent way to measure the ef-
fectiveness of different subword units.

This paper makes the following contributions:

1. We show that embeddings trained on sub-
word representations yield better task per-
formance than those trained only on whole
words. This is especially true in a transfer set-
ting, where subword representations also out-
perform a word alignment based method. We
further show that embeddings trained onmor-
phological representations often outperform
those trained only on whole words.

2. We demonstrate that training embeddings
on character-based phonemic representations
presents substantial performance advantages
over training on orthographic characters in
some transfer settings, e.g. when there are
script differences across languages. These
advantages are in addition to those from mor-
phological representations (lemmas and mor-
phological properties).

3. We produce continuous representations for
each subword unit, giving researchers the
ability to use them in their own tasks as they
see fit. The code 1 for training word em-
beddings and the embeddings 2 which pro-
duced the best results are publicly available.
We also release morphological analyzers for
Hindi and Bengali3.

2 Skipgram Objective

The two most popular training objectives for
monolingual word embeddings are the skip-
gram and continuous-bag-of-words (CBOW), in-
troduced by Mikolov et al. (2013a). The skipgram

1https://github.com/Aditi138/Embeddings
2https://github.com/Aditi138/Embeddings/

tree/master/embeddings_released
3https://github.com/dmort27/mstem

model attempts to predict the context surrounding
a word, given the word itself whereas CBOW pre-
dicts the word given its context. Formally, given a
corpus having a sequence of words 𝑤1, 𝑤2, ⋯ , 𝑤𝑇,
the skip-grammodel maximizes the following log-
likelihood:

𝑇

∑
𝑖=1

∑
𝑣∈𝐶𝑖

log 𝑝(𝑣|𝑤𝑖) (1)

where 𝐶𝑖 are the context tokens, within a specified
window of the focus word 𝑤𝑖 and 𝑝(𝑣|𝑤𝑖) is the
probability of observing context word 𝑣 given fo-
cus word 𝑤𝑖. The skipgram was originally defined
using the softmax function:

𝑝(𝑣|𝑤𝑖) =
𝑒𝑠(𝑣,𝑤𝑖)

∑𝑊𝑗=1 𝑒
𝑠(𝑤𝑖,𝑗)

(2)

where 𝑠 is a scoring function mapping 𝑣 and 𝑤𝑖
to ℝ. The summation in the denominator is over
the entire vocabulary 𝑊 whichmakes this formula-
tion computationally inefficient as cost of gradient
computation is proportional to 𝑊 which is quite
large (∼ 106). Mikolov et al. (2013b) hence em-
ploy negative sampling to make this computation
efficient and robust (Levy et al., 2015) and give
better representations for infrequent words4, which
is crucial for the low resource settings. Negative
sampling represents the above objective function
(Equation 1) using a binary logistic loss as shown
below:

𝑇

∑
𝑖=1 ( ∑𝑤𝑐∈𝐶𝑖

𝑙(𝑠(𝑤𝑖, 𝑤𝑐)) + ∑
𝑤𝑛∈𝑁𝑖

𝑙(−𝑠(𝑤𝑖, 𝑤𝑛)))
(3)

where 𝑁𝑖 are the negative words sampled ran-
domly from vocabulary and 𝑙 is the log-sigmoid
function. The scoring function 𝑠 is a dot product
similarity function given by 𝑠(𝑤𝑖, 𝑤𝑐) = u⊤𝑤𝑖v𝑤𝑐
where u𝑤𝑖 and v𝑤𝑐 are the embeddings of the focus
word and its context word respectively.

3 Subword Representation

Mikolov et al. (2013b)’s model fails to capture
internal structure of words and does not general-
ize for out of vocabulary words that may share
morphemes with in-vocabulary words. The prob-
lems of this method are particularly salient for

4https://code.google.com/archive/p/
word2vec/

https://github.com/Aditi138/Embeddings
https://github.com/Aditi138/Embeddings/tree/master/embeddings_released
https://github.com/Aditi138/Embeddings/tree/master/embeddings_released
https://github.com/dmort27/mstem
https://code.google.com/archive/p/word2vec/
https://code.google.com/archive/p/word2vec/


3287

graphemes ⟨قارىيالمايدۇ⟩
phonemes /qarijalmajdu/

morphemes /qari-jal-ma-jdu/
lemma+tag qari+Verb+Pot+Neg+Pres+A3sg

gloss ‘s/he can’t care for’

Figure 1: Representations of a word in Uyghur

morphologically rich languages such as Turkish,
Uyghur, Hindi, and Bengali. Although, given a
large enough training corpus, most or all morpho-
logical forms of a lexeme (of which there may be
many) could theoretically learn to have similar vec-
tor representations, it will be vastly more data ef-
ficient if we can take into account regularities of
their form to model morphology explicitly. We ex-
plore the following methods for doing so:

Orthographic units: Wieting et al. (2016) and
Bojanowski et al. (2016) show the utility of
character-level modeling by representing the focus
word 𝑤𝑖 as a set of its character ngrams, denoted
by u𝑤𝑖 =

1
|𝐺| ∑𝑔∈𝐺 x𝑔, where 𝐺 is the set of char-

acter ngrams and x𝑔 is the vector representation of
ngram 𝑔. Such representations capture morpho-
logical information in a brute-force but principled
fashion—words that share the same morpheme are
more likely to share the same character ngrams
than words that do not.

Morphological units: Previous work has found
that morphological relationships between words
can be captured more directly if embeddings are
trained on morphological representations (Luong
et al., 2013; Botha and Blunsom, 2014; Cot-
terell and Schütze, 2015). Avraham and Goldberg
(2017) explicitly model lemmas (stems or citation
forms) and morphological properties (the sets of
which are sometimes called “tags”) for training the
word embeddings. Lemmas capture information
about the lexical identity of a word and are closely
correlated with the semantics of a word; tags cap-
ture information about the syntactic context of a
word. See Figure 1 for an example. We take inspi-
ration from the above work in adapting these sub-
word units for cross-lingual transfer.

Phonological units: Subword units other than
tags might seem to be of no use in closely-related
languages with different scripts (such as Serbian
and Croatian). Following Bharadwaj et al. (2016),
we convert text from its orthographic form into a

phoneme ngrams 𝑥<𝑞𝑎 + 𝑥𝑞𝑎𝑟 + ... + 𝑥𝑚𝑎𝑗𝑑𝑢>
lemma 𝑥qari

morphemes 𝑥𝑉𝑒𝑟𝑏 + 𝑥𝑃𝑜𝑡 + ... + 𝑥𝐴3𝑠𝑔

Figure 2: Vector representations of a word in Uyghur

phonemic representation, stated in terms of the In-
ternational Phonetic Alphabet (IPA). We then train
embeddings on this representation. This means
that, roughly speaking, morphemes that sound the
same will be represented in the same way across
languages.

4 Cross-lingual Transfer

In this section we discuss in detail both our ap-
proaches for cross-lingual transfer along with the
relevant baselines.

4.1 Proposed Approach
We propose to use phoneme ngrams, represented
using IPA, in addition to the lemma and morpho-
logical tags, to enable effective transfer across lan-
guages. Tsvetkov and Dyer (2016) demonstrate
the effectiveness of projecting words from ortho-
graphic space to phonemic space as related lan-
guages often share similar phonological patterns.
More formally, let 𝑃𝑤 be the set of linguistic prop-
erties of a word consisting of the phoneme ngrams
(I𝑔) , lemma (L) and individual morphological tags
(M𝑚). The focus word is then represented as the
average sum of its linguistically motivated sub-
word units:

v𝑤𝑐 =
1

|𝑃𝑤𝑐 | ∑𝑝∈𝑃𝑤𝑐
x𝑝

where x𝑝 is the vector representation of subword
unit 𝑝 of word 𝑤𝑐. The average operation is im-
portant to remove any bias towards words having
too many or too few subword units. For instance,
the Uyghur word in Figure 1 is represented using
its phoneme-ngrams ranging from 3-grams to 6-
grams, lemma and morphological tags as shown in
Figure 2. Avraham and Goldberg (2017) instead
encode the different morphological inflections as
one tag, so that Verb+Pot+Neg+Pres+A3sg would
be encoded as 𝑥𝑉𝑒𝑟𝑏+𝑃𝑜𝑡+𝑁𝑒𝑔+𝑃𝑟𝑒𝑠+𝐴3𝑠𝑔. We encode
each property in a tag separately to avoid data spar-
sity issues and empirically find this approach to
perform better.

We present two training regimes for transferring
knowledge from a related language, namely CT-



3288

Joint and CT-FineTune by explicitly incorporat-
ing the subword units. We hypothesize that having
word representations of both languages lying in a
similar space will aid the low resource language in
leveraging resources from the high resource lan-
guage, including annotations for the downstream
task. These two regimes are described below:

CT-Joint: This model explicitly maps the
word representations of the two languages into the
same space by training simultaneously on both.
This is achieved simply by combining the corpora
of both the high-resource and the low-resource lan-
guage and training jointly using the skip-gram ob-
jective, discussed above. The central intuition is as
follows: once two related languages are placed in
the same phonological and morphological space,
they will share many subword units in common
and this will make joint training profitable. Duong
et al. (2016) and Gouws et al. (2015) have previ-
ously shown the advantages of joint training and
we observe this to be true in our case as well.

CT-FineTune: This model implicitly maps
the word representations of the two languages
into the same space. The model attempts this by
taking the learned continuous representations of
the high resource subword units, referred to by
x𝐻𝑖𝑆𝑊𝑈, and uses them to initialize the model for
the low resource language. The model is first
trained using all subword units on the high re-
source language and the learned representations
are then used for initializing the subword units for
the low resource language. To elucidate which pre-
trained subword helped the most on the low re-
source language, we use the same model for differ-
ent experiments, which is trained using all subword
units—phoneme-ngrams, lemma and morphologi-
cal properties. The linguistic intuition behind CT-
FineTune is similar to that behind CT-Joint. This
idea of transferring parameters from high resource
language has been previously explored by Zoph
et al. (2016) for low resource neural machine trans-
lation which showed considerable improvement.

5 Evaluation

In this section, we first describe the model setup
for training word embeddings followed by details
on NER and MT experiments.

5.1 Implementation details

We base our model on the C++ implementation of
fasttext5(Bojanowski et al., 2016) with modifica-
tions as described above.

Data: We represent a word in the training corpus
using the format presented by Avraham and Gold-
berg (2017). For instance, the Uyghur word in Fig-
ure 1 is represented as follows: phoneme ipa: qari-
jalmajdu, lemma l:qari, and morphological inflec-
tions m:Verb+Pot+Neg+Pres+A3sg. We con-
sider phoneme-ngrams ranging from 3-grams to 6-
grams and append a special start symbol < and end
symbol > to the word. We discard unigrams and
bigram ngrams on the assumption that they don’t
contribute much to the word.

Linguistic properties: We experiment with dif-
ferent subword units for both the transfer set-
ting and the monolingual setting. We use the
orthography-to-IPA tool Epitran (Mortensen et al.,
2018) to obtain the phonemic representations. The
lemmas andmorphological properties for a word in
context are obtained using a rule-based morpho-
logical analyzer in such a fashion as to produce
tags similar to the high resource language. For
Turkish we use the morphological disambiguator
developed by (Shen et al., 2016), which in turn is
based on an FST-basedmorphological analyzer de-
veloped by Oflazer (1994). For Uyghur, we took a
(parser combinator based) morphological analyzer
that had been developed for a DARPA LORELEI
evaluation and modified it to output part-of-speech
tags and to use a property set that was as close as
possible to that of the Oflazer Turkish analyzer.
The analyzer for Turkish produces 116 inflectional
properties and for Uyghur we get 54 properties,
of which 64% are shared with Turkish. Unfortu-
nately, we did not have access to existing mor-
phological analyzers for Hindi or Bengali. Many
Hindi morphological analyzers exist, but they are
not typically released publicly (Malladi and Man-
nem, 2013; Goyal and Lehal, 2008). We developed
our own analyzers using a stemmer-like frame-
work6 over a span of few weeks (2-3), which gave
8 unique morphological tags for Hindi and 10 for
Bengali (for both languages, noun inflection only)
of which just 2 were shared with Hindi.

Morphologically speaking, we only use inflec-
5https://github.com/facebookresearch/

fastText/
6https://github.com/dmort27/mstem

https://github.com/facebookresearch/fastText/
https://github.com/facebookresearch/fastText/
https://github.com/dmort27/mstem


3289

tional properties. For most languages, we consid-
ered derivational affixes to be part of the stem,
since they change the meaning and grammatical
category of the word rather than simply express-
ing syntactic information. An exception to this was
Turkish, where the available morphological ana-
lyzer segments all affixes off from the root. How-
ever, even there we confined our use ofmorpholog-
ical properties to inflectional properties. Deriva-
tional affixes display scopal behavior; since we
wanted to treat the morphological properties of a
word as a set, rather than a sequence, we were re-
quired to choose this option.

Hyperparameters: During training, we con-
sider context tokens within a window size 3 of the
focus word and we sample 5 negative examples
from the vocabulary. We chose a window size
of only 3 based on the fact that we are working
with morphologically rich languages with a rela-
tively high information to token ratio (otherwise a
window size of 5 may be more appropriate). Sub-
word units are initialized with uniform samples
from [ −1𝑑𝑖𝑚 ,

1
𝑑𝑖𝑚 ] where 𝑑𝑖𝑚 = 100. We use the

same training regime as Bojanowski et al. (2016).
For CT-FineTune, instead of uniform samples we
initialize the subword units of the low resource lan-
guage from the learnt x𝐻𝑖𝑆𝑊𝑈.

Lang. Train Dev Test

Turkish 3376 1126 1126
Uyghur 1822 240 2448*
Hindi 3974 497 497
Bengali 1908 53 7012

Table 1: Sentences in train/dev/test set for NER. (*Un-
sequestered set. The full test set has 12,546 sentences.)

5.2 Baselines
For comparison, we train multilingual embeddings
using MultiCCA (Ammar et al., 2016) as our base-
line. It employs canonical correlation analysis by
projecting multiple languages in the same shared
space of one language, also referred to as multi-
language space. This method learns linear pro-
jections for each language into this common lan-
guage space using bilingual lexicons. English is
used as a common vector space due to availability
of corresponding bilingual lexicons between En-
glish and each of our languages. For a fair compar-
ison, we run MultiCCA on monolingual embed-

dings trained with different subword units. We use
100 dimension (Bojanowski et al., 2016) embed-
dings for English.

For NER, we also compare with Bharadwaj
et al. (2016) who use a neural attention model
over phonological features and report the best per-
formance for Turkish using transfer from Uzbek
and Uyghur, and Mayhew et al. (2017) who use
a cheap translation method to translate training
data from high-resource language into the low-
resource language and report best NER results for
Uyghur, as part of the LORELEI program. Our
work differs from these primarily on two fronts:
a) it is independent of the downstream task and
can easily be adapted across various tasks, and
b) it doesn’t require parallel corpora or bilingual
dictionaries. For our monolingual experiments,
we compare our proposed approach with models
using subword representations—Bojanowski et al.
(2016) and Avraham and Goldberg (2017).

5.3 Named Entity Recognition Task

We use state-of-the-art NER architecture (Ma and
Hovy, 2016) as our model for evaluation. The task
is to identify NEs and categorize them into four
types. Since this is a supervised model, the per-
formance is highly contingent on the quality of la-
beled data. F1 scores are used as the evaluation
metric.

5.3.1 Experiments
Weconduct the twomain sets of NER experiments,

1. Transfer experiments on the low resource
languages—Uyghur and Bengali—using
Turkish and Hindi as the high resource
languages respectively. We show results
using both our proposed models, CT-Joint
and CT-FineTune.

2. Monolingual experiments on all four lan-
guages: Uyghur, Turkish, Bengali and Hindi.
We do an ablation study using different com-
binations of subword units.

These language pairs were chosen partly out of
convenience—the data were available to us as part
of the DARPA LORELEI program—and partly
because they satisfied certain deeper desiderata.
Turkish andUyghur are fairly closely related to one
another, as are Hindi and Bengali. Despite this re-
lationship, the members of both pairs are written



3290

Model subword units Uyghur Bengali

CT-Joint phoneme-ngrams + lemma + morph 55.00 60.33
phoneme-ngrams + lemma 56.20 59.63
phoneme-ngrams 54.90 58.50
phoneme 51.30 53.75
char-ngrams + lemma + morph 50.20 55.10
char-ngrams + lemma 48.20 53.83
char-ngrams 49.60 52.77
word 51.80 53.69

CT-FineTune phoneme-ngrams + lemma + morph 48.60 56.19
lemma + morph 52.80 57.72
phoneme-ngrams + lemma 51.00 56.83
phoneme-ngrams 50.50 57.69
phoneme 49.20 59.86

MultiCCA char-ngrams + lemma + morph 41.00 50.63
(Baseline) char-ngrams + lemma 43.10 50.63

char-ngrams 45.80 38.06
word 42.70 45.86

Table 2: Transfer experiments on NER.Metric F1 (out of 100%). Uyghur transfer is from Turkish; Bengali transfer
is from Hindi

in different scripts (Roman and Perso-Arabic; De-
vanagari and Bengali). Finally, all four languages
are morphologically rich, especially Turkish and
Uyghur. These qualities allow us to showcase the
value of embeddings with subword units.

Data Preprocessing: We use data, comprised
of unlabeled corpora, English bilingual dictionar-
ies, annotations, from the Linguistic Data Consor-
tium (LDC) language packs—Turkish and Hindi
7, Bengali8, from which we generate train-dev-
test splits. Uyghur data was released as part of
LoReHLT16 task, organized by NIST 9 under the
aegis of DARPA, and training annotations were ac-
quired using native speakers as part of the task.
For Uyghur we evaluate on an unsequestered set
consisting of 199 annotated evaluation documents,
released by NIST. For Turkish, Hindi and Ben-
gali, we create our own train-dev-test splits (Ta-
ble 1). The exact documents from which May-
hew et al. (2017) and Bharadwaj et al. (2016) cre-
ated their test set is not apparent. The Uyghur
corpus has 27 million tokens and the Turkish cor-
pus has about 40 million tokens. Although Ben-
gali is widely-spoken and the unlabeled corpus

7LDC2014E115,LDC2017E62,http://www.cfilt.
iitb.ac.in/iitb_parallel/

8LDC2017E60, LDC2015E13
9https://www.nist.gov/

contains more than 140 million tokens, there are
very few named entity annotations available, mak-
ing it a low-resource language for the purposes of
this exercise. To have a fair experimental setup
across language pairs, we sub-sample the Bengali
and Hindi corpora to have comparable corpus sizes
with Uyghur and Turkish respectively. We also
up-sample the low resource data for both unla-
beled corpora and NER annotations, so the model
doesn’t become biased towards the high resource
language.

NER model setup: We train the model using
100-dimensional word embeddings, pre-trained
using the above discussed strategies, and use hid-
den dimension of size 100 for each direction of the
LSTM. Stochastic gradient descent was used as the
optimizer with a learning rate of 0.015. Dropout
of 0.5 was used in the LSTM layer to prevent
over-fitting. Uyghur and Turkish were trained for
100 epochs, Bengali and Hindi converged after 70
epochs.

5.3.2 Results and Discussion
Transfer Experiments: From Table 2 we note
that our CT-Joint model trained with phoneme-
ngrams, lemma, and morphological tags out-
performs the MultiCCA baseline by a signifi-
cant margin. MultiCCA strongly depends on

http://www.cfilt.iitb.ac.in/iitb_parallel/
http://www.cfilt.iitb.ac.in/iitb_parallel/
https://www.nist.gov/


3291

Model subword units Turkish Uyghur Hindi Bengali

Ours Char-ngrams + Lemma + Morph 68.06 52.50 73.15 52.77
Char-ngrams + Lemma 68.61 52.40 73.37 52.09
Char-ngrams + Morph 67.97 47.80 73.46 52.06

prop2vec Word + Lemma 66.52 46.00 71.82 50.03
Word + Morph 64.45 46.00 71.52 49.27
Word + Lemma + Morph 68.46 47.70 70.51 48.16

fastText Char-ngrams 66.81 50.80 72.67 52.10

word2vec Word 62.85 46.80 72.04 49.83

Random No embedding 58.94 31.30 59.89 21.25

Table 3: NER results for monolingual experiments. Metric F1 (out of 100%)

Model Uyghur* (unseq.) Uyghur* Turkish Bengali

Ours 56.20 56.00 68.61 60.33
Bharadwaj et al. (2016) – 51.2 66.47 –
Mayhew et al. (2017) 51.32 55.6 53.44 45.70

Table 4: Comparison with previous work using data released by DARPA LORELEI. Metric F1 (out of 100%)
*Official NIST scores.

Figure 3: Recall for all languages (monolingual)
W:Word, NG:Char-ngrams, L:Lemma, M:Morph

bilingual dictionaries which is possibly why it
performs poorly in our low resource setting,
where these dictionaries are not of high qual-
ity. The advantage of phoneme-ngrams over
char-ngrams is quite apparent here. phoneme-
ngrams+lemma+morph performs +5.2 F1 points
better than char-ngram+lemma+morph for both
Uyghur and Bengali, and similar increase is ob-
served across other combinations, the only excep-
tion being the phoneme case for Uyghur which
performed -0.5 F1 with respect to its counterpart
word.

We find CT-Joint to be consistently better per-
forming than CT-FineTune. Interestingly, the per-
formance of CT-FineTune model converges to the
monolingual performance. We hypothesize that
the model forgets the pre-trained subword units as
training progresses.

For CT-FineTune, the column subword units in
Table 2 refers to the subword units which were pre-
trained on a high resource related language. For
example lemma + morph means lemma andmorph
embeddings are first pre-trained on the resouce-
rich language and then used to initialize the respec-
tive lemma and morph representations for the low
resource language.

Monolingual Experiments: Table 3 shows our
results on all languages. We get +5.8 F1 points
for Turkish, +4.8 F1 for Uyghur, +0.8 F1 for
Hindi and +0.7 F1 for Bengali over the exist-
ing methods. We observe that a combination of
character-ngrams, lemma andmorphological prop-
erties gives the best performance for Uyghur and
Bengali. Adding morph hurts in Turkish, in con-
trast to Hindi, where it helps. Section 5.3.3 dis-
cuses plausible reasons for this.

We report official NIST scores on the full eval-
uation set for Uyghur, as part of LORELEI Offical
Retest. Additionally, we compare our results with



3292

Model subword units Uyghur Bengali

CT-Joint phoneme-ngrams + lemma + morph 23.04 7.88
phoneme-ngrams + lemma 23.24 7.62
phoneme-ngrams 23.25 7.45

CT-FineTune lemma + morph 23.71 7.58

Table 5: Transfer experiments for MT. Metric: BLEU. Uyghur transfer is from Turkish; Bengali transfer is from
Hindi

Model subword units Uyghur Bengali

Ours Char-ngrams + Lemma + Morph 23.59 7.96
Char-ngrams + Lemma 23.91 7.77
Char-ngrams + Morph 23.27 7.88

fastText Char-ngrams 23.24 7.91

word2vec Word 23.31 6.64

Random No embedding 23.51 6.23

Table 6: MT results for monolingual experiments. Metric: BLEU

the best results reported on the same LORELEI
dataset. Results are seen in Table 4.

5.3.3 Error analysis
We plot recall curves for all languages. As seen
in Figure 3, adding subword units boosts the re-
call consistently across all languages, more so for
Uyghur. For Turkish, lemma performs better than
lemma+morph, perhaps because the morpholog-
ical analyzer outputs so many redundant proper-
ties which reduce the distance between words that
are not particularly similar. In contrast, morph
helps and lemma hurts in Hindi, perhaps because
the morph analyzer outputs only a small num-
ber of highly informative properties, but is a poor
general-purpose lemmatizer.

We analyze our results for Uyghur language, as
it was part of the LORELEI challenge and presents
a situation close to a real-life application. We base
our analysis on the unsequestered set since anno-
tations for full test data are not released. There are
1,341 NE’s in this set, 396 of which are covered
by the word embeddings when trained with just
monolingual corpus. One obvious advantage of
jointly training with a resource-rich corpus is that
coverage of NEs increases, as validated in our case
where jointly training with Turkish corpus adds
114 more NEs.

Figure 4 shows ten named entities in two
different embeddings (CT-Joint: phoneme-

elidʒ͡an PER
Noun+Pass+Pnon+Nom

dawalaʃ ORG
Noun+Pnon+Nom 

ad ͡ilʒan PER
Noun+Pass+Pnon+Nom 

birazilijɛdɛ GPE
Noun+Pnon+Nom 

afʁanistanGPE
Noun+Pass+Pnon+Nom 

ad ͡ilʒan PER
Noun+Pass+Pnon+Nom 

tygmɛnbeʃi GPE 
Noun+P3sg+Nom 

jawropaniŋ GPE
Noun+P2sg+Nom 

afʁanistan GPE
Noun+Pass+Pnon+Nom 

dawalaʃ ORG
Noun+Pnon+Nom 

birazilijɛdɛ GPE
Noun+Pnon+Nom 

elidʒ͡an PER
Noun+Pass+Pnon+Nom 

afriqidin LOC
Noun+P3pl+Abl 

tygmɛnbeʃi GPE  
Noun+P3sg+Nom 

jawropaniŋ GPE
Noun+P2sg+Nom 

gowujunniŋ GPE
Noun+P2sg+Nom 

gowujunniŋ GPE
Noun+P2sg+Nom 

amerikida GPE 
Noun+Pnon+Nom amerikida GPE 

Noun+Pnon+Nom 

-100 0-50 50 100 150

-50

-100

0

50

100

150

afriqidin LOC
Noun+P3pl+Abl 

Figure 4: Two-dimensional PCA projection of select
NEs from word embeddings for Uyghur—CT-Joint
model trained with phoneme-ngrams+lemma+morph
(blue) and monolingual model trained with char-
ngrams+lemma+morph

ngrams+lemma+morph and monolingual:
char-ngram+lemma+morph). The difference
is striking—in the monolingual condition, the
NEs are widely dispersed, but in the bilingual
condition, the NEs cluster together. This suggests
that phonologically-mediated transfer through
Turkish is resulting in embeddings in which NEs
are close to one another, relative to monolingual
Uyghur embeddings.

5.4 Machine Translation Task

In addition to NER, we test the performance of our
proposed approaches on the MT task to test gen-
erality of our conclusions. We use XNMT toolkit



3293

(Neubig et al., 2018) to translate sentences from
the low-resource language to English. We run sim-
ilar transfer and monolingual experiments as done
for NER. Due to space limitations, we use select
subword combinations for the experiments, details
of which can be found in Appendix. BLEU is used
as the evaluation metric.

From Table 6, we observe that the combina-
tion of character-ngrams and lemma performs the
best for Uyghur (+0.1) and the combination of
character-ngrams, lemma andmorph gives the best
performance for Bengali (+1.7), over the word
baseline, which demonstrates the importance of
subword units for low-resource MT as well. One
likely reason that the combination of character-
ngrams and lemmas consistently show the best per-
formance is that, together, they capture lexical sim-
ilarity, which is more important to translation than
the syntactic information captured by morpholog-
ical inflection (“morph”). However, experiments
using CT-Joint and CT-FineTune (Table 5) do not
follow the same trend as that of NER. We hy-
pothesize that this is because the MT models were
trained on a training set that did not have transla-
tion pairs from the high resource language. As Qi
et al. (2018) note, when training MT systems on a
single language pair, it is less necessary for the em-
beddings to be coordinated across the languages.

6 Related Work

Word Embedding Models: Most algorithms for
learning embeddings take inspiration from lan-
guage modeling (Bengio et al., 2003), motivated
by distributional hypothesis (Harris, 1954), and
employ a shallow neural network to map the words
into a low dimensional space. Pennington et al.
(2014) built over the above local context window
model by combining it with global matrix factor-
ization (Levy and Goldberg, 2014). Recently, Pe-
ters et al. (2018) show significant gains across vari-
ous tasks by learning word vectors as hidden states
of a deep bi-directional language model. This was
originally conceived for resource-abundant lan-
guages, hence it is as-of-yet unclear how general-
izable they are to low-resource settings.

Modeling subword information: Various
methods have validated the importance of mod-
eling subword units in downstream tasks. Xu
et al. (2016); Chen et al. (2015) experiment at
the character level whereas Luong et al. (2013)
use morphemes as a basic unit in recursive neural

network (RNN) to get morphologically-aware
word representations. Xu and Liu (2017) in-
corporate the morphemes’ meanings as part of
the word representation to implicitly model the
morphological knowledge.

Transfer learning: Most recent works using
transfer in low resource setting are coupled tightly
with the downstream task. Jin and Kann (2017)
use morpheme units for cross-lingual transfer in
a paradigm completion task using sequence-to-
sequence models. Tsai et al. (2016) employ a
language-independent method for NER by ground-
ing non-English phrases to English Wikipedia. In-
terestingly, Kim et al. (2017) use separate encoders
for modeling language-specific and language-
agnostic features for part-of-speech (POS) tagging,
and make use of no cross-lingual resources.

7 Conclusion

In this paper, we explored two simple methods
for cross-lingual transfer, both of which are task-
independent and use transfer learning for leverag-
ing subword information from resource-rich lan-
guages, especially through phonological and mor-
phological representations. CT-Joint and CT-
FineTune do not require morphological analyzers,
but we have found that even a morphological ana-
lyzer built in 2-3 weeks can boost performance and
is a worthwhile investment of resources. Prelimi-
nary evaluation on a separate task of MT recon-
firms the utility of subword units and further re-
search will reveal what these learned subword rep-
resentations can contribute to other tasks.

Acknowledgement

This work is sponsored by Defense Advanced Re-
search Projects Agency Information Innovation
Office (I2O). Program: Low Resource Languages
for Emergent Incidents (LORELEI). Issued by
DARPA/I2O under Contract No. HR0011-15-
C0114. The views and conclusions contained in
this document are those of the authors and should
not be interpreted as representing the official poli-
cies, either expressed or implied, of the U.S. Gov-
ernment. The U.S. Government is authorized to
reproduce and distribute reprints for Government
purposes notwithstanding any copyright notation
here on.



3294

References
Oliver Adams, Adam Makarucha, Graham Neubig,

Steven Bird, and Trevor Cohn. 2017. Cross-lingual
word embeddings for low-resource language model-
ing. In Proceedings of the 15th Conference of the
European Chapter of the Association for Compu-
tational Linguistics: Volume 1, Long Papers, vol-
ume 1, pages 937–947.

Waleed Ammar, George Mulcaire, Yulia Tsvetkov,
Guillaume Lample, Chris Dyer, and Noah A Smith.
2016. Massively multilingual word embeddings.
arXiv preprint arXiv:1602.01925.

Oded Avraham and Yoav Goldberg. 2017. The inter-
play of semantics and morphology in word embed-
dings. CoRR, abs/1704.01938.

Yoshua Bengio, Réjean Ducharme, Pascal Vincent, and
Christian Jauvin. 2003. A neural probabilistic lan-
guage model. Journal of machine learning research,
3(Feb):1137–1155.

Akash Bharadwaj, David Mortensen, Chris Dyer, and
Jaime Carbonell. 2016. Phonologically aware neural
model for named entity recognition in low resource
transfer settings. In Proceedings of the 2016 Con-
ference on Empirical Methods in Natural Language
Processing, pages 1462–1472.

Piotr Bojanowski, Edouard Grave, Armand Joulin,
and Tomas Mikolov. 2016. Enriching word vec-
tors with subword information. arXiv preprint
arXiv:1607.04606.

Jan Botha and Phil Blunsom. 2014. Compositional
morphology for word representations and language
modelling. In International Conference on Machine
Learning, pages 1899–1907.

Xinxiong Chen, Lei Xu, Zhiyuan Liu, Maosong Sun,
and Huan-Bo Luan. 2015. Joint learning of character
and word embeddings. In IJCAI, pages 1236–1242.
AAAI Press.

Ryan Cotterell and Hinrich Schütze. 2015. Morpholog-
ical word-embeddings. In Human Language Tech-
nologies: The 2015 Annual Conference of the North
American Chapter of the ACL, pages 1287–1292,
Denver, Colorado. Association for Computational
Linguistics, Association for Computational Linguis-
tics.

Long Duong, Hiroshi Kanayama, Tengfei Ma, Steven
Bird, and Trevor Cohn. 2016. Learning crosslingual
word embeddings without bilingual corpora. arXiv
preprint arXiv:1606.09403.

Stephan Gouws, Yoshua Bengio, and Greg Corrado.
2015. Bilbowa: Fast bilingual distributed represen-
tations without word alignments. In International
Conference on Machine Learning, pages 748–756.

Vishal Goyal and Gupreet Singh Lehal. 2008. Hindi
morphological analyzer and generator. In 2008 First

International Conference on Emerging Trends in En-
gineering and Technology, pages 1156–1159.

Aria Haghighi, Percy Liang, Taylor Berg-Kirkpatrick,
and Dan Klein. 2008. Learning bilingual lexicons
from monolingual corpora. Proceedings of ACL-08:
HLT, pages 771–779.

Harald Hammarström, Sebastian Bank, Robert Forkel,
and Martin Haspelmath. 2018. Glottolog 2.0. Max
Planck Institute for the Science of Human History,
Jena. Available online at http://glottolog.org, Ac-
cessed on 2018-05-21.

Zellig S Harris. 1954. Distributional structure. Word,
10(2-3):146–162.

Huiming Jin and Katharina Kann. 2017. Exploring
cross-lingual transfer of morphological knowledge
in sequence-to-sequence models. In Proceedings of
the First Workshop on Subword and Character Level
Models in NLP, pages 70–75.

Joo-Kyung Kim, Young-Bum Kim, Ruhi Sarikaya, and
Eric Fosler-Lussier. 2017. Cross-lingual transfer
learning for pos tagging without cross-lingual re-
sources. In Proceedings of the 2017 Conference on
Empirical Methods in Natural Language Processing,
pages 2832–2838.

Omer Levy and Yoav Goldberg. 2014. Neural word
embedding as implicit matrix factorization. In Ad-
vances in neural information processing systems,
pages 2177–2185.

Omer Levy, Yoav Goldberg, and Ido Dagan. 2015. Im-
proving distributional similarity with lessons learned
from word embeddings. Transactions of the Associ-
ation for Computational Linguistics, 3:211–225.

Wang Ling, Chris Dyer, Alan W Black, Isabel Tran-
coso, Ramon Fermandez, Silvio Amir, Luis Marujo,
and Tiago Luis. 2015. Finding function in form:
Compositional character models for open vocabulary
word representation. In Proceedings of the 2015
Conference on Empirical Methods in Natural Lan-
guage Processing, pages 1520–1530. Association for
Computational Linguistics.

Thang Luong, Richard Socher, and Christopher Man-
ning. 2013. Better word representations with recur-
sive neural networks for morphology. In Proceed-
ings of the Seventeenth Conference on Computa-
tional Natural Language Learning, pages 104–113.

Xuezhe Ma and Eduard Hovy. 2016. End-to-end
sequence labeling via bi-directional LSTM-CNNs-
CRF. In Proceedings of the 54th Annual Meeting of
the Association for Computational Linguistics (Vol-
ume 1: Long Papers), pages 1064–1074. Association
for Computational Linguistics.

Deepak Kumar Malladi and Prashanth Mannem. 2013.
Statistical morphological analyzer for hindi. In In-
ternational Joint Conference on Natural Language
Processing, pages 1007––1011, Nagoya, Japan.



3295

Stephen Mayhew, Chen-Tse Tsai, and Dan Roth. 2017.
Cheap translation for cross-lingual named entity
recognition. In Proceedings of the 2017 Conference
on Empirical Methods in Natural Language Process-
ing, pages 2536–2545.

Tomas Mikolov, Kai Chen, Greg Corrado, and Jef-
frey Dean. 2013a. Efficient estimation of word
representations in vector space. arXiv preprint
arXiv:1301.3781.

Tomas Mikolov, Ilya Sutskever, Kai Chen, Greg S Cor-
rado, and Jeff Dean. 2013b. Distributed representa-
tions of words and phrases and their compositional-
ity. In Advances in neural information processing
systems, pages 3111–3119.

David R. Mortensen, Siddharth Dalmia, and Patrick
Littell. 2018. Epitran: Precision G2P for many lan-
guages. In Proceedings of the Eleventh International
Conference on Language Resources and Evaluation
(LREC 2018), Paris, France. European LanguageRe-
sources Association (ELRA).

David Nadeau and Satoshi Sekine. 2007. A survey of
named entity recognition and classification. Linguis-
ticae Investigationes. Publisher: John Benjamins
Publishing Company.

Graham Neubig, Matthias Sperber, Xinyi Wang,
Matthieu Felix, Austin Matthews, Sarguna Pad-
manabhan, Ye Qi, Devendra Singh Sachan, Philip
Arthur, Pierre Godard, John Hewitt, Rachid Riad,
and Liming Wang. 2018. XNMT: The extensible
neural machine translation toolkit. In Conference
of the Association for Machine Translation in the
Americas (AMTA) Open Source Software Showcase,
Boston.

Kemal Oflazer. 1994. Two-level description of Turk-
ish morphology. Literary and Linguistic Comput-
ing, 9(2):137–148.

Jeffrey Pennington, Richard Socher, and Christopher
Manning. 2014. GloVe: Global vectors for word rep-
resentation. In Proceedings of the 2014 conference
on empirical methods in natural language process-
ing (EMNLP), pages 1532–1543.

Matthew E Peters, Mark Neumann, Mohit Iyyer, Matt
Gardner, Christopher Clark, Kenton Lee, and Luke
Zettlemoyer. 2018. Deep contextualized word rep-
resentations. arXiv preprint arXiv:1802.05365.

Ye Qi, Devendra Sachan, Matthieu Felix, Sarguna Pad-
manabhan, and Graham Neubig. 2018. When and
why are pre-trained word embeddings useful for neu-
ral machine translation? In Proceedings of the 2018
Conference of the North American Chapter of the
Association for Computational Linguistics: Human
Language Technologies, Volume 2 (Short Papers),
pages 529–535. Association for Computational Lin-
guistics.

Sebastian Ruder. 2017. A survey of cross-lingual em-
bedding models. arXiv preprint arXiv:1706.04902.

Qinlan Shen, Daniel Clothiaux, Emily Tagtow, Patrick
Littell, and Chris Dyer. 2016. The role of context
in neural morphological disambiguation. In Pro-
ceedings of COLING 2016, the 26th International
Conference on Computational Linguistics: Techni-
cal Papers. The COLING 2016 Organizing Commit-
tee.

Chuanqi Tan, Furu Wei, Nan Yang, Weifeng Lv, and
Ming Zhou. 2017. S-net: From answer extraction to
answer generation for machine reading comprehen-
sion. arXiv preprint arXiv:1706.04815.

Duyu Tang, Furu Wei, Bing Qin, Nan Yang, Ting Liu,
and Ming Zhou. 2016. Sentiment embeddings with
applications to sentiment analysis. IEEE Trans. on
Knowl. and Data Eng., 28(2):496–509.

Chen-Tse Tsai, Stephen Mayhew, and Dan Roth. 2016.
Cross-lingual named entity recognition via wikifica-
tion. In Proceedings of The 20th SIGNLL Confer-
ence on Computational Natural Language Learning,
pages 219–228.

Yulia Tsvetkov and Chris Dyer. 2016. Cross-lingual
bridges with models of lexical borrowing. J. Artif.
Int. Res., 55(1):63–93.

John Wieting, Mohit Bansal, Kevin Gimpel, and Karen
Livescu. 2016. Charagram: Embedding words and
sentences via character n-grams. arXiv preprint
arXiv:1607.02789.

Jian Xu, Jiawei Liu, Liangang Zhang, Zhengyu Li, and
Huanhuan Chen. 2016. Improve Chinese word em-
beddings by exploiting internal structure. In HLT-
NAACL.

Yang Xu and Jiawei Liu. 2017. Implicitly incorpo-
rating morphological information into word embed-
ding. arXiv preprint arXiv:1701.02481.

Liang-Chih Yu, Jin Wang, K. Robert Lai, and Xue-
jie Zhang. 2018. Refining word embeddings using
intensity scores for sentiment analysis. IEEE/ACM
Transactions on Audio, Speech, and Language Pro-
cessing, 26(3):671–681.

Barret Zoph, Deniz Yuret, Jonathan May, and
Kevin Knight. 2016. Transfer learning for low-
resource neural machine translation. arXiv preprint
arXiv:1604.02201.


