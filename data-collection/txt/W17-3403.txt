



















































On the Logical Complexity of Autosegmental Representations


Proceedings of the 15th Meeting on the Mathematics of Language, pages 22–35,
London, UK, July 13–14, 2017. c©2017 Association for Computational Linguistics

On the Logical Complexity of Autosegmental Representations

Adam Jardine
Rutgers University

adam.jardine@rutgers.edu

Abstract

Autosegmental mapping from disjoint
strings of tones and tone-bearing units, a
commonly used mechanism in phonologi-
cal analyses of tone patterns, is shown to
not be definable in monadic second-order
logic. This is abnormally complex in com-
parison to other phonological mappings,
which have been shown to be monadic
second-order definable. In contrast, gen-
eration of autosegmental structures from
strings is demonstrated to be first-order de-
finable.

1 Introduction

This paper applies logical transductions as in-
troduced by Courcelle (1994) to study the cog-
nitive complexity of non-string representations
and transformations in phonology. Generative
phonology studies phonological patterns both in
terms of transformations, or relations between in-
put underlying representations (URs) and output
surface representations (SRs), and phonotactics,
or generalizations about the well-formedness of
SRs. Studies of the computational complexity of
these patterns have established clear bounds on
the expressivity needed to describe them. For
example, Johnson (1972) and Kaplan and Kay
(1994) showed that the ordered rewrite-rule gram-
mars of Chomsky and Halle (1968) describe ex-
actly Regular string relations, and more recent
cross-linguistic studies have shown that phonolog-
ical transformations fall into more restrictive sub-
classes of the Regular class (Chandlee and Heinz,
2012; Chandlee, 2014; Heinz and Lai, 2013;
Payne, 2014; Jardine, 2016a). Similarly, phono-
tactic patterns have been shown to fall into sub-
Regular classes of formal languages (Heinz, 2009,
2010; Rogers et al., 2013). This has led to a

hypothesis that there is a sub-Regular bound on
phonology (see, e.g., Heinz and Idsardi, 2013),
which has clear connections to cognitive complex-
ity (Rogers and Pullum, 2011; Rogers et al., 2013)
and how humans learn sound patterns (Heinz,
2009, 2010; Lai, 2015).

However, these complexity classes are defined
in terms of strings, and since the advent of au-
tosegmental phonology (Goldsmith, 1976), gener-
ative phonology has commonly employed the use
of non-string structures. Perhaps the most com-
monly used of these has been autosegmental rep-
resentations (ARs), which represent words with
graph structures in which disjoint strings are as-
sociated to one another in some fashion. For ex-
ample, Fig. 1 shows an autosegmental derivation
for the Mende word [félàmà] ‘junction’, which
is comprised of a high-toned syllable followed
by two low-toned syllables (following convention
syllables are represented with σ).

H L

σ σ σ
(UR)

→
H L

❅❅
σ σ σ
(SR)

Figure 1: AR derivation for [félàmà] ‘junction’

In the AR, the tone pattern of [félàmà] is rep-
resented as a HL (high-low) string associated to
three syllables as depicted on the right-hand side
of Fig. 1 (with association depicted by straight
lines). While finite-state models of ARs and AR
transformations exist, much of this work has found
the need to use enriched automata with additional
tapes (Kay, 1987; Wiebe, 1992; Kornai, 1995) or
synchronized states (Bird and Ellison, 1994).

Instead, this paper takes a logical approach
to studying the complexity of autosegmental
representations (thus following the work of
Bird and Klein, 1990; Jardine, 2014), as it allows

22



for more flexibility with respect to the structures
we can describe. This builds on a few key results.
First, the Regular sets of strings are exactly those
definable by monadic second-order (MSO) logic
(Büchi, 1960; Elgot, 1961; Trakhtenbrot, 1961).
Second, Courcelle (1994) introduced MSO trans-
ductions for graph structures, in which the out-
put structure is determined as an MSO interpre-
tation of the input structure. As MSO-definable
string transductions subsume Regular functions
(Filiot and Reynier, 2016), we can then recast the
Regular hypothesis for phonology in logical terms:
phonology is at most MSO-definable.

This leads to the two results of this paper, one
negative and one positive. First, tone mapping
transformations, in which an unassociated AR is
mapped to a fully associated one—exemplified in
Fig. 1—are not MSO-definable. Second, (at least
some) ARs are first-order (FO) definable from
strings; i.e., we can write a FO transduction from
a string representing a sequence of toned syllables
to its corresponding AR. Because this transduc-
tion is defined in the terms of the FO language
of the input, this means that any FO formula we
write over these ARs can be translated into the FO
logic of their corresponding strings. This means
that any FO constraint written over these ARs still
describes a Regular set of strings—i.e., that ARs
are not significantly more expressive than strings.

This paper is structured as follows. §2 intro-
duces string models and logic, and §3 details how
this relates to the study of phonology. §4 dis-
cusses the non-definability of tone mapping in
MSO, and §5 discusses the FO-definability of ARs
from strings. §6 concludes.

2 Preliminaries

2.1 String models and logics

Let an alphabet Σ be a finite set of symbols and
a string w be a sequence of symbols in Σ; let |w|
denote the length of w. Let Σ∗ represent all possi-
ble strings over Σ, including the empty string λ
(|λ| = 0). A stringset (or formal language) is
some subset of Σ∗. For some σ ∈ Σ, σn denotes
the string consisting of n repetitions of σ.

A relational model 〈U,R1, R2, ..., Rn〉 is a rep-
resentation of some structure with a universe U of
elements and n relations Ri ⊆ Uk for some fi-
nite k. We can represent a string w ∈ Σ∗ with
a finite relational model Mw = 〈U,≺, (Pσ)σ∈Σ〉
where U = {1, 2, ..., |w|} is an initial segment of

the natural numbers representing the positions in
the string, ≺ is a binary relation representing the
natural order over the positions in the string, and
each Pσ is a unary relation representing the set of
positions containing the symbol σ. For example,
for Σ = {a, b} the model for the string aba is

Maba =
〈
{1, 2, 3}U , {(1, 2), (1, 3), (2, 3)}≺ ,

{1, 3}Pa , {2}Pb
〉
.

We can use these models of this form to define
a first order (FO) predicate logic over strings in
Σ∗. Let x, y, ... denote variables that range over
positions in a string. For variables x and y, we can
then use x ≺ y and σ(x) for each σ ∈ Σ as atomic
predicates which are true when x and y are inter-
preted as positions related by ≺ in a string model
and when x is interpreted as a position in the unary
relation Pσ of a model, respectively. We also as-
sume an additional atomic predicate x = y which
is true when x and y are interpreted as the same
position. A FO logic is then the set of formulas
built recursively out of these atomic predicates and
the logical connectives ¬,∧,∨,→ and the quan-
tifiers ∃,∀ in the usual way. A free variable is
a variable not bound by a quantifier; we write
ϕ(x1, x2, ..., xn) to indicate that x1, x2, ..., xn is
the exhaustive set of free variables in a FO for-
mula ϕ. For example, we can define the following
useful formulas with one free variable:

first(x)
def
= (∀y)[¬y ≺ x]

last(x)
def
= (∀y)[¬x ≺ y]

We also define a two-variable formula for the suc-
cessor relation (using infix notation).

x ⊳ y
def
= x ≺ y ∧ (∀z)[¬(x ≺ z ∧ z ≺ y)]

A formula ϕ with no free variables is called a
sentence. Let satisfaction of a model M of ϕ,
written M |= ϕ, be defined in the usual way. The
set of strings L(ϕ) described by ϕ is the set of
strings {w ∈ Σ∗|Mw |= ϕ}. For example, if

lasta
def
= (∀x)[last(x) → a(x)]

then L(lasta) is the set of strings that end in a.
A monadic second order (MSO) logic is a FO

logic extended with the ability to quantify over ar-
bitrary sets in the string. Let set variables X,Y, ...
which range over sets of positions in a string. A
MSO logic is thus FO logic to which we add the

23



atomic formulas X(x), Y (x), etc., which are true
when x is interpreted as a position in the set as-
signed to X, Y , etc., and in which ∃ and ∀ can
also bind set variables.

It is well-known that FO sentences over
string models with ≺ describe exactly the Star-
Free stringsets (McNaughton and Papert, 1971)
whereas MSO sentences describe exactly the
Regular stringsets (Büchi, 1960; Elgot, 1961;
Trakhtenbrot, 1961).

2.2 Logically definable transductions
We can also use logic to define a transduc-
tion from an input structure to an output struc-
ture, as first introduced by Courcelle (1994)
for graphs and later related to string transduc-
tions and their automata-theoretic characteriza-
tions (Engelfriet and Hoogeboom, 2001; Filiot,
2015). (For an overview of related work see
Filiot and Reynier 2016.)

In such a logical transduction, the output struc-
ture is defined by an interpretation over a finite
number of copies of the input structure (where ‘in-
terpretation’ is used in the sense of a translation
from the logical language of one structure into that
of another; see, e.g. Hodges 1997). MSO and FO
transductions are defined as follows.

Definition 1 (MSO/FO transduction) Given
some natural number k, an input alphabet Σ
and an output alphabet Γ, an MSO (resp. FO)
transduction is defined by

• ϕdom, a domain formula, or sentence in the
MSO (FO) logic of the input that defines the
domain of the transduction,

• For each 1 ≤ n ≤ k and γ ∈ Γ, a formula
ϕnγ (x) in the MSO (FO) logic of the input
with exactly one free variable, and

• For each 1 ≤ n,m ≤ k, a formula
ϕn,m≺Γ (x, y) in the MSO (FO) logic of the in-
put with exactly two free variables

To restrict our domain to strings in Σ∗, we
include in our domain formula the sentence
stringΣ as defined by

stringΣ
def
= (∀x)[∨σ∈Σ σ(x)]∧

(∀x)[∧σ 6=σ′∈Σ σ(x) → ¬σ′(x)]∧
(∀x, y, z)[x ⊳ y ∧ x ⊳ z → y = z]∧
(∀x, y)[first(x) ∧ first(y) →

x = y]

The output of such a transduction is defined as
follows. For each position x in the input and for
each n for which exactly one ϕnγ (x) is true, a copy
of x labeled γ appears in the output. For each pair
of positions x, y and for each pair n,m for which
ϕn,m≺Γ is true, the nth copy of x precedes the mth
copy of y with respect to the output ordering ≺Γ
on positions in the output. For example, to rewrite
strings over the alphabet Σ = Γ = {a, b} such
that each b immediately following another b in the
input is written out as an a then we set k = 1 and

ϕdom
def
= stringΣ

ϕ1a(x)
def
= a(x) ∨ (b(x) ∧ (∃y)[y ⊳ x ∧ b(y)])

ϕ1b(x)
def
= b(x) ∧ ¬(∃y)[y ⊳ x ∧ b(y)]

ϕ1,1≺Γ(x, y)
def
= x ≺ y

This transduction is illustrated in Fig. 2 for an in-
put string abba.

First, ϕ1a(x) is defined to be true in the output
for all positions x in the input that are either la-
beled a or are labeled b but also succeed some in-
put b. Thus, the copies corresponding to each a in
the input are labeled as in the output, as well as
the copy for the second input b in the input. Like-
wise, ϕ1b(x) is defined to be true in the output for
all positions x in the input that are labeled b and
do not succeed another b. In Fig. 2, this is true for
the first b in the input, so its copy is also labeled
b. As the output order ϕ1,1≺Γ(x, y) is defined to be
true when the input order x ≺ y is true, the order
is preserved exactly in the output.

Input: a b b a

Output: a b a a

Figure 2: Replacing b with a following an input b

Note as there is only one interpretation
per input, these transductions are functional.
(For non-functional MSO transductions, see
Engelfriet and Hoogeboom 2001.)

To give one more example, we can define a
transduction that ‘doubles’ a string, i.e. given
an input w ∈ Σ∗ outputs ww. We set k = 2,
ϕdom

def
= stringΣ, and

ϕ1a(x)
def
= ϕ2a(x)

def
= a(x) ϕ1,2≺Γ(x, y)

def
= x < yTrue

ϕ1b(x)
def
= ϕ2b(x)

def
= b(x) ϕ2,1≺Γ(x, y)

def
= False

ϕ1,1≺Γ(x, y)
def
= ϕ2,2≺Γ(x, y)

def
= x ≺ y

24



(True and False indicate a formula is evaluated
to true or false for any input positions.)

This is interpreted as follows. Each a and b
in the input is given two identical copies in the
output. As both ϕ1,1≺Γ(x, y) and ϕ

2,2
≺Γ(x, y) are set

equal to x ≺ y, the first set of copies has the
same order as the input, as does the second. That
ϕ1,2≺Γ(x, y) is set to True states that all copies in
the first set precede all copies in the second set;
this establishes an order between the two sets of
copies. Finally, setting ϕ2,1≺Γ(x, y) to False en-
sures that second copies never precede first copies.
An example with abba in the input is depicted in
Fig. 3.

Input: a b b a

Output: a b b a

a b b a

Figure 3: Doubling abba

This second example shows that we can freely
manipulate the order of elements in the output; in-
deed, the output need not be a string. In fact, we
can define the output structure to have a new bi-
nary relation R not present in the input structure
by definining a predicate ϕm,nR (x, y) in terms of
the MSO logic of the input structure. We make use
of this in §4.2. Importantly, as they are defined in
terms of interpretations, both MSO and FO trans-
ductions are closed under composition for graph
structures in general (Courcelle, 1994).

3 Logic and phonology

Because of its well-known connections to com-
putational complexity, we can apply logic to the
study of the complexity of phonological patterns.
This section reviews relevant results from the
study of phonotactic (phonological surface well-
formedness) patterns as stringsets and phono-
logical transformations (mappings from URs to
SRs) as transductions. Both show that MSO-
definability is a clear, if loose, bound on the com-
plexity of phonology.

3.1 Stringsets

Phonotactics are language-specific well-
formedness constraints on how sounds can
be combined to create words. An example from
Kagoshima Japanese is given in Table 1: all words

have a high tone either on the final or penultimate
mora (Kubozono, 2012). (The high tone is marked
with an acute accent [á] on the vowel.)

hána ‘nose’ HL
sakúra ‘cherry blossom’ LHL
kagarı́bi ‘watch fire’ LLHL
... ...
haná ‘flower’ LH
usagı́ ‘rabbit’ LLH
kakimonó ‘document’ LLLH
... ...

Table 1: Kagoshima Japanese tone well-
formedness

Such constraints can be modeled as
stringsets. For example, given the al-
phabet {H,L}, the Kagoshima pattern
can be modeled as the set of strings
{HL,LHL,LLHL, ...,LH,LLH,LLLH, ...},
where Ls and Hs represent low- and high-toned
moras, respectively.

All previous work on natural language phono-
tactics as stringsets has found these patterns to be
at most Regular stringsets, with all but a few ex-
ceptions being sub-Star Free (Heinz, 2007, 2009,
2010; Heinz et al., 2011; Rogers et al., 2013). In
logical terms, this means that definability in MSO
is a clear bound on the complexity of phonotac-
tics, with most patterns being FO-definable. To il-
lustrate, the stringset representing the Kagoshima
tone pattern can be defined with the FO sentence

(lastH ∨ penultH)∧
(∀x, y)[(H(x) ∧ H(y)) → x = y],

where lastH is defined as lasta above and
penultH is defined as (∀x,∃y)[(x ⊳ y ∧
last(y)) → H(x)]. This sentence describes the
set of strings that has exactly one H either in final
or penultimate position.

These results are important for a theory
of phonology because they allow for the hy-
pothesis that phonotactics are at most MSO-
definable, a hypothesis which can be in-
terpreted in terms of cognitive complexity
(Rogers and Pullum, 2011; Rogers et al., 2013)
and how humans learn phonotactics (Heinz, 2010;
Lai, 2015; McMullin and Hansson, 2015). More
restrictive characterizations exist, based on sub-
classes of the Star-Free stringsets (see, e.g., Heinz,
2010), but for the present purposes it is enough to
consider FO- and MSO-definability.

25



3.2 Transductions

We can also fruitfully apply logical transduc-
tions to phonological theory (Heinz, forthcoming),
as mainstream theories of generative phonol-
ogy aim to explain linguistic sound patterns
through a transformation from an input UR
to an output SR (Chomsky and Halle, 1968;
Prince and Smolensky, 2004). Indeed, these trans-
formations have been studied from an automata-
theoretic perspective, leading to restrictive char-
acterizations of phonology. Johnson (1972) and
Kaplan and Kay (1994) show that the phonologi-
cal rewrite rules of Chomsky and Halle (1968) are
describable with finite state machines; that is, that
they describe Regular relations. Subsequent work
on phonological transformations has demonstrated
for a wide variety of processes—including local
assimilation, deletion, and epenthesis (Chandlee,
2014), dissimilation (Payne, 2014), metathesis
(Chandlee and Heinz, 2012), and vowel harmony
(Heinz and Lai, 2013)—to lie in even more re-
strictive subclasses of Regular string transduc-
tions. The single known possible exception to
this is full reduplication—i.e. the copying over of
an entire input form, as in the Indonesian buku-
buku ‘books’, lit. ‘book-book’ (Sneddon et al.,
2010). This is not a Regular relation, although
it can be argued that this process is morphologi-
cal and not phonology proper (for discussion see
Chandlee and Heinz, 2012).

From the logical perspective, all of these re-
sults place phonological transformations squarely
within the class of MSO-definable transductions.
Any functional Regular relation is MSO-definable
(Filiot and Reynier, 2016), so any phonological
transformation describable with a (functional)
rewrite rule is MSO-definable. Even full redu-
plication is FO-definable, as witnessed by the
string doubling transduction defined in §2.2. Thus,
MSO-definability appears to be a loose, yet clear,
bound on the computational complexity of phono-
logical transformations.

3.3 Interim summary

The above has reviewed the evidence for MSO-
definability as a complexity bound on phonol-
ogy. The advantage of viewing such a complexity
bound in logical terms is that we are able to view
the complexity of both phonotactics and transfor-
mations in unified terms.

A further advantage of the logical perspective is

that it allows us to study the complexity of non-
string representations in the same terms. The re-
mainder of the paper studies autosegmental repre-
sentations (ARs) in the same terms.

4 The complexity of tone mapping

This section motivates tone mappings and ARs us-
ing a well-known empirical case, then it is shown
that tone mapping is not MSO-definable.

4.1 Tone mapping in Mende

Mende (Leben, 1973, 1978) is a classic example
of a tone pattern which has been argued to be best
analyzed in terms of autosegmental mapping of
tones to syllables. Mende nouns fall in to one of
five categories: 1) words for which all syllables
are pronounced with a high tone (e.g. [háwámá]
‘waist’), 2) words for which all syllables are pro-
nounced with a low tone (e.g. [kpàkàlı̀] ‘three-
legged chair’), 3) words which begin high but end
low (e.g. [mbû] ‘owl’ and [félàmà] ‘junction’), 4)
words which begin low but end high (e.g. [mbǎ]
‘rice’ and [ndàvúlá] ‘sling’), and 5) words which
show a rising-falling pattern (e.g. [mbǎ̀ ] ‘compan-
ion’ and [nı̀kı́lı̀] ‘peanut’). These five categories
are exemplified by the forms in Table 2, where
tones are indicated as diacritics on the vowels as
follows: [á] = high tone, [à] = low tone, [â] =
falling tone, [ǎ] = rising tone, and [ǎ̀ ] = rising-
falling tone. The columns are of 1-, 2-, and 3-
syllable words.

1. H kÓ pÉlÉ háwámá
‘war’ ‘house’ ‘waist’

2. L kpà bÈlÈ kpàkàlı̀
‘debt’ ‘pants’ ‘chair’

3. HL mbû ngı́là félàmà
‘owl’ ‘dog’ ‘junction’

4. LH mbǎ fàndé ndàvúlá
‘rice’ ‘cotton’ ‘sling’

5. LHL mbǎ̀ nyàhâ nı̀kı́lı̀
‘companion’ ‘woman’ ‘peanut’

Table 2: Mende noun tone (Leben, 1978)

Of interest is the fact that contour tones—
that is, the rising and falling toned-syllables—
and plateaus, or sequences of like-toned syllables,
only occur on the right edge of the word. For ex-
ample, [nyáhâ] ‘woman’ is attested, but a word
like *[nyâhá], with a rising toned-syllable on the
left edge, is not attested. Likewise, words like

26



[félàmà] ‘junction’, with a sequence of two low-
toned syllables on the right edge, are commonly
attested, whereas words like *[fèlàmá], are rare.1

Furthermore, Mende words conform to one of the
five tonal shapes exemplified in Table 2; words
showing a falling-rising pattern, for example, are
unattested.

Furthermore, these tonal shapes are maintained
when toneless suffixes are affixed to the noun, re-
sulting in the tone of the suffix varying depending
on the tone pattern of its root. The following data
illustrate this with the toneless suffix /-ma/ ‘on’.

Isolation Suffixed
H pÉlÉ pÉlÉ-má ‘war’
HL mbû mbú-mà ‘owl’

ngı́là ngı́là-mà ‘dog’
LHL nyàhâ nyàhá-mà ‘companion’

Table 3: Mende /-ma/ suffix tone (Leben, 1978)

Note that the suffixed forms also preserve the
generalizations noted above restricting contours
and plateaus to the right edge, and so the tone
pattern ‘stretches’ to accomodate the new sylla-
ble. Thus [mbû] ‘owl’, which has a contour falling
tone in isolation, is realized with a sequence of
pure high and low-toned syllables as [mbú-mà]
‘on owl’ when suffixed.

Following a proposal by Leben (1973), and sub-
sequent work in autosegmental phonology (e.g.,
Goldsmith, 1976; Pulleyblank, 1986; Yip, 2002)
tone patterns like Mende’s have been explained by
a left-to-right mapping of a melody, or string of
tonal units, to a string of syllables. These disjoint
strings are referred to as tiers, and the representa-
tion as a whole is an AR. For example, the words
in Table 2, Row 3 share a HL (high-low) melody,
which is then mapped to the syllables in the words
as depicted in Fig. 4. Following convention, syl-
lables are denoted with σ and the association rela-
tion depicted as lines drawn between units on dis-
tinct tiers.

Thus, the contour falling tone of [mbû] ‘owl is
the result of an HL sequence associating to a single
syllable; likewise the plateau of low-toned sylla-
bles in [félàm̀a] ‘junction’ is the result of an L tone
associating to multiple syllables. The question
then is how to restrict association such that this
multiple association occurs only on the right edge

1See Dwyer (1978) and rebuttal by Leben (1978) for dis-
cussion about exceptions to the generalizations stated here.

H L
��
σ
[mbû]

H L

σ σ
[ngı́là]

H L
❅❅

σ σ σ
[félàmà]

Figure 4: ARs illustrating mapping of HL melody
to words of various syllable length

of the word. Because this association pattern holds
for all lexical items, including the suffixed forms
in Table 3, it is thus entirely predictable and taken
not to be present in the UR of a word. Thus, it must
be created by some phonological transformation
that associates tones to syllables. This transforma-
tion has been analyzed as proceeding according to
laws often referred to as the well-formedness con-
ditions (WFCs). The following definition is due to
Yip (2002).

Definition 2 The well-formedness conditions

a. Every syllable must have a tone.
b. Every tone must be associated to some sylla-

ble.
c. Association proceeds one-to-one, left-to-

right.
d. Association lines must not cross.

Intuitively, the WFCs ensure that in the SR, ev-
ery tone is associated to some syllable, and vice-
versa, by a step-by-step process in which first tone
and first syllable are associated, then the second
tone and second syllable, and so on. (It bears men-
tioning that ‘one-to-one’ here is used not as it is
to describe mathematical functions, but in terms
of how pairs of tones and syllables are associated
one after another.) If there are remaining tones or
syllables on the right edge of a tier that have not
been paired off, WFCs (a), (b), and (d) associate
them to the rightmost unit on the opposite tier: (a)
and (b) require all units to be associated, but (d)
forbids the crossing of any existing associations to
do so. Fig. 5 shows how this process works for
[nyàhâ] ‘woman’, [nyàhá-mà] ‘on woman’, both
of which have an underlying LHL melody, and
[félàmà] ‘junction’, which has an underlying HL
melody. This figure demonstrates that the WFCs
explain the generalization in Mende that contours
and plateaus only occur on the right edge of the
word through a transformation from a UR with no
association to a fully associated SR.

The WFCs have been shown not to be
strictly universal; whether or not tones are as-

27



UR SR

L H L

σ σ
→

L H L

σ σ
→

L H L

σ σ
→

L H L
��

σ σ
[nyàhâ] ‘woman’

L H L

σ σ σ
→

L H L

σ σ σ
→

L H L

σ σ σ
→

L H L

σ σ σ
[nyàhá-mà] ‘on woman’

H L

σ σ σ
→

H L

σ σ σ
→

H L

σ σ σ
→

H L
❅❅

σ σ σ
[félàmà] ‘junction’

Figure 5: Step-by-step breakdown of the associa-
tion transformation

sociated from left-to-right or right-to-left, or
whether or not contours are built out of left-
over tones or are simply left unpronounced,
have been shown to vary from language to
language (Goldsmith, 1976; Newman, 1986;
Pulleyblank, 1986; Hewitt and Prince, 1989;
Archangeli and Pulleyblank, 1994; Yip, 2002).
Also, there have since been non-derivational
approaches to tone mapping (Zoll, 2003). How-
ever, all generative explanations of tone mapping
patterns that use ARs rely on the idea of an
unassociated UR being transformed into a SR
with associations, with one-to-one association
forming the basis of the transformation. The
following shows that such a transformation is not
a MSO-definable transduction.

4.2 Tone mapping as a logical transduction
We can characterize this transformation, as de-
picted in Fig. 6, as a transduction that takes two
strings of length n and m, respectively (n,m > 0),
as input and adds an association relation between
the positions in the strings that follows the WFCs
outlined in Def. 2. As long as we can assume there
is some property that distinguishes between units
on each tier, we can abstract away from distinc-
tions between units on a particular tier and instead
focus on predicates a(x) and b(x) which are true
if and only if x is on the ‘upper’ and ‘lower’ tier,
respectively. (For example, a(x) can mean ‘x is a
tone’ and b(x) can mean ‘x is a syllable’.)

In terms of relational models, the transduction
takes models of the form

〈U,≺, Pa, Pb〉

Input: Output:

a1 a2 . . . an

b1 b2 . . . bm

a1 a2 . . . an

b1 b2 . . . bm

Figure 6: The association transduction

and describes a model of the form
〈
U ′,≺′, ◦, Ra, Rb

〉
,

where ◦ denotes a new relation representing asso-
ciation. This relation must conform to the WFCs
in Def. 2; this is formalized in Def. 3 of the asso-
ciation relation.

Definition 3 For an AR whose tiers are a pair of
disjoint strings a1a2...an and b1b2...bm, and for ℓ
being the lesser of n and m, the association rela-
tion ◦ is the unique relation comprised of the sym-
metric closure of all pairs (ai, bi) for 1 ≤ i ≤ ℓ
unioned with (an, bn+1), ..., (an, bm) if n = ℓ or
(am+1, bm), ..., (an, bm) if m = ℓ.

To see why this definition matches that in Def.
2, note that WFC (c) in Def. 2, which stipu-
lates one-to-one, left-to-right association, requires
that (a1, b1), (a2, b2), ..., (aℓ, bℓ) ∈ ◦. If n 6= m,
this leaves either a final segment aℓ+1aℓ+2...an
(if m = ℓ) or bℓ+1bℓ+2...bm (if n = ℓ) that
must also be associated, per WFCs (a) and (b).
WFC (d), which bans line crossing, stipulates
that these final elements cannot ‘reach back’ and
associate to anything except for the final ele-
ment on the opposite tier. So if m = ℓ then
(am+1, bm), (am+2, bm)..., (an, bm) ∈ ◦ and if
n = ℓ then (an, bn+1), (an, bn+2)..., (an, bm) ∈ ◦.
We take the symmetric closure as association is
usually regarded as symmetric (Kornai, 1995).

No MSO definition of this relation is possible.
To show how, we can rely on two facts established
above: 1) MSO transductions are essentially in-
terpretations where relations in the output struc-
ture are defined in terms of the logical language of
the input structure; and 2) MSO transductions are
closed under composition.

First, we can instead consider as input strings
of the form anbm (again, with n,m > 0). This
set is MSO definable, as witnessed by the formula
stringanbm defined below:

stringanbm
def
=

(∀x, y)[¬(b(x) ∧ a(y) ∧ x ≺ y)] ∧
(∃x, y)[a(x) ∧ b(y)]

28



These strings are equivalent, in terms of MSO, to
pairs of disjoint strings of shape an and bm. The
reason is that we can write a MSO transduction
from one to another. If ≺ is the ordering in the
input anbm string, we simply define the order ≺Γ
for the output structure such that it omits all prece-
dence between a positions and b positions.

ϕdom
def
= stringΣ ∧ stringanbm

ϕ1a(x)
def
= a(x)

ϕ1b(x)
def
= b(x)

ϕ1,1≺Γ(x, y)
def
= x ≺ y ∧ ¬(a(x) ∧ b(y))

An example of this is given in Fig. 7.

Input: a a a b b b b

Output: a a a

b b b b

Figure 7: Relating anbm strings to disjoint tiers an

and bm.

Thus, we know that MSO statements over pairs
of disjoint strings an and bm are equivalent to
statements over strings in anbm. We can then use
this to prove Theorem 1.

Theorem 1 Association between two disjoint
strings according to the WFCs in Definition 2 is
not MSO definable.

Proof: The proof is by contradiction. Assume the
converse, that we can define using MSO a trans-
duction that takes disjoint pairs of strings an and
bm and outputs them as associated autosegmen-
tal representations with some association relation
◦ that obeys the WFCs as defined in Def. 3.

With this relation we can write a sentence
ϕeq

def
= (∀x,∃y,∀z)[x ◦ y ∧ (x ◦ z → z = y)],

which holds that every position is associated to ex-
actly one position. If ◦ obeys the WFCs, then per
the discussion of the structure of ◦ in Def. 3, ϕeq is
only true for structures whose association relation
is the set of pairs of the form (ai, bi) (and their
converse). That is, the only structures for which
ϕeq are true are pairs of disjoint strings an and bm

for which n = m.
Now consider strings of the form anbm. As

shown above, there is a MSO transduction from
these strings to disjoint pairs of an and bm. By
assumption, there is then a MSO transduction

that adds an association relation ◦ to these pairs.
Because MSO transductions are closed under
composition, then ϕeq can be written as the
MSO language of strings {a, b}∗. Thus the
sentence stringanbm ∧ ϕeq restricts us exactly
the set of strings anbm for which n = m. It
is well-known that this set is not regular (see,
e.g., Hopcroft et al., 2006), and thus not MSO
definable. Thus we have a contradiction, and so
the assumption must be false. �

Importantly, because MSO transductions are
closed under composition, there is no breakdown
of this process into a finite set of composite steps
(such as those illustrated in Fig. 5) that are them-
selves MSO-definable. Note also that the proof
highlights that in particular it is the one-to-one re-
quirement on association that makes it not MSO-
definable: it is this property that introduces the
ability to check the parity of the a and b tiers.

4.3 Interpreting the result

We have thus shown that, as a transduction from
an unassociated pair of tiers to an associated one
following the WFCs in Def. 2, tone mapping is
not MSO-definable. This puts it in sharp contrast
to all other phonological UR-SR transductions for
whom complexity results exist: as discussed in
Sec. 3.2, these processes have been shown to be
well within MSO-definability. This makes tone
mapping aberrant in terms of its computational
complexity. How do we interpret this result?

One answer is to take this as evidence that
tone has access to more computational power than
other parts of phonology. In fact, this has been
argued by Jardine (2016a) on the basis of compar-
isons between the complexity of tonal phenomena
and segmental phenomena when viewed as string
transductions. However, an issue with this inter-
pretation is that the tonal phenomena that Jardine
cites are still Regular relations and thus MSO-
definable. Thus tone mapping is still highly com-
plex, even compared to other tonal phenomena.

Another possible interpretation is that tone
mapping is simply an incorrect characterization
of the data available. For example, both Dwyer
(1978) and Shih and Inkelas (2015) take issue with
Leben (1973)’s tone mapping characterization of
Mende, and offer alternative explanations using
representational assumptions that do not require
tone mapping (or an analogue thereof). However,

29



other tone patterns that have been successfully ac-
counted for using tone mapping include those of
Hausa (Newman, 1986, 2000), Kukuya (Hyman,
1987), and the wide variety of languages ana-
lyzed in Goldsmith (1976), Pulleyblank (1986),
and Zoll (2003). The alternative explanations
mentioned above have yet to be shown to enjoy
the same broad empirical coverage (though future
work may indeed show this).

Another explanation is that it is wrong to as-
sume that the mapping generalization holds for
tiers of unbounded length. The proof above re-
lies on the fact that the input strings are of the
form anbm for any n,m—if either n or m had
some bound, the proof would no longer hold.
Indeed, Yli-Jyrä (2013) gives a finite-state (and
thus MSO-definable) implementation of tone map-
ping given the assumption that the tonal tier is
bounded. However, it is not clear that this can be
assumed for all cases. For example, in Kikuyu
(Clements and Ford, 1979), morphological con-
catenation can extend the tonal tier before map-
ping occurs. Regardless, “tonal tiers must be
bounded” is a hypothesis worth further testing, as
the result here shows it has consequences for the
complexity of phonology.

A final interpretation of the result is to posit
that the one-to-one property of tone mapping as a
phonological universal and thus is not relevant to
the study of the complexity of language-specific
phonological phenomena. As noted in §4, there
are languages whose patterns have been shown to
violate the WFCs in Def. 2 with respect to direc-
tionality and whether or not all tones or syllables
are associated. However, the one-to-one property
appears to be shared by all such patterns. Jardine
(2016b, to appear) demonstrates for many of these
patterns that, if one-to-one association is assumed
in the representation, these language-specific con-
straints on association can be described with a re-
stricted propositional logic, well within the com-
plexity of MSO. Thus, if we isolate the one-to-
one property of association, shown in the proof of
Thm. 1 to be responsible for its non-definability
in MSO, from the other aspects of tone mapping,
then we can maintain MSO-definability as a cohe-
sive bound on the complexity of language-specific
phonological phenomena. How this separation
might be implemented in a theory of tone will be
left for future work.

5 Deriving autosegmental
representations from single strings

The result in the previous section raises an impor-
tant question: How powerful are ARs? Specifi-
cally, does invoking ARs allow for grammars that
are too expressive to provide a reasonable theory
of phonological patterns? To put it in more con-
crete terms, we can represent the tone pattern of
a word either as a string of toned syllables or as
an AR.2 Table 4 gives some examples, two from
Mende and one hypothetical, where strings are
over an alphabet {H,L,F,R} whose symbols rep-
resent high-, low-, falling-, and rising-toned sylla-
bles, respectively.

Form String AR
H L

[félàmà] HLL ❅❅
‘junction’ σ σ σ

L H L
[nyàhâ] LF ��

‘woman’ σ σ
L H

(hypothetical) LLRH ❅❅❜❜☞☞❆❆
σ σ σ σ

Table 4: Strings and ARs

Thus, for any string over {H,L,F,R}, there
is a corresponding autosegmental representation.
Note that these ARs obey WFCs (a), (b), and (d)
from Def. 2, in that each tone is associated to a
syllable and vice versa, and these association lines
do not cross. However, the AR for LLRH violates
WFC (c), as the tones have not associated in a left-
to-right manner. We can thus talk about ARs that
obey (a), (b), and (d), but will ignore (c), as the
latter would restrict us to a subset {H,L,F,R}∗.

We can then talk about strings and their cor-
responding ARs. Jardine and Heinz (2015) de-
fine such a relationship in terms of concatenation,
but they do not address how this relationship con-
nects to complexity. As discussed in §3.1, natu-
ral language phonotactics are largely describable
with FO-definable stringsets. The question then is,
given, for example, an FO logic over ARs, can we
describe sets of strings that are not FO-definable?
This is a valid question as, for example, even re-
strictions on FO over trees can generate Context

2We abstract away from the issue of whether tones are a
property of moras, syllables, or some other unit. See, e.g.,
Yip (2002) for more on this issue.

30



Free stringsets (Rogers, 1997).
The following demonstrates otherwise: ARs are

FO-definable from strings, and thus any FO for-
mula over ARs is translatable into a FO formula
in strings (given ≺). It should be noted that au-
tosegmental phonology is not a monolithic theory,
and in practice various definitions of ARs have
been proposed (one formal overview can be found
in Coleman and Local, 1991). A full survey of
these and how they might be defined is beyond the
scope of this paper; instead, this section focuses on
demonstrating that basic ARs obeying the WFCs
(a), (b), and (d) in Def. 2 are FO-definable from
strings over {H,L,F,R}. In other words, we for-
malize the relationship between strings and ARs
exemplified in Table 4. This illustrates that the
fundamental ideas of autosegmental structure—
distinct tiers associated to one another accord-
ing to some well-formedness conditions—is FO-
definable from strings.

5.1 Definition of transduction
We define a transduction from string models of the
form

〈U,≺, PH, PL, PF, PR〉
to autosegmental models of the form

〈
U ′, ⊳′, ◦, RH, RL, Rσ

〉
.

Essentially, we define the transformation from the
second column of Table 4 to the third, for all
strings in {H,L,F,R}∗.

We do this by defining the notion of a span, or
a series of consecutive positions in U that share
the same tone and thus will be associated to the
same tone on the melody tier in the output AR. We
then create extra copies of each element in U that
represents a change in spans. These extra copies
become the tones in the melody tier. Note that
the order in the output is a successor relation ⊳′;
this is not essential, but was chosen for two rea-
sons. One, it is more straightforward to depict in
the examples below. Two, its definition gives for-
mal weight to an idea long noted by phonologists:
local relationships (i.e. those over ⊳′) in ARs cor-
respond to long-distance relationships (i.e. those
over ≺) in strings (see, e.g., Odden, 1994).

First, we define some useful formula and no-
tational shortcuts. The first denotes when y lies
between some x and z.

x ≺ y ≺ z def= x ≺ y ∧ y ≺ z

We then define formulas in the logic of the in-
put string that represent the tonal relationships be-
tween units in the string. The following formula
sametone(x, y) is true when x ends with the same
tone that y begins with (thus it is true for an H and
an F pair as F starts high).

sametone(x, y)
def
=

(H(x) ∧ H(y)) ∨ (L(x) ∧ L(y)) ∨
(H(x) ∧ F(y)) ∨ (L(x) ∧ R(y)) ∨

(R(x) ∧ H(y)) ∨ (F(x) ∧ L(y))

We do this because we will create tones on the
melody tier exactly at syllables where there is a
change in tone. This marks the beginning of a span
of one or more like-toned syllables.

spanfirst(x)
def
=

(∀y)[y ⊳ x → ¬sametone(x, y)]

span(x, y)
def
= x ≺ y ∧ sametone(x, y)∧

(∀z)[x ≺ z ≺ y → sametone(x, z)]

For example, the positions in the following strings
that satisfy spanfirst(x) are underlined: HLL,
LF, and LLRH. Note that neither the R nor
the H in LLRH satisfy this formula because
sametone(x, y) returns true when x is L and y is
R and likewise when x is R and y is H.

We can then define the transduction from strings
to autosegmental representations by setting k = 3.
One set of copies transfers over the syllables, the
next initial tones. The third set of copies is for cre-
ating the additional tones in the F and R contours.
(In general, for strings whose symbols represent
contours of at most length n, k = n+ 1.)

We define the unary labeling relations in the au-
tosegmental representation as follows.

ϕ1σ(x)
def
= True

ϕ2H(x)
def
= (H(x) ∨ F(x)) ∧ spanfirst(x)

ϕ2L(x)
def
= (L(x) ∨ R(x)) ∧ spanfirst(x)

ϕ3H(x)
def
= R(x) ϕ3L(x)

def
= F(x)

All other unary formulas are set to false; that is,
ϕ1H(x)

def
= ϕ1L(x)

def
= ϕ2σ(x)

def
= ϕ3σ(x)

def
= False.

This works as depicted in Fig. 8 for the strings
HLL, LF, and LLRH. Each set of copies in the out-
put is organized into a labeled row.

As ϕ1σ(x) is set to True, every element in the in-
put has a copy in set 1 labeled σ. This corresponds
to the intuition that each position in the input string

31



In: H L L L F

Out: 3

2 H L

1 σ σ σ

3 L

2 L H

1 σ σ

In: L L R H

Out: 3 H

2 L

1 σ σ σ σ

Figure 8: Creating elements in autosegmental rep-
resentations.

represents a syllable. In copy set 2, Hs and Ls are
copied over only at the positions in a string rep-
resenting a change in tone, as ϕ2H(x) and ϕ

2
L(x)

are defined to be true only when spanfirst(x) is
true. (Note again that for the string LLRH, this is
false for the positions labeled R and H.) Finally,
ϕ3H(x) and ϕ

3
L(x) ensure that the contour-toned

syllables F and R in the input are given a third copy
L and H, respectively, in the output.

The next step is to define an order on the el-
ements of the output. Again, we define the suc-
cessor relation ⊳′. Like the definition of the
unary relations, this definition will make use of the
spanfirst(x) and span(x, y) formulas.

ϕ1,1⊳′ (x, y)
def
=x ⊳ y

ϕ2,2⊳′ (x, y)
def
=x ≺ y ∧
spanfirst(x) ∧ spanfirst(y) ∧

(∀z)[x ≺ z ≺ y → span(x, z)]
ϕ2,3⊳′ (x, y)

def
=(

spanfirst(x) ∧ (F(y) ∨ R(y)) ∧ x = y
)
∨(

spanfirst(x) ∧ (F(x) ∨ R(x)) ∧ span(x, y)
)

ϕ3,2⊳′ (x, y)
def
=(F(x) ∨ R(x)) ∧ spanfirst(y)∧

span(x, y)

ϕ3,3⊳′ (x, y)
def
=(F(x) ∨ R(x)) ∧ (F(y) ∨ R(y))∧

span(x, y)

We set ϕm,n⊳′ (x, y) for all other values of m and
n to false. These definitions work, as illustrated
in Fig. 9, as follows. The formula ϕ1,1⊳′ (x, y)
copies the successor relation from the input faith-
fully for the initial copies (i.e. those labeled σ).
Next, ϕ2,2⊳′ (x, y) draws a successor relation be-
tween the second copies of the initial positions for
adjacent spans. Finally, ϕ2,3⊳′ (x, y) and ϕ

3,2
⊳′ (x, y)

deal with the extra elements in a contour. The for-
mula ϕ2,3⊳′ (x, y) draws a successor relation from
the second copy of a contour-toned syllable to its
third (i.e., between the two tones in the contour)
when the contour is first in a span (e.g. F in LF).
In case the first part of a contour is part of a previ-
ous span (e.g. in the case of R in LLRH), it draws
a successor relation from the first position in the
previous span to the second part of the contour.
The formulas ϕ3,2⊳′ (x, y) and ϕ

3,3
⊳′ (x, y) then sim-

ilarly draw a successor relation from the second
part of a contour that is the start of a span to the
initial position of the next successive span (these
latter two formulas are not used in the examples).

In: H L L L F

Out: 3

2 H L

1 σ σ σ

3 L

2 L H

1 σ σ

In: L L R H

Out: 3 H

2 L

1 σ σ σ σ

Figure 9: Creating the successor relation in au-
tosegmental representations.

Finally, we draw the associations between the
tiers. This is relatively simple: we define formulas
that relate a second or third copy of a node with its
own first copy as well as any first copies in its span
(and vice versa, to obtain a symmetric relation).

ϕ2,1◦ (x, y)
def
= spanfirst(x)∧

(x = y ∨ span(x, y))
ϕ1,2◦ (x, y)

def
= spanfirst(y)∧

(x = y ∨ span(y, x))
ϕ3,1◦ (x, y)

def
= (F(x) ∨ R(x))∧

(x = y ∨ span(x, y))
ϕ1,3◦ (x, y)

def
= (F(y) ∨ R(y))∧

(x = y ∨ span(y, x))

We set ϕm,n◦ (x, y) for all other values of m and n
to false. This obtains the association relations as
depicted in Fig. 10.

As the reader can confirm, we have thus ob-
tained the relationship between strings and ARs as
originally examplified in Table 4.

32



In: H L L L F

Out: 3

2 H L

1 σ σ σ

3 L

2 L H

1 σ σ

In: L L R H

Out: 3 H

2 L

1 σ σ σ σ

Figure 10: Creating the association relation in au-
tosegmental representations.

Theorem 2 The above FO transduction maps ev-
ery string over {H,L,R,F}∗ to an AR following
WFCs (a), (b), and (d).

Proof: (Sketch.) WFCs (a) and (b) in Def. 2
stipulate that every syllable is associated to a tone
and vice versa. Note that for any position x in the
input string, either spanfirst(x) will be true of
this position or span(y, x) is true of this position
in some y. The formulas defining the ◦ relation
ensures all such pairs are associated and each
spanfirst(x) is associated with its copy on the
melody tier, and that this relation is symmetric.
For WFC (d), that the definitions depend on both
spanfirst(x) and span(x, y) means that no
association line will ‘cross’ into a new span. �

5.2 Discussion
We have thus demonstrated a set of ARs that are
FO-definable from strings representing sequences
of toned syllables. Because this transduction is de-
fined as an interpretation of the input structure, the
relations in the AR model are equivalent to FO-
statements in the string model. For example, the
atomic formula x⊳′y in the AR model is true when
either of the formulas ϕn,m⊳′ is true. In other words,

x⊳′y ≡ ϕ1,1⊳′ (x, y) ∨ ϕ
2,2
⊳′ (x, y) ∨ ϕ

2,3
⊳′ (x, y) ∨

ϕ3,2⊳′ (x, y) ∨ ϕ
3,3
⊳′ (x, y).

The same is true for the other atomic formulas x ◦
y, H(x), L(x), and σ(x) in the FO logic of the
AR model. This means that any FO formula in the
logic of the AR model can be translated into the
FO logic of the string model. Thus, FO over these
ARs is equivalent to FO in the string model.

One caveat is that in the definition for the AR
successor order, ϕ2,2⊳′ (x, y), ϕ

2,3
⊳′ (x, y), ϕ

3,2
⊳′ (x, y),

and ϕ3,3⊳′ (x, y) all used the string precedence pred-
icate x ≺ y, either directly in the definition or
through the use of the predicate span(x, y). While
concerns for space preclude a full proof, it is easy
to see that these same predicates could not be de-
fined using the string successor x ⊳ y and still ac-
count for spans of arbitrary length. This means
that including the precedence relation ≺ in the
string model is crucial for the definition of the AR
successor ⊳′ (note that x ⊳ y is FO-definable from
x ≺ y but the reverse is not true). As mentioned
above, this means that successor in the AR, specif-
ically successor on the melody tier, corresponds to
precedence in the string model.

To summarize, this section has introduced a
method for defining ARs in FO from strings rep-
resenting sequences of toned syllables. Thus,
FO statements over ARs are no more powerful
than FO statements over strings (with ≺). Note
again that this definition is categorically different
from the tone-mapping transformation discussed
in the previous section, which was shown to not
be MSO-definable.

6 Conclusion

This paper has presented two new results, one neg-
ative and one positive, regarding complexity and
autosegmental representations in phonology. The
first result is that tone mapping transformations as-
signing units on one tier to units on another tier in
a one-to-one fashion are not MSO-definable. This
is in sharp contrast to other phonological patterns,
which have been shown to be at least MSO defin-
able and, in most cases, FO-definable. The second,
positive, result is that ARs are FO-definable from
strings, showing that they do not significantly in-
crease the expressive power of phonotactic gram-
mars. It is thus also likely that they do not sig-
nificantly increase the expressive power of string
mappings, although the logical study of phono-
logical transformations is still ongoing (see, e.g.,
Heinz, forthcoming). This work thus represents
one of many steps towards an understanding of
phonological computation and representation.

Acknowledgments

The author thanks Jeffrey Heinz, Thomas Graf,
Jane Chandlee, and three anonymous reviewers for
their thoughtful comments and discussion.

33



References
Diana Archangeli and Douglas Pulleyblank. 1994.

Grounded Phonology. Cambridge: MIT Press.

Steven Bird and T. Mark Ellison. 1994. One-
level phonology: Autosegmental representations
and rules as finite automata. Computational Lin-
guistics 20.

Steven Bird and E. Klein. 1990. Phonological events.
Journal of Linguistics 26:33–56.

J. Richard Büchi. 1960. Weak second-order arithmetic
and finite automata. Zeitschrift für Mathematische
Logik und Grundlagen der Mathmatik 6:66—92.

Jane Chandlee. 2014. Strictly Local Phonological Pro-
cesses. Ph.D. thesis, University of Delaware.

Jane Chandlee and Jeffrey Heinz. 2012. Bounded
copying is subsequential: Implications for metathe-
sis and reduplication. In Proceedings of the 12th
Meeting of the ACL Special Interest Group on Com-
putational Morphology and Phonology. Association
for Computational Linguistics, Montreal, Canada,
pages 42–51.

Noam Chomsky and Morris Halle. 1968. The Sound
Pattern of English. Harper & Row.

George N. Clements and Kevin C. Ford. 1979. Kikuyu
tone shift and its synchronic consequences. Linguis-
tic Inquiry 10:179–210.

John Coleman and John Local. 1991. The “No Cross-
ing Constraint” in autosegmental phonology. Lin-
guistics and Philosophy 14:295–338.

Bruno Courcelle. 1994. Monadic second-order de-
finable graph transductions: a survey. Theoretical
Computer Science 126:53–75.

David Dwyer. 1978. What sort of tone language is
Mende? Studies in African Linguistics 9:167–208.

C. C. Elgot. 1961. Decision problems of finite au-
tomata design and related arithmetics. Transactions
of the American Mathematical Society 98(1):21–51.

Joost Engelfriet and Hendrik Jan Hoogeboom. 2001.
MSO definable string transductions and two-way
finite-state transducers. ACM Transations on Com-
putational Logic 2:216–254.

Emmanual Filiot. 2015. Logic-automata connections
for transformations. In Logic and Its Applications
(ICLA), Springer, pages 30–57.

Emmanuel Filiot and Pierre-Alain Reynier. 2016.
Transducers, logic, and algebra for functions of fi-
nite words. ACM SIGLOG News 3(3):4–19.

John Goldsmith. 1976. Autosegmental Phonology.
Ph.D. thesis, Massachussets Institute of Technology.

Jeffrey Heinz. 2007. The Inductive Learning of Phono-
tactic Patterns. Ph.D. thesis, UCLA.

Jeffrey Heinz. 2009. On the role of locality in learning
stress patterns. Phonology 26:303–351.

Jeffrey Heinz. 2010. Learning long-distance phonotac-
tics. LI 41:623–661.

Jeffrey Heinz, editor. forthcoming. Doing Computa-
tional Phonology. Oxford: Oxford University Press.

Jeffrey Heinz and William Idsardi. 2013. What com-
plexity differences reveal about domains in lan-
guage. Topics in Cognitive Science 5(1):111–131.

Jeffrey Heinz and Regine Lai. 2013. Vowel harmony
and subsequentiality. In Andras Kornai and Marco
Kuhlmann, editors, Proceedings of the 13th Meeting
on Mathematics of Language. Sofia, Bulgaria.

Jeffrey Heinz, Chetan Rawal, and Herbert G. Tan-
ner. 2011. Tier-based strictly local constraints for
phonology. In Proceedings of the 49th Annual
Meeting of the Association for Computational Lin-
guistics. Association for Computational Linguistics,
Portland, Oregon, USA, pages 58–64.

Mark Hewitt and Alan Prince. 1989. OCP, locality, and
linking: the N. Karanga verb. In E. Jane Fee and
Katherine Hunt, editors, WCCFL 8. Stanford: CSLI
Publications, pages 176–191.

Wilfred Hodges. 1997. A Shorter Model Theory. Cam-
bridge: Cambridge University Press.

John Hopcroft, Rajeev Motwani, and Jeffrey Ullman.
2006. Introduction to Automata Theory, Languages,
and Computation. Addison-Wesley, third edition.

Larry Hyman. 1987. Prosodic domains in Kukuya.
NLLT 5:311–333.

Adam Jardine. 2014. Logic and the generative
power of Autosegmental Phonology. In John
Kingston, Claire Moore-Cantwell, Joe Pater, and
Robert Staubs, editors, Supplemental proceedings of
the 2013 Meeting on Phonology (UMass Amherst).
LSA, Proceedings of the Annual Meetings on
Phonology.

Adam Jardine. 2016a. Computationally, tone is differ-
ent. Phonology 33:247–283.

Adam Jardine. 2016b. Locality and non-linear repre-
sentations in tonal phonology. Ph.D. thesis, Univer-
sity of Delaware.

Adam Jardine. to appear. The local nature of tone as-
sociation patterns. Phonology .

Adam Jardine and Jeffrey Heinz. 2015. A concatena-
tion operation to derive autosegmental graphs. In
Proceedings of the 14th Meeting on the Mathematics
of Language (MoL 2015). Association for Computa-
tional Linguistics, Chicago, USA, pages 139–151.

C. Douglas Johnson. 1972. Formal aspects of phono-
logical description. Mouton.

34



Ronald Kaplan and Martin Kay. 1994. Regular models
of phonological rule systems. Computational Lin-
guistics 20:331–78.

Martin Kay. 1987. Nonconcatenative finite-state mor-
phology. In Proceedings, Third Meeting of the Euro-
pean Chapter of the Association for Computational
Linguistics. pages 2–10.

András Kornai. 1995. Formal Phonology. Garland
Publication.

Haruo Kubozono. 2012. Varieties of pitch accent sys-
tems in Japanese. Lingua 122:1395–1414.

Regine Lai. 2015. Learnable versus unlearnable har-
mony patterns. LI 46:425–451.

W. R. Leben. 1973. Suprasegmental phonology. Ph.D.
thesis, Massachussets Institute of Technology.

W. R. Leben. 1978. The representation of tone. In
Victoria Fromkin, editor, Tone—A Linguistic Survey,
Academic Press, pages 177–219.

Kevin McMullin and Gunnar Ólafur Hansson. 2015.
Locality in long-distance phonotactics: evidence for
modular learning. In NELS 44, Amherst, MA. In
press.

Robert McNaughton and Seymour Papert. 1971.
Counter-Free Automata. MIT Press.

Paul Newman. 1986. Tone and affixation in Hausa.
Studies in African Linguistics 17(3).

Paul Newman. 2000. The Hausa Language: An en-
cyclopedic reference grammar. New Haven: Yale
University Press.

David Odden. 1994. Adjacency parameters in phonol-
ogy. Language 70(2):289–330.

Amanda Payne. 2014. Dissimilation as a subsequential
process. In Proceedings of the 44th Meeting of the
North East Linguistic Society (NELS).

Alan Prince and Paul Smolensky. 2004. Optimality
Theory: Constraint Interaction in Generative Gram-
mar. Blackwell Publishing.

Douglas Pulleyblank. 1986. Tone in Lexical Phonol-
ogy. Dordrecht: D. Reidel.

James Rogers. 1997. Strict lt2 : Regular :: Local
: Recognizable. In Christian Retoré, editor, Logi-
cal Aspects of Computational Linguistics: First In-
ternational Conference, LACL ’96 Nancy, France,
September 23–25, 1996 Selected Papers, Springer
Berlin Heidelberg, Berlin, Heidelberg, pages 366–
385.

James Rogers, Jeffrey Heinz, Margaret Fero, Jeremy
Hurst, Dakotah Lambert, and Sean Wibel. 2013.
Cognitive and sub-regular complexity. In Formal
Grammar, Springer, volume 8036 of Lecture Notes
in Computer Science, pages 90–108.

James Rogers and Geoffrey Pullum. 2011. Aural pat-
tern recognition experiments and the subregular hi-
erarchy. Journal of Logic, Language and Informa-
tion 20:329–342.

Stephanie Shih and Sharon Inkelas. 2015. Autoseg-
mental aims in surface optimizing phonology. Ms.,
available at lingbuzz/002520.

James Neil Sneddon, K. Alexnader Adelaar, Dwi N.
Djenar, and Michael Ewing. 2010. Indonesian: A
comprehensive grammar. New York: Routledge.

Boris Avraamovich Trakhtenbrot. 1961. Finite au-
tomata and logic of monadic predicates. Doklady
Akademii Nauk SSSR 140:326–329.

Bruce Wiebe. 1992. Modelling Autosegmental Phonol-
ogy with Multi-Tape Finite State Transducers. Mas-
ter’s thesis, Simon Fraser University.

Moira Yip. 2002. Tone. Cambridge University Press.

Anssi Yli-Jyrä. 2013. On finite-state tonology with au-
tosegmental representations. In Proceedings of the
11th International Conference on Finite State Meth-
ods and Natural Language Processing. Association
for Computational Linguistics, pages 90–98.

Cheryl Zoll. 2003. Optimal tone mapping. LI
34(2):225–268.

35


