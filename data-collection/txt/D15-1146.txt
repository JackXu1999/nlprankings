



















































Bilingual Correspondence Recursive Autoencoder for Statistical Machine Translation


Proceedings of the 2015 Conference on Empirical Methods in Natural Language Processing, pages 1248–1258,
Lisbon, Portugal, 17-21 September 2015. c©2015 Association for Computational Linguistics.

Bilingual Correspondence Recursive Autoencoders
for Statistical Machine Translation

Jinsong Su1, Deyi Xiong2∗, Biao Zhang1, Yang Liu3, Junfeng Yao1, Min Zhang2
Xiamen University, Xiamen, P.R. China1

Soochow University, Suzhou, P.R. China2

Tsinghua University, Beijing, P.R. China3

{jssu, biaozhang, yao0010}@xmu.edu.cn
{dyxiong, minzhang}@suda.edu.cn
liuyang2011@tsinghua.edu.cn

Abstract

Learning semantic representations and
tree structures of bilingual phrases is ben-
eficial for statistical machine translation.
In this paper, we propose a new neu-
ral network model called Bilingual Corre-
spondence Recursive Autoencoder (BCor-
rRAE) to model bilingual phrases in trans-
lation. We incorporate word alignments
into BCorrRAE to allow it freely ac-
cess bilingual constraints at different lev-
els. BCorrRAE minimizes a joint objec-
tive on the combination of a recursive au-
toencoder reconstruction error, a structural
alignment consistency error and a cross-
lingual reconstruction error so as to not
only generate alignment-consistent phrase
structures, but also capture different lev-
els of semantic relations within bilingual
phrases. In order to examine the effective-
ness of BCorrRAE, we incorporate both
semantic and structural similarity features
built on bilingual phrase representations
and tree structures learned by BCorrRAE
into a state-of-the-art SMT system. Exper-
iments on NIST Chinese-English test sets
show that our model achieves a substantial
improvement of up to 1.55 BLEU points
over the baseline.

1 Introduction

Recently a variety of “deep architecture” ap-
proaches, including autoencoders, have been suc-
cessfully used in statistical machine translation
(SMT) (Yang et al., 2013; Liu et al., 2013; Zou
et al., 2013; Devlin et al., 2014; Tamura et al.,
2014; Sundermeyer et al., 2014; Wang et al., 2014;
Kočiský et al., 2014). Typically, these approaches
represent words as dense, low-dimensional and

∗Corresponding author.

real-valued vectors, i.e., word embeddings. How-
ever, translation units in machine translation have
long since shifted from words to phrases (se-
quence of words), of which syntactic and se-
mantic information cannot be adequately captured
and represented by word embeddings. There-
fore, learning compact vector representations for
phrases or even longer expressions is more crucial
for successful “deep” SMT.

To address this issue, many efforts have been
initiated on learning representations for bilingual
phrases in the context of SMT, inspired by the suc-
cess of work on monolingual phrase embeddings
(Socher et al., 2010; Socher et al., 2011a; Socher
et al., 2013b; Chen and Manning, 2014; Kalch-
brenner et al., 2014; Kim, 2014). The learning
process of bilingual phrase embeddings in these
efforts is normally interacted and mingled with
single or multiple essential components of SMT,
e.g., with reordering models (Li et al., 2013),
translation models (Cui et al., 2014; Zhang et al.,
2014; Gao et al., 2014), or both language and
translation models (Liu et al., 2014). In spite of
their success, these approaches center around cap-
turing relations between entire source and target
phrases. They do not take into account internal
phrase structures and bilingual correspondences of
sub-phrases within source and target phrases. The
neglect of these important clues may be due to the
big challenge imposed by the integration of them
into the learning process of bilingual phrase rep-
resentations. However, we believe such internal
structures and correspondences can help us learn
better phrase representations since they provide
multi-level syntactic and semantic constraints.

In this paper, we propose a Bilingual Corre-
spondence Recursive Autoencoder (BCorrRAE)
to learn bilingual phrase embeddings. BCorrRAE
substantially extends the Bilingually-constrained
Recursive Auto-encoder (BRAE) (Zhang et al.,
2014) to exploit both inner structures and corre-

1248



resolution0 adopted1 today2今天0 所1 通过2 决议3
(a) BRAE

nē
nf̄2

nf̄1

resolution0 adopted1 today2今天0 所1 通过2 决议3

(b) BCorrRAE
reconstructing target sub-trees according to corresponding source nodes
reconstructing source sub-trees according to corresponding target nodes

nf̄1

nf̄2

nē

Figure 1: BRAE vs BCorrRAE models for generating of a
bilingual phrase (“䘸坕嚤埏䍌䛻懆”, “resolution adopted
today”) with word alignments (“0-2 2-1 3-0”). The subscript
number of each word indicates its position within phrase.
Solid lines depict the generation procedure of phrase struc-
tures, while dash lines illustrate the reconstruction procedure
from one language to the other. In this paper, the dimension-
ality of vector d in all figures is set to 3 for better illustration.

spondences within bilingual phrases. The intu-
itions behind BCorrRAE are twofold: 1) bilingual
phrase structure generation should satisfy word
alignment constraints as much as possible; and
2) corresponding sub-phrases on the source and
target side of bilingual phrases should be able
to reconstruct each other as they are semantic
equivalents. In order to model the first intuition,
BCorrRAE punishes bilingual structures that vio-
late word alignment constraints and rewards those
in consistent with word alignments. This en-
ables BCorrRAE to produce desirable bilingual
phrase structures from the perspective of word
alignments. With regard to the second intuition,
BCorrRAE reconstructs structures of sub-phrases
of one language according to aligned nodes in the
other language and minimizes the gap between
original and reconstructed structures. In doing so,
BCorrRAE is capable of capturing semantic rela-
tions at different levels.

To better illustrate our model, let us consider
the example in Figure 1. Similar to the conven-
tional recursive antoencoder (RAE), BRAE ne-
glects bilingual correspondences of sub-phrases.
Thus, it may combine “adopted” and “today” to-
gether to generate an undesirable target tree struc-
ture which violates word alignments. In contrast,
BCorrRAE aligns source-side nodes (e.g. (“埏
䍌”, “䛻懆”)) to their corresponding target-side

nodes (accordingly (“resolution”, “adopted”)) ac-
cording to word alignments. Furthermore, in
BCorrRAE, each subtree on the target side can be
reconstructed from the corresponding source node
that aligns to the target-side node dominating the
subtree and vice versa. These advantages allow us
to obtain improved bilingual phrase embeddings
with better inner correspondences of sub-phrases
and word alignment consistency.

We conduct experiments with a state-of-the-art
SMT system on large-scale data to evaluate the ef-
fectiveness of BCorrRAE model. Results on the
NIST 2006 and 2008 datasets show that our sys-
tem achieves significant improvements over base-
line methods. The main contributions of our work
lie in the following three aspects:

• We learn both embeddings and tree struc-
tures for bilingual phrases using cross-lingual
RAE reconstruction that minimizes semantic
distances between original and reconstructed
subtrees. To the best of our knowledge, this
has not been investigated before.
• We incorporate word alignment information

to guide phrase structure generation and es-
tablish internal semantic associations of sub-
phrases within bilingual phrases.
• We integrate two similarity features based on

BCorrRAE to enhance translation candidate
selection, and achieve an improvement of
1.55 BLEU points on Chinese-English trans-
lation.

2 RAE and BRAE

In this section, we briefly introduce the RAE and
its bilingual variation BRAE. This will provide
background knowledge on our proposed BCor-
rRAE.

2.1 RAE

The component in the dash box of Figure 2 illus-
trates an instance of an RAE applied to a three-
word phrase. The input to the RAE is x =
(x1, x2, x3), which are the d-dimensional vector
representations of the ordered words in a phrase.
For two children c1 = x1 and c2 = x2, the parent
vector y1 can be computed in the following way:

p = f(W (1)[c1; c2] + b(1)) (1)

where [c1; c2] ∈ R2d×1 is the concatenation of
c1 and c2, W (1) ∈ Rd×2d is a parameter matrix,
b(1) ∈ Rd×1 is a bias term, and f is an element-

1249



y2

x1 x2 x3

y1
W (1)

W (1)
W (2)

W (2) W (3)

Reconstruction Error

Reconstruction Error

Max-Semantic-
Margin Error

Figure 2: An illustration of the BRAE architecture.

wise activation function such as tanh(·), which is
used for all activation functions in BRAE and our
model. The learned parent vector p is also a d-
dimensional vector. In order to measure how well
p represents its children, we reconstruct the origi-
nal children nodes in a reconstruction layer:

[c′1; c
′
2] = f(W

(2)p+ b(2)) (2)

where c′1 and c′2 are reconstructed children vectors,
W (2) ∈ R2d×d and b(2) ∈ R2d×1.

We can set y1 = p and then further use Eq. (1)
again to compute y2 by setting [c1; c2] = [y1;x3].
This combination and reconstruction process of
auto-encoder repeats at each node until the vec-
tor of the entire phrase is generated. To obtain the
optimal binary tree and phrase representation for
x, we employ a greedy algorithm (Socher et al.,
2011c) to minimize the sum of reconstruction er-
ror at each node in the binary tree T (x):

Erec(x; θ) =
∑

n∈T (x)

1
2
‖ [c1; c2]n−[c′1; c′2]n ‖2 (3)

where θ denotes model parameters and n repre-
sents a node in T (x).

2.2 BRAE

BRAE jointly learns two RAEs for source and tar-
get phrase embeddings as shown in Figure 1(a).
The core idea behind BRAE is that a source
phrase and its target correct translation should
share the same semantic representations, while
non-equivalent pairs should have different seman-
tic representations. Zhang et al. (2014) use this
intuition to constrain semantic pharse embedding
learning.

As shown in Figure 2, in addition to the above-
mentioned reconstruction error, BRAE introduces
a max-semantic-margin error to minimize the se-
mantic distance between translation equivalents
and maximize the semantic distance between non-

equivalent pairs simultaneously. Formally, the
max-semantic-margin error of a bilingual phrase
(f, e) is defined as

Esem(f, e; θ) = E∗sem(f |e, θ)+E∗sem(e|f, θ) (4)
where E∗sem(f |e, θ) is used to ensure that the se-
mantic error for an equivalent pair is much smaller
than that for a non-equivalent pair (the source
phrase f and a bad translation e′):

E∗sem(f |e, θ) = max{0, Esem(f |e, θ)
− Esem(f |e′, θ) + 1}

(5)

where Esem(f |e, θ) is defined as the semantic dis-
tance between the learned vector representations
of f and e, denoted by pf and pe, respectively.
Since phrase embeddings for the source and target
language are learned separately in different vec-
tor spaces, a transformation matrix W (3)f ∈ Rd×d
is introduced to capture this semantic transfor-
mation in the source-to-target direction. Thus,
Esem(f |e, θ) is calculated as

Esem(f |e, θ) = 12 ‖ pe − f(W
(3)
f pf + b

(3)
f ) ‖2 (6)

where b(3)f ∈ Rd×1 is a bias term. E∗sem(e|f, θ) and
Esem(e|f, θ) can be computed in a similar way.
The joint error of (f, e) is therefore defined as fol-
lows:

E(f, e; θ) = α(Erec(f, θ) + Erec(e, θ))
+(1− α)(E∗sem(f |e, θ) + E∗sem(e|f, θ))

(7)

The final BRAE objective function over the train-
ing instance set D becomes:

JBRAE =
∑

(f,e)∈D
E(f, e; θ) +

λ

2
‖θ‖2 (8)

Model parameters can be optimized over the total
errors on training bilingual phrases in a co-training
style algorithm (Zhang et al., 2014).

3 The BCorrRAE Model

As depicted above, the learned embeddings us-
ing BRAE may be unreasonable due to the ne-
glect of bilingual constraints at different levels.
To address this drawback, we propose the BCor-
rRAE for bilingual phrase embeddings, which in-
corporates bilingual correspondence information
into the learning process of structures and embed-
dings via word alignments. In our model, we ex-
plore word alignments in two ways: (1) ensuring
that a learned bilingual phrase structure is con-
sistent with word alignments as much as possi-

1250



ble; (2) identifying corresponding sub-phrases in
the source language for reconstructing sub-phrases
in the target language, and vice versa. More
specifically, the former is to encourage alignment-
consistent generation of sub-structures, while the
latter is to minimize semantic distances between
bilingual sub-phrases.

In this section, we first formally introduce a
concept of structural alignment consistency en-
coded in bilingual phrase structure learning, which
is the basis of our model. Then, we describe
the objective function which is composed of three
types of errors. Finally, we provide details on the
training of our model.

3.1 Structural Alignment Consistency
We adapt word alignment to structural alignment
and introduce some related concepts. Given a
bilingual phrase (f, e) with its binary tree struc-
tures (Tf , Te), if the source node nf̄ ∈ Tf cov-
ers a source-side sub-phrase f̄ , and there exists
a target-side sub-phrase ē such that (f̄ , ē) are
consistent with word alignments (Och and Ney,
2003), we say nf̄ satisfies the structural alignment
consistency, and it is referred to as a structural-
alignment-consistent (SAC) node. Further, if ē is
covered by a target node nē ∈ Te, we say nē is
the aligned node of nf̄ . In this way, several dif-
ferent target nodes may be all aligned to the same
source node because of null alignments. For this,
we choose the target node with the smallest span
as the aligned one for the considered source node.
This is because a smaller span reflects a stronger
semantic relevance in most situations.

Likewise, we have similar definitions for tar-
get nodes. Note that alignment relations between
source- and target-side nodes may not be symmet-
ric. For example, in Figure 1(b), node nē is the
aligned node of node nf̄1 , while node nf̄2 rather
than nf̄1 is the aligned node of nē.

3.2 The Objective Function
We elaborate the three types of errors defined for
a bilingual phrase (f, e) with its binary tree struc-
tures (Tf , Te) on both sides below.

3.2.1 Reconstruction Error
Similar to RAE, the first error function is used to
estimate how well learned phrase embeddings rep-
resent corresponding phrases. The reconstruction
error Erec(f, e; θ) of (f, e) is defined as follows:

Erec(f, e; θ) = Erec(f ; θ) + Erec(e; θ) (9)

where both Erec(f ; θ) and Erec(e; θ) can be calcu-
lated according to Eq. (3).

3.2.2 Consistency Error
This metric corresponds to the first way in which
we exploit word alignments mentioned before,
which enables our model to generate as many SAC
nodes as possible to respect word alignments.

Formally, the consistency error Econ(f, e; θ) of
(f, e) is defined in the following way:

Econ(f, e; θ) = Econ(Tf ; θ) + Econ(Te; θ) (10)

whereEcon(Tf ; θ) andEcon(Te; θ) denote the con-
sistency error score for Tf and Te, given word
alignments. Here we only describe the calculation
of the former while the latter can be calculated in
exactly the same way.

To calculateEcon(Tf ; θ), we first judge whether
a source node nf̄ is an SAC node according to
word alignments. Let pnf̄ be the vector repre-
sentation of nf̄ . Following Socher et al. (2010),
who use a simple inner product to measure how
well the two words are combined into a phrase,
we use inner product to calculate the consis-
tency/inconsistency score for nf̄ :

s(nf̄ ) = W
scorepnf̄ (11)

where W score ∈ R1×d is the score parameter. We
calculateW score by distinguishing SAC from non-
SAC nodes defined as follows:

W score =

{
W scorecns if nf̄ is an SAC node
W scoreinc otherwise

where the subscript cns and inc represent consis-
tency and inconsistency, respectively. For exam-
ple, in Figure 3, as nf̄3 is a non-SAC node, we
calculate the inconsistency score using W scoreinc for
it.

We expect Tf to satisfy structural alignment
consistency as much as possible. Therefore we en-
courage the consistency score for Tf to be larger
than its inconsistency score using a max-margin
consistency error function:

Econ(Tf ; θ) =max{0, 1− s(Tf )cns
+ s(Tf )ins}

(12)

where s(Tf )cns denotes the sum of consistency
scores over all SAC nodes and s(Tf )ins the sum
of inconsistency scores over all non-SAC nodes in
Tf . Minimizing this error function will maximize
the sum of consistency scores of SAC nodes and
minimize (up to a margin) the sum of inconsis-

1251



resolution0 adopted1所1 通过2 决议3

nē

W ue

W
(3)
fnf̄1

nf̄2

nf̄3

Figure 3: The structure generation procedure of the source
sub-phrase “嚤 埏䍌 䛻懆” and the structure reconstruction
procedure of the target sub-phrase “resolution adopted”. Ac-
cording to word alignments (“2-1 3-0”), the node nf̄1 and nf̄2
are SAC ones while the node nf̄3 is a non-SAC node.

tency scores of non-SAC nodes.

3.2.3 Cross-Lingual Reconstruction Error
This metric corresponds to the second way in
which we exploit word alignments. The assump-
tion behind this is that a source/target node should
be able to reconstruct the entire subtree rooted at
its target/source aligned node as they are seman-
tically equivalent. Based on this, for the consid-
ered node, we calculate the cross-lingual recon-
struction error along the entire subtree rooted at
its aligned node in the other language and use the
error to measure how well the learned vector rep-
resents this node.

Similarly, the cross-lingual reconstruction error
Eclrec(f, e; θ) of (f, e) can be decomposed into
two parts as follows:

Eclrec(f, e; θ) = Ef2e·rec(Tf , Te; θ)
+ Ee2f ·rec(Tf , Te; θ)

(13)

where Ef2e·rec(Tf , Te; θ) denotes the error score
using Tf to reconstruct Te. Note that in this pro-
cess, the structure and the original node vector rep-
resentations of Te have been already generated.
Ee2f ·rec(Tf , Te; θ) denotes the reconstruction er-
ror score using Te to reconstruct Tf . Here we still
only describe the method of computing the former,
which also applies to the latter.

To calculate Ef2e·rec(Tf , Te; θ), we first collect
all source nodes (nf̄ ) in Tf and their aligned nodes
(nē) in Te to form a set of aligned node pairs
S = {〈nf̄ , nē〉} according to word alignments.
We then calculate Ef2e·rec(Tf , Te; θ) as the sum
of error scores over all node pairs in S. Given a
source node nf̄ with its aligned node nē on the
target side, we use nf̄ to reconstruct the sub-tree
structure Tē rooted at nē and compute the error
score based on the semantic distance between the
original and reconstructed vector representations
of nodes in Tē. As source and target phrase em-

beddings are separately learned, we first introduce
a transformation matrix W (3)f and a bias term b

(3)
f

to transform source phrase embeddings into the
target-side semantic space, following Zhang et al.
(2014) and Hermann and Blunsom (2014):

p′nē = f(W
(3)
f pnf̄ + b

(3)
f ) (14)

here p′nē denotes the reconstructed vector represen-
tation of nē, which is transformed from the vec-
tor representation pnf̄ of nf̄ . Then, we repeat the
reconstruction procedure in a top-down manner
along the corresponding target tree structure un-
til leaf nodes are reached, following Socher et al.
(2011a). Specifically, given the vector representa-
tion p′nē , we reconstruct vector representations of
its two children nodes:

[cue1; c
u
e2] = f(W

u
e p
′
nē + b

u
e ) (15)

where cue1 and c
u
e2 are the reconstructed vector rep-

resentations of the children nodes, W ue ∈ R2d×d,
and bue∈R2d×1. Eventually, given the original
and reconstructed target phrase representations,
we calculate Ef2e·rec(Tf , Te; θ) as follows:

Ef2e·rec(Tf , Te; θ) =
1
2

∑
〈nf̄ ,nē〉∈S

∑
n∈Tē

‖ pn−p′n ‖2

(16)
where pn and p′n are the original and reconstructed
vector representations of node n in the sub-tree
structure Tē rooted at nē. This error function
will be minimized so that semantic differences
between original and reconstructed structures are
minimal.

Figure 3 demonstrates the structure reconstruc-
tion from a generated source sub-tree to its target
counterpart. In this way, BCorrRAE propagates
semantic information along dash lines sequentially
until leaf nodes in the generated structure of the
target phrase.

3.2.4 The Final Objective

Similar to Eq. (8), we define the final objective
function of our model based on the three types of
errors described above

JBCorrRAE =
∑

(f,e)∈D
{α (Erec(f ; θ) + Erec(e; θ))

+ β (Econ(Tf ; θ) + Econ(Te; θ))
+ γ (Ef2e·rec(Tf , Te; θ) + Ee2f ·rec(Tf , Te; θ))}
+R(θ) (17)

1252



where weights α, β, γ (s.t. α+β+γ = 1) are used
to balance the preference among the three errors,
and R(θ) is the regularization term. Parameters θ
are divided into four sets1:

1. θL: the word embedding matrix;
2. θrec: the RAE parameter matrices W (1),
W (2) and bias terms b(1), b(2) (Section 2.1);

3. θcon: the consistency/inconsistency score pa-
rameter matrices W scorecns , W

score
inc (Section

3.2.2);
4. θclrec: the cross-lingual RAE semantic trans-

formation parameter matrices W (3), W u and
bias terms b(3), bu (Section 3.2.3).

For regularization, we assign each parameter set a
unique weight:

R(θ) =
λL
2
‖θL‖2 + λrec2 ‖θrec‖

2

+
λcon

2
‖θcon‖2 + λlcrec2 ‖θlcrec‖

2
(18)

Additionally, in order to prevent the hidden layer
from being very small, we normalize all output
vectors of the hidden layer to have length 1, p =

p
‖p‖ , following Socher et al. (2011c).

3.3 Model Training

Similar to Zhang et al. (2014), we adopt a co-
training style algorithm to train model parameters
in the following two steps:

First, we use a normal distribution (µ = 0, σ =
0.01) to randomly initialize all model parameters,
and adopt the standard RAE to pre-train source-
and target-side phrase embeddings and tree struc-
tures (Section 2.1).

Second, for each bilingual phrase, we update
its source-side parameters to obtain the fine-tuned
vector representation and binary tree of the source
phrase, given the target-side phrase structure and
node representations, and vice versa. In this pro-
cess, we apply L-BFGS to tune parameters based
on gradients over the joint error, as implemented
in (Socher et al., 2011c).

We repeat the procedure of the second step until
either the joint error (shown in Eq. (17)) reaches a
local minima or the number of iterations is larger
than a pre-defined number (25 is used in experi-
ments).

1Note that the source and target languages have different
four sets of parameters.

4 Decoding with BCorrRAE

Once the model training is completed, we in-
corporate two different phrasal similarity features
built on the trained BCorrRAE into the standard
log-linear framework of SMT. Given a bilingual
phrase (f, e), we first obtain their semantic phrase
representations (pf , pe). Then we transform pf
into p′e in the target semantic space and pe into
p′f in the source semantic space via transforma-
tion matrixes. Finally, we reconstruct sub-trees of
p′f along the source structure Tf learned by BCor-
rRAE, sub-trees of p′e along the target structure Te.

We exploit two kinds of phrasal similarity fea-
tures based on the learned phrase representations
and their tree structures as follows:

• Semantic Similarity measures the similarity
between original and transformed phrase rep-
resentations of (f, e):

SimSM (pf , p′f ) =
1
2
‖pf − p′f‖2

SimSM (pe, p′e) =
1
2
‖pe − p′e‖2

(19)

• Structural Similarity calculates the similarity
between original and reconstructed tree struc-
tures learned by BCorrRAE for (f, e):

SimST (pf , p′f ) =
1

2Cf

∑
n∈Tf

‖pn − p′n‖2

SimST (pe, p′e) =
1

2Ce

∑
n∈Te
‖pn − p′n‖2

(20)

where pn and p′n represent vector representations
of original and reconstructed node n, and Cf and
Ce count the number of nodes in the source and
target tree structure respectively. Note that if we
only compute the similarity for root nodes in the
bilingual tree of (f, e), the structural similarity
equals to the semantic similarity in Eq. (19).

5 Experiments

We conducted experiments on NIST Chinese-
English translation task to validate the effective-
ness of BCorrRAE.

5.1 System Overview

Our baseline decoder is a state-of-the-art phrase-
based translation system equipped with a maxi-
mum entropy based reordering model (MEBTG).
It adopts three bracketing transduction grammar
rules (Wu, 1997; Xiong et al., 2006): merging

1253



rules A → [A1, A2]|〈A1, A2〉 which are used to
merge two neighboring blocks2 A1 and A2 in a
straight|inverted order, and lexical rule A → f/e
used to translate a source phrase f into a target
phrase e.

The MEBTG system features a maximal en-
tropy classifier based reordering model that pre-
dicts orientations of neighboring blocks. During
training, we extract bilingual phrases containing
up to 7 words on the source side from the training
corpus. With the collected reordering examples,
we adopt the maximal entropy toolkit3 developed
by Zhang to train the reordering model with the
following parameters: iteration number iter=200
and gaussian prior g=1.0. Following Xiong et al.
(2006), we use only boundary words of blocks to
trigger the reordering model.

The whole translation model is organized in a
log-linear framework (Och and Ney, 2002). The
adopted sub-models mainly include: (1) rule trans-
lation probabilities in two directions, (2) lexical
weights in two directions, (3) targets-side word
number, (4) phrase number, (5) language model
score, and (6) the score of maximal entropy based
reordering model. We perform minimum error
rate training (Och, 2003) to tune various fea-
ture weights. During decoding, we set ttable-
limit=20 for translation candidates kept for each
source phrase, stack-size=100 for hypotheses in
each span, and swap-span=15 for the length of
the maximal reordering span.

5.2 Setup

Our bilingual data is the combination of the FBIS
corpus and Hansards part of LDC2004T07 corpus,
which contains 1.0M parallel sentences (25.2M
Chinese words and 29M English words). Follow-
ing Zhang et al. (2014), we collected 1.44M bilin-
gual phrases using forced decoding (Wuebker et
al., 2010) to train BCorrRAE from the training
data. We used a 5-gram language model trained
on the Xinhua portion of Gigaword corpus using
SRILM Toolkits4. Translation quality is evaluated
by case-insensitive BLEU-4 metric (Papineni et
al., 2002). We performed paired bootstrap sam-
pling (Koehn, 2004) to test the significance in
BLEU score differences. In our experiments, we
used NIST MT05 and MT06/MT08 data set as the

2A block is a bilingual phrase without maximum length
limitation.

3http://homepages.inf.ed.ac.uk/lzhang10/maxent toolkit.html
4http://www.speech.sri.com/projects/srilm/download.html

Parameter BRAE BCorrRAE
α 0.119 0.121
β - 0.6331
γ - 0.2459
λL 4.95 ×10−5 3.13 ×10−5
λrec 2.64 ×10−7 2.05 ×10−5
λcon - 7.32 ×10−6
λlcrec 9.31 ×10−5 5.25 ×10−6

Table 1: Hyper-parameters for BCorrRAE and BRAE model.

Method d MT06 MT08 AVG

BCorrRAESM

25 30.81 22.68⇓ 26.75
50 30.58↓ 22.72⇓ 26.65
75 30.50 22.53⇓ 26.52

100 30.34⇓ 22.61⇓ 26.48

BCorrRAEST

25 30.56 23.28 26.92
50 30.94 23.33 27.14
75 30.73 23.40 27.07

100 30.90 23.50 27.20

Table 2: Experiment results for different dimensions (d).
BCorrRAESM and BCorrRAEST are our systems that are
enhanced with the semantic and structural similarity features
learned by BCorrRAE, respectively. ↓/⇓: significantly worse
than the BCorrRAEST with the same dimensionality (p <
0.05/p < 0.01).

development and test set, respectively.
In addition to the baseline described below,

we also compare our method against the BRAE
model, which focuses on modeling relations of
source and target phrases as a whole unit. Word
embeddings in BRAE are pre-trained with toolkit
Word2Vec5 (Mikolov et al., 2013) on large-scale
monolingual data that contains 0.83B words for
Chinese and 0.11B words for English.

Hyper-parameters in all neural models are op-
timized by random search (Bergstra and Bengio,
2012) based on related joint errors. We ran-
domly extracted 250, 000 bilingual phrases from
the above-mentioned training data as training set,
5, 000 as development set and another 5, 000 as
test set. We drew α, β, γ uniformly from 0.10 to
0.50, and λL, λrec, λcon and λlcrec exponentially
from 10−8 to 10−2. Final parameters are shown in
Table 1 for both BRAE and BCorrRAE.

5.3 Dimensionality of Embeddings

To investigate the impact of embedding dimen-
sionality on our BCorrRAE, we tried four differ-
ent dimensions from 25 to 100 with an increment
of 25 each time. The results are displayed in Ta-
ble 2. We can observe that the performance of our
model is not consistently improved with the incre-
ment of dimensionality. This may be because a

5https://code.google.com/p/word2vec/

1254



larger dimension brings in much more parameters,
and therefore makes parameter tuning more diffi-
cult. In practice, setting the dimension d to 50, we
can get satisfactory results without much compu-
tation effort, which has also been found by Zhang
et al. (2014).

5.4 Structural Similarity vs. Semantic
Similarity

Table 2 also shows that the performance of
BCorrRAEST , the system with the structural sim-
ilarity feature in Eq. (20), is always superior to
that of BCorrRAESM with the semantic similar-
ity feature in Eq. (19). BCorrRAEST is bet-
ter than BCorrRAESM by 0.483 BLEU points
on average. In most cases, differences between
BCorrRAEST and BCorrRAESM with the same
dimensionality are statistically significant. This
suggests that digging into structures of bilingual
phrases (BCorrRAEST ) can obtain further im-
provements over only modeling bilingual phrases
as whole units (BCorrRAESM ).

5.5 Overall Performance

Table 3 summarizes the comparison results of dif-
ferent models on the test sets. The BCorrRAESM
outperforms the baseline and BRAE by 1.06 and
0.25 BLEU points on average respectively, while
BCorrRAEST gains 1.55 and 0.74 BLEU points
on average over the baseline and BRAE. The im-
provements of BCorrRAEST over the baseline,
BRAE and BCorrRAESM are statistically signif-
icant at different levels. This demonstrates the
advantage of our BCorrRAE over BRAE in that
BCorrRAE is able to explore sub-structures of
bilingual phrases.

5.6 Analysis

We compute a ratio of aligned nodes (Section 3.1)
over all nodes to estimate how well tree struc-
tures of bilingual phrases generated by BRAE and
BCorrRAE are consistent with word alignments.
We consider two factors when computing the ra-
tio: the length of the source side of a bilingual
phrase ls and the length of a span covered by an
aligned node la. The result is illustrated in Table
4.6 We find that BCorrRAE significantly outper-

6We only give ratios for bilingual phrases with source-
side length from 3 to 4 words because 1) ratios of BRAE and
BCorrRAE in the case of la < 3 are very close and 2) phrases
with length > 4 are rarely used during decoding (accounting
for < 0.5%).

Method MT06 MT08 AVG
Baseline 29.66⇓ 21.52⇓ 25.59
BRAE 30.27⇓ 22.53⇓ 26.40

BCorrRAESM 30.58
↓ 22.72⇓ 26.65

BCorrRAEST 30.94 23.33 27.14

Table 3: Experiment results on the test sets. AVG = average
BLEU scores for test sets. For both BRAE and BCorrRAE,
we set d=50. ↓/⇓: significantly worse than the BCorrRAEST
with d=50 (p < 0.05/p < 0.01, respectively).

[ls, la] [3,2] [4,2] [4,3]
BRAE 52.70% 39.88% 46.58%

BCorrRAE 60.08% 46.32% 54.43%

Table 4: Aligned node ratio for source phrases of different
lengths.

forms BRAE model by 7.22% on average in terms
of the aligned node ratio. This strongly demon-
strates that the proposed BCorrRAE is able to gen-
erate tree structures that are more consistent with
word alignments than those generated by BRAE.

We further show example source phrases in Ta-
ble 5 with their most semantically similar trans-
lations learned by BRAE and BCorrRAE in the
training corpus. Both models can select correct
translations for content words. However, they are
different in dealing with function words. Com-
pared to our model, the BRAE model prefers
longer target phrases surrounded with function
words. Take the source phrase “惮䜃坝揔” as an
example, the BRAE model learns both “a serious
challenge to” and “a serious challenge from” as
its semantically similar target phrases. Although
the content words “惮䜃” and “坝揔” are trans-
lated correctly into “serious” and “challenge”, the
function words “to” and “from” express exactly
the opposite meanings. In contrast, our model, es-
pecially the BCorrRAEST model, tends to choose
shorter translations that are consistent with word
alignments.

6 Related Work

A variety of efforts have been devoted to learn-
ing vector representations for words/phrases with
deep neural networks. According to the differ-
ence of learning contexts, previous work mainly
include the following two strands.

(1) Monolingual Word/Phrase Embeddings.
The straightforward approach to represent
word/phrases is to learn their hidden represen-
tations with traditional feature vectors, which
requires manual and task-dependent feature
engineering (Cui et al., 2014; Wu et al., 2014;

1255



Source Phrase BRAE BCorrRAESM BCorrRAEST

䌓䌓䌓㥎㥎㥎
to advocate the out to advocate encouraging
in preaching the been encouraging claimed

(advocate) the promotion of an advocate advocate

惮惮惮䜃䜃䜃坝坝坝揔揔揔
as well as severe challenges of rigorous challenges rigorous challenge

a serious challenge to as well as severe challenges enormous challenge
(serious challenge) a serious challenge from of severe challenges severe challenge

䋺䋺䋺㟙㟙㟙䀛䀛䀛嗪嗪嗪䛢䛢䛢
by the figures published by the to the estimates announced published data

the statistics released by at the figures published released figures
(data released) data published by the the statistics released by the estimates announced

Table 5: Semantically similar target phrases in the training set for example source phrases.

Chen and Manning, 2014). To avoid exploiting
manually input features, Bengio et al. (2003)
convert words to dense, real-valued vectors by
learning probability distributions of n-grams.
Mikolov et al. (2013) generate word vectors by
predicting their limited context words. Instead of
exploiting outside context information, recursive
auto-encoder is usually adopted to learn the com-
position of internal words (Socher et al., 2010;
Socher et al., 2011b; Socher et al., 2013b; Socher
et al., 2013a). Recently, convolution architecture
has drawn more and more attention due to its
ability to explicitly capture short and long-range
relations (Collobert et al., 2011; Kalchbrenner
and Blunsom, 2013; Kalchbrenner et al., 2014;
Kim, 2014).

(2) Bilingual Word/Phrase Embeddings. In the
field of machine translation and cross-lingual in-
formation processing, bilingual embedding learn-
ing has become an increasingly important study.
The bilingual embedding research origins in the
word embedding learning, upon which Zou et
al. (2013) utilize word alignments to constrain
translational equivalence. Kočiský et al. (2014)
propose a probability model to capture more se-
mantic information by marginalizing over word
alignments. More specifically to SMT, its main
components have been exploited to learn better
bilingual phrase embeddings in different aspects:
language models (Wang et al., 2014; Garmash and
Monz, 2014), reordering models (Li et al., 2013)
and translation models (Tran et al., 2014; Zhang
et al., 2014). Instead of exploiting a single model,
Liu et al. (2014) combine the recursive and recur-
rent neural network to incorporate the language
and translation model.

Different from the methods mentioned above,
our model considers both the cross-language con-
sistency of phrase structures and internal corre-
spondence relations inside bilingual phrases. The
most related works include Zhang et al. (2014)

and Socher et al. (2011a). Compared with these
works, our model exploits different levels of cor-
respondence relations inside bilingual phrases in-
stead of only the top level of entire phrases, and
reconstructs tree structures of sub-phrases in one
language according to aligned nodes in the other
language, which, to the best of our knowledge, has
never been investigated before.

7 Conclusions and Future Work

In this paper, we have presented the BCorrRAE
to learn phrase embeddings and tree structures of
bilingual phrases for SMT. Punishing structural-
alignment-inconsistent sub-structures and mini-
mizing the gap between original and reconstructed
structures, our approach is able to not only gen-
erate alignment-consistent phrase structures, but
also capture different levels of semantic rela-
tions within bilingual phrases. Experiment results
demonstrate the effectiveness of our model.

In the future, we would like to derive
more features from BCorrRAE, e.g., consis-
tency/inconsistency scores of bilingual phrases, to
further enhance SMT. Additionally, we also want
to apply our model to other bilingual tasks, e.g.,
learning bilingual terminology or paraphrases.

Acknowledgments

The authors were supported by National Nat-
ural Science Foundation of China (Grant Nos
61303082 and 61403269), Natural Science
Foundation of Jiangsu Province (Grant No.
BK20140355), National 863 program of China
(No. 2015AA011808), the Special and Major
Subject Project of the Industrial Science and
Technology in Fujian Province 2013 (Grant
No. 2013HZ0004-1), and 2014 Key Project of
Anhui Science and Technology Bureau (Grant
No. 1301021018). We also thank the anonymous
reviewers for their insightful comments.

1256



References
Yoshua Bengio, Réjean Ducharme, Pascal Vincent, and

Christian Janvin. 2003. A neural probabilistic lan-
guage model. Journal of Machine Learning Re-
search, 3:1139–1155.

James Bergstra and Yoshua Bengio. 2012. Random
search for hyper-parameter optimization. Journal of
Machine Learning Research, 13:22–29.

Danqi Chen and Christopher Manning. 2014. A fast
and accurate dependency parser using neural net-
works. In Proc. of EMNLP 2014, pages 740–750.

Ronan Collobert, Jason Weston, Léon Bottou, Michael
Karlen, Koray Kavukcuoglu, and Pavel Kuksa.
2011. Natural language processing (almost) from
scratch. Journal of Machine Learning Research.,
16:2493–2537.

Lei Cui, Dongdong Zhang, Shujie Liu, Qiming Chen,
Mu Li, Ming Zhou, and Muyun Yang. 2014. Learn-
ing topic representation for smt with neural net-
works. In Proc. of ACL 2014, pages 133–143.

Jacob Devlin, Rabih Zbib, Zhongqiang Huang, Thomas
Lamar, Richard Schwartz, and John Makhoul. 2014.
Fast and robust neural network joint models for sta-
tistical machine translation. In Proc. of ACL 2014,
pages 1370–1380.

Jianfeng Gao, Xiaodong He, Wen-tau Yih, and
Li Deng. 2014. Learning continuous phrase repre-
sentations for translation modeling. In Proc. of ACL
2014, pages 699–709.

Ekaterina Garmash and Christof Monz. 2014.
Dependency-based bilingual language models for
reordering in statistical machine translation. In
Proc. of EMNLP 2014, pages 1689–1700.

Karl Moritz Hermann and Phil Blunsom. 2014. Multi-
lingual models for compositional distributed seman-
tics. In Proc. of ACL 2014, pages 58–68.

Nal Kalchbrenner and Phil Blunsom. 2013. Recurrent
continuous translation models. In Proc. of EMNLP
2013, pages 1700–1709.

Nal Kalchbrenner, Edward Grefenstette, and Phil Blun-
som. 2014. A convolutional neural network for
modelling sentences. In Proc. of ACL 2014, pages
655–665.

Yoon Kim. 2014. Convolutional neural networks for
sentence classification. In Proc. of EMNLP 2014,
pages 1746–1751.

Philipp Koehn. 2004. Statistical significance tests for
machine translation evaluation. In Proc. of EMNLP
2004, pages 388–395.

Tomáš Kočiský, Karl Moritz Hermann, and Phil Blun-
som. 2014. Learning bilingual word representations
by marginalizing alignments. In Proc. of ACL 2014,
pages 224–229.

Peng Li, Yang Liu, and Maosong Sun. 2013. Re-
cursive autoencoders for ITG-based translation. In
Proc. of EMNLP 2013, pages 567–577.

Lemao Liu, Taro Watanabe, Eiichiro Sumita, and
Tiejun Zhao. 2013. Additive neural networks for
statistical machine translation. In Proc. of ACL
2013, pages 791–801.

Shujie Liu, Nan Yang, Mu Li, and Ming Zhou. 2014.
A recursive recurrent neural network for statistical
machine translation. In Proc. of ACL 2014, pages
1491–1500.

Tomas Mikolov, Ilya Sutskever, Kai Chen, Greg Cor-
rado, and Jeffrey Dean. 2013. Distributed represen-
tations of words and phrases and their composition-
ality. In Proc. of NIPS 2013.

Franz Josef Och and Hermann Ney. 2002. Discrimina-
tive training and maximum entropy models for sta-
tistical machine translation. In Proc. of ACL 2002,
pages 295–302.

Franz Josef Och and Hermann Ney. 2003. A sys-
tematic comparison of various statistical alignment
models. Computational Linguistics, 29(1):19–51.

Franz Josef Och. 2003. Minimum error rate train-
ing in statistical machine translation. In Proc. of
ACL 2003, pages 160–167. Association for Compu-
tational Linguistics.

Kishore Papineni, Salim Roukos, Todd Ward, and Wei-
Jing Zhu. 2002. Bleu: a method for automatic eval-
uation of machine translation. In Proc. of ACL 2002,
pages 311–318.

Richard Socher, Christopher D. Manning, and An-
drew Y. Ng. 2010. Learning continuous phrase
representations and syntactic parsing with recursive
neural networks. In Proc. of NIPS 2010.

Richard Socher, Eric H. Huang, Jeffrey Pennington,
Andrew Y. Ng, and Christopher D. Manning. 2011a.
Dynamic pooling and unfolding recursive autoen-
coders for paraphrase detection. In Proc. of NIPS
2011.

Richard Socher, Cliff Chiung-Yu Lin, Andrew Y. Ng,
and Christopher D. Manning. 2011b. Parsing natu-
ral scenes and natural language with recursive neural
networks. In Proc. of ICML 2011.

Richard Socher, Jeffrey Pennington, Eric H. Huang,
Andrew Y. Ng, and Christopher D. Manning. 2011c.
Semi-supervised recursive autoencoders for predict-
ing sentiment distributions. In Proc. of EMNLP
2011, pages 151–161.

Richard Socher, John Bauer, Christopher D. Manning,
and Ng Andrew Y. 2013a. Parsing with compo-
sitional vector grammars. In Proc. of ACL 2013,
pages 455–465.

1257



Richard Socher, Alex Perelygin, Jean Wu, Jason
Chuang, Christopher D. Manning, Andrew Ng, and
Christopher Potts. 2013b. Recursive deep models
for semantic compositionality over a sentiment tree-
bank. In Proc. of EMNLP 2013, pages 1631–1642.

Martin Sundermeyer, Tamer Alkhouli, Joern Wuebker,
and Hermann Ney. 2014. Translation modeling
with bidirectional recurrent neural networks. In
Proc. of EMNLP 2014, pages 14–25.

Akihiro Tamura, Taro Watanabe, and Eiichiro Sumita.
2014. Recurrent neural networks for word align-
ment model. In Proc. of ACL 2014, pages 1470–
1480.

Ke M. Tran, Arianna Bisazza, and Christof Monz.
2014. Word translation prediction for morphologi-
cally rich languages with bilingual neural networks.
In Proc. of EMNLP 2014, pages 1676–1688.

Rui Wang, Hai Zhao, Bao-Liang Lu, Masao Utiyama,
and Eiichiro Sumita. 2014. Neural network based
bilingual language model growing for statistical ma-
chine translation. In Proc. of EMNLP 2014, pages
189–195.

Haiyang Wu, Daxiang Dong, Xiaoguang Hu, Dian-
hai Yu, Wei He, Hua Wu, Haifeng Wang, and Ting
Liu. 2014. Improve statistical machine transla-
tion with context-sensitive bilingual semantic em-
bedding model. In Proc. of EMNLP 2014, pages
142–146.

Dekai Wu. 1997. Stochastic inversion transduction
grammars and bilingual parsing of parallel corpora.
Computational Linguistics, 23(3):377–403.

Joern Wuebker, Arne Mauser, and Hermann Ney.
2010. Training phrase translation models with
leaving-one-out. In Proc. of ACL 2010, pages 475–
484.

Deyi Xiong, Qun Liu, and Shouxun Lin. 2006. Maxi-
mum entropy based phrase reordering model for sta-
tistical machine translation. In Proc. of ACL 2006,
pages 521–528.

Nan Yang, Shujie Liu, Mu Li, Ming Zhou, and Nenghai
Yu. 2013. Word alignment modeling with context
dependent deep neural network. In Proc. of ACL
2013, pages 166–175.

Jiajun Zhang, Shujie Liu, Mu Li, Ming Zhou, and
Chengqing Zong. 2014. Bilingually-constrained
phrase embeddings for machine translation. In Proc.
of ACL 2014, pages 111–121.

Will Y. Zou, Richard Socher, Daniel Cer, and Christo-
pher D. Manning. 2013. Bilingual word embed-
dings for phrase-based machine translation. In Proc.
of EMNLP 2013, pages 1393–1398.

1258


