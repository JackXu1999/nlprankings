



















































End-Task Oriented Textual Entailment via Deep Explorations of Inter-Sentence Interactions


Proceedings of the 56th Annual Meeting of the Association for Computational Linguistics (Short Papers), pages 540–545
Melbourne, Australia, July 15 - 20, 2018. c©2018 Association for Computational Linguistics

540

End-Task Oriented Textual Entailment
via Deep Explorations of Inter-Sentence Interactions

Wenpeng Yin,1 Hinrich Schütze,2 Dan Roth1
1Dept. of Computer Science, University of Pennsylvania, USA

2CIS, LMU Munich, Germany
{wenpeng,danroth}@seas.upenn.edu

Abstract

This work deals with SCITAIL, a nat-
ural entailment challenge derived from
a multi-choice question answering prob-
lem. The premises and hypotheses in
SCITAIL were generated with no aware-
ness of each other, and did not specif-
ically aim at the entailment task. This
makes it more challenging than other
entailment data sets and more directly
useful to the end-task – question an-
swering. We propose DEISTE (deep
explorations of inter-sentence interactions
for textual entailment) for this entail-
ment task. Given word-to-word inter-
actions between the premise-hypothesis
pair (P , H), DEISTE consists of: (i) a
parameter-dynamic convolution to make
important words in P and H play a domi-
nant role in learnt representations; and (ii)
a position-aware attentive convolution to
encode the representation and position in-
formation of the aligned word pairs. Ex-
periments show that DEISTE gets ≈5%
improvement over prior state of the art
and that the pretrained DEISTE on SCI-
TAIL generalizes well on RTE-5.1

1 Introduction

Textual entailment (TE) is a fundamental prob-
lem in natural language understanding and has
been studied intensively recently using multiple
benchmarks – PASCAL RTE challenges (Dagan
et al., 2006, 2013), Paragraph-Headline (Burger
and Ferro, 2005), SICK (Marelli et al., 2014)
and SNLI (Bowman et al., 2015). In particular,
SNLI – while much easier than earlier datasets

1https://github.com/yinwenpeng/SciTail

Premise P
Pluto rotates once on its axis every 6.39 Earth days. 0
Once per day, the earth rotates about its axis. 1
It rotates on its axis once every 60 Earth days. 0
Earth orbits Sun, and rotates once per day about axis. 1

Table 1: Examples of four premises for the hy-
pothesis “Earth rotates on its axis once times in
one day” in SCITAIL dataset. Right column (la-
bel): “1” means entail, “0” otherwise.

– has generated much work based on deep neu-
ral networks due to its large size. However, these
benchmarks were mostly derived independently
of any NLP problems.2 Therefore, the premise-
hypothesis pairs were composed under the con-
straint of predefined rules and the language skills
of humans. As a result, while top-performing sys-
tems push forward the state-of-the-art, they do not
necessarily learn to support language inferences
that emerge commonly and naturally in real NLP
problems.

In this work, we study SCITAIL (Khot et al.,
2018), an end-task oriented challenging entail-
ment benchmark. SCITAIL is reformatted from
a multi-choice question answering problem. All
hypotheses H were obtained by rewriting (ques-
tion, correct answer) pairs; all premises P are rel-
evant web sentences collected by an Information
retrieval (IR) method; then (P , H) pairs are an-
notated via crowdsourcing. Table 1 shows exam-
ples. By this construction, a substantial perfor-
mance gain on SCITAIL can be turned into bet-
ter QA performance (Khot et al., 2018). Khot
et al. (2018) report that SCITAIL challenges neu-
ral entailment models that show outstanding per-
formance on SNLI, e.g., Decomposable Attention
Model (Parikh et al., 2016) and Enhanced LSTM
(Chen et al., 2017).

We propose DEISTE for SCITAIL. Given
word-to-word inter-sentence interactions between

2RTE-{5,6,7} is an exception to this rule.

https://github.com/yinwenpeng/SciTail


541

more likely less likely

premise

hypothesis 1 hypothesis 2

entail

Figure 1: The motivation of considering alignment
positions in TE. The same color in (premise, hy-
pothesis) means the two words are best aligned.

pi hj

i

j

Given : I = interactions(P, H)

(1) : importance of
1.0

1.0 + max(I[i, :])
pi

(2) H ⋅ softmax(I[i, :]) : soft best match of pi

(3) argmax(I[i, :]) : hard location of best match of pi

Learn :

P H

I

Figure 2: The basic principles of DEISTE in mod-
eling the pair (P , H)

the pair (P , H), DEISTE pursues three deep ex-
ploration strategies of these interactions. (a) How
to express the importance of a word, and let it
play a dominant role in learnt representations. (b)
For any word in one of (P , H), how to find the
best aligned word in the other sentence, so that
we know their connection is indicative of the final
decision. (c) For a window of words in P or H ,
whether the locations of their best aligned words in
the other sentence provides clues. As Figure 1 il-
lustrates, the premise “in this incident, the cop (C)
shot (S) the thief (T )” is more likely to entail the
hypothesis “Ĉ . . . Ŝ . . . T̂ ” than “T̂ . . . Ŝ . . . Ĉ”
where X̂ is the word that best matches X .

Our model DEISTE is implemented in convo-
lutional neural architecture (LeCun et al., 1998).
Specifically, DEISTE consists of (i) a parameter-
dynamic convolution for exploration strategy (a)
given above; and (ii) a position-aware atten-
tive convolution for exploration strategies (b)
and (c). In experiments, DEISTE outperforms
prior top systems by ≈5%. Perhaps even more
interestingly, the pretrained model over SCI-
TAIL generalizes well on RTE-5.

pi

mi

P H

aligned
hidden state

attentive
convolution

rpos

row-wise
max-pooling

Representation for pair  (P, H)

p̃i

pi

zi

position  
embedding

Figure 3: Position-aware attentive convolution in
modeling the pair (P , H)

2 Method

To start, a sentence S (S ∈ {P,H}) is represented
as a sequence of ns hidden states, e.g., pi,hi ∈
Rd (i = 1, 2, . . . , |np/h|), forming a feature map
S ∈ Rd×|ns|, where d is the dimensionality of hid-
den states. Figure 2 depicts the basic principle of
DEISTE in modeling premise-hypothesis pair (P ,
H) with feature maps P and H, respectively.

First, P and H have fine-grained interactions
I ∈ Rnp×nh by comparing any pair of (pi,hj):

I[i, j] = cosine(pi,hj) (1)

We now elaborate DEISTE’s exploration strategies
(a), (b) and (c) of the interaction results I.

2.1 Parameter-dynamic convolution

Intuitively, important words should be expressed
more intensively than other words in the learnt
representation of a sentence. However, the impor-
tance of words within a specific sentence might
not depend on the sentence itself. E.g., Yin and
Schütze (2017b) found that in question-aware an-
swer sentence selection, words well matched are
more important; while in textual entailment, words
hardly matched are more important.

In this work, we try to make the semantics of
those important words dominate in the output rep-
resentations of a convolution encoder.

Given a local window of hidden states in the
feature map P, e.g., three adjacent ones pi−1,
pi and pi+1, a conventional convolution learns a



542

higher-level representation r for this trigram:

r = tanh(W · [pi−1,pi,pi+1] + b) (2)
where W ∈ Rd×3d and b ∈ Rd.

For simplicity, we neglect the bias term b and
split the multiplication of big matrices – W ·
[pi−1,pi,pi+1] – into three parts, then r can be
formulated as:

r = tanh(W−1 · pi−1 ⊕W0 · pi ⊕W+1 · pi+1)
= tanh(p̂i−1 ⊕ p̂i ⊕ p̂i+1)

where ⊕ means element-wise addition; W−1,
W0, W+1 ∈ Rd×d, and their concatenation
equals to the W in Equation 2; p̂i is set to be
W0 · pi, so p̂i can be seen as the projection of
pi in a new space by parameters W0; finally the
three projected outputs contribute equally in the
addition: p̂i−1 ⊕ p̂i ⊕ p̂i+1.

The convolution encoder shares parameters
[W−1, W0, W+1] in all trigrams, so we cannot
expect those parameters to express the importance
of p̂i−1, p̂i or p̂i+1 in the output representation r.
Instead, we formulate the idea as follows:

mi = tanh(αi−1p̂i−1 ⊕ αip̂i ⊕ αi+1p̂i+1)
in which the three scalars αi−1, αi and αi+1 indi-
cate the importance scores of p̂i−1, p̂i and p̂i+1
respectively. In our work, we adopt:

αi =
1.0

1.0 + max(I[i, :])
(3)

Since αip̂i = αiW0 ·pi = W0,i ·pi, we notice
that the original shared parameter W0 is mapped
to a dynamic parameter W0,i, which is specific
to the input pi. We refer to this as parameter-
dynamic convolution, which enables our system
DEISTE to highlight important words in higher-
level representations.

Finally, a max-pooling layer is stacked over
{mi} to get the representation for the pair (P , H),
denoted as rdyn.

2.2 Position-aware attentive convolution
Our position-aware attentive convolution, shown
in Figure 3, aims to encode the representations as
well as the positions of the best word alignments.

Representation. Given the interaction scores
in I, the representation p̃i of all soft matches for
hidden state pi in P is the weighted average of all
hidden states in H:

p̃i =
∑
j

softmax(I[i, :])j · hj (4)

methods dev test
Majority Class 50.4 60.4
Hypothesis only 66.9 65.1
Premise only 72.6 73.4
NGram model 65.0 70.6
ESIM-600D 70.5 70.6
Decomp-Att 75.4 72.3
DGEM 79.6 77.3
AttentiveConvNet 79.3 78.1
DEISTE 82.4 82.1

w/o dyn-conv 80.2 79.1
w/o representation 76.3 74.9
w/o position 82.1 81.3

Table 2: DEISTE vs. baselines on SCITAIL

Position. For a trigram [pi−1, pi, pi+1] in P ,
knowing where its best-matched words are located
in H is helpful in TE, as discussed in Section 1.

For pi, we first retrieve the index xi of the best-
matched word in H by:

xi = argmax(I[i, :]) (5)

then embed the concrete {xi} into randomly-
initialized continuous space:

zi = M[xi] (6)

where M ∈ Rnh×dm ; nh is the length of H; dm is
the dimensionality of position embeddings.

Now, the three positions [i − 1, i, i + 1] in
P concatenate vector-wisely original hidden states
[pi−1, pi, pi+1] with position embeddings [zi−1,
zi, zi+1], getting a new sequence of hidden states:
[ci−1, ci, ci+1]. As a result, a position i in P
has hidden state ci, left context ci−1, right context
ci+1 and the representation of soft-aligned words
in H , i.e., p̃i. Then a convolution works at posi-
tion i in P as:

ni = tanh(W · [ci−1, ci, ci+1, p̃i] + b) (7)

As Figure 3 shows, the position-aware attentive
convolution finally stacks a standard max-pooling
layer over {ni} to get the representation for the
pair (P , H), denoted as rpos.

Overall, our DEISTE will generate a represen-
tation rdyn through the parameter-dynamic convo-
lution, and generate a representation rpos through
the position-aware attentive convolution. Finally
the concatenation – [rdyn, rpos] – is fed to a logis-
tic regression classifier.



543

methods acc.
Majority Class 34.3
Premise only 33.5
Hypothesis only 68.7
ESIM 86.7
Decomp-Att 86.8
AttentiveConvNet 86.3
DEISTESCITAIL 84.7
DEISTEtune 87.1
State-of-the-art 88.7

Table 3: DEISTE vs. baselines on SNLI.
DEISTESCITAIL has exactly the same system layout
and hyperparameters as the one reported on SCI-
TAIL in Table 2; DEISTEtune: tune hyperparame-
ters on SNLI dev. State-of-the-art refers to (Peters
et al., 2018). Ensemble results are not considered.

3 Experiments

Dataset. SCITAIL3 (Khot et al., 2018) is for tex-
tual entailment in binary classification: entailment
or neutral. Accuracy is reported.

Training setup. All words are initialized by
300D Word2Vec (Mikolov et al., 2013) embed-
dings, and are fine-tuned during training. The
whole system is trained by AdaGrad (Duchi et al.,
2011). Other hyperparameter values include:
learning rate 0.01, dm=50 for position embeddings
M, hidden size 300, batch size 50, filter width 3.

Baselines. (i) Decomposable Attention Model
(Decomp-Att) (Parikh et al., 2016): Develop at-
tention mechanisms to decompose the problem
into subproblems to solve in parallel. (ii) En-
hanced LSTM (ESIM) (Chen et al., 2017): En-
hance LSTM by encoding syntax and semantics
from parsing information. (iii) Ngram Overlap:
An overlap baseline, considering unigrams, one-
skip bigrams and one-skip trigrams. (iv) DGEM
(Khot et al., 2018): A decomposed graph entail-
ment model, the current state-of-the-art. (v) At-
tentiveConvNet (Yin and Schütze, 2017a): Our
top-performing textual entailment system on SNLI
dataset, equipped with RNN-style attention mech-
anism in convolution.4

In addition, to check if SCITAIL can be eas-
ily resolved by features from only premises or
hypotheses (like the problem of SNLI shown by
Gururangan et al. (2018)), we put a vanilla CNN
(convolution&max-pooling) over merely hypothe-
sis or premise to derive the pair label.

3Please refer to (Khot et al., 2018) for more details.
4https://github.com/yinwenpeng/Attentive Convolution

Table 2 presents results on SCITAIL. (i) Our
model DEISTE has a big improvement (∼ 5%)
over DGEM, the best baseline. Interestingly, At-
tentiveConvNet performs very competitively, sur-
passing DGEM by 0.8% on test. These two results
show the effectiveness of attentive convolution.
DEISTE, equipped with a parameter-dynamic
convolution and a more advanced position-aware
attentive convolution, clearly gets a big plus. (ii)
The ablation shows that all three aspects we ex-
plore from the inter-sentence interactions con-
tribute; “position” encoding is less important than
“dyn-conv” and “representation”. Without “repre-
sentation”, the system performs much worse. This
is in line with the result of AttentiveConvNet base-
line.

To further study the systems and datasets, Table
3 gives performance of DEISTE and baselines on
SNLI. We see that DEISTE gets competitive per-
formance on SNLI.

Comparing Tables 2 and 3, the baselines “hy-
pothesis only” and “premise only” show anal-
ogous while different phenomena between SCI-
TAIL and SNLI. On one hand, both SNLI and
SCITAIL can get a relatively high number by
looking at only one of {premise, hypothesis} –
“premise only” gets 73.4% accuracy on SCITAIL,
even higher than two more complicated baselines
(ESIM-600D and Decomp-Att), and “hypothesis
only” gets 68.7% accuracy on SNLI which is
more than 30% higher than the “majority” and
“premise only” baselines. Notice the contrast:
SNLI “prefers” hypothesis, SCITAIL “prefers”
premise. For SNLI, this is not surprising as the
crowd-workers tend to construct the hypotheses in
SNLI by some regular rules (Gururangan et al.,
2018). The phenomenon in SCITAIL is left to ex-
plore in future work.

Error Analysis. Table 4 gives examples of er-
rors. We explain them as follows.

Language conventions: The pair #1 uses dash
“–” to indicate a definition sentence for “Front”;
The pair #2 has “A (or B)” to denote the equiva-
lence between A and B. This challenge is expected
to be handled by rules.

Ambiguity: The pair #3 looks like having a sim-
ilar challenge with the pair #2. We guess the anno-
tators treat “· · · a vertebral column or backbone”
and “ · · · the backbone (or vertebral column)” as
the same convention, which may be debatable.

Complex discourse relation: The premise in



544

# (Premise P , Hypothesis H) Pair G/P Challenge

1 (P ) Front – The boundary between two different air masses. 1/0 languageconventions(H) In weather terms, the boundary between two air masses is called front.

2 (P ) . . . the notochord forms the backbone (or vertebral column). 1/0 languageconventions(H) Backbone is another name for the vertebral column.

3 (P ) · · · animals with a vertebral column or backbone and animals without one. 1/0 ambiguity(H) Backbone is another name for the vertebral column.

4
(P ) Heterotrophs get energy and carbon from living plants or animals ( consumers
) or from dead organic matter ( decomposers ). 0/1 discourserelation(H) Mushrooms get their energy from decomposing dead organisms.

5
(P ) Ethane is a simple hydrocarbon, a molecule made of two carbon and six
hydrogen atoms. 0/1 discourserelation(H) Hydrocarbons are made of one carbon and four hydrogen atoms.

6 (P ) . . . the SI unit. . . for force is the Newton (N) and is defined as (kg·m/s
−2 ). 0/1 beyond text(H) Newton (N) is the SI unit for weight.

Table 4: Error cases of DEISTE in SCITAIL. “· · · ”: truncated text. “G/P”: gold/predicted label.

dev test
Majority baseline 50.0 50.0
State-of-the-art – 73.5
training data
SNLI 47.1 46.0
SCITAIL 60.5 60.2

Table 5: Train on different TE datasets, test accu-
racy on two-way RTE-5. State-of-the-art refers to
(Iftene and Moruz, 2009)

the pair #4 has an “or” structure. In the pair
#5, “a molecule made of · · · ” defines the con-
cept “Ethane” instead of the “hydrocarbon”. Both
cases require the model to be able to comprehend
the discourse relation.

Knowledge beyond text: The main challenge in
the pair #6 is to distinguish between “weight” and
“force”, which requires more physical knowledge
that is beyond the text described here and beyond
the expressivity of word embeddings.

Transfer to RTE-5. One main motivation of
exploring this SCITAIL problem is that this is an
end-task oriented TE task. A natural question
thus is how well the trained model can be trans-
ferred to other end-task oriented TE tasks. In
Table 5, we take the models pretrained on SCI-
TAIL and SNLI and test them on RTE-5. Clearly,
the model pretrained on SNLI has not learned any-
thing useful for RTE-5 – its performance of 46.0%
is even worse than the majority baseline. The
model pretrained on SCITAIL, in contrast, demon-
strates much more promising generalization per-
formance: 60.2% vs. 46.0%.

4 Related Work

Learning automatically inter-sentence word-to-
word interactions or alignments was first stud-
ied in recurrent neural networks (Elman, 1990).

Rocktäschel et al. (2016) employ neural word-to-
word attention for SNLI task. Wang and Jiang
(2016) propose match-LSTM, an extension of the
attention mechanism in (Rocktäschel et al., 2016),
by more fine-grained matching and accumulation.
Cheng et al. (2016) present a new LSTM equipped
with a memory tape. Other work following this
attentive matching idea includes Bilateral Multi-
Perspective Matching model (Wang et al., 2017),
Enhanced LSTM (Chen et al., 2016) etc.

In addition, convolutional neural networks (Le-
Cun et al., 1998), equipped with attention mecha-
nisms, also perform competitively in TE. Yin et al.
(2016) implement the attention in pooling phase
so that important hidden states will be pooled with
higher probabilities. Yin and Schütze (2017a) fur-
ther develop the attention idea in CNNs, so that a
RNN-style attention mechanism is integrated into
the convolution filters. This is similar with our
position-aware attentive convolution. We instead
explored a way to make use of position informa-
tion of alignments to do reasoning.

Attention mechanisms in both RNNs and CNNs
make use of sentence interactions. Our work
achieves a deep exploration of those interactions,
in order to guide representation learning in TE.

5 Summary

This work proposed DEISTE to deal with an end-
task oriented textual entailment task – SCITAIL.
Our model enables a comprehensive utilization of
inter-sentence interactions. DEISTE outperforms
competitive systems by big margins.

Acknowledgments. We thank all the review-
ers for insightful comments. This research is sup-
ported in part by DARPA under agreement number
FA8750-13-2-0008, and by a gift from Google.



545

References
Samuel R. Bowman, Gabor Angeli, Christopher Potts,

and Christopher D. Manning. 2015. A large anno-
tated corpus for learning natural language inference.
In Proceedings of EMNLP. pages 632–642.

John Burger and Lisa Ferro. 2005. Generating an en-
tailment corpus from news headlines. In Proceed-
ings of the ACL Workshop on Empirical Modeling of
Semantic Equivalence and Entailment. pages 49–54.

Qian Chen, Xiaodan Zhu, Zhen-Hua Ling, Si Wei, and
Hui Jiang. 2016. Enhancing and combining sequen-
tial and tree LSTM for natural language inference.
CoRR abs/1609.06038.

Qian Chen, Xiaodan Zhu, Zhen-Hua Ling, Si Wei, Hui
Jiang, and Diana Inkpen. 2017. Enhanced LSTM for
natural language inference. In Proceedings of ACL.
pages 1657–1668.

Jianpeng Cheng, Li Dong, and Mirella Lapata. 2016.
Long short-term memory-networks for machine
reading. In Proceedings of EMNLP. pages 551–561.

Ido Dagan, Oren Glickman, and Bernardo Magnini.
2006. The PASCAL recognising textual entailment
challenge. In Machine Learning Challenges, Eval-
uating Predictive Uncertainty, Visual Object Clas-
sification and Recognizing Textual Entailment, First
PASCAL Machine Learning Challenges Workshop.
pages 177–190.

Ido Dagan, Dan Roth, Mark Sammons, and Fabio Mas-
simo Zanzoto. 2013. Recognizing Textual Entail-
ment: Models and Applications. Morgan and Clay-
pool.

John Duchi, Elad Hazan, and Yoram Singer. 2011.
Adaptive subgradient methods for online learning
and stochastic optimization. JMLR 12:2121–2159.

Jeffrey L. Elman. 1990. Finding structure in time.
Cognitive Science 14(2):179–211.

Suchin Gururangan, Swabha Swayamdipta, Omer
Levy, Roy Schwartz, Samuel R. Bowman, and
Noah A. Smith. 2018. Annotation artifacts in natural
language inference data. In Proceedings of NAACL.

Adrian Iftene and Mihai Alex Moruz. 2009. UAIC par-
ticipation at RTE5. In Proceedings of TAC.

Tushar Khot, Ashish Sabharwal, and Peter Clark. 2018.
SciTail: A textual entailment dataset from science
question answering. In Proceedings of AAAI.

Yann LeCun, Léon Bottou, Yoshua Bengio, and Patrick
Haffner. 1998. Gradient-based learning applied to
document recognition. In Proceedings of the IEEE.
pages 2278–2324.

Marco Marelli, Stefano Menini, Marco Baroni, Luisa
Bentivogli, Raffaella Bernardi, and Roberto Zam-
parelli. 2014. A SICK cure for the evaluation of
compositional distributional semantic models. In
Proceedings of LREC. pages 216–223.

Tomas Mikolov, Ilya Sutskever, Kai Chen, Greg S Cor-
rado, and Jeff Dean. 2013. Distributed representa-
tions of words and phrases and their compositional-
ity. In Proceedings of NIPS. pages 3111–3119.

Ankur P. Parikh, Oscar Täckström, Dipanjan Das, and
Jakob Uszkoreit. 2016. A decomposable attention
model for natural language inference. In Proceed-
ings of EMNLP. pages 2249–2255.

Matthew E. Peters, Mark Neumann, Mohit Iyyer, Matt
Gardner, Christopher Clark, Kenton Lee, and Luke
Zettlemoyer. 2018. Deep contextualized word rep-
resentations. CoRR abs/1802.05365.

Tim Rocktäschel, Edward Grefenstette, Karl Moritz
Hermann, Tomáš Kočiskỳ, and Phil Blunsom. 2016.
Reasoning about entailment with neural attention.
In Proceedings of ICLR.

Shuohang Wang and Jing Jiang. 2016. Learning natu-
ral language inference with LSTM. In Proceedings
of NAACL. pages 1442–1451.

Zhiguo Wang, Wael Hamza, and Radu Florian. 2017.
Bilateral multi-perspective matching for natural lan-
guage sentences. In Proceedings of IJCAI. pages
4144–4150.

Wenpeng Yin and Hinrich Schütze. 2017a. Attentive
convolution. CoRR abs/1710.00519.

Wenpeng Yin and Hinrich Schütze. 2017b. Task-
specific attentive pooling of phrase alignments con-
tributes to sentence matching. In Proceedings of
EACL. pages 699–709.

Wenpeng Yin, Hinrich Schütze, Bing Xiang, and
Bowen Zhou. 2016. ABCNN: attention-based con-
volutional neural network for modeling sentence
pairs. TACL 4:259–272.


