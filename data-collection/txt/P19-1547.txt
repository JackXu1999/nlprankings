



















































Robust Zero-Shot Cross-Domain Slot Filling with Example Values


Proceedings of the 57th Annual Meeting of the Association for Computational Linguistics, pages 5484–5490
Florence, Italy, July 28 - August 2, 2019. c©2019 Association for Computational Linguistics

5484

Robust Zero-Shot Cross-Domain Slot Filling with Example Values

Darsh J Shah*1, Raghav Gupta*2, Amir A Fayazi2, and Dilek Hakkani-Tür3

1MIT CSAIL, Cambridge, MA
2Google Research, Mountain View, CA

3Amazon Alexa AI, Sunnyvale, CA
darsh@csail.mit.edu, {raghavgupta,amiraf}@google.com,

dilek@ieee.org

Abstract

Task-oriented dialog systems increasingly rely
on deep learning-based slot filling models,
usually needing extensive labeled training data
for target domains. Often, however, little to no
target domain training data may be available,
or the training and target domain schemas may
be misaligned, as is common for web forms
on similar websites. Prior zero-shot slot filling
models use slot descriptions to learn concepts,
but are not robust to misaligned schemas. We
propose utilizing both the slot description and
a small number of examples of slot values,
which may be easily available, to learn seman-
tic representations of slots which are transfer-
able across domains and robust to misaligned
schemas. Our approach outperforms state-of-
the-art models on two multi-domain datasets,
especially in the low-data setting.

1 Introduction

Goal-oriented dialog systems assist users with
tasks such as finding flights, booking restaurants
and, more recently, navigating user interfaces,
through natural language interactions. Slot fill-
ing models, which identify task-specific parame-
ters/slots (e.g. flight date, cuisine) from user ut-
terances, are key to the underlying spoken lan-
guage understanding (SLU) systems. Advances in
SLU have enabled virtual assistants such as Siri,
Alexa and Google Assistant. There is also signif-
icant interest in adding third-party functionality to
these assistants. However, supervised slot fillers
(Young, 2002; Bellegarda, 2014) require abundant
labeled training data, more so with deep learning
enhancing accuracy at the cost of being data inten-
sive (Mesnil et al., 2015; Kurata et al., 2016).

Asterisk (*) denotes equal contribution. Research conducted
when all authors were at Google Research.

Figure 1: Misaligned schemas for flight booking from
kayak.com (top) and southwest.com (bottom):
slot name depart in the two schemas refers to depar-
ture date and departure city respectively, hence models
trained on one schema may falter on the other.

Two key challenges with scaling slot fillers
to new domains are adaptation and misaligned
schemas (here, slot name mismatches). Extent of
supervision may vary across domains: there may
be ample data for Flights but none for Hotels, re-
quiring models to leverage the former to learn se-
mantics of reusable slots (e.g. time, destination).
In addition, schemas for overlapping domains may
be incompatible by way of using different names
for the same slot or the same name for different
slots. This is common with web form filling: two
sites in the same domain may have misaligned
schemas, as in Figure 1, precluding approaches
that rely on schema alignment.

Zero-shot slot filling, typically, either relies on
slot names to bootstrap to new slots, which may be
insufficient for cases like in Figure 1, or uses hard-
to-build domain ontologies/gazetteers. We counter
that by supplying a small number of example val-
ues in addition to the slot description to condition
the slot filler. This avoids negative transfer from
misaligned schemas and further helps identify un-
seen slots while retaining cross-domain transfer
ability. Besides, example values for slots can ei-
ther be crawled easily from existing web forms or
specified along with the slots, with little overhead.

Given as few as 2 example values per slot, our
model surpasses prior work in the zero/few-shot
setting on the SNIPS dataset by an absolute 2.9%
slot F1, and is robust to misaligned schemas, as ex-
periments on another multi-domain dataset show.

kayak.com
southwest.com


5485

Figure 2: Illustration of the overall model with all inputs and outputs shown.

2 Related Work
Settings with resource-poor domains are typically
addressed by adapting from resource-rich domains
(Blitzer et al., 2006; Pan et al., 2010; Chen et al.,
2018; Guo et al., 2018; Shah et al., 2018). To this
end approaches such as domain adversarial learn-
ing (Liu and Lane, 2017) and multi-task learning
(Jaech et al., 2016; Goyal et al., 2018; Siddhant
et al., 2018) have been adapted to SLU and related
tasks (Henderson et al., 2014). Work targeting do-
main adaptation specifically for this area includes,
modeling slots as hierarchical concepts (Zhu and
Yu, 2018) and using ensembles of models trained
on data-rich domains (Gašić et al., 2015; Kim
et al., 2017; Jha et al., 2018).

The availability of task descriptions has made
zero-shot learning (Norouzi et al., 2013; Socher
et al., 2013) popular. In particular, work on zero-
shot utterance intent detection has relied on varied
resources such as click logs (Dauphin et al., 2013)
and manually defined domain ontologies (Kumar
et al., 2017), as well as models such as deep struc-
tured semantic models (Chen et al., 2016) and cap-
sule networks (Xia et al., 2018). Zero-shot seman-
tic parsing is addressed in Krishnamurthy et al.
(2017) and Herzig and Berant (2018) and specifi-
cally for SLU utilizing external resources such as
label ontologies in Ferreira et al. (2015a,b) and
handwritten intent attributes in Yazdani and Hen-
derson (2015); Chen et al. (2015). Our work is
closest in spirit to Bapna et al. (2017) and Lee
and Jha (2018), who employ textual slot descrip-
tions to scale to unseen intents/slots. Since slots
tend to take semantically similar values across ut-
terances, we augment our model with example
values, which are easier for developers to define
than manual alignments across schemas (Li et al.,
2011).

3 Problem Statement

We frame our conditional sequence tagging task as
follows: given a user utterance with T tokens and
a slot type, we predict inside-outside-begin (IOB)
tags {y1, y2 . . . yT } using 3-way classification per
token, based on if and where the provided slot type
occurs in the utterance. Figure 3 shows IOB tag
sequences for one positive (slot service, present in
the utterance) and one negative (slot timeRange,
not present in the utterance) instance each.

service O O O B I
↑ ↑ ↑ ↑ ↑

Play Imagine on iHeart Radio
↓ ↓ ↓ ↓ ↓

timeRange O O O O O
Figure 3: Example semantic frame with IOB slot an-
notations for a positive and a negative instance.

4 Model Architecture

Figure 2 illustrates our model architecture where
a user utterance is tagged for a provided slot. To
represent the input slot, along with a textual slot
description as in Bapna et al. (2017), we supply a
small set of example values for this slot, to pro-
vide a more complete semantic representation.1

Detailed descriptions of each component follow.

Inputs: We use as input dwc-dimensional embed-
dings for 3 input types: T user utterance tokens
{ui ∈ Rdwc , 1≤i≤T}, S input slot description to-
kens {di ∈ Rdwc , 1≤i≤S}, andK example values
for the slot, with the Nk token embedding for the
kth example denoted by {eki ∈ Rdwc , 1≤i≤Nk}.
Utterance encoder: We encode the user utterance
using a den-dimensional bidirectional GRU recur-
1Note that the slot description is still needed since example
slot values alone cannot distinguish slots which take seman-
tically similar values (e.g. departDate vs returnDate).



5486

Intent Slot Names (Training and Evaluation)
AddToPlaylist artist, entityName, musicItem, playlist, playlistOwner
BookRestaurant city, cuisine, partySizeNumber, restaurantName, restaurantType, servedDish, spatialRelation, state. . .
GetWeather city, conditionDescription, country, geographicPoi, spatialRelation, state, timeRange. . .
PlayMusic album, artist, genre, musicItem, playlist, service, sort, track, year
RateBook bestRating, objectName, objectPartOfSeriesType, objectSelect, objectType, ratingUnit, ratingValue
SearchCreativeWork objectName, objectType
FindScreeningEvent locationName, movieName, movieType, objectLocationType, objectType, spatialRelation, timeRange

Intent Training Slot Names Evaluation Slot Names
BookBus from, to, leaving, returning, travelers,

tripType, departureTime
from, to, departOn, addReturnTrip, tripType, promoCode,
discountOptions, children, adults, seniors

FindFlights from, to, depart, return, cabinClass, flightType depart, arrive, departDate, returnDate, searchType, promoCode
BookRoom where, checkIn, checkOut, guests, homeType,

propertyType, priceRange, amenities
location, hotelName, checkIn, checkOut, rooms, roomType,
pricePerNight, rating, amenities

Table 1: Intents and training/evaluation slot schemas for SNIPS (top) and XSchema (bottom) datasets.

rent neural network (RNN) (Chung et al., 2014).
We denote the set of per-token RNN hidden states
by H = {hi ∈ Rden , 1≤i≤T}, which are used as
contextual utterance token encodings.

H = BiGRU({ui, 1≤i≤T}) (1)

Slot description encoder: We obtain an encoding
ds ∈ Rdwc of the slot description by mean-pooling
the embeddings for the S slot description tokens.

ds =
1

S

S∑
i=1

di (2)

Slot example encoder: We first obtain encod-
ings {exk ∈ Rdwc , 1≤k≤K} for each slot example
value by mean-pooling the Nk token embeddings.
Then, we compute an attention weighted encod-
ing of all K slot examples {eai ∈ Rdwc , i≤1≤T}
for each utterance token, with the utterance token
encoding as attention context. Here, αxi ∈ RK de-
notes attention weights over all K slot examples
corresponding to the ith utterance token, obtained
with general cosine similarity (Luong et al., 2015).

exk =
1

Nk

Nk∑
i=1

eki , 1≤k≤K (3)

αxi = softmax({hiWaexk ∀k}), 1≤i≤T (4)

eai =

K∑
k=1

αxik × e
x
k (5)

Tagger: We feed the concatenated utterance,
slot description and example encodings to a den-
dimensional bidirectional LSTM. The output hid-
den states X = {xi ∈ Rden , 1≤i≤T} are used for
a 3-way IOB tag classification per token.

X = BiLSTM({hi ⊕ ds ⊕ eai , 1≤i≤T}) (6)
yi = softmax(Wtxi + bt), 1≤i≤T (7)

Parameters: We use fixed dw=128-dim pre-
trained word embeddings2 for all tokens. We also
train per-character embeddings, fed to a 2-layer
convolutional neural network (Kim, 2014) to get
a dc=32-dim token embedding. For all inputs, the
dwc=160-dim final embedding is the concatena-
tion of the word and char-CNN embeddings. The
RNN encoders have hidden state size den=128.
All trainable weights are shared across intents and
slots. The model relies largely on fixed word em-
beddings to generalize to new intents/slots.

5 Datasets and Experiments
In this section we describe the datasets used for
evaluation, baselines compared against, and more
details on the experimental setup.

Datasets: In order to evaluate cross-domain
transfer learning ability and robustness to mis-
aligned schemas, respectively, we use the follow-
ing two SLU datasets to evaluate all models.

• SNIPS: This is a public SLU dataset (Coucke
et al., 2018) of crowdsourced user utterances
with 39 slots across 7 intents and ∼2000 train-
ing instances per intent. Since 11 of these slots
are shared (see Table 1), we use this dataset to
evaluate cross-domain transfer learning.

• XSchema: This is an in-house crowdsourced
dataset with 3 intents (500 training instances
each). Training and evaluation utterances are
annotated with different schemas (Table 1) from
real web forms to simulate misaligned schemas.

Baselines: We compare with two strong zero-
shot baselines: Zero-shot Adaptive Transfer
(ZAT) (Lee and Jha, 2018) and Concept Tagger

2https://tfhub.dev/google/nnlm-en-dim128/1



5487

Target training e.g. 0 50
Intent ↓ Model → CT ZAT +2Ex LSTM CT ZAT +10Ex
AddToPlaylist 53.3 46.8 55.2 59.4 74.4 73.4 76.2*
BookRestaurant 45.7 46.6 48.6* 57.5 63.8 63.5 63.6
GetWeather 63.5 60.7 66.0* 75.7 72.1 71.1 77.5*
PlayMusic 28.7 30.1 33.8* 49.3 56.4 56.0 58.8
RateBook 24.5 31.0 28.5 85.1* 82.9 83.8 82.2
SearchCreativeWork 24.7 26.7 26.2 52.9 62.8 63.7 65.9
FindScreeningEvent 23.7 19.7 25.5* 60.8 64.9 64.6 67.0*
Average 37.7 37.4 40.6* 62.8 68.2 68.0 70.1*

Table 2: Slot F1 scores for baselines (CT, ZAT, LSTM)
and our best models (with 2 slot values for zero-shot
and 10 values for 50 train instances) on SNIPS. Rows
represent different train-test splits, defined in Section
5. Our model consistently outperforms the baselines,
with ∼3% absolute gain in the zero-shot setting.3

(CT) (Bapna et al., 2017), in addition to a 2-
layer multi-domain bidirectional LSTM baseline
(Hakkani-Tür et al., 2016) for non-zero-shot
setups. ZAT and CT condition slot filling only on
slot descriptions, with ZAT adding slot description
attention, char embeddings and CRFs on top of
CT. Since labor-intensive long text descriptions
are unavailable for our data, we use tokenized slot
names in their place, as in Bapna et al. (2017).

Experimental Setup: We use SNIPS to test
zero/few-shot transfer: for each target intent I , we
train on all ∼2000 training instances from intents
other than I , and varying amounts of training data
for I , evaluating exclusively on I . For XSchema,
we train and evaluate on a single intent, specifi-
cally evaluating cross-schema performance.

We sample positive and negative instances (Fig-
ure 3) in a ratio of 1:3. Slot values input dur-
ing training and evaluation are randomly picked
from values taken by the input slot in the rele-
vant domain’s training set, excluding ones that are
also present in the evaluation set. In practice, it
is usually easy to obtain such example values for
each slot either using automated methods (such as
crawling from existing web forms) or have them
be provided as part of the slot definition, with neg-
ligible extra effort.

To improve performance on out-of-vocabulary
entity names, we randomly replace slot value to-
kens in utterances and slot examples with a special
token, and raise the replacement rate linearly from
0 to 0.3 during training (Rastogi et al., 2018).

The final cross-entropy loss, averaged over
all utterance tokens, is optimized using ADAM
(Kingma and Ba, 2014) for 150K training steps.

Target training e.g. 0 50
Intent ↓ Model → CT ZAT +10Ex CT ZAT +10Ex
BookBus 70.9 70.1 74.1* 86.8 85.2 89.4
FindFlights 43.5 44.8 53.2* 62.3 59.7 69.2*
BookRoom 23.6 23.4 33.0* 49.7 52.1 58.7*

Table 3: Slot F1 scores on the XSchema dataset4. We
train and evaluate on a single intent, but with different
schemas, thus precluding the LSTM baseline.

Slot F1 score (Sang and Buchholz, 2000) is our
final metric, reported after 3-fold cross-validation.

6 Results

For the SNIPS dataset, Table 2 shows slot F1
scores for our model trained with randomly-
picked slot value examples in addition to slot de-
scriptions vis-à-vis the baselines. Our best model
consistently betters the zero-shot baselines CT and
ZAT, which use only slot descriptions, overall and
individually for 5 of 7 intents. The average gain
over CT and ZAT is ∼3% in the zero-shot case.
In the low-data setting, all zero-shot models gain
≥5% over the multi-domain LSTM baseline (with
the 10-example-added model further gaining∼2%
on CT/ZAT). All models are comparable when all
target data is used for training, with F1 scores of
87.8% for the LSTM, and 86.9% and 87.2% for
CT and our model with 10 examples respectively.

Table 3 shows slot F1 scores for XSchema data.
Our model trained with 10 example values is ro-
bust to varying schemas, with gains of ∼3% on
BookBus, and ∼10% on FindFlights and Book-
Room in the zero-shot setting.

For both datasets, as more training data for the
target domain is added, the baselines and our ap-
proach perform more similarly. For instance, our
approach improves upon the baseline by ∼0.2%
on SNIPS when 2000 training examples are
used for the target domain, affirming that adding
example values does not hurt in the regular setting.

Results by slot type: Example values help the
most with limited-vocabulary slots not encoun-
tered during training: our approach gains ≥20%
on slots such as conditionDescription, bestRating,
service (present in intents GetWeather, RateBook,
PlayMusic respectively). Intents PlayMusic and
GetWeather, with several limited-vocabulary slots,
see significant gains in the zero-shot setting.

3Asterisk (*) indicates a statistically significant gain over the
second-best model as per McNemar’s test (p < 0.05).



5488

Figure 4: Variation of overall slot F1 score with number
of slot value examples input to the model, with varying
number of target intent training instances for SNIPS.

For compositional open-vocabulary slots (city,
cuisine), our model also compares favorably - e.g.
53% vs 27% slot F1 for unseen slot cuisine (in-
tent BookRestaurant) - since the semantic similar-
ity between entity and possible values is easier to
capture than between entity and description.

Slots with open, non-compositional vocabular-
ies (such as objectName, entityName) are hard to
infer from slot descriptions or examples, even if
these are seen during training but in other contexts,
since utterance patterns are lost across intents. All
models are within 5% slot F1 of each other for
such slots. This is also observed for unseen open-
vocabulary slots in the XSchema dataset (such as
promoCode and hotelName).

For XSchema experiments, our model does
significantly better on slots which are confusing
across schemas (evidenced by gains of >20% on
depart in FindFlights, roomType in BookRoom).

Effect of number of examples: Figure 4 shows
the number of slot value examples used versus
performance on SNIPS. For the zero-shot case,
using 2 example values per slot works best,
possibly due to the model attending to perfect
matches during training, impeding generalization
when more example values are used. In the
few-shot and normal-data settings, using more
example values helps accuracy, but the gain drops
with more target training data. For XSchema, in
contrast, adding more example values consistently
improves performance, possibly due to more slot
name mistmatches in the dataset. We avoid using
over 10 example values, in contrast to prior work
(Krishnamurthy et al., 2017; Naik et al., 2018)
since it may be infeasible to easily provide or
extract a large number of values for unseen slots.

Ablation: Slot replacement offsets overfitting in
our model, yielding gains of 2−5% for all models
incl. baselines. Fine-tuning the pretrained word
embeddings and removing character embeddings
yielded losses of ∼1%. We tried more complex
phrase embeddings for the slot description and ex-
ample values, but since both occur as short phrases
in our data, a bag-of-words approach worked well.

Comparison with string matching: A train-
ing and evaluation setup including example val-
ues for slots may lend itself well to adding string
matching-based slot fillers for suitable slots (for
example, slots taking numeric values or having a
small set of possible values). However, this is not
applicable to our exact setting since we ensure that
the slot values to be tagged during evaluation are
never provided as input during training or evalua-
tion. In addition, it is difficult to distinguish two
slots with the same expected semantic type using
such an approach, such as for slots ratingValue and
bestRating from SNIPS intent RateBook.

7 Conclusions and Future Work

We show that extending zero-shot slot filling mod-
els to use a small number of easily obtained exam-
ple values for slots, in addition to textual slot de-
scriptions, is a scalable solution for zero/few-shot
slot filling tasks on similar and heterogenous do-
mains, while resistant to misaligned overlapping
schemas. Our approach surpasses prior state-of-
the-art models on two multi-domain datasets.

The approach can, however, be inefficient for
intents with many slots, as well as potentially
sacrificing accuracy in case of overlapping pre-
dictions. Jointly modeling multiple slots for the
task is an interesting future direction. Another di-
rection would be to incorporate zero-shot entity
recognition (Guerini et al., 2018), thus eliminating
the need for example values during inference.

In addition, since high-quality datasets for
downstream tasks in dialogue systems (such as di-
alogue state tracking and dialogue management)
are even more scarce, exploring zero-shot learn-
ing approaches to these problems is of immense
value in building generalizable dialogue systems.

Acknowledgements

We would like to thank Ankur Bapna for the in-
sightful discussions that have notably shaped this
work. We would also like to thank the Deep Dia-
logue team at Google Research for their support.



5489

References
Ankur Bapna, Gökhan Tür, Dilek Hakkani-Tür, and

Larry P. Heck. 2017. Towards zero-shot frame
semantic parsing for domain scaling. In Inter-
speech 2017, 18th Annual Conference of the Inter-
national Speech Communication Association, Stock-
holm, Sweden, August 20-24, 2017.

Jerome R Bellegarda. 2014. Spoken language under-
standing for natural interaction: The siri experience.
In Natural Interaction with Robots, Knowbots and
Smartphones, pages 3–14. Springer.

John Blitzer, Ryan McDonald, and Fernando Pereira.
2006. Domain adaptation with structural correspon-
dence learning. In Proceedings of the 2006 confer-
ence on empirical methods in natural language pro-
cessing, pages 120–128. Association for Computa-
tional Linguistics.

Xilun Chen, Yu Sun, Ben Athiwaratkun, Claire Cardie,
and Kilian Weinberger. 2018. Adversarial deep av-
eraging networks for cross-lingual sentiment classi-
fication. Transactions of the Association for Com-
putational Linguistics, 6:557–570.

Yun-Nung Chen, Dilek Hakkani-Tür, and Xiaodong
He. 2016. Zero-shot learning of intent embed-
dings for expansion by convolutional deep struc-
tured semantic models. In Acoustics, Speech and
Signal Processing (ICASSP), 2016 IEEE Interna-
tional Conference on, pages 6045–6049. IEEE.

Yun-Nung Chen, William Yang Wang, Anatole Gersh-
man, and Alexander Rudnicky. 2015. Matrix fac-
torization with knowledge graph propagation for un-
supervised spoken language understanding. In Pro-
ceedings of the 53rd Annual Meeting of the Associ-
ation for Computational Linguistics and the 7th In-
ternational Joint Conference on Natural Language
Processing (Volume 1: Long Papers), volume 1,
pages 483–494.

Junyoung Chung, Caglar Gulcehre, KyungHyun Cho,
and Yoshua Bengio. 2014. Empirical evaluation of
gated recurrent neural networks on sequence model-
ing. arXiv preprint arXiv:1412.3555.

Alice Coucke, Alaa Saade, Adrien Ball, Théodore
Bluche, Alexandre Caulier, David Leroy, Clément
Doumouro, Thibault Gisselbrecht, Francesco Calta-
girone, Thibaut Lavril, et al. 2018. Snips voice plat-
form: an embedded spoken language understanding
system for private-by-design voice interfaces. arXiv
preprint arXiv:1805.10190.

Yann N Dauphin, Gokhan Tur, Dilek Hakkani-Tur,
and Larry Heck. 2013. Zero-shot learning for
semantic utterance classification. arXiv preprint
arXiv:1401.0509.

Emmanuel Ferreira, Bassam Jabaian, and Fabrice
Lefevre. 2015a. Online adaptative zero-shot learn-
ing spoken language understanding using word-
embedding. In 2015 IEEE International Confer-

ence on Acoustics, Speech and Signal Processing
(ICASSP), pages 5321–5325. IEEE.

Emmanuel Ferreira, Bassam Jabaian, and Fabrice
Lefevre. 2015b. Zero-shot semantic parser for spo-
ken language understanding. In Sixteenth Annual
Conference of the International Speech Communi-
cation Association.

M Gašić, N Mrkšić, Pei-hao Su, David Vandyke,
Tsung-Hsien Wen, and Steve Young. 2015. Pol-
icy committee for adaptation in multi-domain spo-
ken dialogue systems. In 2015 IEEE Workshop on
Automatic Speech Recognition and Understanding
(ASRU), pages 806–812. IEEE.

Anuj Goyal, Angeliki Metallinou, and Spyros Mat-
soukas. 2018. Fast and scalable expansion of natural
language understanding functionality for intelligent
agents. arXiv preprint arXiv:1805.01542.

Marco Guerini, Simone Magnolini, Vevake Balara-
man, and Bernardo Magnini. 2018. Toward zero-
shot entity recognition in task-oriented conversa-
tional agents. In Proceedings of the 19th Annual
SIGdial Meeting on Discourse and Dialogue, pages
317–326.

Jiang Guo, Darsh Shah, and Regina Barzilay. 2018.
Multi-source domain adaptation with mixture of ex-
perts. In Proceedings of the 2018 Conference on
Empirical Methods in Natural Language Process-
ing, pages 4694–4703, Brussels, Belgium. Associ-
ation for Computational Linguistics.

D. Hakkani-Tür, G. Tur, A. Celikyilmaz, Y.-N. Chen,
J. Gao, L. Deng, and Y.-Y. Wang. 2016. Multi-
domain joint semantic frame parsing using bi-
directional rnn-lstm. In Proceedings of Interspeech.

Matthew Henderson, Blaise Thomson, and Jason D
Williams. 2014. The third dialog state tracking chal-
lenge. In 2014 IEEE Spoken Language Technology
Workshop (SLT), pages 324–329. IEEE.

Jonathan Herzig and Jonathan Berant. 2018. Decou-
pling structure and lexicon for zero-shot semantic
parsing. In Proceedings of the 2018 Conference on
Empirical Methods in Natural Language Process-
ing, pages 1619–1629.

A. Jaech, L. Heck, and M.Ostendorf. 2016. Domain
adaptation of recurrent neural networks for natural
language understanding. In Proceedings of Inter-
speech.

Rahul Jha, Alex Marin, Suvamsh Shivaprasad, and
Imed Zitouni. 2018. Bag of experts architectures
for model reuse in conversational language under-
standing. In Proceedings of the 2018 Conference
of the North American Chapter of the Association
for Computational Linguistics: Human Language
Technologies, Volume 3 (Industry Papers), volume 3,
pages 153–161.

http://www.isca-speech.org/archive/Interspeech_2017/abstracts/0518.html
http://www.isca-speech.org/archive/Interspeech_2017/abstracts/0518.html
https://doi.org/10.1162/tacl_a_00039
https://doi.org/10.1162/tacl_a_00039
https://doi.org/10.1162/tacl_a_00039
https://www.aclweb.org/anthology/D18-1498
https://www.aclweb.org/anthology/D18-1498


5490

Yoon Kim. 2014. Convolutional neural networks for
sentence classification. In Proceedings of the 2014
Conference on Empirical Methods in Natural Lan-
guage Processing (EMNLP), pages 1746–1751. As-
sociation for Computational Linguistics.

Young-Bum Kim, Karl Stratos, and Dongchan Kim.
2017. Domain attention with an ensemble of ex-
perts. In Proceedings of the 55th Annual Meeting of
the Association for Computational Linguistics (Vol-
ume 1: Long Papers), volume 1, pages 643–653.

Diederik P Kingma and Jimmy Ba. 2014. Adam: A
method for stochastic optimization. arXiv preprint
arXiv:1412.6980.

Jayant Krishnamurthy, Pradeep Dasigi, and Matt Gard-
ner. 2017. Neural semantic parsing with type con-
straints for semi-structured tables. In Proceedings of
the 2017 Conference on Empirical Methods in Nat-
ural Language Processing, pages 1516–1526.

Anjishnu Kumar, Pavankumar Reddy Muddireddy,
Markus Dreyer, and Björn Hoffmeister. 2017. Zero-
shot learning across heterogeneous overlapping do-
mains. In Interspeech 2017, 18th Annual Confer-
ence of the International Speech Communication As-
sociation, Stockholm, Sweden, August 20-24, 2017,
pages 2914–2918.

Gakuto Kurata, Bing Xiang, Bowen Zhou, and Mo Yu.
2016. Leveraging sentence-level information with
encoder lstm for semantic slot filling. arXiv preprint
arXiv:1601.01530.

Sungjin Lee and Rahul Jha. 2018. Zero-shot adaptive
transfer for conversational language understanding.
arXiv preprint arXiv:1808.10059.

Xiao Li, Ye-Yi Wang, and Gokhan Tur. 2011. Multi-
task learning for spoken language understanding
with shared slots. In Twelfth Annual Conference
of the International Speech Communication Associ-
ation.

Bing Liu and Ian Lane. 2017. Multi-domain adversar-
ial learning for slot filling in spoken language under-
standing. arXiv preprint arXiv:1711.11310.

Thang Luong, Hieu Pham, and Christopher D Man-
ning. 2015. Effective approaches to attention-based
neural machine translation. In Proceedings of the
2015 Conference on Empirical Methods in Natural
Language Processing, pages 1412–1421.

Grégoire Mesnil, Yann Dauphin, Kaisheng Yao,
Yoshua Bengio, Li Deng, Dilek Hakkani-Tur, Xi-
aodong He, Larry Heck, Gokhan Tur, Dong Yu, et al.
2015. Using recurrent neural networks for slot fill-
ing in spoken language understanding. IEEE/ACM
Transactions on Audio, Speech, and Language Pro-
cessing, 23(3):530–539.

Chetan Naik, Arpit Gupta, Hancheng Ge, Mathias
Lambert, and Ruhi Sarikaya. 2018. Contextual slot
carryover for disparate schemas. Proc. Interspeech
2018, pages 596–600.

Mohammad Norouzi, Tomas Mikolov, Samy Bengio,
Yoram Singer, Jonathon Shlens, Andrea Frome,
Greg S Corrado, and Jeffrey Dean. 2013. Zero-shot
learning by convex combination of semantic embed-
dings. arXiv preprint arXiv:1312.5650.

Sinno Jialin Pan, Xiaochuan Ni, Jian-Tao Sun, Qiang
Yang, and Zheng Chen. 2010. Cross-domain senti-
ment classification via spectral feature alignment. In
Proceedings of the 19th international conference on
World wide web, pages 751–760. ACM.

Abhinav Rastogi, Raghav Gupta, and Dilek Hakkani-
Tur. 2018. Multi-task learning for joint language
understanding and dialogue state tracking. In Pro-
ceedings of the 19th Annual SIGdial Meeting on Dis-
course and Dialogue, pages 376–384.

Erik F Tjong Kim Sang and Sabine Buchholz. 2000.
Introduction to the conll-2000 shared task: Chunk-
ing. In Proceedings of the 2nd workshop on Learn-
ing language in logic and the 4th conference on
Computational natural language learning-Volume 7,
pages 127–132. Association for Computational Lin-
guistics.

Darsh Shah, Tao Lei, Alessandro Moschitti, Salva-
tore Romeo, and Preslav Nakov. 2018. Adversar-
ial domain adaptation for duplicate question detec-
tion. In Proceedings of the 2018 Conference on
Empirical Methods in Natural Language Process-
ing, pages 1056–1063, Brussels, Belgium. Associ-
ation for Computational Linguistics.

Aditya Siddhant, Anuj Goyal, and Angeliki Metalli-
nou. 2018. Unsupervised transfer learning for spo-
ken language understanding in intelligent agents.
arXiv preprint arXiv:1811.05370.

Richard Socher, Milind Ganjoo, Christopher D Man-
ning, and Andrew Ng. 2013. Zero-shot learning
through cross-modal transfer. In Advances in neu-
ral information processing systems, pages 935–943.

Congying Xia, Chenwei Zhang, Xiaohui Yan,
Yi Chang, and Philip Yu. 2018. Zero-shot user
intent detection via capsule neural networks. In
Proceedings of the 2018 Conference on Empir-
ical Methods in Natural Language Processing,
pages 3090–3099. Association for Computational
Linguistics.

Majid Yazdani and James Henderson. 2015. A model
of zero-shot learning of spoken language under-
standing. In Proceedings of the 2015 Conference on
Empirical Methods in Natural Language Process-
ing, pages 244–249. Association for Computational
Linguistics.

Steve Young. 2002. Talking to machines (statistically
speaking). In Seventh International Conference on
Spoken Language Processing.

Su Zhu and Kai Yu. 2018. Concept transfer learning for
adaptive language understanding. In Proceedings of
the 19th Annual SIGdial Meeting on Discourse and
Dialogue, pages 391–399.

https://doi.org/10.3115/v1/D14-1181
https://doi.org/10.3115/v1/D14-1181
http://www.isca-speech.org/archive/Interspeech_2017/abstracts/0516.html
http://www.isca-speech.org/archive/Interspeech_2017/abstracts/0516.html
http://www.isca-speech.org/archive/Interspeech_2017/abstracts/0516.html
https://www.aclweb.org/anthology/D18-1131
https://www.aclweb.org/anthology/D18-1131
https://www.aclweb.org/anthology/D18-1131
http://aclweb.org/anthology/D18-1348
http://aclweb.org/anthology/D18-1348
https://doi.org/10.18653/v1/D15-1027
https://doi.org/10.18653/v1/D15-1027
https://doi.org/10.18653/v1/D15-1027

