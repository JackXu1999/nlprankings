



















































Pragmatically Informative Text Generation


Proceedings of NAACL-HLT 2019, pages 4060–4067
Minneapolis, Minnesota, June 2 - June 7, 2019. c©2019 Association for Computational Linguistics

4060

Pragmatically Informative Text Generation

Sheng Shen† Daniel Fried† Jacob Andreas‡ Dan Klein†
†Computer Science Division, UC Berkeley

‡Computer Science and Artificial Intelligence Laboratory, MIT
{sheng.s,dfried,klein}@berkeley.edu, jda@mit.edu

Abstract

We improve the informativeness of models for
conditional text generation using techniques
from computational pragmatics. These tech-
niques formulate language production as a
game between speakers and listeners, in which
a speaker should generate output text that a lis-
tener can use to correctly identify the original
input that the text describes. While such ap-
proaches are widely used in cognitive science
and grounded language learning, they have re-
ceived less attention for more standard lan-
guage generation tasks. We consider two prag-
matic modeling methods for text generation:
one where pragmatics is imposed by informa-
tion preservation, and another where pragmat-
ics is imposed by explicit modeling of distrac-
tors. We find that these methods improve the
performance of strong existing systems for ab-
stractive summarization and generation from
structured meaning representations.

1 Introduction

Computational approaches to pragmatics cast lan-
guage generation and interpretation as game-
theoretic or Bayesian inference procedures (Gol-
land et al., 2010; Frank and Goodman, 2012).
While such approaches are capable of modeling
a variety of pragmatic phenomena, their main ap-
plication in natural language processing has been
to improve the informativeness of generated text
in grounded language learning problems (Monroe
et al., 2018). In this paper, we show that prag-
matic reasoning can be similarly used to improve
performance in more traditional language genera-
tion tasks like generation from structured meaning
representations (Figure 1) and summarization.

Our work builds on a line of learned Rational
Speech Acts (RSA) models (Monroe and Potts,
2015; Andreas and Klein, 2016), in which gen-
erated strings are selected to optimize the behav-

Input meaning representation (i):
NAME[FITZBILLIES], EATTYPE[COFFEE SHOP], FOOD[ENGLISH],
PRICERANGE[CHEAP], CUSTOMERRATING[5 OUT OF 5],
AREA[RIVERSIDE], FAMILYFRIENDLY[YES]

Human-written
A cheap coffee shop in riverside with a 5 out of 5 customer rating is
Fitzbillies. Fitzbillies is family friendly and serves English food.

Base sequence-to-sequence model (S0)
Fitzbillies is a family friendly coffee shop located near the river.

Distractor-based pragmatic system (SD1 )
Fitzbillies is a family friendly coffee shop that serves English food. It is
located in riverside area. It has a customer rating of 5 out of 5 and is cheap.

Reconstructor-based pragmatic system (SR1 )
Fitzbillies is a family friendly coffee shop that serves cheap English food in
the riverside area. It has a customer rating of 5 out of 5.

Figure 1: Example outputs of our systems on the E2E
generation task. While a base sequence-to-sequence
model (S0, Sec. 2) fails to describe all attributes in
the input meaning representation, both of our prag-
matic systems (SR1 , Sec. 3.1 and S

D
1 , Sec. 3.2) and the

human-written reference do.

ior of an embedded listener model. The canoni-
cal presentation of the RSA framework (Frank and
Goodman, 2012) is grounded in reference resolu-
tion: models of speakers attempt to describe ref-
erents in the presence of distractors, and models
of listeners attempt to resolve descriptors to ref-
erents. Recent work has extended these models to
more complex groundings, including images (Mao
et al., 2015) and trajectories (Fried et al., 2018).
The techniques used in these settings are similar,
and the primary intuition of the RSA framework is
preserved: from the speaker’s perspective, a good
description is one that picks out, as discrimina-
tively as possible, the content the speaker intends
for the listener to identify.

Outside of grounding, cognitive modeling
(Frank et al., 2009), and targeted analysis of lin-
guistic phenomena (Orita et al., 2015), rational
speech acts models have seen limited application
in the natural language processing literature. In
this work we show that they can be extended



4061

to a distinct class of language generation prob-
lems that use as referents structured descriptions
of lingustic content, or other natural language
texts. In accordance with the maxim of quan-
tity (Grice, 1970) or the Q-principle (Horn, 1984),
pragmatic approaches naturally correct underin-
formativeness problems observed in state-of-the-
art language generation systems (S0 in Figure 1).

We present experiments on two language gener-
ation tasks: generation from meaning representa-
tions (Novikova et al., 2017) and summarization.
For each task, we evaluate two models of pragmat-
ics: the reconstructor-based model of Fried et al.
(2018) and the distractor-based model of Cohn-
Gordon et al. (2018). Both models improve per-
formance on both tasks, increasing ROUGE scores
by 0.2–0.5 points on the CNN/Daily Mail ab-
stractive summarization dataset and BLEU scores
by 2 points on the End-to-End (E2E) generation
dataset, obtaining new state-of-the-art results.

2 Tasks

We formulate a conditional generation task as tak-
ing an input i from a space of possible inputs I
(e.g., input sentences for abstractive summariza-
tion; meaning representations for structured gen-
eration) and producing an output o as a sequence
of tokens (o1, . . . , oT ). We build our pragmatic
approaches on top of learned base speaker mod-
els S0, which produce a probability distribution
S0(o | i) over output text for a given input. We fo-
cus on two conditional generation tasks where the
information in the input context should largely be
preserved in the output text, and apply the prag-
matic procedures outlined in Sec. 3 to each task.
For these S0 models we use systems from past
work that are strong, but may still be underinfor-
mative relative to human reference outputs (e.g.,
Figure 1).

Meaning Representations Our first task is gen-
eration from structured meaning representations
(MRs) containing attribute-value pairs (Novikova
et al., 2017). An example is shown in Figure 1,
where systems must generate a description of the
restaurant with the specified attributes. We ap-
ply pragmatics to encourage output strings from
which the input MR can be identified. For our S0
model, we use a publicly-released neural gener-
ation system (Puzikov and Gurevych, 2018) that
achieves comparable performance to the best pub-
lished results in Dušek et al. (2018).

Abstractive Summarization Our second task is
multi-sentence document summarization. There
is a vast amount of past work on summariza-
tion (Nenkova and McKeown, 2011); recent neu-
ral models have used large datasets (e.g., Hermann
et al. (2015)) to train models in both the extractive
(Cheng and Lapata, 2016; Nallapati et al., 2017)
and abstractive (Rush et al., 2015; See et al., 2017)
settings. Among these works, we build on the re-
cent abstractive neural summarization system of
Chen and Bansal (2018). First, this system uses a
sentence-level extractive model RNN-EXT to iden-
tify a sequence of salient sentences i(1), . . . i(P ) in
each source document. Second, the system uses
an abstractive model ABS to rewrite each i(p) into
an output o(p), which are then concatenated to pro-
duce the final summary. We rely on the fixed RNN-
EXT model to extract sentences as inputs in our
pragmatic procedure, using ABS as our S0 model
and applying pragmatics to the i(p) → o(p) ab-
stractive step.

3 Pragmatic Models

To produce informative outputs, we consider prag-
matic methods that extend the base speaker mod-
els, S0, using listener models, L, which produce a
distribution L(i | o) over possible inputs given an
output. Listener models are used to derive prag-
matic speakers, S1(o | i), which produce output
that has a high probability of making a listener
model L identify the correct input. There are a
large space of possible choices for designing L
and deriving S1; we follow two lines of past work
which we categorize as reconstructor-based and
distractor-based. We tailor each of these prag-
matic methods to both our two tasks by develop-
ing reconstructor models and methods of choosing
distractors.

3.1 Reconstructor-Based Pragmatics

Pragmatic approaches in this category (Dušek and
Jurčı́ček, 2016; Fried et al., 2018) rely on a recon-
structor listener model LR defined independently
of the speaker. This listener model produces a dis-
tribution LR(i | o) over all possible input contexts
i ∈ I, given an output description o. We use
sequence-to-sequence or structured classification
models for LR (described below), and train these
models on the same data used to supervise the S0
models.

The listener model and the base speaker model



4062

together define a pragmatic speaker, with output
score given by:

SR1 (o | i) = LR(i | o)λ · S0(o | i)1−λ (1)

where λ is a rationality parameter that controls
how much the model optimizes for discriminative
outputs (see Monroe et al. (2017) and Fried et al.
(2018) for a discussion). We select an output text
sequence o for a given input i by choosing the
highest scoring output under Eq. 1 from a set of
candidates obtained by beam search in S0(· | i).

Meaning Representations We construct LR for
the meaning representation generation task as a
multi-task, multi-class classifier, defining a dis-
tribution over possible values for each attribute.
Each MR attribute has its own prediction layer
and attention-based aggregation layer, which con-
ditions on a basic encoding of o shared across all
attributes. See Appendix A.1 for architecture de-
tails. We then define LR(i | o) as the joint prob-
ability of predicting all input MR attributes in i
from o.

Summarization To construct LR for summa-
rization, we train an ABS model (of the type we
use for S0, Chen and Bansal (2018)) but in reverse,
i.e., taking as input a sentence in the summary and
producing a sentence in the source document. We
train LR on the same heuristically-extracted and
aligned source document sentences used to train
S0 (Chen and Bansal, 2018).

3.2 Distractor-Based Pragmatics
Pragmatic approaches in this category (Frank and
Goodman, 2012; Andreas and Klein, 2016; Vedan-
tam et al., 2017; Cohn-Gordon et al., 2018) derive
pragmatic behavior by producing outputs that dis-
tinguish the input i from an alternate distractor in-
put (or inputs). We construct a distractor ı̃ for a
given input i in a task-dependent way.1

We follow the approach of Cohn-Gordon et al.
(2018), outlined briefly here. The base speakers
we build on produce outputs incrementally, where
the probability of ot, the word output at time t, is
conditioned on the input and the previously gen-
erated words: S0(ot | i, o<t). Since the output is
generated incrementally and there is no separate

1In tasks such as contrastive captioning or referring ex-
pression generation, these distractors are given; for the condi-
tional generation task, we will show that pragmatic behavior
can be obtained by constructing or selecting a single distrac-
tor that contrasts with the input i.

listener model that needs to condition on entire
output decisions, the distractor-based approach is
able to make pragmatic decisions at each word
rather than choosing between entire output candi-
dates (as in the reconstructor approaches).

The listener LD and pragmatic speaker SD1 are
derived from the base speaker S0 and a belief dis-
tribution pt(·) maintained at each timestep t over
the possible inputs ID:

LD(i | o<t) ∝ S0(o<t | i) · pt−1(i) (2)
SD1 (ot | i, o<t) ∝ LD(i | o<t)α · S0(ot | i, o<t) (3)

pt(i) ∝ S0(ot | i, o<t) · LD(i | o<t) (4)

where α is again a rationality parameter, and the
initial belief distribution p0(·) is uniform, i.e.,
p0(i) = p0( ı̃ ) = 0.5. Eqs. 2 and 4 are normalized
over the true input i and distractor ı̃; Eq. 3 is nor-
malized over the output vocabulary. We construct
an output text sequence for the pragmatic speaker
SD1 incrementally using beam search to approxi-
mately maximize Eq. 3.

Meaning Representations A distractor MR is
automatically constructed for each input to be the
most distinctive possible against the input. We
construct this distractor by masking each present
input attribute and replacing the value of each non-
present attribute with the value that is most fre-
quent for that attribute in the training data. For ex-
ample, for the input MR in Figure 1, the distractor
is NEAR[BURGER KING].

Summarization For each extracted input sen-
tence i(p), we use the previous extracted sentence
i(p−1) from the same document as the distractor in-
put ı̃ (for the first sentence we do not use a distrac-
tor). This is intended to encourage outputs o(p) to
contain distinctive information against other sum-
maries produced within the same document.

4 Experiments

For each of our two conditional generation tasks
we evaluate on a standard benchmark dataset,
following past work by using automatic evalua-
tion against human-produced reference text. We
choose hyperparameters for our models (beam
size, and parameters α and λ) to maximize task
metrics on each dataset’s development set; see Ap-
pendix A.2 for the settings used.2

2Our code is publicly available at https://github.
com/sIncerass/prag_generation.

https://github.com/sIncerass/prag_generation
https://github.com/sIncerass/prag_generation


4063

System BLEU NIST METEOR R-L CIDEr

T-Gen 65.93 8.61 44.83 68.50 2.23
Best Prev. 66.19† 8.61† 45.29‡ 70.83� 2.27•

S0 66.52 8.55 44.45 69.34 2.23
S0 ×2 65.93 8.31 43.52 69.58 2.12
SR1 68.60 8.73 45.25 70.82 2.37
SD1 67.76 8.72 44.59 69.41 2.27

Table 1: Test results for the E2E generation task, in
comparison to the T-Gen baseline (Dušek and Jurčı́ček,
2016) and the best results from the E2E challenge, re-
ported by Dušek et al. (2018): †Juraska et al. (2018),
‡Puzikov and Gurevych (2018), �Zhang et al. (2018),
and •Gong (2018). We bold our highest performing
model on each metric, as well as previous work if it
outperforms all of our models.

4.1 Meaning Representations

We evaluate on the E2E task of generation from
meaning representations containing restaurant at-
tributes (Novikova et al., 2017). We report the
task’s five automatic metrics: BLEU (Papineni
et al., 2002), NIST (Doddington, 2002), METEOR
(Lavie and Agarwal, 2007), ROUGE-L (Lin, 2004)
and CIDEr (Vedantam et al., 2015).

Table 1 compares the performance of our base
S0 and pragmatic models to the baseline T-Gen
system (Dušek and Jurčı́ček, 2016) and the best
previous result from the 20 primary systems eval-
uated in the E2E challenge (Dušek et al., 2018).
The systems obtaining these results encompass a
range of approaches: a template system (Puzikov
and Gurevych, 2018), a neural model (Zhang et al.,
2018), models trained with reinforcement learning
(Gong, 2018), and systems using ensembling and
reranking (Juraska et al., 2018). To ensure that the
benefit of the reconstructor-based pragmatic ap-
proach, which uses two models, is not due solely
to a model combination effect, we also compare
to an ensemble of two base models (S0 ×2). This
ensemble uses a weighted combination of scores
of two independently-trained S0 models, follow-
ing Eq. 1 (with weights tuned on the development
data).

Both of our pragmatic systems improve over the
strong baseline S0 system on all five metrics, with
the largest improvements (2.1 BLEU, 0.2 NIST, 0.8
METEOR, 1.5 ROUGE-L, and 0.1 CIDEr) from the
SR1 model. This S

R
1 model outperforms the previ-

ous best results obtained by any system in the E2E
challenge on BLEU, NIST, and CIDEr, with compa-
rable performance on METEOR and ROUGE-L.

System R-1 R-2 R-L METEOR

Extractive

Lead-3 40.34 17.70 36.57 22.21
Inputs 38.93 18.23 35.90 24.66

Abstractive

Best Previous 41.69† 19.47† 39.08‡ 21.00�

S0 40.88 17.80 38.54 20.38
S0 ×2 40.76 17.88 38.46 19.88
SR1 41.23 18.07 38.76 20.57
SD1 41.39 18.30 38.78 21.70

Table 2: Test results for the non-anonymized
CNN/Daily Mail summarization task. We compare to
extractive baselines, and the best previous abstractive
results of †Celikyilmaz et al. (2018), ‡Paulus et al.
(2018) and �Chen and Bansal (2018). We bold our
highest performing model on each metric, as well as
previous work if it outperforms all of our models.

4.2 Abstractive Summarization

We evaluate on the CNN/Daily Mail summariza-
tion dataset (Hermann et al., 2015; Nallapati et al.,
2016), using See et al.’s (2017) non-anonymized
preprocessing. As in previous work (Chen and
Bansal, 2018), we evaluate using ROUGE and ME-
TEOR.

Table 2 compares our pragmatic systems to the
base S0 model (with scores taken from Chen and
Bansal (2018); we obtained comparable perfor-
mance in our reproduction3), an ensemble of two
of these base models, and the best previous ab-
stractive summarization result for each metric on
this dataset (Celikyilmaz et al., 2018; Paulus et al.,
2018; Chen and Bansal, 2018). We also report two
extractive baselines: Lead-3, which uses the first
three sentences of the document as the summary
(See et al., 2017), and Inputs, the concatenation of
the extracted sentences used as inputs to our mod-
els (i.e., i(1), . . . , i(P )).

The pragmatic methods obtain improvements of
0.2–0.5 in ROUGE scores and 0.2–1.8 METEOR
over the base S0 model, with the distractor-based
approach SD1 outperforming the reconstructor-
based approach SR1 . S

D
1 is strong across all met-

rics, obtaining results competitive to the best pre-
vious abstractive systems.

3We use retrained versions of Chen and Bansal (2018)’s
sentence extractor and abstractive S0 models in all our experi-
ments, as well as their n-gram reranking-based inference pro-
cedure, replacing scores from the base model S0 with scores
from SR1 or SD1 in the respective pragmatic procedures.



4064

FF ET Food PR Area CR
Meaning Representation Attribute

0.4

0.5

0.6

0.7

0.8

0.9

1.0

C
ov

er
ag

e 
R

at
io

S0
SD1
SR1

(a) Coverage ratios by attribute type for the base model
S0 and pragmatic models SR1 and SD1 . The pragmatic
models typically improve coverage ratios across attribute
types when compared to the base model.

Coverage Ratio for Attribute
FF ET Food PR Area CR

S0 0.50 0.98 0.88 0.91 0.96 0.90

SD1 -FF 0.57 1.00 0.92 0.90 0.95 0.95
SD1 -ET 0.47 1.00 0.96 0.92 0.96 0.95
SD1 -Food 0.45 1.00 1.00 0.93 0.95 0.94
SD1 -PR 0.51 1.00 0.90 0.98 0.93 0.92
SD1 -Area 0.47 1.00 0.93 0.91 0.98 0.93

D
is

tr
ac

to
rA

ttr
.

SD1 -CR 0.45 1.00 0.91 0.90 0.91 0.95

(b) Coverage ratios by attribute type (columns) for the base
model S0, and for the pragmatic system SD1 when construct-
ing the distractor by masking the specified attribute (rows).
Cell colors are the degree the coverage ratio increases (green)
or decreases (red) relative to S0.

Figure 2: Coverage ratios for the E2E task by attribute type, estimating how frequently the values for each attribute
from the input meaning representations are mentioned in the output text.

5 Analysis

The base speaker S0 model is often underinfor-
mative, e.g., for the E2E task failing to mention
certain attributes of a MR, even though almost all
the training examples incorporate all of them. To
better understand the performance improvements
from the pragmatic models for E2E, we compute
a coverage ratio as a proxy measure of how well
content in the input is preserved in the generated
outputs. The coverage ratio for each attribute is the
fraction of times there is an exact match between
the text in the generated output and the attribute’s
value in the source MR (for instances where the
attribute is specified).4

Figure 2(a) shows coverage ratio by attribute
category for all models. The SR1 model increases
the coverage ratio when compared to S0 across all
attributes, showing that using the reconstruction
model score to select outputs does lead to an in-
crease in mentions for each attribute. Coverage
ratios increase for SD1 as well in four out of six
categories, but the increase is typically less than
that produced by SR1 .

While SD1 optimizes less explicitly for attribute
mentions than SR1 , it still provides a potential
method to control generated outputs by choosing
alternate distractors. Figure 2(b) shows cover-
age ratios for SD1 when masking only a single at-
tribute in the distractor. The highest coverage ratio
for each attribute is usually obtained when mask-
ing that attribute in the distractor MR (entries on
the main diagonal, underlined), in particular for
FAMILYFRIENDLY (FF), FOOD, PRICERANGE

4Note that this measure roughly provides a lower bound
on the model’s actual informativeness for each attribute, since
the measure does not assign credit for paraphrases.

(PR), and AREA. However, masking a single at-
tribute sometimes results in decreasing the cov-
erage ratio, and we also observe substantial in-
creases from masking other attributes: e.g., mask-
ing either FAMILYFRIENDLY or CUSTOMERRAT-
ING (CR) produces an equal increase in coverage
ratio for the CUSTOMERRATING attribute. This
may reflect underlying correlations in the training
data, as these two attributes have a small number
of possible values (3 and 7, respectively).

6 Conclusion

Our results show that S0 models from previous
work, while strong, still imperfectly capture the
behavior that people exhibit when generating text;
and an explicit pragmatic modeling procedure can
improve results. Both pragmatic methods eval-
uated in this paper encourage prediction of out-
puts that can be used to identify their inputs, either
by reconstructing inputs in their entirety or distin-
guishing true inputs from distractors, so it is per-
haps unsurprising that both methods produce sim-
ilar improvements in performance. Future work
might allow finer-grained modeling of the tradeoff
between under- and over-informativity within the
sequence generation pipeline (e.g., with a learned
communication cost model) or explore applica-
tions of pragmatics for content selection earlier in
the generation pipeline.

Acknowledgments

Thanks to Reuben Cohn-Gordon for many helpful
discussions and suggestions. This work was sup-
ported by DARPA through the XAI program. DF
is supported by a Tencent AI Lab Fellowship.



4065

References
Jacob Andreas and Dan Klein. 2016. Reasoning about

pragmatics with neural listeners and speakers. In
Proceedings of the Conference on Empirical Meth-
ods in Natural Language Processing.

Dzmitry Bahdanau, Kyunghyun Cho, and Yoshua Ben-
gio. 2014. Neural machine translation by jointly
learning to align and translate. arXiv preprint
arXiv:1409.0473.

Asli Celikyilmaz, Antoine Bosselut, Xiaodong He, and
Yejin Choi. 2018. Deep communicating agents
for abstractive summarization. In Proceedings of
the Annual Meeting of the North American Chap-
ter of the Association for Computational Linguistics,
pages 1662–1675, New Orleans, Louisiana. Associ-
ation for Computational Linguistics.

Yen-Chun Chen and Mohit Bansal. 2018. Fast abstrac-
tive summarization with reinforce-selected sentence
rewriting. In Proceedings of the Annual Meeting of
the Association for Computational Linguistics.

Jianpeng Cheng and Mirella Lapata. 2016. Neural
summarization by extracting sentences and words.
In Proceedings of the Annual Meeting of the Asso-
ciation for Computational Linguistics, pages 484–
494, Berlin, Germany. Association for Computa-
tional Linguistics.

Kyunghyun Cho, Bart van Merrienboer, Caglar Gul-
cehre, Dzmitry Bahdanau, Fethi Bougares, Holger
Schwenk, and Yoshua Bengio. 2014. Learning
phrase representations using RNN encoder–decoder
for statistical machine translation. In Proceedings
of the Conference on Empirical Methods in Natu-
ral Language Processing, pages 1724–1734, Doha,
Qatar. Association for Computational Linguistics.

Reuben Cohn-Gordon, Noah Goodman, and Chris
Potts. 2018. Pragmatically informative image cap-
tioning with character-level reference. In Proceed-
ings of the Annual Meeting of the North American
Chapter of the Association for Computational Lin-
guistics.

George Doddington. 2002. Automatic evaluation
of machine translation quality using n-gram co-
occurrence statistics. In Proceedings of the second
international conference on Human Language Tech-
nology Research, pages 138–145. Morgan Kauf-
mann Publishers Inc.

Ondrej Dušek and Filip Jurčı́ček. 2016. Sequence-to-
sequence generation for spoken dialogue via deep
syntax trees and strings. In ACL.

Ondřej Dušek, Jekaterina Novikova, and Verena Rieser.
2018. Findings of the E2E NLG challenge. In Pro-
ceedings of the International Conference on Natural
Language Generation.

Michael C Frank and Noah D Goodman. 2012. Pre-
dicting pragmatic reasoning in language games. Sci-
ence, 336(6084):998–998.

Michael C Frank, Noah D Goodman, Peter Lai, and
Joshua B Tenenbaum. 2009. Informative commu-
nication in word production and word learning. In
Proceedings of the 31st annual conference of the
cognitive science society, pages 1228–1233.

Daniel Fried, Jacob Andreas, and Dan Klein. 2018.
Unified pragmatic models for generating and follow-
ing instructions. In Proceedings of the Annual Meet-
ing of the North American Chapter of the Associa-
tion for Computational Linguistics.

Dave Golland, Percy Liang, and Dan Klein. 2010. A
game-theoretic approach to generating spatial de-
scriptions. In Proceedings of the 2010 conference on
Empirical Methods in Natural Language Process-
ing, pages 410–419. Association for Computational
Linguistics.

Heng Gong. 2018. Technical report for E2E NLG chal-
lenge. In E2E NLG Challenge System Descriptions.

Herbert P Grice. 1970. Logic and conversation.

Karl Moritz Hermann, Tomás Kociský, Edward
Grefenstette, Lasse Espeholt, Will Kay, Mustafa Su-
leyman, and Phil Blunsom. 2015. Teaching ma-
chines to read and comprehend. In Advances in Neu-
ral Information Processing Systems.

Laurence Horn. 1984. Toward a new taxonomy for
pragmatic inference: Q-based and r-based implica-
ture. Meaning, form, and use in context: Linguistic
applications, 11:42.

Juraj Juraska, Panagiotis Karagiannis, Kevin Bowden,
and Marilyn Walker. 2018. A deep ensemble model
with slot alignment for sequence-to-sequence natu-
ral language generation. In Proceedings of the An-
nual Meeting of the North American Chapter of the
Association for Computational Linguistics, pages
152–162, New Orleans, Louisiana. Association for
Computational Linguistics.

Alon Lavie and Abhaya Agarwal. 2007. METEOR: An
automatic metric for MT evaluation with high levels
of correlation with human judgments. In Proceed-
ings of the Second Workshop on Statistical Machine
Translation, pages 228–231, Prague, Czech Repub-
lic. Association for Computational Linguistics.

Chin-Yew Lin. 2004. Rouge: A package for automatic
evaluation of summaries. In Text Summarization
Branches Out: Proceedings of the ACL-04 Work-
shop.

Junhua Mao, Jonathan Huang, Alexander Toshev, Oana
Camburu, Alan Yuille, and Kevin Murphy. 2015.
Generation and comprehension of unambiguous ob-
ject descriptions. arXiv preprint arXiv:1511.02283.

Will Monroe, Robert XD Hawkins, Noah D Goodman,
and Christopher Potts. 2017. Colors in context: A
pragmatic neural model for grounded language un-
derstanding. Transactions of the Association for
Computational Linguistics.

http://www.aclweb.org/anthology/N18-1150
http://www.aclweb.org/anthology/N18-1150
http://www.aclweb.org/anthology/P16-1046
http://www.aclweb.org/anthology/P16-1046
http://www.aclweb.org/anthology/D14-1179
http://www.aclweb.org/anthology/D14-1179
http://www.aclweb.org/anthology/D14-1179
http://www.aclweb.org/anthology/N18-1014
http://www.aclweb.org/anthology/N18-1014
http://www.aclweb.org/anthology/N18-1014
http://www.aclweb.org/anthology/W/W07/W07-0734
http://www.aclweb.org/anthology/W/W07/W07-0734
http://www.aclweb.org/anthology/W/W07/W07-0734


4066

Will Monroe, Jennifer Hu, Andrew Jong, and Christo-
pher Potts. 2018. Generating bilingual pragmatic
color references. In Proceedings of the Annual
Meeting of the North American Chapter of the As-
sociation for Computational Linguistics.

Will Monroe and Christopher Potts. 2015. Learning in
the Rational Speech Acts model. In Proceedings of
20th Amsterdam Colloquium, Amsterdam. ILLC.

Ramesh Nallapati, Feifei Zhai, and Bowen Zhou. 2017.
Summarunner: A recurrent neural network based se-
quence model for extractive summarization of docu-
ments. In Proceedings of the Meeting of the Associ-
ation for the Advancement of Artificial Intelligence.

Ramesh Nallapati, Bowen Zhou, Cicero dos Santos,
Caglar Gulcehre, and Bing Xiang. 2016. Abstrac-
tive text summarization using sequence-to-sequence
rnns and beyond. In SIGNLL Conference on Com-
putational Natural Language Learning, pages 280–
290, Berlin, Germany. Association for Computa-
tional Linguistics.

Ani Nenkova and Kathleen McKeown. 2011. Auto-
matic summarization. Foundations and Trends in
Information Retrieval, 5(2–3):103–233.

Jekaterina Novikova, Ondřej Dušek, and Verena Rieser.
2017. The E2E dataset: New challenges for end-to-
end generation. In Proceedings of the Annual SIG-
dial Meeting on Discourse and Dialogue.

Naho Orita, Eliana Vornov, Naomi Feldman, and Hal
Daumé III. 2015. Why discourse affects speak-
ers’ choice of referring expressions. In Proceedings
of the 53rd Annual Meeting of the Association for
Computational Linguistics and the 7th International
Joint Conference on Natural Language Processing
(Volume 1: Long Papers), volume 1, pages 1639–
1649.

Kishore Papineni, Salim Roukos, Todd Ward, and Wei-
Jing Zhu. 2002. Bleu: a method for automatic eval-
uation of machine translation. In Proceedings of
the Annual Meeting of the Association for Compu-
tational Linguistics, pages 311–318. Association for
Computational Linguistics.

Romain Paulus, Caiming Xiong, and Richard Socher.
2018. A deep reinforced model for abstractive sum-
marization. In Proceedings of the International
Conference on Learning Representations, volume
abs/1705.04304.

Yevgeniy Puzikov and Iryna Gurevych. 2018. E2E
NLG challenge: Neural models vs. templates. In
Proceedings of the International Conference on Nat-
ural Language Generation.

Alexander M. Rush, Sumit Chopra, and Jason Weston.
2015. A neural attention model for abstractive sen-
tence summarization. In Proceedings of the 2015
Conference on Empirical Methods in Natural Lan-
guage Processing, pages 379–389, Lisbon, Portugal.
Association for Computational Linguistics.

Abigail See, Peter J. Liu, and Christopher D. Manning.
2017. Get to the point: Summarization with pointer-
generator networks. In Proceedings of the Annual
Meeting of the Association for Computational Lin-
guistics, pages 1073–1083, Vancouver, Canada. As-
sociation for Computational Linguistics.

Ramakrishna Vedantam, Samy Bengio, Kevin Murphy,
Devi Parikh, and Gal Chechik. 2017. Context-aware
captions from context-agnostic supervision.

Ramakrishna Vedantam, C. Lawrence Zitnick, and
Devi Parikh. 2015. CIDEr: Consensus-based im-
age description evaluation. In Proceedings of the
Conference on Computer Vision and Pattern Recog-
nition.

Biao Zhang, Jing Yang, Qian Lin, and Jinsong Su.
2018. Attention regularized sequence-to-sequence
learning for E2E NLG challenge. In E2E NLG Chal-
lenge System Descriptions.

http://www.aclweb.org/anthology/K16-1028
http://www.aclweb.org/anthology/K16-1028
http://www.aclweb.org/anthology/K16-1028
http://arxiv.org/abs/1705.04304
http://arxiv.org/abs/1705.04304
http://aclweb.org/anthology/D15-1044
http://aclweb.org/anthology/D15-1044
http://aclweb.org/anthology/P17-1099
http://aclweb.org/anthology/P17-1099


4067

A Supplemental Material

A.1 Reconstructor Model Details
For the reconstructor-based speaker in the E2E
task, we first follow the same data preprocessing
steps as Puzikov and Gurevych (2018), which in-
cludes a delexicalization module that deals with
sparsely occurring MR attributes (NAME, NEAR)
by mapping such values to placeholder tokens.

MRs have only a few possible values for most
attributes: six out of eight attributes have fewer
than seven unique values, and the remaining two
attributes (NAME, NEAR) are handled by our S0
and SD1 using delexicalized placeholders, follow-
ing Puzikov and Gurevych (2018). In this way, the
reconstructor only needs to predict the presence of
these two attributes with a boolean variable, and
other attributes with the corresponding categorical
variable. We use a one layer bi-directional GRU
(Cho et al., 2014) for the shared sentence encoder.
We concatenate the latent vectors from both direc-
tions to construct a bi-directional encoded vector
hi for every single word vector di as:

→
hi =

−→
GRU(di, hi−1),

←
hi =

←−
GRU(di, hi+1)

hi = [
→
hi,
←
hi], i ∈ [1, L]

Since not all words contribute equally to predict-
ing each MR attribute, we thus use an attention
mechanism (Bahdanau et al., 2014) to determine
the importance of every single word. The aggre-
gated sentence vector for task k is calculated by

a
(k)
i =

exp(W
(k)
a hi)∑L

j=1 exp(W
(k)
a hj)

, v(k) =
L∑
i=1

a
(k)
i hi,

The task-specific sentence representation is then
used as input to k layers with softmax outputs, re-
turning a probability vector Y (k) for each of the k
MR attributes.

A.2 Hyperparameters
For structured generation, we use beam size 10,
λ = 0.4, and α = 0.2, tuned to maximize the
normalized average of all five metrics on the de-
velopment set.

For abstractive summarization, we use beam
size 20, λ = 0.9, and α = 1.0, tuned to maximize
ROUGE-L on the development set.


