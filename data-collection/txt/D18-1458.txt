



















































Why Self-Attention? A Targeted Evaluation of Neural Machine Translation Architectures


Proceedings of the 2018 Conference on Empirical Methods in Natural Language Processing, pages 4263–4272
Brussels, Belgium, October 31 - November 4, 2018. c©2018 Association for Computational Linguistics

4263

Why Self-Attention?
A Targeted Evaluation of Neural Machine Translation Architectures

Gongbo Tang1∗ Mathias Müller2 Annette Rios2 Rico Sennrich2,3

1Department of Linguistics and Philology, Uppsala University
2Institute of Computational Linguistics, University of Zurich

3School of Informatics, University of Edinburgh

Abstract

Recently, non-recurrent architectures (convo-
lutional, self-attentional) have outperformed
RNNs in neural machine translation. CNNs
and self-attentional networks can connect dis-
tant words via shorter network paths than
RNNs, and it has been speculated that this im-
proves their ability to model long-range de-
pendencies. However, this theoretical argu-
ment has not been tested empirically, nor have
alternative explanations for their strong perfor-
mance been explored in-depth. We hypoth-
esize that the strong performance of CNNs
and self-attentional networks could also be
due to their ability to extract semantic fea-
tures from the source text, and we evaluate
RNNs, CNNs and self-attention networks on
two tasks: subject-verb agreement (where cap-
turing long-range dependencies is required)
and word sense disambiguation (where seman-
tic feature extraction is required). Our exper-
imental results show that: 1) self-attentional
networks and CNNs do not outperform RNNs
in modeling subject-verb agreement over long
distances; 2) self-attentional networks perform
distinctly better than RNNs and CNNs on
word sense disambiguation.

1 Introduction

Different architectures have been shown to be
effective for neural machine translation (NMT),
ranging from recurrent architectures (Kalchbren-
ner and Blunsom, 2013; Bahdanau et al., 2015;
Sutskever et al., 2014; Luong et al., 2015) to
convolutional (Kalchbrenner and Blunsom, 2013;
Gehring et al., 2017) and, most recently, fully self-
attentional (Transformer) models (Vaswani et al.,
2017). Since comparisons (Gehring et al., 2017;
Vaswani et al., 2017; Hieber et al., 2017) are
mainly carried out via BLEU (Papineni et al.,

∗Work carried out during a visit to the machine transla-
tion group at the University of Edinburgh.

2002), it is inherently difficult to attribute gains in
BLEU to architectural properties.

Recurrent neural networks (RNNs) (Elman,
1990) can easily deal with variable-length input
sentences and thus are a natural choice for the
encoder and decoder of NMT systems. Mod-
ern variants of RNNs, such as GRUs (Cho et al.,
2014) and LSTMs (Hochreiter and Schmidhuber,
1997), address the difficulty of training recurrent
networks with long-range dependencies. Gehring
et al. (2017) introduce a neural architecture where
both the encoder and decoder are based on CNNs,
and report better BLEU scores than RNN-based
NMT models. Moreover, the computation over
all tokens can be fully parallelized during training,
which increases efficiency. Vaswani et al. (2017)
propose Transformer models, which are built en-
tirely with attention layers, without convolution or
recurrence. They report new state-of-art BLEU
scores for EN→DE and EN→FR. Yet, the BLEU
metric is quite coarse-grained, and offers no in-
sight as to which aspects of translation are im-
proved by different architectures.

To explain the observed improvements in
BLEU, previous work has drawn on theoretical ar-
guments. Both Gehring et al. (2017) and Vaswani
et al. (2017) argue that the length of the paths in
neural networks between co-dependent elements
affects the ability to learn these dependencies: the
shorter the path, the easier the model learns such
dependencies. The papers argue that Transformers
and CNNs are better suited than RNNs to capture
long-range dependencies.

However, this claim is based on a theoreti-
cal argument and has not been empirically tested.
We argue other abilities of non-recurrent networks
could be responsible for their strong performance.
Specifically, we hypothesize that the improve-
ments in BLEU are due to CNNs and Transform-
ers being strong semantic feature extractors.



4264

In this paper, we evaluate all three popular
NMT architectures: models based on RNNs (re-
ferred to as RNNS2S in the remainder of the pa-
per), based on CNNs (referred to as ConvS2S) and
self-attentional models (referred to as Transform-
ers). Motivated by the aforementioned theoreti-
cal claims regarding path length and semantic fea-
ture extraction, we evaluate their performance on
a subject-verb agreement task (that requires mod-
eling long-range dependencies) and a word sense
disambiguation (WSD) task (that requires extract-
ing semantic features). Both tasks build on test
sets of contrastive translation pairs, Lingeval97
(Sennrich, 2017) and ContraWSD (Rios et al.,
2017).

The main contributions of this paper can be
summarized as follows:

• We test the theoretical claims that architec-
tures with shorter paths through networks
are better at capturing long-range dependen-
cies. Our experimental results on modeling
subject-verb agreement over long distances
do not show any evidence that Transformers
or CNNs are superior to RNNs in this regard.

• We empirically show that the number of at-
tention heads in Transformers impacts their
ability to capture long-distance dependen-
cies. Specifically, many-headed multi-head
attention is essential for modeling long-
distance phenomena with only self-attention.

• We empirically show that Transformers excel
at WSD, indicating that they are strong se-
mantic feature extractors.

2 Related work

Yin et al. (2017) are the first to compare CNNs,
LSTMs and GRUs on several NLP tasks. They
find that CNNs are better at tasks related to se-
mantics, while RNNs are better at syntax-related
tasks, especially for longer sentences.

Based on the work of Linzen et al. (2016),
Bernardy and Lappin (2017) find that RNNs per-
form better than CNNs on a subject-verb agree-
ment task, which is a good proxy for how well
long-range dependencies are captured. Tran et al.
(2018) find that a Transformer language model
performs worse than an RNN language model on
a subject-verb agreement task. They, too, note that
this is especially true as the distance between sub-
ject and verb grows, even if RNNs resulted in a

higher perplexity on the validation set. This result
of Tran et al. (2018) is clearly in contrast to the
general finding that Transformers are better than
RNNs for NMT tasks.

Bai et al. (2018) evaluate CNNs and LSTMs
on several sequence modeling tasks. They con-
clude that CNNs are better than RNNs for se-
quence modeling. However, their CNN models
perform much worse than the state-of-art LSTM
models on some sequence modeling tasks, as they
themselves state in the appendix.

Tang et al. (2018) evaluate different RNN ar-
chitectures and Transformer models on the task of
historical spelling normalization which translates
a historical spelling into its modern form. They
find that Transformer models surpass RNN mod-
els only in high-resource conditions.

In contrast to previous studies, we focus on the
machine translation task, where architecture com-
parisons so far are mostly based on BLEU.

3 Background

3.1 NMT Architectures

We evaluate three different NMT architectures:
RNN-based models, CNN-based models, and
Transformer-based models. All of them have a bi-
partite structure in the sense that they consist of
an encoder and a decoder. The encoder and the
decoder interact via a soft-attention mechanism
(Bahdanau et al., 2015; Luong et al., 2015), with
one or multiple attention layers.

In the following sections, hli is the hidden state
at step i of layer l, hli−1 represents the hidden state
at the previous step of layer l, hl−1i means the hid-
den state at i of l − 1 layer, Exi represents the
embedding of xi, and epos,i denotes the positional
embedding at position i.

3.1.1 RNN-based NMT
RNNs are stateful networks that change as new in-
puts are fed to them, and each state has a direct
connection only to the previous state. Thus, the
path length of any two tokens with a distance of
n in RNNs is exactly n. Figure 1 (a) shows an
illustration of RNNs.

hli = h
l−1
i + frnn(h

l−1
i , h

l
i−1) (1)

In deep architectures, two adjacent layers are com-
monly connected with residual connections. In the
lth encoder layer, hli is generated by Equation 1,



4265

x1 x2 x3 x4 x5
(a) RNN

x1 x2 x3 x4 x5padding padding
(b) CNN

x1 x2 x3 x4 x5
(c) Self-attention

Figure 1: Architectures of different neural networks in NMT.

where frnn is the RNN (GRU or LSTM) function.
In the first layer, h0i = frnn(Exi , h

0
i−1).

In addition to the connection between the en-
coder and decoder via attention, the initial state of
the decoder is usually initialized with the average
of the hidden states or the last hidden state of the
encoder.

3.1.2 CNN-based NMT
CNNs are hierarchical networks, in that convolu-
tion layers capture local correlations. The local
context size depends on the size of the kernel and
the number of layers. In order to keep the out-
put the same length as the input, CNN models add
padding symbols to input sequences. Given an L-
layer CNN with a kernel size k, the largest context
size is L(k−1). For any two tokens in a local con-
text with a distance of n, the path between them is
only dn/(k − 1)e.

As Figure 1 (b) shows, a 2-layer CNN with ker-
nel size 3 “sees” an effective local context of 5 to-
kens. The path between the first token and the fifth
token is only 2 convolutions.1 Since CNNs do not
have a means to infer the position of elements in a
sequence, positional embeddings are introduced.

hli = h
l−1
i + fcnn(W

l[hl−1i−bk/2c; ...;h
l−1
i+bk/2c]

+ bl) (2)

The hidden state hli shown in Equation 2 is related
to the hidden states in the same convolution and
the hidden state hl−1i from the previous layer. k
denotes the kernel size of CNNs and fcnn is a non-
linearity. ConvS2S chooses Gated Linear Units
(GLU) which can be viewed as a gated variation
of ReLUs. W l are called convolutional filters. In
the input layer, h0i = Exi + epos,i.

1Note that the decoder employs masking to avoid condi-
tioning the model on future information, which reduces the
effective context size to L k−1

2
.

3.1.3 Transformer-based NMT
Transformers rely heavily on self-attention net-
works. Each token is connected to any other
token in the same sentence directly via self-
attention. Moreover, Transformers feature at-
tention networks with multiple attention heads.
Multi-head attention is more fine-grained, com-
pared to conventional 1-head attention mecha-
nisms. Figure 1 (c) illustrates that any two to-
kens are connected directly: the path length be-
tween the first and the fifth tokens is 1. Similar to
CNNs, positional information is also preserved in
positional embeddings.

The hidden state in the Transformer encoder is
calculated from all hidden states of the previous
layer. The hidden state hli in a self-attention net-
work is computed as in Equation 3.

hli = h
l−1
i + f(self-attention(h

l−1
i )) (3)

where f represents a feedforward network with
ReLU as the activation function and layer normal-
ization. In the input layer, h0i = Exi + epos,i.
The decoder additionally has a multi-head atten-
tion over the encoder hidden states.

3.2 Contrastive Evaluation of Machine
Translation

Since we evaluate different NMT architectures
explicitly on subject-verb agreement and WSD
(both happen implicitly during machine transla-
tion), BLEU as a measure of overall translation
quality is not helpful. In order to conduct these
targeted evaluations, we use contrastive test sets.

Sets of contrastive translations can be used to
analyze specific types of errors. Human refer-
ence translations are paired with one or more con-
trastive variants, where a specific type of error is
introduced automatically.

The evaluation procedure then exploits the fact
that NMT models are conditional language mod-
els. By virtue of this, given any source sentence S



4266

and target sentence T , any NMT model can assign
to them a probability P (T |S). If a model assigns
a higher score to the correct target sentence than
to a contrastive variant that contains an error, we
consider it a correct decision. The accuracy of a
model on such a test set is simply the percentage
of cases where the correct target sentence is scored
higher than all contrastive variants.

Contrastive evaluation tests the sensitivity of
NMT models to specific translation errors. The
contrastive examples are designed to capture spe-
cific translation errors rather than evaluating the
global quality of NMT models. Although they do
not replace metrics such as BLEU, they give fur-
ther insights into the performance of models, on
specific linguistic phenomena.

3.2.1 Lingeval97
Lingeval97 has over 97,000 English→German
contrastive translation pairs featuring different lin-
guistic phenomena, including subject-verb agree-
ment, noun phrase agreement, separable verb-
particle constructions, transliterations and polar-
ity. In this paper, we are interested in evaluat-
ing the performance on long-range dependencies.
Thus, we focus on the subject-verb agreement cat-
egory which consists of 35,105 instances.

In German, verbs must agree with their subjects
in both grammatical number and person. There-
fore, in a contrastive translation, the grammatical
number of a verb is swapped. Table 1 gives an
example.

English: [...] plan will be approved
German: [...] Plan verabschiedet wird
Contrast: [...] Plan verabschiedet werden

Table 1: An example of a contrastive pair in the
subject-verb agreement category.

3.2.2 ContraWSD
In ContraWSD, given an ambiguous word in the
source sentence, the correct translation is replaced
by another meaning of the ambiguous word which
is incorrect. For example, in a case where the En-
glish word line is the correct translation of the Ger-
man source word Schlange, ContraWSD replaces
line with the other translations of Schlange, such
as snake, serpent, to generate contrastive transla-
tions.

For German→English, ContraWSD contains 84
different German word senses. It has 7,200

German→English lexical ambiguities, each lexi-
cal ambiguity instance has 3.5 contrastive transla-
tions on average. For German→French, it consists
of 71 different German word senses. There are
6,700 German→French lexical ambiguities, with
an average of 2.2 contrastive translations each lex-
ical ambiguity instance. All the ambiguous words
are nouns so that the disambiguation is not possi-
ble simply based on syntactic context.

4 Subject-verb Agreement

The subject-verb agreement task is the most pop-
ular choice for evaluating the ability to capture
long-range dependencies and has been used in
many studies (Linzen et al., 2016; Bernardy and
Lappin, 2017; Sennrich, 2017; Tran et al., 2018).
Thus, we also use this task to evaluate different
NMT architectures on long-range dependencies.

4.1 Experimental Settings

Different architectures are hard to compare fairly
because many factors affect performance. We aim
to create a level playing field for the comparison
by training with the same toolkit, Sockeye (Hieber
et al., 2017) which is based on MXNet (Chen et al.,
2015). In addition, different hyperparameters and
training techniques (such as label smoothing or
layer normalization) have been found to affect the
performance (Chen et al., 2018). We apply the
same hyperparameters and techniques for all ar-
chitectures except the parameters of each specific
architecture. Since the best hyperparameters for
different architectures may be diverse, we verify
our hyperparameter choice by comparing our re-
sults to those published previously. Our models
achieve similar performance to that reported by
Hieber et al. (2017) with the best available set-
tings. In addition, we extend Sockeye with an
interface that enables scoring of existing transla-
tions, which is required for contrastive evaluation.

All the models are trained with 2 GPUs. Dur-
ing training, each mini-batch contains 4096 to-
kens. A model checkpoint is saved every 4,000
updates. We use Adam (Kingma and Ba, 2015)
as the optimizer. The initial learning rate is set
to 0.0002. If the performance on the validation
set has not improved for 8 checkpoints, the learn-
ing rate is multiplied by 0.7. We set the early
stopping patience to 32 checkpoints. All the neu-
ral networks have 8 layers. For RNNS2S, the en-
coder has 1 bi-directional LSTM and 6 stacked



4267

uni-directional LSTMs, and the decoder is a stack
of 8 uni-directional LSTMs. The size of embed-
dings and hidden states is 512. We apply layer nor-
malization and label smoothing (0.1) in all mod-
els. We tie the source and target embeddings.
The dropout rate of embeddings and Transformer
blocks is set to 0.1. The dropout rate of RNNs and
CNNs is 0.2. The kernel size of CNNs is 3. Trans-
formers have an 8-head attention mechanism.

To test the robustness of our findings, we also
test a different style of RNN architecture, from
a different toolkit. We evaluate bi-deep transi-
tional RNNs (Miceli Barone et al., 2017) which
are state-of-art RNNs in machine translation. We
use the bi-deep RNN-based model (RNN-bideep)
implemented in Marian (Junczys-Dowmunt et al.,
2018). Different from the previous settings, we
use the Adam optimizer with β1 = 0.9, β2 =
0.98, � = 10−9. The initial learning rate is
0.0003. We tie target embeddings and output em-
beddings. Both the encoder and decoder have 4
layers of LSTM units, only the encoder layers are
bi-directional. LSTM units consist of several cells
(deep transition): 4 in the first layer of the decoder,
2 cells everywhere else.

We use training data from the WMT17 shared
task.2 We use newstest2013 as the validation set,
and use newstest2014 and newstest2017 as the test
sets. All BLEU scores are computed with Sacre-
BLEU (Post, 2018). There are about 5.9 million
sentence pairs in the training set after preprocess-
ing with Moses scripts. We learn a joint BPE
model with 32,000 subword units (Sennrich et al.,
2016). We employ the model that has the best per-
plexity on the validation set for the evaluation.

4.2 Overall Results

Table 2 reports the BLEU scores on newstest2014
and newstest2017, the perplexity on the valida-
tion set, and the accuracy on long-range depen-
dencies.3 Transformer achieves the highest accu-
racy on this task and the highest BLEU scores on
both newstest2014 and newstest2017. Compared
to RNNS2S, ConvS2S has slightly better results re-
garding BLEU scores, but a much lower accuracy
on long-range dependencies. The RNN-bideep
model achieves distinctly better BLEU scores and
a higher accuracy on long-range dependencies.

2http://www.statmt.org/wmt17/
translation-task.html

3We report average accuracy on instances where the dis-
tance between subject and verb is longer than 10 words.

However, it still cannot outperform Transformers
on any of the tasks.

Model 2014 2017 PPL Acc(%)
RNNS2S 23.3 25.1 6.1 95.1
ConvS2S 23.9 25.2 7.0 84.9
Transformer 26.7 27.5 4.5 97.1
RNN-bideep 24.7 26.1 5.7 96.3

Table 2: The results of different NMT models, in-
cluding the BLEU scores on newstest2014 and new-
stest2017, the perplexity on the validation set, and the
accuracy of long-range dependencies.

Figure 2 shows the performance of different ar-
chitectures on the subject-verb agreement task. It
is evident that Transformer, RNNS2S, and RNN-
bideep perform much better than ConvS2S on
long-range dependencies. However, Transformer,
RNNS2S, and RNN-bideep are all robust over long
distances. Transformer outperforms RNN-bideep
for distances 11-12, but RNN-bideep performs
equally or better for distance 13 or higher. Thus,
we cannot conclude that Transformer models are
particularly stronger than RNN models for long
distances, despite achieving higher average accu-
racy on distances above 10.

0.5

0.55

0.6

0.65

0.7

0.75

0.8

0.85

0.9

0.95

1

1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 >15

A
cc
u
ra
cy

Distance

RNNS2S

RNN-bideep

ConvS2S

Transformer

Figure 2: Accuracy of different NMT models on the
subject-verb agreement task.

4.2.1 CNNs
Theoretically, the performance of CNNs will drop
when the distance between the subject and the verb
exceeds the local context size. However, ConvS2S
is also clearly worse than RNNS2S for subject-verb
agreement within the local context size.

In order to explore how the ability of ConvS2S
to capture long-range dependencies depends on
the local context size, we train additional systems,

http://www.statmt.org/wmt17/translation-task.html
http://www.statmt.org/wmt17/translation-task.html


4268

varying the number of layers and kernel size. Ta-
ble 3 shows the performance of different ConvS2S
models. Figure 3 displays the performance of two
8-layer CNNs with kernel size 3 and 7, a 6-layer
CNN with kernel size 3, and RNNS2S. The results
indicate that the accuracy increases when the local
context size becomes larger, but the BLEU score
does not. Moreover, ConvS2S is still not as good
as RNNS2S for subject-verb agreement.

Layer K Ctx 2014 2017 Acc(%)
4 3 4 22.9 24.2 81.1
6 3 6 23.6 25.0 82.5
8 3 8 23.9 25.2 84.9
8 5 16 23.5 24.7 89.7
8 7 24 23.3 24.6 91.3

Table 3: The performance of ConvS2S with different
settings. K means the kernel size. The ctx column is
the theoretical largest local context size in the masked
decoder.

0.5

0.55

0.6

0.65

0.7

0.75

0.8

0.85

0.9

0.95

1

1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 >15

A
cc
u
ra
cy

Distance

RNNS2S

ConvS2S-d8k7

ConvS2S-d8k3

ConvS2S-d6k3

Figure 3: Results of ConvS2S models and the RNNS2S
model at different distances.

Regarding the explanation for the poor perfor-
mance of ConvS2S, we identify the limited context
size as a major problem. One assumption to ex-
plain the remaining difference is that, scale invari-
ance of CNNs is relatively poor (Xu et al., 2014).
Scale-invariance is important in NLP, where the
distance between arguments is flexible, and cur-
rent recurrent or attentional architectures are better
suited to handle this variance.

Our empirical results do not confirm the theoret-
ical arguments in Gehring et al. (2017) that CNNs
can capture long-range dependencies better with
a shorter path. The BLEU score does not corre-
late well with the targeted evaluation of long-range
distance interactions. This is due to the locality

of BLEU, which only measures on the level of n-
grams, but it may also indicate that there are other
trade-offs between the modeling of different phe-
nomena depending on hyperparameters. If we aim
to get better performance on long-range dependen-
cies, we can take this into account when optimiz-
ing hyperparameters.

4.2.2 RNNs vs. Transformer
Even though Transformer achieves much better
BLEU scores than RNNS2S and RNN-bideep, the
accuracies of these architectures on long-range de-
pendencies are close to each other in Figure 2.

Our experimental result contrasts with the result
from Tran et al. (2018). They find that Transform-
ers perform worse than LSTMs on the subject-
verb agreement task, especially when the distance
between the subject and the verb becomes longer.
We perform several experiments to analyze this
discrepancy with Tran et al. (2018).

A first hypothesis is that this is caused by the
amount of training data, since we used much larger
datasets than Tran et al. (2018). We retrain all the
models with a small amount of training data simi-
lar to the amount used by Tran et al. (2018), about
135K sentence pairs. The other training settings
are the same as in Section 4.1. We do not see the
expected degradation of Transformer-s, compared
to RNNS2S-s (see Figure 4). In Table 4, the perfor-
mance of RNNS2S-s and Transformer-s is similar,
including the BLEU scores on newstest2014, new-
stest2017, the perplexity on the validation set, and
the accuracy on the long-range dependencies.

0.5

0.55

0.6

0.65

0.7

0.75

0.8

0.85

0.9

0.95

1

1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 >15

A
cc
u
ra
cy

Distance

RNNS2S-s

Tranformer-s

Figure 4: Results of a Transformer and RNNS2S model
trained on a small dataset.

A second hypothesis is that the experimental set-
tings lead to the different results. In order to inves-
tigate this, we do not only use a small training set,



4269

but also replicate the experimental settings of Tran
et al. (2018). The main changes are neural network
layers (8→4); embedding size (512→128); multi-
head size (8→2); dropout rate (0.1→0.2); check-
point save frequency (4,000→1,000), and initial
learning rate (0.0002→0.001).

Model 2014 2017 PPL Acc(%)
RNNS2S-s 7.3 7.8 47.8 77.3
Trans-s 7.2 8.0 44.6 74.6
RNNS2S-re 9.2 10.5 39.2 77.7
Trans-re-h2 9.6 10.7 36.9 71.9
Trans-re-h4 9.5 11.9 35.8 73.8
Trans-re-h8 9.4 10.4 36.0 75.3

Table 4: The results of different models with small
training data and replicate settings. Trans is short for
Transformer. Models with the suffix “-s” are models
trained with small data set. Models with the suffix “-re”
are models trained with replicate settings. “h2, h4, h8”
indicates the number of attention heads for Transformer
models.

0.5

0.55

0.6

0.65

0.7

0.75

0.8

0.85

0.9

0.95

1

1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 >15

A
cc
u
ra
cy

Distance

RNNS2S-re

Trans-re-h2

Trans-re-h4

Trans-re-h8

Figure 5: Results of the models with replicate settings,
varying the number of attention heads for the Trans-
former models.

In the end, we get a result that is similar to Tran
et al. (2018). In Figure 5, Transformer-re-h2
performs clearly worse than RNNS2S-re on long-
range dependencies. By increasing the number
of heads in multi-head attention, subject-verb ac-
curacy over long distances can be improved sub-
stantially, even though it remains below that of
RNNS2S-re. Also, the effect on BLEU is small.

Our results suggest that the importance of multi-
head attention with a large number of heads is
larger than BLEU would suggest, especially for
the modeling of long-distance phenomena, since
multi-head attention provides a way for the model

to attend to both local and distant context, whereas
distant context may be overshadowed by local
context in an attention mechanism with a single
or few heads.

Although our study is not a replication of Tran
et al. (2018), who work on a different task and
a different test set, our results do suggest an al-
ternative interpretation of their findings, namely
that the poor performance of the Transformer in
their experiments is due to hyperparameter choice.
Rather than concluding that RNNs are superior to
Transformers for the modeling of long-range de-
pendency phenomena, we find that the number of
heads in multi-head attention affects the ability of
Transformers to model long-range dependencies
in subject-verb agreement.

5 WSD

Our experimental results on the subject-verb
agreement task demonstrate that CNNs and Trans-
former are not better at capturing long-range de-
pendencies compared to RNNs, even though the
paths in CNNs and Transformers are shorter. This
finding is not in accord with the theoretical argu-
ment in both Gehring et al. (2017) and Vaswani
et al. (2017). However, these architectures per-
form well empirically according to BLEU. Thus,
we further evaluate these architectures on WSD,
to test our hypothesis that non-recurrent architec-
tures are better at extracting semantic features.

5.1 Experimental settings

We evaluate all architectures on ContraWSD on
both DE→EN and DE→FR. We reuse the param-
eter settings in Section 4.1, except that: the initial
learning rate of ConvS2S is reduced from 0.0003
to 0.0002 in DE→EN; the checkpoint saving fre-
quency is changed from 4,000 to 1,000 in DE→FR
because of the training data size.

For DE→EN, the training set, validation set,
and test set are the same as the other direction
EN→DE. For DE→FR, we use around 2.1 million
sentence pairs from Europarl (v7) (Tiedemann,
2012)4 and News Commentary (v11) cleaned by
Rios et al. (2017)5 as our training set. We use
newstest2013 as the evaluation set, and use new-
stest2012 as the test set. All the data is prepro-
cessed with Moses scripts.

4http://opus.nlpl.eu/Europarl.php
5http://data.statmt.org/ContraWSD/

http://opus.nlpl.eu/Europarl.php
http://data.statmt.org/ContraWSD/


4270

Model
DE→EN DE→FR

PPL 2014 2017 Acc(%) PPL 2012 Acc(%)
RNNS2S 5.7 29.1 30.1 84.0 7.06 16.4 72.2
ConvS2S 6.3 29.1 30.4 82.3 7.93 16.8 72.7
Transformer 4.3 32.7 33.7 90.3 4.9 18.7 76.7
uedin-wmt17 – – 35.1 87.9 – – –
TransRNN 5.2 30.5 31.9 86.1 6.3 17.6 74.2

Table 5: The results of different architectures on newstest sets and ContraWSD. PPL is the perplexity on the
validation set. Acc means accuracy on the test set.

In addition, we also compare to the best result
reported for DE→EN, achieved by uedin-wmt17
(Sennrich et al., 2017), which is an ensemble of
4 different models and reranked with right-to-left
models.6 uedin-wmt17 is based on the bi-deep
RNNs (Miceli Barone et al., 2017) that we men-
tioned before. To the original 5.9 million sentence
pairs in the training set, they add 10 million syn-
thetic pairs with back-translation.

5.2 Overall Results

Table 5 gives the performance of all the architec-
tures, including the perplexity on validation sets,
the BLEU scores on newstest, and the accuracy
on ContraWSD. Transformers distinctly outper-
form RNNS2S and ConvS2S models on DE→EN
and DE→FR. Moreover, the Transformer model
on DE→EN also achieves higher accuracy than
uedin-wmt17, although the BLEU score on new-
stest2017 is 1.4 lower than uedin-wmt17. We at-
tribute this discrepancy between BLEU and WSD
performance to the use of synthetic news training
data in uedin-wmt17, which causes a large boost in
BLEU due to better domain adaptation to newstest,
but which is less helpful for ContraWSD, whose
test set is drawn from a variety of domains.

For DE→EN, RNNS2S and ConvS2S have the
same BLEU score on newstest2014, ConvS2S has
a higher score on newstest2017. However, the
WSD accuracy of ConvS2S is 1.7% lower than
RNNS2S. For DE→FR, ConvS2S achieves slightly
better results on both BLEU scores and accuracy
than RNNS2S.

The Transformer model strongly outperforms
the other architectures on this WSD task, with a
gap of 4–8 percentage points. This affirms our
hypothesis that Transformers are strong semantic
features extractors.

6https://github.com/a-rios/ContraWSD/
tree/master/baselines

5.3 Hybrid Encoder-Decoder Model

In recent work, Chen et al. (2018) find that hybrid
architectures with a Transformer encoder and an
RNN decoder can outperform a pure Transformer
model. They speculate that the Transformer en-
coder is better at encoding or extracting features
than the RNN encoder, whereas the RNN is better
at conditional language modeling.

For WSD, it is unclear whether the most im-
portant component is the encoder, the decoder, or
both. Following the hypothesis that Transformer
encoders excel as semantic feature extractors, we
train a hybrid encoder-decoder model (TransRNN)
with a Transformer encoder and an RNN decoder.

The results (in Table 5) show that TransRNN
performs better than RNNS2S, but worse than the
pure Transformer, both in terms of BLEU and
WSD accuracy. This indicates that WSD is not
only done in the encoder, but that the decoder also
affects WSD performance. We note that Chen
et al. (2018); Domhan (2018) introduce the tech-
niques in Transformers into RNN-based models,
with reportedly higher BLEU. Thus, it would be
interesting to see if the same result holds true with
their architectures.

6 Conclusion

In this paper, we evaluate three popular NMT ar-
chitectures, RNNS2S, ConvS2S, and Transformers,
on subject-verb agreement and WSD by scoring
contrastive translation pairs.

We test the theoretical claims that shorter path
lengths make models better capture long-range de-
pendencies. Our experimental results show that:

• There is no evidence that CNNs and Trans-
formers, which have shorter paths through
networks, are empirically superior to RNNs
in modeling subject-verb agreement over
long distances.

https://github.com/a-rios/ContraWSD/tree/master/baselines
https://github.com/a-rios/ContraWSD/tree/master/baselines


4271

• The number of heads in multi-head attention
affects the ability of a Transformer to model
long-range dependencies in the subject-verb
agreement task.

• Transformer models excel at another task,
WSD, compared to the CNN and RNN archi-
tectures we tested.

Lastly, our findings suggest that assessing the per-
formance of NMT architectures means finding
their inherent trade-offs, rather than simply com-
puting their overall BLEU score. A clear under-
standing of those strengths and weaknesses is im-
portant to guide further work. Specifically, given
the idiosyncratic limitations of recurrent and self-
attentional models, combining them is an exciting
line of research. The apparent weakness of CNN
architectures on long-distance phenomena is also
a problem worth tackling, and we can find inspi-
ration from related work in computer vision (Xu
et al., 2014).

Acknowledgments

We thank all the anonymous reviews and Joakim
Nivre who give a lot of valuable and insight-
ful comments. We appreciate the grants pro-
vided by Erasmus+ Programme and Anna Maria
Lundin’s scholarship committee. GT is funded
by the Chinese Scholarship Council (grant num-
ber 201607110016). MM, AR and RS have re-
ceived funding from the Swiss National Science
Foundation (grant number 105212 169888).

References
Dzmitry Bahdanau, Kyunghyun Cho, and Yoshua Ben-

gio. 2015. Neural Machine Translation by Jointly
Learning to Align and Translate. In Proceedings of
the 3rd International Conference on Learning Rep-
resentations, San Diego, California, USA.

Shaojie Bai, J Zico Kolter, and Vladlen Koltun.
2018. An empirical evaluation of generic convolu-
tional and recurrent networks for sequence model-
ing. arXiv preprint arXiv:1803.01271.

Jean-Philippe Bernardy and Shalom Lappin. 2017.
Using Deep Neural Networks to Learn Syntactic
Agreement. LiLT (Linguistic Issues in Language
Technology), 15(2):1–15.

Mia Xu Chen, Orhan Firat, Ankur Bapna, Melvin
Johnson, Wolfgang Macherey, George Foster, Llion
Jones, Mike Schuster, Noam Shazeer, Niki Parmar,
Ashish Vaswani, Jakob Uszkoreit, Lukasz Kaiser,

Zhifeng Chen, Yonghui Wu, and Macduff Hughes.
2018. The best of both worlds: Combining recent
advances in neural machine translation. In Proceed-
ings of the 56th Annual Meeting of the Association
for Computational Linguistics (Volume 1: Long Pa-
pers), pages 76–86. Association for Computational
Linguistics.

Tianqi Chen, Mu Li, Yutian Li, Min Lin, Naiyan Wang,
Minjie Wang, Tianjun Xiao, Bing Xu, Chiyuan
Zhang, and Zheng Zhang. 2015. Mxnet: A flex-
ible and efficient machine learning library for het-
erogeneous distributed systems. arXiv preprint
arXiv:1512.01274.

Kyunghyun Cho, Bart van Merrienboer, Caglar Gul-
cehre, Dzmitry Bahdanau, Fethi Bougares, Hol-
ger Schwenk, and Yoshua Bengio. 2014. Learn-
ing Phrase Representations using RNN Encoder–
Decoder for Statistical Machine Translation. In Pro-
ceedings of the 2014 Conference on Empirical Meth-
ods in Natural Language Processing, pages 1724–
1734, Doha, Qatar. Association for Computational
Linguistics.

Tobias Domhan. 2018. How much attention do you
need? a granular analysis of neural machine trans-
lation architectures. In Proceedings of the 56th An-
nual Meeting of the Association for Computational
Linguistics (Volume 1: Long Papers), pages 1799–
1808. Association for Computational Linguistics.

Jeffrey L Elman. 1990. Finding structure in time. Cog-
nitive science, 14(2):179–211.

Jonas Gehring, Michael Auli, David Grangier, De-
nis Yarats, and Yann N. Dauphin. 2017. Convolu-
tional sequence to sequence learning. In Proceed-
ings of the 34th International Conference on Ma-
chine Learning, pages 1243–1252, Sydney, Aus-
tralia. PMLR.

Felix Hieber, Tobias Domhan, Michael Denkowski,
David Vilar, Artem Sokolov, Ann Clifton, and Matt
Post. 2017. Sockeye: A Toolkit for Neural Machine
Translation. arXiv preprint arXiv:1712.05690.

Sepp Hochreiter and Jürgen Schmidhuber. 1997.
Long short-term memory. Neural computation,
9(8):1735–1780.

Marcin Junczys-Dowmunt, Roman Grundkiewicz,
Tomasz Dwojak, Hieu Hoang, Kenneth Heafield,
Tom Neckermann, Frank Seide, Ulrich Germann,
Alham Fikri Aji, Nikolay Bogoychev, André F. T.
Martins, and Alexandra Birch. 2018. Marian: Fast
Neural Machine Translation in C++. arXiv preprint
arXiv:1804.00344.

Nal Kalchbrenner and Phil Blunsom. 2013. Recurrent
Continuous Translation Models. In Proceedings of
the 2013 Conference on Empirical Methods in Natu-
ral Language Processing, pages 1700–1709, Seattle,
Washington, USA. Association for Computational
Linguistics.

https://arxiv.org/abs/1409.0473
https://arxiv.org/abs/1409.0473
https://arxiv.org/abs/1803.01271
https://arxiv.org/abs/1803.01271
https://arxiv.org/abs/1803.01271
http://csli-lilt.stanford.edu/ojs/index.php/LiLT/article/view/94/79
http://csli-lilt.stanford.edu/ojs/index.php/LiLT/article/view/94/79
http://aclweb.org/anthology/P18-1008
http://aclweb.org/anthology/P18-1008
http://arxiv.org/abs/1512.01274
http://arxiv.org/abs/1512.01274
http://arxiv.org/abs/1512.01274
http://www.aclweb.org/anthology/D14-1179
http://www.aclweb.org/anthology/D14-1179
http://www.aclweb.org/anthology/D14-1179
http://aclweb.org/anthology/P18-1167
http://aclweb.org/anthology/P18-1167
http://aclweb.org/anthology/P18-1167
https://onlinelibrary.wiley.com/doi/abs/10.1207/s15516709cog1402_1
https://arxiv.org/abs/1705.03122
https://arxiv.org/abs/1705.03122
http://arxiv.org/abs/1712.05690
http://arxiv.org/abs/1712.05690
https://dl.acm.org/citation.cfm?id=1246450
https://arxiv.org/abs/1804.00344
https://arxiv.org/abs/1804.00344
http://www.aclweb.org/anthology/D13-1176
http://www.aclweb.org/anthology/D13-1176


4272

Diederik P. Kingma and Jimmy Ba. 2015. Adam: A
Method for Stochastic Optimization. In Proceed-
ings of the 3rd International Conference on Learn-
ing Representations, San Diego, California, USA.

Tal Linzen, Emmanuel Dupoux, and Yoav Goldberg.
2016. Assessing the Ability of LSTMs to Learn
Syntax-Sensitive Dependencies. Transactions of the
Association for Computational Linguistics, 4:521–
535.

Thang Luong, Hieu Pham, and Christopher D. Man-
ning. 2015. Effective Approaches to Attention-
based Neural Machine Translation. In Proceed-
ings of the 2015 Conference on Empirical Meth-
ods in Natural Language Processing, pages 1412–
1421, Lisbon, Portugal. Association for Computa-
tional Linguistics.

Antonio Valerio Miceli Barone, Jindřich Helcl, Rico
Sennrich, Barry Haddow, and Alexandra Birch.
2017. Deep architectures for Neural Machine Trans-
lation. In Proceedings of the Second Conference on
Machine Translation, pages 99–107, Copenhagen,
Denmark. Association for Computational Linguis-
tics.

Kishore Papineni, Salim Roukos, Todd Ward, and Wei-
Jing Zhu. 2002. BLEU: a Method for Automatic
Evaluation of Machine Translation. In Proceedings
of 40th Annual Meeting of the Association for Com-
putational Linguistics, pages 311–318, Philadelphia,
Pennsylvania, USA. Association for Computational
Linguistics.

Matt Post. 2018. A call for clarity in reporting bleu
scores. arXiv preprint arXiv:1804.08771.

Annette Rios, Laura Mascarell, and Rico Sennrich.
2017. Improving Word Sense Disambiguation in
Neural Machine Translation with Sense Embed-
dings. In Proceedings of the Second Conference
on Machine Translation, pages 11–19, Copenhagen,
Denmark. Association for Computational Linguis-
tics.

Rico Sennrich. 2017. How Grammatical is Character-
level Neural Machine Translation? Assessing MT
Quality with Contrastive Translation Pairs. In Pro-
ceedings of the 15th Conference of the European
Chapter of the Association for Computational Lin-
guistics: Volume 2, Short Papers, pages 376–382,
Valencia, Spain. Association for Computational Lin-
guistics.

Rico Sennrich, Alexandra Birch, Anna Currey, Ulrich
Germann, Barry Haddow, Kenneth Heafield, An-
tonio Valerio Miceli Barone, and Philip Williams.
2017. The University of Edinburgh’s Neural MT
Systems for WMT17. In Proceedings of the Second
Conference on Machine Translation, pages 389–
399, Copenhagen, Denmark. Association for Com-
putational Linguistics.

Rico Sennrich, Barry Haddow, and Alexandra Birch.
2016. Neural Machine Translation of Rare Words
with Subword Units. In Proceedings of the 54th An-
nual Meeting of the Association for Computational
Linguistics (Volume 1: Long Papers), pages 1715–
1725, Berlin, Germany. Association for Computa-
tional Linguistics.

Ilya Sutskever, Oriol Vinyals, and Quoc V Le. 2014.
Sequence to Sequence Learning with Neural Net-
works. In Advances in Neural Information Pro-
cessing Systems 27, pages 3104–3112. Curran As-
sociates, Inc., Montréal, Canada.

Gongbo Tang, Fabienne Cap, Eva Pettersson, and
Joakim Nivre. 2018. An evaluation of neural ma-
chine translation models on historical spelling nor-
malization. In Proceedings of the 27th International
Conference on Computational Linguistics, pages
1320–1331. Association for Computational Linguis-
tics.

Jörg Tiedemann. 2012. Parallel Data, Tools and Inter-
faces in OPUS. In Proceedings of the Eighth In-
ternational Conference on Language Resources and
Evaluation (LREC-2012), pages 2214–2218, Istan-
bul, Turkey. European Language Resources Associ-
ation (ELRA).

Ke Tran, Arianna Bisazza, and Christof Monz.
2018. The Importance of Being Recurrent for
Modeling Hierarchical Structure. arXiv preprint
arXiv:1803.03585.

Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob
Uszkoreit, Llion Jones, Aidan N Gomez, Łukasz
Kaiser, and Illia Polosukhin. 2017. Attention is All
you Need. In Advances in Neural Information Pro-
cessing Systems 30, pages 6000–6010. Curran Asso-
ciates, Inc.

Yichong Xu, Tianjun Xiao, Jiaxing Zhang, Kuiyuan
Yang, and Zheng Zhang. 2014. Scale-invariant
convolutional neural networks. arXiv preprint
arXiv:1411.6369.

Wenpeng Yin, Katharina Kann, Mo Yu, and Hinrich
Schütze. 2017. Comparative study of cnn and rnn
for natural language processing. arXiv preprint
arXiv:1702.01923.

https://arxiv.org/abs/1412.6980
https://arxiv.org/abs/1412.6980
https://www.transacl.org/ojs/index.php/tacl/article/view/972
https://www.transacl.org/ojs/index.php/tacl/article/view/972
http://aclweb.org/anthology/D15-1166
http://aclweb.org/anthology/D15-1166
http://www.aclweb.org/anthology/W17-4710
http://www.aclweb.org/anthology/W17-4710
http://www.aclweb.org/anthology/P02-1040
http://www.aclweb.org/anthology/P02-1040
https://arxiv.org/abs/1804.08771
https://arxiv.org/abs/1804.08771
http://www.aclweb.org/anthology/W17-4702
http://www.aclweb.org/anthology/W17-4702
http://www.aclweb.org/anthology/W17-4702
http://www.aclweb.org/anthology/E17-2060
http://www.aclweb.org/anthology/E17-2060
http://www.aclweb.org/anthology/E17-2060
http://www.aclweb.org/anthology/W17-4739
http://www.aclweb.org/anthology/W17-4739
http://www.aclweb.org/anthology/P16-1162
http://www.aclweb.org/anthology/P16-1162
https://papers.nips.cc/paper/5346-sequence-to-sequence-learning-with-neural-networks.pdf
https://papers.nips.cc/paper/5346-sequence-to-sequence-learning-with-neural-networks.pdf
http://aclweb.org/anthology/C18-1112
http://aclweb.org/anthology/C18-1112
http://aclweb.org/anthology/C18-1112
http://www.lrec-conf.org/proceedings/lrec2012/pdf/463_Paper.pdf
http://www.lrec-conf.org/proceedings/lrec2012/pdf/463_Paper.pdf
http://arxiv.org/abs/1803.03585
http://arxiv.org/abs/1803.03585
http://papers.nips.cc/paper/7181-attention-is-all-you-need.pdf
http://papers.nips.cc/paper/7181-attention-is-all-you-need.pdf
https://arxiv.org/abs/1411.6369
https://arxiv.org/abs/1411.6369
https://arxiv.org/abs/1702.01923
https://arxiv.org/abs/1702.01923

