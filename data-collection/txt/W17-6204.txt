



















































Reflexives and Reciprocals in Synchronous Tree Adjoining Grammar


Proceedings of the 13th International Workshop on Tree Adjoining Grammars and Related Formalisms (TAG+13), pages 31–42,
Umeå, Sweden, September 4–6, 2017. c© 2017 Association for Computational Linguistics

Reflexives and Reciprocals in Synchronous Tree Adjoining Grammar

Cristina Aggazzotti
Department of Linguistics

Harvard University
Cambridge, MA 02138

caggazzotti@g.harvard.edu

Stuart M. Shieber
Paulson School of Eng’g. and Applied Sciences

Harvard University
Cambridge, MA 02138

shieber@seas.harvard.edu

Abstract

An attractive feature of the formalism
of synchronous tree adjoining grammar
(STAG) is its potential to handle linguistic
phenomena whose syntactic and seman-
tic derivations seem to diverge. Recent
work has aimed at adapting STAG to cap-
ture such cases. Anaphors, including both
reflexives and reciprocals, have presented
a particular challenge due to the locality
constraints imposed by the STAG formal-
ism. Previous attempts to model anaphors
in STAG have focused specifically on re-
flexives and have not expanded to incor-
porate reciprocals. We show how STAG
can not only capture the syntactic distri-
bution and semantic representation of both
reflexives and reciprocals, but also do so in
a unified way.

1 Introduction

In this paper, we present a novel unified anal-
ysis of both reflexives and reciprocals in syn-
chronous tree adjoining grammar (STAG). STAG
utilizes syntactic-semantic tree pairs that undergo
synchronized operations to produce a unified syn-
tactic and semantic analysis of linguistic phenom-
ena. Since anaphors, specifically reflexives (him-
self, themselves) and reciprocals (each other), re-
quire a referential lexical item, or antecedent, to
supply their semantic value, they depend on both
syntax, in the form of distributional constraints,
and semantics, in the form of specific relations
with the antecedent. Thus, STAG has the potential
to be an effective way of modeling both reflexives
and reciprocals. Yet STAG’s tight integration of
syntax and semantics places strong constraints on
the syntax-semantics interface, making anaphors a

challenging and illuminating test case for the for-
malism.

By way of example, consider the sentences in
(1), identical except for the alternation between re-
flexive and reciprocal.

(1) a. Noah and Emma saw themselves.

b. Noah and Emma saw each other.

As reciprocals require a plural antecedent, for con-
sistency throughout this paper we use examples
with plural antecedents for both reflexives and re-
ciprocals. In the distributive reading of the reflex-
ive, the relation (here, saw) holds between each
atom in the plural antecedent and itself. Similarly,
for reciprocals, the core reading (so-called strong
reciprocity) is one in which the relation holds be-
tween each atom in the antecedent and each other
distinct atom.1

The variant of STAG that we assume, following
other recent work on STAG for natural-language
semantics, is based on set-local multicomponent
TAG (MCTAG). In synchronous set-local MC-
TAG (henceforth, simply “STAG”), a lexical item
is represented by a set of syntactic and semantic
elementary trees, all of which substitute or ad-
join at the same time into another tree set (thus
“set-locally”) (Weir, 1988). This formalism has
been shown to handle a range of phenomena at
the syntax-semantics interface, including nested
quantifiers (Nesson and Shieber, 2006), extraction

1There are additional readings for reflexives and recipro-
cals as well. For instance, in a cumulative reading of the re-
flexive, Noah and Emma both see the pair containing both
of them (as, perhaps, in a mirror). The relation holds of the
entire plurality and itself. Similarly, reciprocals can display
weaker readings than strong reciprocity (Langendoen, 1978;
Dalrymple et al., 1998). Incorporation of these readings into
the present framework is enabled by our abstracting out the
meanings of the reflexive and reciprocal into separable rela-
tions REFL and RECP below, but is well beyond the scope of
this paper.

31



phenomena (Nesson and Shieber, 2007), preposi-
tions (Nesson, 2009), it-clefts (Han and Hedberg,
2006), pied-piping in relative clauses (Han, 2006),
and clitic climbing (Bleam, 2000).

Previous applications of TAG to anaphors have
either appealed to extra facilities, such as recursive
semantic features (Kallmeyer and Romero, 2007;
Ryant and Scheffler, 2006; Champollion, 2008),
or used the more constrained STAG plus adjust-
ments, such as using de Bruijn indices in the se-
mantics (Nesson, 2009), creating multiple reflex-
ive trees (Storoshenko et al., 2008), or operating
at multiple links in the derivation (Frank, 2008).
No STAG approach to our knowledge has cap-
tured both reflexives and reciprocals. Our analysis
seeks to fill this void by showing that both kinds
of anaphors can be captured uniformly in STAG.

To achieve this, we simplify and generalize one
previous analysis of reflexives in STAG, namely
that of Frank (2008), so it can apply to recipro-
cals and a variety of reflexive cases. We simplify
Frank’s analysis, eliminating the c-command and
dominance relations used for proper variable bind-
ing by appealing to fundamental syntactic and se-
mantic constraints. We also generalize his anal-
ysis to apply to both reflexives and reciprocals.
Our full analysis is described in Section 2. We
demonstrate the power of this approach in Sec-
tion 3 using the examples of cataphoric construc-
tions and anaphors as arguments of object con-
trol verbs. Analogous derivations capture ditransi-
tive verbs in which the reflexive can be coindexed
with the subject or object, though space limita-
tions preclude their inclusion. To handle non-local
cases, we avail ourselves of a version of delayed
locality, originally proposed by Chiang and Schef-
fler (2008), and in Section 4 we show how de-
layed locality accounts for syntactic constructions
such as anaphors as arguments of raising verbs
and Exceptional Case Marking (ECM) verbs. The
analysis also accounts for anaphors in picture-DPs
and quantificational picture-DPs, anaphors in ad-
juncts, and sentences with multiple anaphors.

1.1 Synchronous tree adjoining grammar

We use set-local feature-structure-based syn-
chronous MCTAG, supplemented with a version
of delayed locality for non-local anaphoric cases.
Nodes in syntactic trees are notated with syntac-
tic categories and in semantic trees with semantic
types, using the notation 〈σ, τ〉 to express func-

tion types from σ to τ , or the abbreviated ver-
sion στ where no ambiguity results. The feature-
structure-based synchronous MCTAG framework
we use is exemplified in Figure 1. Elementary tree
sets for DPs, as in (a) and (b), contain multiple
syntactic trees and semantic trees, two of each,
independently motivated for handling quantifica-
tion and topicalization. The syntax has a TP aux-
iliary tree (allowing for frontings such as topical-
ization, following Nesson and Shieber (2007)) in
addition to the “in situ” DP tree; the synchronous
semantics has a t auxiliary tree (used for quantifier
scope, following Shieber and Schabes (1990) and
Williford (1993)) and an e-rooted reference tree.
Non-quantificational DPs like Noah have a degen-
erate scope tree t∗ that does not modify the derived
tree, so merely serves as a placeholder to maintain
structural consistency.

Syntactic nodes have an associated feature
structure containing finite feature values. The fea-
ture structure must unify with the feature struc-
ture of any substituting or adjoining node in or-
der for the operation to take place; if any fea-
tures conflict, the unification fails (Vijay-Shanker
and Joshi, 1988). In particular, we can mark DP
substitution nodes in their feature structure with
their case requirements (which can be thought of
as a manifestation of their being assigned abstract
Case (Polinsky and Preminger, 2014)), while lex-
ical item trees rooted at DP that exhibit morpho-
logical case will have that case depicted in the
root feature structure as well. This built-in feature
checking system will play a role in several aspects
of our STAG framework, including matching phi-
features (number, person, gender) of anaphors and
antecedents, making c-command and dominance
constraints unnecessary, and accounting for cat-
aphoric constructions. For reasons of readability
and succinctness, we do not show feature struc-
tures explicitly in subsequent examples.

Reciprocals reciprocate over plural entities. For
our purposes, we do not require a sophisticated se-
mantic notion of plurality (such as Scha (1981),
van Bentham (1989), or Westerståhl (1989)). We
notate the type of sets of entities of type σ as σ
and the plural entity combining a and b as a + b;
we further optionally identify singular entities a
with singleton plural entities {a}. Plural DPs will
sometimes denote plural entities (like Noah and
Emma of type e), and certain verbs (of type et, like
met) will require plural entities. Certain quantified

32



(a) TP∗ DP

Noah




cat : DP

agr :



num : sg
pers : 3rd
gend : masc





 t∗ e

noah

(b) TP∗ DP

her




cat : DP
case : acc

agr :



num : sg
pers : 3rd
gend : fem





 t∗ e

her

(c) TP 1 2

T′

VP

DP↓ 2 [case : acc]V

saw

T

DP↓ 1 [case : nom]

t 1 2

e↓ 1et

e↓ 2eet

saw

(d) saw

hernoah

1 2
(e) T

T′

VP

DP

her

V

saw

T

DP

Noah

t

e

noah

et

e

her

eet

saw

Figure 1: Elementary STAG trees and feature
structures for (a) DPs, (b) pronouns, and (c) transi-
tive verbs; (d) is the derivation tree and (e) the de-
rived trees for the simple transitive sentence Noah
saw her.

DPs (like everyone) may involve both interpreta-
tions – the quantifier meaning (as in everyone left)
of type 〈et, t〉 and the plural interpretation (as in
everyone met) of type e.

Nodes that can undergo operations are desig-
nated by links, shown in the trees with numbered
boxes ( 1 ), that ensure the syntactic and seman-
tic trees accept synchronous operations at corre-
sponding nodes, as in (c). Multiple boxes marked
with the same numbered link specify the sites of
operation of a set of trees.

1.2 Previous work on reflexives in TAG

In the literature, there are six main applica-
tions of TAG to capture anaphors. Three are
non-synchronous, building a semantic representa-
tion using recursive feature structures (Ryant and
Scheffler, 2006; Kallmeyer and Romero, 2007;
Champollion, 2008),2 which can be more pow-

2Steedman (2000) also provides an account for binding
but uses a combination of LTAG and combinatory categorical

erful than TAG (indeed Turing-equivalent under
some usages), and look at both reflexives and re-
ciprocals. The other three use the more restric-
tive STAG framework for both the syntax and se-
mantics but only look at reflexives (Nesson, 2009;
Storoshenko et al., 2008; Frank, 2008).

For the non-synchronous TAG approaches,
Ryant and Scheffler (2006) employ tree-local mul-
ticomponent lexicalized TAG (LTAG) with seman-
tic feature structures and a flat compositional se-
mantics for each elementary tree. The multicom-
ponent tree set for reflexives and reciprocals con-
tains two trees: an NP tree with the lexical anaphor
that is c-commanded by a degenerate NP tree
that composes with its antecedent through flexible
composition (FC) (Joshi et al., 2003), an extension
of LTAG. This approach captures reflexives and
reciprocals but requires extra subject intervention
and c-command constraints to prevent overgener-
ation.

Kallmeyer and Romero (2007) use a similar ap-
proach, but replace Ryant and Scheffler’s degen-
erate anaphor NP tree with a degenerate VP tree.
This change does not require the FC extension
(except for adjuncts) or stronger c-command con-
straints, but does require a dominance relation be-
tween the degenerate VP and the lexical anaphor
as well as a procedure for passing antecedent fea-
tures. Only with both of these additions do the lo-
cality and c-command restrictions of classic bind-
ing theory (Chomsky, 1981) then follow.

Instead of compositional semantics, Champol-
lion (2008) uses the feature-based LTAG formal-
ism of Vijay-Shanker (1987) extended by the use
of lists as values of features, as in HPSG (Pol-
lard and Sag, 1992), and list operations, such as
appending lists together. Champollion (2008) im-
proves upon the previous non-synchronous ap-
proaches in several ways, such as by capturing
ECM verbs, adjuncts, and all conditions in binding
theory with no further additions to the framework;
however, the analysis does not include reciprocals
and requires recursive features.

For the STAG approaches, Nesson (2009) uses
MCTAG but extends the lambda calculus notation
for semantic representation with de Bruijn indices.
The de Bruijn notation uses integer indices – in-
stead of explicitly-named free variables – to indi-
cate how many enclosing λ terms away the vari-
able’s binding λ is. Although this approach pro-

grammar (CCG).

33



vides more flexibility for locality constraints and
can successfully account for a variety of reflex-
ive sentences, it does not allow the differentiation
needed for reciprocals because the indices allow
specification only of coindexation.

Storoshenko et al. (2008) take a different MC-
TAG approach by positing three separate reflexive
syntactic trees, whose use depends on the reflex-
ive’s binding option as a verbal argument. The
semantics relies on dynamically varying what is
a function and what is an argument. For a sen-
tence containing a reflexive, the reflexive plays the
function role, taking its sister node as its argument;
however, if an entity fills that position in the sen-
tence instead of a reflexive, the entity would be
an argument and its sister node the function. Al-
though the analysis captures ditransitives, raising
verbs, and ECM verbs, why these three reflexive
tree sets are the (only) possible options and why
each reflexive has its specific semantic type is not
well motivated.

It may be possible to extend this analysis to
reciprocals: following reflexives, the semantics
could be separately defined for each case as
needed and agreement could be handled in the
syntax through a clever use of features. However,
this approach seems to lack a unifying story be-
hind the choice of tree set configuration. We thus
turn to the final application of STAG to reflexives,
which we show can be extended to both reflexives
and reciprocals in a more straightforward way.

1.3 The analysis of Frank (2008)

Frank (2008) uses tree-local MCTAG to capture
simple reflexive cases but does not attempt to cap-
ture reciprocals and does not definitively extend
the analysis to more complicated cases, such as
raising and ECM verbs. The analysis is illustrated
in Figure 2 for the sentence in (2).3

3We have diverged from Frank’s elementary trees (Frank,
2008, Figure 1) slightly, modifying them by clarifying and
making explicit two notational issues, according to our un-
derstanding. First, we include an explicit t∗ tree in the tree
set for John based on the 1 link at the root of the reflexive
tree, which we assume indicates the adjunction of a John tree
at the same time its e-rooted tree substitutes. Second, we
removed the 2 links on the NP himself and on the second se-
mantic x variable tree (see Frank’s Figure 1(a)) because they
seem to serve as labels, rather than as operable sites like the
1 links. We leave the 2 link on the root of the semantic verb
tree (even though it does not correspond to an explicit adjoin-
ing tree) because it may be intended for an extra scope tree
in the reflexive tree set; however, it is unclear how that extra
scope tree would fit into the included dominance relations so
we do not explicitly add it to the reflexive tree set here.

(a) S

VP

NP↓ 2V

sees

NP↓ 1

t 1 2

et

e↓ 2eet

sees

e↓ 1

(b) NP

John

t∗ e

john

(c) NP↓ 1 NP

himself

CC

t 1

et

t∗λx

e↓ 1

e

x
DOM

e

x
DOM

CC

(d) sees

himself

john

1

1 2

(e) S

VP

NP

himself

V

sees

NP

John

t

et

t

et

e

x

eet

sees

e

x

λx

e

john

Figure 2: Frank’s elementary trees for (a) transi-
tive verbs, (b) type e NPs, and (c) reflexives; (d) is
the derivation tree and (e) the derived trees for sen-
tence (2). Extra constraints are indicated with la-
beled arrows: CC for c-command, DOM for dom-
inance.

(2) John sees himself.

Frank’s analysis is novel in two ways: the
structure of the derivation and the use of multi-
ple links. First, derivations of reflexive sentences
(Figure 2(d)) diverge from derivations of non-
reflexive sentences (Figure 1(d)). The derivation
tree in Figure 2(d) has the antecedent (subject) first
substitute into the reflexive (object), which then as
a whole composes into the verb tree at the respec-
tive links.4

The structure of this derivation is unusual in the
TAG literature in not paralleling the non-reflexive
derivation tree, in which the subject and object
separately substitute directly into the verb tree.
However, there may be cross-linguistic evidence
for this type of derivation. In languages such
as Finnish, which represent reflexivization with a
verbal affix that detransitivizes the verb into an
intransitive verb, Büring (2005) explains that this
verbal reflexive marker is not a syntactic argument

4Ryant and Scheffler (2006) use a similar derivation tree
in that the antecedent composes with the anaphor before both
compose into the verb tree, but their use of flexible compo-
sition allows composition of trees in either direction, so the
derivation tree is not actually equivalent.

34



or clitic, providing support for a derivation tree in
which the verb accepts just one argument, the sub-
ject. An analysis of clitics along these lines may
be apposite as well.

Second, Frank’s analysis crucially relies on al-
lowing a tree set to operate at multiple links. The
reflex of this innovation is the multiple links dec-
orating edges in the derivation tree, where in stan-
dard STAG, only a single link would appear. In
particular, Frank’s derivation tree in (d) portrays
the reflexive himself going into the verb tree at
both links 1 and 2 . Implicitly, Frank is appeal-
ing to a novel generalization of MCTAG, in which
multiple components of a tree set can apply at mul-
tiple links.

Frank’s approach accounts for simple reflex-
ive antecedents, quantifier-bound reflexives, re-
flexives embedded in a picture-DP, and reflexives
occurring as the argument of a ditransitive predi-
cate. However, the approach does not directly ex-
tend to reciprocals.

Unlike reflexives, reciprocals are not simply
inherently coindexed with their antecedent since
the antecedent must be distributed into its atomic
parts. Frank’s approach as it stands cannot ac-
count for this. The semantic trees contain only one
binder of two instantiations of the same variable
and are thus inherently detransitivizing. By main-
taining separate binders of the two argument po-
sitions, our modifications below not only account
for both reflexives and reciprocals, but also do so
in a unified and simplified way.

2 Our analysis

In this section, we explain how our analysis builds
directly on Frank’s. We adjust the analysis to be in
line with the framework outlined in Section 1.1.

2.1 Frank’s analysis revised

As in Frank’s analysis, the reflexives will use both
subject and object links, and thus will be com-
posed of four syntactic and four semantic trees.
The tree set follows Frank’s approach with only
minor changes, as shown in Figure 3(a). In the
syntactic tree set are two TP∗ placeholder trees,
one for each of the DP trees. The first DP tree is
degenerate, accepting the antecedent by substitu-
tion, and the second contains the reflexive. The
semantic tree set contains a t auxiliary scope tree
for each of the e-rooted variables. In the first scope
tree, a reflexive operator REFL (described shortly)

has been added as another binary branch in the el-
ementary reflexive tree, along with two binding λ
terms (instead of just one). The e-rooted variable
trees correspondingly contain two distinct vari-
ables. As shown in (b), we use the same derivation
tree as Frank, also taking advantage of the multi-
link extension of MCTAG.

As described in Section 1.1, our framework
makes use of case and feature unification for pro-
nouns, which can additionally ensure the cor-
rect configuration of lexical substitution of the
antecedent and reflexive, thus making the c-
command (CC) and dominance (DOM) con-
straints redundant. Eliminating these extra con-
straints greatly simplifies the analysis by relying
on the inherent features of the formalism instead
of on externally-added restrictions.

On the semantics side, the reflexive operator
REFL serves as a formalization of the reflexive re-
lation. For the purposes of this paper, in which we
focus on the distributive reflexive reading of plu-
ral reflexives, the REFL operator is given as in (3).
Abstracting out the reflexive operator allows flexi-
bility in its semantic definition and comparison to
alternatives (such as the RECP operator we intro-
duce shortly).

(3) REFL ≡ λR . λZ . ∀x : x ∈ Z .
∀y : y ∈ Z ∧ y = x . R y x

Informally speaking, the operator holds of a binary
relation R and an antecedent set Z just in case ev-
ery pair x and y in the set Z, where x and y are not
distinct, are in the relation R.5 (The benefit of the
apparent redundancy of the two universal quanti-
fiers will become evident shortly.)

The STAG derivation corresponding to sentence
(1a) proceeds as in Figure 3. The resulting logical
form can be simplified as shown in (4), demon-
strating that the distributive reading is appropri-
ately captured.

(4) REFL (λa . λb . saw a b) (n+ e)

= (λR . λZ . ∀x : x ∈ Z.
∀y : y ∈ Z ∧ y = x . R y x)

(λa . λb . saw a b) (n+ e)

= ∀x : x ∈ (n+ e).
∀y : y ∈ (n+ e) ∧ y = x . saw y x

= saw n n ∧ saw e e

5This definition of REFL can also account for singular an-
tecedents by interpreting them as singleton plural entities.

35



(a) TP∗ 1 DP↓ 1 TP∗ DP

themselves
t 1

e↓ 1et

eet

et

t∗λb

λa

〈eet, et〉

REFL

e

b

t∗ e

a

(b)

saw

themselves

noah+emma
1

1 2

(c)
TP

T′

VP

DP

themselves

V

saw

T

DP

Noah&Emma

t

e

n+ e

et

eet

et

t

e

b

et

e

a

eet

saw

λb

λa

〈eet, et〉

REFL

Figure 3: (a) Elementary tree set for a reflexive;
(b) is the derivation tree and (c) the derived trees
for sentence (1a).

2.2 Comparison of analyses
There are four differences between our reflexive
analysis and Frank’s.

1. We use extra placeholder trees to maintain a
parallel structure among all DPs. The extra
trees are necessitated on the syntax side by
the DP tree used in the Nesson and Shieber
(2007) fronting analysis and on the semantics
side by the quantifier scope tree. This modi-
fication is not essential to our reflexive anal-
ysis as it arises solely from our incorporation
of the independent fronting analysis (as de-
scribed in Section 3.1).

2. We eliminate binding constraints like c-
command and dominance, which permits the
flexibility needed for cataphora, since these
relations are already captured through case
checking.

3. We employ two bindings of distinct variables
instead of one binding of a single variable
twice, as this allows the appropriate grain
needed for reciprocals.

4. We abstract away the reflexivity notion from
Frank’s trees with an operator REFL, which

generalizes to also be compatible with recip-
rocals using a parallel operator RECP, as de-
scribed in the next section.

2.3 Adding reciprocals

Using an operator for both reflexives and recipro-
cals captures their underlying similarities, creat-
ing a unified account of both. It seems logical to
group reflexives and reciprocals together syntac-
tically, as structurally interchangeable construc-
tions, and distinguish between them semantically,
as differing with respect solely to distribution over
the antecedent. This is the motivation behind our
proposed approach.

In order to incorporate reciprocals into the
STAG framework, we simply add the reciprocal
counterparts in the same place as reflexives in the
multicomponent tree set for reflexives, as in Fig-
ure 4. On the syntax side, we replace the lexi-
cal item themselves with each other and on the
semantics side, we replace the reflexive operator
(REFL) with a reciprocal operator (RECP). We in-
dicate the shared structure by placing correspond-
ing components of reflexives and reciprocals in the
same node as interchangeable options.

An attractive property of this analysis is that
simply by replacing the = in the semantic repre-
sentation of REFL with 6=, we get the formalization
of the reciprocal relation RECP:

(5) RECP ≡ λR . λZ . ∀x : x ∈ Z .
∀y : y ∈ Z ∧ y 6= x . R y x

Similarly to REFL, the RECP operator holds of a
binary relation R and an antecedent set Z just in
case every pair x and y in the set Z, where x and
y are distinct, are in the relation R. For the recip-
rocal version of sentence (1a), in (1b), RECP pro-
vides the correct (and only) reading – the strong
reciprocity reading – that Noah saw Emma and
Emma saw Noah. The reduction proceeds in paral-
lel fashion to that of reflexives. Comparing these
trees to Frank’s trees in Figure 2, the reader can
confirm that the derivation tree is identical and
both methods produce the same result (up to the
modification in the logical form). With this exam-
ple as a foundation, we now show the utility of this
representation for a range of increasingly complex
reflexive and reciprocal phenomena.

36



TP∗ 1 DP↓ 1 TP∗ DP

themselves/
each other

t 1

e↓ 1et

eet

et

t∗λb

λa

〈eet, et〉

REFL/RECP

e

b

t∗ e

a

Figure 4: Anaphor elementary tree set for both a
reflexive and a reciprocal

3 Applications

The analysis essentially unchanged accounts for
various reflexive and reciprocal phenomena, in-
cluding cataphora, anaphors with object control
verbs, and anaphors as arguments of ditransitive
verbs. The analysis also has the potential to apply
to reflexives and reciprocals in other languages,
but we leave this extension for future work. We
show here only the analysis for cataphora and
anaphors with object control verbs due to space
constraints, but the other applications follow simi-
larly.

3.1 Cataphora

Cataphora, such as in (6a), would appear to
present a problem for analyses requiring c-
command constraints, as the required c-command
relation does not appear to hold overtly in the
derived tree. Our approach however is com-
pletely consistent with the account of topicaliza-
tion of Nesson and Shieber (2007), by treating the
anaphor as a topicalized item.6 We illustrate this
derivation in Figure 5 for the simplified cataphoric
reciprocal sentence in (6b).7

(6) a. (Noah and Emma like many people, but)
each other, they can’t stand.

b. Each other, Noah and Emma saw.

The syntactic tree set for the reflexive, shown in
Figure 5(a), simply reflects topicalization of the

6In this paper, we focus on the core anaphoric cases,
excluding logophoric (point of view or emphatic/focus)
anaphors, as discussed in, for instance, Reinhart and Reu-
land (1993). For cataphora in particular, we only consider
examples in which the anaphor stands alone as a topicalized
item, and do not address anaphors embedded in topicalized
adjuncts or adverbial phrases.

7Cataphoric reflexives follow similarly so are not shown.

(a) TP∗ 1 DP↓ 1 TP

T′

TP∗T

DP

each other

DP

�

(b) saw

each other

noah+emma
1

1 2

(c) TP

T′

TP

T′

VP

DP

�

V

saw

T

DP

Noah&Emma

T

DP

Each other

Figure 5: (a) Syntactic elementary trees for a cat-
aphoric (topicalized) reflexive; (b) is the derivation
tree and (c) the syntactic derived tree for sentence
(6b)

reflexive following directly the topicalization anal-
ysis of Nesson and Shieber (2007): the TP auxil-
iary tree now contains the lexical reflexive and the
corresponding DP tree contains the empty string;
the semantics side remains unchanged so is not
shown. The derivation proceeds as usual.

Using a feature-checking system instead of
binding principles provides the flexibility needed
for capturing cataphora without additional ma-
chinery because the topicalized anaphor, instead
of the empty DP, receives accusative case and thus
no feature conflicts arise.

3.2 Anaphors with object control verbs
Syntactic constructions with object control verbs,
such as persuade in (7), follow directly from our
analysis as put forth so far.

(7) Noah and Emma persuaded themselves/each
other to be happy.

Object control verbs have three arguments:
an agent (Noah and Emma), a theme (them-
selves/each other), and an open proposition (to
be happy). This configuration is represented in
the elementary object control verb tree set in Fig-
ure 6(a). The lower verb cannot have its own sub-
ject, so the persuaded tree set contains a DP tree
in the syntax and a corresponding variable tree in
the semantics that substitute into the subject po-
sition of the lower verb. The derivation proceeds
according to the derivation tree in (c), in which
the antecedent composes into the anaphor tree set,

37



(a)

TP 1 2

T′

VP

TP∗DP↓ 2V

persuaded

T

DP↓ 1

DP

PRO

t 1 2

e↓ 1et

t

e↓ 2et

e

z

eet

t∗〈t, eet〉

persuaded

λz e

z

(b) TP 1

T′

VP

AdjP

happy

V

be

T

to

DP↓ 1

t 1

e↓ 1et

to-be-happy

(c) to-be-happy

persuaded

themselves/
each other

noah+emma
1

1 2

1

Figure 6: Elementary trees for (a) object control
verbs and (b) non-finite predicates with appropri-
ate links; (c) is the derivation tree. The derived
tree pair is provided in Figure 8 in the appendix.

which then as a whole composes into the object
control tree set in a tree-local fashion. This tree
set then composes into the non-finite verb tree.

4 Extensions with delayed locality

Although a wide variety of interactions between
anaphors and other constructions are captured by
this analysis, there is an entire class of cases that
are not expressible under the set-local view of
STAG derivation we have been presupposing. In
this section, we extend the derivation notion to al-
low for delayed locality, first proposed by Chi-
ang and Scheffler (2008). Delayed locality re-
laxes the set-locality constraint to allow a delay
in composition. Two trees in a multicomponent
tree set may compose into (any number of) other
trees before eventually composing into the same
elementary tree.8 This differs from the more ex-
pressive non-local MCTAG in requiring that the
members eventually compose into the same ele-
mentary tree (Chiang and Scheffler, 2008). De-
layed locality has permitted analyses of non-local
right-node raising (Han et al., 2010), bound vari-

8Storoshenko and Han (2013) propose a slightly different
definition of a delay than Chiang and Scheffler (2008); we
postpone committing to a particular definition to future work,
but recognize that overgeneration is a concern, since without
further constraint our analysis could allow, for instance,

(8) * Noahi thinks that Emma likes himselfi.

able pronouns (Storoshenko and Han, 2010), and
clitic climbing (Chen-Main et al., 2012).

With this extension, our analysis allows for
anaphors in a variety of syntactic constructions, in-
cluding picture-DPs, quantificational picture-DPs,
adjuncts, raising verbs, ECM verbs, and multiple
anaphors in the same sentence, but due to space
limitations we again demonstrate only for raising
and ECM verbs.

4.1 Anaphors with raising verbs

In contrast to object control verbs, raising verbs,
such as seem in (9), do not have an inherent subject
argument; therefore, the usual representation of
seem in the TAG literature (with minor variations)
does not contain a DP subject node, as shown in
Figure 7(b).

(9) Noah and Emma seem to themselves/each
other to be happy.

Use of the present anaphor analysis with this con-
figuration violates set-locality because the anaphor
would compose into the raising verb tree, but there
would not be a position for the antecedent to also
compose.9 However, the relaxation provided by
delayed locality allows the lexical anaphor part
of the tree set to compose into the raising verb
through delay, which then composes into the lower
clause verb trees at link 3 , while the antecedent
part is not delayed and composes directly into the
lower clause verb trees, as depicted in Figure 7(c).
In order to ensure that all variables are properly
bound, the semantic predicate to-be-happy tree in
Figure 7(a) has the root node split into an upper
t 1 2 node and a lower t 3 node to ensure that the
REFL/RECP tree binds the a variable in the raising
verb tree.

4.2 Anaphors with ECM verbs

ECM (or “subject-to-object raising”) verbs, as in
(10), have two arguments: a subject (Noah and
Emma) and a proposition (themselves/each other
to be happy). Based on these structural properties,
the elementary tree for an ECM verb contains a
subject position and adjoins into a predicate to fill
its proposition argument, as shown in Figure 7(d).

9An alternative local derivation would be to simply in-
clude a subject position in the elementary raising verb tree.
Although this solution solves the locality issue, it has impli-
cations for the treatment of raising constructions in general
so we do not pursue it here.

38



(a) TP 1 2

T′ 3

VP

AdjP

happy

V

be

T

to

DP ↓ 1

t 1 2

t 3

e↓ 1et

to-be-happy

(b) T′ 2

VP

VP

T′∗PP

DP↓ 2P

to

V

seem

T

t 2

e↓ 2et

t∗〈t, et〉

seem-to

(c) to-be-happy

seem-to

themselves/
each other

noah+emma
1

2

3

1

(d) TP 1

T′

VP

TP∗V

want

T

DP↓ 1

t 1

e↓ 1et

t∗〈t, et〉

want

(e) to-be-happy

want

themselves/
each other

noah+emma
1

1

2

1

Figure 7: Elementary trees for (a) non-finite pred-
icates with appropriate links and configuration for
variable binding and (b) raising verbs with an
anaphor object; (c) is the derivation tree with de-
layed locality for sentence (9); (d) elementary
trees for ECM verbs and (e) is the derivation tree
with delayed locality for sentence (10).

(10) Noah and Emma want themselves/each other
to be happy.

In contrast to the previous example, for ECM
verbs the antecedent part of the anaphor tree set
is the delayed part, first composing into the ECM
verb trees and then composing into the non-finite
verb trees at link 2 . The derivation tree in (e) re-
flects this difference through the links shown.

For cases in English with multiple (surface ac-
cusative) objects, such as in the ECM construc-
tion in (11a), appealing to case is not sufficient
to account for the ungrammaticality of (11b). A
more nuanced case analysis, in which the equa-
tional constraint on case (that the antecedent’s case
is nominative and the anaphor’s case is accusative)
is replaced by an inequational constraint over a
set of cases ordered by obliqueness (that the an-

tecedent’s case is less oblique than the anaphor’s
case) suffices to cover these as well, predicting the
grammaticality of (11a) and ungrammaticality of
(11b).

(11) a. Emma wants him to love himself.

b. * Emma wants himself to love him.

5 Conclusion

In this paper, we have shown how the formalism
of STAG can not only handle both reflexives and
reciprocals, but also provide a unified account of
both, founded on the idea that these anaphors share
a syntactic distribution but differ slightly and uni-
formly in their semantics. To accomplish this,
we provide STAG tree sets for reflexives and re-
ciprocals that differ only in their lexical presen-
tation and their interpretation through operators
REFL and RECP that capture the parallel seman-
tic nature of reflexives and reciprocals. It is, to
our knowledge, the first STAG analysis to provide
for reciprocals as well as reflexives. The analysis
is consistent with earlier STAG analyses account-
ing for such syntactic phenomena as topicalization
and semantic phenomena as quantification, while
building on the previous STAG account by Frank
(2008) of reflexives alone, making anaphoric no-
tions more explicit, eliminating the need for c-
command and dominance constraints, and gener-
alizing the analysis to capture reciprocals as well.

Areas for future work include investigating ap-
propriate further limits on delayed locality to pre-
vent overgeneration, expanding our preliminary
application of the operators crosslinguistically,
and refining the operators’ semantic definitions to
account for additional anaphoric interpretations.

Acknowledgments

We wish to thank Gennaro Chierchia, Robert
Frank, and Jennifer Hu for valuable conversations
on the topic of this paper and the anonymous re-
viewers for their helpful comments.

References
Tonia Bleam. 2000. Clitic climbing and the power of

tree adjoining grammar. In Anne Abeillé and Owen
Rambow, editors, Tree Adjoining Grammars: For-
malisms, Linguistic Analysis, and Processing, CSLI
Publications, pages 193–219.

Daniel Büring. 2005. Binding Theory. Cambridge
University Press, UK.

39



Lucas Champollion. 2008. Binding theory in LTAG.
In Proceedings of the Ninth International Work-
shop on Tree Adjoining Grammar and Related For-
malisms (TAG+9). Tübingen, Germany, pages 1–8.
http://aclweb.org/anthology/W08-2301.

Joan Chen-Main, Tonia Bleam, and Aravind K. Joshi.
2012. Delayed tree-locality, set-locality, and clitic
climbing. In Proceedings of the 11th International
Workshop on Tree Adjoining Grammar and Related
Formalisms (TAG+11). Paris, France, pages 1–9.
http://aclweb.org/anthology/W12-4601.

David Chiang and Tatjana Scheffler. 2008. Flex-
ible composition and delayed tree-locality. In
Proceedings of the Ninth International Workshop
on Tree Adjoining Grammars and Related For-
malisms (TAG+9). Association for Computational
Linguistics, Tübingen, Germany, pages 17–24.
http://aclweb.org/anthology/W08-2303.

Noam Chomsky. 1981. Lectures on Government and
Binding. Dordrecht: Foris.

Mary Dalrymple, Makoto Kanazawa, Yookyung Kim,
Sam McHombo, and Stanley Peters. 1998. Re-
ciprocal expressions and the concept of reci-
procity. Linguistics and Philosophy 21(2):159–210.
https://doi.org/10.1023/A:1005330227480.

Robert Frank. 2008. Reflexives and TAG seman-
tics. In Proceedings of the Ninth International
Workshop on Tree Adjoining Grammar and Re-
lated Formalisms (TAG+9). Association for Compu-
tational Linguistics, Tübingen, Germany, pages 97–
104. http://aclweb.org/anthology/W08-2313.

Chung-hye Han. 2006. Pied-piping in relative
clauses: Syntax and compositional semantics based
on synchronous tree adjoining grammar. In
Proceedings of the Eighth International Work-
shop on tree Adjoining Grammars and Related
Formalisms (TAG+8). Association for Computa-
tional Linguistics, Sydney, Australia, pages 41–48.
http://aclweb.org/anthology/W06-1506.

Chung-hye Han and Nancy Hedberg. 2006. A tree ad-
joining grammar analysis of the syntax and seman-
tics of it-clefts. In Proceedings of the Eighth In-
ternational Workshop on tree Adjoining Grammars
and Related Formalisms (TAG+ 8). Association for
Computational Linguistics, Sydney, Australia, pages
33–40. http://aclweb.org/anthology/W06-1505.

Chung-hye Han, David Potter, and Dennis Ryan
Storoshenko. 2010. Non-local right-node raising:
An analysis using delayed tree-local mc-tag. In
Proceedings of the 10th International Workshop
on Tree Adjoining Grammars and Related For-
malisms (TAG+10). Linguistics Department, Yale
University, New Haven, Connecticut, pages 9–16.
http://aclweb.org/anthology/W10-4402.

Aravind K. Joshi, Laura Kallmeyer, and Maribel
Romero. 2003. Flexible composition in LTAG:

Quantifier scope and inverse linking. In Proceedings
of the International Workshop on Compositional Se-
mantics. Tilburg, The Netherlands.

Laura Kallmeyer and Maribel Romero. 2007. Reflex-
ives and reciprocals in LTAG. In Harry Bunt, Jeroen
Geertzen, Elias Thijsse, and Amanda Schiffrin, edi-
tors, Proceedings of the Seventh International Work-
shop on Computational Semantics ICWS-7. Tilburg,
pages 271–282.

D. Terence Langendoen. 1978. The logic of
reciprocity. Linguistic Inquiry 9(2):177–197.
http://www.jstor.org/stable/4178051.

Rebecca Nesson. 2009. Synchronous and Multicom-
ponent Tree-Adjoining Grammars: Complexity, Al-
gorithms and Linguistic Applications. Ph.D. thesis,
Harvard University.

Rebecca Nesson and Stuart M. Shieber. 2006. Simpler
TAG semantics through synchronization. In Pro-
ceedings of the 11th Conference on Formal Gram-
mar. Malaga, Spain. https://perma.cc/JM6Y-6QBY.

Rebecca Nesson and Stuart M. Shieber. 2007. Ex-
traction phenomena in synchronous TAG syn-
tax and semantics. In Proceedings of SSST,
NAACL-HLT 2007 / AMTA Workshop on Syntax
and Structure in Statistical Translation. Associa-
tion for Computational Linguistics, pages 9–16.
http://aclweb.org/anthology/W07-0402.

Maria Polinsky and Omer Preminger. 2014. Case and
grammatical relations. In Andrew Carnie, Dan Sid-
diqi, and Yosuke Sato, editors, Routledge Handbook
of Syntax, Routledge, chapter 8.

Carl Pollard and Ivan A. Sag. 1992. Head-driven
Phrase Structure Grammar. University of Chicago
Press.

Tanya Reinhart and Eric Reuland. 1993. Re-
flexivity. Linguistic Inquiry 24(4):657–720.
http://www.jstor.org/stable/4178836.

Neville Ryant and Tatjana Scheffler. 2006. Binding of
anaphors in LTAG. In Proceedings of the Eighth In-
ternational Workshop on Tree Adjoining Grammar
and Related Formalisms (TAG+8). Association for
Computational Linguistics, Sydney, Australia, pages
65–72. http://aclweb.org/anthology/W06-1509.

Remko Scha. 1981. Distributive, collective and cu-
mulative quantification. In J. A. G. Groenendijk,
T. M. V. Janssen, and M. B. J. Stokhof, editors, For-
mal Methods in the Study of Language, Part 2, Math-
ematisch Centrum, Amsterdam, pages 483–512.

Stuart M. Shieber and Yves Schabes. 1990. Syn-
chronous tree-adjoining grammars. In Proceedings
of the 13th International Conference on Compu-
tational Linguistics. Helsinki, Finland, volume 3,
pages 253–258. http://aclweb.org/anthology/C90-
3045.

40



Mark Steedman. 2000. Implications of binding for lex-
icalized grammars. Tree Adjoining Grammars: For-
malisms, Linguistic Analysis, and Processing pages
283–301.

Dennis R. Storoshenko, Chung-hye Han, and David
Potter. 2008. Reflexivity in English: an STAG anal-
ysis. In Proceedings of the Ninth International
Workshop on Tree Adjoining Grammars and Re-
lated Formalisms (TAG+9). Association for Com-
putational Linguistics, Tübingen, Germany, pages
149–156. http://aclweb.org/anthology/W08-2320.

Dennis Ryan Storoshenko and Chung-hye Han. 2010.
Binding variables in english: An analysis using de-
layed tree locality. In Proceedings of the 10th In-
ternational Workshop on Tree Adjoining Grammars
and Related Formalisms (TAG+10). Linguistics De-
partment, Yale University, New Haven, Connecticut,
pages 143–150. http://aclweb.org/anthology/W10-
4418.

Dennis Ryan Storoshenko and Chung-hye Han. 2013.
Using synchronous tree adjoining grammar to model
the typology of bound variable pronouns. Jour-
nal of Logic and Computation 25(2):371–403.
https://doi.org/10.1093/logcom/exs064.

Johan van Bentham. 1989. Polyadic quanti-
fiers. Linguistics and Philosophy 12(4):437–464.
https://doi.org/10.1007/BF00632472.

K. Vijay-Shanker. 1987. A study of Tree Adjoining
Grammars. Ph.D. thesis, University of Pennsylva-
nia.

K. Vijay-Shanker and Aravind K. Joshi. 1988. Fea-
ture structures based tree adjoining grammars.
In Coling Budapest 1988 Volume 2: Interna-
tional Conference on Computational Linguistics.
http://aclweb.org/anthology/C88-2147.

David Jeremy Weir. 1988. Characterizing mildly
context-sensitive grammar formalisms. Ph.D. the-
sis, University of Pennsylvania.

Dag Westerståhl. 1989. Quantifiers in formal and nat-
ural languages. In D. Gabbay and F. Guenthner,
editors, Handbook of Philosophical Logic: Volume
IV: Topics in the Philosophy of Language, Springer
Netherlands, Dordrecht, pages 1–131.

Sean Michael Williford. 1993. Application of Syn-
chronous Tree-Adjoining Grammar to Quantifier
Scoping Phenomena in English. Bachelor’s the-
sis, Harvard College. http://nrs.harvard.edu/urn-
3:HUL.InstRepos:10951941.

41



A Appendix: Derived trees

The derived trees for the object control example (7) using the elementary trees and derivation of Figure 6
are provided in Figure 8.

TP

T′

VP

TP

T′

VP

AdjP

happy

V

be

T

to

DP

PRO

DP
themselves/
each other

V

persuaded

T

DP

Noah&Emma

t

e

n+ e

et

eet

et

t

e

b

et

t

e

a

et

e

z

eet

t

e

z

et

to-be-happy

〈t, eet〉

persuaded

λz

λb

λa

〈eet, et〉

REFL/RECP

Figure 8: Derived trees for the object control example (7)

42


