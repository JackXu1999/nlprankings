



















































Automatic Summarization of Student Course Feedback


Proceedings of NAACL-HLT 2016, pages 80–85,
San Diego, California, June 12-17, 2016. c©2016 Association for Computational Linguistics

Automatic Summarization of Student Course Feedback

Wencan Luo† Fei Liu‡ Zitao Liu† Diane Litman†
†University of Pittsburgh, Pittsburgh, PA 15260
‡University of Central Florida, Orlando, FL 32716

{wencan, ztliu, litman}@cs.pitt.edu feiliu@cs.ucf.edu

Abstract

Student course feedback is generated daily in
both classrooms and online course discussion
forums. Traditionally, instructors manually
analyze these responses in a costly manner. In
this work, we propose a new approach to sum-
marizing student course feedback based on
the integer linear programming (ILP) frame-
work. Our approach allows different student
responses to share co-occurrence statistics and
alleviates sparsity issues. Experimental results
on a student feedback corpus show that our
approach outperforms a range of baselines in
terms of both ROUGE scores and human eval-
uation.

1 Introduction

Instructors love to solicit feedback from students.
Rich information from student responses can reveal
complex teaching problems, help teachers adjust
their teaching strategies, and create more effective
teaching and learning experiences. Text-based stu-
dent feedback is often manually analyzed by teach-
ing evaluation centers in a costly manner. Albeit
useful, the approach does not scale well. It is there-
fore desirable to automatically summarize the stu-
dent feedback produced in online and offline envi-
ronments. In this work, student responses are col-
lected from an introductory materials science and
engineering course, taught in a classroom setting.
Students are presented with prompts after each lec-
ture and asked to provide feedback. These prompts
solicit “reflective feedback” (Boud et al., 2013) from
the students. An example is presented in Table 1.

Prompt
Describe what you found most interesting in today’s class

Student Responses
S1: The main topics of this course seem interesting and

correspond with my major (Chemical engineering)
S2: I found the group activity most interesting
S3: Process that make materials
S4: I found the properties of bike elements to be most

interesting
S5: How materials are manufactured
S6: Finding out what we will learn in this class was

interesting to me
S7: The activity with the bicycle parts
S8: “part of a bike” activity
... (rest omitted, 53 responses in total.)

Reference Summary
- group activity of analyzing bicycle’s parts
- materials processing
- the main topic of this course

Table 1: Example student responses and a reference summary
created by the teaching assistant. ‘S1’–‘S8’ are student IDs.

In this work, we aim to summarize the student re-
sponses. This is formulated as an extractive sum-
marization task, where a set of representative sen-
tences are extracted from student responses to form
a textual summary. One of the challenges of sum-
marizing student feedback is its lexical variety. For
example, in Table 1, “bike elements” (S4) and “bi-
cycle parts” (S7), “the main topics of this course”
(S1) and “what we will learn in this class” (S6) are
different expressions that communicate the same or
similar meanings. In fact, we observe 97% of the bi-
grams appear only once or twice in the student feed-
back corpus (§4), whereas in a typical news dataset
(DUC 2004), it is about 80%. To tackle this chal-
lenge, we propose a new approach to summarizing

80



student feedback, which extends the standard ILP
framework by approximating the co-occurrence ma-
trix using a low-rank alternative. The resulting sys-
tem allows sentences authored by different students
to share co-occurrence statistics. For example, “The
activity with the bicycle parts” (S7) will be allowed
to partially contain “bike elements” (S4) although
the latter did not appear in the sentence. Experi-
ments show that our approach produces better re-
sults on the student feedback summarization task in
terms of both ROUGE scores and human evaluation.

2 ILP Formulation

Let D be a set of student responses that consist ofM
sentences in total. Let yj ∈ {0, 1}, j = {1, · · · ,M}
indicate if a sentence j is selected (yj = 1) or not
(yj = 0) in the summary. Similarly, let N be the
number of unique concepts in D. zi ∈ {0, 1},
i = {1, · · · , N} indicate the appearance of concepts
in the summary. Each concept i is assigned a weight
of wi, often measured by the number of sentences or
documents that contain the concept. The ILP-based
summarization approach (Gillick and Favre, 2009)
searches for an optimal assignment to the sentence
and concept variables so that the selected summary
sentences maximize coverage of important concepts.
The relationship between concepts and sentences is
captured by a co-occurrence matrix A ∈ RN×M ,
where Aij = 1 indicates the i-th concept appears in
the j-th sentence, and Aij = 0 otherwise. In the lit-
erature, bigrams are frequently used as a surrogate
for concepts (Gillick et al., 2008; Berg-Kirkpatrick
et al., 2011). We follow the convention and use ‘con-
cept’ and ‘bigram’ interchangeably in the paper.

max
y,z

∑N
i=1wizi (1)

s.t.
∑M

j=1Aij yj ≥ zi (2)
Aij yj ≤ zi (3)∑M

j=1 ljyj ≤ L (4)
yj ∈ {0, 1}, zi ∈ {0, 1} (5)

Two sets of linear constraints are specified to en-
sure the ILP validity: (1) a concept is selected if and
only if at least one sentence carrying it has been se-
lected (Eq. 2), and (2) all concepts in a sentence will

be selected if that sentence is selected (Eq. 3). Fi-
nally, the selected summary sentences are allowed
to contain a total of L words or less (Eq. 4).

3 Our Approach

Because of the lexical diversity in student responses,
we suspect the co-occurrence matrix A may not es-
tablish a faithful correspondence between sentences
and concepts. A concept may be conveyed using
multiple bigram expressions; however, the current
co-occurrence matrix only captures a binary rela-
tionship between sentences and bigrams. For exam-
ple, we ought to give partial credit to “bicycle parts”
(S7) given that a similar expression “bike elements”
(S4) appears in the sentence. Domain-specific syn-
onyms may be captured as well. For example, the
sentence “I tried to follow along but I couldn’t grasp
the concepts” is expected to partially contain the
concept “understand the”, although the latter did not
appear in the sentence.

The existing matrixA is highly sparse. Only 2.7%
of the entries are non-zero in our dataset (§4). We
therefore propose to impute the co-occurrence ma-
trix by filling in missing values. This is accom-
plished by approximating the original co-occurrence
matrix using a low-rank matrix. The low-rankness
encourages similar concepts to be shared across sen-
tences. The data imputation process makes two no-
table changes to the existing ILP framework. First,
it extends the domain of Aij from binary to a con-
tinuous scale [0, 1] (Eq. 2), which offers a better
sentence-level semantic representation. The binary
concept variables (zi) are also relaxed to continuous
domain [0, 1] (Eq. 5), which allows the concepts to
be “partially” included in the summary.

Concretely, given the co-occurrence matrix A ∈
RN×M , we aim to find a low-rank matrix B ∈
RN×M whose values are close to A at the observed
positions. Our objective function is

min
B∈RN×M

1
2

∑
(i,j)∈Ω

(Aij −Bij)2 + λ ‖B‖∗ , (6)

where Ω represents the set of observed value po-
sitions. ‖B‖∗ denotes the trace norm of B, i.e.,
‖B‖∗ =

∑r
i=1 σi, where r is the rank of B and σi

are the singular values. By defining the following

81



projection operator PΩ,

[PΩ(B)]ij =
{
Bij (i, j) ∈ Ω
0 (i, j) /∈ Ω (7)

our objective function (Eq. 6) can be succinctly rep-
resented as

min
B∈RN×M

1
2
‖PΩ(A)− PΩ(B)‖2F + λ‖B‖∗, (8)

where ‖ · ‖F denotes the Frobenius norm.
Following (Mazumder et al., 2010), we optimize

Eq. 8 using the proximal gradient descent algorithm.
The update rule is

B(k+1) = proxλρk
(
B(k) +ρk

(
PΩ(A)−PΩ(B)

))
, (9)

where ρk is the step size at iteration k and
the proximal function proxt(B) is defined as
the singular value soft-thresholding operator,
proxt(B) = U · diag((σi − t)+) · V >, where
B = Udiag(σ1, · · · , σr)V > is the singular value
decomposition (SVD) of B and (x)+ = max(x, 0).

Since the gradient of 12‖PΩ(A)−PΩ(B)‖2F is Lip-
schitz continuous with L = 1 (L is the Lipschitz
continuous constant), we follow (Mazumder et al.,
2010) to choose fixed step size ρk = 1, which has a
provable convergence rate ofO(1/k), where k is the
number of iterations.

4 Dataset

Our dataset is collected from an introductory mate-
rials science and engineering class taught in a ma-
jor U.S. university. The class has 25 lectures and
enrolled 53 undergrad students. The students are
asked to provide feedback after each lecture based
on three prompts: 1) “describe what you found most
interesting in today’s class,” 2) “describe what was
confusing or needed more detail,” and 3) “describe
what you learned about how you learn.” These open-
ended prompts are carefully designed to encourage
students to self-reflect, allowing them to “recapture
experience, think about it and evaluate it” (Boud et
al., 2013). The average response length is 10±8.3
words. If we concatenate all the responses to each
lecture and prompt into a “pseudo-document”, the
document contains 378 words on average.

The reference summaries are created by a teach-
ing assistant. She is allowed to create abstract sum-
maries using her own words in addition to select-
ing phrases directly from the responses. Because
summary annotation is costly and recruiting anno-
tators with proper background is nontrivial, 12 out
of the 25 lectures are annotated with reference sum-
maries. There is one gold-standard summary per
lecture and question prompt, yielding 36 document-
summary pairs1. On average, a reference summary
contains 30 words, corresponding to 7.9% of the to-
tal words in student responses. 43.5% of the bigrams
in human summaries appear in the responses.

5 Experiments

Our proposed approach is compared against a range
of baselines. They are 1) MEAD (Radev et al.,
2004), a centroid-based summarization system that
scores sentences based on length, centroid, and
position; 2) LEXRANK (Erkan and Radev, 2004),
a graph-based summarization approach based on
eigenvector centrality; 3) SUMBASIC (Vanderwende
et al., 2007), an approach that assumes words oc-
curring frequently in a document cluster have a
higher chance of being included in the summary;
4) BASELINE-ILP (Berg-Kirkpatrick et al., 2011), a
baseline ILP framework without data imputation.

For the ILP based approaches, we use bigrams
as concepts (bigrams consisting of only stopwords
are removed2) and sentence frequency as concept
weights. We use all the sentences in 25 lectures
to construct the concept-sentence co-occurrence ma-
trix and perform data imputation. It allows us to
leverage the co-occurrence statistics both within and
across lectures. For the soft-impute algorithm, we
perform grid search (on a scale of [0, 5] with step-
size 0.5) to tune the hyper-parameter λ. To make the
most use of annotated lectures, we split them into
three folds. In each one, we tune λ on two folds and
test it on the other fold. Finally, we report the av-
eraged results. In all experiments, summary length
is set to be 30 words or less, corresponding to the

1This data set is publicly available at http://www.
coursemirror.com/download/dataset.

2Bigrams with one stopword are not removed because 1)
they are informative (“a bike”, “the activity”, “how materials’);
2) such bigrams appear in multiple sentences and are thus help-
ful for matrix imputation.

82



ROUGE-1 ROUGE-2 ROUGE-SU4 Human
System R (%) P (%) F (%) R (%) P (%) F (%) R (%) P (%) F (%) Preference
MEAD 26.4 23.3 21.8 6.7 7.6 6.3 8.8 8.0 5.4 24.8%
LEXRANK 30.0 27.6 25.7 8.1 8.3 7.6 9.6 9.6 6.6 —
SUMBASIC 36.6 31.4 30.4 8.2 8.1 7.5 13.9 11.0 8.7 —
ILP BASELINE 35.5 31.8 29.8 11.1 10.7 9.9 12.9 11.5 8.2 69.6%
OUR APPROACH 38.0 34.6 32.2 12.7 12.9 11.4 15.5 14.4 10.1 89.6%

Table 2: Summarization results evaluated by ROUGE (%) and human judges. Shaded area indicates that the performance difference
with OUR APPROACH is statistically significant (p < 0.05) using a two-tailed paired t-test on the 36 document-summary pairs.

average number of words in human summaries.
In Table 2, we present summarization results eval-

uated by ROUGE (Lin, 2004) and human judges.
ROUGE is a standard evaluation metric that com-
pares system and reference summaries based on n-
gram overlaps. Our proposed approach outperforms
all the baselines based on three standard ROUGE
metrics.3 When examining the imputed sentence-
concept co-occurrence matrix, we notice some in-
teresting examples that indicate the effectiveness of
the proposed approach, shown in Table 3.

Because ROUGE cannot thoroughly capture the
semantic similarity between system and reference
summaries, we further perform human evaluation.
For each lecture and prompt, we present the prompt,
a pair of system outputs in a random order, and the
human summary to five Amazon turkers. The turk-
ers are asked to indicate their preference for system
A or B based on the semantic resemblance to the
human summary on a 5-Likert scale (‘Strongly pre-
ferred A’, ‘Slightly preferred A’, ‘No preference’,
‘Slightly preferred B’, ‘Strongly preferred B’). They
are rewarded $0.08 per task. We use two strategies
to control the quality of the human evaluation. First,
we require the turkers to have a Human Intelligence
Task (HIT) approval rate of 90% or above. Sec-
ond, we insert some quality checkpoints by asking
the turkers to compare two summaries of same text
content but different sentence orders. Turkers who
did not pass these tests are filtered out. Due to bud-
get constraints, we conduct pairwise comparisons
for three systems. The total number of comparisons

3F-scores are slightly lower than P/R because of the averag-
ing effect and can be illustrated in one example. Suppose we
have P1=0.1, R1=0.4, F1=0.16 and P2=0.4, R2=0.1, F2=0.16.
Then the macro-averaged P/R/F-scores are: P=0.25, R=0.25,
F=0.16. In this case, the F-score is lower than both P and R.

Sentence Assoc. Bigrams

the printing needs to better so it can
the graph

be easier to read
graphs make it easier to understand

hard to
concepts
the naming system for the 2 phase

phase diagram
regions
I tried to follow along but I couldn’t

understand the
grasp the concepts
no problems except for the specific

strain curvesequations used to determine properties
from the stress - strain graph

Table 3: Associated bigrams do not appear in the sentence, but
after Matrix Imputation, they yield a decent correlation (cell

value greater than 0.9) with the corresponding sentence.

is 3 system-system pairs × 12 lectures × 3 prompts
× 5 turkers = 540 total pairs. We calculate the per-
centage of “wins” (strong or slight preference) for
each system among all comparisons with its coun-
terparts. Results are reported in the last column of
Table 2. OUR APPROACH is preferred significantly
more often than the other two systems4. Regarding
the inter-annotator agreement, we find 74.3% of the
individual judgements agree with the majority votes
when using a 3-point Likert scale (‘preferred A’, ‘no
preference’, ‘preferred B’).

Table 4 presents example system outputs. This
offers intuitive understanding to our proposed ap-
proach.

4For the significance test, we convert a preference to a score
ranging from -2 to 2 (‘2’ means ‘Strongly preferred’ to a system
and ‘-2’ means ‘Strongly preferred’ to the counterpart system),
and use a two-tailed paired t-test with p < 0.05 to compare the
scores.

83



Prompt
Describe what you found most interesting in today’s class

Reference Summary
- unit cell direction drawing and indexing
- real world examples
- importance of cell direction on materials properties

System Summary (ILP BASELINE)
- drawing and indexing unit cell direction
- it was interesting to understand how to find apf and
fd from last weeks class

- south pole explorers died due to properties of tin

System Summary (OUR APPROACH)
- crystal structure directions
- surprisingly i found nothing interesting today .
- unit cell indexing
- vectors in unit cells
- unit cell drawing and indexing
- the importance of cell direction on material properties

Table 4: Example reference and system summaries.

6 Related Work

Our previous work (Luo and Litman, 2015) pro-
poses to summarize student responses by extract-
ing phrases rather than sentences in order to meet
the need of aggregating and displaying student re-
sponses in a mobile application (Luo et al., 2015;
Fan et al., 2015). It adopts a clustering paradigm
to address the lexical variety issue. In this work, we
leverage matrix imputation to solve this problem and
summarize student response at a sentence level.

The integer linear programming framework has
demonstrated substantial success on summarizing
news documents (Gillick et al., 2008; Gillick et al.,
2009; Woodsend and Lapata, 2012; Li et al., 2013).
Previous studies try to improve this line of work
by generating better estimates of concept weights.
Galanis et al. (2012) proposed a support vector re-
gression model to estimate bigram frequency in the
summary. Berg-Kirkpatrick et al. (2011) explored
a supervised approach to learn parameters using a
cost-augmentative SVM. Different from the above
approaches, we focus on the co-occurrence matrix
instead of concept weights, which is another impor-
tant component of the ILP framework.

Most summarization work focuses on summariz-
ing news documents, as driven by the DUC/TAC
conferences. Notable systems include maximal
marginal relevance (Carbonell and Goldstein, 1998),

submodular functions (Lin and Bilmes, 2010),
jointly extract and compress sentences (Zajic et al.,
2007), optimize content selection and surface real-
ization (Woodsend and Lapata, 2012), minimize re-
construction error (He et al., 2012), and dual decom-
position (Almeida and Martins, 2013). Albeit the
encouraging performance of our proposed approach
on summarizing student responses, when applied to
the DUC 2004 dataset (Hong et al., 2014) and eval-
uated using ROUGE we observe only comparable or
marginal improvement over the ILP baseline. How-
ever, this is not surprising since the lexical variety is
low (20% of bigrams appear more than twice com-
pared to 3% of bigrams appear more than twice in
student responses) and thus less data sparsity, so the
DUC data cannot benefit much from imputation.

7 Conclusion

We make the first effort to summarize student feed-
back using an integer linear programming frame-
work with data imputation. Our approach allows
sentences to share co-occurrence statistics and alle-
viates sparsity issue. Our experiments show that the
proposed approach performs competitively against a
range of baselines and shows promise for future au-
tomation of student feedback analysis.

In the future, we may take advantage of the
high quality student responses (Luo and Litman,
2016) and explore helpfulness-guided summariza-
tion (Xiong and Litman, 2014) to improve the sum-
marization performance. We will also investigate
whether the proposed approach benefits other in-
formal text such as product reviews, social media
discussions or spontaneous speech conversations, in
which we expect the same sparsity issue occurs and
the language expression is diverse.

Acknowledgments

This research is supported by an internal grant from
the Learning Research and Development Center at
the University of Pittsburgh. We thank Muhsin
Menekse for providing the data set. We thank
Jingtao Wang, Fan Zhang, Huy Nguyen and Zahra
Rahimi for valuable suggestions about the proposed
summarization algorithm. We also thank anony-
mous reviewers for insightful comments and sugges-
tions.

84



References
Miguel B. Almeida and Andre F. T. Martins. 2013. Fast

and robust compressive summarization with dual de-
composition and multi-task learning. In Proceedings
of ACL.

Taylor Berg-Kirkpatrick, Dan Gillick, and Dan Klein.
2011. Jointly learning to extract and compress. In
Proceedings of ACL.

David Boud, Rosemary Keogh, David Walker, et al.
2013. Reflection: Turning experience into learning.
Routledge.

Jaime Carbonell and Jade Goldstein. 1998. The use
of mmr, diversity-based reranking for reordering doc-
uments and producing summaries. In Proceedings
of the 21st Annual International ACM SIGIR Confer-
ence on Research and Development in Information Re-
trieval, SIGIR ’98, pages 335–336.

Günes Erkan and Dragomir R. Radev. 2004. LexRank:
Graph-based lexical centrality as salience in text sum-
marization. Journal Artificial Intelligence Research,
22(1).

Xiangmin Fan, Wencan Luo, Muhsin Menekse, Diane
Litman, and Jingtao Wang. 2015. CourseMIRROR:
Enhancing large classroom instructor-student interac-
tions via mobile interfaces and natural language pro-
cessing. In Works-In-Progress of ACM Conference on
Human Factors in Computing Systems. ACM.

Dimitrios Galanis, Gerasimos Lampouras, and Ion An-
droutsopoulos. 2012. Extractive multi-document
summarization with integer linear programming and
support vector regression. In Proceedings of COLING.

Dan Gillick and Benoit Favre. 2009. A scalable global
model for summarization. In Proceedings of NAACL.

Dan Gillick, Benoit Favre, and Dilek Hakkani-Tur. 2008.
The icsi summarization system at tac 2008. In Pro-
ceedings of TAC.

Dan Gillick, Benoit Favre, Dilek Hakkani-Tur, Berndt
Bohnet, Yang Liu, and Shasha Xie. 2009. The
ICSI/UTD summarization system at TAC 2009. In
Proceedings of TAC.

Zhanying He, Chun Chen, Jiajun Bu, Can Wang, Lijun
Zhang, Deng Cai, and Xiaofei He. 2012. Document
summarization based on data reconstruction. In Pro-
ceedings of AAAI.

Kai Hong, John Conroy, Benoit Favre, Alex Kulesza,
Hui Lin, and Ani Nenkova. 2014. A repository of
state of the art and competitive baseline summaries for
generic news summarization. In Nicoletta Calzolari,
Khalid Choukri, Thierry Declerck, Hrafn Loftsson,
Bente Maegaard, Joseph Mariani, Asuncion Moreno,
Jan Odijk, and Stelios Piperidis, editors, Proceed-
ings of the Ninth International Conference on Lan-
guage Resources and Evaluation (LREC’14), pages

1608–1616, Reykjavik, Iceland, May. European Lan-
guage Resources Association (ELRA). ACL Anthol-
ogy Identifier: L14-1070.

Chen Li, Xian Qian, and Yang Liu. 2013. Using super-
vised bigram-based ILP for extractive summarization.
In Proceedings of ACL.

Hui Lin and Jeff Bilmes. 2010. Multi-document sum-
marization via budgeted maximization of submodular
functions. In Proceedings of NAACL.

Chin-Yew Lin. 2004. ROUGE: a package for automatic
evaluation of summaries. In Proceedings of the Work-
shop on Text Summarization Branches Out.

Wencan Luo and Diane Litman. 2015. Summarizing stu-
dent responses to reflection prompts. In Proceedings
of the 2015 Conference on Empirical Methods in Nat-
ural Language Processing, pages 1955–1960, Lisbon,
Portugal, September. Association for Computational
Linguistics.

Wencan Luo and Diane Litman. 2016. Determining
the quality of a student reflective response. In Pro-
ceedings 29th International FLAIRS Conference, Key
Largo, FL, May.

Wencan Luo, Xiangmin Fan, Muhsin Menekse, Jing-
tao Wang, , and Diane Litman. 2015. Enhanc-
ing instructor-student and student-student interactions
with mobile interfaces and summarization. In Pro-
ceedings of NAACL (Demo).

Rahul Mazumder, Trevor Hastie, and Robert Tibshirani.
2010. Spectral regularization algorithms for learning
large incomplete matrices. Journal of Machine Learn-
ing Research.

Dragomir R. Radev, Hongyan Jing, Małgorzata Styś, and
Daniel Tam. 2004. Centroid-based summarization
of multiple documents. Information Processing and
Management, 40(6):919–938.

Lucy Vanderwende, Hisami Suzuki, Chris Brockett, and
Ani Nenkova. 2007. Beyond SumBasic: Task-
focused summarization with sentence simplification
and lexical expansion. Information Processing and
Management, 43(6):1606–1618.

Kristian Woodsend and Mirella Lapata. 2012. Multiple
aspect summarization using integer linear program-
ming. In Proceedings of EMNLP.

Wenting Xiong and Diane Litman. 2014. Empirical
analysis of exploiting review helpfulness for extractive
summarization of online reviews. In Proceedings of
COLING 2014, the 25th International Conference on
Computational Linguistics: Technical Papers, pages
1985–1995, Dublin, Ireland, August. Dublin City Uni-
versity and Association for Computational Linguistics.

David Zajic, Bonnie J. Dorr, Jimmy Lin, and Richard
Schwartz. 2007. Multi-candidate reduction: Sen-
tence compression as a tool for document summariza-
tion tasks. Information Processing and Management.

85


