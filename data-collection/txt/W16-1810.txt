



















































Phrase Representations for Multiword Expressions


Proceedings of the 12th Workshop on Multiword Expressions, pages 67–71,
Berlin, Germany, August 7-12, 2016. c©2016 Association for Computational Linguistics

Phrase Representations for Multiword Expressions

Joël Legrand1,2 and Ronan Collobert∗3,1
1 Idiap Research Institute, Martigny, Switzerland

2 Ecole Polytechnique Fédérale de Lausanne (EPFL), Lausanne, Switzerland
3 Facebook AI Research, Menlo Park (CA), USA

Abstract

Recent works in Natural Language Pro-
cessing (NLP) using neural networks have
focused on learning dense word repre-
sentations to perform classification tasks.
When dealing with phrase prediction
problems, is is common practice to use
special tagging schemes to identify seg-
ments boundaries. This allows these tasks
to be expressed as common word tagging
problems. In this paper, we propose to
learn fixed-size representations for arbi-
trarily sized chunks. We introduce a model
that takes advantage of such representa-
tions to perform phrase tagging by di-
rectly identifying and classifying phrases.
We evaluate our approach on the task of
multiword expression (MWE) tagging and
show that our model outperforms the state-
of-the-art model for this task.

1 Introduction

Traditional NLP tasks such as part-of-speech
(POS) tagging or semantic role labeling (SRL)
consists in tagging each word in a sentence with a
tag. Another class of problems such as Named En-
tity Recognition (NER) or shallow parsing (chunk-
ing) consists in identifying and labeling phrases
(i.e. groups of words) with predefined tags. Such
tasks can be expressed as word classification prob-
lems by identifying the phrase boundaries instead
of directly identifying the whole phrases. In prac-
tice, this consists in prefixing every tag with an
extra-label indicating the position of the word in-
side a phrase (at the beginning (B), inside (I), at
the end (E), single word (S) or not in a phrase (O)).
Different schemes have been used in the literature,

∗All research was conducted at the Idiap Research Insti-
tute, before Ronan Collobert joined Facebook AI Research

such as the IOB2, IOE1 and IOE2 schemes (Sang
and Veenstra, 1999) or IOBES scheme (Uchimoto
et al., 2000) with no clear predominance.

These tasks have been tackled using various
machine learning methods such as Support Vec-
tor Machines (SVM) for POS tagging (Giménez
and Màrquez, 2004) or chunking (Kudoh and Mat-
sumoto, 2000), second order random fields for
chunking (Sun et al., 2008) or a combination of
different classifiers for NER (Radu et al., 2003).
All these approaches use carefully selected hand-
crafted features.

Recent studies in NLP introduced neural net-
work based systems that can be trained in an
end-to-end manner, using minimal prior knowl-
edge. These models take advantage of continu-
ous representations of words. In Collobert et al.
(2011) the authors proposed a deep neural net-
work, which learns the word representations (the
features) and produces IOBES-prefixed tags dis-
criminatively trained in an end-to-end manner.
This system is trained using a conditional ran-
dom field (Lafferty et al., 2001) that accounts
for the structure of the sentence. This architec-
ture has been applied to various NLP tasks, such
as POS tagging, NER or semantic role labeling
and achieves state-of-the-art performance in all of
them.

In this paper, we propose to learn fixed-size con-
tinuous representations of arbitrarily sized chunks
by composing word embeddings. These represen-
tations are used to directly classify phrases with-
out using the classical IOB(ES) prefixing step.
The proposed approach is evaluated on the task
of multiword expression (MWE) tagging. Using
the SPRML 2014 data for French MWE tagging
(Seddah et al., 2013), we show that our phrase
representations are able to capture enough knowl-
edge to perform on par with the IOBES-based
model of Collobert et al. (2011) applied to MWE

67



tagging. Furthermore, we show that our system
outperforms the winner of the SPMRL (Syntactic
Parsing of Morphologicaly Rich Language) 2013
shared task for MWE tagging (Constant et al.,
2013) which is currently the best published sys-
tem.

2 The model

The proposed model computes fixed-size continu-
ous vectors of arbitrarily sized chunks which are
then used as inputs to a classifier. Every possi-
ble window of sizes from 1 to K (K being the
maximum size) is projected onto a common vector
space (the same for all k), using a different neural
network for each size k. The resulting represen-
tations are passed on to a classifier which outputs
a score for every possible tag. To ensure that a
word belongs to one chunk at most, decoding is
performed using structured graph decoding using
the Viterbi algorithm.

2.1 Word representation

Given an input sentence S = w1, . . . , wN , each
word is embedded into a D-dimensional vector
space by applying a lookup-table operation (Ben-
gio et al., 2000):

LTW (wn) = Wwn

where the matrix W ∈ RD×|W| represents the
parameters of the lookup layer. Each column
Wn ∈ RD corresponds to the vector embedding
of the nth word in the dictionaryW .

Additional features, such as part-of-speech tags,
can be used by using a different lookup table
for each discrete feature. The input becomes the
concatenation of the outputs of all these lookup-
tables. For simplicity, we consider only one
lookup-table in the rest of the architecture descrip-
tion.

2.2 Phrase representation

We denote k-window a window of size k ∈ [1,K]
where K is the maximum window size. Phrase
representations for all k-windows within a given
sentence are produced by looking, for all sizes
from 1 to K, at all successive windows of text,
sliding over the sentence, from position 1 to N −
K + 1. Formally, if we denote

xn,k =[LTW (wn−c), . . . , LTW (wn)
, ...,

, LTW (wn+k−1), . . . , LTW (wn+k−1+c)]

the concatenated word representations corre-
sponding to the nth k-window (c being the context
from each side of the the k-window), its represen-
tation is given by

rn,k = M1kxn,k,

where M1k ∈ R(k+2c)D×nhu is a matrix of pa-
rameters and nhu the dimension of the phrase rep-
resentations (which is the same for all k). Words
outside the sentence boundaries are assigned a
special ”PADDING” embedding.

2.3 Phrase scoring
We denote T the set of tags and Tk the set of tags
for a k-window. We denote tk ∈ Tk the tag t ∈ T
for a k-window. The scores for all k-windows are
computed by a linear layer, using their correspond-
ing representations as input. Formally, the score
for the nth k-window are given by

sn,k = tanh(M2rn,k),

where M2 ∈ Rnhu×|T | is a matrix of parameters.
We define sn,tk the score for the tag tk ∈ Tk start-
ing at the position n < N − k + 1.
2.4 Structure tag inference

T
he

cat

sat

on the

m
at

1-NP

2-NP

...

Other

Figure 1: Constrained graph for structured infer-
ence. Each node is assigned a score from the scor-
ing layer. For instance, the first node of the line
2-NP correspond to the score for the tag NP for
the phrase ”the cat”. Nodes in gray represent final
nodes.

The scoring layer outputs a matrix of |Tk| ×
(N − k + 1) scores for each window size k ∈ K.

68



The next module (see Figure 1) of our system is
a structured graph G constrained in order to en-
sure that a word is tagged only once. Each node
Gn,tk is assigned the score sn,tk (the score of the
tag tk ∈ Tk starting at the position n < N−k+1)
from the scoring layer. Only transitions from node
Gn,tk to node Gn+k,t′

k′
(with n + k <= N ) are

possible since a word cannot be tagged twice along
the same path. The Viterbi algorithm is an efficient
choice to find the best path in the lattice. The score
for a sentence S of size N along a path of tags
[t]Nt1 is then given by the sum of the tag scores:

s(S, [t]Nt1 , θ) =
Nt∑

n=1

sn,tk

where θ represents all the trainable parameter.

2.5 Training

The proposed neural network is trained by maxi-
mizing the likelihood over the training data, using
stochastic gradient ascent. Following Collobert
et al. (2011), the score s(S, [t]Nt1 , θ) can be inter-
preted as a conditional probability by exponenti-
ating this score and normalizing it with respect to
all possible path scores. Taking the log, the con-
ditional probability of the true path [t]Nt1 is given
by

log p(s(S, [t]Nt1 , θ)) = s(S, [t]
Nt
1 , θ)

− log (
∑

u

s(S, [u]Nu1 ), θ)

Following Rabiner (1990), the normalization
term (second term of this equation) can be com-
puted in linear time thanks to a recursion similar to
the Viterbi algorithm. The whole architecture (in-
cluding the input feature, phrase representations
and scoring layer) is trained through the graph in
order to encourage valid paths of tags during train-
ing, while discouraging all other paths.

3 Experiments

3.1 Multiword expression

Multiword expressions are groups of tokens which
act as single units at some level of linguistic anal-
ysis. They cover a wide range of linguistic con-
structions such as idioms (”kick the bucket”), noun
compound (”traffic light”) or fixed phrases (”ad
hoc”). As they can carry meaning that can not

be inferred directly from the meaning of individ-
ual constituents (as for idioms), they are difficult
to handle by automatic systems and represent a
key issue for many NLP systems addressing, for
instance, machine translation and text generation
tasks.

3.2 Corpus
Experiments were conducted on the SPMRL
french corpus provided for the Shared Task 2013
(Seddah et al., 2013). This dataset provides
14.7k sentences (443k tokens) with 22.6k identi-
fied MWE. A given MWE is defined as a continu-
ous sequence of terminals, plus a POS tag among
the 10 possible POS tags. As presented in Table
1, a wide majority of the chunks are 2-chunks or
3-chunks (91.2%).

Chunk size 2 3 4 5 5+
#chunk 11108 10188 1702 309 250
percentage 47.2 43.2 7.2 1.3 1.1

Table 1: Number of k-sized chunks in the training
corpus

3.3 Evaluation
We evaluate the performance of the proposed net-
work on MWE tagging using the three metrics de-
scribed in Seddah et al. (2013), reporting for each
of them the recall, precision and F-score. MWE
correspond to the full MWEs, in which a predicted
MWE counts as correct if it has the correct span
(same group as in the gold data). MWE+POS is
defined in the same fashion, except that the pre-
dicted MWE counts as correct if it has both correct
span and correct POS tag. COMP correspond to
the non-head components of MWEs: a non-head
component of MWE counts as correct if it is at-
tached to the head of the MWE, with the specific
label indicating that it is part of an MWE.

3.4 Baseline models
We compare the proposed model to our imple-
mentation of the IOBES-based model described
in Collobert et al. (2011), applied to MWE tag-
ging. We also report the results of the LIGM-
Alpage architecture which obtained the best re-
sults for French SPMRL 2013 MWE recognition
shared task (Constant et al., 2013). Their system is
based on Conditional Random Fields (CRF) (Laf-
ferty et al., 2001) and on external lexicons which

69



are known to greatly improve MWE segmentation
(Constant and Tellier, 2012).

3.5 Setup

The network is trained using stochastic gradient
descent over the training data, until convergence
on the validation set. Hyper-parameters are tuned
on the validation set. The look-up table size for
the words is 64. Word embeddings are pre-trained
by performing PCA on the matrix of word co-
occurrences (Lebret and Collobert, 2014) using
Wikipedia data. These embeddings are fine-tuned
during the training process. As additional fea-
tures, we only use the part-of-speech tags obtained
using the freely available tool MarMoT (Mueller
et al., 2013)1. The POS-tag embedding size is 32.
The context size is c = 2 The maximum size for
a window is K = 7. The common embedding
size for the k-window is nhu = 300. We fix the
learning rate to 0.01. Following Legrand and Col-
lobert (2015), to prevent units from co-adapting,
we adopt a dropout regularization strategy (Srivas-
tava et al., 2014) after every lookup-table, as the
capacity of our network mainly lies on the input
embeddings.

For the IOBES-based model, we use the follow-
ing parameters: the context size is set to 2, word
and tags feature sizes are 64 and 32 respectively,
the hidden layer size is 300 and the learning rate
is 0.001. We use the same dropout regularization
strategy and the same word initialization as for the
proposed model.

4 Results

We first compare our approach with the IOBES-
model from Collobert et al. (2011). Table 2
presents the results obtained for the two models.
We see that, our model performs on par with the
IOBES-based model. Interestingly, adding the
POS features has little effect on the performance
for MWE identification but helps to determine the
MWE POS-tags.

In Table 3, we compare our model with the win-
ner of the SPMRL 2013 shared task for MWE
recognition (Constant et al., 2013). Both the
IOBES and chunk based models are obtained us-
ing an ensemble of 5 model and averaging the ob-
tained scores. We see that both our model and the

1The tags used are available here: http://cistern.
cis.lmu.de/marmot/models/CURRENT/

COMP MWE MWE+POS
IOBES-model 79.4 78.5 75.4
+ WI 80.8 80.1 76.7
+ WI + POS 80.8 80.1 77.6
Chunk-model 79.1 78.3 75.2
+ WI 80.7 79.6 76.4
+ WI + POS 80.9 79.8 77.5

Table 2: Results on the test corpus (4043 MWEs)
in terms of F-measure. WI stands for word initial-
ization.

IOBES-based model outperform this state-of-the-
art model.

COMP MWE MWE+POS
LIGM-Alpage 81.3 80.7 77.5
IOBES-model 81.4 80.7 78.2
Chunk-model 81.3 80.7 78.1

Table 3: Results on the test corpus (4043 MWEs)
in terms of F-measure.

5 Representation analysis

As the proposed chunk-based model produces
continuous phrase representations, it allows for
phrase comparison. Table 4 presents some of
the closest neighbors (in terms of Euclidean dis-
tance) for some chosen phrases. We see that close
representations correspond to semantically close
phrases.

président de la république
chef de l’état

présidence de la république
ministre de l’intérieur

évasion fiscale
fraude fiscale

détournements financiers
libéralisme sauvage

impôt sur le revenu
impôt sur la fortune

impôt sur le patrimoine
impôts sur la fortune

Table 4: Closest neighbors for three input phrases
in terms of euclidean distance.

70



6 Conclusion

In this paper, we proposed a neural network model
that learns fixed-size continuous representations of
arbitrarily-sized chunks by composing word em-
beddings. These representations are used to di-
rectly identify and classify phrases. Evaluating
our model on the task of multiword expression
tagging, we showed that the proposed representa-
tions perform on par with a baseline IOBES-based
system. We also showed that it outperforms the
model obtaining the best published performance
for this task while not using any external lexicon
and relying on few input features. As the pro-
posed model computes phrase representations, it
allows for comparison between phrases. In the fu-
ture, the potential of this approach for higher-level
tasks such as bilingual word alignment are to be
explored.

References

Y. Bengio, R. Ducharme, and P. Vincent. A Neural
Probabilistic Language Model. In NIPS, 2000.

R. Collobert, J. Weston, L. Bottou, M. Karlen,
K. Kavukcuoglu, and P. Kuksa. Natural lan-
guage processing (almost) from scratch. Jour-
nal of Machine Learning Research, 2011.

M. Constant, M. Candito, and D. Seddah. The
LIGM-Alpage Architecture for the SPMRL
2013 Shared Task: Multiword Expression Anal-
ysis and Dependency Parsing. In Fourth Work-
shop on Statistical Parsing of Morphologically
Rich Languages, 2013.

J. Giménez and L. Màrquez. Svmtool: A gen-
eral pos tagger generator based on support vec-
tor machines. In LREC, 2004.

T. Kudoh and Y. Matsumoto. Use of support
vector learning for chunk identification. In
Proceedings of the 2Nd Workshop on Learn-
ing Language in Logic and the 4th Conference
on Computational Natural Language Learning
- Volume 7, 2000.

J. Lafferty, A. McCallum, and F. Pereira. Condi-
tional random fields: Probabilistic models for
segmenting and labeling sequence data. In
Int. Conf. on Machine Learning (ICML 2001),
2001.

R. Lebret and R. Collobert. Word Embeddings
through Hellinger PCA. In Proc. of EACL,
2014.

J. Legrand and R. Collobert. Joint RNN-Based
Greedy Parsing and Word Composition. In Pro-
ceedings of ICLR, 2015.

T. Mueller, H. Schmid, and H. Schütze. Efficient
higher-order CRFs for morphological tagging.
In Proceedings of the 2013 Conference on Em-
pirical Methods in Natural Language Process-
ing, 2013.

L. R. Rabiner. Readings in speech recognition.
chapter A Tutorial on Hidden Markov Models
and Selected Applications in Speech Recogni-
tion. 1990.

F. Radu, I. Abe, J. Hongyan, and Z. Tong. Named
entity recognition through classifier combina-
tion. In Proceedings of the Seventh Conference
on Natural Language Learning at HLT-NAACL
2003 - Volume 4, 2003.

E. F. T. K. Sang and J. Veenstra. Representing
text chunks. In Proceedings of the Ninth Con-
ference on European Chapter of the Association
for Computational Linguistics, 1999.

D. Seddah, R. Tsarfaty, S. Kübler, M. Can-
dito, J. D. Choi, R. Farkas, J. Foster, I. Goe-
naga, K. Gojenola, Y. Goldberg, S. Green,
N. Habash, M. Kuhlmann, W. Maier, J. Nivre,
A. Przepiórkowski, R. Roth, W. Seeker, Y. Ver-
sley, V. Vincze, M. Wolińsk, A. Wróblewska,
and E. Villemonte De La Clergerie. Overview
of the SPMRL 2013 shared task: A cross-
framework evaluation of parsing morphologi-
cally rich languages. In Proceedings of the 4th
Workshop on Statistical Parsing of Morpholog-
ically Rich Languages: Shared Task, 2013.

N. Srivastava, G. Hinton, A. Krizhevsky,
I. Sutskever, and R. Salakhutdinov. Dropout:
A simple way to prevent neural networks from
overfitting. J. Mach. Learn. Res., 2014.

X. Sun, L. Morency, D. Okanohara, and J. Tsujii.
Modeling latent-dynamic in shallow parsing: A
latent conditional model with improved infer-
ence. In Proceedings of the 22Nd International
Conference on Computational Linguistics - Vol-
ume 1, 2008.

K. Uchimoto, Q. Ma, M. Murata, H. Ozaku, and
H. Isahara. Named entity extraction based on
a maximum entropy model and transformation
rules. In Proceedings of the 38th Annual Meet-
ing on Association for Computational Linguis-
tics, 2000.

71


