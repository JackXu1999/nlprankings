



















































Tied Multitask Learning for Neural Speech Translation


Proceedings of NAACL-HLT 2018, pages 82–91
New Orleans, Louisiana, June 1 - 6, 2018. c©2018 Association for Computational Linguistics

Tied Multitask Learning for Neural Speech Translation

Antonios Anastasopoulos and David Chiang
Department of Computer Science and Engineeering

University of Notre Dame
{aanastas,dchiang}@nd.edu

Abstract

We explore multitask models for neural trans-
lation of speech, augmenting them in order
to reflect two intuitive notions. First, we in-
troduce a model where the second task de-
coder receives information from the decoder
of the first task, since higher-level intermediate
representations should provide useful infor-
mation. Second, we apply regularization that
encourages transitivity and invertibility. We
show that the application of these notions on
jointly trained models improves performance
on the tasks of low-resource speech transcrip-
tion and translation. It also leads to better per-
formance when using attention information for
word discovery over unsegmented input.

1 Introduction

Recent efforts in endangered language documen-
tation focus on collecting spoken language re-
sources, accompanied by spoken translations in a
high resource language to make the resource in-
terpretable (Bird et al., 2014a). For example, the
BULB project (Adda et al., 2016) used the LIG-
Aikuma mobile app (Bird et al., 2014b; Blachon
et al., 2016) to collect parallel speech corpora be-
tween three Bantu languages and French. Since
it’s common for speakers of endangered languages
to speak one or more additional languages, collec-
tion of such a resource is a realistic goal.

Speech can be interpreted either by transcrip-
tion in the original language or translation to an-
other language. Since the size of the data is ex-
tremely small, multitask models that jointly train
a model for both tasks can take advantage of
both signals. Our contribution lies in improv-
ing the sequence-to-sequence multitask learning
paradigm, by drawing on two intuitive notions:
that higher-level representations are more useful
than lower-level representations, and that transla-
tion should be both transitive and invertible.

Higher-level intermediate representations, such
as transcriptions, should in principle carry infor-
mation useful for an end task like speech transla-
tion. A typical multitask setup (Weiss et al., 2017)
shares information at the level of encoded frames,
but intuitively, a human translating speech must
work from a higher level of representation, at least
at the level of phonemes if not syntax or semantics.
Thus, we present a novel architecture for tied mul-
titask learning with sequence-to-sequence models,
in which the decoder of the second task receives
information not only from the encoder, but also
from the decoder of the first task.

In addition, transitivity and invertibility are two
properties that should hold when mapping be-
tween levels of representation or across languages.
We demonstrate how these two notions can be im-
plemented through regularization of the attention
matrices, and how they lead to further improved
performance.

We evaluate our models in three experiment
settings: low-resource speech transcription and
translation, word discovery on unsegmented in-
put, and high-resource text translation. Our high-
resource experiments are performed on English,
French, and German. Our low-resource speech ex-
periments cover a wider range of linguistic diver-
sity: Spanish-English, Mboshi-French, and Ainu-
English.

In the speech transcription and translation tasks,
our proposed model leads to improved perfor-
mance against all baselines as well as previous
multitask architectures. We observe improvements
of up to 5% character error rate in the transcrip-
tion task, and up to 2.8% character-level BLEU in
the translation task. However, we didn’t observe
similar improvements in the text translation exper-
iments. Finally, on the word discovery task, we im-
prove upon previous work by about 3% F-score on
both tokens and types.

82



2 Model

Our models are based on a sequence-to-sequence
model with attention (Bahdanau et al., 2015). In
general, this type of model is composed of three
parts: a recurrent encoder, the attention, and a re-
current decoder (see Figure 1a).1

The encoder transforms an input sequence of
words or feature frames x1, . . . , xN into a sequence
of input states h1, . . . ,hN :

hn = enc(hn−1, xn).

The attention transforms the input states into a se-
quence of context vectors via a matrix of attention
weights:

cm =
∑

n

αmnhn.

Finally, the decoder computes a sequence of out-
put states from which a probability distribution
over output words can be computed.

sm = dec(sm−1, cm, ym−1)
P(ym) = softmax(sm).

In a standard encoder-decoder multitask model
(Figure 1b) (Dong et al., 2015; Weiss et al., 2017),
we jointly model two output sequences using a
shared encoder, but separate attentions and de-
coders:

c1m =
∑

n

α1mnhn

s1m = dec
1(s1m−1, c

1
m, y

1
m−1)

P(y1m) = softmax(s
1
m)

and

c2m =
∑

n

α2mnhn

s2m = dec
2(s2m−1, c

2
m, y

2
m−1)

P(y2m) = softmax(s
2
m).

We can also arrange the decoders in a cascade
(Figure 1c), in which the second decoder attends
only to the output states of the first decoder:

c2m =
∑

m′
α12mm′s

1
m′

s2m = dec
2(s2m−1, c

2
m, y

2
m−1)

P(y2m) = softmax(s
2
m).

1For simplicity, we have assumed only a single layer for
both the encoder and decoder. It is possible to use multiple
stacked RNNs; typically, the output of the encoder and de-
coder (cm and P(ym), respectively) would be computed from
the top layer only.

Tu et al. (2017) use exactly this architecture to
train on bitext by setting the second output se-
quence to be equal to the input sequence (y2i = xi).

In our proposed triangle model (Figure 1d), the
first decoder is as above, but the second decoder
has two attentions, one for the input states of the
encoder and one for the output states of the first
decoder:

c2m =
[∑

m′ α
12
mm′s

1
m′

∑
n α

2
mnhn

]

s2m = dec
2(s2m−1, c

2
m, y

2
m−1)

P(y2m) = softmax(s
2
m).

Note that the context vectors resulting from the
two attentions are concatenated, not added.

3 Learning and Inference

For compactness, we will write X for the matrix
whose rows are the xn, and similarly H, C, and
so on. We also write A for the matrix of attention
weights: [A]i j = αi j.

Let θ be the parameters of our model, which we
train on sentence triples (X,Y1,Y2).

3.1 Maximum likelihood estimation
Define the score of a sentence triple to be a log-
linear interpolation of the two decoders’ probabil-
ities:

score(Y1,Y2 | X; θ) = λ log P(Y1 | X; θ) +
(1 − λ) log P(Y2 | X,S1; θ)

where λ is a parameter that controls the impor-
tance of each sub-task. In all our experiments, we
set λ to 0.5. We then train the model to maximize

L(θ) =
∑

score(Y1,Y2 | X; θ),

where the summation is over all sentence triples in
the training data.

3.2 Regularization
We can optionally add a regularization term to the
objective function, in order to encourage our atten-
tion mechanisms to conform to two intuitive prin-
ciples of machine translation: transitivity and in-
vertibility.

Transitivity attention regularizer To a first ap-
proximation, the translation relation should be
transitive (Wang et al., 2006; Levinboim and Chi-
ang, 2015): If source word xi aligns to target word

83



x1 · · · xN
encoder

h1 · · · hN
attention

c1 · · · cM
decoder

s1 · · · sM
softmax

P(y1 · · · yM)

x1 · · · xN
encoder

h1 · · · hN
attention attention

c11 · · · c1M1
decoder

s11 · · · s1M1
softmax

P(y11 · · · y1M1 )

c21 · · · c2M2
decoder

s21 · · · s2M2
softmax

P(y21 · · · y2M2 )

x1 · · · xN
encoder

h1 · · · hN
attention

c11 · · · c1M1
decoder

s11 · · · s1M1
softmax

P(y11 · · · y1M1 )
attention

c21 · · · c2M2
decoder

s21 · · · s2M2
softmax

P(y21 · · · y2M2 )

x1 · · · xN
encoder

h1 · · · hN
attention

c11 · · · c1M1
decoder

s11 · · · s1M1
softmax

P(y11 · · · y1M1 )
attentions

c21 · · · c2M2
decoder

s21 · · · s2M2
softmax

P(y21 · · · y2M2 )

(a) single-task (b) multitask (c) cascade (d) triangle

Figure 1: Variations on the standard attentional model. In the standard single-task model, the decoder attends to the
encoder’s states. In a typical multitask setup, two decoders attend to the encoder’s states. In the cascade (Tu et al.,
2017), the second decoder attends to the first decoder’s states. In our proposed triangle model, the second decoder
attends to both the encoder’s states and the first decoder’s states. Note that for clarity’s sake there are dependencies
not shown.

y1j and y
1
j aligns to target word y

2
k , then xi should

also probably align to y2k . To encourage the model
to preserve this relationship, we add the following
transitivity regularizer to the loss function of the
triangle models with a small weight λtrans = 0.2:

Ltrans = score(Y1,Y2) − λtrans
∥∥∥A12A1 − A2

∥∥∥2
2.

Invertibility attention regularizer The transla-
tion relation also ought to be roughly invertible
(Levinboim et al., 2015): if, in the reconstruc-
tion version of the cascade model, source word
xi aligns to target word y1j , then it stands to rea-
son that y j is likely to align to xi. So, whereas Tu
et al. (2017) let the attentions of the translator and
the reconstructor be unrelated, we try adding the
following invertibility regularizer to encourage the
attentions to each be the inverse of the other, again
with a weight λinv = 0.2:

Linv = score(Y1,Y2) − λinv
∥∥∥A1A12 − I

∥∥∥2
2.

3.3 Decoding
Since we have two decoders, we now need to em-
ploy a two-phase beam search, following Tu et al.
(2017):

1. The first decoder produces, through standard
beam search, a set of triples each consist-
ing of a candidate transcription Ŷ1, a score
P(Ŷ1), and a hidden state sequence Ŝ.

2. For each transcription candidate from the first
decoder, the second decoder now produces

Corpus Speakers Segments Hours

Ainu-English 1 2,668 2.5
Mboshi-French 3 5,131 4.4
Spanish-English 240 17,394 20

Table 1: Statistics on our speech datasets.

through beam search a set of candidate trans-
lations Ŷ2, each with a score P(Ŷ2).

3. We then output the combination that yields
the highest total score(Y1,Y2).

3.4 Implementation
All our models are implemented in DyNet (Neubig
et al., 2017).2 We use a dropout of 0.2, and train
using Adam with initial learning rate of 0.0002 for
a maximum of 500 epochs. For testing, we select
the model with the best performance on dev. At
inference time, we use a beam size of 4 for each
decoder (due to GPU memory constraints), and
the beam scores include length normalization (Wu
et al., 2016) with a weight of 0.8, which Nguyen
and Chiang (2017) found to work well for low-
resource NMT.

4 Speech Transcription and Translation

We focus on speech transcription and translation
of endangered languages, using three different cor-

2Our code is available at: https://bitbucket.org/
antonis/dynet-multitask-models.

84



Model Search Mboshi French Ainu English Spanish English
ASR MT ASR MT CER BLEU CER BLEU CER BLEU

(1) auto text 1-best 1-best 42.3 21.4 44.0 16.4 63.2 24.2
(2) gold text — 1-best 0.0 31.2 0.0 19.3 0.0 51.3
(3) single-task 1-best — 20.8 — 12.0 — 21.6
(4) multitask 4-best 1-best 36.9 21.0 40.1 18.3 57.4 26.0

(5) cascade 4-best 1-best 39.7 24.3 42.1 19.8 58.1 26.8

(6) triangle 4-best 1-best 32.3 24.1 39.9 19.2 58.9 28.6
(7) triangle+Ltrans 4-best 1-best 33.0 24.7 43.3 20.2 59.3 28.6
(8) triangle 1-best 1-best 31.8 19.7 38.9 19.8 58.4 28.8
(9) triangle+Ltrans 1-best 1-best 32.1 20.9 43.0 20.3 59.1 28.5

Table 2: The multitask models outperform the baseline single-task model and the pivot approach (auto/text) on all
language pairs tested. The triangle model also outperforms the simple multitask models on both tasks in almost all
cases. The best results for each dataset and task are highlighted.

pora on three different language directions: Span-
ish (es) to English (en), Ainu (ai) to English, and
Mboshi (mb) to French (fr).

4.1 Data

Spanish is, of course, not an endangered language,
but the availability of the CALLHOME Spanish
Speech dataset (LDC2014T23) with English trans-
lations (Post et al., 2013) makes it a convenient
language to work with, as has been done in almost
all previous work in this area. It consists of tele-
phone conversations between relatives (about 20
total hours of audio) with more than 240 speak-
ers. We use the original train-dev-test split, with
the training set comprised of 80 conversations and
dev and test of 20 conversations each.

Hokkaido Ainu is the sole surviving member of
the Ainu language family and is generally consid-
ered a language isolate. As of 2007, only ten native
speakers were alive. The Glossed Audio Corpus
of Ainu Folklore provides 10 narratives with au-
dio (about 2.5 hours of audio) and translations in
Japanese and English.3 Since there does not exist
a standard train-dev-test split, we employ a cross
validation scheme for evaluation purposes. In each
fold, one of the 10 narratives becomes the test set,
with the previous one (mod 10) becoming the dev
set, and the remaining 8 narratives becoming the
training set. The models for each of the 10 folds
are trained and tested separately. On average, for
each fold, we train on about 2000 utterances; the
dev and test sets consist of about 270 utterances.

3http://ainucorpus.ninjal.ac.jp/corpus/en/

We report results on the concatenation of all folds.
The Ainu text is split into characters, except for the
equals (=) and underscore ( ) characters, which are
used as phonological or structural markers and are
thus merged with the following character.4

Mboshi (Bantu C25 in the Guthrie classifica-
tion) is a language spoken in Congo-Brazzaville,
without standard orthography. We use a corpus
(Godard et al., 2017) of 5517 parallel utterances
(about 4.4 hours of audio) collected from three na-
tive speakers. The corpus provides non-standard
grapheme transcriptions (close to the language
phonology) produced by linguists, as well as
French translations. We sampled 100 segments
from the training set to be our dev set, and used
the original dev set (514 sentences) as our test set.

4.2 Implementation

We employ a 3-layer speech encoding scheme
similar to that of Duong et al. (2016). The first
bidirectional layer receives the audio sequence in
the form of 39-dimensional Perceptual Linear Pre-
dictive (PLP) features (Hermansky, 1990) com-
puted over overlapping 25ms-wide windows ev-
ery 10ms. The second and third layers consist of
LSTMs with hidden state sizes of 128 and 512 re-
spectively. Each layer encodes every second out-
put of the previous layer. Thus, the sequence is
downsampled by a factor of 4, decreasing the com-
putation load for the attention mechanism and the
decoders. In the speech experiments, the decoders

4The data preprocessing scripts are released with the rest
of our code.

85



output the sequences at the grapheme level, so the
output embedding size is set to 64.

We found that this simpler speech encoder
works well for our extremely small datasets. Ap-
plying our models to larger datasets with many
more speakers would most likely require a more
sophisticated speech encoder, such as the one used
by Weiss et al. (2017).

4.3 Results

In Table 2, we present results on three small
datasets that demonstrate the efficacy of our mod-
els. We compare our proposed models against
three baselines and one “skyline.” The first base-
line is a traditional pivot approach (line 1), where
the ASR output, a sequence of characters, is the
input to a character-based NMT system (trained
on gold transcriptions). The “skyline” model (line
2) is the same NMT system, but tested on gold
transcriptions instead of ASR output. The second
baseline is translation directly from source speech
to target text (line 3). The last baseline is the stan-
dard multitask model (line 4), which is similar to
the model of Weiss et al. (2017).

The cascade model (line 5) outperforms the
baselines on the translation task, while only falling
behind the multitask model in the transcription
task. On all three datasets, the triangle model
(lines 6, 7) outperforms all baselines, including
the standard multitask model. On Ainu-English,
we even obtain translations that are comparable to
the “skyline” model, which is tested on gold Ainu
transcriptions.

Comparing the performance of all models
across the three datasets, there are two notable
trends that verify common intuitions regarding the
speech transcription and translation tasks. First, an
increase in the number of speakers hurts the per-
formance of the speech transcription tasks. The
character error rates for Ainu are smaller than the
CER in Mboshi, which in turn are smaller than the
CER in CALLHOME. Second, the character-level
BLEU scores increase as the amount of training
data increases, with our smallest dataset (Ainu)
having the lowest BLEU scores, and the largest
dataset (CALLHOME) having the highest BLEU
scores. This is expected, as more training data
means that the translation decoder learns a more
informed character-level language model for the
target language.

Note that Weiss et al. (2017) report much higher

BLEU scores on CALLHOME: our model un-
derperforms theirs by almost 9 word-level BLEU
points. However, their model has significantly
more parameters and is trained on 10 times
more data than ours. Such an amount of data
would never be available in our endangered lan-
guages scenario. When calculated on the word-
level, all our models’ BLEU scores are between 3
and 7 points for the extremely low resource
datasets (Mboshi-French and Ainu-English), and
between 7 and 10 for CALLHOME. Clearly, the
size of the training data in our experiments is not
enough for producing high quality speech transla-
tions, but we plan to investigate the performance
of our proposed models on larger datasets as part
of our future work.

To evaluate the effect of using the combined
score from both decoders at decoding time, we
evaluated the triangle models using only the 1-best
output from the speech model (lines 8, 9). One
would expect that this would favor speech at
the expense of translation. In transcription accu-
racy, we indeed observed improvements across the
board. In translation accuracy, we observed a sur-
prisingly large drop on Mboshi-French, but sur-
prisingly little effect on the other language pairs
– in fact, BLEU scores tended to go up slightly,
but not significantly.

Finally, Figure 2 visualizes the attention ma-
trices for one utterance from the baseline multi-
task model and our proposed triangle model. It
is clear that our intuition was correct: the transla-
tion decoder receives most of its context from the
transcription decoder, as indicated by the higher
attention weights of A12. Ideally, the area under
the red squares (gold alignments) would account
for 100% of the attention mass of A12. In our tri-
angle model, the total mass under the red squares
is 34%, whereas the multitask model’s correct at-
tentions amount to only 21% of the attention mass.

5 Word Discovery

Although the above results show that our model
gives large performance improvements, in abso-
lute terms, its performance on such low-resource
tasks leaves a lot of room for future improvement.
A possible more realistic application of our meth-
ods is word discovery, that is, finding word bound-
aries in unsegmented phonetic transcriptions.

After training an attentional encoder-decoder
model between Mboshi unsegmented phonetic se-

86



A1 A1

A2 A2 A
12

(a) multitask (b) triangle + transitivity

Figure 2: Attentions in an Mboshi-French sentence, extracted from two of our models. The red squares denote gold
alignments. The second decoder of the triangle model receives most of its context from the first decoder through
A12 instead of the source. The A2 matrix of the triangle model is more informed (34% correct attention mass) than
the multitask one (21% correct), due to the transitivity regularizer.

quences and French word sequences, the atten-
tion weights can be thought of as soft alignments,
which allow us to project the French word bound-
aries onto Mboshi. Although we could in princi-
ple perform word discovery directly on speech, we
leave this for future work, and only explore single-
task and reconstruction models.

5.1 Data

We use the same Mboshi-French corpus as in Sec-
tion 4, but with the original training set of 4617
utterances and the dev set of 514 utterances. Our
parallel data consist of the unsegmented phonetic
Mboshi transcriptions, along with the word-level
French translations.

5.2 Implementation

We first replicate the model of Boito et al. (2017),
with a single-layer bidirectional encoder and sin-
gle layer decoder, using an embedding and hidden
size of 12 for the base model, and an embedding
and hidden state size of 64 for the reverse model.
In our own models, we set the embedding size to
32 for Mboshi characters, 64 for French words,
and the hidden state size to 64. We smooth the at-

tention weights A using the method of Duong et al.
(2016) with a temperature T = 10 for the softmax
computation of the attention mechanism.

Following Boito et al. (2017), we train mod-
els both on the base Mboshi-to-French direction,
as well as the reverse (French-to-Mboshi) direc-
tion, with and without this smoothing operation.
We further smooth the computed soft alignments
of all models so that amn = (amn−1 +amn +amn+1)/3
as a post-processing step. From the single-task
models we extract the A1 attention matrices. We
also train reconstruction models on both direc-
tions, with and without the invertibility regularizer,
extracting both A1 and A12 matrices. The two ma-
trices are then combined so that A = A1 + (A12)T .

5.3 Results

Evaluation is done both at the token and the
type level, by computing precision, recall, and F-
score over the discovered segmentation, with the
best results shown in Table 3. We reimplemented
the base (Mboshi-French) and reverse (French-
Mboshi) models from Boito et al. (2017), and the
performance of the base model was comparable
to the one reported. However, we were unable to

87



Model (with smoothing)
Tokens Types

Precision Recall F-score Precision Recall F-score

Boito et al. 2017 base 5.85 6.82 6.30 6.76 15.00 9.32
(reported) reverse 21.44 16.49 18.64 27.23 15.02 19.36

Boito et al. 2017 base 6.87 6.33 6.59 6.17 13.02 8.37
(reimplementation) reverse 7.58 8.16 7.86 9.22 11.97 10.42

our single-task
base 7.99 7.57 7.78 7.59 16.41 10.38

reverse 11.31 11.82 11.56 9.29 14.75 11.40

reconstruction + 0.2Linv 8.93 9.78 9.33 8.66 15.48 11.02
reconstruction + 0.5Linv 7.42 10.00 8.52 10.46 16.36 12.76

Table 3: The reconstruction model with the invertibility regularizer produces more informed attentions that result
in better word discovery for Mboshi with an Mboshi-French model. Scores reported by previous work are in italics
and best scores from our experiments are in bold.

reproduce the significant gains that were reported
when using the reverse model (italicized in Ta-
ble 3). Also, our version of both the base and re-
verse singletask models performed better than our
reimplementation of the baseline.

Furthermore, we found that we were able to
obtain even better performance at the type level
by combining the attention matrices of a recon-
struction model trained with the invertibility reg-
ularizer. Boito et al. (2017) reported that combin-
ing the attention matrices of a base and a reverse
model significantly reduced performance, but they
trained the two models separately. In contrast, we
obtain the base (A1) and the reverse attention ma-
trices (A12) from a model that trains them jointly,
while also tying them together through the invert-
ibility regularizer. Using the regularizer is key to
the improvements; in fact, we did not observe any
improvements when we trained the reconstruction
models without the regularizer.

6 Negative Results: High-Resource Text
Translation

6.1 Data

For evaluating our models on text translation, we
use the Europarl corpus which provides parallel
sentences across several European languages. We
extracted 1,450,890 three-way parallel sentences
on English, French, and German. The concatena-
tion of the newstest 2011–2013 sets (8,017 sen-
tences) is our dev set, and our test set is the con-
catenation of the newstest 2014 and 2015 sets
(6,003 sentences). We test all architectures on the
six possible translation directions between English

(en), French (fr) and German (de). All the se-
quences are represented by subword units with
byte-pair encoding (BPE) (Sennrich et al., 2016)
trained on each language with 32000 operations.

6.2 Experimental Setup
On all experiments, the encoder and the decoder(s)
have 2 layers of LSTM units with hidden state size
and attention size of 1024, and embedding size
of 1024. For this high resource scenario, we only
train for a maximum of 40 epochs.

6.3 Results
The accuracy of all the models on all six lan-
guage pair directions is shown in Table 4. In all
cases, the best models are the baseline single-task
or simple multitask models. There are some in-
stances, such as English-German, where the re-
construction or the triangle models are not statis-
tically significantly different from the best model.
The reason for this, we believe, is that in the case
of text translation between so linguistically close
languages, the lower level representations (the out-
put of the encoder) provide as much information
as the higher level ones, without the search errors
that are introduced during inference.

A notable outcome of this experiment is that we
do not observe the significant improvements with
the reconstruction models that Tu et al. (2017) ob-
served. A few possible differences between our
experiment and theirs are: our models are BPE-
based, theirs are word-based; we use Adam for
optimization, they use Adadelta; our model has
slightly fewer parameters than theirs; we test on
less typologically different language pairs than

88



Model
s→ t

en→fr en→de fr→en fr→de de→en de→fr
singletask 20.92 12.69 20.96 11.24 16.10 15.29
multitask s→ x, t 20.54 12.79 20.01 11.18 16.31 15.07
cascade s→ x→ t 15.93 11.31 16.58 7.60 13.46 13.24
cascade s→ t → x 20.34 12.27 19.17 11.09 15.24 14.78
reconstruction 20.19 12.44 20.63 10.88 15.66 13.44
reconstruction +Linv 20.72 12.64 20.11 10.46 15.43 12.64
triangle s →x→−−−−−−→ t 20.39 12.70 17.93 10.17 14.94 14.07
triangle s →x→−−−−−−→ t +Ltrans 20.52 12.64 18.34 10.42 15.22 14.37
triangle s →t→−−−−−−→ x 20.38 12.40 18.50 10.22 15.62 14.77
triangle s →t→−−−−−−→ x +Ltrans 20.64 12.42 19.20 10.21 15.87 14.89

Table 4: BLEU scores for each model and translation direction s → t. In the multitask, cascade, and triangle
models, x stands for the third language, other than s and t. In each column, the best results are highlighted. The
non-highlighted results are statistically significantly worse than the single-task baseline.

English-Chinese.
However, we also observe that in most cases

our proposed regularizers lead to increased perfor-
mance. The invertibility regularizer aids the recon-
struction models in achiev slightly higher BLEU
scores in 3 out of the 6 cases. The transitivity reg-
ularizer is even more effective: in 9 out the 12
source-target language combinations, the triangle
models achieve higher performance when trained
using the regularizer. Some of them are statistical
significant improvements, as in the case of French
to English where English is the intermediate target
language and German is the final target.

7 Related Work

The speech translation problem has been tradi-
tionally approached by using the output of an
ASR system as input to a MT system. For ex-
ample, Ney (1999) and Matusov et al. (2005)
use ASR output lattices as input to translation
models, integrating speech recognition uncertainty
into the translation model. Recent work has fo-
cused more on modelling speech translation with-
out explicit access to transcriptions. Duong et al.
(2016) introduced a sequence-to-sequence model
for speech translation without transcriptions but
only evaluated on alignment, while Anastasopou-
los et al. (2016) presented an unsupervised align-
ment method for speech-to-translation alignment.
Bansal et al. (2017) used an unsupervised term
discovery system (Jansen et al., 2010) to clus-
ter recurring audio segments into pseudowords

and translate speech using a bag-of-words model.
Bérard et al. (2016) translated synthesized speech
data using a model similar to the Listen Attend
and Spell model (Chan et al., 2016). A larger-scale
study (Bérard et al., 2018) used an end-to-end neu-
ral system system for translating audio books be-
tween French and English. On a different line of
work, Boito et al. (2017) used the attentions of a
sequence-to-sequence model for word discovery.

Multitask learning (Caruana, 1998) has found
extensive use across several machine learning and
NLP fields. For example, Luong et al. (2016) and
Eriguchi et al. (2017) jointly learn to parse and
translate; Kim et al. (2017) combine CTC- and
attention-based models using multitask models for
speech transcription; Dong et al. (2015) use mul-
titask learning for multiple language translation.
Toshniwal et al. (2017) apply multitask learning
to neural speech recognition in a less traditional
fashion: the lower-level outputs of the speech en-
coder are used for fine-grained auxiliary tasks such
as predicting HMM states or phonemes, while the
final output of the encoder is passed to a character-
level decoder.

Our work is most similar to the work of Weiss
et al. (2017). They used sequence-to-sequence
models to transcribe Spanish speech and trans-
late it in English, by jointly training the two tasks
in a multitask scenario where the decoders share
the encoder. In contrast to our work, they use a
large corpus for training the model on roughly 163
hours of data, using the Spanish Fisher and CALL-

89



HOME conversational speech corpora. The pa-
rameter number of their model is significantly
larger than ours, as they use 8 encoder layers, and
4 layers for each decoder. This allows their model
to adequately learn from such a large amount of
data and deal well with speaker variation. How-
ever, training such a large model on endangered
language datasets would be infeasible.

Our model also bears similarities to the archi-
tecture of the model proposed by Tu et al. (2017).
They report significant gains in Chinese-English
translation by adding an additional reconstruction
decoder that attends on the last states of the trans-
lation decoder, mainly inspired by auto-encoders.

8 Conclusion

We presented a novel architecture for multitask
learning that provides the second task with higher-
level representations produced from the first task
decoder. Our model outperforms both the single-
task models as well as traditional multitask ar-
chitectures. Evaluating on extremely low-resource
settings, our model improves on both speech tran-
scription and translation. By augmenting our mod-
els with regularizers that implement transitivity
and invertibility, we obtain further improvements
on all low-resource tasks.

These results will hopefully lead to new tools
for endangered language documentation. Projects
like BULB aim to collect about 100 hours of audio
with translations, but it may be impractical to tran-
scribe this much audio for many languages. For
future work, we aim to extend these methods to
settings where we don’t necessarily have sentence
triples, but where some audio is only transcribed
and some audio is only translated.

Acknowledgements This work was generously
supported by NSF Award 1464553. We are grate-
ful to the anonymous reviewers for their useful
comments.

References
Gilles Adda, Sebastian Stüker, Martine Adda-Decker,

Odette Ambouroue, Laurent Besacier, David Bla-
chon, Hélène Bonneau-Maynard, Pierre Godard, Fa-
tima Hamlaoui, Dmitry Idiatov, et al. 2016. Break-
ing the unwritten language barrier: The BULB
project. Procedia Computer Science, 81:8–14.

Antonios Anastasopoulos, David Chiang, and Long
Duong. 2016. An unsupervised probability model

for speech-to-translation alignment of low-resource
languages. In Proc. EMNLP.

Dzmitry Bahdanau, Kyunghyun Cho, and Yoshua Ben-
gio. 2015. Neural machine translation by jointly
learning to align and translate. In Proc. ICLR.

Sameer Bansal, Herman Kamper, Adam Lopez, and
Sharon Goldwater. 2017. Towards speech-to-text
translation without speech recognition. In Proc.
EACL.

Alexandre Bérard, Laurent Besacier, Ali Can Ko-
cabiyikoglu, and Olivier Pietquin. 2018. End-to-
end automatic speech translation of audiobooks.
arXiv:1802.04200.

Alexandre Bérard, Olivier Pietquin, Christophe Servan,
and Laurent Besacier. 2016. Listen and translate:
A proof of concept for end-to-end speech-to-text
translation. In Proc. NIPS Workshop on End-to-end
Learning for Speech and Audio Processing.

Steven Bird, Lauren Gawne, Katie Gelbart, and Isaac
McAlister. 2014a. Collecting bilingual audio in re-
mote indigenous communities. In Proc. COLING.

Steven Bird, Florian R. Hanke, Oliver Adams, and Hae-
joong Lee. 2014b. Aikuma: A mobile app for col-
laborative language documentation. In Proc. of the
2014 Workshop on the Use of Computational Meth-
ods in the Study of Endangered Languages.

David Blachon, Elodie Gauthier, Laurent Besacier,
Guy-Noël Kouarata, Martine Adda-Decker, and An-
nie Rialland. 2016. Parallel speech collection for
under-resourced language studies using the LIG-
Aikuma mobile device app. In Proc. SLTU (Spoken
Language Technologies for Under-Resourced Lan-
guages), volume 81.

Marcely Zanon Boito, Alexandre Bérard, Aline Villav-
icencio, and Laurent Besacier. 2017. Unwritten lan-
guages demand attention too! word discovery with
encoder-decoder models. arXiv:1709.05631.

Rich Caruana. 1998. Multitask learning. In Learning
to learn, pages 95–133. Springer.

William Chan, Navdeep Jaitly, Quoc Le, and Oriol
Vinyals. 2016. Listen, attend and spell: A neural
network for large vocabulary conversational speech
recognition. In Proc. ICASSP, pages 4960–4964.
IEEE.

Daxiang Dong, Hua Wu, Wei He, Dianhai Yu, and
Haifeng Wang. 2015. Multi-task learning for mul-
tiple language translation. In Proc. ACL-IJCNLP.

Long Duong, Antonios Anastasopoulos, David Chiang,
Steven Bird, and Trevor Cohn. 2016. An attentional
model for speech translation without transcription.
In Proc. NAACL HLT.

Akiko Eriguchi, Yoshimasa Tsuruoka, and Kyunghyun
Cho. 2017. Learning to parse and translate improves
neural machine translation. In Proc. ACL.

90



P. Godard, G. Adda, M. Adda-Decker, J. Benjumea,
L. Besacier, J. Cooper-Leavitt, G-N. Kouarata,
L. Lamel, H. Maynard, M. Mueller, et al. 2017. A
very low resource language speech corpus for com-
putational language documentation experiments.
arXiv:1710.03501.

Hynek Hermansky. 1990. Perceptual linear predictive
(PLP) analysis of speech. J. Acoustical Society of
America, 87(4):1738–1752.

Aren Jansen, Kenneth Church, and Hynek Hermansky.
2010. Towards spoken term discovery at scale with
zero resources. In Proc. INTERSPEECH.

Suyoun Kim, Takaaki Hori, and Shinji Watanabe. 2017.
Joint CTC-attention based end-to-end speech recog-
nition using multi-task learning. In Proc. ICASSP.

Tomer Levinboim and David Chiang. 2015. Multi-task
word alignment triangulation for low-resource lan-
guages. In Proc. NAACL HLT.

Tomer Levinboim, Ashish Vaswani, and David Chiang.
2015. Model invertibility regularization: Sequence
alignment with or without parallel data. In Proc.
NAACL HLT.

Minh-Thang Luong, Quoc V Le, Ilya Sutskever, Oriol
Vinyals, and Lukasz Kaiser. 2016. Multi-task se-
quence to sequence learning. In Proc. ICLR.

Evgeny Matusov, Stephan Kanthak, and Hermann Ney.
2005. On the integration of speech recognition and
statistical machine translation. In Ninth European
Conference on Speech Communication and Technol-
ogy.

Graham Neubig, Chris Dyer, Yoav Goldberg, Austin
Matthews, Waleed Ammar, Antonios Anastasopou-
los, Miguel Ballesteros, David Chiang, Daniel
Clothiaux, Trevor Cohn, et al. 2017. DyNet: The
dynamic neural network toolkit. arXiv:1701.03980.

Hermann Ney. 1999. Speech translation: Coupling of
recognition and translation. In Proc. ICASSP, vol-
ume 1.

Toan Q. Nguyen and David Chiang. 2017. Transfer
learning across low-resource related languages for
neural machine translation. In Proc. IJCNLP.

Matt Post, Gaurav Kumar, Adam Lopez, Damianos
Karakos, Chris Callison-Burch, and Sanjeev Khu-
danpur. 2013. Improved speech-to-text transla-
tion with the Fisher and Callhome Spanish-English
speech translation corpus. In Proc. IWSLT.

Rico Sennrich, Barry Haddow, and Alexandra Birch.
2016. Neural machine translation of rare words with
subword units. In Proc. ACL.

Shubham Toshniwal, Hao Tang, Liang Lu, and Karen
Livescu. 2017. Multitask learning with low-level
auxiliary tasks for encoder-decoder based speech
recognition. In Proc. Interspeech.

Zhaopeng Tu, Yang Liu, Lifeng Shang, Xiaohua Liu,
and Hang Li. 2017. Neural machine translation with
reconstruction. In Proc. AAAI.

Haifeng Wang, Hua Wu, and Zhanyi Liu. 2006. Word
alignment for languages with scarce resources using
bilingual corpora of other language pairs. In Proc.
COLING/ACL, pages 874–881.

Ron J. Weiss, Jan Chorowski, Navdeep Jaitly, Yonghui
Wu, and Zhifeng Chen. 2017. Sequence-to-
sequence models can directly transcribe foreign
speech. In Proc. INTERSPEECH.

Yonghui Wu, Mike Schuster, Zhifeng Chen, Quoc V.
Le, Mohammad Norouzi, Wolfgang Macherey,
Maxim Krikun, Yuan Cao, Qin Gao, Klaus
Macherey, et al. 2016. Google’s neural machine
translation system: Bridging the gap between human
and machine translation. arXiv:1609.08144.

91


