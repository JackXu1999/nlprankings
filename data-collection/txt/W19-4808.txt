



















































Analyzing the Structure of Attention in a Transformer Language Model


Proceedings of the Second BlackboxNLP Workshop on Analyzing and Interpreting Neural Networks for NLP, pages 63–76
Florence, Italy, August 1, 2019. c©2019 Association for Computational Linguistics

63

Analyzing the Structure of Attention in a Transformer Language Model

Jesse Vig
Palo Alto Research Center

Machine Learning and
Data Science Group

Interaction and Analytics Lab
Palo Alto, CA, USA

jesse.vig@parc.com

Yonatan Belinkov
Harvard John A. Paulson School of

Engineering and Applied Sciences and
MIT Computer Science and

Artificial Intelligence Laboratory
Cambridge, MA, USA

belinkov@seas.harvard.edu

Abstract

The Transformer is a fully attention-based
alternative to recurrent networks that has
achieved state-of-the-art results across a range
of NLP tasks. In this paper, we analyze
the structure of attention in a Transformer
language model, the GPT-2 small pretrained
model. We visualize attention for individ-
ual instances and analyze the interaction be-
tween attention and syntax over a large cor-
pus. We find that attention targets different
parts of speech at different layer depths within
the model, and that attention aligns with de-
pendency relations most strongly in the mid-
dle layers. We also find that the deepest layers
of the model capture the most distant relation-
ships. Finally, we extract exemplar sentences
that reveal highly specific patterns targeted by
particular attention heads.

1 Introduction

Contextual word representations have recently
been used to achieve state-of-the-art perfor-
mance across a range of language understanding
tasks (Peters et al., 2018; Radford et al., 2018;
Devlin et al., 2018). These representations are
obtained by optimizing a language modeling (or
similar) objective on large amounts of text. The
underlying architecture may be recurrent, as in
ELMo (Peters et al., 2018), or based on multi-head
self-attention, as in OpenAI’s GPT (Radford et al.,
2018) and BERT (Devlin et al., 2018), which are
based on the Transformer (Vaswani et al., 2017).
Recently, the GPT-2 model (Radford et al., 2019)
outperformed other language models in a zero-
shot setting, again based on self-attention.

An advantage of using attention is that it can
help interpret the model by showing how the
model attends to different parts of the input (Bah-
danau et al., 2015; Belinkov and Glass, 2019).
Various tools have been developed to visualize

attention in NLP models, ranging from attention
matrix heatmaps (Bahdanau et al., 2015; Rush
et al., 2015; Rocktäschel et al., 2016) to bipartite
graph representations (Liu et al., 2018; Lee et al.,
2017; Strobelt et al., 2018). A visualization tool
designed specifically for multi-head self-attention
in the Transformer (Jones, 2017; Vaswani et al.,
2018) was introduced in Vaswani et al. (2017).

We extend the work of Jones (2017), by visu-
alizing attention in the Transformer at three lev-
els of granularity: the attention-head level, the
model level, and the neuron level. We also adapt
the original encoder-decoder implementation to
the decoder-only GPT-2 model, as well as the
encoder-only BERT model.

In addition to visualizing attention for individ-
ual inputs to the model, we also analyze attention
in aggregate over a large corpus to answer the fol-
lowing research questions:

• Does attention align with syntactic depen-
dency relations?

• Which attention heads attend to which part-
of-speech tags?

• How does attention capture long-distance re-
lationships versus short-distance ones?

We apply our analysis to the GPT-2 small pre-
trained model. We find that attention follows de-
pendency relations most strongly in the middle
layers of the model, and that attention heads tar-
get particular parts of speech depending on layer
depth. We also find that attention spans the great-
est distance in the deepest layers, but varies signif-
icantly between heads. Finally, our method for ex-
tracting exemplar sentences yields many intuitive
patterns.



64

2 Related Work

Recent work suggests that the Transformer im-
plicitly encodes syntactic information such as de-
pendency parse trees (Hewitt and Manning, 2019;
Raganato and Tiedemann, 2018), anaphora (Voita
et al., 2018), and subject-verb pairings (Goldberg,
2019; Wolf, 2019). Other work has shown that
RNNs also capture syntax, and that deeper layers
in the model capture increasingly high-level con-
structs (Blevins et al., 2018).

In contrast to past work that measure a model’s
syntactic knowledge through linguistic probing
tasks, we directly compare the model’s atten-
tion patterns to syntactic constructs such as de-
pendency relations and part-of-speech tags. Ra-
ganato and Tiedemann (2018) also evaluated de-
pendency trees induced from attention weights in a
Transformer, but in the context of encoder-decoder
translation models.

3 Transformer Architecture

Stacked Decoder: GPT-2 is a stacked decoder
Transformer, which inputs a sequence of tokens
and applies position and token embeddings fol-
lowed by several decoder layers. Each layer ap-
plies multi-head self-attention (see below) in com-
bination with a feedforward network, layer nor-
malization, and residual connections. The GPT-2
small model has 12 layers and 12 heads.

Self-Attention: Given an input x, the self-
attention mechanism assigns to each token xi a set
of attention weights over the tokens in the input:

Attn(xi) = (αi,1(x), αi,2(x), ..., αi,i(x)) (1)

where αi,j(x) is the attention that xi pays to xj .
The weights are positive and sum to one. Attention
in GPT-2 is right-to-left, so αi,j is defined only for
j ≤ i. In the multi-layer, multi-head setting, α is
specific to a layer and head.

The attention weights αi,j(x) are computed
from the scaled dot-product of the query vector of
xi and the key vector of xj , followed by a softmax
operation. The attention weights are then used to
produce a weighted sum of value vectors:

Attention(Q,K, V ) = softmax(
QKT√
dk

)V (2)

using query matrix Q, key matrix K, and value
matrix V , where dk is the dimension of K. In a

multi-head setting, the queries, keys, and values
are linearly projected h times, and the attention
operation is performed in parallel for each repre-
sentation, with the results concatenated.

4 Visualizing Individual Inputs

In this section, we present three visualizations of
attention in the Transformer model: the attention-
head view, the model view, and the neuron view.
Source code and Jupyter notebooks are avail-
able at https://github.com/jessevig/
bertviz, and a video demonstration can be
found at https://vimeo.com/339574955.
A more detailed discussion of the tool is provided
in Vig (2019).

4.1 Attention-head View

The attention-head view (Figure 1) visualizes at-
tention for one or more heads in a model layer.
Self-attention is depicted as lines connecting the
attending tokens (left) with the tokens being at-
tended to (right). Colors identify the head(s), and
line weight reflects the attention weight. This view
closely follows the design of Jones (2017), but has
been adapted to the GPT-2 model (shown in the
figure) and BERT model (not shown).

Figure 1: Attention-head view of GPT-2 for layer 4,
head 11, which focuses attention on previous token.

This view helps focus on the role of specific at-
tention heads. For instance, in the shown example,
the chosen attention head attends primarily to the
previous token position.

https://github.com/jessevig/bertviz
https://github.com/jessevig/bertviz
https://vimeo.com/339574955


65

Figure 2: Model view of GPT-2, for same input as in
Figure 1 (excludes layers 6–11 and heads 6–11).

4.2 Model View
The model view (Figure 2) visualizes attention
across all of the model’s layers and heads for a
particular input. Attention heads are presented in
tabular form, with rows representing layers and
columns representing heads. Each head is shown
in a thumbnail form that conveys the coarse shape
of the attention pattern, following the small multi-
ples design pattern (Tufte, 1990). Users may also
click on any head to enlarge it and see the tokens.

This view facilitates the detection of coarse-
grained differences between heads. For example,
several heads in layer 0 share a horizontal-stripe
pattern, indicating that tokens attend to the current
position. Other heads have a triangular pattern,
showing that they attend to the first token. In the
deeper layers, some heads display a small number
of highly defined lines, indicating that they are tar-
geting specific relationships between tokens.

4.3 Neuron View
The neuron view (Figure 3) visualizes how indi-
vidual neurons interact to produce attention. This
view displays the queries and keys for each to-
ken, and demonstrates how attention is computed
from the scaled dot product of these vectors. The
element-wise product shows how specific neurons
influence the dot product and hence attention.

Whereas the attention-head view and the model
view show what attention patterns the model
learns, the neuron view shows how the model
forms these patterns. For example, it can help
identify neurons responsible for specific attention
patterns, as illustrated in Figure 3.

5 Analyzing Attention in Aggregate

In this section we explore the aggregate proper-
ties of attention across an entire corpus. We ex-
amine how attention interacts with syntax, and we
compare long-distance versus short-distance rela-
tionships. We also extract exemplar sentences that
reveal patterns targeted by each attention head.

5.1 Methods

5.1.1 Part-of-Speech Tags

Past work suggests that attention heads in the
Transformer may specialize in particular linguis-
tic phenomena (Vaswani et al., 2017; Raganato
and Tiedemann, 2018; Vig, 2019). We explore
whether individual attention heads in GPT-2 target
particular parts of speech. Specifically, we mea-
sure the proportion of total attention from a given
head that focuses on tokens with a given part-of-
speech tag, aggregated over a corpus:

Pα(tag) =

∑
x∈X

|x|∑
i=1

i∑
j=1

αi,j(x)·1pos(xj)=tag

∑
x∈X

|x|∑
i=1

i∑
j=1

αi,j(x)

(3)

where tag is a part-of-speech tag, e.g., NOUN, x is
a sentence from the corpus X , αi,j is the attention
from xi to xj for the given head (see Section 3),
and pos(xj) is the part-of-speech tag of xj . We
also compute the share of attention directed from
each part of speech in a similar fashion.

5.1.2 Dependency Relations

Recent work shows that Transformers and recur-
rent models encode dependency relations (Hewitt
and Manning, 2019; Raganato and Tiedemann,
2018; Liu et al., 2019). However, different mod-
els capture dependency relations at different layer
depths. In a Transformer model, the middle layers
were most predictive of dependencies (Liu et al.,
2019; Tenney et al., 2019). Recurrent models were
found to encode dependencies in lower layers for
language models (Liu et al., 2019) and in deeper
layers for translation models (Belinkov, 2018).

We analyze how attention aligns with depen-
dency relations in GPT-2 by computing the pro-
portion of attention that connects tokens that are
also in a dependency relation with one another. We



66

Figure 3: Neuron view for layer 8, head 6, which targets items in lists. Positive and negative values are colored blue
and orange, respectively, and color saturation indicates magnitude. This view traces the computation of attention
(Section 3) from the selected token on the left to each of the tokens on the right. Connecting lines are weighted
based on attention between the respective tokens. The arrows (not in visualization) identify the neurons that most
noticeably contribute to this attention pattern: the lower arrows point to neurons that contribute to attention towards
list items, while the upper arrow identifies a neuron that helps focus attention on the first token in the sequence.

refer to this metric as dependency alignment:

DepAlα =

∑
x∈X

|x|∑
i=1

i∑
j=1

αi,j(x)dep(xi, xj)

∑
x∈X

|x|∑
i=1

i∑
j=1

αi,j(x)

(4)

where dep(xi, xj) is an indicator function that re-
turns 1 if xi and xj are in a dependency relation
and 0 otherwise. We run this analysis under three
alternate formulations of dependency: (1) the at-
tending token (xi) is the parent in the dependency
relation, (2) the token receiving attention (xj) is
the parent, and (3) either token is the parent.

We hypothesized that heads that focus attention
based on position—for example, the head in Fig-
ure 1 that focuses on the previous token—would
not align well with dependency relations, since
they do not consider the content of the text. To dis-
tinguish between content-dependent and content-
independent (position-based) heads, we define at-
tention variability, which measures how attention
varies over different inputs; high variability would
suggest a content-dependent head, while low vari-
ability would indicate a content-independent head:

Variabilityα =

∑
x∈X

|x|∑
i=1

i∑
j=1
|αi,j(x)− ᾱi,j |

2 ·
∑
x∈X

|x|∑
i=1

i∑
j=1

αi,j(x)

(5)

where ᾱi,j is the mean of αi,j(x) over all x ∈ X .

Variabilityα represents the mean absolute de-
viation1 of α over X , scaled to the [0, 1] inter-
val.2,3 Variability scores for three example atten-
tion heads are shown in Figure 4.

5.1.3 Attention Distance
Past work suggests that deeper layers in NLP
models capture longer-distance relationships than
lower layers (Belinkov, 2018; Raganato and
Tiedemann, 2018). We test this hypothesis on
GPT-2 by measuring the mean distance (in num-
ber of tokens) spanned by attention for each head.
Specifically, we compute the average distance be-
tween token pairs in all sentences in the corpus,
weighted by the attention between the tokens:

D̄α =

∑
x∈X

|x|∑
i=1

i∑
j=1

αi,j(x) · (i− j)

∑
x∈X

|x|∑
i=1

i∑
j=1

αi,j(x)

(6)

We also explore whether heads with more dis-
1We considered using variance to measure attention vari-

ability; however, attention is sparse for many attention heads
after filtering first-token attention (see Section 5.2.3), result-
ing in a very low variance (due to αi,j(x) ≈ 0 and ᾱi,j ≈ 0)
for many content-sensitive attention heads. We did not use a
probability distance measure, as attention values do not sum
to one due to filtering first-token attention.

2The upper bound is 1 because the denominator is an
upper bound on the numerator.

3When computing variability, we only include the firstN
tokens (N=10) of each x ∈ X to ensure a sufficient amount
of data at each position i. The positional patterns appeared to
be consistent across the entire sequence.



67

Figure 4: Attention heads in GPT-2 visualized for an example input sentence, along with aggregate metrics com-
puted from all sentences in the corpus. Note that the average sentence length in the corpus is 27.7 tokens. Left:
Focuses attention primarily on current token position. Center: Disperses attention roughly evenly across all pre-
vious tokens. Right: Focuses on words in repeated phrases.

Figure 5: Proportion of attention focused on first token,
broken out by layer and head.

persed attention patterns (Figure 4, center) tend to
capture more distant relationships. We measure
attention dispersion based on the entropy4 of the
attention distribution (Ghader and Monz, 2017):

Entropyα(xi) = −
i∑

j=1

αi,j(x)log(αi,j(x)) (7)

Figure 4 shows the mean distance and entropy
values for three example attention heads.

5.2 Experimental Setup
5.2.1 Dataset
We focused our analysis on text from English
Wikipedia, which was not included in the training

4When computing entropy, we exclude attention to the
first (null) token (see Section 5.2.3) and renormalize the re-
maining weights. We exclude tokens that focus over 90% of
attention to the first token, to avoid a disproportionate influ-
ence from the remaining attention from these tokens.

set for GPT-2. We first extracted 10,000 articles,
and then sampled 100,000 sentences from these ar-
ticles. For the qualitative analysis described later,
we used the full dataset; for the quantitative anal-
ysis, we used a subset of 10,000 sentences.

5.2.2 Tools

We computed attention weights using the
pytorch-pretrained-BERT5 implemen-
tation of the GPT-2 small model. We extracted
syntactic features using spaCy (Honnibal and
Montani, 2017) and mapped the features from
the spaCy-generated tokens to the corresponding
tokens from the GPT-2 tokenizer.6

5.2.3 Filtering Null Attention

We excluded attention focused on the first token
of each sentence from the analysis because it was
not informative; other tokens appeared to focus
on this token by default when no relevant tokens
were found elsewhere in the sequence. On aver-
age, 57% of attention was directed to the first to-
ken. Some heads focused over 97% of attention
to this token on average (Figure 5), which is con-
sistent with recent work showing that individual
attention heads may have little impact on over-
all performance (Voita et al., 2019; Michel et al.,
2019). We refer to the attention directed to the first
token as null attention.

5https://github.com/huggingface/
pytorch-pretrained-BERT

6In cases where the GPT-2 tokenizer split a word into
multiple pieces, we assigned the features to all word pieces.

https://github.com/huggingface/pytorch-pretrained-BERT
https://github.com/huggingface/pytorch-pretrained-BERT


68

Figure 6: Each heatmap shows the proportion of total attention directed to the given part of speech, broken out by
layer (vertical axis) and head (horizontal axis). Scales vary by tag. Results for all tags available in appendix.

Figure 7: Each heatmap shows the proportion of total attention that originates from the given part of speech, broken
out by layer (vertical axis) and head (horizontal axis). Scales vary by tag. Results for all tags available in appendix.

5.3 Results

5.3.1 Part-of-Speech Tags

Figure 6 shows the share of attention directed to
various part-of-speech tags (Eq. 3) broken out by
layer and head. Most tags are disproportionately
targeted by one or more attention heads. For ex-
ample, nouns receive 43% of attention in layer 9,
head 0, compared to a mean of 21% over all heads.
For 13 of 16 tags, a head exists with an attention
share more than double the mean for the tag.

The attention heads that focus on a particular
tag tend to cluster by layer depth. For example,
the top five heads targeting proper nouns are all in
the last three layers of the model. This may be due
to several attention heads in the deeper layers fo-
cusing on named entities (see Section 5.4), which
may require the broader context available in the
deeper layers. In contrast, the top five heads tar-
geting determiners—a lower-level construct—are
all in the first four layers of the model. This is con-
sistent with previous findings showing that deeper
layers focus on higher-level properties (Blevins
et al., 2018; Belinkov, 2018).

Figure 7 shows the proportion of attention di-
rected from various parts of speech. The values
appear to be roughly uniform in the initial lay-
ers of the model. The reason is that the heads in
these layers pay little attention to the first (null) to-
ken (Figure 5), and therefore the remaining (non-

null) attention weights sum to a value close to
one. Thus, the net weight for each token in the
weighted sum (Section 5.1.1) is close to one, and
the proportion reduces to the frequency of the part
of speech in the corpus.

Beyond the initial layers, attention heads spe-
cialize in focusing attention from particular part-
of-speech tags. However, the effect is less pro-
nounced compared to the tags receiving attention;
for 7 out of 16 tags, there is a head that focuses
attention from that tag with a frequency more than
double the tag average. Many of these specialized
heads also cluster by layer. For example, the top
ten heads for focusing attention from punctuation
are all in the last six layers.

5.3.2 Dependency Relations

Figure 8 shows the dependency alignment scores
(Eq. 4) broken out by layer. Attention aligns with
dependency relations most strongly in the mid-
dle layers, consistent with recent syntactic probing
analyses (Liu et al., 2019; Tenney et al., 2019).

One possible explanation for the low alignment
in the initial layers is that many heads in these lay-
ers focus attention based on position rather than
content, according to the attention variability (Eq.
5) results in Figure 10. Figure 4 (left and center)
shows two examples of position-focused heads
from layer 0 that have relatively low dependency
alignment7 (0.04 and 0.10, respectively); the first



69

Figure 8: Proportion of attention that is aligned with dependency relations, aggregated by layer. The orange line
shows the baseline proportion of token pairs that share a dependency relationship, independent of attention.

Figure 9: Proportion of attention directed to various dependency types, broken out by layer.

Figure 10: Attention variability by layer / head.
High-values indicate content-dependent heads, and low
values indicate content-independent (position-based)
heads.

head focuses attention primarily on the current to-
ken position (which cannot be in a dependency re-
lation with itself) and the second disperses atten-
tion roughly evenly, without regard to content.

An interesting counterexample is layer 4, head
11 (Figure 1), which has the highest depen-
dency alignment out of all the heads (DepAlα =
0.42)7 but is also the most position-focused
(Variabilityα = 0.004). This head focuses atten-
tion on the previous token, which in our corpus
has a 42% chance of being in a dependency rela-

7Assuming relation may be in either direction.

tion with the adjacent token. As we’ll discuss in
the next section, token distance is highly predic-
tive of dependency relations.

One hypothesis for why attention diverges from
dependency relations in the deeper layers is that
several attention heads in these layers target very
specific constructs (Tables 1 and 2) as opposed to
more general dependency relations. The deepest
layers also target longer-range relationships (see
next section), whereas dependency relations span
relatively short distances (3.89 tokens on average).

We also analyzed the specific dependency types
of tokens receiving attention (Figure 9). Sub-
jects (csubj, csubjpass, nsubj, nsubjpass) were
targeted more in deeper layers, while auxiliaries
(aux), conjunctions (cc), determiners (det), ex-
pletives (expl), and negations (neg) were targeted
more in lower layers, consistent with previous
findings (Belinkov, 2018). For some other depen-
dency types, the interpretations were less clear.

5.3.3 Attention Distance
We found that attention distance (Eq. 6) is greatest
in the deepest layers (Figure 11, right), confirm-
ing that these layers capture longer-distance rela-
tionships. Attention distance varies greatly across
heads (SD = 3.6), even when the heads are in the
same layer, due to the wide variation in attention
structures (e.g., Figure 4 left and center).



70

Figure 11: Mean attention distance by layer / head (left), and by layer (right).

Figure 12: Mean attention entropy by layer / head.
Higher values indicate more diffuse attention.

We also explored the relationship between at-
tention distance and attention entropy (Eq. 7),
which measures how diffuse an attention pattern
is. Overall, we found a moderate correlation (r =
0.61, p < 0.001) between the two. As Figure 12
shows, many heads in layers 0 and 1 have high en-
tropy (e.g., Figure 4, center), which may explain
why these layers have a higher attention distance
compared to layers 2–4.

One counterexample is layer 5, head 1 (Fig-
ure 4, right), which has the highest mean attention
distance of any head (14.2), and one of the low-
est mean entropy scores (0.41). This head con-
centrates attention on individual words in repeated
phrases, which often occur far apart from one an-
other.

We also explored how attention distance re-
lates to dependency alignment. Across all heads,
we found a negative correlation between the two
quantities (r = −0.73, p < 0.001). This is con-
sistent with the fact that the probability of two to-
kens sharing a dependency relation decreases as
the distance between them increases8; for exam-

8This is true up to a distance of 18 tokens; 99.8% of de-
pendency relations occur within this distance.

ple, the probability of being in a dependency rela-
tion is 0.42 for adjacent tokens, 0.07 for tokens at
a distance of 5, and 0.02 for tokens at a distance of
10. The layers (2–4) in which attention spanned
the shortest distance also had the highest depen-
dency alignment.

5.4 Qualitative Analysis
To get a sense of the lexical patterns targeted by
each attention head, we extracted exemplar sen-
tences that most strongly induced attention in that
head. Specifically, we ranked sentences by the
maximum token-to-token attention weight within
each sentence. Results for three attention heads
are shown in Tables 1–3. We found other attention
heads that detected entities (people, places, dates),
passive verbs, acronyms, nicknames, paired punc-
tuation, and other syntactic and semantic proper-
ties. Most heads captured multiple types of pat-
terns.

6 Conclusion

In this paper, we analyzed the structure of atten-
tion in the GPT-2 Transformer language model.
We found that many attention heads specialize
in particular part-of-speech tags and that different
tags are targeted at different layer depths. We also
found that the deepest layers capture the most dis-
tant relationships, and that attention aligns most
strongly with dependency relations in the middle
layers where attention distance is lowest.

Our qualitative analysis revealed that the struc-
ture of attention is closely tied to the training ob-
jective; for GPT-2, which was trained using left-
to-right language modeling, attention often fo-
cused on words most relevant to predicting the
next token in the sequence. For future work, we
would like to extend the analysis to other Trans-
former models such as BERT, which has a bidi-



71

Rank Sentence
1 The Australian search and rescue service is provided by Aus S AR , which is part of the

Australian Maritime Safety Authority ( AM SA ).
2 In 1925 , Bapt ists worldwide formed the Baptist World Alliance ( B WA ).
3 The Oak dale D ump is listed as an Environmental Protection Agency Super fund site due

to the contamination of residential drinking water wells with volatile organic compounds (
V OC s ) and heavy metals .

Table 1: Exemplar sentences for layer 10, head 10, which focuses attention from acronyms to the associated phrase.
The tokens with maximum attention are underlined; the attending token is bolded and the token receiving attention
is italicized. It appears that attention is directed to the part of the phrase that would help the model choose the next
word piece in the acronym (after the token paying attention), reflecting the language modeling objective.

Rank Sentence
1 After the two prototypes were completed , production began in Mar iet ta , Georgia , ...
3 The fictional character Sam Fisher of the Spl inter Cell video game series by Ubisoft was

born in Tow son , as well as residing in a town house , as stated in the novel izations ...
4 Suicide bombers attack three hotels in Am man , Jordan , killing at least 60 people .

Table 2: Exemplar sentences for layer 11, head 2, which focuses attention from commas to the preceding place
name (or the last word piece thereof). The likely purpose of this attention head is to help the model choose the
related place name that would follow the comma, e.g. the country or state in which the city is located.

Rank Sentence
1 With the United States isolation ist and Britain stout ly refusing to make the ” continental

commitment ” to defend France on the same scale as in World War I , the prospects of Anglo
- American assistance in another war with Germany appeared to be doubtful ...

2 The show did receive a somewhat favorable review from noted critic Gilbert Se ld es in the
December 15 , 1962 TV Guide : ” The whole notion on which The Beverly Hill bill ies is
founded is an encouragement to ignorance ...

3 he Arch im edes won significant market share in the education markets of the UK , Ireland
, Australia and New Zealand ; the success of the Arch im edes in British schools was due
partly to its predecessor the BBC Micro and later to the Comput ers for Schools scheme ...

Table 3: Exemplar sentences for layer 11, head 10 which focuses attention from the end of a noun phrase to the
head noun. In the first sentence, for example, the head noun is prospects and the remainder of the noun phrase is
of Anglo - American assistance in another war with Germany. The purpose of this attention pattern is likely to
predict the word (typically a verb) that follows the noun phrase, as the head noun is a strong predictor of this.

rectional architecture and is trained on both token-
level and sentence-level tasks.

Although the Wikipedia sentences used in our
analysis cover a diverse range of topics, they all
follow a similar encyclopedic format and style.
Further study is needed to determine how attention
patterns manifest in other types of content, such as
dialog scripts or song lyrics. We would also like
to analyze attention patterns in text much longer
than a single sentence, especially for new Trans-
former variants such as the Transformer-XL (Dai
et al., 2019) and Sparse Transformer (Child et al.,
2019), which can handle very long contexts.

We believe that interpreting a model based on
attention is complementary to linguistic probing

approaches (Section 2). While linguistic prob-
ing precisely quantifies the amount of information
encoded in various components of the model, it
requires training and evaluating a probing clas-
sifier. Analyzing attention is a simpler process
that also produces human-interpretable descrip-
tions of model behavior, though recent work casts
doubt on its role in explaining individual predic-
tions (Jain and Wallace, 2019). The results of
our analyses were often consistent with those from
probing approaches.

7 Acknowledgements

Y.B. was supported by the Harvard Mind, Brain,
and Behavior Initiative.



72

References

Dzmitry Bahdanau, Kyunghyun Cho, and Yoshua Ben-
gio. 2015. Neural machine translation by jointly
learning to align and translate. In International Con-
ference on Learning Representations (ICLR).

Yonatan Belinkov. 2018. On Internal Language Rep-
resentations in Deep Learning: An Analysis of Ma-
chine Translation and Speech Recognition. Ph.D.
thesis, Massachusetts Institute of Technology.

Yonatan Belinkov and James Glass. 2019. Analysis
methods in neural language processing: A survey.
Transactions of the Association for Computational
Linguistics, 7:49–72.

Terra Blevins, Omer Levy, and Luke Zettlemoyer.
2018. Deep RNNs encode soft hierarchical syntax.
arXiv preprint arXiv:1805.04218.

Rewon Child, Scott Gray, Alec Radford, and
Ilya Sutskever. 2019. Generating long se-
quences with sparse transformers. arXiv preprint
arXiv:1904.10509.

Zihang Dai, Zhilin Yang, Yiming Yang, Jaime G.
Carbonell, Quoc V. Le, and Ruslan Salakhutdinov.
2019. Transformer-XL: Attentive language models
beyond a fixed-length context.

Jacob Devlin, Ming-Wei Chang, Kenton Lee, and
Kristina Toutanova. 2018. BERT: Pre-training of
deep bidirectional transformers for language under-
standing. arXiv preprint arXiv:1810.04805.

Hamidreza Ghader and Christof Monz. 2017. What
does attention in neural machine translation pay at-
tention to? In Proceedings of the Eighth Interna-
tional Joint Conference on Natural Language Pro-
cessing (Volume 1: Long Papers), pages 30–39.

Yoav Goldberg. 2019. Assessing BERT’s syntactic
abilities. arXiv preprint arXiv:1901.05287.

John Hewitt and Christopher D. Manning. 2019. A
structural probe for finding syntax in word repre-
sentations. In Proceedings of the Conference of
the North American Chapter of the Association for
Computational Linguistics: Human Language Tech-
nologies.

Matthew Honnibal and Ines Montani. 2017. spaCy 2:
Natural language understanding with Bloom embed-
dings, convolutional neural networks and incremen-
tal parsing. To appear.

Sarthak Jain and Byron C. Wallace. 2019. Attention is
not explanation. CoRR, abs/1902.10186.

Llion Jones. 2017. Tensor2tensor transformer
visualization. https://github.com/
tensorflow/tensor2tensor/tree/
master/tensor2tensor/visualization.

Jaesong Lee, Joong-Hwi Shin, and Jun-Seok Kim.
2017. Interactive visualization and manipulation
of attention-based neural machine translation. In
Proceedings of the 2017 Conference on Empirical
Methods in Natural Language Processing: System
Demonstrations.

Nelson F. Liu, Matt Gardner, Yonatan Belinkov,
Matthew Peters, and Noah A. Smith. 2019. Lin-
guistic knowledge and transferability of contextual
representations. In Proceedings of the 17th Annual
Conference of the North American Chapter of the
Association for Computational Linguistics: Human
Language Technologies (NAACL-HLT).

Shusen Liu, Tao Li, Zhimin Li, Vivek Srikumar, Vale-
rio Pascucci, and Peer-Timo Bremer. 2018. Visual
interrogation of attention-based models for natural
language inference and machine comprehension. In
Proceedings of the 2018 Conference on Empirical
Methods in Natural Language Processing: System
Demonstrations.

Paul Michel, Omer Levy, and Graham Neubig. 2019.
Are sixteen heads really better than one? arXiv
preprint arXiv:1905.10650.

Matthew Peters, Mark Neumann, Mohit Iyyer, Matt
Gardner, Christopher Clark, Kenton Lee, and Luke
Zettlemoyer. 2018. Deep contextualized word repre-
sentations. In Proceedings of the 2018 Conference
of the North American Chapter of the Association
for Computational Linguistics: Human Language
Technologies, Volume 1 (Long Papers), pages 2227–
2237. Association for Computational Linguistics.

Alec Radford, Karthik Narasimhan, Tim Salimans, and
Ilya Sutskever. 2018. Improving language under-
standing by generative pre-training. Technical re-
port.

Alec Radford, Jeffrey Wu, Rewon Child, David Luan,
Dario Amodei, and Ilya Sutskever. 2019. Language
models are unsupervised multitask learners. Techni-
cal report.

Alessandro Raganato and Jörg Tiedemann. 2018. An
analysis of encoder representations in Transformer-
based machine translation. In Proceedings of the
2018 EMNLP Workshop BlackboxNLP: Analyzing
and Interpreting Neural Networks for NLP, pages
287–297. Association for Computational Linguis-
tics.

Tim Rocktäschel, Edward Grefenstette, Karl Moritz
Hermann, Tomas Kocisky, and Phil Blunsom. 2016.
Reasoning about entailment with neural attention.
In International Conference on Learning Represen-
tations (ICLR).

Alexander M. Rush, Sumit Chopra, and Jason Weston.
2015. A neural attention model for abstractive sen-
tence summarization. In Proceedings of the 2015
Conference on Empirical Methods in Natural Lan-
guage Processing.

http://arxiv.org/abs/1409.0473
http://arxiv.org/abs/1409.0473
https://doi.org/10.1162/tacl_a_00254
https://doi.org/10.1162/tacl_a_00254
https://arxiv.org/abs/1805.04218
https://arxiv.org/abs/1904.10509
https://arxiv.org/abs/1904.10509
http://arxiv.org/abs/1901.02860
http://arxiv.org/abs/1901.02860
https://arxiv.org/pdf/1810.04805.pdf
https://arxiv.org/pdf/1810.04805.pdf
https://arxiv.org/pdf/1810.04805.pdf
https://www.aclweb.org/anthology/I17-1004
https://www.aclweb.org/anthology/I17-1004
https://www.aclweb.org/anthology/I17-1004
https://arxiv.org/abs/1901.05287
https://arxiv.org/abs/1901.05287
http://arxiv.org/abs/1902.10186
http://arxiv.org/abs/1902.10186
https://github.com/tensorflow/tensor2tensor/tree/master/tensor2tensor/visualization
https://github.com/tensorflow/tensor2tensor/tree/master/tensor2tensor/visualization
https://github.com/tensorflow/tensor2tensor/tree/master/tensor2tensor/visualization
https://doi.org/10.18653/v1/D17-2021
https://doi.org/10.18653/v1/D17-2021
https://www.aclweb.org/anthology/D18-2007
https://www.aclweb.org/anthology/D18-2007
https://www.aclweb.org/anthology/D18-2007
https://arxiv.org/abs/1905.10650
https://doi.org/10.18653/v1/N18-1202
https://doi.org/10.18653/v1/N18-1202
https://s3-us-west-2.amazonaws.com/openai-assets/research-covers/language-unsupervised/language_understanding_paper.pdf
https://s3-us-west-2.amazonaws.com/openai-assets/research-covers/language-unsupervised/language_understanding_paper.pdf
https://d4mucfpksywv.cloudfront.net/better-language-models/language_models_are_unsupervised_multitask_learners.pdf
https://d4mucfpksywv.cloudfront.net/better-language-models/language_models_are_unsupervised_multitask_learners.pdf
https://www.aclweb.org/anthology/W18-5431
https://www.aclweb.org/anthology/W18-5431
https://www.aclweb.org/anthology/W18-5431


73

H. Strobelt, S. Gehrmann, M. Behrisch, A. Perer,
H. Pfister, and A. M. Rush. 2018. Seq2Seq-Vis:
A Visual Debugging Tool for Sequence-to-Sequence
Models. ArXiv e-prints.

Ian Tenney, Dipanjan Das, and Ellie Pavlick. 2019.
BERT rediscovers the classical NLP pipeline. In
Proceedings of the Association for Computational
Linguistics.

Edward Tufte. 1990. Envisioning Information. Graph-
ics Press, Cheshire, CT, USA.

Ashish Vaswani, Samy Bengio, Eugene Brevdo, Fran-
cois Chollet, Aidan N. Gomez, Stephan Gouws,
Llion Jones, Łukasz Kaiser, Nal Kalchbrenner, Niki
Parmar, Ryan Sepassi, Noam Shazeer, and Jakob
Uszkoreit. 2018. Tensor2tensor for neural machine
translation. CoRR, abs/1803.07416.

Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob
Uszkoreit, Llion Jones, Aidan N Gomez, Ł ukasz
Kaiser, and Illia Polosukhin. 2017. Attention is all
you need. arXiv preprint arXiv:1706.03762.

Jesse Vig. 2019. A multiscale visualization of atten-
tion in the Transformer model. In Proceedings of
the Association for Computational Linguistics: Sys-
tem Demonstrations.

Elena Voita, Pavel Serdyukov, Rico Sennrich, and Ivan
Titov. 2018. Context-aware neural machine trans-
lation learns anaphora resolution. In Proceedings
of the 56th Annual Meeting of the Association for
Computational Linguistics (Volume 1: Long Pa-
pers), pages 1264–1274. Association for Computa-
tional Linguistics.

Elena Voita, David Talbot, Fedor Moiseev, Rico Sen-
nrich, and Ivan Titov. 2019. Analyzing multi-
head self-attention: Specialized heads do the heavy
lifting, the rest can be pruned. arXiv preprint
arXiv:1905.09418.

Thomas Wolf. 2019. Some additional experiments ex-
tending the tech report ”Assessing BERTs syntactic
abilities” by Yoav Goldberg. Technical report.

http://arxiv.org/abs/1804.09299v1
http://arxiv.org/abs/1804.09299v1
http://arxiv.org/abs/1804.09299v1
http://arxiv.org/abs/1803.07416
http://arxiv.org/abs/1803.07416
https://arxiv.org/pdf/1706.03762.pdf
https://arxiv.org/pdf/1706.03762.pdf
https://www.aclweb.org/anthology/P18-1117
https://www.aclweb.org/anthology/P18-1117
https://arxiv.org/abs/1905.09418
https://arxiv.org/abs/1905.09418
https://arxiv.org/abs/1905.09418
https://huggingface.co/bert-syntax/extending-bert-syntax.pdf
https://huggingface.co/bert-syntax/extending-bert-syntax.pdf
https://huggingface.co/bert-syntax/extending-bert-syntax.pdf


74

A Appendix

Figures A.1 and A.2 shows the results from Fig-
ures 6 and 7 for the full set of part-of-speech tags.



75

Figure A.1: Each heatmap shows the proportion of total attention directed to the given part of speech, broken out
by layer (vertical axis) and head (horizontal axis).



76

Figure A.2: Each heatmap shows the proportion of attention originating from the given part of speech, broken out
by layer (vertical axis) and head (horizontal axis).


