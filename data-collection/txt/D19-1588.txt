



















































BERT for Coreference Resolution: Baselines and Analysis


Proceedings of the 2019 Conference on Empirical Methods in Natural Language Processing
and the 9th International Joint Conference on Natural Language Processing, pages 5803–5808,
Hong Kong, China, November 3–7, 2019. c©2019 Association for Computational Linguistics

5803

BERT for Coreference Resolution: Baselines and Analysis

Mandar Joshi † Omer Levy§ Daniel S. Weld†� Luke Zettlemoyer†§
† Allen School of Computer Science & Engineering, University of Washington, Seattle, WA

{mandar90,weld,lsz}@cs.washington.edu
�Allen Institute of Artificial Intelligence, Seattle

{danw}@allenai.org
§ Facebook AI Research, Seattle
{omerlevy,lsz}@fb.com

Abstract

We apply BERT to coreference resolu-
tion, achieving strong improvements on the
OntoNotes (+3.9 F1) and GAP (+11.5 F1)
benchmarks. A qualitative analysis of model
predictions indicates that, compared to ELMo
and BERT-base, BERT-large is particularly
better at distinguishing between related but
distinct entities (e.g., President and CEO).
However, there is still room for improvement
in modeling document-level context, conver-
sations, and mention paraphrasing. Our code
and models are publicly available1.

1 Introduction

Recent BERT-based models have reported dra-
matic gains on multiple semantic benchmarks in-
cluding question-answering, natural language in-
ference, and named entity recognition (Devlin
et al., 2019). Apart from better bidirectional rea-
soning, one of BERT’s major improvements over
previous methods (Peters et al., 2018; McCann
et al., 2017) is passage-level training,2 which al-
lows it to better model longer sequences.

We fine-tune BERT to coreference resolution,
achieving strong improvements on the GAP (Web-
ster et al., 2018) and OntoNotes (Pradhan et al.,
2012) benchmarks. We present two ways of ex-
tending the c2f-coref model in Lee et al. (2018).
The independent variant uses non-overlapping
segments each of which acts as an independent
instance for BERT. The overlap variant splits the
document into overlapping segments so as to pro-
vide the model with context beyond 512 tokens.
BERT-large improves over ELMo-based c2f-coref
3.9% on OntoNotes and 11.5% on GAP (both ab-
solute).

1https://github.com/mandarjoshi90/
coref

2Each BERT training example consists of around 512
word pieces, while ELMo is trained on single sentences.

A qualitative analysis of BERT and ELMo-
based models (Table 3) suggests that BERT-large
(unlike BERT-base) is remarkably better at dis-
tinguishing between related yet distinct entities or
concepts (e.g., Repulse Bay and Victoria Harbor).
However, both models often struggle to resolve
coreferences for cases that require world knowl-
edge (e.g., the developing story and the scandal).
Likewise, modeling pronouns remains difficult,
especially in conversations.

We also find that BERT-large benefits from us-
ing longer context windows (384 word pieces)
while BERT-base performs better with shorter
contexts (128 word pieces). Yet, both variants
perform much worse with longer context windows
(512 tokens) in spite of being trained on 512-size
contexts. Moreover, the overlap variant, which ar-
tificially extends the context window beyond 512
tokens provides no improvement. This indicates
that using larger context windows for pretraining
might not translate into effective long-range fea-
tures for a downstream task. Larger models also
exacerbate the memory-intensive nature of span
representations (Lee et al., 2017), which have
driven recent improvements in coreference reso-
lution. Together, these observations suggest that
there is still room for improvement in modeling
document-level context, conversations, and men-
tion paraphrasing.

2 Method

For our experiments, we use the higher-order
coreference model in Lee et al. (2018) which
is the current state of the art for the English
OntoNotes dataset (Pradhan et al., 2012). We refer
to this as c2f-coref in the paper.

2.1 Overview of c2f-coref
For each mention span x, the model learns a dis-
tribution P (·) over possible antecedent spans Y :

https://github.com/mandarjoshi90/coref
https://github.com/mandarjoshi90/coref


5804

P (y) =
es(x,y)∑

y′∈Y e
s(x,y′)

(1)

The scoring function s(x, y) between spans x and
y uses fixed-length span representations, gx and
gy to represent its inputs. These consist of a con-
catenation of three vectors: the two LSTM states
of the span endpoints and an attention vector com-
puted over the span tokens. It computes the score
s(x, y) by the mention score of x (i.e. how likely
is the span x to be a mention), the mention score of
y, and the joint compatibility score of x and y (i.e.
assuming they are both mentions, how likely are x
and y to refer to the same entity). The components
are computed as follows:

s(x, y) = sm(x) + sm(y) + sc(x, y) (2)

sm(x) = FFNNm(gx) (3)

sc(x, y) = FFNNc(gx,gy, φ(x, y)) (4)

where FFNN(·) represents a feedforward neural
network and φ(x, y) represents speaker and meta-
data features. These span representations are later
refined using antecedent distribution from a span-
ranking architecture as an attention mechanism.

2.2 Applying BERT
We replace the entire LSTM-based encoder (with
ELMo and GloVe embeddings as input) in c2f-
coref with the BERT transformer. We treat the
first and last word-pieces (concatenated with the
attended version of all word pieces in the span)
as span representations. Documents are split into
segments of max segment len, which we treat
as a hyperparameter. We experiment with two
variants of splitting:

Independent The independent variant uses non-
overlapping segments each of which acts as an in-
dependent instance for BERT. The representation
for each token is limited to the set of words that lie
in its segment. As BERT is trained on sequences
of at most 512 word pieces, this variant has limited
encoding capacity especially for tokens that lie at
the start or end of their segments.

Overlap The overlap variant splits the docu-
ment into overlapping segments by creating a T -
sized segment after every T/2 tokens. These seg-
ments are then passed on to the BERT encoder in-
dependently, and the final token representation is
derived by element-wise interpolation of represen-
tations from both overlapping segments.

Let r1 ∈ Rd and r2 ∈ Rd be the token repre-
sentations from the overlapping BERT segments.
The final representation r ∈ Rd is given by:

f = σ(wT [r1; r2]) (5)

r = f · r1 + (1− f) · r2 (6)

where w ∈ R2d×d is a trained parameter and [; ]
represents concatenation. This variant allows the
model to artificially increase the context window
beyond the max segment len hyperparameter.

All layers in both model variants are then fine-
tuned following Devlin et al. (2019).

3 Experiments

We evaluate our BERT-based models on
two benchmarks: the paragraph-level GAP
dataset (Webster et al., 2018), and the document-
level English OntoNotes 5.0 dataset (Pradhan
et al., 2012). OntoNotes examples are con-
siderably longer and typically require multiple
segments to read the entire document.

Implementation and Hyperparameters We
extend the original Tensorflow implementations of
c2f-coref3 and BERT.4 We fine tune all models on
the OntoNotes English data for 20 epochs using
a dropout of 0.3, and learning rates of 1 × 10−5
and 2 × 10−4 with linear decay for the BERT pa-
rameters and the task parameters respectively. We
found that this made a sizable impact of 2-3% over
using the same learning rate for all parameters.

We trained separate models with
max segment len of 128, 256, 384, and
512; the models trained on 128 and 384 word
pieces performed the best for BERT-base and
BERT-large respectively. As span representations
are memory intensive, we truncate documents
randomly to eleven segments for BERT-base and
3 for BERT-large during training. Likewise, we
use a batch size of 1 document following (Lee
et al., 2018). While training the large model
requires 32GB GPUs, all models can be tested on
16GB GPUs. We use the cased English variants
in all our experiments.

Baselines We compare the c2f-coref + BERT
system with two main baselines: (1) the original
ELMo-based c2f-coref system (Lee et al., 2018),
and (2) its predecessor, e2e-coref (Lee et al.,

3http://github.com/kentonl/e2e-coref/
4https://github.com/google-research/

bert

http://github.com/kentonl/e2e-coref/
https://github.com/google-research/bert
https://github.com/google-research/bert


5805

MUC B3 CEAFφ4
P R F1 P R F1 P R F1 Avg. F1

Martschat and Strube (2015) 76.7 68.1 72.2 66.1 54.2 59.6 59.5 52.3 55.7 62.5
(Clark and Manning, 2015) 76.1 69.4 72.6 65.6 56.0 60.4 59.4 53.0 56.0 63.0
(Wiseman et al., 2015) 76.2 69.3 72.6 66.2 55.8 60.5 59.4 54.9 57.1 63.4
Wiseman et al. (2016) 77.5 69.8 73.4 66.8 57.0 61.5 62.1 53.9 57.7 64.2
Clark and Manning (2016) 79.2 70.4 74.6 69.9 58.0 63.4 63.5 55.5 59.2 65.7
e2e-coref (Lee et al., 2017) 78.4 73.4 75.8 68.6 61.8 65.0 62.7 59.0 60.8 67.2
c2f-coref (Lee et al., 2018) 81.4 79.5 80.4 72.2 69.5 70.8 68.2 67.1 67.6 73.0
Fei et al. (2019) 85.4 77.9 81.4 77.9 66.4 71.7 70.6 66.3 68.4 73.8
EE (Kantor and Globerson, 2019) 82.6 84.1 83.4 73.3 76.2 74.7 72.4 71.1 71.8 76.6

BERT-base + c2f-coref (independent) 80.2 82.4 81.3 69.6 73.8 71.6 69.0 68.6 68.8 73.9
BERT-base + c2f-coref (overlap) 80.4 82.3 81.4 69.6 73.8 71.7 69.0 68.5 68.8 73.9
BERT-large + c2f-coref (independent) 84.7 82.4 83.5 76.5 74.0 75.3 74.1 69.8 71.9 76.9
BERT-large + c2f-coref (overlap) 85.1 80.5 82.8 77.5 70.9 74.1 73.8 69.3 71.5 76.1

Table 1: OntoNotes: BERT improves the c2f-coref model on English by 0.9% and 3.9% respectively for base and
large variants. The main evaluation is the average F1 of three metrics – MUC, B3, and CEAFφ4 on the test set.

Model M F B O

e2e-coref 67.2 62.2 0.92 64.7
c2f-coref 75.8 71.1 0.94 73.5
BERT + RR Liu et al. (2019) 80.3 77.4 0.96 78.8
BERT-base + c2f-coref 84.4 81.2 0.96 82.8
BERT-large + c2f-coref 86.9 83.0 0.95 85.0

Table 2: GAP: BERT improves the c2f-coref model by
11.5%. The metrics are F1 score on Masculine and
Feminine examples, Overall, and a Bias factor (F / M).

2017), which does not use contextualized repre-
sentations. In addition to being more computa-
tionally efficient than e2e-coref, c2f-coref itera-
tively refines span representations using attention
for higher-order reasoning.

3.1 Paragraph Level: GAP

GAP (Webster et al., 2018) is a human-labeled
corpus of ambiguous pronoun-name pairs derived
from Wikipedia snippets. Examples in the GAP
dataset fit within a single BERT segment, thus
eliminating the need for cross-segment inference.
Following Webster et al. (2018), we trained our
BERT-based c2f-coref model on OntoNotes.5 The
predicted clusters were scored against GAP exam-
ples according to the official evaluation script. Ta-
ble 2 shows that BERT improves c2f-coref by 9%
and 11.5% for the base and large models respec-
tively. These results are in line with large gains
reported for a variety of semantic tasks by BERT-
based models (Devlin et al., 2019).

5This is motivated by the fact that GAP, with only 4,000
name-pronoun pairs in its dev set, is not intended for full-
scale training.

3.2 Document Level: OntoNotes

OntoNotes (English) is a document-level dataset
from the CoNLL-2012 shared task on coreference
resolution. It consists of about one million words
of newswire, magazine articles, broadcast news,
broadcast conversations, web data and conversa-
tional speech data, and the New Testament. The
main evaluation is the average F1 of three metrics
– MUC, B3, and CEAFφ4 on the test set according
to the official CoNLL-2012 evaluation scripts.

Table 1 shows that BERT-base offers an im-
provement of 0.9% over the ELMo-based c2f-
coref model. Given how gains on coreference res-
olution have been hard to come by as evidenced
by the table, this is still a considerable improve-
ment. However, the magnitude of gains is rela-
tively modest considering BERT’s arguably better
architecture and many more trainable parameters.
This is in sharp contrast to how even the base vari-
ant of BERT has very substantially improved the
state of the art in other tasks. BERT-large, how-
ever, improves c2f-coref by the much larger mar-
gin of 3.9%. We also observe that the overlap vari-
ant offers no improvement over independent.

Concurrent with our work, Kantor and Glober-
son (2019), who use higher-order entity-level rep-
resentations over “frozen” BERT features, also
report large gains over c2f-coref. While their
feature-based approach is more memory efficient,
the fine-tuned model seems to yield better re-
sults. Also concurrent, SpanBERT (Joshi et al.,
2019), another self-supervised method, pretrains
span representations achieving state of the art re-
sults (Avg. F1 79.6) with the independent variant.



5806

Category Snippet #base #large

Related
Entities

Watch spectacular performances by dolphins and sea lions at the Ocean Theater... 12 7
It seems the North Pole and the Marine Life Center will also be renovated.

Lexical Over the past 28 years , the Ocean Park has basically.. The entire park has been ... 15 9

Pronouns In the meantime , our children need an education. That’s all we’re asking. 17 13

Mention
Paraphrasing

And in case you missed it the Royals are here. 14 12
Today Britain’s Prince Charles and his wife Camilla...

Conversation (Priscilla:) My mother was Thelma Wahl . She was ninety years old ... 18 16(Keith:) Priscilla Scott is mourning . Her mother Thelma Wahl was a resident ..

Misc. He is my, She is my Goddess , ah 17 17

Total 93 74

Table 3: Qualitative Analysis: #base and #large refers to the number of cluster-level errors on a subset of the
OntoNotes English development set. Underlined and bold-faced mentions respectively indicate incorrect and
missing assignments to italicized mentions/clusters. The miscellaneous category refers to other errors including
(reasonable) predictions that are either missing from the gold data or violate annotation guidelines.

Doc length #Docs Spread F1 (base) F1 (large)

0 - 128 48 37.3 80.6 84.5
128 - 256 54 71.7 80.0 83.0
256 - 512 74 109.9 78.2 80.0
512 - 768 64 155.3 76.8 80.2

768 - 1152 61 197.6 71.1 76.2
1152+ 42 255.9 69.9 72.8

All 343 179.1 74.3 77.3

Table 4: Performance on the English OntoNotes dev
set generally drops as the document length increases.
Spread is measured as the average number of tokens
between the first and last mentions in a cluster.

Segment Length F1 (BERT-base) F1 (BERT-large)

128 74.4 76.6
256 73.9 76.9
384 73.4 77.3
450 72.2 75.3
512 70.7 73.6

Table 5: Performance on the English OntoNotes
dev set with varying values for max segment len.
Neither model is able to effectively exploit larger
segments; they perform especially badly when
maximum segment len of 512 is used.

4 Analysis

We performed a qualitative comparison of ELMo
and BERT models (Table 3) on the OntoNotes En-
glish development set by manually assigning error
categories (e.g., pronouns, mention paraphrasing)
to incorrect predicted clusters.6 Overall, we found
93 errors for BERT-base and 74 for BERT-large
from the same 15 documents.

6Each incorrect cluster can belong to multiple categories.

Strengths We did not find salient qualitative dif-
ferences between ELMo and BERT-base models,
which is consistent with the quantitative results
(Table 1). BERT-large improves over BERT-base
in a variety of ways including pronoun resolution
and lexical matching (e.g., race track and track).
In particular, the BERT-large variant is better at
distinguishing related, but distinct, entities. Table
3 shows several examples where the BERT-base
variant merges distinct entities (like Ocean The-
ater and Marine Life Center) into a single cluster.
BERT-large seems to be able to avoid such merg-
ing on a more regular basis.

Weaknesses An analysis of errors on the
OntoNotes English development set suggests that
better modeling of document-level context, con-
versations, and entity paraphrasing might further
improve the state of the art.

Longer documents in OntoNotes generally con-
tain larger and more spread-out clusters. We fo-
cus on three observations – (a) Table 4 shows how
models perform distinctly worse on longer docu-
ments, (b) both models are unable to use larger
segments more effectively (Table 5) and perform
worse when the max segment len of 450 and
512 are used, and, (c) using overlapping segments
to provide additional context does not improve re-
sults (Table 1). Recent work (Joshi et al., 2019)
suggests that BERT’s inability to use longer se-
quences effectively is likely a by-product pretrain-
ing on short sequences for a vast majority of up-
dates.

Comparing preferred segment lengths for base
and large variants of BERT indicates that larger



5807

models might better encode longer contexts. How-
ever, larger models also exacerbate the memory-
intensive nature of span representations,7 which
have driven recent improvements in coreference
resolution. These observations suggest that fu-
ture research in pretraining methods should look at
more effectively encoding document-level context
using sparse representations (Child et al., 2019).

Modeling pronouns especially in the context of
conversations (Table 3), continues to be difficult
for all models, perhaps partly because c2f-coref
does very little to model dialog structure of the
document. Lastly, a considerable number of er-
rors suggest that models are still unable to resolve
cases requiring mention paraphrasing. For ex-
ample, bridging the Royals with Prince Charles
and his wife Camilla likely requires pretraining
models to encode relations between entities, es-
pecially considering that such learning signal is
rather sparse in the training set.

5 Related Work

Scoring span or mention pairs has perhaps been
one of the most dominant paradigms in corefer-
ence resolution. The base coreference model used
in this paper from Lee et al. (2018) belongs to this
family of models (Ng and Cardie, 2002; Bengt-
son and Roth, 2008; Denis and Baldridge, 2008;
Fernandes et al., 2012; Durrett and Klein, 2013;
Wiseman et al., 2015; Clark and Manning, 2016;
Lee et al., 2017).

More recently, advances in coreference reso-
lution and other NLP tasks have been driven by
unsupervised contextualized representations (Pe-
ters et al., 2018; Devlin et al., 2019; McCann
et al., 2017; Joshi et al., 2019). Of these, BERT
(Devlin et al., 2019) notably uses pretraining on
passage-level sequences (in conjunction with a
bidirectional masked language modeling objec-
tive) to more effectively model long-range depen-
dencies. SpanBERT (Joshi et al., 2019) focuses
on pretraining span representations achieving cur-
rent state of the art results on OntoNotes with the
independent variant.

References
Eric Bengtson and Dan Roth. 2008. Understanding

the value of features for coreference resolution. In
Proceedings of the Conference on Empirical Meth-
ods in Natural Language Processing, EMNLP ’08,
7We required a 32GB GPU to finetune BERT-large.

pages 294–303, Stroudsburg, PA, USA. Association
for Computational Linguistics.

Rewon Child, Scott Gray, Alec Radford, and
Ilya Sutskever. 2019. Generating long se-
quences with sparse transformers. arXiv preprint
arXiv:1904.10509.

Kevin Clark and Christopher D. Manning. 2015.
Entity-centric coreference resolution with model
stacking. In Proceedings of the 53rd Annual Meet-
ing of the Association for Computational Linguis-
tics and the 7th International Joint Conference on
Natural Language Processing (Volume 1: Long Pa-
pers), pages 1405–1415. Association for Computa-
tional Linguistics.

Kevin Clark and Christopher D. Manning. 2016. Deep
reinforcement learning for mention-ranking coref-
erence models. In Proceedings of the 2016 Con-
ference on Empirical Methods in Natural Language
Processing, pages 2256–2262. Association for Com-
putational Linguistics.

Pascal Denis and Jason Baldridge. 2008. Special-
ized models and ranking for coreference resolution.
In Proceedings of the 2008 Conference on Empiri-
cal Methods in Natural Language Processing, pages
660–669. Association for Computational Linguis-
tics.

Jacob Devlin, Ming-Wei Chang, Kenton Lee, and
Kristina Toutanova. 2019. BERT: Pre-training of
deep bidirectional transformers for language under-
standing. In Proceedings of the 2019 Conference
of the North American Chapter of the Association
for Computational Linguistics: Human Language
Technologies, Volume 1 (Long and Short Papers),
pages 4171–4186, Minneapolis, Minnesota. Associ-
ation for Computational Linguistics.

Greg Durrett and Dan Klein. 2013. Easy victories and
uphill battles in coreference resolution. In Proceed-
ings of the 2013 Conference on Empirical Methods
in Natural Language Processing, pages 1971–1982.
Association for Computational Linguistics.

Hongliang Fei, Xu Li, Dingcheng Li, and Ping Li.
2019. End-to-end deep reinforcement learning
based coreference resolution. In Proceedings of the
57th Annual Meeting of the Association for Compu-
tational Linguistics, pages 660–665, Florence, Italy.
Association for Computational Linguistics.

Eraldo Fernandes, Cı́cero dos Santos, and Ruy Milidiú.
2012. Latent structure perceptron with feature in-
duction for unrestricted coreference resolution. In
Joint Conference on EMNLP and CoNLL - Shared
Task, pages 41–48. Association for Computational
Linguistics.

Mandar Joshi, Danqi Chen, Yinhan Liu, Daniel S.
Weld, Luke Zettlemoyer, and Omer Levy. 2019.
SpanBERT: Improving pre-training by repre-
senting and predicting spans. arXiv preprint
arXiv:1907.10529.

http://dl.acm.org/citation.cfm?id=1613715.1613756
http://dl.acm.org/citation.cfm?id=1613715.1613756
https://arxiv.org/abs/1904.10509
https://arxiv.org/abs/1904.10509
https://doi.org/10.3115/v1/P15-1136
https://doi.org/10.3115/v1/P15-1136
https://doi.org/10.18653/v1/D16-1245
https://doi.org/10.18653/v1/D16-1245
https://doi.org/10.18653/v1/D16-1245
http://aclweb.org/anthology/D08-1069
http://aclweb.org/anthology/D08-1069
https://doi.org/10.18653/v1/N19-1423
https://doi.org/10.18653/v1/N19-1423
https://doi.org/10.18653/v1/N19-1423
http://aclweb.org/anthology/D13-1203
http://aclweb.org/anthology/D13-1203
https://www.aclweb.org/anthology/P19-1064
https://www.aclweb.org/anthology/P19-1064
http://aclweb.org/anthology/W12-4502
http://aclweb.org/anthology/W12-4502
https://arxiv.org/abs/1907.10529
https://arxiv.org/abs/1907.10529


5808

Ben Kantor and Amir Globerson. 2019. Coreference
resolution with entity equalization. In Proceed-
ings of the 57th Annual Meeting of the Association
for Computational Linguistics, pages 673–677, Flo-
rence, Italy. Association for Computational Linguis-
tics.

Kenton Lee, Luheng He, Mike Lewis, and Luke Zettle-
moyer. 2017. End-to-end neural coreference reso-
lution. In Proceedings of the 2017 Conference on
Empirical Methods in Natural Language Process-
ing, pages 188–197, Copenhagen, Denmark. Asso-
ciation for Computational Linguistics.

Kenton Lee, Luheng He, and Luke Zettlemoyer. 2018.
Higher-order coreference resolution with coarse-to-
fine inference. In Proceedings of the 2018 Confer-
ence of the North American Chapter of the Associ-
ation for Computational Linguistics: Human Lan-
guage Technologies, Volume 2 (Short Papers), pages
687–692, New Orleans, Louisiana. Association for
Computational Linguistics.

Fei Liu, Luke Zettlemoyer, and Jacob Eisenstein. 2019.
The referential reader: A recurrent entity network
for anaphora resolution. In Proceedings of the 57th
Annual Meeting of the Association for Computa-
tional Linguistics, pages 5918–5925, Florence, Italy.

Sebastian Martschat and Michael Strube. 2015. La-
tent structures for coreference resolution. Transac-
tions of the Association for Computational Linguis-
tics, 3:405–418.

Bryan McCann, James Bradbury, Caiming Xiong, and
Richard Socher. 2017. Learned in translation: Con-
textualized word vectors. In Advances in Neural In-
formation Processing Systems, pages 6297–6308.

Vincent Ng and Claire Cardie. 2002. Identifying
anaphoric and non-anaphoric noun phrases to im-
prove coreference resolution. In Proceedings of
the 19th International Conference on Computational
Linguistics - Volume 1, COLING ’02, pages 1–7,
Stroudsburg, PA, USA. Association for Computa-
tional Linguistics.

Matthew Peters, Mark Neumann, Mohit Iyyer, Matt
Gardner, Christopher Clark, Kenton Lee, and Luke
Zettlemoyer. 2018. Deep contextualized word repre-
sentations. In Proceedings of the 2018 Conference
of the North American Chapter of the Association
for Computational Linguistics: Human Language
Technologies, Volume 1 (Long Papers), pages 2227–
2237. Association for Computational Linguistics.

Sameer Pradhan, Alessandro Moschitti, Nianwen Xue,
Olga Uryupina, and Yuchen Zhang. 2012. Conll-
2012 shared task: Modeling multilingual unre-
stricted coreference in ontonotes. In Joint Confer-
ence on EMNLP and CoNLL - Shared Task, pages
1–40. Association for Computational Linguistics.

Kellie Webster, Marta Recasens, Vera Axelrod, and Ja-
son Baldridge. 2018. Mind the GAP: A balanced

corpus of gendered ambiguous pronouns. Transac-
tions of the Association for Computational Linguis-
tics, 6:605–617.

Sam Wiseman, Alexander M. Rush, Stuart Shieber, and
Jason Weston. 2015. Learning anaphoricity and an-
tecedent ranking features for coreference resolution.
In Proceedings of the 53rd Annual Meeting of the
Association for Computational Linguistics and the
7th International Joint Conference on Natural Lan-
guage Processing (Volume 1: Long Papers), pages
1416–1426. Association for Computational Linguis-
tics.

Sam Wiseman, Alexander M. Rush, and Stuart M.
Shieber. 2016. Learning global features for coref-
erence resolution. In Proceedings of the 2016 Con-
ference of the North American Chapter of the Asso-
ciation for Computational Linguistics: Human Lan-
guage Technologies, pages 994–1004. Association
for Computational Linguistics.

https://www.aclweb.org/anthology/P19-1066
https://www.aclweb.org/anthology/P19-1066
https://doi.org/10.18653/v1/D17-1018
https://doi.org/10.18653/v1/D17-1018
https://doi.org/10.18653/v1/N18-2108
https://doi.org/10.18653/v1/N18-2108
https://arxiv.org/abs/1902.01541
https://arxiv.org/abs/1902.01541
https://transacl.org/ojs/index.php/tacl/article/view/604
https://transacl.org/ojs/index.php/tacl/article/view/604
https://arxiv.org/abs/1708.00107
https://arxiv.org/abs/1708.00107
https://doi.org/10.3115/1072228.1072367
https://doi.org/10.3115/1072228.1072367
https://doi.org/10.3115/1072228.1072367
https://doi.org/10.18653/v1/N18-1202
https://doi.org/10.18653/v1/N18-1202
http://aclweb.org/anthology/W12-4501
http://aclweb.org/anthology/W12-4501
http://aclweb.org/anthology/W12-4501
https://doi.org/10.1162/tacl_a_00240
https://doi.org/10.1162/tacl_a_00240
https://doi.org/10.3115/v1/P15-1137
https://doi.org/10.3115/v1/P15-1137
https://doi.org/10.18653/v1/N16-1114
https://doi.org/10.18653/v1/N16-1114

