



















































Hierarchical Structured Model for Fine-to-Coarse Manifesto Text Analysis


Proceedings of NAACL-HLT 2018, pages 1964–1974
New Orleans, Louisiana, June 1 - 6, 2018. c©2018 Association for Computational Linguistics

Hierarchical Structured Model for Fine-to-coarse Manifesto Text Analysis

Shivashankar Subramanian Trevor Cohn Timothy Baldwin
School of Computing and Information Systems

The University of Melbourne
shivashankar@student.unimelb.edu.au {t.cohn,tbaldwin}@unimelb.edu.au

Abstract

Election manifestos document the intentions,
motives, and views of political parties. They
are often used for analysing a party’s fine-
grained position on a particular issue, as well
as for coarse-grained positioning of a party
on the left–right spectrum. In this paper we
propose a two-stage model for automatically
performing both levels of analysis over man-
ifestos. In the first step we employ a hierar-
chical multi-task structured deep model to pre-
dict fine- and coarse-grained positions, and in
the second step we perform post-hoc calibra-
tion of coarse-grained positions using proba-
bilistic soft logic. We empirically show that
the proposed model outperforms state-of-art
approaches at both granularities using mani-
festos from twelve countries, written in ten dif-
ferent languages.

1 Introduction

The adoption of NLP methods has led to signif-
icant advances in the field of computational so-
cial science (Lazer et al., 2009), including politi-
cal science (Grimmer and Stewart, 2013). Among
a myriad of data sources, election manifestos are
a core artifact in political analysis. One of the
most widely used datasets by political scientists is
the Comparative Manifesto Project (CMP) dataset
(Volkens et al., 2017), which contains manifestos
in various languages, covering over 1000 parties
across 50 countries, from elections dating back to
1945.

In CMP, a subset of the manifestos has been
manually annotated at the sentence-level with one
of 57 political themes, divided into 7 major cat-
egories.1 Such categories capture party posi-
tions (FAVORABLE, UNFAVORABLE or NEITHER)

1https://manifesto-project.wzb.eu/
coding_schemes/mp_v5

on fine-grained policy themes, and are also use-
ful for downstream tasks including calculating
manifesto-level (policy-based) left–right position
scores (Budge et al., 2001; Lowe et al., 2011;
Däubler and Benoit, 2017). An example sentence
from the Green Party of England and Wales 2015
election manifesto where they take an UNFAVOR-
ABLE position on MILITARY is:

We would: Ensure that ... less is spent
on military research.

Elsewhere, they take a FAVORABLE position on
WELFARE STATE:

Double Child Benefit.

Such manual annotations are labor-intensive and
prone to annotation inconsistencies (Mikhaylov
et al., 2012). In order to overcome these
challenges, supervised sentence classification ap-
proaches have been proposed (Verberne et al.,
2014; Subramanian et al., 2017).

Other than the sentence-level labels, the man-
ifesto text also has a document-level score that
quantifies its position on the left–right spectrum.
Different approaches have been proposed to de-
rive this score, based on alternate definitions of
“left–right” (Slapin and Proksch, 2008; Benoit and
Laver, 2007; Lo et al., 2013; Däubler and Benoit,
2017). Among these, the RILE index is the most
widely adopted (Merz et al., 2016; Jou and Dalton,
2017), and has been shown to correlate highly with
other popular scores (Lowe et al., 2011). RILE
is defined as the difference between RIGHT and
LEFT positions on (pre-determined) policy themes
across sentences in a manifesto (Volkens et al.,
2013); for instance, UNFAVORABLE position on
MILITARY is categorized as LEFT. RILE is popular
in CMP in particular, as mapping individual sen-
tences to LEFT/RIGHT/NEUTRAL categories has

1964



been shown to be less sensitive to systematic er-
rors than other sentence-level class sets (Klinge-
mann et al., 2006; Volkens et al., 2013).

Finally, expert survey scores are gaining popu-
larity as a means of capturing manifesto-level po-
litical positions, and are considered to be context-
and time-specific, unlike RILE (Volkens et al.,
2013; Däubler and Benoit, 2017). We use the
Chapel Hill Expert Survey (CHES) (Bakker et al.,
2015), which comprises aggregated expert sur-
veys on the ideological position of various polit-
ical parties. Although CHES is more subjective
than RILE, the CHES scores are considered to be
the gold-standard in the political science domain.

In this work, we address both fine- and coarse-
grained multilingual manifesto text policy position
analysis, through joint modeling of sentence-level
classification and document-level positioning (or
ranking) tasks. We employ a two-level structured
model, in which the first level captures the struc-
ture within a manifesto, and the second level cap-
tures context and temporal dependencies across
manifestos. Our contributions are as follows:
• we employ a hierarchical sequential deep model

that encodes the structure in manifesto text for
the sentence classification task;
• we capture the dependency between the

sentence- and document-level tasks, and also
utilize additional label structure (categoriza-
tion into LEFT/RIGHT/NEUTRAL: Volkens et al.
(2013)) using a joint-structured model;
• we incorporate contextual information (such as

political coalitions) and encode temporal depen-
dencies to calibrate the coarse-level manifesto
position using probabilistic soft logic (Bach
et al., 2015), which we evaluate on the predic-
tion of the RILE index or expert survey party
position score.

2 Related Work

Analysing manifesto text is a relatively new appli-
cation at the intersection of political science and
NLP. One line of work in this space has been
on sentence-level classification, including classi-
fying each sentence according to its major polit-
ical theme (1-of-7 categories) (Zirn et al., 2016;
Glavaš et al., 2017a), its position on various policy
themes (Verberne et al., 2014; Biessmann, 2016;
Subramanian et al., 2017), or its relative disagree-
ment with other parties (Menini et al., 2017). Re-
cent approaches (Glavaš et al., 2017a; Subrama-

nian et al., 2017) have also handled multilingual
manifesto text (given that manifestos span multi-
ple countries and languages; see Section 5.1) us-
ing multilingual word embeddings.

At the document level, there has been work
on using label count aggregation of (manually-
annotated) fine-grained policy positions, as fea-
tures for inductive analysis (Lowe et al., 2011;
Däubler and Benoit, 2017). Text-based ap-
proaches has used dictionary-based supervised
methods, unsupervised factor analysis based tech-
niques and graph propagation based approaches
(Hjorth et al., 2015; Bruinsma and Gemenis,
2017; Glavaš et al., 2017b). A recent paper
closely aligned with our work is Subramanian
et al. (2017), who address both sentence- and
document-level tasks jointly in a multilingual set-
ting, showing that a joint approach outperforms
previous approaches. But they do not exploit the
structure of the text and use a much simpler model
architecture: averages of word embeddings, ver-
sus our bi-LSTM encodings; and they do not lever-
age domain information and temporal regularities
that can influence policy positions (Greene, 2016).
This work will act as a baseline in our experiments
in Section 5.

Policy-specific position classification can be
seen as related to target-specific stance classifi-
cation (Mohammad et al., 2017), except that the
target is not explicitly mentioned in most cases.
Secondly, manifestos have both fine- and coarse-
grained positions, similar to sentiment analysis
(McDonald et al., 2007). Finally, manifesto text
is well structured within and across documents
(based on coalition), has temporal dependencies,
and is multilingual in nature.

3 Proposed Approach

In this section, we detail the first step of
our two-stage approach. We use a hierarchi-
cal bidirectional long short-term memory (“bi-
LSTM”) model (Hochreiter and Schmidhuber,
1997; Graves et al., 2013; Li et al., 2015) with a
multi-task objective for the sentence classification
and document-level regression tasks. A post-hoc
calibration of coarse-grained manifesto position is
given in Section 4.

Let D be the set of manifestos, where a man-
ifesto d ∈ D is made up of L sentences, and a
sentence si has T words: wi1, wi2, ...wiT . The
set Ds ⊂ D is annotated at the sentence-level

1965



with positions on fine-grained policy issues (57
classes). The task here is to learn a model that
can: (a) classify sentences according to policy is-
sue classes; and (b) score the overall document on
the policy-based left–right spectrum (RILE), in an
inter-dependent fashion.

Word encoder: We initialize word vector rep-
resentations using a multilingual word embed-
ding matrix, We. We construct We by aligning
the embedding matrices of all the languages to
English, in a pair-wise fashion. Bilingual pro-
jection matrices are built using pre-trained Fast-
Text monolingual embeddings (Bojanowski et al.,
2017) and a dictionary D constructed by trans-
lating 5000 frequent English words using Google
Translate. Given a pair of embedding matrices E
(English) andO (Other), we use singular value de-
composition of OTDE (which is UΣV T ) to get
the projection matrix (W ∗=UV T ), since it also
enforces monolingual invariance (Artetxe et al.,
2016; Smith et al., 2017). Finally, we obtain the
aligned embedding matrix, We, as OW ∗.

We use a bi-LSTM to derive a vector repre-
sentation of each word in context. The bi-LSTM
traverses the sentence si in both the forward and
backward directions, and the encoded representa-
tion for a given word wit ∈ si, is defined by con-
catenating its forward (

−→
h it) and backward hidden

states (
←−
h it), t ∈

[
1, T

]
.

Sentence model: Similarly, we use a bi-LSTM
to generate a sentence embedding from the word-
level bi-LSTM, where each input sentence si is
represented using the last hidden state of both the
forward and backward LSTMs. The sentence em-
bedding is obtained by concatenating the hidden
representations of the sentence-level bi-LSTM, in
both the directions, hi =

[−→
h i,
←−
h i
]
, i ∈

[
1, L

]
.

With this representation, we perform fine-grained
classification (to one-of-57 classes), using a soft-
max output layer for each sentence. We mini-
mize the cross-entropy loss for this task, over the
sentence-level labeled set Ds ⊂ D. This loss is
denoted LS .

Document model: To represent a docu-
ment d we use average-pooling over the sen-
tence representations hi and predicted output
distributions (yi) of individual sentences,2 i.e.,

2Preliminary experiments suggested that this representa-
tion performs better than using either hidden representations
or just the output distribution.

Vd =
1
L

∑
i∈d

[
yi
hi

]
. The range of RILE is

[−100, 100], which we scale to the range [−1, 1],
and model using a final tanh layer. We minimize
the mean-squared error loss function between the
predicted r̂d and actual RILE score rd, which is
denoted as LD:

LD =
1

|D|

|D|∑

d=1

‖r̂d − rd‖22 (1)

Overall, the loss function for the joint model
(Figure 1), combining LS and LD, is:

LJ = αLS + (1− α)LD (2)

where 0 ≤ α ≤ 1 is a hyper-parameter which is
tuned on a development set.

3.1 Joint-Structured Model
The RILE score is calculated directly from the
sentence labels, based on mapping each label ac-
cording to its positioning on policy themes, as
LEFT, RIGHT and NEUTRAL (Volkens et al., 2013).
Specifically, 13 out of 57 classes are categorized
as LEFT, another 13 as RIGHT, and the rest as
NEUTRAL. We employ an explicit structured loss
which minimizes the deviation between sentence-
level LEFT/RIGHT/NEUTRAL polarity predictions
p and the document-level RILE score. The mo-
tivation to do this is two-fold: (a) enabling inter-
action between the sentence- and document-level
tasks with homogeneous target space (polarity and
RILE); and (b) since we have more documents
with just RILE and no sentence-level labels,3 aug-
menting an explicit semi-supervised learning ob-
jective could propagate down the RILE label to
generate sentence labels that concord with the doc-
ument score.

For the sentence-level polarity prediction
(shown in Figure 1), we use cross-entropy loss
over the sentence-level labeled set Ds ⊂ D,
which is denoted as LSP . The explicit structured
sentence-document loss is given as:

Lstruc =
1

|D|

|D|∑

d=1

(
1

Ld

∑

i∈d
(piright − pileft )− rd

)2

(3)

3Strictly speaking, for these documents even, sentence an-
notation was used to derive the RILE score, but the sentence-
level labels were never made available.

1966



Ban Saturday

s1 s2 … sL

ℎ1 ℎ2 ℎ𝐿𝐿

ℎ𝐿𝐿ℎ1 ℎ2

ℎ21 ℎ22 ℎ24

ℎ21 ℎ22 ℎ24

𝑟𝑟𝑑𝑑

y1

Concatenate

Vd

y2 yL

Average Pooling

ℎ23

ℎ23

special

ℎ2𝑇𝑇

ℎ2𝑇𝑇

… handgun

𝒑𝒑1 𝒑𝒑2 𝒑𝒑𝐿𝐿

night
23

Sentences

Words

w21 w22 w23 w24 w2T

Figure 1: Hierarchical bi-LSTM for joint sentence–
document analysis (yi denotes the predicted 57-class
distribution of sentence si; pi denotes the distribution
over LEFT (in red), RIGHT (in blue) and NEUTRAL (in
yellow); rd denotes the RILE score of d).

where piright and pileft are the predicted RIGHT and
LEFT class probabilities for a sentence si (∈ d),
rd is the actual RILE score for the document d,
and Ld is the length of each document, d ∈ D.
We augment the joint model’s loss function (Equa-
tion (2)) with LSP and Lstruc to generate a regu-
larized multi-task loss:

LT = LJ + βLSP + γLstruc (4)

where β, γ ≥ 0 are hyper-parameters which are,
once again, tuned on the development set. We
refer to the model trained with Equation (2) as
“Joint”, and that trained with Equation (4) as
“Jointstruc”.

4 Manifesto Position Re-ranking

We leverage party-level information to enforce
smoothness and regularity in manifesto position-
ing on the left–right spectrum (Greene, 2016). For
example, manifestos released by parties in a coali-
tion are more likely to be closer in RILE score, and
a party’s position in an election is often a relative
shift from its position in earlier election, so tempo-
ral information can provide smoother estimations.

4.1 Probabilistic Soft Logic
To address this, we propose an approach using
hinge-loss Markov random fields (“HL-MRFs”),
a scalable class of continuous, conditional graph-
ical models (Bach et al., 2013). HL-MRFs have

been used for many tasks including political fram-
ing analysis on Twitter (Johnson et al., 2017) and
user stance classification on socio-political issues
(Sridhar et al., 2014). These models can be speci-
fied using Probabilistic Soft Logic (“PSL”) (Bach
et al., 2015), a weighted first order logical template
language. An example of a PSL rule is

λ : P(a) ∧ Q(a, b)→ R(b)

where P, Q, and R are predicates, a and b are vari-
ables, and λ is the weight associated with the rule.
PSL uses soft truth values for predicates in the in-
terval

[
0, 1
]
. The degree of ground rule satisfac-

tion is determined using the Lukasiewicz t-norm
and its corresponding co-norm as the relaxation of
the logical AND and OR, respectively. The weight
of the rule indicates its importance in the HL-MRF
probabilistic model, which defines a probability
density function of the form:

P (Y|X) ∝ exp
(
−

M∑

r=1

λrφr(Y,X)

)
,

φr(Y,X) = max {lr(Y,X), 0}ρr ,
(5)

where φr(Y,X) is a hinge-loss potential corre-
sponding to an instantiation of a rule, and is spec-
ified by a linear function lr and optional exponent
ρr ∈ {1, 2}. Note that the hinge-loss potential cap-
tures the distance to satisfaction.4

4.2 PSL Model
Here we elaborate our PSL model (given in Ta-
ble 1) based on coalition information, manifesto
content-based features (manifesto similarity and
right–left ratio), and temporal dependency. Our
target pos (calibrated RILE) is a continuous vari-
able

[
0, 1
]
, where 1 indicates that a manifesto oc-

cupies an extreme right position, 0 denotes an ex-
treme left position, and 0.5 indicates center. Each
instance of a manifesto and its party affiliation are
denoted by the predicates Manifesto and Party.

Coalition: We model multi-relational networks
based on regional coalitions within a given
country (RegCoalition),5 and also cross-
country coalitions in the European parliament

4Degree of satisfaction for the example PSL rule r, ¬P ∨
¬Q ∨ R, using the Lukasiewicz co-norm is given as min{2−
P− Q+ R, 1}. From this, the distance to satisfaction is given
as max{P+ Q− R− 1, 0}, where P+ Q− R− 1 indicates the
linear function lr .

5http://www.parlgov.org/

1967



PSLcoal — Coalition features

Manifesto(x)∧Party(x, a)∧Manifesto(y)∧Party(y, b)∧SameElec(x, y)∧RegCoalition(a, b)∧pos(x)→ pos(y)
Manifesto(x) ∧ Party(x, a) ∧ Manifesto(y) ∧ Party(y, b) ∧ SameElec(x, y) ∧ RegCoalition(a, b) ∧ ¬pos(x) →
¬pos(y)
Manifesto(x)∧ Party(x, a)∧ Manifesto(y)∧ Party(y, b)∧ Recent(x, y)∧ EUCoalition(a, b)∧ pos(x)→ pos(y)
Manifesto(x)∧Party(x, a)∧Manifesto(y)∧Party(y, b)∧Recent(x, y)∧EUCoalition(a, b)∧¬pos(x)→ ¬pos(y)
Transitivity

Manifesto(x) ∧ Party(x, a) ∧ Manifesto(y) ∧ Party(y, b) ∧ Manifesto(z) ∧ Party(z, c) ∧
SameElec(x, y) ∧ SameElec(y, z) ∧ RegCoalition(a, b) ∧ RegCoalition(b, c) ∧ pos(x) → pos(z)

Manifesto(x) ∧ Party(x, a) ∧ Manifesto(y) ∧ Party(y, b) ∧ Manifesto(z) ∧ Party(z, c) ∧
SameElec(x, y) ∧ SameElec(y, z) ∧ RegCoalition(a, b) ∧ RegCoalition(b, c) ∧ ¬pos(x) → ¬pos(z)

Manifesto(x) ∧ Party(x, a) ∧ Manifesto(y) ∧ Party(y, b) ∧ Manifesto(z) ∧ Party(z, c) ∧
Recent(x, y) ∧ Recent(y, z) ∧ EUCoalition(a, b) ∧ EUCoalition(b, c) ∧ pos(x) → pos(z)

Manifesto(x) ∧ Party(x, a) ∧ Manifesto(y) ∧ Party(y, b) ∧ Manifesto(z) ∧ Party(z, c) ∧
Recent(x, y) ∧ Recent(y, z) ∧ EUCoalition(a, b) ∧ EUCoalition(b, c) ∧ ¬pos(x) → ¬pos(z)

PSLesim — Similarity-based relational feature

Manifesto(x) ∧ Manifesto(y) ∧ Similarity(x, y) ∧ Recent(x, y) ∧ pos(x)→ pos(y)
Manifesto(x) ∧ Manifesto(y) ∧ Similarity(x, y) ∧ Recent(x, y) ∧ ¬pos(x)→ ¬pos(y)

PSLploc — Right–left ratio

Manifesto(x) ∧ LwRightLeftRatio(x)→ pos(x)
Manifesto(x) ∧ ¬LwRightLeftRatio(x)→ ¬pos(x)

PSLtemp— Temporal Dependency

Manifesto(x) ∧ Party(x, a) ∧ PreviousManifesto(x, a, t) ∧ pos(t)→ pos(x)
Manifesto(x) ∧ Party(x, a) ∧ PreviousManifesto(x, a, t) ∧ ¬pos(t)→ ¬pos(x)

Table 1: PSL Model: Values for Similarity, LwRightLeftRatio and pos are obtained from the joint-structured
model (Figure 1). Except for pos, other values are fixed in the network. Domain (y) for SameElec(x, y) is within
the country, and for Recent(x, y) covers all the countries. ¬ denotes negation. Distance to satisfaction for each
ground rule is obtained using a hinge-loss potential, which is then used inside the HL-MRF model (Equation (5)),
where pos is Y.

(EUCoalition).6 We set the scope of in-
teraction between manifestos (x and y) from
a country to the same election (SameElec).
For manifestos across countries, we consider
only the most recent manifesto (Recent)
from each party (y), released within 4 years
relative to x. We use a logistic transforma-
tion of the number of times two parties have
been in a coalition in the past (to get a value
between 0 and 1), for both RegCoalition
and EUCoalition. We also construct rules
based on transitivity for both the relational
features, i.e., parties which have had common
coalition partners, even if they were not allies
themselves, are likely to have similar policy
positions.

Manifesto similarity: Manifestos that are sim-
ilar in content are expected to have simi-
lar RILE scores (and associated sentence-

6http://www.europarl.europa.eu

level label distributions), similar to the mod-
eling intuition captured by Burford et al.
(2015) in the context of congressional debate
vote prediction. For a pair of recent mani-
festos (Recent) we use the cosine similarity
(Similarity) between their respective doc-
ument vectors Vd (Figure 1).

Right–left ratio: For a given manifesto,
we compute the ratio of sentences
categorized under RIGHT to OTHERS
( # RIGHT# RIGHT+# LEFT+# NEUTRAL ), where the catego-
rization for sentences is obtained using the
joint-structured model (Equation (4)). We
also encode the location of sentence ls in
a document, by weighing the count of sen-
tences for each class C by its location value∑

s∈C log(ls + 1) (referred to as loc lr).
The intuition here is that the beginning
parts of a manifesto tends to contain generic
information such as preamble, compared to

1968



later parts which are more policy-dense. We
perform a logistic transformation of loc lr to
derive the LwRightLeftRatio.

Temporal dependency: We capture the temporal
dependency between a party’s current mani-
festo position and its previous manifesto po-
sition (PreviousManifesto).

Other than for the look-up based random vari-
ables, the network is instantiated with predictions
(for Similarity, LwRightLeftRatio and pos)
from the joint-structured model (Figure 1). All the
random variables, except pos (which is the target
variable), are fixed in the network. These values
are then used inside a PSL model for collective
probabilistic reasoning, where the first-order logic
given in Table 1 is used to define the graphical
model (HL-MRF) over the random variables de-
tailed above. Inference on the HL-MRF is used to
obtain the most probable interpretation such that it
satisfies most ground rule instances, i.e., consider-
ing the relational and temporal dependencies.

5 Evaluation

5.1 Experimental Setup
As our dataset, we use manifestos from CMP for
European countries only, as in Section 5.5 we will
validate the manifesto’s overall position on the
left-right spectrum, using the Chapel Hill Expert
Survey (CHES), which is only available for Euro-
pean countries (Bakker et al., 2015). In this, we
sample 1004 manifestos from 12 European coun-
tries, written in 10 different languages — Dan-
ish (Denmark), Dutch (Netherlands), English (Ire-
land, United Kingdom), Finnish (Finland), French
(France), German (Austria, Germany), Italian
(Italy), Portuguese (Portugal), Spanish (Spain),
and Swedish (Sweden). Out of the 1004 mani-
festos, 272 are annotated with both sentence-level
labels and RILE scores, and the remainder only
have RILE scores (see Table 2 for further statis-
tics).

There are (less) scenarios where a natural sen-
tence is segmented into sub-sentences and anno-
tated with different classes (Däubler et al., 2012).
Hence we use NLTK sentence tokenizer followed
by heuristics from Däubler et al. (2012) to ob-
tain sub-sentences. Consistent with previous work
(Subramanian et al., 2017), we present results
with manually segmented and annotated test doc-
uments.

Lang. # Docs (Anntd.) # Sents (Anntd.)

Danish 175 (36) 29694 (8762)
Dutch 107 (48) 132524 (70559)

English 117 (27) 86603 (34512)
Finnish 97 (16) 17979 (8503)
French 53 (10) 22747 (5559)
German 117 (46) 111376 (73652)
Italian 98 (15) 41455 (5154)

Portuguese 60 (9) 40922 (11077)
Spanish 85 (50) 145355 (93964)
Swedish 95 (15) 19551 (7938)

Total 1004 (272) 648206 (319680)

Table 2: Statistics of dataset (“Anntd.” refers to the
number of documents with sentence annotations in the
second column, and the number of sentences with an-
notations in the third column).

5.2 Baseline Approaches

Sentence-level baseline approaches include:

• BoW-NN : TF-IDF-weighted unigram bag-
of-words representation of sentences (Biess-
mann, 2016), and monolingual training using
a multi-layer perceptron (“MLP”) model.

• BoT-NN : Similar to above, but trigram bag-
of-words.

• AE-NN : MLP model with average multilin-
gual word embeddings as the sentence repre-
sentation (Subramanian et al., 2017).

• CNN : Convolutional neural network
(“CNN”: Glavaš et al. (2017a)) with multi-
lingual word embeddings.

• Bi-LSTM : Simple bi-LSTM over multilin-
gual word embeddings, last hidden units are
concatenated to form the sentence representa-
tion, and fed directly into a softmax sentence-
level layer. We evaluate two scenarios: (1)
with a trainable embedding matrix We (Bi-
LSTM(+up) ); and (2) without a trainable
We.

Document-level baseline approaches include:

• BoC : Bag-of-centroids (BoC) document rep-
resentation based on clustering the word em-
beddings (Lebret and Collobert, 2014), fed
into a neural network regression model.

• HCNN : Hierarchical CNN, where we en-
code both the sentence and document using
stacked CNN layers.

1969



• HNN : State-of-the-art hierarchical neural
network model of Subramanian et al. (2017),
based on average embedding representations
for sentences and the document.

We present results evaluated under two different
settings: (a) 80–20% random split averaged across
10 runs to validate the hierarchical model (Sec-
tion 5.3 and Section 5.4); and (b) temporal set-
ting, where train- and test-set are split chronologi-
cally, to validate both the hierarchical deep model
and the PSL approach especially, since we encode
temporal dependencies (Section 5.5).

5.3 Hierarchical Sentence- and
Document-level Model

We present sentence-level results with a 80–20%
random split in Table 3, stratified by country, av-
eraged across 10 runs. For Bi-LSTM , we found
the setting with a trainable embedding matrix
(Bi-LSTM(+up) ) to perform better than the non-
trainable case (Bi-LSTM ). Hence we use a similar
setting for Joint and Jointstruc. We show the effect
of α (from Equation (2)) in Figure 2a, based on
which we set α = 0.3 hereafter. With the chosen
model, we study the effect of the structured loss
(Equation (4)), by varying γ with fixed β = 0.1,
as shown in Figure 2b. We observe that γ = 0.7
gives the best performance, and varying β with γ
at 0.7 does not result in any further improvement
(see Figure 2c). Sentence-level results measured
using F-measure, for baseline approaches and the
proposed models selected from Figure 2a (Joint),
Figures 2b and 2c (Jointstruc) are given in Table 3.
We also evaluate the special case of α = 1, in
the form of sentence-only model Jointsent. For the
document-level task, results for overall manifesto
positioning measured using Pearson’s correlation
(r) and Spearman’s rank correlation (ρ) are given
in Table 4. We also evaluate the hierarchical bi-
LSTM model with document-level objective only,
Jointdoc.

We observe that hierarchical modeling
(Jointsent, Joint and Jointstruc) gives the best
performance for sentence-level classification for
all the languages except Portuguese, on which
it performs slightly worse than Bi-LSTM(+up) .
Also, Jointstruc, does not improve over Jointsent.
We perform further analysis to see the effect of
joint-structured model on the sentence-level task
under sparsely-labeled conditions in Section 5.4.
On the other hand, for the document-level task,

0.0 0.2 0.4 0.6 0.8 1.0
0.0

0.1

0.2

0.3

0.4

0.5

Pe
ar

so
n 

co
rre

la
tio

n 
(r)

0.0

0.1

0.2

0.3

0.4

0.5

F-
m

ea
su

re

(a) Effect of α in equation 2.

0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0
0.40

0.42

0.44

0.46

0.48

0.50

0.52

0.54

Pe
ar

so
n 

co
rre

la
tio

n 
(r)

0.40

0.42

0.44

0.46

0.48

0.50

0.52

0.54

F-
m

ea
su

re

(b) Effect of γ in equation 4.

0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0
0.42

0.44

0.46

0.48

0.50

0.52

Pe
ar

so
n 

co
rre

la
tio

n(
r)

0.42

0.44

0.46

0.48

0.50

0.52

F 
m

ea
su

re

(c) Effect of β in equation 4.

Figure 2: Effect of hyper-parameters on sentence- and
document-level performance. denotes F-measure
(right axis) and × denotes Pearson correlation (left
axis).

the joint model (Joint) performs better than
Jointdoc and all the baseline approaches. Lastly,
the joint-structured model (Jointstruc) provides
further improvement over Joint .

5.4 Analysis of Joint-Structured Model for
Sentence-level task

To understand the utility of joint modeling, espe-
cially given that there are more manifestos with
document-level labels only than both sentence-
and document-level labels, we compare the fol-
lowing two settings: (1) Jointstruc, which uses ad-
ditional manifestos with document-level supervi-
sion (RILE); and (2) Jointsent, which uses mani-
festos with sentence-level supervision only. We
vary the proportion of labeled documents at the
sentence-level, from 10% to 80%, to study the ef-
fect under sparsely-labeled conditions. Note that
80% is the maximum labeled training data un-
der the cross-validation setting. In other cases, a
subset (say 10%) is randomly sampled for train-

1970



Lang. BoW-NN BoT-NN AE-NN CNN Bi-LSTM Bi-LSTM(+up) Jointsent Joint Jointstruc

Danish 0.35 0.33 0.35 0.31 0.38 0.38 0.44 0.40 0.43
Dutch 0.41 0.41 0.40 0.34 0.39 0.43 0.52 0.50 0.50

English 0.39 0.43 0.43 0.40 0.45 0.47 0.49 0.50 0.49
Finnish 0.30 0.34 0.33 0.30 0.38 0.39 0.44 0.41 0.42
French 0.36 0.37 0.36 0.37 0.42 0.44 0.48 0.49 0.48
German 0.33 0.35 0.37 0.35 0.40 0.41 0.45 0.45 0.46
Italian 0.33 0.38 0.37 0.31 0.37 0.39 0.49 0.52 0.52

Portuguese 0.32 0.38 0.31 0.28 0.43 0.46 0.44 0.44 0.43
Spanish 0.38 0.39 0.39 0.35 0.42 0.41 0.50 0.49 0.50
Swedish 0.46 0.42 0.36 0.36 0.41 0.44 0.49 0.46 0.46

Avg. 0.36 0.38 0.38 0.35 0.40 0.42 0.48 0.47 0.48

Table 3: Micro-Averaged F-measure for sentence classification. Best scores are given in bold.

Approach r ρ

BoC 0.18 0.20
HCNN 0.24 0.26
HNN 0.28 0.32

Jointdoc 0.30 0.37
Joint 0.46 0.54

Jointstruc 0.50 0.63

Table 4: RILE score prediction performance. Best
scores are given in bold.

0 10 20 30 40 50 60 70 80
Sentence-level labeled ratio

0.15

0.20

0.25

0.30

0.35

0.40

0.45

0.50

0.55

F-
m

ea
su

re

Jointsent
Jointstruc

Figure 3: F-measure for Jointstruc vs. Jointsent across
different ratios of sentence-level labeled manifestos
(averaged over 10 runs, with standard deviation)

ing. From Figure 3, having more manifestos with
document-level supervision demonstrates the ad-
vantage of semi-supervised learning, especially
when the sentence-level supervision is sparse (≤
40%)— Jointstruc performs better than Jointsent.

5.5 Manifesto Position Re-ranking using PSL

Finally, we present the results using PSL, which
calibrates the overall manifesto position on the
left–right spectrum, obtained using the joint-
structured model (Jointstruc). As we evaluate the
effect of temporal dependency, we use manifestos
before 2008-09 for training (868 in total) and the
later ones (until 2015, 136 in total) for testing.
This test set covers one recent set of election man-
ifestos for most countries, and two for the Nether-

Approach F-measure

AE-NN 0.31
Bi-LSTM(+up) 0.36
Jointstruc 0.42

Table 5: Micro-averaged F-measure for manifestos re-
leased after 2008-09. Best scores are given in bold.

lands, Spain and United Kingdom. To avoid vari-
ance in right-to-left ratio and the target variable
(pos, initialized using Jointstruc) between the train-
ing and test sets, we build a stacked network
(Fast and Jensen, 2008), whereby we estimate
values for the training set using cross-validation
across the training partition, and estimate values
for the test-set with a model trained over the en-
tire training data. Note that we build the Jointstruc
model afresh using the chronologically split train-
ing set, and the parameters are tuned again using
an 80-20 random split of the training set. For
a consistent view of results for both the tasks
(and stages), we provide micro-averaged results
for sentence-classification with the competing ap-
proaches (from Table 3): AE-NN (Subramanian
et al., 2017), Bi-LSTM(+up) , and Jointstruc. Re-
sults are presented in Table 5, noting that the re-
sults for a given method will differ from earlier
due to the different data split.

For the document-level regression task, we also
evaluate other approaches based on manifesto sim-
ilarity and automated scaling with sentence-level
policy positions:

• Cross-lingual scaling (CLS ): A recent un-
supervised approach for crosslingual politi-
cal speech text scoring (Glavaš et al., 2017b),
based on TF-IDF weighed average word-
embeddings to represent documents, and a
graph constructed using pair-wise document

1971



RILE CHES

r ρ r ρ

CLS 0.11 0.10 0.09 0.07
PCA 0.26 0.17 0.01 −0.02
Jointstruc 0.46 0.42 0.42 0.42
PSLcoal 0.51 0.45 0.49 0.45
PSLcoal + esim 0.52 0.47 0.50 0.46
PSLcoal + esim + ploc 0.54 0.56 0.53 0.56
PSLcoal + esim + ploc + temp 0.54 0.57 0.55 0.61

Table 6: Manifesto regression task using the two-stage
approach. Best scores are given in bold.

similarity. Given two pivot texts (for left and
right), label propagation approach is used to
position other documents.

• PCA: Apply principal component analysis
(Gabel and Huber, 2000) on the distribu-
tion of sentence-level policy positions (56
classes, without 000), and use the projection
on its principal component to explain maxi-
mum variance in its sentence-level positions,
as a latent manifesto-level position score.

• Jointstruc: We evaluate the scores obtained
using Jointstruc, which we calibrate using
PSL.

We validate the calibrated position scores us-
ing both RILE and CHES7 scores. We use CHES
2010-14, and map the manifestos to the closest
survey year (wrt its election date). CHES scores
are used only for evaluation and not during train-
ing. We provide results in Table 6 by augmenting
features for the PSL model (Table 1) incremen-
tally. We observed that the coalition-based fea-
ture, and polarity of sentences with its position
information improves the overall ranking (r, ρ).
Document similarity based relational feature pro-
vides only mild improvement (similarly to Burford
et al. (2015)), and temporal dependency provides
further improvement against CHES. That is, com-
bining content, network and temporal features pro-
vides the best results.

6 Conclusion and Future Work

This work has been targeted at both fine- and
coarse-grained manifesto text position analysis.
We have proposed a two-stage approach, where
in the first step we use a hierarchical multi-task

7https://www.chesdata.eu/

deep model to handle the sentence- and document-
level tasks together. We also utilize additional in-
formation on label structure, to augment an aux-
iliary structured loss. Since the first step places
the manifesto on the left–right spectrum using
text only, we leverage context information, such
as coalition and temporal dependencies to cali-
brate the position further using PSL. We observed
that: (a) a hierarchical bi-LSTM model performs
best for the sentence-level classification task, of-
fering a 10% improvement over the state-of-art
approach (Subramanian et al., 2017); (b) model-
ing the document-level task jointly, and also aug-
menting the structured loss, gives the best perfor-
mance for the document-level task and also helps
the sentence-level task under sparse supervision
scenarios; and (c) the inclusion of a calibration
step with PSL provides significant gains in perfor-
mance against both RILE and CHES, in the form
of an increase from ρ = 0.42 to 0.61 wrt CHES
survey scores.

There are many possible extensions to this
work, including: (a) learning multilingual word
embeddings with domain information; and (b)
modeling other policy related scores from text,
such as “support for EU integration”.

Acknowledgements

We thank the anonymous reviewers for their in-
sightful comments and valuable suggestions. This
work was funded in part by the Australian Gov-
ernment Research Training Program Scholarship,
and the Australian Research Council.

References
Mikel Artetxe, Gorka Labaka, and Eneko Agirre. 2016.

Learning principled bilingual mappings of word em-
beddings while preserving monolingual invariance.
In Proceedings of the 2016 Conference on Empirical
Methods in Natural Language Processing. EMNLP,
pages 2289–2294.

S. H. Bach, B. Huang M. Broecheler, and L. Getoor.
2015. Hinge-loss markov random fields and proba-
bilistic soft logic. CoRR abs/1505.04406.

Stephen H. Bach, Bert Huang, Ben London, and Lise
Getoor. 2013. Hinge-loss markov random fields:
Convex inference for structured prediction. In Pro-
ceedings of the Twenty-Ninth Conference on Uncer-
tainty in Artificial Intelligence.

Ryan Bakker, Catherine De Vries, Erica Edwards,
Liesbet Hooghe, Seth Jolly, Gary Marks, Jonathan

1972



Polk, Jan Rovny, Marco Steenbergen, and Mi-
lada Anna Vachudova. 2015. Measuring party posi-
tions in europe: The chapel hill expert survey trend
file, 1999–2010. Party Politics 21(1):143–152.

Kenneth Benoit and Michael Laver. 2007. Estimating
party policy positions: Comparing expert surveys
and hand-coded content analysis. Electoral Studies
26(1):90–107.

Felix Biessmann. 2016. Automating political bias pre-
diction. CoRR abs/1608.02195.

Piotr Bojanowski, Edouard Grave, Armand Joulin, and
Tomas Mikolov. 2017. Enriching word vectors with
subword information. Transactions of the Associa-
tion for Computational Linguistics 5:135–146.

B. Bruinsma and K. Gemenis. 2017. Validating Word-
scores. CoRR abs/1707.04737.

I Budge, H.D Klingemann, A Volkens, J Bara, E Tan-
nenbaum, R Fording, D Hearl, H.M Kim, M Mc-
Donald, and S Mendes. 2001. Mapping Policy Pref-
erences: Parties, Electors and Governments. Ox-
ford University Press.

Clint Burford, Steven Bird, and Timothy Baldwin.
2015. Collective document classification with im-
plicit inter-document semantic relationships. In Pro-
ceedings of the Fourth Joint Conference on Lexical
and Computational Semantics (*SEM 2015). Den-
ver, USA, pages 106–116.

Thomas Däubler and Kenneth Benoit. 2017. Esti-
mating better left-right positions through statisti-
cal scaling of manual content analysis. Retrieved
from http://kenbenoit.net/pdfs/text_
in_context_2017.pdf .

Thomas Däubler, Kenneth Benoit, Slava Mikhaylov,
and Michael Laver. 2012. Natural sentences as valid
units for coded political texts. British Journal of Po-
litical Science 42(4):937–951.

Andrew Fast and David Jensen. 2008. Why stacked
models perform effective collective classification.
In Proceedings of the Eighth International Confer-
ence on Data Mining. IEEE, pages 785–790.

Matthew J Gabel and John D Huber. 2000. Putting par-
ties in their place: Inferring party left-right ideolog-
ical positions from party manifestos data. American
Journal of Political Science pages 94–103.

Goran Glavaš, Federico Nanni, and Simone Paolo
Ponzetto. 2017a. Cross-lingual classification of top-
ics in political texts. In Proceedings of the Second
Workshop on NLP and Computational Social Sci-
ence. ACL, pages 42–46.

Goran Glavaš, Federico Nanni, and Simone Paolo
Ponzetto. 2017b. Unsupervised cross-lingual scal-
ing of political texts. In Proceedings of the 15th
Conference of the European Chapter of the Associa-
tion for Computational Linguistics: Volume 2, Short
Papers. volume 2, pages 688–693.

Alex Graves, Abdel-rahman Mohamed, and Geoffrey
Hinton. 2013. Speech recognition with deep recur-
rent neural networks. In Proceedings of the inter-
national conference on Acoustics, speech and signal
processing (ICASSP). IEEE, pages 6645–6649.

Zachary Greene. 2016. Competing on the issues:
How experience in government and economic condi-
tions influence the scope of parties policy messages.
Party Politics 22(6):809–822.

Justin Grimmer and Brandon M Stewart. 2013. Text as
data: The promise and pitfalls of automatic content
analysis methods for political texts. Political analy-
sis 21(3):267–297.

Frederik Georg Hjorth, Robert Tranekær Klemmensen,
Sara Binzer Hobolt, Martin Ejnar Hansen, and Pe-
ter Kurrild-Klitgaard. 2015. Computers, coders, and
voters: Comparing automated methods for estimat-
ing party positions. Research and Politics 2(2):1–9.

Sepp Hochreiter and Jürgen Schmidhuber. 1997.
Long short-term memory. Neural Computation
9(8):1735–1780.

Kristen Johnson, Di Jin, and Dan Goldwasser. 2017.
Leveraging behavioral and social information for
weakly supervised collective classification of politi-
cal discourse on twitter. In Proceedings of the Asso-
ciation for Computational Linguistics. ACL, pages
741–752.

Willy Jou and Russell J. Dalton. 2017. Left-right ori-
entations and voting behavior. Oxford Research En-
cyclopedia of Politics .

Hans-Dieter Klingemann, Andrea Volkens, Judith
Bara, Ian Budge, and Michael McDonald. 2006.
Mapping Policy Preferences II. Estimates for Par-
ties, Electors, and Governments in Eastern Europe,
European Union, and OECD. Oxford University
Press.

David Lazer, Alex Sandy Pentland, Lada Adamic,
Sinan Aral, Albert Laszlo Barabasi, Devon Brewer,
Nicholas Christakis, Noshir Contractor, James
Fowler, Myron Gutmann, et al. 2009. Life in the
network: the coming age of computational social
science. Science (New York, NY) 323(5915):721.

Rémi Lebret and Ronan Collobert. 2014. N-gram-
based low-dimensional representation for document
classification. CoRR abs/1412.6277.

Jiwei Li, Luong Minh-Thang, and Jurafsky Dan. 2015.
A hierarchical neural autoencoder for paragraphs
and documents. In Proceedings of the 53rd An-
nual Meeting of the Association for Computational
Linguistics and the 7th International Joint Confer-
ence on Natural Language Processing. ACL, pages
1106–1115.

James Lo, Sven-Oliver Proksch, and Thomas
Gschwend. 2013. A common left-right scale
for voters and parties in europe. Political Analysis
22(2):205–223.

1973



Will Lowe, Kenneth Benoit, Slava Mikhaylov, and
Michael Laver. 2011. Scaling policy preferences
from coded political texts. Legislative studies quar-
terly 36(1):123–155.

Ryan McDonald, Kerry Hannan, Tyler Neylon, Mike
Wells, and Jeff Reynar. 2007. Structured models for
fine-to-coarse sentiment analysis. In Proceedings of
the 45th annual meeting of the association of com-
putational linguistics. ACL, pages 432–439.

Stefano Menini, Federico Nanni, Simone Paolo
Ponzetto, and Sara Tonelli. 2017. Topic-based
agreement and disagreement in us electoral mani-
festos. In Proceedings of the 2017 Conference on
Empirical Methods in Natural Language Process-
ing. EMNLP, pages 2938–2944.

Nicolas Merz, Sven Regel, and Jirka Lewandowski.
2016. The manifesto corpus: A new resource for re-
search on political parties and quantitative text anal-
ysis. Research & Politics 3(2).

Slava Mikhaylov, Michael Laver, and Kenneth R
Benoit. 2012. Coder reliability and misclassification
in the human coding of party manifestos. Political
Analysis 20(1):78–91.

Saif M Mohammad, Parinaz Sobhani, and Svetlana
Kiritchenko. 2017. Stance and sentiment in tweets.
ACM Transactions on Internet Technology (TOIT)
17(3):26.

Jonathan B Slapin and Sven-Oliver Proksch. 2008. A
scaling model for estimating time-series party posi-
tions from texts. American Journal of Political Sci-
ence 52(3):705–722.

Samuel L Smith, Turban David HP, Hamblin Steven,
and Hammerla Nils Y. 2017. Offline bilingual word
vectors, orthogonal transformations and the inverted
softmax. In Proceedings of the 5th International
Conference on Learning Representations (ICLR).

Dhanya Sridhar, Lise Getoor, and Marilyn Walker.
2014. Collective stance classification of posts in
online debate forums. In Proceedings of the Joint
Workshop on Social Dynamics and Personal At-
tributes in Social Media. ACL, pages 109–117.

Shivashankar Subramanian, Trevor Cohn, Timothy
Baldwin, and Julian Brooke. 2017. Joint sentence-
document model for manifesto text analysis. In Pro-
ceedings of the 15th Annual Workshop of The Aus-
tralasian Language Technology Association. ALTA,
pages 25–33.

Suzan Verberne, Eva Dhondt, Antal van den Bosch,
and Maarten Marx. 2014. Automatic thematic clas-
sification of election manifestos. Information Pro-
cessing & Management 50(4):554–567.

Andrea Volkens, Judith Bara, Budge Ian, and Simon
Franzmann. 2013. Understanding and validating the
left-right scale (RILE). In Mapping Policy Prefer-
ences From Texts: Statistical Solutions for Manifesto
Analysts, Oxford University Press, chapter 6.

Andrea Volkens, Pola Lehmann, Theres Matthie,
Nicolas Merz, Sven Regel, and Bernhard Weels.
2017. The Manifesto Data Collection. Manifesto
Project (MRG/CMP/MARPOR). Version 2017b.
Wissenschaftszentrum Berlin für Sozialforschung,
Berlin, Germany.

Cäcilia Zirn, Goran Glavaš, Federico Nanni, Jason Ei-
chorts, and Heiner Stuckenschmidt. 2016. Classify-
ing topics and detecting topic shifts in political man-
ifestos. In Proceedings of the International Confer-
ence on the Advances in Computational Analysis of
Political Text. PolText, pages 88–93.

1974


