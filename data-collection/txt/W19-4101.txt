



















































A Repository of Conversational Datasets


Proceedings of the 1st Workshop on NLP for Conversational AI, pages 1–10
Florence, Italy, August 1, 2019. c©2019 Association for Computational Linguistics

1

A Repository of Conversational Datasets
github.com/PolyAI-LDN/conversational-datasets

Matthew Henderson, Paweł Budzianowski, Iñigo Casanueva, Sam Coope,

Daniela Gerz, Girish Kumar, Nikola Mrkšić, Georgios Spithourakis,

Pei-Hao Su, Ivan Vulić, and Tsung-Hsien Wen

matt@poly-ai.com

PolyAI Limited, London, UK.

Abstract

Progress in Machine Learning is often driven
by the availability of large datasets, and con-
sistent evaluation metrics for comparing mod-
eling approaches. To this end, we present
a repository of conversational datasets con-
sisting of hundreds of millions of examples,
and a standardised evaluation procedure for
conversational response selection models us-
ing 1-of-100 accuracy. The repository con-
tains scripts that allow researchers to repro-
duce the standard datasets, or to adapt the
pre-processing and data filtering steps to their
needs. We introduce and evaluate several com-
petitive baselines for conversational response
selection, whose implementations are shared
in the repository, as well as a neural encoder
model that is trained on the entire training set.

1 Introduction

Dialogue systems, sometimes referred to as con-
versational systems or conversational agents, are
useful in a wide array of applications. They are
used to assist users in accomplishing well-defined
tasks such as finding and/or booking flights and
restaurants (Hemphill et al., 1990; Williams, 2012;
El Asri et al., 2017), or to provide tourist informa-
tion (Henderson et al., 2014c; Budzianowski et al.,
2018). They have found applications in entertain-
ment (Fraser et al., 2018), language learning (Raux
et al., 2003; Chen et al., 2017), and healthcare
(Laranjo et al., 2018; Fadhil and Schiavo, 2019).
Conversational systems can also be used to aid in
customer service1 or to provide the foundation for
intelligent virtual assistants such as Amazon Alexa,
Google Assistant, or Apple Siri.

Modern approaches to constructing dialogue sys-
tems are almost exclusively data-driven, supported

1For an overview, see poly-ai.com/blog/towards-ai-
assisted-customer-support-automation

by modular or end-to-end machine learning frame-
works (Young, 2010; Vinyals and Le, 2015; Wen
et al., 2015, 2017a,b; Mrkšić and Vulić, 2018; Ra-
madan et al., 2018; Li et al., 2018, inter alia). The
research community, as in any machine learning
field, benefits from large datasets and standardised
evaluation metrics for tracking and comparing dif-
ferent models. However, collecting data to train
data-driven dialogue systems has proven notori-
ously difficult. First, system designers must con-
struct an ontology to define the constrained set of
actions and conversations that the system can sup-
port (Henderson et al., 2014a,c; Mrkšić et al., 2015).
Furthermore, task-oriented dialogue data must be
labeled with highly domain-specific dialogue anno-
tations (El Asri et al., 2017; Budzianowski et al.,
2018). Because of this, such annotated dialogue
datasets remain scarce, and limited in both their
size and in the number of domains they cover.
For instance, the recently published MultiWOZ
dataset (Budzianowski et al., 2018) contains a total
of 115,424 dialogue turns scattered over 7 target do-
mains. Other standard task-based datasets are typi-
cally single-domain and smaller by several orders
of magnitude: DSTC2 (Henderson et al., 2014b)
contains 23,354 turns, Frames (El Asri et al., 2017)
comprises 19,986 turns, and M2M (Shah et al.,
2018) spans 14,796 turns.

An alternative solution is to leverage larger con-
versational datasets available online. Such datasets
provide natural conversational structure, that is,
the inherent context-to-response relationship which
is vital for dialogue modeling. In this work, we
present a public repository of three large and di-
verse conversational datasets containing hundreds
of millions of conversation examples. Compared
to the most popular conversational datasets used in
prior work, such as length-restricted Twitter con-
versations (Ritter et al., 2010) or very technical
domain-restricted technical chats from the Ubuntu

https://github.com/PolyAI-LDN/conversational-datasets
https://poly-ai.com/blog/towards-ai-assisted-customer-support-automation
https://poly-ai.com/blog/towards-ai-assisted-customer-support-automation


2

corpus (Lowe et al., 2015, 2017; Gunasekara et al.,
2019), conversations from the three conversational
datasets available in the repository are more nat-
ural and diverse. What is more, the datasets are
large: for instance, after preprocessing around 3.7B
comments from Reddit available in 256M conver-
sational threads, we obtain 727M valid context-
response pairs. Similarly, the number of valid pairs
in the OpenSubtitles dataset is 316 million. To put
these numbers into perspective, the frequently used
Ubuntu corpus v2.0 comprises around 4M dialogue
turns. Furthermore, our Reddit corpus includes 2
more years of data and so is substantially larger
than the previous Reddit dataset of Al-Rfou et al.
(2016), which spans around 2.1B comments and
133M conversational threads, and is not publicly
available.

Besides the repository of large datasets, another
key contribution of this work is the common evalu-
ation framework. We propose applying consistent
data filtering and preprocessing to public datasets,
and a simple evaluation metric for response se-
lection, which will facilitate direct comparisons
between models from different research groups.

These large conversational datasets may support
modeling across a large spectrum of natural con-
versational domains. Similar to the recent work
on language model pretraining for diverse NLP ap-
plications (Howard and Ruder, 2018; Devlin et al.,
2018; Lample and Conneau, 2019), we believe that
these datasets can be used in future work to pre-
train large general-domain conversational models
that are then fine-tuned towards specific tasks using
much smaller amounts of task-specific conversa-
tional data. We hope that the presented reposi-
tory, containing a set of strong baseline models
and standardised modes of evaluation, will provide
means and guidance to the development of next-
generation conversational systems.

The repository is available at github.com/
PolyAI-LDN/conversational-datasets.

2 Conversational Dataset Format

Datasets are stored as Tensorflow record files con-
taining serialized Tensorflow example protocol
buffers (Abadi et al., 2015). The training set is
stored as one collection of Tensorflow record files,
and the test set as another. Examples are shuffled
randomly (and not necessarily reproducibly) within
the Tensorflow record files. Each example is de-
terministically assigned to either the train or test

set using a key feature, such as the conversation
thread ID in Reddit, guaranteeing that the same
split is created whenever the dataset is generated.
By default the train set consists of 90% of the total
data, and the test set the remaining 10%.

context/1 Hello, how are you?

context/0 I am fine. And you?

context Great. What do you think of the weather?

response It doesn’t feel like February.

Figure 1: An illustrative Tensorflow example in a con-
versational dataset, consisting of a conversational con-
text and an appropriate response. Each string is stored
as a bytes feature using its UTF-8 encoding.

Each Tensorflow example contains a conversa-
tional context and a response that goes with that
context, see e.g. figure 1. Explicitly, each example
contains a number of string features:

• A context feature, the most recent text in the
conversational context.

• A response feature, text that is in direct re-
sponse to the context.

• A number of extra context features, context/0,
context/1 etc. going back in time through
the conversation. They are named in reverse
order so that context/i always refers to the ith
most recent extra context, so that no padding
needs to be done, and datasets with different
numbers of extra contexts can be mixed.

• Depending on the dataset, there may be some
extra features also included in each example.
For instance, in Reddit the author of the con-
text and response are identified using addi-
tional features.

3 Datasets

Rather than providing the raw processed data, we
provide scripts and instructions to the users to gen-
erate the data themselves. This allows for viewing
and potentially manipulating the pre-processing
and filtering steps. The repository contains instruc-
tions for generating datasets with standard param-
eters split deterministically into train and test por-
tions. These allow for defining reproducible evalu-
ations in research papers. Section 5 presents bench-
mark results on these standard datasets for a variety
of conversational response selection models.

Dataset creation scripts are written using Apache
Beam and Google Cloud Dataflow (Akidau et al.,

https://github.com/PolyAI-LDN/conversational-datasets
https://github.com/PolyAI-LDN/conversational-datasets


3

Built from Training size Testing size

Reddit 3.7 billion comments in threaded conversations 654,396,778 72,616,937

OpenSubtitles over 400 million lines from movie and tele-
vision subtitles (also available in other lan-
guages)

283,651,561 33,240,156

AmazonQA over 3.6 million question-response pairs in the
context of Amazon products

3,316,905 373,007

Table 1: Summary of the datasets included in the public repository. The Reddit data is taken from January 2015 to
December 2018, and the OpenSubtitles data from 2018.

2015), which parallelizes the work across many ma-
chines. Using the default quotas, the Reddit script
starts 409 workers to generate the dataset in around
1 hour and 40 minutes. This includes reading the
comment data from the BigQuery source, grouping
the comments into threads, producing examples
from the threads, splitting the examples into train
and test, shuffling the examples, and finally writing
them to sharded Tensorflow record files.

Table 1 provides an overview of the Reddit,
OpenSubtitles and AmazonQA datasets, and fig-
ure 3 in appendix A gives an illustrative example
from each.

3.1 Reddit

Reddit is an American social news aggregation
website, where users can post links, and take part
in discussions on these posts. Reddit is extremely
diverse (Schrading et al., 2015; Al-Rfou et al.,
2016): there are more than 300,000 sub-forums
(i.e., subreddits) covering various topics of discus-
sion. These threaded discussions, available in a
public BigQuery database, provide a large corpus
of conversational contexts paired with appropriate
responses. Reddit data has been used to create con-
versational response selection data by Al-Rfou et al.
(2016); Cer et al. (2018); Yang et al. (2018). We
share code that allows generating datasets from the
Reddit data in a reproducible manner: with con-
sistent filtering, processing, and train/test splitting.
We also generate data using two more years of
data than the previous work, 3.7 billion comments
rather than 2.1 billion, giving a final dataset with
176 million more examples.

Reddit conversations are threaded. Each post
may have multiple top-level comments, and every
comment may have multiple children comments
written in response. In processing, each Reddit
thread is used to generate a set of examples. Each
response comment generates an example, where

the context is the linear path of comments that the
comment is in response to.

Examples may be filtered according to the con-
tents of the context and response features. The
example is filtered if either feature has more than
128 characters, or fewer than 9 characters, or if
its text is set to [deleted] or [removed]. Full de-
tails of the filtering are available in the code, and
configurable through command-line flags.

Further back contexts, from the comment’s par-
ent’s parent etc., are stored as extra context features.
Their texts are trimmed to be at most 128 charac-
ters in length, without splitting words apart. This
helps to bound the size of an individual example.

The train/test split is deterministic based on the
thread ID. As long as all the input to the script is
held constant (the input tables, filtering thresholds
etc.), the resulting datasets should be identical.

The data from 2015 to 2018 inclusive consists of
3,680,746,776 comments, in 256,095,216 threads.
In total, 727,013,715 Tensorflow examples are cre-
ated from this data.

3.2 OpenSubtitles

OpenSubtitles is a growing online collection of sub-
titles for movies and television shows available in
multiple languages. As a starting point, we use the
corpus collected by Lison and Tiedemann (2016),
originally intended for statistical machine transla-
tion. This corpus is regenerated every year, in 62
different languages.

Consecutive lines in the subtitle data are used to
create conversational examples. There is no guar-
antee that different lines correspond to different
speakers, or that consecutive lines belong to the
same scene, or even the same show. The data nev-
ertheless contains a lot of interesting examples for
modelling the mapping from conversational con-
texts to responses.

Short and long lines are filtered, and some text



4

Input Candidate Responses
I watched a great movie yesterday. No, it won't rain probably.

Have you applied for that job yet?
It is nominated for the Golden Globe.
We are leaving for a ski trip tomorrow.
It is extremely easy working with them.
I prefer traveling in the springtime.

Input Candidate Responses
Is that place affordable? Absolutely, call me any time!

There is no place like home.
The restaurant serves Japanese food.
I would say that the prices are reasonable.
This was their second warning.
It was so unfortunate to concede the goal.

Figure 2: Two examples illustrating the conversational response selection task: given the input context sentence,
the goal is to identify the relevant response from a large pool of candidate responses.

is filtered such as character names and auditory
description text. The English 2018 data consists
of 441,450,449 lines, and generates 316,891,717
examples. The data is split into chunks of 100,000
lines, and each chunk is used either for the train set
or the test set.

3.3 AmazonQA

This dataset is based on a corpus extracted by Wan
and McAuley (2016); McAuley and Yang (2016),
who scraped questions and answers from Amazon
product pages. This provides a corpus of question-
answer pairs in the e-commerce domain. Some
questions may have multiple answers, so one ex-
ample is generated for each possible answer.

Examples with very short or long questions or
responses are filtered from the data, resulting in a
total of 3,689,912 examples. The train/test split is
computed deterministically using the product ID.

4 Response Selection Task

The conversational datasets included in this repos-
itory facilitate the training and evaluation of a va-
riety of models for natural language tasks. For
instance, the datasets are suitable for training gen-
erative models of conversational response (Serban
et al., 2016; Ritter et al., 2011; Vinyals and Le,
2015; Sordoni et al., 2015; Shang et al., 2015; Kan-
nan et al., 2016), as well as discriminative methods
of conversational response selection (Lowe et al.,
2015; Inaba and Takahashi, 2016; Yu et al., 2016;
Henderson et al., 2017).

The task of conversational response selection
is to identify a correct response to a given con-
versational context from a pool of candidates, as
illustrated in figure 2. Such models are typically
evaluated using Recall@k, a typical metric in in-
formation retrieval literature. This measures how
often the correct response is identified as one of the
top k ranked responses (Lowe et al., 2015; Inaba
and Takahashi, 2016; Yu et al., 2016; Al-Rfou et al.,
2016; Henderson et al., 2017; Lowe et al., 2017;
Wu et al., 2017; Cer et al., 2018; Chaudhuri et al.,

2018; Du and Black, 2018; Kumar et al., 2018; Liu
et al., 2018; Yang et al., 2018; Zhou et al., 2018;
Gunasekara et al., 2019; Tao et al., 2019). Models
trained to select responses can be used to drive di-
alogue systems, question-answering systems, and
response suggestion systems. The task of response
selection provides a powerful signal for learning
implicit semantic representations useful for many
downstream tasks in natural language understand-
ing (Cer et al., 2018; Yang et al., 2018).

The Recall@k metric allows for direct compari-
son between models. Direct comparisons are much
more difficult for generative models, which are typ-
ically evaluated using perplexity scores or using
human judgement. Perplexity scores are dependent
on normalization, tokenization, and choice of vo-
cabulary, while human judgement is expensive and
time consuming.

When evaluating conversational response selec-
tion models on these datasets, we propose a Re-
call@k metric termed 1-of-100 accuracy. This is
Recall@1 using 99 responses sampled from the
test dataset as negatives. This 1-of-100 accuracy
metric has been used in previous studies: (Al-Rfou
et al., 2016; Henderson et al., 2017; Cer et al., 2018;
Kumar et al., 2018; Yang et al., 2018; Gunasekara
et al., 2019). While there is no guarantee that the
99 randomly selected negatives will all be bad re-
sponses, the metric nevertheless provides a sim-
ple summary of model performance that has been
shown to correlate with user-driven quality metrics
(Henderson et al., 2017). For efficient computation
of this metric, batches of 100 (context, response)
pairs can be processed such that the other 99 ele-
ments in the batch serve as the negative examples.

Sections 4.1 and 4.2 present baseline methods
of conversational response selection that are imple-
mented in the repository. These baselines are in-
tended to run quickly using a subset of the training
data, to give some idea of performance and char-
acteristics of each dataset. Section 4.3 describes
a more competitive neural encoder model that is
trained on the entire training set.



5

4.1 Keyword-based Methods
The keyword-based baselines use keyword similar-
ity metrics to rank responses given a context. These
are typical baselines for information retrieval tasks.
The TF-IDF method computes inverse document
frequency statistics on the training set, and scores
responses using their tf-idf cosine similarity to the
context (Manning et al., 2008).

The BM25 method builds on top of the tf-idf sim-
ilarity, applying an adjustment to the term weights
(Robertson and Zaragoza, 2009).

4.2 Vector-based Methods
The vector-based methods use publicly available
neural net embedding models to embed contexts
and responses into a vector space. We include the
following five embedding models in the evaluation,
all of which are available on Tensorflow Hub:

USE the Universal Sentence Encoder from Cer
et al. (2018)

USE-LARGE a larger version of the Universal
Sentence Encoder

ELMO the Embeddings from Language Mod-
els approach from Peters et al. (2018).

BERT-SMALL the deep bidirectional trans-
former model of Devlin et al. (2018).

BERT-LARGE a larger deep bidirectional
transformer model.

There are two vector-based baseline methods,
one for each of the above models. The SIM method
ranks responses according to their cosine similarity
with the context vector. This method relies on
pretrained models and does not use the training
set at all.

The MAP method learns a linear mapping on top
of the response vector. The final score of a response
with vector y given a context with vector x is the
cosine similarity 〈·, ·〉 of the context vector with
the mapped response vector:

〈x, (W + αI) · y〉 (1)

where W, α are learned parameters and I is the
identity matrix. This allows learning an arbitrary
linear mapping on the context side, while the resid-
ual connection gated by α makes it easy for the
model to interpolate with the SIM baseline. Vec-
tors are L2-normalized before being fed to the MAP
method, so that the method is invariant to scaling.

The W and α parameters are learned on a ran-
dom sample of 10,000 examples from the training
set, using the dot product loss from Henderson
et al. (2017). A sweep over learning rate and regu-
larization parameters is performed using a held-out
development set. The final learned parameters are
used on the evaluation set.

The combination of the three embedding models
with the two vector-based methods results in the
following six baseline methods: USE-SIM, USE-
MAP, USE-LARGE-SIM, USE-LARGE-MAP, ELMO-
SIM, and ELMO-MAP.

4.3 Encoder Model
We also train and evaluate a neural encoder model
that maps the context and response through sepa-
rate sub-networks to a shared vector space, where
the final score is a dot-product between a vector rep-
resenting the context and a vector representing the
response as per Henderson et al. (2017); Cer et al.
(2018); Kumar et al. (2018); Yang et al. (2018).
This model is referred to as POLYAI-ENCODER in
the evaluation.

Full details of the neural structure are given in
Henderson et al. (2019). To summarize, the context
and response are both separately passed through
sub-networks that:

1. split the text into unigram and bigram features

2. convert unigrams and bigrams to numeric IDs
using a vocabulary of known features in con-
junction with a hashing strategy for unseen
features

3. separately embed the unigrams and bigrams
using large embedding matrices

4. separately apply self-attention then reduction
over the sequence dimension to the unigram
and bigram embeddings

5. combine the unigram and bigram representa-
tions, then pass them through several dense
hidden layers

6. L2-normalize the final hidden layer to obtain
the final vector representation

Both sub-networks are trained jointly using the
dot-product loss of Henderson et al. (2017), with
label smoothing and a learned scaling factor.

5 Evaluation

All the methods discussed in section 4 are evalu-
ated on the three standard datasets from section 3,

https://www.tensorflow.org/hub


6

Reddit OpenSubtitles AmazonQA

TF-IDF 26.7 10.9 51.8
BM25 27.6 10.9 52.3

USE-SIM 36.6 13.6 47.6
USE-MAP 40.8 15.8 54.4
USE-LARGE-SIM 41.4 14.9 51.3
USE-LARGE-MAP 47.7 18.0 61.9
ELMO-SIM 12.5 9.5 16.0
ELMO-MAP 19.3 12.3 33.0
BERT-SMALL-SIM 17.1 13.8 27.8
BERT-SMALL-MAP 24.5 17.5 45.8
BERT-LARGE-SIM 14.8 12.2 25.9
BERT-LARGE-MAP 24.0 16.8 44.1

POLYAI-ENCODER 61.3 30.6 84.2

Table 2: 1-of-100 accuracy results for keyword-based baselines, vector-based baselines, and the encoder model
for each of the three standard datasets. The latest evaluation results are maintained in the repository. Results are
computed on a random subset of 50,000 examples from the test set (500 batches of 100).

and the results are presented in table 2. In this
evaluation, all methods use only the (immediate)
context feature to score the responses, and do not
use other features such as the extra contexts.

The keyword-based TF-IDF and BM25 are
broadly competitive with the vector-based meth-
ods, and are particularly strong for AmazonQA,
possibly because rare words such as the product
name are informative in this domain. Learning a
mapping with the MAP method gives a consistent
boost in performance over the SIM method, show-
ing the importance of learning the mapping from
context to response versus simply relying on simi-
larity. This approach would benefit from more data
and a more powerful mapping network, but we have
constrained the baselines so that they run quickly
on a single computer. The Universal Sentence En-
coder model outperforms ELMo in all cases.

The POLYAI-ENCODER model significantly out-
performs all of the baseline methods. This is not
surprising, as it is trained on the entire training set
using multiple GPUs for several hours. We wel-
come other research groups to share their results,
and we will be growing the table of results in the
repository.

6 Conclusion

This paper has introduced a repository of conver-
sational datasets, providing hundreds of millions
examples for training and evaluating conversational
response selection systems under a standard evalua-
tion framework. Future work will involve introduc-
ing more datasets in this format, more competitive
baselines, and more benchmark results. We wel-
come contributions from other research groups in
all of these directions.

References
Martín Abadi, Ashish Agarwal, Paul Barham, Eugene

Brevdo, Zhifeng Chen, Craig Citro, Greg S. Cor-
rado, Andy Davis, Jeffrey Dean, Matthieu Devin,
Sanjay Ghemawat, Ian Goodfellow, Andrew Harp,
Geoffrey Irving, Michael Isard, Yangqing Jia, Rafal
Jozefowicz, Lukasz Kaiser, Manjunath Kudlur, Josh
Levenberg, Dan Mané, Rajat Monga, Sherry Moore,
Derek Murray, Chris Olah, Mike Schuster, Jonathon
Shlens, Benoit Steiner, Ilya Sutskever, Kunal Talwar,
Paul Tucker, Vincent Vanhoucke, Vijay Vasudevan,
Fernanda Viégas, Oriol Vinyals, Pete Warden, Mar-
tin Wattenberg, Martin Wicke, Yuan Yu, and Xiao-
qiang Zheng. 2015. TensorFlow: Large-scale ma-
chine learning on heterogeneous systems. Software
available from tensorflow.org.

Tyler Akidau, Robert Bradshaw, Craig Chambers,

https://github.com/PolyAI-LDN/conversational-datasets/blob/master/BENCHMARKS.md
http://tensorflow.org/
http://tensorflow.org/


7

Slava Chernyak, Rafael J. Fernández-Moctezuma,
Reuven Lax, Sam McVeety, Daniel Mills, Frances
Perry, Eric Schmidt, and Sam Whittle. 2015. The
dataflow model: A practical approach to balancing
correctness, latency, and cost in massive-scale, un-
bounded, out-of-order data processing. Proceedings
of the VLDB Endowment, 8.

Rami Al-Rfou, Marc Pickett, Javier Snaider, Yun-
Hsuan Sung, Brian Strope, and Ray Kurzweil. 2016.
Conversational contextual cues: The case of person-
alization and history for response ranking. CoRR,
abs/1606.00372.

Paweł Budzianowski, Tsung-Hsien Wen, Bo-Hsiang
Tseng, Iñigo Casanueva, Stefan Ultes, Osman Ra-
madan, and Milica Gašić. 2018. MultiWOZ - A
large-scale multi-domain wizard-of-oz dataset for
task-oriented dialogue modelling. In Proceedings of
EMNLP.

Daniel Cer, Yinfei Yang, Sheng-yi Kong, Nan Hua,
Nicole Limtiaco, Rhomni St. John, Noah Con-
stant, Mario Guajardo-Cespedes, Steve Yuan, Chris
Tar, Yun-Hsuan Sung, Brian Strope, and Ray
Kurzweil. 2018. Universal sentence encoder. CoRR,
abs/1803.11175.

Debanjan Chaudhuri, Agustinus Kristiadi, Jens
Lehmann, and Asja Fischer. 2018. Improving
response selection in multi-turn dialogue systems by
incorporating domain knowledge. In Proceedings
of CoNLL.

Hongshen Chen, Xiaorui Liu, Dawei Yin, and Jiliang
Tang. 2017. A survey on dialogue systems: Recent
advances and new frontiers. CoRR, abs/1711.01731.

Jacob Devlin, Ming-Wei Chang, Kenton Lee, and
Kristina Toutanova. 2018. BERT: Pre-training of
deep bidirectional transformers for language under-
standing. CoRR, abs/1810.04805.

Wenchao Du and Alan Black. 2018. Data augmenta-
tion for neural online chats response selection. In
Proceedings of SCAI.

Layla El Asri, Hannes Schulz, Shikhar Sharma,
Jeremie Zumer, Justin Harris, Emery Fine, Rahul
Mehrotra, and Kaheer Suleman. 2017. Frames: A
corpus for adding memory to goal-oriented dialogue
systems. In Proceedings of SIGDIAL.

Ahmed Fadhil and Gianluca Schiavo. 2019. Designing
for health chatbots. CoRR, abs/1902.09022.

Jamie Fraser, Ioannis Papaioannou, and Oliver Lemon.
2018. Spoken conversational AI in video games:
Emotional dialogue management increases user en-
gagement. In Proceedings of IVA.

Chulaka Gunasekara, Jonathan K Kummerfeld,
Lazaros Polymenakos, and Walter S Lasecki.
2019. DSTC7 task 1: Noetic end-to-end response
selection.

Charles T. Hemphill, John J. Godfrey, and George R.
Doddington. 1990. The ATIS Spoken Language Sys-
tems Pilot Corpus. In Proceedings of the Workshop
on Speech and Natural Language, HLT ’90.

Matthew Henderson, Rami Al-Rfou, Brian Strope, Yun-
Hsuan Sung, László Lukács, Ruiqi Guo, Sanjiv Ku-
mar, Balint Miklos, and Ray Kurzweil. 2017. Effi-
cient natural language response suggestion for Smart
Reply. CoRR, abs/1705.00652.

Matthew Henderson, Blaise Thomson, and Jason D.
Wiliams. 2014a. The Second Dialog State Tracking
Challenge. In Proceedings of SIGDIAL, pages 263–
272.

Matthew Henderson, Blaise Thomson, and Jason
Williams. 2014b. The Second Dialog State Track-
ing Challenge. In Proceedings of SIGDIAL.

Matthew Henderson, Blaise Thomson, and Steve
Young. 2014c. Word-based dialog state tracking
with recurrent neural networks. In Proceedings of
SIGDIAL.

Matthew Henderson, Ivan Vulić, Daniela Gerz, Iñigo
Casanueva, Paweł Budzianowski, Sam Coope,
Georgios Spithourakis, Tsung-Hsien Wen, Nikola
Mrkšić, and Pei-Hao Su. 2019. Training neural re-
sponse selection for task-oriented dialogue systems.
In Proceedings of ACL.

Jeremy Howard and Sebastian Ruder. 2018. Universal
language model fine-tuning for text classification. In
ACL, pages 328–339.

Michimasa Inaba and Kenichi Takahashi. 2016. Neural
utterance ranking model for conversational dialogue
systems. In Proceedings of SIGDIAL.

Anjuli Kannan, Karol Kurach, Sujith Ravi, Tobias
Kaufmann, Andrew Tomkins, Balint Miklos, Greg
Corrado, László Lukács, Marina Ganea, Peter
Young, and Vivek Ramavajjala. 2016. Smart Reply:
Automated response suggestion for email. In Pro-
ceedings of KDD.

Girish Kumar, Matthew Henderson, Shannon Chan,
Hoang Nguyen, and Lucas Ngoo. 2018. Question-
answer selection in user to user marketplace conver-
sations. In Proceedings of IWSDS.

Guillaume Lample and Alexis Conneau. 2019. Cross-
lingual language model pretraining. CoRR,
abs/1901.07291.

Liliana Laranjo, Adam G. Dunn, Huong Ly Tong, Ah-
met Baki Kocaballi, Jessica Chen, Rabia Bashir,
Didi Surian, Blanca Gallego, Farah Magrabi, An-
nie Y.S. Lau, and Enrico Coiera. 2018. Conver-
sational agents in healthcare: A systematic review.
Journal of the American Medical Informatics Asso-
ciation, 25(9):1248–1258.

https://ai.google/research/pubs/pub43864
https://ai.google/research/pubs/pub43864
https://ai.google/research/pubs/pub43864
https://ai.google/research/pubs/pub43864
http://arxiv.org/abs/1606.00372
http://arxiv.org/abs/1606.00372
http://aclweb.org/anthology/D18-1547
http://aclweb.org/anthology/D18-1547
http://aclweb.org/anthology/D18-1547
http://arxiv.org/abs/1803.11175
http://aclweb.org/anthology/K18-1048
http://aclweb.org/anthology/K18-1048
http://aclweb.org/anthology/K18-1048
http://arxiv.org/abs/1711.01731
http://arxiv.org/abs/1711.01731
http://arxiv.org/abs/1810.04805
http://arxiv.org/abs/1810.04805
http://arxiv.org/abs/1810.04805
http://aclweb.org/anthology/W18-5708
http://aclweb.org/anthology/W18-5708
http://aclweb.org/anthology/W17-5526
http://aclweb.org/anthology/W17-5526
http://aclweb.org/anthology/W17-5526
http://arxiv.org/abs/1902.09022
http://arxiv.org/abs/1902.09022
https://doi.org/10.1145/3267851.3267896
https://doi.org/10.1145/3267851.3267896
https://doi.org/10.1145/3267851.3267896
http://workshop.colips.org/dstc7/papers/dstc7_task1_final_report.pdf
http://workshop.colips.org/dstc7/papers/dstc7_task1_final_report.pdf
https://www.aclweb.org/anthology/H90-1021
https://www.aclweb.org/anthology/H90-1021
http://arxiv.org/abs/1705.00652
http://arxiv.org/abs/1705.00652
http://arxiv.org/abs/1705.00652
http://www.aclweb.org/anthology/W14-4337
http://www.aclweb.org/anthology/W14-4337
https://www.aclweb.org/anthology/W14-4337
https://www.aclweb.org/anthology/W14-4337
http://www.sigdial.org/workshops/conference15/proceedings/pdf/W14-4340.pdf
http://www.sigdial.org/workshops/conference15/proceedings/pdf/W14-4340.pdf
http://aclweb.org/anthology/P18-1031
http://aclweb.org/anthology/P18-1031
https://www.aclweb.org/anthology/W16-3648
https://www.aclweb.org/anthology/W16-3648
https://www.aclweb.org/anthology/W16-3648
https://doi.org/10.1145/2939672.2939801
https://doi.org/10.1145/2939672.2939801
https://arxiv.org/pdf/1802.01766
https://arxiv.org/pdf/1802.01766
https://arxiv.org/pdf/1802.01766
http://arxiv.org/abs/1901.07291
http://arxiv.org/abs/1901.07291
https://www.ncbi.nlm.nih.gov/pubmed/30010941
https://www.ncbi.nlm.nih.gov/pubmed/30010941


8

Xiujun Li, Sarah Panda, Jingjing Liu, and Jianfeng Gao.
2018. Microsoft dialogue challenge: Building end-
to-end task-completion dialogue systems. CoRR,
abs/1807.11125.

Pierre Lison and Jörg Tiedemann. 2016. Opensub-
titles2016: Extracting large parallel corpora from
movie and TV subtitles.

Bing Liu, Tong Yu, Ian Lane, and Ole J Mengshoel.
2018. Customized nonlinear bandits for online re-
sponse selection in neural conversation models. In
Proceedings of AAAI.

Ryan Lowe, Nissan Pow, Iulian Serban, Laurent Char-
lin, Chia-Wei Liu, and Joelle Pineau. 2017. Train-
ing end-to-end dialogue systems with the Ubuntu di-
alogue corpus. Dialogue & Discourse, 8(1).

Ryan Lowe, Nissan Pow, Iulian Serban, and Joelle
Pineau. 2015. The Ubuntu dialogue corpus: A large
dataset for research in unstructured multi-turn dia-
logue systems. In Proceedings of SIGDIAL.

Christopher D. Manning, Prabhakar Raghavan, and
Hinrich Schütze. 2008. Introduction to Information
Retrieval. Cambridge University Press.

Julian McAuley and Alex Yang. 2016. Addressing
complex and subjective product-related queries with
customer reviews. In Proceedings of the 25th In-
ternational Conference on World Wide Web, WWW
’16, Republic and Canton of Geneva, Switzerland.
International World Wide Web Conferences Steering
Committee.

Nikola Mrkšić and Ivan Vulić. 2018. Fully statistical
neural belief tracking. In Proceedings of ACL.

Nikola Mrkšić, Diarmuid Ó Séaghdha, Blaise Thom-
son, Milica Gašić, Pei-Hao Su, David Vandyke,
Tsung-Hsien Wen, and Steve Young. 2015. Multi-
domain dialog state tracking using recurrent neural
networks. In Proceedings of ACL, pages 794–799.

Matthew E. Peters, Mark Neumann, Mohit Iyyer, Matt
Gardner, Christopher Clark, Kenton Lee, and Luke
Zettlemoyer. 2018. Deep contextualized word repre-
sentations. In Proceedings of NAACL.

Osman Ramadan, Paweł Budzianowski, and Milica Ga-
sic. 2018. Large-scale multi-domain belief tracking
with knowledge sharing. In ACL.

Antoine Raux, Brian Langner, Alan W. Black, and
Maxine Eskénazi. 2003. LET’s GO: Improving spo-
ken dialog systems for the elderly and non-natives.
In Proceedings of EUROSPEECH.

Alan Ritter, Colin Cherry, and Bill Dolan. 2010. Unsu-
pervised modeling of Twitter conversations. In Pro-
ceedings of NAACL-HLT.

Alan Ritter, Colin Cherry, and William B. Dolan. 2011.
Data-driven response generation in social media. In
Proceedings of EMNLP, Stroudsburg, PA, USA. As-
sociation for Computational Linguistics.

Stephen Robertson and Hugo Zaragoza. 2009. The
probabilistic relevance framework: BM25 and be-
yond. Foundations and Trends in Information Re-
trieval, 3(4).

Nicolas Schrading, Cecilia Ovesdotter Alm, Ray
Ptucha, and Christopher Homan. 2015. An analysis
of domestic abuse discourse on Reddit. In Proceed-
ings of EMNLP.

Iulian Serban, Ryan Lowe, Laurent Charlin, and Joelle
Pineau. 2016. Generative deep neural networks for
dialogue: A short review. CoRR, abs/1611.06216.

Pararth Shah, Dilek Hakkani-Tür, Bing Liu, and
Gokhan Tür. 2018. Bootstrapping a neural conversa-
tional agent with dialogue self-play, crowdsourcing
and on-line reinforcement learning. In Proceedings
of NAACL-HLT.

Lifeng Shang, Zhengdong Lu, and Hang Li. 2015. Neu-
ral responding machine for short-text conversation.
CoRR, abs/1503.02364.

Alessandro Sordoni, Michel Galley, Michael Auli,
Chris Brockett, Yangfeng Ji, Margaret Mitchell,
Jian-Yun Nie, Jianfeng Gao, and Bill Dolan. 2015.
A neural network approach to context-sensitive
generation of conversational responses. CoRR,
abs/1506.06714.

Chongyang Tao, Wei Wu, Can Xu, Wenpeng Hu,
Dongyan Zhao, and Rui Yan. 2019. Multi-
representation fusion network for multi-turn re-
sponse selection in retrieval-based chatbots. In Pro-
ceedings of WSDM.

Oriol Vinyals and Quoc V. Le. 2015. A neural conver-
sational model. CoRR, abs/1506.05869.

Mengting Wan and Julian McAuley. 2016. Modeling
ambiguity, subjectivity, and diverging viewpoints
in opinion question answering systems. In ICDM,
pages 489–498.

Tsung-Hsien Wen, Milica Gasic, Nikola Mrkšić, Pei-
Hao Su, David Vandyke, and Steve Young. 2015.
Semantically conditioned LSTM-based natural lan-
guage generation for spoken dialogue systems. In
Proceedings of EMNLP.

Tsung-Hsien Wen, Yishu Miao, Phil Blunsom, and
Steve J. Young. 2017a. Latent intention dialogue
models. In Proceedings of ICML.

Tsung-Hsien Wen, David Vandyke, Nikola Mrkšić,
Milica Gašić, Lina M. Rojas-Barahona, Pei-Hao Su,
Stefan Ultes, and Steve Young. 2017b. A network-
based end-to-end trainable task-oriented dialogue
system. In Proceedings of EACL.

Jason D. Williams. 2012. A belief tracking challenge
task for spoken dialog systems. In Proceedings of
the NAACL HLT Workshop on Future directions and
needs in the Spoken Dialog Community.

http://arxiv.org/abs/1807.11125
http://arxiv.org/abs/1807.11125
http://www.lrec-conf.org/proceedings/lrec2016/pdf/947_Paper.pdf
http://www.lrec-conf.org/proceedings/lrec2016/pdf/947_Paper.pdf
http://www.lrec-conf.org/proceedings/lrec2016/pdf/947_Paper.pdf
https://arxiv.org/pdf/1711.08493.pdf
https://arxiv.org/pdf/1711.08493.pdf
http://dad.uni-bielefeld.de/index.php/dad/article/view/3698
http://dad.uni-bielefeld.de/index.php/dad/article/view/3698
http://dad.uni-bielefeld.de/index.php/dad/article/view/3698
https://aclweb.org/anthology/W15-4640
https://aclweb.org/anthology/W15-4640
https://aclweb.org/anthology/W15-4640
https://doi.org/10.1145/2872427.2883044
https://doi.org/10.1145/2872427.2883044
https://doi.org/10.1145/2872427.2883044
http://aclweb.org/anthology/P18-2018
http://aclweb.org/anthology/P18-2018
http://aclweb.org/anthology/P15-2130
http://aclweb.org/anthology/P15-2130
http://aclweb.org/anthology/P15-2130
https://arxiv.org/abs/1802.05365
https://arxiv.org/abs/1802.05365
https://www.aclweb.org/anthology/P18-2069
https://www.aclweb.org/anthology/P18-2069
http://www.isca-speech.org/archive/eurospeech_2003/e03_0753.html
http://www.isca-speech.org/archive/eurospeech_2003/e03_0753.html
http://www.aclweb.org/anthology/N10-1020
http://www.aclweb.org/anthology/N10-1020
http://dl.acm.org/citation.cfm?id=2145432.2145500
http://dx.doi.org/10.1561/1500000019
http://dx.doi.org/10.1561/1500000019
http://dx.doi.org/10.1561/1500000019
http://aclweb.org/anthology/D/D15/D15-1309.pdf
http://aclweb.org/anthology/D/D15/D15-1309.pdf
https://arxiv.org/pdf/1611.06216.pdf
https://arxiv.org/pdf/1611.06216.pdf
http://aclweb.org/anthology/N18-3006
http://aclweb.org/anthology/N18-3006
http://aclweb.org/anthology/N18-3006
http://dblp.uni-trier.de/db/journals/corr/corr1503.html#ShangLL15
http://dblp.uni-trier.de/db/journals/corr/corr1503.html#ShangLL15
http://dblp.uni-trier.de/db/journals/corr/corr1506.html#SordoniGABJMNGD15
http://dblp.uni-trier.de/db/journals/corr/corr1506.html#SordoniGABJMNGD15
http://doi.acm.org/10.1145/3289600.3290985
http://doi.acm.org/10.1145/3289600.3290985
http://doi.acm.org/10.1145/3289600.3290985
http://dblp.uni-trier.de/db/journals/corr/corr1506.html#VinyalsL15
http://dblp.uni-trier.de/db/journals/corr/corr1506.html#VinyalsL15
https://doi.org/10.1109/ICDM.2016.0060
https://doi.org/10.1109/ICDM.2016.0060
https://doi.org/10.1109/ICDM.2016.0060
http://aclweb.org/anthology/D15-1199
http://aclweb.org/anthology/D15-1199
http://proceedings.mlr.press/v70/wen17a.html
http://proceedings.mlr.press/v70/wen17a.html
http://www.aclweb.org/anthology/E17-1042
http://www.aclweb.org/anthology/E17-1042
http://www.aclweb.org/anthology/E17-1042
https://aclweb.org/anthology/W12-1812
https://aclweb.org/anthology/W12-1812


9

Yu Wu, Wei Wu, Chen Xing, Ming Zhou, and Zhou-
jun Li. 2017. Sequential matching network: A
new architecture for multi-turn response selection in
retrieval-based chatbots. In Proceedings of ACL.

Yinfei Yang, Steve Yuan, Daniel Cer, Sheng-Yi Kong,
Noah Constant, Petr Pilar, Heming Ge, Yun-hsuan
Sung, Brian Strope, and Ray Kurzweil. 2018. Learn-
ing semantic textual similarity from conversations.
In Proceedings of The Workshop on Representation
Learning for NLP.

Steve Young. 2010. Still talking to machines (cog-
nitively speaking). In Proceedings of INTER-
SPEECH.

Zhou Yu, Ziyu Xu, Alan W Black, and Alexander Rud-
nicky. 2016. Strategy and policy learning for non-
task-oriented conversational systems. In Proceed-
ings of SIGDIAL.

Xiangyang Zhou, Lu Li, Daxiang Dong, Yi Liu, Ying
Chen, Wayne Xin Zhao, Dianhai Yu, and Hua Wu.
2018. Multi-turn response selection for chatbots
with deep attention matching network. In Proceed-
ings of ACL.

http://aclweb.org/anthology/P17-1046
http://aclweb.org/anthology/P17-1046
http://aclweb.org/anthology/P17-1046
http://aclweb.org/anthology/W18-3022
http://aclweb.org/anthology/W18-3022
http://mi.eng.cam.ac.uk/~sjy/papers/youn10a.pdf
http://mi.eng.cam.ac.uk/~sjy/papers/youn10a.pdf
https://aclweb.org/anthology/W16-3649
https://aclweb.org/anthology/W16-3649
http://aclweb.org/anthology/P18-1103
http://aclweb.org/anthology/P18-1103


10

A Appendix

Reddit

context/2 Could someone there post a summary of the insightful moments.

context/1 Basically L2L is the new deep learning.

context/0 What’s “L2L” mean?

context “Learning to learn”, using deep learning to design the architecture of another
deep network: https://arxiv.org/abs/1606.04474

response using deep learning with SGD to design the learning algorithms of another deep
network *

context_author goodside

response_author NetOrBrain

subreddit MachineLearning

thread_id? 5h6yvl

OpenSubtitles

context/9 So what are we waiting for?

context/8 Nothing, it...

context/7 It’s just if...

context/6 If we’ve underestimated the size of the artifact’s data stream...

context/5 We’ll fry the ship’s CPU and we’ll all spend the rest of our lives stranded in the
Temporal Zone.

context/4 The ship’s CPU has a name.

context/3 Sorry, Gideon.

context/2 Can we at least talk about this before you connect...

context/1 Gideon?

context/0 You still there?

context Oh my God, we killed her.

response Artificial intelligences cannot, by definition, be killed, Dr. Palmer.

file_id? lines-emk

AmazonQA

context i live in singapore so i would like to know what is the plug cos we use those 3
pin type

response it’s a 2 pin U.S. plug, but you can probably get an adapter , very good hair dryer!

product_id? B003XNYHWS

Figure 3: Examples from the three datasets. Each example is a mapping from feature names to string features.
Features with a star ? are used to compute the deterministic train/test split.

https://www.reddit.com/r/MachineLearning/comments/5h6yvl/d_recurrent_neural_networks_and_other_machines/daz60rv/?context=8&depth=9
https://www.amazon.com/ask/questions/asin/B003XNYHWS/1/ref=ask_ql_psf_ql_hza?sort=SUBMIT_DATE&isAnswered=true

