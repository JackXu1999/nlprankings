










































Attribute Relation Extraction from Template-inconsistent Semi-structured Text by Leveraging Site-level Knowledge


International Joint Conference on Natural Language Processing, pages 1097–1101,
Nagoya, Japan, 14-18 October 2013.

Attribute Relation Extraction from Template-inconsistent
Semi-structured Text by Leveraging Site-level Knowledge

Yang Liu, Fang Liu, Siwei Lai, Kang Liu, Guangyou Zhou, Jun Zhao
National Laboratory of Pattern Recognition

Institute of Automation, Chinese Academy of Sciences
{yang.liu,fliu,swlai,kliu,gyzhou,jzhao}@nlpr.ia.ac.cn

Abstract
A variety of methods have been proposed
for attribute-value extraction from semi-
structured text with consistent templates
(strict semi-text). However, when the tem-
plates in semi-structured text are inconsis-
tent (weak semi-text), these methods will
work poorly. To overcome the template-
inconsistent problem, in this paper, we
proposed a novel method to leverage site-
level knowledge for attribute-value extrac-
tion. First, we use a graph-based random
walk model to acquire site-level knowl-
edge. Then we utilize such knowledge to
identify weak semi-text in each page and
extract attribute-value pairs. The experi-
ments show that, comparing to the base-
line method which does not utilize site-
level knowledge, our method can improve
the extraction performance significantly.

1 Introduction

Among types of relations, attributes (e.g. nation-
ality, date of birth) have emerged as one of the
most popular types (Alfonseca et al., 2010), as
they capture properties of respective objects (or
instances) (e.g. Kobe Bryant). Generally, an at-
tribute relation consists of an object, an attribute
and its associated value (e.g. Kobe Bryant - date of
birth - August 23, 1978, where “August 23, 1978”
is the value of “date of birth”). In this paper,
we call such a relation an object-attribute-value
(OAV) tuple. Many methods have been proposed
to extract attributes from semi-structured text (Ca-
farella et al., 2008)(Venetis et al., 2011)(Crescenzi
et al., 2001)(Arasu and Garcia-Molina, 2003) and
unstructured text like webpages and Web search
query logs (Reisinger and Paşca, 2009)(Paşca et
al., 2010)(Pasca and Van Durme, 2007). Semi-
structured text (strict semi-text) often has dis-
tinctive HTML tags and consistent templates like

HTML tables (eg: Wikipedia infoboxes). How-
ever, a lot of user-generated semi-structured text
with weak structures exist, where their templates
generating records are inconsistent and the HTML
tags in these templates are less distinctive. In this
paper, we focus on the issue of extracting attribute-
value (AV) pairs from semi-structured text with in-
consistent templates (weak semi-text).

In previous work, Yoshinaga and Torisawa
(Yoshinaga and Torisawa, 2007) extracted AV
pairs of given objects from semi-structured text.
They induced templates via a set of attributes ob-
tained beforehand and used the templates to ex-
tract AV pairs. There are two constraints of their
method. First, it heavily depends on the initial set
of attributes. However, the quality and coverage of
the initial set of attributes is hard to control. Sec-
ond, they hold the assumption that attributes in the
same block of semi-structured text are generated
with the same template which weak semi-text does
not satisfy. Their method mainly concentrated on
extraction from semi-structured text with consis-
tent templates (strict semi-text). When facing the
weak semi-text with inconsistent templates, it will
fail to obtain satisfactory results.

To resolve the problem of inconsistent tem-
plates, we propose an unsupervised method by
leveraging site-level knowledge to extract AV
pairs from weak semi-text. We explore the intrin-
sic structure connection among pages of the same
website to address the problem. We make a two-
stage effort: The first stage is to acquire knowl-
edge that reveals the intrinsic similar structures
among similar pages of the same site (site-level
knowledge); the second stage is to leverage site-
level knowledge to assist the AV pair extraction in
weak semi-text.

In the paper, we present a novel approach
that leverages site-level knowledge to extract in-
stances’ attributes and their values from weak
semi-text. To the best of our knowledge, little

1097



Figure 1: System overview.

work has addressed the problems to extract AV
pairs form weak semi-text. The experimental re-
sults show that, when facing weak semi-text, our
method outperforms the baseline method which
does not leverage site-level knowledge.

2 System Description

The system consists of two part: the site-level
extraction and the page-level extraction (Figure
1). Site-level extraction aims to obtain site-level
knowledge from pages of a website. Page-level
extraction leverages obtained site-level knowledge
to help the AV pair extraction from each page.

2.1 Site-level Extraction
We describe details of the modules in site-level ex-
traction (Figure 1).

2.1.1 Weak Semi-block Identification and
Attribute Template Learner

We first segment a webpage into several blocks
based on the paragraph HTML tags. Then we
align the initial attributes to text of each block.
The aligned attributes are used to induce templates
to extract more attributes. A template is composed
of a prefix and a separator. The separator is re-
ferred to the character or word next to the matched
attribute and the prefix means characters previous
to it. We take the string which begins at the head
of first html tag before the matched attribute and
ends at the head of the matched attribute as the
template’s prefix. For example a HTML fragment
“,<div class=“spctrl”></div> 5O(Sex)µ
I(Male),”, in it, “5O(Sex)” is the attribute,
“</div> ” is the prefix and “µ” is the separa-
tor, the template is “</div> WCµ” where WC is
a placeholder for the attribute. And we set the pre-
fix’s window size as 15. If no html tag has been
found within the window, then the template of this
attribute is abandoned. Finally, we obtain a collec-
tion of templates of the weak semi-block.

We employ heuristic rules based on aligned at-
tributes number and types and templates number

Figure 2: An example of our constructed graph.

to judge whether a block is a weak semi-block or
not. Settings of two rules are discussed in the ex-
periment at Section 5.4.1. They are: i) number of
strings matched to initial attribute list is no smaller
than t1, and ii) sum of attributes’ probabilities hav-
ing been matched to strings in the text is larger
than t2. We represent them with a parameter vec-
tor T = (t1, t2).

2.1.2 Attribute Extraction
The obtained templates are used to extract more
attributes in each block. Intuitively, more fre-
quent a template is found in a weak semi-block,
more likely a string extracted by that template is
an attribute. Based on this idea, templates with
higher frequencies will have higher priority than
those with the lower frequencies when extracting
attributes. After we run through all the pages of
the site, we get a collection of templates and at-
tributes. Then we rank them to obtain site-level
knowledge.

2.1.3 Ranker
To rank obtained templates and attributes to get
site-level knowledge, we use the graph walk based
technique (Wang and Cohen, 2007)(Wang and Co-
hen, 2009).

In the graph (Figure 2), attributes in initial at-
tribute list are used as seeds. And these seeds are
used to match the attributes in weak semi-block of
a document (or a page) to learn templates. Then
these templates are used to extract new attributes
from the weak semi-block of a document (or a
page). Intuitively, we consider that seeds appear-
ing frequently are with high quality, templates de-
rived by these seeds are tend to have good quality,
and documents containing these seeds and tem-
plates are also deemed as high quality. Inversely,
high quality documents also produce high quality
attributes and high quality templates.

1098



We utilize random walk with restart (RWR) to
provide relevance score between two nodes (Tong
et al., 2006). After the computation, we rank the
attributes and templates by their probabilities in
the final state vector.

We further refine the obtained ranked attributes
by filtering obvious errors and the low ranks (site-
level attributes) and generalize the top ranked tem-
plates by some rules (site-level templates). Site-
level attributes and site-level templates composed
the site-level knowledge.

2.2 Page-level Extraction

This section describes modules in page-level ex-
traction (Figure 1).

2.2.1 Weak Semi-block Identification and AV
Pair Extraction

To identify weak semi-block, we take the advan-
tage of site-level knowledge to make several em-
pirical rules based on the alignment of site-level
templates and text of each block. The strings ex-
tracted by the templates are attribute candidates
(AttCandi for short). We think only AttCandies
extracted by authentic templates are correct at-
tributes. A template is regarded as authentic once
an AttCandi extracted by it exists in the site-level
attributes. In the extraction of attribute’s values,
we follow the method in (Yoshinaga and Torisawa,
2007) with the hypothesis that an attribute imme-
diately precedes its value, and another AV pair im-
mediately follows those values.

2.2.2 Object Extraction
we need to obtain objects of AV pairs to form at-
tribute relations (OAV tuples) mentioned in Sec-
tion 1 (eg: Kobe Bryant - DateOfBirth - August
23, 1978). We inspect several sampled pages and
find their shared unique HTML template of objects
for AV pair in their own pages. And then use this
shared template to extract objects in each pages.

3 EXPERIMENTS

3.1 Experiment Settings

We carry out the experiments on 3 million Baidu
Baike1 (Baike for short) pages. In them, 1/3 of
the pages (observed from our sampling) contain
weak semi-text. For pre-processing, we remove
infoboxes in each page which are strict semi-text.

1http://baike.baidu.com/

2 4 61 8 103 5 7 9

0.85

0.9

0.95

1

t1

P
re

ci
si

on

 

 

t2=0
t2=0.001
t2=0.002

1 2 3 4 5 6 7 8 9 10
0

0.05

0.1

0.15

0.2

0.25

0.3

0.35

0.4

0.45

0.5

0.550.55

t1

R
ec

al
l

 

 

t2=0
t2=0.001
t2=0.002

Figure 3: P/R curves with different T = (t1, t2).

We evaluate on two aspects where site-level
knowledge takes effect, they are: 1) weak semi-
block identification in page-level extraction; 2) AV
pair extraction in page-level extraction. We ran-
domly sample 300 pages for manually labeling.
99 in them contain weak semi-blocks, and 1022
OAV tuples are labeled in the 99 pages. We use
the manually labeled data as benchmark.

3.2 The Baseline
To demonstrate the effectiveness of incorporating
the site-level knowledge, we implement a baseline
system similar to Yoshinaga and Torisawa (Yoshi-
naga and Torisawa, 2007), which does not utilize
the site-level knowledge. For comparison with our
method, unlike their work which obtains initial at-
tributes via search engine by manually generated
regular expressions (it is hard to repeat precisely),
we use the same initial attributes (attributes in in-
foboxes of Chinese Wikipedia) with our system as
input.

3.3 Evaluation on Weak Semi-text
3.3.1 Evaluation on Weak Semi-block

Identification (Ours vs. Baseline)
For weak semi-block Identification, we vary pa-
rameter vectors T = (t1, t2) (Section 3.1) to show
the selection of parameters. We set t1 = {x :
1 ≤ x ≤ 10}, t2 = {0, 0.001, 0.002}. Details of
their effects to precision curves and recall curves
are shown in Figure 3.

Since the contradiction between precision and
recall in figure 3, we think high precision is more
important comparing to high recall. For that, if
we fail to recall a weak semi-block, we still have
chance to get the same features this weak semi-
block contains from others in the same site and
recall it when doing page-level extraction with the
help of site-level knowledge, however, if we iden-
tify the incorrect weak semi-block, the incorrect
knowledge in it will be added to site-level knowl-
edge which will bring amount of errors to our re-
sults when utilizing it to help page-level extrac-

1099



Table 1: Performances of weak semi-block location.
Output number Correct Precision Recall F-measure

Baseline Tβ 12 12 1.0 0.121 0.216
Baseline Tγ 59 50 0.847 0.505 0.633
Baseline Tα 38 36 0.947 0.364 0.526
SiteExt Tα 100 96 0.96 0.970 0.965

Table 2: Strict and loose precision (P), recall (R) and F-measure (F) comparison of OAV tuple acquisition.
P-strict R-strict F-strict P-loose R-loose F-loose

Baseline Tβ 0.822 0.159 0.266 0.888 0.171 0.287
Baseline Tγ 0.691 0.356 0.470 0.736 0.380 0.501
Baseline Tα 0.856 0.307 0.452 0.918 0.330 0.485
SiteExt Tα 0.844 0.770 0.805 0.887 0.810 0.847

tion. Therefore, we choose T as Tα = (4, 0.001),
for our system (SiteExt), which gives a relatively
higher recall with a high precision (Figure 3).

We compared SiteExt Tα with T = Tα and
the baseline system which respectively uses Tα,
Tβ = (7, 0.001) and Tγ = (2, 0). The weak semi-
block identification module of the baseline sys-
tem is the same with the weak semi-block iden-
tification module of SiteExt in site-level extrac-
tion (Section 3.2). Therefore the results in these
two modules are the same. From Figure 3, we
can see that Baseline Tβ brings the highest recall
within the ones bringing highest precision, and
Baseline Tγ brings the highest precision within
the ones bringing highest recall.

Table 1 shows that SiteExt Tα’s performance
has a dramatic improvement comparing to other
baseline systems which do not leverage site-level
knowledge. The reason is that site-level knowl-
edge captures attributes and templates specific to
Baike. Meanwhile, weak semi-blocks in each
page of the same site also share these features. As
a result, we can identify more weak semi-blocks
and reduce the incorrect ones with the same initial
attribute set.

3.3.2 Evaluation on Object-Attribute-Value
(OAV) tuples (SiteExt vs. Baseline)

We then evaluate the results of OAV tuple extrac-
tion. For different items in an OAV tuple, we select
different similarity-computing methods. Because
objects and attributes in an OAV tuple are always
short phrases only with several words, we con-
sider them as correct when their similarity meets a
strict merit. On the other side, the value often con-
tains descriptive contents which have more words.
A small size of noises is acceptable. Therefore,
besides the strict merit, we further select a loose

merit. The two merits are shown in (3) and (4).

Sloose =
len(wd(Vbm

⋂
wd(Vext))

min(len(wd(Vbm), len(wd(Vext))))
(1)

Sstrict =
len(wd(Vbm

⋂
wd(Vext))

max(len(wd(Vbm), len(wd(Vext))))
(2)

Where Vbm and Vext separately denote the
string of an attribute’s value in benchmark and in
our extraction results, wd(V ) is a set of different
words in V , and len(s) means sum of words in a
set s. In the experiment, we set the thresholds both
as 0.75. When all the similarity scores of three
items (object, attribute, value) exceed the thresh-
old, the extracted OAV tuple is regarded as correct.

Table 2 shows the performance of different sys-
tems. Comparing to Baseline Tα, SiteExt Tα
has great improvements in recall and has a slightly
loss in precision. SiteExt Tα outperforms the
other two baseline systems in both precision and
recall. The experiment results prove that site-
level knowledge is quite essential and effective to
promise a good performance when extracting OAV
tuples from weak semi-text of the same website.
The two systems use the same initial attribute set
as input, our method can identify more weak semi-
blocks and extract more OAV tuples. It also proves
that our method is less sensitive to the initial at-
tribute set.

4 Conclusion

In this paper, we propose a novel approach that
acquires site-level knowledge via a graph-based
random walk model and leverages such knowl-
edge to extract attribute relations from weak semi-
text. Experimental results show that we can sig-
nificantly improve the performance of identifying
weak semi-text and OAV tuple extraction.

1100



Acknowledgments

This work was supported by the National Natu-
ral Science Foundation of China (No. 61070106,
No. 61272332 and No. 61202329), the National
High Technology Development 863 Program of
China (No. 2012AA011102), the National Basic
Research Program of China (No. 2012CB316300)
and the Opening Project of Beijing Key Labora-
tory of Internet Culture and Digital Dissemination
Research (ICDD201201).

References
E. Alfonseca, M. Pasca, and E. Robledo-Arnuncio.

2010. Acquisition of instance attributes via labeled
and related instances. In Proceedings of the 33rd in-
ternational ACM SIGIR conference on Research and
development in information retrieval, pages 58–65.
ACM.

A. Arasu and H. Garcia-Molina. 2003. Extracting
structured data from web pages. In Proceedings of
the 2003 ACM SIGMOD international conference
on Management of data, pages 337–348. ACM.

M.J. Cafarella, A. Halevy, D.Z. Wang, E. Wu, and
Y. Zhang. 2008. Webtables: exploring the power
of tables on the web. Proceedings of the VLDB En-
dowment, 1(1):538–549.

V. Crescenzi, G. Mecca, P. Merialdo, et al. 2001.
Roadrunner: Towards automatic data extraction
from large web sites. In Proceedings of the inter-
national conference on very large data bases, pages
109–118.

M. Pasca and B. Van Durme. 2007. What you seek
is what you get: Extraction of class attributes from
query logs. In Proceedings of the 20th International
Joint Conference on Artificial Intelligence (IJCAI-
07), pages 2832–2837.

M. Paşca, E. Alfonseca, E. Robledo-Arnuncio,
R. Martin-Brualla, and K. Hall. 2010. The role of
query sessions in extracting instance attributes from
web search queries. Advances in Information Re-
trieval, pages 62–74.

J. Reisinger and M. Paşca. 2009. Latent variable
models of concept-attribute attachment. In Pro-
ceedings of the Joint Conference of the 47th Annual
Meeting of the ACL and the 4th International Joint
Conference on Natural Language Processing of the
AFNLP: Volume 2-Volume 2, pages 620–628. Asso-
ciation for Computational Linguistics.

H. Tong, C. Faloutsos, and J.Y. Pan. 2006. Fast ran-
dom walk with restart and its applications.

P. Venetis, A. Halevy, J. Madhavan, M. Paşca, W. Shen,
F. Wu, G. Miao, and C. Wu. 2011. Recovering se-
mantics of tables on the web. Proceedings of the
VLDB Endowment, 4(9):528–538.

R.C. Wang and W.W. Cohen. 2007. Language-
independent set expansion of named entities using
the web. In Data Mining, 2007. ICDM 2007. Sev-
enth IEEE International Conference on, pages 342–
350. IEEE.

R.C. Wang and W.W. Cohen. 2009. Character-level
analysis of semi-structured documents for set expan-
sion. In Proceedings of the 2009 Conference on Em-
pirical Methods in Natural Language Processing:
Volume 3-Volume 3, pages 1503–1512. Association
for Computational Linguistics.

N. Yoshinaga and K. Torisawa. 2007. Open-domain
attribute-value acquisition from semi-structured
texts. In Proceedings of the 6th International Se-
mantic Web Conference (ISWC-07), Workshop on
Text to Knowledge: The Lexicon/Ontology Interface
(OntoLex-2007), pages 55–66.

1101


