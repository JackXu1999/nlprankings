



















































Attention-Based Capsule Networks with Dynamic Routing for Relation Extraction


Proceedings of the 2018 Conference on Empirical Methods in Natural Language Processing, pages 986‚Äì992
Brussels, Belgium, October 31 - November 4, 2018. c¬©2018 Association for Computational Linguistics

986

Attention-Based Capsule Networks with Dynamic Routing
for Relation Extraction

Ningyu Zhang1 Shumin Deng2,3 Zhanlin Sun2 Xi Chen2
Wei Zhang3,4 Huajun Chen2‚àó

1. Artificial Intelligence Research Institute, Zhejiang Lab, China
2. College of Computer Science and Technology, Zhejiang University, China
3. Alibaba-Zhejiang University Frontier Technology Research Center, China

4. Alibaba Group, China
zhangningyu@zju.edu.cn

Abstract

A capsule is a group of neurons, whose activ-
ity vector represents the instantiation param-
eters of a specific type of entity. In this pa-
per, we explore the capsule networks used for
relation extraction in a multi-instance multi-
label learning framework and propose a nov-
el neural approach based on capsule networks
with attention mechanisms. We evaluate our
method with different benchmarks, and it is
demonstrated that our method improves the
precision of the predicted relations. Particu-
larly, we show that capsule networks improve
multiple entity pairs relation extraction1.

1 Introduction

This paper focus on the task of relation extrac-
tion. One popular method for relation extraction
is the multi-instance multi-label learning frame-
work (MIML) (Surdeanu et al., 2012) with dis-
tant supervision, where the mentions for an en-
tity pair are aligned with the relations in Free-
base (Bollacker et al., 2008). The recently pro-
posed neural network (NN) models (Zeng et al.,
2014; Ye et al., 2017; Yang et al., 2018; Wang
et al., 2018a) achieve state-of-the-art performance.
However, despite the great success of these NNs,
some disadvantages remain. First, the existing
models focus on, and heavily rely on, the quali-
ty of instance representation. Using a vector to
represent a sentence is limited because languages
are delicate and complex. Second, CNN subsam-
pling fails to retain the precise spatial relationship-
s between higher-level parts. The structural re-
lationships such as the positions in sentences are
valuable. Besides, existing aggregation operations

‚àó Corresponding author.
1In this paper, multiple entity pairs relation extraction

refers to multiple entity pairs in a single sentence and each
pair of entities contains only one relation label.

summarizing the sentence meaning into a fixed-
size vector such as max or average pooling are lack
of guidance by task information. Self-attention
(Lin et al., 2017) can select task-dependent infor-
mation. However, the context vectors are fixed
once learned (Gong et al., 2018).

More importantly, most state-of-the-art systems
can only predict one most likely relation for a s-
ingle entity pair. However, it is very common that
one sentence may contain multiple entity pairs and
describe multiple relations. It is beneficial to con-
sider other relations in the context while predicting
the relations (Sorokin and Gurevych, 2017). For
example, given the sentence ‚Äù[Swag It Out] is the
official debut single by American [singer] [Zen-
daya]‚Äù, our model can predict multi-relations for
these multiple entity pairs simultaneously.

In our work, we present a novel architecture
based on capsule networks (Sabour et al., 2017)
for relation extraction. We regard the aggregation
as a routing problem of how to deliver the mes-
sages from source nodes to target nodes. This pro-
cess enables the capsule networks to decide what
and how much information need to be transferred
as well as identify complex and interleaved fea-
tures. Furthermore, the capsule networks convert
the multi-label classification problem into a multi-
ple binary classification problem. We also import
word-level attention by considering the different
contribution of the words. The experimental re-
sults show that our model achieves improvements
in both single and multiple relation extraction.

2 Related Work

Neural Relation Extraction: In the recent years,
NN models have shown superior performance over
approaches using hand-crafted features in various
tasks. CNN is the first one of the deep learn-
ing models that have been applied to relation ex-



987

0.025
country

0.793   
occupation

0.894   
performer

S1
u1

Vi

Squash

S2

‡∑úùë¢1|1

S3

‡∑úùë¢1|2

‡∑úùë¢2|1

‡∑úùë¢2|2

‡∑úùë¢3|1

‡∑úùë¢3|2

u2

Wj Cj|i

V2

V3

.

.

.

.

.

.

.

.

.

.

.

.

Vector representation BiLSTM Layer Primary Capsule Layer

[e1 Swag It Out] is the 
official debut  single by 

American [e2  singer] 
[e3 Zendaya]

.

.

.

Dynamic Routing

.

.

.

word position

(e1, e3)->?
(e3, e2)->?

.

.

.

Figure 1: Architecture of capsule networks for relation extraction

traction (Santos et al., 2015). Variants of convo-
lutional networks include piecewise-CNN (PCN-
N) (Zeng et al., 2015), instance-level selective at-
tention CNN (Lin et al., 2016), rank CNN (Ye
et al., 2017), attention and memory CNN (Feng
et al., 2017) and syntax-aware CNN (He et al.,
2018). Recurrent neural networks (RNN) are an-
other popular choice, and have been used in re-
cent works in the form of attention RNNs (Zhou
et al., 2016), context-aware long short-term mem-
ory units (LSTMs) (Sorokin and Gurevych, 2017),
graph-LSTMs (Peng et al., 2017) and ensemble L-
STMs (Yang et al., 2018).

Capsule Network: Recently, the capsule net-
work has been proposed to improve the represen-
tation limitations of CNNs and RNNs. (Sabour
et al., 2017) replaced the scalar-output feature de-
tectors of CNNs with vector-output capsules and
max-pooling with routing-by-agreement. (Hinton
et al., 2018)) proposed a new iterative routing pro-
cedure among capsule layers, based on the EM al-
gorithm. For natural language processing tasks,
(Zhao et al., 2018) explored capsule networks for
text classification. (Gong et al., 2018) designed
two dynamic routing policies to aggregate the out-
puts of RNN/CNN encoding layer into a final en-
coding vector. (Wang et al., 2018b) proposed a
capsule model based on RNN for sentiment anal-
ysis. To the best of our knowledge, there has
been no work that investigates the performance
of capsule networks in relation extraction tasks at
present.

3 Methodology

In this section, we first introduce the MIML frame-
work, and then describe the model architecture we
propose for relation extraction, which is shown in
Figure 1.

3.1 Preliminaries

In MIML, the set of text sentences for the single
entity pair or multiple entity pairs2 (maximum t-
wo entity pairs in this paper) is denoted by X =
{x1, x2, ..., xn}. Assumed that there are E pre-
defined relations (including NA) to extract. For-
mally, for each relation r, the prediction target is
denoted by P (r|x1, ..., xn).

3.2 Neural Architectures

Input Representation: For each sentence xi, we
use pretrained word embeddings to project each
word token onto the dw-dimensional space. We
adopt the position features as the combination-
s of the relative distances from the current word
to M entities and encode these distances in M
dp-dimensional vectors3. For single entity pair
relation extraction, M = 2; for multiple entity
pairs relation extraction, we limit the maximum
number of entities in a sentence to four (i.e. t-
wo entity pairs). As three entities in one in-
stance is possible when two tuples have a com-
mon entity, we set the relative distance to the
missing entity to a very large number. Finally,
each sentence is transformed into a matrix xi =
{w1, w2, ..., wL} ‚àà RL√óV , where L is the sen-
tence length with padding and V = dw + dp ‚àóM .

Bi-LSTM Layer: We make use of LSTMs to
deeply learn the semantic meaning of a sentence.
We concatenate the current memory cell hidden s-
tate vector ht of LSTM from two directions as the
output vector ht = [

‚àí‚Üí
h t,
‚Üê‚àí
h t] ‚àà R2B at time t,

where B denotes the dimensionality of LSTM.

2Since the number of sentences with multiple entity pairs
is relatively small, we make use of all the sentences as train-
ing samples.

3We also adopt an attention mechanism similar to word-
level attention in Bi-LSTM layer by considering the different
contribution of the M position embeddings.



988

We import word-level attention mechanism as
only a few words in a sentence that are relevant to
the relation expressed (Jat et al., 2018). The scor-
ing function is gt = ht√óA√ór, whereA ‚àà RE√óE
is a square matrix and r ‚àà RE√ó1 is a relation vec-
tor. Both A and r are learned. After obtaining gt,
we feed them to a softmax function to calculate
the final importance Œ±t = softmax(gt). Then,
we get the representation xÃÉt = Œ±tht.

For a given bag of sentences, the learning is
done using the setting proposed by (Zeng et al.,
2015), where the sentence with highest probabili-
ty of expressing the relation in a bag is selected to
train the model in each iteration.

Primary Capsule Layer: Suppose ui ‚àà Rd
denotes the instantiated parameters set of a cap-
sule, where d is the dimension of the capsule. Let
W b ‚àà R2√ó2B be the filter shared across different
windows. We have a window sliding each 2-gram
vector in the sequence xÃÉ ‚àà RL√ó2B with stride 1
to produce a list of capsules U ‚àà R(L+1)√óC√ód,
totally C √ó d filters.

uij = squash(W
b
i ‚äó Sj‚àí1:j + b1) (1)

where 0 ‚â§ i ‚â§ C √ó d, 0 ‚â§ j ‚â§ L + 1,
squash(x) = ||x||

2

0.5+||x||2
x
||x|| , b1 is the bias ter-

m. For all C √ó d filters, the generated cap-
sule feature maps can be rearranged as U =
{u1, u2, ..., u(L+1)√óC}, where totally (L+1)√óC
d-dimensional vectors are collected as capsules.

Algorithm 1 Dynamic Routing Algorithm
1: procedure ROUTING(uÃÇj|i, aÃÇj|i, r, l)
2: Initialize the logits of coupling coefficients
bj|i = 0

3: for r iterations do
4: for all capsule i in layer l and capsule j in

layer l + 1 do
5: cj|i = aÃÇj|i ¬∑ softmax(bj|i)
6: for all capsule j in layer l + 1 do
7: vj = squash(

‚àë
i cj|iuÃÇj|i), aj = ||vj ||

8: for all capsule i in layer l and capsule j in
layer l + 1 do

9: bj|i = bj|i + uÃÇj|i ¬∑ vj
return vj , aj

Dynamic Routing: We explore the transfor-
mation matrices to generate the prediction vector
uj|i ‚àà Rd from a child capsule i to its parent cap-
sule j. The transformation matrices share weights
W c ‚àà RE√ód√ód across the child capsules, where

E is the number relations (parent capsules) in the
layer above. Formally, each corresponding vote
can be computed by:

uÃÇj|i =W
c
j ui + bÃÇj|i ‚àà Rd (2)

The basic idea of dynamic routing is to design a
nonlinear map:
{uÃÇj|i ‚àà Rd}i=1,...,H,j=1,...,E 7‚Üí {vj ‚àà Rd}Ej=1
where H = (L+ 1)√ó C.
Inspired by (Zhao et al., 2018), we attempt to

use the probability of existence of parent cap-
sules to iteratively amend the connection strength,
which is summarized in Algorithm 1. The length
of the vector vj represents the probability of each
relation. We use a separate margin lossLk for each
relation capsule k:

Lk = Ykmax(0,m
+ ‚àí ||vk||)2

+ Œª(1‚àí Yk)max(0, ||vk|| ‚àím‚àí)2
(3)

where Yk = 1 if the relation k is present, m+ =
0.9 , m‚àí = 0.1 and Œª = 0.5. The total loss can be
formulated as: Ltotal =

‚àëE
k=1 Lk

3.3 Prediction
For single entity pair relation extraction, we cal-
culate the length of the vector vj which repre-
sents the probability of each relation. For multi-
ple entity pairs relation extraction, we choose re-
lations with top two probability meanwhile bigger
than the threshold (We empirically set the thresh-
old 0.7). Finally, we may get one or two predicted
relations r. Given entity pair (e1, e2), in order to
choose which relationship the tuple belongs to, we
adopt the pretrained embeddings of entities and re-
lations4 and calculate rk = argmin

k
|t ‚àí h ‚àí rk|

, where t, h are the embeddings of entities e1, e2
respectively and rk is the relation embedding. The
relation with the closest embedding to the entity
embedding difference is the predicted category.

4 Experiments

We test our model on the NYT dataset (NYT) de-
veloped by (Riedel et al., 2010) for single entity
pair relation extraction and the Wikidata dataset
(Sorokin and Gurevych, 2017) for multiple enti-
ty pairs relation extraction. We exclude sentences
longer than L . All code is implemented in Ten-
sorflow (Abadi et al., 2016). We adopt the Adam

4http://openke.thunlp.org



989

optimizer (Kingma and Ba, 2014) with learning
rate 0.001, batch size 128, LSTMs‚Äô unit size 300,
L = 120, dp = 5, d = 8, C = 32, dropout rate
0.5, routing iteration 3.

4.1 Practical Performance
NYT dataset (Single entity pair):

Figure 2: Performance comparison on the NYT dataset.

We utilize the word embeddings released by
(Lin et al., 2016)5. The precision-recall curves
for different models on the test set are shown in
Figure 2. Our model BiLSTM+Capsule achieves
comparable results compared with all baselines,
where Mintz refers to (Mintz et al., 2009), Hoff-
mann refers to (Hoffmann et al., 2011), MIMLRE
refers to (Surdeanu et al., 2012), CNN+ATT refers
to (Zeng et al., 2015), PCNN+ATT refers to (Lin
et al., 2016), Rank+ExATT refers to (Ye et al.,
2017) and Memory refers to (Feng et al., 2017).
We also show the precision numbers for some par-
ticular recalls as well as the AUC in Table 1, where
our model generally leads to better precision. In-
terestingly, we observe our model achieve com-
parable results to predict multi-relation compared
with Rank+ExATT in Figure 3. Given an entity
tuple (South Korea, Seoul) which has two rela-
tions: /location/./administrative divisions and /lo-
cation/./capital. We observe these two relations
have the highest scores among the other relation-
s in our model which demonstrate the ability of
multi-relations prediction.

Wikidata dataset (Multiple entity pairs):
We train word embeddings using Glove (Pen-

nington et al., 2014)6 on the Wikipedia Corpus.
5dw = 50
6dw = 200

Figure 3: Normalized output relation scores.

Table 1: Precisions on the NYT dataset.
Recall 0.1 0.2 0.3 0.4 AUC

PCNN+ATT 0.698 0.606 0.518 0.446 0.323
Rank+ExATT 0.789 0.726 0.620 0.514 0.395
Our Model 0.788 0.743 0.654 0.546 0.397

We show the precision numbers for some partic-
ular recalls as well as the AUC in Table 2, where
PCNN+ATT (1) refers to train sentences with two
entities and one relation label, PCNN+ATT (m)
refers to train sentences with four entities7 and two
relation labels. We observe that our model exhibits
the best performances. Moreover, in the process of
predicting the existence of relations for a sentence,
our approach is more convenient , as the PCNN-
ATT (1) has to predict all possible pairs of enti-
ties in the sentence while our approach can predict
multiple relations simultaneously.

Table 2: Precisions on the Wikidata dataset.
Recall 0.1 0.2 0.3 AUC

Rank+ExATT 0.584 0.535 0.487 0.392
PCNN+ATT (m) 0.365 0.317 0.213 0.204
PCNN+ATT (1) 0.665 0.517 0.413 0.396

Our Model 0.650 0.519 0.422 0.405

Ablation study: To better demonstrate the per-
formance of capsule net and attention mechanism,
we remove the primary capsule layer and dynam-
ic routing to make Bi-LSTM layer followed by a
fully connected layer instead. We also remove the
word-level attention separately. The experimental
results on Wikidata dataset are summarized in Ta-
ble 3. The results of ‚Äù-Word-ATT‚Äù row refers to
the results without word-level attention. Accord-
ing to the table, the drop of precision demonstrates
that the word-level attention is quite useful. Gen-
erally, all two proposed strategies contribute to the
effectiveness of our model.

7Two additional position embeddings.



990

Table 3: Ablation study of capsule net and word-level
attention on Wikidata dataset.

Recall 0.1 0.2 0.3 AUC
-Word-ATT 0.648 0.515 0.395 0.389

-Capsule 0.635 0.507 0.413 0.386
Our Model 0.650 0.519 0.422 0.405

4.2 Discussion

CNN vs Capsule: Capsule networks achieve
comparable results compared with baselines. In
fact, the capsule combines features by cluster-
ing. A nonlinear map is constructed in an itera-
tive manner, ensuring the output of each capsule
to be sent to an appropriate parent in the subse-
quent layer. Dynamic routing may be more effec-
tive than the strategies such as max-pooling in C-
NN, which essentially detects whether a feature is
present in any position of the text or not, but los-
es spatial information of the feature. Additional-
ly, capsule achieves comparable results to predict
multi-relations in the case of single entity pair, and
performs better in the case of multiple entity pairs
relation extraction.

Choice of d: In the experiments, the larger the
dimension of the capsule, the more the capabili-
ties of the feature information it contains. Howev-
er, larger dimension increases the computational
complexity. We test different levels of dimensions
of capsules. The model is trained on two Nvidi-
a GTX1080ti GPUs with 64G RAM and six In-
tel(R) Core(TM) i7-6850K CPU 3.60GHz. As the
table 4 depicts, the training time increases with the
growth of d. When d = 32, we observe that the
loss decreases very slowly and the model is diffi-
cult to converge. So we only train 2 epochs and
stop training. We set the parameter d = 8 em-
pirically to balance the precision and training time
cost.

Table 4: Precisions on the Wikidata dataset with differ-
ent choice of d.

Recall 0.1 0.2 0.3 AUC Time
d = 1 0.602 0.487 0.403 0.367 4h
d = 32 0.645 0.501 0.393 0.370 -
d = 16 0.655 0.518 0.413 0.413 20h
d = 8 0.650 0.519 0.422 0.405 8h

Effects of Iterative Routing:
We also study how the iteration number affec-

t the performance on the Wikidata dataset. Table

Table 5: Precisions on the Wikidata dataset with differ-
ent number of dynamic routing iterations.

Recall 0.1 0.2 0.3 AUC
Iteration=1 0.531 0.455 0.353 0.201
Iteration=2 0.592 0.498 0.385 0.375
Iteration=3 0.650 0.519 0.422 0.405
Iteration=4 0.601 0.505 0.422 0.385
Iteration=5 0.575 0.495 0.394 0.376

5 shows the comparison of 1 - 5 iterations. We
find that the performance reach the best when it-
eration is set to 3. The results indicate the dy-
namic routing is contributing to improve the per-
formance. Specifically, in the iteration algorith-
m, the bj|i = bj|i + uÃÇj|i ¬∑ vj . When the number
of iteration is very large, vj becomes either 0 or
1, which means each underlying capsule is only
linked to a single upper capsule. Therefore, the
iteration times should not be too large.

4.3 Conclusion

We propose a relation extraction approach based
on capsule networks with attention mechanism.
Although we use Bi-LSTM as sentence encod-
ing in this paper, the other encoding method, such
as convolved n-gram, could be alternatively used.
Experimental results of two benchmarks show that
the model improves the precision of the predicted
relations.

In the future, we tend to resolve the situation of
how to assign predicted relationship to multi en-
tity pairs when two entities have multi-relations
by utilizing prior knowledge such as entity type
and joint training with named entity recognition.
We will also try to optimize the model in terms
of speed and focus on other problems by leverag-
ing class ties between labels, specially on multi-
label learning problems. Besides, dynamic rout-
ing could also be useful to improve other natural
language processing tasks such as the sequence-
to-sequence task and so on.

Acknowledgments

We want to express gratitude to the anonymous
reviewers for their hard work and kind com-
ments, which will further improve our work
in the future. This work is funded by NS-
FC 61673338/61473260, and partly supported
by Alibaba-Zhejiang University Joint Institute of
Frontier Technologies.



991

References
Martƒ±ÃÅn Abadi, Paul Barham, Jianmin Chen, Zhifeng

Chen, Andy Davis, Jeffrey Dean, Matthieu Devin,
Sanjay Ghemawat, Geoffrey Irving, Michael Isard,
et al. 2016. Tensorflow: A system for large-scale
machine learning. In OSDI, volume 16, pages 265‚Äì
283.

Kurt Bollacker, Colin Evans, Praveen Paritosh, Tim S-
turge, and Jamie Taylor. 2008. Freebase: a collab-
oratively created graph database for structuring hu-
man knowledge. In Proceedings of the 2008 ACM
SIGMOD international conference on Management
of data, pages 1247‚Äì1250. AcM.

Xiaocheng Feng, Jiang Guo, Bing Qin, Ting Liu, and
Yongjie Liu. 2017. Effective deep memory net-
works for distant supervised relation extraction. In
Proceedings of the Twenty-Sixth International Joint
Conference on Artificial Intelligence, IJCAI, pages
19‚Äì25.

Jingjing Gong, Xipeng Qiu, Shaojing Wang, and X-
uanjing Huang. 2018. Information aggregation vi-
a dynamic routing for sequence encoding. arXiv
preprint arXiv:1806.01501.

Zhengqiu He, Wenliang Chen, Zhenghua Li, Meishan
Zhang, Wei Zhang, and Min Zhang. 2018. See:
Syntax-aware entity embedding for neural relation
extraction. arXiv preprint arXiv:1801.03603.

Geoffrey Hinton, Nicholas Frosst, and Sara Sabour.
2018. Matrix capsules with em routing.

Raphael Hoffmann, Congle Zhang, Xiao Ling, Luke
Zettlemoyer, and Daniel S Weld. 2011. Knowledge-
based weak supervision for information extraction
of overlapping relations. In Proceedings of the 49th
Annual Meeting of the Association for Computa-
tional Linguistics: Human Language Technologies-
Volume 1, pages 541‚Äì550. Association for Compu-
tational Linguistics.

Sharmistha Jat, Siddhesh Khandelwal, and Partha
Talukdar. 2018. Improving distantly supervised re-
lation extraction using word and entity based atten-
tion. arXiv preprint arXiv:1804.06987.

Diederik P Kingma and Jimmy Ba. 2014. Adam: A
method for stochastic optimization. arXiv preprint
arXiv:1412.6980.

Yankai Lin, Shiqi Shen, Zhiyuan Liu, Huanbo Luan,
and Maosong Sun. 2016. Neural relation extraction
with selective attention over instances. In Proceed-
ings of the 54th Annual Meeting of the Association
for Computational Linguistics (Volume 1: Long Pa-
pers), volume 1, pages 2124‚Äì2133.

Zhouhan Lin, Minwei Feng, Cicero Nogueira dos San-
tos, Mo Yu, Bing Xiang, Bowen Zhou, and Yoshua
Bengio. 2017. A structured self-attentive sentence
embedding. arXiv preprint arXiv:1703.03130.

Mike Mintz, Steven Bills, Rion Snow, and Dan Juraf-
sky. 2009. Distant supervision for relation extrac-
tion without labeled data. In Proceedings of the
Joint Conference of the 47th Annual Meeting of the
ACL and the 4th International Joint Conference on
Natural Language Processing of the AFNLP: Vol-
ume 2-Volume 2, pages 1003‚Äì1011. Association for
Computational Linguistics.

Nanyun Peng, Hoifung Poon, Chris Quirk, Kristina
Toutanova, and Wen-tau Yih. 2017. Cross-sentence
n-ary relation extraction with graph lstms. arXiv
preprint arXiv:1708.03743.

Jeffrey Pennington, Richard Socher, and Christopher
Manning. 2014. Glove: Global vectors for word
representation. In Proceedings of the 2014 confer-
ence on empirical methods in natural language pro-
cessing (EMNLP), pages 1532‚Äì1543.

Sebastian Riedel, Limin Yao, and Andrew McCallum.
2010. Modeling relations and their mentions with-
out labeled text. In Joint European Conference
on Machine Learning and Knowledge Discovery in
Databases, pages 148‚Äì163. Springer.

Sara Sabour, Nicholas Frosst, and Geoffrey E Hinton.
2017. Dynamic routing between capsules. In Ad-
vances in Neural Information Processing Systems,
pages 3859‚Äì3869.

Cicero Nogueira dos Santos, Bing Xiang, and Bowen
Zhou. 2015. Classifying relations by ranking with
convolutional neural networks. arXiv preprint arX-
iv:1504.06580.

Daniil Sorokin and Iryna Gurevych. 2017. Context-
aware representations for knowledge base relation
extraction. In Proceedings of the 2017 Conference
on Empirical Methods in Natural Language Pro-
cessing, pages 1784‚Äì1789.

Mihai Surdeanu, Julie Tibshirani, Ramesh Nallapati,
and Christopher D Manning. 2012. Multi-instance
multi-label learning for relation extraction. In Pro-
ceedings of the 2012 joint conference on empirical
methods in natural language processing and compu-
tational natural language learning, pages 455‚Äì465.
Association for Computational Linguistics.

Guanying Wang, Ruoxu Wang, and Huajun Chen.
2018a. Label-free distant supervision for relation
extraction via knowledge graph embedding. In Pro-
ceedings of the 2018 Conference on Empirical Meth-
ods in Natural Language Processing.

Yequan Wang, Aixin Sun, Jialong Han, Ying Liu, and
Xiaoyan Zhu. 2018b. Sentiment analysis by cap-
sules. In Proceedings of the 2018 World Wide Web
Conference on World Wide Web, pages 1165‚Äì1174.
International World Wide Web Conferences Steering
Committee.

Dongdong Yang, Senzhang Wang, and Zhoujun
Li. 2018. Ensemble neural relation extraction
with adaptive boosting. arXiv preprint arX-
iv:1801.09334.



992

Hai Ye, Wenhan Chao, Zhunchen Luo, and Zhoujun Li.
2017. Jointly extracting relations with class ties vi-
a effective deep ranking. In Proceedings of the 55th
Annual Meeting of the Association for Computation-
al Linguistics (Volume 1: Long Papers), volume 1,
pages 1810‚Äì1820.

Daojian Zeng, Kang Liu, Yubo Chen, and Jun Zhao.
2015. Distant supervision for relation extraction vi-
a piecewise convolutional neural networks. In Pro-
ceedings of the 2015 Conference on Empirical Meth-
ods in Natural Language Processing, pages 1753‚Äì
1762.

Daojian Zeng, Kang Liu, Siwei Lai, Guangyou Zhou,
and Jun Zhao. 2014. Relation classification via con-
volutional deep neural network. In Proceedings of
COLING 2014, the 25th International Conference
on Computational Linguistics: Technical Papers,
pages 2335‚Äì2344.

Wei Zhao, Jianbo Ye, Min Yang, Zeyang Lei, Suofei
Zhang, and Zhou Zhao. 2018. Investigating capsule
networks with dynamic routing for text classifica-
tion. arXiv preprint arXiv:1804.00538.

Peng Zhou, Wei Shi, Jun Tian, Zhenyu Qi, Bingchen
Li, Hongwei Hao, and Bo Xu. 2016. Attention-
based bidirectional long short-term memory net-
works for relation classification. In Proceedings
of the 54th Annual Meeting of the Association for
Computational Linguistics (Volume 2: Short Paper-
s), volume 2, pages 207‚Äì212.


