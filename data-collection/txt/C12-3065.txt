



















































Arabic Morphological Analyzer with Agglutinative Affix Morphemes and Fusional Concatenation Rules


Proceedings of COLING 2012: Demonstration Papers, pages 517–526,
COLING 2012, Mumbai, December 2012.

Arabic Morphological Analyzer with Agglutinative Affix
Morphemes and Fusional Concatenation Rules

Fadi Zaraket1 JadMakhlouta1
(1) American University of Beirut, Lebanon

{ f z11, jem04}@aub.edu.l b

Abstract
Current concatenative morphological analyzers consider prefix, suffix and stem morphemes based
on lexicons of morphemes, and morpheme concatenation rules that determine whether prefix-stem,
stem-suffix, and prefix-suffix concatenations are allowed. Existing affix lexicons contain extensive
redundancy, suffer from inconsistencies, and require significant manual work to augment with
clitics and partial affixes if needed. Unlike traditional work, our method considers Arabic affixes as
fusional and agglutinative, i.e. composed of one or more morphemes, introduces new compatibility
rules for affix-affix concatenations, and refines the lexicons of the SAMA and BAMA analyzers
to be smaller, less redundant, and more consistent. It also automatically and perfectly solves the
correspondence problem between the segments of a word and the corresponding tags, e.g. part of
speech and gloss tags.

Title and Abstract in another language, L2 (optional, and on same page)

�éJ
k. AÓY
	K @ �éJ


	̄Qå Y«@ñ�̄ ÈAÒª�JAK.
�éJ
K. QªË@ ñ

	JË ú


	̄ QåË@ ÉJ
Êj

�JË @
�kBð øXAK.

�Êª�JÒ» AîE.
�Êª�JK
 AÓð

�éÒÊ¾Ë@ É@ I. m�
�' �èQåAªÖÏ @ �éJ
K. QªË@

�éJ
ËA
��B@ �éJ


	̄QåË@ �HCÊjÖÏ @
AÒîD	ªJ. K. ð


@ É


BAK.

�kCË@ð øXAJ. Ë @ ÈA
��@ �ém� XYm��' �HA 	KñºÒÊË ÈA��@ Y«@ñ�̄ð Ñk. AªÓ XAÒ�J«AK.

ø
 ðYK
 Yêk. úÍ@ h. A
�Jm��'ð �A 	J�JË @ Ð @Yª 	K @ 	áÓ ú


	GAª�Kð P@Qº�JË @ 	áÓ Q�
�JºË@ ø
 ñ
�Jm��' �éJ
ËAmÌ'@ Ñk. AªÖÏ @ . 	ªJ. Ë @

A 	Jj. î 	DÓ Q�. �JªK
 ,
�éK
YJ
Ê

�®�JË @ �HAm�'. B@
	¬C	m�'. . AîD
Ë @

�éJ
K 	Qk. �HA
�®Êª�JÓ �é 	̄ A 	@ úÍ@ �ék. AmÌ'@ ÈAg ú


	̄ Ñ 	m� 	
É�� Y«@ñ�̄ A 	Jj. î 	DÓ ÐY

�®K
ð . Yg@ð ú

	̄ Qå 	àñºÓ 	áÓ Q��»


@ 	áÓ Aë ðA 	JK. 	áºÖß
ð

�éJ
k. AÓY 	K @ �HA
�®Êª�JÖÏ @

Ñk. AªÓ A 	Jj. î 	DÓ H.
	Y ���
 .

�kCË@ �Êª�JÒÊË QÓ

B@ ½Ë 	Y»ð , øXAK. 	áK
ñº�JË 	á�
J
K 	Qk. 	á�
KXAK. 	á�


�®Êª�JÓBAMA
ðSAMA Ð 	PC�JË @ �éÊ¾ �Ó ÉÓA¿ É¾ ��. ð AJ
Ë

�
@ A 	Jj. î 	DÓ Ém�'
 A 	�



@ . A �®A 	J�K Q��»


@ð @P@Qº�K É�̄


@ð Q 	ª


@ AêÊªj. J
Ë. è A 	JªÓ ð


@ H. @Q«B@ 	áÓ 	àñºÖÏ @ ©

�̄ñÓ É�JÒ» AîE.
�é�®jÊÖÏ @ �HA�®J
Êª�JË @ð

�éJ

	̄QåË@ �éÒÊ¾Ë@ Z @ 	Qk.


@ 	á�
K.

Keywords: morphology; lexicons; computational linguistics; Arabization; affix.
Keywords in L2: ú
ÍA

��B@ �jÊÖÏ @ ;I. K
Qª�JË @ ; ú
G. Am
Ì'@ �éJ


	�Ë

B@ ÕÎ« ; Ñk. AªÖÏ @ ; ú


	̄ QåË@ ÉJ
Êj�JË @.

517



Table 1: Partial prefix lexicon BAMA v1.2 �éJ
ÓAÓ

B@ �HA�®jÊÒÊË ù


K 	Qk. Ñj. ªÓ

øXAK.
�Êª�JÓ É

��
¾ �Ó �éJ 	̄ ø
 ñ

	JªÓ �J
Êª�K ÐC¾Ë@ 	áÓ ©
�̄ñÓ

Prefix Vocalized Category Gloss POS
	̄ 	̄ Pref-Wa and/so fa/CONJ+
K
 K
 IVPref-hw-ya he/it ya/IV3MS+
J

	̄ J


	̄ IVPref-hw-ya and/so + he/it fa/CONJ+ya/IV3MS+
J
 J
 IVPref-hw-ya will + he/it sa/FUT+ya/IV3MS+
J


	̄ J

	̄ IVPref-hw-ya and/so + will + he/it fa/CONJ+sa/FUT+ya/IV3MS+

K
 K
 IVPref-hmA-ya they (both) ya/IV3MD+
J

	̄ J


	̄ IVPref-hmA-ya and/so + they (both) fa/CONJ+ya/IV3MD+
J
 J
 IVPref-hmA-ya will + they (both) sa/FUT+ya/IV3MD+
J


	̄ J

	̄ IVPref-hmA-ya and/so + will + they (both) fa/CONJ+sa/FUT+ya/IV3MD+

ð ð Pref-Wa and wa/CONJ+
K
ð K
ð IVPref-hw-ya and + he/it wa/CONJ+ya/IV3MS+
J
ð J
ð IVPref-hw-ya and + will + he/it wa/CONJ+sa/FUT+ya/IV3MS+
K
ð K
ð IVPref-hmA-ya and + they (both) wa/CONJ+ya/IV3MD+
J
ð J
ð IVPref-hmA-ya and + will + they (both) wa/CONJ+sa/FUT+ya/IV3MD+

1 Short Summary in Arabic
�éJ
K. QªË@

�é 	ªÊËAK. 
	jÊÓ

(Benajiba et al., �éJ
K. QªË@ ñ
	� �ém.Ì'AªÖÏ ú


	̄ QåË@ ÉJ
Êj�JË @ úÍ@
�éJ
ªJ
J.¢Ë@ �HA 	ªÊË @

�ém.Ì'AªÓ �HAJ
 	J
�®�K h. A�Jm�

�'

øQ 	k

@ PXAÓ I. 	KAg. úÍ@

�éJ
K. QªË@
�é 	ªÊË ú


	̄ QåË@ ú 	æ 	ªË @ I. �.�. ½Ë
	Xð . 2007; Habash and Sadat, 2006)

	Y 	g

A�K �éJ
K. QªË@

�é 	ªÊË AJ
Ë Ag
�èYg. @ñ�JÖÏ @

�éJ

	̄QåË@ �HCÊjÖÏ @ .ñ	JË @ Q��»


@ ú


	̄ �HA¿QmÌ'@ H. AJ

	« Aî 	DÓ , 	ñÒ 	ªÊË

�éK
ñm�
	'ð �éK
ñ 	JªÓ �HA

�®J
Êª�K Aî 	DÓ É¾Ë ÈñÊg
�èY« É¾ � úÎ« �éJ


	̄QåË@ Aî�EA 	KñºÓ I. m�
�'ð �éËð 	QªÓ �éÒÊ¿

Aî�EPY�̄ ÐY« AêËð

@ , �èY« �HC¾ �Ó 	áÓ �HCÊjÖÏ @ è 	Yë ú


	GAª�K . É

B@ �éÒÊ¾ÊË ÉÒ�Jm× ÉÓA¿ ÉJ
º �

��K.
�é¢J. �KQÓ

ÐY« Aî �DËA�Kð , Aî 	DJ
K.
	̈ @Q 	̄ 	àðYK.

�éÊ�JÖÏ @ �HAÒÊ¾Ë@ �éÊ¾ �Ó Ég úÎ« Aî�EPY�̄ ÐY« , AîD
	K A�Kð ,
�éÒÊ¾Ë@ È 	Q« úÎ«

�é�̄YË@ ú

	̄ ÉÊ 	g , AêªK. @Pð ,

�éÒÊ¾Ë@ É

@ ú


	̄ 	¬ðQmÌ'@ ©�̄ @ñÓð ÉmÌ'@ Z @ 	Qk.

@ 	á�
K.

�é�®J

�̄YË@ �é�®K. A¢ÖÏ @ úÎ« Aî�EPY

�̄

. �HAÒÊ¾Ë@ Èñ

AK.

�é 	®Ê�J 	jÖÏ @ �HA�®Êª�JÖÏ @ ¡�. P ú

	̄

�HA�®Êª�JÒÊË Ñk. AªÓ úÎ« YÒ�Jª�K (Buckwalter, 2002; Kulick et al., 2010a)
�èQåAªÖÏ @ �éJ


	̄QåË@ �HCÊjÖÏ @
øXAK.

�Êª�JÓ ÈA��@ �ém� Õºm��' ÈA��@ Y«@ñ�̄ úÎ«ð �é�®kCË@ �HA�®Êª�JÒÊËð , �HAÒÊ¾Ë@ Èñ

Bð , �éKXAJ. Ë @

É¿ 1 ÈðYm.Ì'@ ú

	̄ ðYJ. K
 AÒ» .

�kB �Êª�JÖß. øXAK.
�Êª�JÓ ÈA��@ð , �kB �Êª�JÖß. É


@ ÈA��@ð ,É


AK.

Õºm��' ú

�æË @ é�JJ 	̄ úÎ«ð , �éÊÓA¿ �HA¿Qm�'. éÊJ
º �

�� úÎ«ð , ú

	̄ QåË@ 	àñºÖÏ @ úÎ« ø
 ñ

�Jm��' Ñj. ªÖÏ @ ú

	̄ �é 	K A 	g

ø
 ñ
�Jm��' . è A 	JªÓ XYm�'
 �J
Êª�K úÎ«ð , ÐC¾Ë@ ú


	̄ éª�̄ñÓ XYm�'
 �J
Êª�K úÎ«ð ,øQ 	k

@ �HA 	KñºÖß. éËA��@

	àC¾ ��
 " �K
\ ð " �
	̄ \ 	àA 	KñºÖÏ @ , C�JÓ . �éJ
K 	Qk. �HA

�®Êª�JÓ 	áÓ �é 	Kñº�JÓ �éJ
KAî 	E �HA
�®Êª�JÓ úÎ« �HA 	KA 	mÌ'@

518



�é 	̄ A 	@ ."I. ªÊK
\ ð "I. ªÊ
	̄ \ ú


�æÒÊ¿ 	áK
ñº�JË "I. ªË\ É

BAK.

�èQå�AJ.Ó ÈA
��CË �éÊK. A

�̄ �éÊ�®�JÓ �HA�®Êª�JÓ
	áºÖß
 " � 	̄ \ 	àñºÖÏ @ èPðYK. ."I. ªÊJ
\ 	áK
ñº�JË "I. ªÊK
\ �K. É�JK
 	à@ " �\ 	àñºÒÊË 	áºÖß
 , ½Ë

	X úÍ@
�HA�®Êª�JÖÏ @ É¿ úÎ« SAMA ð BAMA Ñk. AªÓ ø
 ñ

�Jm��' ."I. ªÊJ

	̄ \ 	áK
ñº�JË "I. ªÊJ
\ �K. É�JK
 	à


@

. �éJ
ËA�JË @ É¿ A �ÖÏ @ úÍ@ ø
 X
ñK
 AÜØ Aî 	DK
ñº�K 	áºÒÖÏ @

. Aî �D 	K AJ
ð Aê
�®A 	J�K úÎ« 	 A 	®mÌ'@ �éK. ñª úÍ@ �HA 	KA

	mÌ'@ P@Qº�K ø
 X
ñK
 , Bð


@

�è 	QÒê» éJ
Ë @ YK
Yg. 	àñºÓ
�é 	̄ A 	@ úÍ@ Q¢ 		� AÓY 	J« �éA 	g Ñj. ªÖÏ @ Ñ

	j 	�� úÍ@ P@Qº�JË @ ø
 X
ñK
 , AJ
 	K A�K

. ÐAê 	®�JB@
BA��@ �HA�®J
Êª�JË @ è

	Yë I. J
»Q�K .I. »QÖÏ @ 	àñºÖÏAK.
�é¢J. �KQÓ

�éK
ñ 	JªÓ �HA
�®J
Êª�K úÎ«

�é 	KA 	g É¿ ø
 ñ
�Jm��' , A�JË A�K

@Yg. ÐAë QÓ

@ ñëð , �HA�®J
Êª�JË @ð Ð


B@ �éÒÊ¾Ë@ ú


	̄ 	¬ðQmÌ'@ ©�̄ @ñÓ 	á�
K.
�é�®J


�̄YË@ �é�®K. A¢ÖÏ @ 	à@Y
�® 	̄ úÍ@ ø
 X

ñK

. ú
Í

�
B@ ÕÎª�JÊË

. �éJ
ËA�JË @ �HAÒëAÖÏ @ ÐY
�® 	K , �IjJ. Ë @ @

	Yë ú

	̄

Aêm.×YË Y«@ñ
�̄ XYm�'
 AÒ» , Aî 	DJ
K. É�
ð

�éJ
AB@
�éJ

	̄QåË@ �HA 	KñºÖÏ @ YÒ�JªK
 A�JK
Yg AJ


	̄Qå CÊm× ú

	æJ. 	K , Bð


@

. �éJ
K. QªË@
	¬QåË@ I. �J» 	áÓ

�èA �®�JÓ
. A 	J�KAjJ
j

�� Q�K

@ PY	Kð SAMA ð BAMA ú


	̄ �HA 	KñºÖÏ @ 	á�
K.
�A��B@ É¿ A �Ó Ém� 	' , AJ
 	K A�K

�éÒÊ¾Ë@ ©�̄ñÓ XYm��' ú

�æË @ �HA�®J
Êª�JË @ð ,

�éK
ñ 	JªÖÏ @ �HA
�®J
Êª�JË @ð Ð


B@ �éÒÊ¾Ë@ 	á�
K.

�é�®K. A¢ÖÏ @
�éÊ¾ �Ó Ém� 	' , A�JË A�Kð

.	JË @ ú

	̄

3 ÈAÒª�JAK. 1 ÈðYm.Ì'@ ú

	̄ �HA 	KA 	mÌ'@  	® 	K 	á« Q�.ªK
 	à


@ é 	JºÖß
 ú


	̄ QåË@ ÉJ
Êj�JË @ ú

	̄ èYÒ�Jª 	K ø


	YË@ i. î 	DÖÏ @
5 �é 	̄ A 	@ úÍ@ h. A�Jm�

	' , ÈðYm.Ì'@ ú

	̄ . ù


K 	Qk. ÈA
��@ Y«@ñ�̄ 3 ð ù


K 	Qk. Yg@ð 	àñºÓð
�éJ
A


@ �HA 	KñºÓ

h. A�Jm�'
 B AÒ 	J�
K. ,
�é 	K A 	g É¾K.

�éA 	g ÈA��@ Y«@ñ�̄ ©Ó 	àñºÒ» 	­¢ªË@ 	¬Qk �é 	̄ A 	@ A 	KXP

@ @ 	X @ �HA 	KA 	g

. A 	Jj. î 	DÓ ÈAÒª�JAK.
�èYg@ð �é 	KA 	g úÍ@ B@ QÓ


B@

. l .�
'A�J 	JÊË A 	JÒJ
J


�®�K 	Qª	Kð �éJ
K. QªË@
�é 	ªÊË �IK
Yg ú
Í

�
@ 	¬Qå l .×A 	KQK. ú


	̄ A 	Jj. î 	DÓ
�J
J.¢

�� hQå� 	� ú
ÎK
 AÓ ú

	̄

Z A¢ 	k@ iJ
j
�� ¨A¢�J@ð , �éJ
K. QªË@

�é 	ªÊË ú

	̄ QåË@ ÉJ
Êj�JÊË Aêk. A�Jm�

	' ú

�æË @ Ñk. AªÖÏ @ J
Ê

�®�K l .×A 	KQ�. Ë @ ¨A¢�J@
	á�
K.

�éJ

	̄QmÌ'@ �é�®K. A¢ÖÏ @

�éÊ¾ �Ó Ém�'
 	à

@ ¨A¢�J@ AÒ» , �éJ
ËAmÌ'@ ú
Í

�
B@ ÉJ
Êj�JË @ �H@ðX


@ ú


	̄ �èXñk. ñÖÏ @
�A 	J�JË @

. AîE @ 	Qk.

@ð �HA�®J
Êª�JË @ ÉK. A

�®Ó ú

	̄ �éJ


	̄QåË@ Aî�EA 	KñºÓð Ð

B@ �éÒÊ¾Ë@

. Qº �
. ÉÒªË@ @ 	Yë éÔ«YË �HñjJ.ÊË ú


	GA 	JJ. ÊË @ ú

	æ£ñË@ Êj. ÖÏ @ Qº �

	�

519



2 Introduction
Natural language processing (NLP) applications require the use of morphological analyzers to
preprocess Arabic text (Benajiba et al., 2007; Habash and Sadat, 2006). Given a white space
and punctuation delimited Arabic word, Arabic morphological analyzers return the internal struc-
ture of the word composed of several morphemes including affixes (prefixes and suffixes) and
stems (Al-Sughaiyer and Al-Kharashi, 2004). They also return part of speech (POS) and other
tags associated with the word and its constituent morphemes. For example, for the word 	àñJ.ªÊJ


	̄
fsyl,bwn (and/so they will play), the analyzer may return �J


	̄ fsy as a prefix morpheme with
the POS tag fa/CONJ+sa/FUT+ya/IV3MD and with gloss tag and/so + will + they
(people), I. ªË l,b as a stem with POS tag loEab/VERB IMPERFECT and with gloss tag
play, and 	àñ� wn as a suffix with POS tag uwna/IVSUFF_SUBJ:MP_MOOD:I and with
gloss tag [MASC.PL.]. The alignment and correspondence between the original word and the
several parts and tags of the morphological solution are essential to the success of NLP tasks such
as machine translation and information extraction (Lee et al., 2011; Semmar et al., 2008).

Current concatenative morphological analyzers such as BAMA (Buckwalter, 2002) and
SAMA (Kulick et al., 2010a) are based on lexicons of prefixes Lp, stems Ls, and suffixes Lx .
As shown in Table 1, each entry in a lexicon includes the morpheme, its vocalized form with
diacritics, a concatenation compatibility category tag, a part of speech tag (POS), and the gloss
tag. Separate compatibility rules specify the compatibility of prefix-stem Rps, stem-suffix Rsx , and
prefix-suffix Rpx concatenations. The affixes in Lp and Lx contain final forms of generative affixes.
For example, the affixes � 	̄ f (and/so), and �K
 y (he/it) in the above example are valid standalone
prefixes, and can be concatenated to the stem I. ªË l,b (play) to form I. ªÊ

	̄ fl,b and I. ªÊK
 yl,b ,
respectively. In addition, the morpheme � s (will) can connect to I. ªÊK
 yl,b to form I. ªÊJ

syl,b . In turn, the morpheme � 	̄ f (and/so) can form I. ªÊJ


	̄ fyl,b and I. ªÊJ

	̄ fsyl,b . The BAMA

and SAMA Lp lexicons contain all the prefixes that can be generated from the three morphemes � 	̄ ,
�K
, and �, as shown in Table 1. Several problems arise.

• The Lp and Lx lexicons contain redundant entries and that results in complex maintenance
and consistency issues (Maamouri et al., 2008; Kulick et al., 2010b).

• Augmenting Lp and Lx with additional morphemes, such as
�
@ -aa (the question glottal

hamza), may result in a quadratic explosion in the size of the lexicons (Hunspell, 2012).

• The concatenated forms in Lp and Lx contain concatenated POS and other tags. The segmen-
tation correspondence between the prefix concatenated from several morphemes and the tags
associated with it is lost. In several cases, this leads to missing correspondence between the
tokens of the morphological solution and the segmentation of the original word.

In this paper we make the following contributions. More details about this paper and the supporting
tools are available online 1.

• We build a novel Arabic morphological analyzer with agglutinative affixes and fusional
affix concatenation rules (Rpp and Rx x ) using textbook based Arabic morphological rules as
well as the concatenation rules of existing analyzers. Agglutinative affix morphemes can be
concatenated to form an affix. Fusional affix concatenation rules state whether two affixes can

1http://webfea.fea.aub.edu.lb/fadi/dkwk/doku.php?id=sarf

520



Table 2: Example rules from Rpp

Category 1 Category 2 Resulting Category
NPref-Li NPref-Al NPref-LiAl
substitute: r//Ë @ ||Ë\\
Pref-Wa {NOT “Pref-0" AND NOT “NPref-La"

AND NOT “PVPref-La"}
{$2}

IVPref-li- {“IVPref-*-y*"} {“IVPref-(@1)-liy(@2)"}
substitute: d//he/||him/\\ d//they||them\\ . . . d//(+2)|| to\\

be concatenated and contain a regular expression that forms the resulting orthographic and
semantic tags from the tags of the original morphemes (Spencer, 1991; Vajda).

• We solve 197 and 208 inconsistencies in the existing affix lexicons of BAMA and SAMA,
respectively. We evaluate our approach using the ATBv3.2 Part 3 data set (Maamouri et al.,
2010) and report on the effect of our corrections on the annotations.

• We solve the correspondence between the morphological solution and the morphological
segmentation of the original text problem where we report perfect results, while a SAMA
post-processing technique (Maamouri et al., 2008)reports 3.7% and MADA+TOKAN (Habash
et al., 2009) reports 9.6% disagreement using the ATBv3.2 Part 3 data set (Maamouri et al.,
2010).

3 Our method
Our method considers three types of affixes:

• Atomic affix morphemes such as �K
 y (he/it) can be affixes on their own and can directly
connect to stems using the Rps and Rsx rules.

• Partial affix morphemes such as � s (will) can not be affixes on their own and need to
connect to other affixes before they connect to a stem.

• Compound affixes are concatenations of atomic and partial affix morphemes as well as other
smaller compound affixes. They can connect to stems according to the Rps and Rsx rules.

We form compound affixes from atomic and partial affix morphemes using newly introduced
prefix-prefix Rpp and suffix-suffix Rx x concatenation rules.

Our method, unlike conventional analyzers, considers Lp and Lx to be lexicons of atomic and partial
affix morphemes only associated with several tags such as the vocalized form, the part of speech
(POS), and the gloss tags. Agglutinative affixes are defined as prefix-prefix Rpp and suffix-suffix Rx x
concatenation or agglutination rules. An agglutination rule r ∈ Rpp ∪ Rx x takes the compatibility
category tags of affixes a1 and a2 and checks whether they can be concatenated. If so, the rule takes
the tags of a1 and a2 and generates the affix a = r(a1, a2) with its associated tags.

The tags of r(a1, a2) are generated from the corresponding tags of a1 and a2 via applying substitution
rules.Our rules are fusional in the sense that they modify the orthography and the semantic tags of
the resulting affixes by more than simple concatenation.

We illustrate this with the example rules in Table 2. Row 1 presents a rule that takes prefixes with
category NPref-Li such as Ë li- (for) and prefixes with category NPref-Al such as Ë @ (the).

521



The substitution rule replaces the Ë @ with Ë resulting in ÊË li-. The compound prefix ÊË corresponds to
the fusion of two atomic prefixes and the fusion is one character shorter than the concatenation.

Row 2 states that prefixes of category Pref-Wa can be concatenated with prefixes with categories
that are neither of Pref-0, NPref-La, and PVPref-La categories as denoted by the Boolean
expression. The resulting category is denoted with {$2} which means the category of the second
prefix. For example, ð w (and) which has a category Pref-Wa, can be combined with È@ āl (the)
with the category NPref-Al, and the resulting compound prefix È@ð wāl has the category of the
second NPref-Al. This category determines concatenation with stems and suffixes.

The third rule uses a wild card character ‘*’ to capture substrings of zero or more characters in the
second category. The in the resulting category, it refers to the i th substring captured by the wild
cards using the ‘@’ operator followed by a number i. Substitution rules for gloss and POS tags start
with the letters d and p, respectively. The +2 pattern in the substitution rule means that the partial
gloss to should be appended after the gloss of the second affix.

Our method is in line with native Arabic morphology and syntax textbooks (Mosaad, 2009; AlRajehi,
2000b,a) which introduce only atomic and partial affixes and discuss rules to concatenate the affixes,
and the syntax, semantic, and phonological forms of the resulting affixes. For example, Row 3 in
Table 2 translates the textbook rule: IVPref-li- prefixes connect to imperfect verb prefixes and
transform the subject pronoun (in the gloss) to an object pronoun. We built our rules in four steps.

1. We encoded textbook morphological rules into patterns.

2. We extracted atomic and partial affixes from the BAMA and SAMA lexicons.

3. We grouped the rest of the BAMA and SAMA affixes into rules we collected from textbooks.

4. We refined the rules wherever necessary, and we grouped rules that shared the same patterns.

We validated our work by generating all possible affixes and compared them against the BAMA and
SAMA affix lexicons. This helped us learn inconsistencies in the BAMA and SAMA lexicons.

Morpheme level segmentation. (Habash et al., 2009) lists 13 different valid segmentation schemes.
In 10 of those schemes, a word may be segmented in the middle of a compound affix. According to
the latest ATB standards, the word AîD.ªÊJ
ð wsyl,bhā (and they will play it) should be segmented
into �ð + � + �J.ªÊK
 + Aë which separates the compound prefix �ð into two morphemes. Our
method is based on atomic and partial affix morphemes and enables all valid segmentations.

(Maamouri et al., 2008) reports that 3.7% of more than 300 thousand ATB entries exhibit dis-
crepancy between the unvocalized input string and the corresponding unvocalized form of the
segmented morphological solution. The analysis of the example ZA 	�®ÊË llqd. ā- , li/PREP +
Al/DET + qaDA’/NOUN, (for the justice) is segmented into two tokens: li/PREP and Al/DET
+ qaDA’/NOUN. Consequently, the best approximation of the unvocalized entry of each token is È
and ZA 	�®Ë@, respectively, with an extra letter @ ā. This is not a faithful representation of the original
text data and the segmentation does not correspond with that of the input text. Up until the release
of ATB 3 v3.2, this correspondence problem between the unvocalized entries of segmented tokens
and the input string resulted in “numerous errors” (Kulick et al., 2010b). Later work (Kulick et al.,
2010b) provided an improved solution that is corpus specific as stated in further documentation
notes (Maamouri et al., 2010) which also state that “it is possible that future releases either will not

522



include extensive checking on the creation of these INPUT STRING tree tokens, or will leave out
completely such tokens.”

Our method provides a general solution for the segmentation correspondence problem since the
valid compound affixes preserve the input text segmentation. In particular, a partial affix È Al/DET
connects to the atomic affix È li/PREP and resolves the problem.
Redundancy and Inconsistencies. Consider the partial affix lexicon in Table 1. Our method
replaces the first five rows with three atomic affix morphemes and one partial affix morpheme in Lp
and three rules to generate compound morphemes in Rpp. In the original representation, the addition
of the prefix �K
 ya- (them/both) required the addition of four entries, three of them only differ in their
dependency on the added �K
 ya-. The addition of ð w required the addition of five entries. In our
method, the equivalent addition of �K
 ya- (them/both) requires only two rules in Rpp and the addition
of ð w requires only one additional entry in Lp. The difference in lexicon size is much larger when
we consider the full lexicon.

We discovered a total of 197 and 208 inconsistencies in the affix lexicons of BAMA version 1.2
and SAMA version 3.2, respectively. We found a small number of these inconsistencies manually
and we computed the full list via comparing Lp and Lx with their counterparts computed using our
agglutinative affixes. Most of the inconsistencies are direct results of partially redundant entries with
erroneous tags. We note that SAMA corrected several BAMA inconsistencies, but also introduced
several new ones when modifying existing entries to meet new standards. SAMA also introduced
fresh inconsistencies when introducing new entries. The full list of inconsistencies with description
is available online 1.

4 Related work
Other morphological analyzers such as ElixirFM (Smrž, 2007), MAGEAD (Habash et al., 2005),
and MADA+TOKAN (Habash et al., 2009) are based on BAMA and SAMA and use functional
and statistical techniques to address the segmentation problem. (Lee et al., 2011) uses syntactic
information to resolve the same problem. A significant amount of the literature on Arabic NLP uses
the Arabic Tree Bank (ATB) (Maamouri and Bies, 2004) with tags from BAMA and SAMA for
learning and evaluation (Shaalan et al., 2010; Benajiba et al., 2007; Al-Jumaily et al., 2011).

Several researchers stress the importance of correspondence between the input string and the tokens
of the morphological solutions. Recent work uses POS tags and a syntactic morphological agreement
hypothesis to refine syntactic boundaries within words (Lee et al., 2011). The work in (Grefenstette
et al., 2005; Semmar et al., 2008) uses an extensive lexicon with 3,164,000 stems, stem rewrite
rules (Darwish, 2002), syntax analysis, proclitics, and enclitics to address the same problem. We
differ from partial solutions in (Maamouri et al., 2008; Kulick et al., 2010b) in that our segmentation
is an output of the morphological analysis and not a reverse engineering of the multi-tag affixes.

TOKAN in the MADA+TOKAN (Habash et al., 2009) toolkit works as a post morphological
disambiguation tokenizer. TOKAN tries to match the output of MADA, an SVM morphological
disambiguation tool based on BAMA and the ATB, with a segmentation scheme selected by the
user. We differ in that the segmentation is part of the morphological analysis and the segmentation
can help in the disambiguation task performed later by the NLP task. We perform morpheme based
segmentation, which subsumes all possible higher level segmentation schemes.

The morphological analyzer (Attia, 2006) divides morphemes into proclictics, prefixes, stems,
suffixes and enclitics and supports inflections using alteration rules. We differ in that we support
vocalization and provide glosses for individual morphemes.

523



Table 3: Lexicon size comparison.

|Lp| |Rpp| |Lx | |Rx x | ∆hmzL ∆hmzR
BAMA 299 – 618 – 295 –

Agglutinative 70 89 181 123 1 32
With fusional 43 89 146 128 1 32
With grouping 41 7 146 32 1 1

SAMA 1325 – 945 – 1,296 –
Agglutinative 107 129 221 188 1 38
With fusional 56 129 188 194 1 38
With grouping 53 18 188 64 1 1

5 Results
The |Lp|, |Lx |, |Rpp|, and |Rx x | entries in Table 3 report the number of rules and the sizes of the affix
lexicons needed to represent the affixes of BAMA and SAMA. The entries also report the effect
of agglutinative affixes, fusional rules, and grouping of rules with similar patterns using wildcards
on the size. Using our method, we only require 226 and 323 entries to represent the 917 and the
2,270 entries of BAMA and SAMA affixes with inconsistencies corrected, respectively. We observe
that we only need 12 more entries in Lp, 42 in Lx , 18 rules in Rpp, and 64 in Rx x for a total of 136
entries to accommodate for the transition from BAMA to SAMA. This is one order of magnitude
less than 1,353 additional entries to SAMA. We also note that we detect most of the inconsistencies
automatically and only needed to validate our corrections in textbooks and corpora.

Segmentation. We evaluate our segmentation under the guidelines of the ATBv3.2 Part 3, compared
to a SAMA post processing technique (Maamouri et al., 2008), and to MADA+TOKAN (Habash
et al., 2009). Our automatically generated segmentation agrees with 99.991% of the entries.
We investigated the 25 entries for which our solution disagreed with the LDC annotation of the ATB,
and we found out that both solutions were valid. SAMA+ (Maamouri et al., 2008) reports at least a
3.7% discrepancy after accounting for normalizations of several segmentation options. TOKAN
disagrees with 9.6% of the words. It disregards input diacritics and performs segmentation based on
the POS entries of the morphological solutions in a similar approach to (Maamouri et al., 2008).
Since TOKAN is not concerned with the correspondence problem, it serves as a baseline.

Augmentation. The question clitic, denoted by the glottal sign (hamza

@ -a ), is missing in BAMA

and SAMA (Attia, 2006). ∆hmzL and ∆
hmz
R columns show that our method only requires one more

atomic affix and one more fusional rule to accommodate for the addition of the question clitic
whereas BAMA and SAMA need 295 and 1,296 additional entries, respectively, with more chances
of inducing inconsistencies.

Lexicon inconsistencies. To evaluate how much lexical inconsistencies are significant we evaluated
the presence of the detected inconsistencies in the ATBv3.2 Part 3 and found that 0.76% of the
entries that adopted the SAMA solution were affected by the gloss inconsistencies. The rest of
the entries have manually entered solutions. In total 8.774% of the words and 3.264% of the
morphological solutions are affected by inconsistencies in gloss and POS tags. Finally, our analyzer
automatically solves the 7 ATB occurrences of the question clitic.

Acknowledgement. We thank the Lebanese National Council for Scientific Research (LNCSR) for
funding this research.

524



References
Al-Jumaily, H., MartÃ nez, P., MartÃ nez-FernÃąndez, J., and Van der Goot, E. (2011). A real
time named entity recognition system for Arabic text mining. Language Resources and Evaluation,
pages 1–21.

Al-Sughaiyer, I. A. and Al-Kharashi, I. A. (2004). Arabic morphological analysis techniques: a
comprehensive survey. American Society for Information Science and Technology, 55(3):189–213.

AlRajehi, A. (2000a). ø
 ñj
	JË @ �J
J.¢� �JË @ āltt.ibyq alnh. wy (The syntactical practice). Renaissance

(nahda), first edition.

AlRajehi, A. (2000b). ú

	̄ Qå�Ë@ �J
J.¢� �JË @ āltt.ibyq als. arfy (The morphological practice). Renaissance

(An-nahda), first edition.

Aoe, J.-i. (1989). An efficient digital search algorithm by using a double-array structure. IEEE
Transactions on Software Engineering, 15(9):1066–1077.

Attia, M. A. (2006). An ambiguity-controlled morphological analyzer for modern standard arabic
modelling finite state networks. In The Challenge of Arabic for NLP/MT Conference. The British
Computer Society.

Beesley, K. R. (2001). Finite-state morphological analysis and generation of Arabic at xerox
research: Status and plans. In Workshop Proceedings on Arabic Language Processing: Status and
Prospects, pages 1–8, Toulouse, France.

Beesley, K. R. and Karttunen, L. (2003). Finite-State Morphology: Xerox Tools and Techniques.
CSLI, Stanford.

Benajiba, Y., Rosso, P., and Benedíruiz, J. (2007). ANERsys: An Arabic named entity recognition
system based on maximum entropy. pages 143–153.

Buckwalter, T. (2002). Buckwalter Arabic morphological analyzer version 1.0. Technical report,
LDC catalog number LDC2002L49.

Darwish, K. (2002). Building a shallow Arabic morphological analyzer in one day. In Proceedings
of the ACL-02 workshop on Computational approaches to semitic languages.

Grefenstette, G., Semmar, N., and Elkateb-Gara, F. (2005). Modifying a natural language pro-
cessing system for european languages to treat arabic in information processing and information
retrieval applications. In ACL Workshop on Computational Approaches to Semitic Languages,
pages 31–37.

Habash, N., Rambow, O., and Kiraz, G. (2005). Morphological analysis and generation for Arabic
dialects. In Semitic ’05: Proceedings of the ACL Workshop on Computational Approaches to
Semitic Languages, pages 17–24, Morristown, NJ, USA.

Habash, N., Rambow, O., and Roth, R. (2009). Mada+tokan: A toolkit for Arabic tokenization,
diacritization, morphological disambiguation, pos tagging, stemming and lemmatization. In
Choukri, K. and Maegaard, B., editors, Proceedings of the Second International Conference on
Arabic Language Resources and Tools, Cairo, Egypt. The MEDAR Consortium.

525



Habash, N. and Sadat, F. (2006). Arabic preprocessing schemes for statistical machine trans-
lation. In Proceedings of the North American Chapter of the Association for Computational
Linguistics(NAACL), pages 49–52.

Hajič, J. and Zemànek, P. (2004). Prague arabic dependency treebank: Development in data and
tools. In NEMLAR International Conference on Arabic Language Resources and Tools, pages
110–117.

Hunspell (2012). Hunspell manual page.

Kulick, S., Bies, A., and Maamouri, M. (2010a). Consistent and flexible integration of morphologi-
cal annotation in the Arabic treebank. In Proceedings of the Seventh conference on International
Language Resources and Evaluation (LREC’10), Valletta, Malta.

Kulick, S., Bies, A., and Maamouri, M. (2010b). Consistent and flexible integration of morpholog-
ical annotation in the arabic treebank. In International Conference on Language Resources and
Evaluation. European Language Resources Association.

Lee, Y. K., Haghighi, A., and Barzila, R. (2011). Modeling Syntactic Context Improves Morpho-
logical Segmentation. In Conference on Computational Natural Language Learning (CoNLL).

Lee, Y.-S., Papineni, K., Roukos, S., Emam, O., and Hassan, H. (2003). Language model based
arabic word segmentation. In Association for Computational Linguistics, pages 399–406.

Maamouri, M. and Bies, A. (2004). Developing an Arabic treebank: methods, guidelines, proce-
dures, and tools. In Semitic ’04: Proceedings of the Workshop on Computational Approaches to
Arabic Script-based Languages, pages 2–9.

Maamouri, M., Bies, A., Kulick, S., Krouna, S., Gaddeche, F., and Zaghouani, W. (2010). Arabic
treebank: Part 3 version 3.2. In Linguistic Data Consortium,LDC2010T08.

Maamouri, M., Kulick, S., and Bies, A. (2008). Diacritic annotation in the arabic treebank and its
impact on parser evaluation. In International Conference on Language Resources and Evaluation.

Mosaad, Z. (2009).
	¬Qå�Ë@ ú


	̄ 	Q�
g. �ñË@ alwaǧyz fy als. arf (The Briefing of Morphology). As-Sahwa,
first edition.

Semmar, N., Meriama, L., and Fluhr, C. (2008). Evaluating a natural language processing approach
in arabic information retrieval. In ELRA Workshop on Evaluation.

Shaalan, K. F., Magdy, M., and Fahmy, A. (2010). Morphological analysis of ill-formed arabic
verbs in intelligent language tutoring framework. In Applied Natural Language Processing, Florida
Artificial Intelligence Research Society Conference. AAAI Press.

Smrž, O. (2007). Elixirfm: implementation of functional Arabic morphology. In Semitic ’07:
Proceedings of the 2007 Workshop on Computational Approaches to Semitic Languages, pages
1–8, Prague, Czech Republic.

Spencer, A. (1991). Blackwell Textbooks in Linguistics.

Vajda, E. J. Typology.

526


