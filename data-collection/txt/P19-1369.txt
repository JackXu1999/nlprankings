



















































Proactive Human-Machine Conversation with Explicit Conversation Goal


Proceedings of the 57th Annual Meeting of the Association for Computational Linguistics, pages 3794–3804
Florence, Italy, July 28 - August 2, 2019. c©2019 Association for Computational Linguistics

3794

Proactive Human-Machine Conversation
with Explicit Conversation Goals

Wenquan Wu, Zhen Guo, Xiangyang Zhou, Hua Wu,
Xiyuan Zhang, Rongzhong Lian and Haifeng Wang

Baidu Inc., Beijing, China
{wuwenquan01,guozhenguozhen,zhouxiangyang,wu hua}@baidu.com

{zhangxiyuan01,lianrongzhong,wanghaifeng}@baidu.com

Abstract

Though great progress has been made for
human-machine conversation, current dia-
logue system is still in its infancy: it usually
converses passively and utters words more as
a matter of response, rather than on its own
initiatives. In this paper, we take a radical
step towards building a human-like conversa-
tional agent: endowing it with the ability of
proactively leading the conversation (introduc-
ing a new topic or maintaining the current
topic). To facilitate the development of such
conversation systems, we create a new dataset
named DuConv where one acts as a conversa-
tion leader and the other acts as the follower.
The leader is provided with a knowledge graph
and asked to sequentially change the discus-
sion topics, following the given conversation
goal, and meanwhile keep the dialogue as nat-
ural and engaging as possible. DuConv en-
ables a very challenging task as the model
needs to both understand dialogue and plan
over the given knowledge graph. We establish
baseline results on this dataset (about 270K
utterances and 30k dialogues) using several
state-of-the-art models. Experimental results
show that dialogue models that plan over the
knowledge graph can make full use of related
knowledge to generate more diverse multi-turn
conversations. The baseline systems along
with the dataset are publicly available 1.

1 Introduction

Building a human-like conversational agent is one
of long-cherished goals in Artificial Intelligence
(AI) (Turing, 2009). Typical conversations involve
exchanging information (Zhang et al., 2018), rec-
ommending something (Li et al., 2018), and com-
pleting tasks (Bordes et al., 2016), most of which
rely on background knowledge. However, many

1 https://github.com/PaddlePaddle/models/tree/develop/
PaddleNLP/Research/ACL2019-DuConv

dialogue systems only rely on utterances and re-
sponses as training data, without explicitly ex-
ploiting knowledge associated with them, which
sometimes results in uninformative and inappro-
priate responses (Wang et al., 2018). Although
there exist some work that use external back-
ground knowledge to generate more informative
responses (Liu et al., 2018; Yin et al., 2015; Zhu
et al., 2017), these systems usually generate re-
sponses to answer questions instead of asking
questions or leading the conversation. In order to
solve the above problems, some new datasets have
been created, where external background knowl-
edge is explicitly linked to utterances (Dinan et al.,
2019; Moghe et al., 2018), to facilitate the de-
velopment of knowledge aware conversation mod-
els. With these datasets, conversation systems can
be built to talk with humans given a topic based
on the provided external knowledge. Unlike task-
oriented systems (Bordes et al., 2016), these con-
versation systems don’t have an explicit goal to
achieve, thereof not able to plan over the back-
ground knowledge.

In this paper, we take a radical step towards
building another type of human-like conversa-
tional agent: endowing it with the ability of proac-
tively leading the conversation with an explicit
conversation goal. To this end, we investigate
learning a proactive dialogue system by planning
dialogue strategy over a knowledge graph. Our
assumption is that reasoning and planning with
knowledge are the keystones to achieve proactive
conversation. For example, when humans talk
about movies, if one person learns more about
some movies, he/she usually leads the conversa-
tion based on one or more entities in the back-
ground knowledge and smoothly changes the top-
ics from one entity to another. In this paper, we
mimic this process by setting an explicit goal as
a knowledge path “[start]→ topic a→ topic b”,



3795

Goal

Knowledge

START McDull: Rise of the Rice Cooker Bo Peng

Blood_Type

McDull: Rise of 
the Rice Cooker

Bo Peng Lack of explosive 
performance

6.9

Type O

Heze City

nice, very 
funny

Yes

Comment

Native_Place
Representative_Work

Hero

Is_released

Rating

Comment

Conversation

Bot: 平时周末去看电影吗？
(Do you usually spend your weekend watching movies?)

User: 看呀，最近有好看的可以推荐一下，周末去看。
(Of course, could you recommend good films for me? I will watch it on
this weekend.)

Bot: 麦兜·饭宝奇兵这部电影，大众评分在6.9呢，值得一看。
(You can watch Rise of the Rice Cooker, which is rated 6.9.)

User: 好的，一定去看看。(Sounds great, thanks.)
Bot: 这部电影还不错，挺搞笑的。你知道饭麦兜·饭宝奇兵的主演是谁吗?

(It is very nice and funny. Do you know who is the hero of this movie?)

User: 不知道，谁啊？(I don’t know. Who is that?)
Bot: 彭博，网友们评论说他缺少爆发力太温柔。(It’s Bo Peng. Do you know 

him? People said that he was a kind of lacking explosive Performance.)
User: 那我有时间去了解一下。（I will know more about him later.）

Figure 1: One conversation generated by two annotators, one of which was given a goal and related knowledge.

which means that one person leads the conversa-
tion from any starting point to topic a and then
to topic b. Here topic represents one entity in the
knowledge graph.

With this in mind, we first build a knowl-
edge graph which combines factoid knowledge
and non-factoid knowledge such as comments and
synopsis about movies. To construct the knowl-
edge graph, we take a factoid knowledge graph
(KG) as its backbone and align unstructured sen-
tences from the non-factoid knowledge with enti-
ties. Then we use this KG to facilitate knowledge
path planning and response generation, as shown
in Figure 1. Based on this knowledge graph,
we create a new knowledge-driven conversation
dataset, namely the Baidu Conversation Corpus
(DuConv) to facilitate the development of proac-
tive conversation models. Specifically, DuConv
has around 30k multi-turn conversations and each
dialog in the DuConv is created by two crowd-
sourced workers, where one plays the role of the
conversation leader and the other one acts as the
conversation follower. At the beginning of each
conversation, the leading player is assigned with
an explicit goal, i.e., to sequentially change the
conversation topic from one to another, meanwhile
keeping the conversation as natural and engaging
as possible. The conversation goal is a knowl-
edge path comprised of two topics and structured
as “[start]→ topic a→ topic b” and the leading
player is also provided with related knowledge of
these two topics. For each turn in the conversa-
tion, the leading player needs to exploit the pro-
vided knowledge triplets to plan his/her conversa-
tion strategy and construct responses to get closer
to the target topic, while the follower only needs to
respond according to the contexts without know-
ing the goal.

Figure 1 illustrates one example dialog in
DuConv. It can be seen that DuConv provides a
very challenging task: the conversational agents
have to fully exploit the provided knowledge to
achieve the given goal. To test the usability
of DuConv, we propose a knowledge-aware neu-
ral dialogue generator and a knowledge-aware
retrieval-based dialogue system, and investigate
their effectiveness. Experimental results demon-
strate that our proposed methods can proactively
lead the conversation to complete the goal and
make more use of the provided knowledge.

To the best of our knowledge, it is the first work
that defines an explicit goal over the knowledge
graph to guide the conversation process, making
the following contributions:

• A new task is proposed to mimic the ac-
tion of humans that lead conversations over a
knowledge graph combining factoid and non-
factoid knowledge, which has a wide applica-
tion in real-world but is not well studied.
• A new large-scale dataset named DuConv is

constructed and released to facilitate the de-
velopment of knowledge-driven proactive di-
alogue systems.
• We propose knowledge-aware proactive di-

alogue models and conduct detailed analy-
sis over the datasets. Experimental results
demonstrate that our proposed methods make
full use of related knowledge to generate
more diverse conversations.

2 Related Work

Our related work is in line with two major re-
search topics, Proactive Conversation and Knowl-
edge Grounded Conversation.



3796

2.1 Proactive Conversation

The goal of proactive conversation is endowing
dialogue systems with the ability of leading the
conversation. Existing work on proactive conver-
sation is usually limited to specific dialogue sce-
narios. Young et al. (2013), Mo et al. (2016)
and Bordes et al. (2018) proposed to com-
plete tasks more actively, like restaurant book-
ing, by actively questioning/clarifying the miss-
ing/ambiguous slots. Besides the task-oriented di-
alogue systems, researchers have also investigated
building proactive social bots to make the interac-
tion more engaging. Wang et al., (2018) explored
to ask good questions in open-domain conversa-
tional systems. Li et al., (2018) enabled chatbots
to recommend films during chitchatting. Unlike
the existing work, we proposed to actively lead the
conversation by planning over a knowledge graph
with an explicit goal. We also create a new dataset
to facilitate the development of such conversation
systems.

2.2 Knowledge Grounded Conversation

Leveraging knowledge for better dialogue mod-
eling has drawn lots of research interests in past
years and researchers have shown the multi-fold
benefits of exploiting knowledge in dialogue mod-
eling. One major research line is using knowl-
edge to generate engaging, meaningful or per-
sonalized responses in chitchatting (Ghazvinine-
jad et al., 2018; Vougiouklis et al., 2016; Zhou
et al., 2018a; Zhang et al., 2018). In addition to
proposing better conversation models, researchers
also released several knowledge grounded datasets
(Dinan et al., 2019; Moghe et al., 2018). Our work
is most related to Mogh et al., (2018) and Dinan et
al., (2019), where each utterance in their released
datasets is aligned to the related knowledge, in-
cluding both structured triplets and unstructured
sentences. We extend their work, by including
the whole knowledge graph into dialogue model-
ing and propose a new task of proactively leading
the conversation via planning over the knowledge
graph in this paper.

3 DuConv

In this section, we describe the creation of
DuConv in details. It contains four steps: knowl-
edge crawling, knowledge graph construction,
conversation goal assignment, and conversation
crowdsourcing. We limit the dialogue topics in

# dialogs 29858
# utterances 270399

average # utterances per dialog 9.1
average # words per utterance 10.6

average # words per dialog 96.2
average # knowledge per dialogue 17.1

Table 1: Overview of the conversation dataset DuConv.

DuConv to movies and film stars, and crawl this
related knowledge from the internet. Then we
build our knowledge graph with these crawled
data. After constructing our knowledge graph,
we randomly sample two linked entities to con-
struct the conversation goal, denoted as “[start]
→ topic a → topic b”, and ask two annotators
to conduct knowledge-driven conversations, with
one playing as the conversation leader and the
other one playing as the follower. The leader
needs to change the conversation topics follow-
ing the conversation goal and meanwhile keep the
conversation as engaging as possible. All those
conversations are recorded and around 30k con-
versations are finally used in DuConv after filter-
ing dirty/offensive parts. Table 1 summarizes the
main information about DuConv.

3.1 Knowledge Crawling

We crawled the related knowledge information
from the website MTime.com2, which records the
information of most films, heroes, and heroines
in China. We collect both structured knowledge
(such as “Harry Potter” is “directed by” “Chris
Columbus”) as well as unstructured knowledge in-
cluding short comments and synopsis. We filter out
the dirty or offensive information and further nor-
malize some of the numbers (such as the values
of rating) into discrete symbols (good, fair, bad)
to facilitate the use of this kind of knowledge. In
summary, we crawl more than 91k films and 51k
film stars, resulting in about 3.6 million knowl-
edge triplets, the accuracy of which is over 97%
3.

3.2 Knowledge Graph Construction

After the raw data collection, we construct a
knowledge graph. Our knowledge graph is com-
prised of multiple SPO (Subject, Predicate, Ob-

2http://www.mtime.com/
3We randomly sampled 100 triplets and manually evalu-

ated them.



3797

# entities 143627
# movies 91874

# person names 51753
# properties 45

# spo 3598246
average # spo per entity 25

Table 2: Overview of the knowledge graph in DuConv.

ject) knowledge triplets, where objects can be fac-
toid facts and non-factoid sentences such as com-
ments and synopsis. The knowledge triplets in our
graph can be classified into:

1. Direct triplets: widely-used knowledge
triplets, such as (“Harry Potter and the Sor-
cerer Stone”, ”directed by”, ”Chris Colum-
bus”), akin to most existing knowledge
graphs, with the exception that the objects
can be sentences such as short comments and
synopsis.

2. Associated triplets: if two entities share the
same predicate and the same object in their
triplets, then we create a virtual triplet like
(”Harry Potter and the Sorcerer Stone”, ”di-
rected by Chris Columbus”, ”Home Alone”)
by combining the two original triplets.

We call the direct triplets as one-step relation and
associated triplets as two-step relation. Table 2
lists the main information of our knowledge graph.

3.3 Conversation Goal Assignment

Given the knowledge graph, we sample some
knowledge paths, which are used as conversation
goals. Specifically, we focus on the simple but
challenging scenario: naturally shifting the topics
twice, i.e., from “[start]” state to “topic a” then
finally to “topic b”. We sample two linked entities
in our knowledge graph as ‘topic a” and “topic b”
to construct the knowledge path. About 30k differ-
ent knowledge paths are sampled and used as con-
versation goals for knowledge-driven conversation
crowdsourcing, where half of the knowledge paths
are from the one-step relation set while the other
half are from the two-step relation set.

3.4 Crowdsourcing

Unlike using self-play in dataset construction
(Ghazvininejad et al., 2018), we collect lots of
crowdsourced workers to generate the dialogues

in DuConv 4. For each given conversation goal,
we assign two workers different roles: 1) the con-
versation leader and 2) the follower. The leader is
provided with the conversation goal and its related
background knowledge in our knowledge graph,
and then asked to naturally shift the conversation
topic following the given conversation goal. The
follower is provided with nothing but the dialogue
history and only has to respond to the leader. The
dialogue will not stop until the leader achieves the
conversation goal. We record conversation utter-
ances together with the related knowledge triplets
and the knowledge path, to construct the whole
dataset of DuConv.

4 Methods

To enable neural dialogue systems to converse
with external background knowledge, we pro-
pose two models: a retrieval-based model and
a generation-based model, by introducing an ex-
ternal memory module for storing all related
knowledge, making the models select appropri-
ate knowledge to enable proactive conversations.
Figure 2 shows the architectures of our proposed
knowledge-aware response ranking model as well
as our response generation model. We will give
a detailed description of those two knowledge-
aware models in next two sub-sections.

4.1 Retrieval-based Model

Given a dialogue context X , the retrieval-based
dialogue system responds to that context via
searching for the best response Y from DuConv.
Thus retrieval-based dialogue system often has a
pipeline structure with two major steps: 1) retrieve
response candidates from a database and 2) select
the best one from the response candidates (Zhou
et al., 2018b). In our retrieval-based method, the
candidate responses are collected similar to most
existing work (Wu et al., 2017; Zhou et al., 2018b)
with one notable difference that we normalize the
entities with their entity types in the knowledge
graph to improve generalization capabilities.

For each retrieved candidate response Y , the
goal of our response ranker is to measure if Y is
a good response to the context X considering the
given dialogue goal G = [start, topic a, topic b]
and related knowledge K. The matching

4The workers are collected from a Chinese crowdsourc-
ing platform http://test.baidu.com/. The workers are paid 2.5
Chinese Yuan per conversation.



3798

r

(a) Retrieval-based Model (b) Generation-based Model

target Y

knowledge1

knowledge3

knowledge2

KLDivLoss

MLP

decode

BOW Loss
w

NLL Loss

attention

prior distribution

posterior distribution
MLP

knowledge
encode

encode

p(k1 x, y)

p(k2 x, y)

p(k3 x, y)

p(k1 x)

p(k2 x)

p(k3 x)

source X
goal Gknowledge1

knowledge3

knowledge2
knowledge

encode

Encoder (Transformer)

source X target Y

p(k1 x)

p(k2 x)

p(k3 x)

MLP

Cross 
Entropy Loss

Matching Score 
!(# = 1|', ), *)

goal G

Knowledge 
Reasoner

Matcher

xyxy kc

Figure 2: The retrieval-based model and generation-based model.

score measured by our knowledge-aware response
ranker is defined as p(l = 1|Y,X,K,G). As
shown in Figure 2(a), our knowledge-aware
response ranker consists of four major parts,
i.e., the context-response representation module
(Encoder), the knowledge representation module
(Knowledge Encoder), the knowledge reasoning
module (Knowledge Reasoner) as well as the
matching module (Matcher).

The Encoder module has the same architecture
as BERT (Devlin et al., 2018), it takes the con-
textX and candidate response Y as segment a and
segment b in BERT, and leverages a stacked self-
attention to produce the joint representation of X
and Y , denoted as xy. Each related knowledge
knowledgei is also encoded as vector represen-
tations in the Knowledge Encoder module using
a bi-directional GRU (Chung et al., 2014), which
can be formulated as ki = [

−→
hT ;
←−
h0], where T de-

notes the length of knowledge,
−→
hT and

←−
h0 repre-

sent the last and initial hidden states of the two di-
rectional GRU respectively. The dialogue goal is
also combined with the related knowledge in order
to fuse that information into response ranking.

To jointly consider context, dialogue goal and
knowledge in response ranking, we make the
context-response representation xy attended to all
knowledge vectors ki and get the attention dis-
tribution. For simplicity, the dialogue goal was
treated as part of the knowledge used in the con-
versation.

p(ki|x, y) =
exp(xy · ki)∑
j exp(xy · kj)

(1)

and fuse all related knowledge information into
a single vector kc =

∑
i p(ki|x, y) ∗ ki. We

view kc and xy as the information from knowledge
side and dialogue side respectively, and fuse those
two kinds of information into a single vector via
concatenation, then finally calculate the matching
probability as:

p(l = 1|X,Y,K,G) = sigmoid(MLP([xy; kc])) (2)

Our knowledge-aware response ranker differs
from most existing work in jointly considering the
previous dialogue context, the dialogue goal as
well as the related knowledge, which enables our
model to better exploit knowledge to achieve the
conversation goal.

4.2 Generation-based Model
To generate a knowledge-driven dialogue re-
sponse, we enhance the vanilla seq2seq model
with an extra knowledge selection paradigm,
Figure 2(b) demonstrates the structure of our
knowledge-aware generator, which is comprised
of four parts: the Utterance Encoder, the Knowl-
edge Encoder, the Knowledge Manager and the
Decoder.

For each given dialogue context X , along with
the dialogue goalG and related knowledgeK, our
knowledge-aware generator first encodes all input
information as vectors in the Utterance Encoder
and Knowledge Encoder. The encoding method in
those two modules also uses bi-directional GRUs,
akin to that in the retrieval-based method. Espe-
cially, the dialogue context X and dialogue goal
G are fused into the same vector x by sequentially
concatenate G and X into a single sentence, then
feed to the encoder.

After encoding, our knowledge-aware genera-
tor starts to plan its dialogue strategy by con-



3799

sidering which knowledge would be appropriate
next. Practically, the generator can also conduct
knowledge selection via attention mechanism as
in the retrieval-based method. However, to force
the model to mimic human in knowledge selec-
tion, we introduce two different distributions: 1)
the prior distribution p(ki|x) and the posterior
distribution p(ki|x, y). We take the prior dis-
tribution p(ki|x) as the knowledge reasoned by
machines and the posterior distribution p(ki|x, y)
as the knowledge reasoned by humans, and then
force the machine to mimic human by minimizing
the KLDivLoss between those two distributions,
which can be formulated as:

p(ki|x, y) =
exp(ki ·MLP ([x; y]))∑N
j=1 exp(kj ·MLP ([x; y]))

(3)

p(ki|x) =
exp(ki · x)∑N
j=1 exp(kj · x)

(4)

LKL(θ) =
1

N

N∑
i=1

p(ki|x, y)log
p(ki|x, y)
p(ki|x)

(5)

Given that knowledge distribution p(ki|x) and
p(ki|x, y), we fused all related knowledge infor-
mation into a vector kc =

∑
i p(ki|x, y) ∗ ki ,

same as our retrieval-based method, and feed it to
the decoder for response generation. In the test-
ing phase, the fused knowledge is estimated by
the formula kc =

∑
i p(ki|x) ∗ ki without gold

responses . The decoder is implemented with the
Hierarchical Gated Fusion Unit described in (Yao
et al., 2017), which is a standard GRU based de-
coder enhanced with external knowledge gates.
Besides the KLDivLoss, our knowledge-aware
generator introduces two additional loss functions:

NLL Loss: the Negative Log-Likelihood (NLL)
LNLL(θ) measures the difference between
the true response and the response generated
by our model.

BOW Loss: We use the BOW loss proposed by
Zhao et al., (2017), to ensure the accuracy of
the fused knowledge kc by enforcing the rel-
evancy between the knowledge and the true
response. Specifically, let w = MLP(kc) ∈
R|V |, where |V | is the vocabulary size and
we define:

p(yt|kc) =
exp(wyt)∑
v exp(wv)

(6)

Then, the BOW loss is defined to minimize:

LBOW (θ) = −
1

m

m∑
t=1

logp(yt|kc) (7)

In summary, the final loss of our generative model
is:

L(θ) = LKL(θ) + LNLL(θ) + LBOW (θ) (8)

5 Experiments

5.1 Setting
Our proposed models are tested under two set-
tings: 1) automatic evaluation and 2) human eval-
uation. For automatic evaluation, we leverage sev-
eral common metrics including BLEU, PPL, F1,
DISTINCT1/2 to automatically measure the flu-
ency, relevance, diversity etc. In our setting, we
ask each model to select the best response from 10
candidates, same as previous work (Zhang et al.,
2018). Those 10 candidate responses are com-
prised of one true response generated by human-
beings and nine randomly sampled ones from
the training corpus. We measure the perfor-
mance of all models using Hits@1 and Hits@3,
same as Zhang et al., (2018). Furthermore, we
also evaluate the ability of exploiting knowledge
of each model by calculating knowledge preci-
sion/recall/F1 scores.

The human evaluation is conducted at two lev-
els, i.e., the turn-level human evaluation and the
dialogue-level human evaluation. The turn-level
human evaluation is similar to automatic evalua-
tion. Given the dialogue context, the dialogue goal
as well as the related knowledge, we require each
model to produce a response according to the di-
alogue context. The responses are evaluated by
three annotators in terms of fluency, coherence,
informativeness, and proactivity. The coherence
measures the relevance of the response and the
proactivity measures if the model can successfully
introduce new topics without destructing the flu-
ency and coherence.

The dialogue-level evaluation is much more
challenging. Given a conversation goal and the
related knowledge, each model is required to talk
with a volunteer and lead the conversation to
achieve the goal. For each model, 100 dialogues
are generated. The generated conversations are
then evaluated by three persons in terms of two
aspects: goal completion and coherence. The goal



3800

Methods Hits@1 Hits@3 PPL F1/BLEU1/BLEU2 DISTINCT 1&2 knowledge P/R/F1
retrieval w/o klg. 45.84% 72.86% - 33.08 / 0.280 / 0.147 0.121 / 0.376 86.90 / 39.30 / 13.73
retrieval w/ klg. 46.74% 75.32% - 33.12 / 0.282 / 0.146 0.122 / 0.388 8.54 / 37.93 / 13.47
norm retrieval 50.92% 79.02% - 34.73 / 0.291 / 0.156 0.118 / 0.373 9.76 / 40.23 / 15.22
S2S w/o klg. 24.88% 49.64% 20.16 26.43 / 0.187 / 0.100 0.032 / 0.088 4.59 / 30.00 / 7.73
S2S w/ klg. 30.58% 57.52% 13.53 32.19 / 0.226 / 0.140 0.064 / 0.168 5.89 / 36.31 / 9.85
norm S2S 31.26% 55.12% 10.96 39.94 / 0.283 / 0.186 0.093 / 0.222 7.52 / 42.74 / 12.34

generation w/o klg. 25.52% 50.14% 20.3 28.52 / 0.29 / 0.154 0.032 / 0.075 6.18 / 27.48 / 9.86
generation w/ klg. 31.90% 58.44% 27.3 36.21 / 0.32 / 0.169 0.049 / 0.144 8.67 / 35.90 / 13.62
norm generation 32.50% 58.50% 24.3 41.84 / 0.347 / 0.198 0.057 / 0.155 9.88 / 38.02 / 15.27

Table 3: Automatic evaluation results. klg. and norm stands for knowledge and normalized here. S2S stands for
the vanilla sequence-to-sequence model.

methods turn-level human evaluation dialogue-level human evaluation
metrics fluency coherence informativeness proactivity goal complete coherence
scores (0,1,2) (0,1,2) (0,1,2) (-1,0,1) (0,1,2) (0,1,2,3)

norm retrieval 1.93 1.41 0.86 0.80 0.90 1.92
norm generation (s2s) 2.00 1.89 0.74 0.86 1.14 2.01

norm generation 1.87 1.61 1.10 0.87 1.22 2.03

Table 4: Turn-level and dialogue-level human evaluation results

completion measures how good the conversation
goal is achieved and the coherence scores the flu-
ency of the whole dialogue.

All human evaluation metrics, except the turn-
level proactivity and the dialogue-level coherence,
has three grades: good(2), fair(1), bad(0). For goal
completion, “2” means that the goal is achieved
with full use of knowledge, “1” means the goal is
achieved by making minor use of knowledge, and
“0” means that the goal is not achieved. We addi-
tionally set the perfect grade (3) for dialogue-level
coherence, to encourage consistent and informa-
tive dialogues. For proactivity, we also have three
grades: “1” means good proactivity that new top-
ics related to context are introduced, “-1” means
bad proactivity that new topics are introduced but
irrelevant to context, and “0” means that no new
topics are introduced. The detailed description of
the human evaluation metrics can be found in the
appendices.

5.2 Comparison Models

The compared models contain the vanilla seq2seq
model, our proposed retrieval-based model as well
as our proposed generation-based model5. More-
over, we normalize the train/valid/test data by re-
placing the specific two topics in the knowledge
path with “topic a” and “topic b” respectively.
Models using such normalized corpora are named
as normalized models. To test the effectiveness

5We also compared MemNet (Ghazvininejad et al., 2018),
whose performance is similar to Seq2Seq with knowledge.
We omit it for space limit in this paper.

of knowledge, we set up one ablation experiment,
which removes all the knowledge triplets by re-
placing them with “UNK, UNK, UNK”.

5.3 Model Training

All models are implemented using PaddlePaddle 6

and pytorch (Paszke et al., 2017), trained on a sin-
gle GPU of NVIDIA Tesla K40. We set the vocab-
ulary size to 30k for both retrieval-based and gen-
eration based methods. All hidden sizes, as well as
embedding size, are set to 300, and the word em-
bedding layer is initialized via word2vec7 trained
on a very large corpus. We apply Adam optimize
for model training and the beam size for generative
models are set to 10 during decoding.

5.4 Results

Table 3 and Table 4 summarize the experimental
results on automatic evaluation and human eval-
uation. For human evaluation, we only evaluate
the normalized models since they achieved better
performances on our dataset. All human evalua-
tions are conducted by three persons, where the
agreement ratio (Fleiss’ kappa (Fleiss et al., 1971))
is from 0.37 to 0.86, with the lowest agreement
on multi-turn coherence and others all above 0.6.
More details of these measures are available in the
Appendix.

6It is an open source deep learning platform
(https://paddlepaddle.org) developed by Baidu. Our code and
data are available at https://github.com/PaddlePaddle/models/
tree/develop/PaddleNLP/Research/ACL2019-DuConv.

7https://radimrehurek.com/gensim/models/word2vec.html



3801

distribution statistics norm generation norm seq2seq norm retrieval

goal completion
0 21% 14% 25%
1 35% 26% 59%
2 43% 29% 15%

knowledge used
# triplets 2.46 1.51 2.28

# properties 27 20 25

Table 5: Analysis on goal completion and knowledge exploition.

It can be seen that the retrieval-based model and
the generation-based model have significantly dif-
ferent performances in terms of automatic eval-
uation and human evaluations. Retrieval-based
model works better on Hits@K, however worse
on F1 and BLEU compared to the generation-
based model. This is perhaps caused by that
fact that they are optimized on different metrics.
For human evaluation, it can be observed that
the retrieval-based method is apparently worse
than generation-based models. This is because
the retrieved candidates limit the potential of the
retrieval-based model. We also found that the
methods using knowledge outperform those with-
out using knowledge, which confirms the bene-
fits of using background knowledge. It is very
interesting that normalizing the “topic a” and
“topic b” can significantly improve the perfor-
mance for all models because of their generaliza-
tion capability over the knowledge.

From the human evaluation, we found that
our proposed generation methods outperform the
baseline Seq2Seq model and the retrieval model,
especially in terms of turn-level informativeness
and proactivity, and dialogue-level goal comple-
tion and coherence. In order to further analyze
the relationship between informativeness and goal
completion, the detailed distribution of goal com-
pletion scores and the numbers of used knowledge
triplets are shown in Table 5. From this table,
it can be seen that our proposed generation model
can exploit more knowledge to achieve the conver-
sation goal (much higher rate on score “2”), mak-
ing the conversation more engaging and coherent.
This demonstrates the effectiveness of the knowl-
edge posterior/prior distribution learning. Al-
though the baseline Seq2Seq model can also has
good goal completion capability, it usually only
uses knowledge directly related to the conversa-
tion goal in the conversation process (much higher
rate over score “1”), making the conversation usu-
ally dull.

However, for the dialogue-level human evalu-
ation, there are still 15% to 20% of conversation
goals not achieved. The reason may be that our
models (both retrieval and generation) have no ex-
plicit multi-turn policy mechanism to control the
whole conversation flow, which is left for future
research.

6 Case Study

Figure 3 shows the conversations generated by
the models via conversing with humans, given
the conversation goal and the related knowledge.
It can be seen that our knowledge-aware gen-
erator can choose appropriate and more knowl-
edge for diverse conversation generation. Even
though the retrieval-based method can also pro-
duce knowledge-grounded responses, the used
knowledge is often wrong. Although the seq2seq
model can smoothly achieve the given knowl-
edge goal, it always generates generic responses
using safe dialogue strategy, as the mentioned
knowledge is much smaller than our proposed
knowledge-aware generator, making the generated
conversation less diverse and sometimes dull.

7 Conclusion

In this paper, we build a human-like conversa-
tional agent by endowing it with the ability of
proactively leading the conversation. To achieve
this goal, we create a new dataset named DuConv.
Each dialog in DuConv is created by two crowd-
sourced workers, where one acts as the conver-
sation leader and the other acts as the follower.
The leader is provided with a knowledge graph
and asked to sequentially change the discussed
topics following the given conversation goal, and
meanwhile, keep the dialogue as natural and en-
gaging as possible. We establish baseline results
on DuConv using several state-of-the-art models.
Experimental results show that dialogue models
that plan over knowledge graph can make more
full use of related knowledge to generate more



3802

 
 
 
 
 
 
 
 
 

Bot: 你喜欢看什么小怪兽的电影啊？（Do you like little monster movie？） 
User: 小孩子看的s意儿了（ I believe that is for babies） 
Bot: 我最近看了一部叫麦兜·饭宝奇兵的电影，我觉得挺好看的。 
     （I recently watched one. McDull: Rise  of the Rice Cooker. It's very hilarious） 
User：看来你是个宝宝啊 (You must be a baby) 
Bot: 嗯，这是一部很搞笑的电影，不过我觉得还挺搞笑的。(That is a very hilarious anyway.) 
User: 真的吗？谁演的？(Really? Who is the hero?) 
Bot: 这部电影的主演是彭博，我很欣赏他的。(The starring is Bo Peng. I admire him very much) 
Bot: 你喜欢看动画r吗？(Do you like cartoon？) 
User: 小时候还挺喜欢了，大了就不怎么喜欢看了 
       （I used to when I was a little baby. But I quit cartoon after growing up） 
Bot: 那你看过麦兜·饭宝奇兵吗？(So have you ever watched MuDull: Rise of the Rice Cooker？) 

User: 没看过，讲什么的（Not yet, what is in the movie?） 
Bot: 这部电影的主演是彭博。(The starring is Bo Peng.) 
Bot: 我很喜欢看导演安格斯.麦克莱恩的电影。(I like Angus Mclean's Movie) 
User: 什么电影呢 (for example？) 

Bot: 《麦兜·饭宝奇兵》这部电影是2016年9月15日上映的，你可以看一下。 
     （”McDull: Rise of the Rice Cooker“, it was released on September 15th 2016.You may have a try. ） 
User: 回头看一下(Ok, I will watch it later) 
Bot: 这部电影是2016年9月15日上映的呢，这部电影的主演我很喜欢。 
         (It is released on September 15th, 2016, I really like the starring of the show) 
User: 谁B，你这么喜欢(Who is that?) 
Bot: 彭博，1957年3月20日出生的，经验很丰富的演员，你可以看看他的作品。 
         (Bo Peng, born at March 20th, 1957, a very experienced actor. You may take a look at his movies) 

　 

评论 
comment 

 不错，很搞笑 
 nice, very hilarious 

评分 
rating  6.9 

上映时间 
date published 

2016年9月15日 
2016.9.15 

类型 
genre 

动画 
cartoon 

主演 
Hero 

彭博 
Bo Peng 

评论 
comment 

这个小怪兽也太恶心了 
this little monster is disgusting 

　 

评论 
comment 

缺少爆发力 
lack of explosive performance 

血型 
blood type 

O型 
type O 

性别 
gender 

男 
male 

职业 
occupation 

演员 
actor 

代表作 
representative work 

麦兜:饭宝奇兵 
McDull: Rise of the Rice 
Cooker 

G
oa

l 
K

no
w

le
dg

e 

麦
兜

:饭
宝

奇
兵

 
M

cD
ul

l: 
 R

ise
 o

f t
he

 R
ic

e 
Co

ok
er

 
彭

博
 

Bo
 P

en
g 

no
rm

 g
en

er
at

io
n 

no
rm

 s
eq

2s
eq

 
no

rm
  e

tri
ev

al
 

[START]->麦兜·饭宝奇兵->彭博 
[START]->McDull: Rise of the Rice Cooker->Bo Peng 

Figure 3: Conversations generated by three different models: words in yellow represent correct use of knowledge
while those in blue for wrong knowledge.

diverse conversations. Our dataset and proposed
models are publicly available, which can be used
as benchmarks for future research on constructing
knowledge-driven proactive dialogue systems.

Acknowledgement

We sincerely thank the PaddlePaddle development
team for helping us build the baseline models. We
also would like to thank Ying Chen and Na Chen
for helping us to collect the dataset through crowd-
sourcing. This work was supported by the Natural
Science Foundation of China (No.61533018).

References

Antoine Bordes, Y-Lan Boureau, and Jason Weston.
2016. Learning end-to-end goal-oriented dialog.
arXiv preprint arXiv:1605.07683.

Junyoung Chung, Caglar Gulcehre, KyungHyun Cho,
and Yoshua Bengio. 2014. Empirical evaluation of
gated recurrent neural networks on sequence model-
ing. arXiv preprint arXiv:1412.3555.

Jacob Devlin, Ming-Wei Chang, Kenton Lee, and
Kristina Toutanova. 2018. Bert: Pre-training of deep
bidirectional transformers for language understand-
ing. arXiv preprint arXiv:1810.04805.

Emily Dinan, Stephen Roller, Kurt Shuster, Angela
Fan, Michael Auli, and Jason Weston. 2019. Wizard
of wikipedia: Knowledge-powered conversational
agents. In International Conference on Learning
Representations.

J.L. Fleiss et al. 1971. Measuring nominal scale agree-
ment among many raters. Psychological Bulletin,
76(5):378–382.

Marjan Ghazvininejad, Chris Brockett, Ming-Wei
Chang, Bill Dolan, Jianfeng Gao, Wen-tau Yih, and
Michel Galley. 2018. A knowledge-grounded neural
conversation model. In Thirty-Second AAAI Confer-
ence on Artificial Intelligence.

Raymond Li, Samira Ebrahimi Kahou, Hannes Schulz,
Vincent Michalski, Laurent Charlin, and Chris Pal.
2018. Towards deep conversational recommenda-
tions. In Advances in Neural Information Process-
ing Systems, pages 9748–9758.

Shuman Liu, Hongshen Chen, Zhaochun Ren, Yang
Feng, Qun Liu, and Dawei Yin. 2018. Knowledge
diffusion for neural dialogue generation. In Pro-
ceedings of the 56th Annual Meeting of the Associa-
tion for Computational Linguistics (Volume 1: Long
Papers), pages 1489–1498.

Kaixiang Mo, Yu Zhang, Shuangyin Li, Jiajun Li, and
Qiang Yang. 2018. Personalizing a dialogue sys-
tem with transfer reinforcement learning. In Thirty-
Second AAAI Conference on Artificial Intelligence.

Nikita Moghe, Siddhartha Arora, Suman Banerjee, and
Mitesh M. Khapra. 2018. Towards exploiting back-
ground knowledge for building conversation sys-
tems. In Proceedings of the 2018 Conference on
Empirical Methods in Natural Language Process-
ing, pages 2322–2332.

Adam Paszke, Sam Gross, Soumith Chintala, Gre-
gory Chanan, Edward Yang, Zachary DeVito, Zem-
ing Lin, Alban Desmaison, Luca Antiga, and Adam
Lerer. 2017. Automatic differentiation in pytorch.
In NIPS-W.



3803

Alan M Turing. 2009. Computing machinery and in-
telligence. In Parsing the Turing Test, pages 23–65.

Pavlos Vougiouklis, Jonathon Hare, and Elena Simperl.
2016. A neural network approach for knowledge-
driven response generation. In Proceedings of COL-
ING 2016, the 26th International Conference on
Computational Linguistics: Technical Papers, pages
3370–3380.

Yansen Wang, Chenyi Liu, Minlie Huang, and Liqiang
Nie. 2018. Learning to ask questions in open-
domain conversational systems with typed decoders.
In Proceedings of the 56th Annual Meeting of the As-
sociation for Computational Linguistics (Volume 1:
Long Papers), pages 2193–2203.

Yu Wu, Wei Wu, Ming Zhou, and Zhoujun Li. 2017.
Sequential match network: A new architecture for
multi-turn response selection in retrieval-based chat-
bots. In Proceedings of the 55th Annual Meeting of
the Association for Computational Linguistics (Vol-
ume 1: Long Papers), pages 372–381.

Lili Yao, Yaoyuan Zhang, Yansong Feng, Dongyan
Zhao, and Rui Yan. 2017. Towards implicit content-
introducing for generative short-text conversation
systems. In Proceedings of the 2017 Conference on
Empirical Methods in Natural Language Process-
ing, pages 2190–2199.

Jun Yin, Xin Jiang, Zhengdong Lu, Lifeng Shang,
Hang Li, and Xiaoming Li. 2015. Neural generative
question answering. CoRR, abs/1512.01337.

Steve Young, Milica Gašić, Blaise Thomson, and Ja-
son D Williams. 2013. Pomdp-based statistical spo-
ken dialog systems: A review. Proceedings of the
IEEE, 101(5):1160–1179.

Saizheng Zhang, Emily Dinan, Jack Urbanek, Arthur
Szlam, Douwe Kiela, and Jason Weston. 2018. Per-
sonalizing dialogue agents: I have a dog, do you
have pets too? In Proceedings of the 56th An-
nual Meeting of the Association for Computational
Linguistics (Volume 1: Long Papers), pages 2204–
2213.

Tiancheng Zhao, Ran Zhao, and Maxine Eskenazi.
2017. Learning discourse-level diversity for neural
dialog models using conditional variational autoen-
coders. In Proceedings of the 55th Annual Meet-
ing of the Association for Computational Linguistics
(Volume 1: Long Papers), pages 654–664, Vancou-
ver, Canada.

Hao Zhou, Tom Young, Minlie Huang, Haizhou Zhao,
Jingfang Xu, and Xiaoyan Zhu. 2018a. Com-
monsense knowledge aware conversation generation
with graph attention. In Proceedings of the 27th
International Joint Conference on Artificial Intelli-
gence, pages 4623–4629.

Xiangyang Zhou, Lu Li, Daxiang Dong, Yi Liu, Ying
Chen, Wayne Xin Zhao, Dianhai Yu, and Hua Wu.
2018b. Multi-turn response selection for chatbots

with deep attention matching network. In Proceed-
ings of the 56th Annual Meeting of the Association
for Computational Linguistics (Volume 1: Long Pa-
pers), volume 1, pages 1118–1127.

Wenya Zhu, Kaixiang Mo, Yu Zhang, Zhangbin Zhu,
Xuezheng Peng, and Qiang Yang. 2017. Flexible
end-to-end dialogue system for knowledge grounded
conversation. CoRR.



3804

Appendix

A. Turn-level Human Evaluation Guideline
Fluency measures if the produced response itself
is fluent:
• score 0 (bad): unfluent and difficult to under-

stand.
• score 1 (fair): there are some errors in the

response text but still can be understood.
• score 2 (good): fluent and easy to understand.

Coherence measures if the response can respond
to the context:
• score 0 (bad): not semantically relevant to the

context or logically contradictory to the con-
text.
• score 1 (fair): relevant to the context as

a whole, but using some irrelevant knowl-
edge, or not answering questions asked by the
users.
• score 2 (good): otherwise.

Informativeness measures if the model makes full
use of knowledge in the response:
• score 0 (bad): no knowledge is mentioned at

all.
• score 1 (fair): only one triplet is mentioned in

the response.
• score 2 (good): more than one triplet is

mentioned in the response.

Proactivity measures if the model can introduce
new knowledge/topics in conversation:
• score -1 (bad): some new topics are intro-

duced but irrelevant to the context.
• score 0 (fair): no new topics/knowledge are

used.
• score 1(good): some new topics relevant to

the context are introduced.

B. Dialogue-level Human Evaluation Guideline
Goal Completion measures how good the given
conversation goal is finished:
• score 0 (bad): neither “topic a” nor

“topic b”is mentioned in the conversation.
• score 1 (fair): “topic a” or “topic b” is men-

tioned , but the whole dialogue is very boring
and less than 3 different knowledge triplets
are used.
• score 2 (good): both “topic a” or “topic b”

are mentioned and more than 2 different

knowledge triplets are used.

Coherence measures the overall fluency of the
whole dialogue:
• score 0 (bad): over 2 responses irrelevant or

logically contradictory to the previous con-
text.
• score 1 (fair): only 2 responses irrelevant or

logically contradictory to the previous con-
text.
• score 2 (good): only 1 response irrelevant or

logically contradictory to the previous con-
text.
• score 3 (perfect): no response irrelevant or

logically contradictory to the previous con-
text.


