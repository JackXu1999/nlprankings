



















































A Pregroup Representation of Word Order Alternation Using Hindi Syntax


Proceedings of the 2019 Conference of the North American Chapter of the Association for Computational Linguistics: Student Research Workshop, pages 125–135
Minneapolis, Minnesota, June 3 - 5, 2019. c©2017 Association for Computational Linguistics

125

A Pregroup Representation of Word Order Alternation using Hindi
Syntax

Alok Debnath and Manish Shrivastava
Language Technologies Research Center (LTRC)

Kohli Center on Intelligent Systems
International Institute of Information Technology, Hyderabad

alok.debnath@research.iiit.ac.in
m.shrivastava@iiit.ac.in

Abstract

Pregroup calculus has been used for the repre-
sentation of free word order languages (San-
skrit and Hungarian), using a construction
called precyclicity. However, restricted word
order alternation has not been handled before.
This paper aims at introducing and formally
expressing three methods of representing word
order alternation in the pregroup representa-
tion of any language. This paper describes the
word order alternation patterns of Hindi, and
creates a basic pregroup representation for the
language. In doing so, the shortcoming of cor-
rect reductions for ungrammatical sentences
due to the current apparatus is highlighted, and
the aforementioned methods are invoked for
a grammatically accurate representation of re-
stricted word order alternation. The replicabil-
ity of these methods is explained in the repre-
sentation of adverbs and prepositional phrases
in English.

1 Introduction

Categorial grammars are one of the frameworks
for the representation of syntactic structures of
languages (Oehrle et al., 2012). A foundational
problem in such formalisms, including the well
established lexical formalism combinatory cate-
gorial grammars (CCG), is the representation of
free word order in light of syntactic or seman-
tic constraints presented by the language. Exten-
sive resources following the different formalisms,
such as CCG Banks (Hockenmaier and Steedman,
2007), have been developed. Development in pre-
group calculus, however, has been more focused
on developing formal constraints in the calculus
for the representation of syntactic phenomena. In
that vein, this paper aims at presenting the problem

of restricted word alternation (constituent scram-
bling) by using the example of Hindi syntax, and
uses that to develop three formal approaches to
represent word alternation in the pregroup calcu-
lus framework.

Pregroups are mathematical structures which
were developed initially by Lambek and can be
used to analyze sentences in English algebraically
(Lambek, 1997). Pregroup calculus was a re-
vision of Lambek’s previous categorial grammar
called Syntactic Calculus (Lambek, 1958). Var-
ious languages have since adopted the use of
pregroup calculus as the formal representation
of syntax of a fragment or a particular property
of the language, including Arabic (Bargelli and
Lambek, 2001b), French (Bargelli and Lambek,
2001a), German (Lambek, 2000), Japanese (Car-
dinal, 2002), Persian (Sadrzadeh, 2007), Polish
(Kislak-Malinowska, 2008), and Sanskrit (Casa-
dio and Sadrzadeh, 2014), among others. Co-
ecke et al. (2010)’s compositional distributional
model of meaning also uses pregroup calculus as
the compositional theory for grammatical types.

In the study of free word order languages (or
languages with clitics), such as Italian (Casadio,
2010), Latin (Casadio and Lambek, 2005) and
Hungarian (Sadrzadeh, 2011), a transformation
was introduced, knows as the precyclic transfor-
mation (section 3.1). This transformation was also
used for Sanskrit (Casadio and Sadrzadeh, 2014),
where generation of ungrammatical sentences was
restricted by disallowing certain transformations.

In this paper, we first establish a preliminary
pregroup grammar of Hindi and highlight the syn-
tactic constraints of the language. We then show
the shortcomings of the current word order alter-
nation mechanism. We also formally define the



126

karaka vibhakti Equivalent Case

karta
φ Nominative
ne Ergative

karam ko
Accusative

Dative
karan se Instrumental

sampradan ko, ke liye Purpose/Reason
apadaan se Source

adhikaran me, par Locative

Table 1: Case/Role Marking in Hindi

aforementioned restrictions presented for Sanskrit,
and present two other novel methods for represent-
ing restricted word order alternation, which can be
applied to other languages as well, evidenced by
the examples of prepositional phrases in English.

2 Properties of Hindi Syntax

This section details the syntactic properties of
Hindi, which include postpositional case mark-
ing (karaka and sambandha markers) in noun
phrases, lexicalized tense and aspect markers in
verb phrases, and the default word order and con-
stituent scrambling. These properties are essential
to developing a pregroup representation of Hindi
syntax. Section 2.1 highlights the word order
movement properties of Hindi.

In the Paninian linguistic tradition, noun
phrases in Hindi have a system of case marking
known as the karaka system. karaka is analogous
to a case, which is marked by a vibhakti (case
marker). The karaka is a syntacto-semantic sys-
tem which distinctly identifies the role of a noun
to a verb (Pedersen et al., 2004). Table 1 shows the
karakas, their respective markers and their analo-
gous cases.

The genitive case (called sambandh) in Hindi is
not a karaka, as it shows the relationship of one
noun to another noun. These are gender marked,
to reflect the gender of the following noun. For
instance the phrase "Neha’s ball" will be translated
as Neha kI gend.

The verb phrase consists of either a single verb
or a conjunct verb, complex verb or a light verb
complex, which usually follows the construction
"noun/adjective/verb + verbalizer" (Ahmed et al.,
2012). The tense markers and aspect markers are
separate lexical items, while the future marker is a
suffix on the trailing verb or verbalizer. The ver-
balizer interactions can be further classified based

on their behavior with aspect markers such as in-
finitive + forms of lagnaa (to begin) (Spencer
et al., 2005; Chakrabarti et al., 2008).

2.1 Restricted Word Order Alternation

Hindi follows a general SOV word order (more
specifically, S-IO-DO-V) (Seddah et al., 2010).1

In the default word order, Hindi is a head-final
with a relatively free word order (Patil et al.,
2008). However, constituents are often "mixed
up", which may be done for focus or emphasis, but
this is not always the case (Butt and King, 1996;
Kidwai, 2000).

We take an example of the sentence:
raam ne sitaa ko kitaab dii
Ram erg. Sita dat. book gave-fem.

"Ram gave the book to Sita" to explain the possi-
ble word orders (Ambati et al., 2010).

• Default word order (S-IO-DO-V) used above

• S-DO-IO-V: raam ne kitaab sitaa ko dii

• IO-S-DO-V: sitaa ko raam ne kitaab dii

• IO-DO-S-V: sitaa ko raam ne kitaab dii

• DO-S-IO-V: kitaab raam ne sitaa ko dii

• DO-IO-S-V: kitaab sitaa ko raam ne dii

Note that due to its isolating nature, the word or-
der in the constituents remains intact, which is dif-
ficult to represent. The pregroup representation
should allow only for valid constituent alternation
while keeping the word order in the constituents
in agreement with the grammar. The example pro-
vided in Section 4.3 explains this in detail.

3 Pregroup Calculus and Precyclicity

In this section, we define pregroups and pregroup
grammars. We also explore the mathematical
apparatus required to define word order change,
based upon the concept of precyclicity.

A pregroup is a partially ordered monoid 2

(P, ·, 1,→, (−)l, (−)r), which has two unary op-
erators, the left and the right adjoint such that
∀x ∈ P :

xl · x→ 1→ x · xr
1S = subject, O = object, IO = indirect object, DO = direct

object, V = verb
2A monoid is a set closed under an associative binary op-

eration. Partial order indicates that the binary relation has to
be reflexive, anti0symmetric and transitive.



127

where 1 is the identity element, the · operator
is a concatenation operator (usually not explicitly
mentioned) and the → operator indicates partial
order.

Some other properties of pregroups include:

1l = 1 = 1r

(a · b)l = bl · al (a · b)r = br · ar

(al)l = all (ar)r = arr

arl = a = alr

Adjoints are switching in nature, which means
that:

a→ b =⇒ bl → al a→ b =⇒ br → ar

The operations xl · x → 1 and x · xr → 1 are
called contractions and the operations 1 → x · xl
and 1 → xr · x are called expansions. The
monoids used for pregroup grammars are called
free pregroups, which have the property that with-
out loss of generality, contractions precede expan-
sions. This is called the switching lemma (Lam-
bek, 1999).

Pregroup calculus defines a basic type as an el-
ement a ∈ P . A simple type can be obtained by
basic types as:

alll, all, al, a, ar, arr, arrr

A compound type is a concatenation of sim-
ple types. Pregroup grammars, much like other
categorial grammars, assigns compound types to
words in a sentence. A sentence is considered
grammatical if it reduces (by concatenation with
adjoints) to the simple type of the main verb in the
sentence.

Therefore, in English a simple transitive verb
will be represented as follows:

subject verb object
n nr s ol o → s

The reductions are shown by the arcs, and the
sentence reduces to type s, the type of the main
verb.

A pregroup grammar is a quintuple G =
(Σ, P,→, s, I) such that Σ is a nonempty, finite
alphabet, (P,→) is a finite poset, s ∈ P , and I
is a finite relation between symbols from Σ and
non-empty types (on P) (Buszkowski, 2001). Con-
temporary literature symbolizes the set of all basic
types as B, and the set of all compound types as
T (B). B is a partially ordered set, while T (B) is a
free, proper pregroup over the set B.

3.1 Precyclicity in Pregroups

A detailed understanding of cyclic properties of
a pregroup can be derived from Lambek’s syn-
tactic calculus, and using a translation between
residuated monoids (the structure used in syntac-
tic calculus) and pregroups (Casadio and Lambek,
2002). Since pregroups used for language for-
malism are free, proper pregroups (Buszkowski,
2001), the classical definition of cyclicity a · b →
c =⇒ b · a→ c does not hold. However, a weak
form of cyclicity, called precyclicity, is admitted,
which has the following properties (Yetter, 1990):

pq → r =⇒ q → prr (1)
q → rp =⇒ qpr → r (2)
pq → r =⇒ q → rpl (3)
q → pr =⇒ plq → r (4)

Due to this, we obtain the following rules for
precyclicity with double adjoints (Abrusci, 1991):

1→ ab ll=⇒ 1→ ball (5)

1→ ab rr=⇒ 1→ brra (6)

Here, ball and brra are known as the precyclic
permutations of ab. Given these precyclic permu-
tations, for A,B,C ∈ P , the following precyclic
transformations are defined:

(ll)− transformation
A→ B(ab)C ;ll A→ B(ball)C

(7)

(rr)− transformation
A→ B(ab)C ;rr A→ B(brra)C

(8)

These precyclic transformations provide the fol-
lowing two equations,

prq ≤ qpl (9)
qpl ≤ prq (10)

which can be seen to be empirically derived in
clitic movement patterns in other languages, ex-
plored in Casadio and Sadrzadeh (2009).



128

4 A Preliminary Pregroup Grammar for
Hindi

This section identifies the basic types and com-
pound types used in Hindi. The basic types are
pregroup pregroup reprensentations of syntactic
features discussed in Section 2.

4.1 Basic Types
The basic types will be similar to the set of basic
types chosen for English, {π, o, p, n, s}, which are
personal pronouns, the direct object of a transitive
verb, simple predicate, noun phrase, and sentence
respectively (Lambek, 2004). The basic types for
the lexicalized case markers as well as the tense
and aspect markers have to be included, explained
below.

The basic type κi and ρ represent karaka and
sambandh markers (for the genitive case) respec-
tively. The subscript on κ denotes the case of the
noun that precedes it (refer Table 2). A simple ex-
ample of the genitive case interaction, for the noun
phrase "Ram’s brother" (raam kaa bhai), is as:

(n)(nrρ)(ρrn)→ n
The type assignment seems to imply that in the
genitive case marker is the headword of the noun
phrase raam kaa, which is not the case. Geni-
tives in Hindi are gender marked, and they agree
with the gender of the following noun phrase,
which is preserved by the current type assignment.
The type assignment is reflective of the Paninian
framework of modifier-modified relationship, in
which the genitive case marker reflects the modi-
fication of the following noun phrase (Bharati and
Sangal, 1993).

The VP consists of a verb, an optional auxil-
iary (denoted by α) and a tense marker (denoted
by τ ), in that order of occurrence. Verb transi-
tivity does affect the verb typing, but only in the
sentence. All statement verbs are given the type s.
Verbs in Hindi are unique for their tense marking
system, which include a gender-marked past tense
marker, a gender-neutral present tense marker, and
a suffixed future tense marker.

Given the semantic nature of karaka markers
in Hindi, verb transitivity raises ambiguous cases.
For example, the sentence Ram ne seb ko khaaya
and Ram ne seb khaaya both translate to "Ram ate
an apple". In this analysis, there are three distinct
cases of the use of karaka intransitive verbs are:
(1) no case markers, (2) ergative case marker on
the subject and (3) ergative case marker on the

κi karaka
κ1 karta
κ2 karma
κ3 karan
κ4 sampradan
κ5 apaadan
κ6 adhikaran

Table 2: Type given to karaka

subject and accusative case marker on the direct
object (Palmer et al., 2009).

4.2 Examples of Hindi Sentences

Given the set of basic types
{π, s, p, o, n, κi, ρ, α, τ}, simple sentences
can be typed in Hindi as follows. The toy exam-
ples chosen here are similar in to a few of the
simple sentences of the Hindi treebank (Bhatt
et al., 2009).

1. I go to school.

mein skool jaataa hun
I school go-perf.-masc. am
π o orπrsτ l τ

(π)(o)(orπrsτ l)(τ)→ s

2. Tina sang a song.

tinaaa ne gaanaa gaayaa
Tina erg. song sang-masc.
nκl1 κ1 o o

rnrs

(n κ1
l)(κ1)(o)(o

rnrs)→ s

3. Ram had hit the ball with a bat.

raam ne gend ko
Ram erg. ball acc.
nκl1 κ1 oκ

l
2 κ2

balle se maaraa thaa
bat with hit-masc. was-masc.
pκl3 κ3 p

rornrsτ l τ

(nκ1
l)(κ1)(oκ2

l)(κ2)(pκ3
l)(κ3)(p

rornr

s τ l)( τ)→ s



129

4.3 Consequences of Restricted Word Order
Alternation

In order to apply precyclicity rules,3 the example
chosen is a simple transitive verb from the sen-
tence "Tina sang a song", which has been typed
above in section 4.2. As above, the arcs denote
a reduction, while the underline shows the argu-
ments of the precyclic transformation.

4.
gaanaa tina ne gaayaa

song Tina erg. sang-masc.

(o)(nκ1
l)(κ1)(o

rnrs)
→ (o)(n)(ornrs)
;ll (o)(n)(nrols)
→ (o)(ols)

;rr (ols)rr(o)
→ (orsrr)(o)
;ll (srrol)(o)
→ srr
;ll s

An example of a sentence with two movements
is as follows, for the sentence "Ram had hit the
ball with a bat".

5.

balle se gend ko
bat with ball acc.

raam ne maaraa thaa
Ram erg. hit-masc. was-masc.

(pκ3
l)(κ3)(oκ2

l)(κ2)(nκ1
l)(κ1)(p

rornrs
τ l)(τ)

→ (p)(o)(n)(prornrs)
;ll (p)(o)(n)(prnrols)

;ll (p)(o)(n)(nrplols)
→ (p)(o)(plols)

;rr (p)(o)(orpls)
→ (p)(pls)

;rr (pls)rr(p)
→ (prsrr)(p)
;ll (srrpl)(p)
→ srr
;ll s

Note that in the first example, the movement was
gaanaa and tinaa ne, and not just tinaa; simi-
larly, in the second sentence, the constituents be-
ing shuffled are balle se and gend ko. Hindi allows

3 The procedure for applying the rules has been as de-
scribed by Casadio and Sadrzadeh (2014) for Sanskrit.

only constituent scrambling, the pregroup gram-
mar has to account for this restriction. For exam-
ple, the following construction should NOT be al-
lowed:

6. *
tinaa gaanaa ne gaayaa
Tina song erg. sang
nκl1 o κ1 o

rnrs

(nκl1)(o)(κ1)(o
rnrs)

;ll (nκ1
l)(κ1)(o

ll)(ornrs)
→ (n)(oll)(ornrs)
;rr (o)(n)(ornrs)
;ll (o)(n)(nrols)
→ (o)(ols)

;rr (ols)rr(o)
→ (orsrr)(o)
;ll (srrol)(o)
→ srr
;ll s

5 Restricting Word Movement

As seen in section 4, the current pregroup gram-
mar rules allow for the reduction of sentences
which are disallowed by the grammar. This sec-
tion explains the methods taken to restrict word
movement, in order to allow only constituent
scrambling, keeping the order of the words within
a constituent constant.

5.1 Pregroup Grammar Rules

Pregroup grammar rules for restricting word order
movement have been briefly discussed in (Casa-
dio, 2004) and (Casadio and Sadrzadeh, 2014).
Here, instead of treating restrictive rules as an ex-
ception, we treat it as a part of the pregroup frame-
work, by creating a formal representation of these
restrictions.

For example, a word order rule in Hindi syntax
is "The alternation of ANY phrase with a karaka
marker is disallowed" (Bopche et al., 2012), it may
be represented in the following way:

∀x ∈ B
(x)(κi) 6; ll(κi)(xll)
(x)(κi) 6; rr(κrri )(x)

where, as discussed in Section 3, B is the set of
all basic types in the language. A similar set of



130

rules can be created for alternation in verb con-
stituents, where no word order alternation is al-
lowed between a verb and its aspect marker, and
between the aspect and the tense marker, mirror-
ing the rules of the language.

(s)(τ) 6; ll(τ)(sll) (s)(τ) 6; rr(τ rr)(s)
(τ)(α) 6; ll(α)(τ ll) (τ)(α) 6; rr(αrr)(τ)
(s)(α) 6; ll(α)(sll) (s)(α) 6; rr(αrr)(s)

Therefore, in the example tinaa gaanaa ne
gaayaa (Tina song erg. sang) presented above, we
have:

(nκl1)(o)(κ1)(o
rnrs)

6; ll(nκ1l)(κ1)(oll)(ornrs)

Thus the sentence will not reduce to s as it is
deemed ungrammatical.

5.2 Selective Transformation

Selective transformation is a procedure that dis-
allows the precyclic transformation of a step in
the reduction, provided that some elements of the
pregroup representation belong to a set that does
not allow precyclic transformation, hence allow-
ing only a selective application of the precyclic
conversion rules.

As discussed in section 3, B is the set of all ba-
sic types in the language, and T (B) is the free
pregroup over that set. In order to apply selec-
tive transformation, two sets The sets BT and BNT
are defined, such that the set of all basic types
B = BT ∪ BNT , where T (BNT ) is a free, proper,
non-precyclic pregroup, while T (BT ) is a proper,
free, precyclic pregroup. The union of a precyclic
and a non-precyclic pregroup is a non-precyclic
pregroup, and no other properties of the pregroup
are affected (Refer to the Appendix for the proof).

Within the examples seen above, the basic types
of the karaka marker and sambandh marker in the
noun phrase, and the tense and aspect marker in
the verb phrase should not ll- or rr-transformed,
while the personal pronoun, sentence, predicate,
noun phrase, and direct object types are allowed
to transform. Therefore, {κi, ρ, α, τ} ∈ BNT and
{π, s, p, o, n} ∈ BT . Therefore, to apply transfor-
mation rules, only the types in the sentence should
be those belonging in BT . Therefore, in the exam-
ple tinaa ne gaanaa gaayaa (Tina erg. song sang),
we have:

(o)(nκ1
l)(κ1 )(o

rnrs)
→ (o)(n)(ornrs)

where all the elements in the second line belong to
BT , which allows the transformations and reduc-
tions:

;ll (o)(n)(nrols)
→ (o)(ols)

;rr (ols)rr(o)
→ (orsrr)(o)
;ll (srrol)(o)
→ srr
;ll s

while in the example of the construction tinaa
gaanaa ne gaayaa (Tina song erg. sang) presented
above, we have:

(nκl1)(o)(κ1)(o
rnrs)

which is not reducible as the transformations can-
not be applied. Therefore ungrammatical reduc-
tions are disallowed.4

5.3 Two-Step Reduction
As mentioned above, Hindi allows constituent
scrambling as opposed to word order scrambling.
Therefore the reduction of a sentence can be de-
constructed into two steps, the reduction of con-
stituents, followed by reduction of the sentence.
This process guarantees that ungrammatical re-
ductions will not take place.

For the two-step reductions, first the "con-
stituent profile" has to be defined. A constituent
profile is a general construction to which con-
stituents in Hindi can be mapped. Each constituent
profile has a reduction which can be applied to a
sentence. A constituent profile is specific to the
type of phrase expected. A sequence of words
which does not follow any constituent profile can-
not be reduced. This will disallow the reduction of
ungrammatical sentences.

Table 3 shows the constituent profiles for the ex-
amples provided above. The [x]+ represents one
or more elements of the basic type x. Note that
there is no need for a transformation in any of the
constituent profiles, as it reduces to the constituent
head form automatically. The constituents can be
nested, and the constituent profile reflects this. A
sentence may be defined as a specific case of a
constituent profile, as it is the only profile which
allows transformations before reductions.

4Refer to Appendix for mathematical correctness of se-
lective transformation.



131

Constituent Type Constituent Profile

Subject (xκl1)(κ1)→ x for x ∈ {π, n}

Direct Object (oκl2)(κ2)→ o

Predicate (pκli)(κi)→ p for i ∈ [3, 6]

Nominal Relations
(ρ)(ρrx)→ x for x ∈ {n, o, p}

(n)(nrρ)(ρrx)→ x for x ∈ {n, o, p}

Verb Forms
([xr]+sαl)(ατ l)(τ)→ ([xr]+s) for [x] ∈ {n, o, p}

([xr]+sτ l)(τ)→ ([xr]+s) for [x] ∈ {n, o, p}

Sentence (n)([x])+([xr]+nrs)→ s for [x] ∈ {o, p}

Table 3: Constituent Profiles for Hindi

Two-step reduction can be achieved as follows:

• Type the sentence: This allows the recog-
nition of all possible constituent profiles, as
well as conflicts with the constituent profiles.

• Isolate and reduce constituents: The con-
stituents are mapped to the constituent pro-
files, and reduced accordingly.

• Replace reduced forms in the sentence:
The constituents, once reduced, are placed
back into the order in which they occurred
in the original sentence. The sentence form
should resemble the "sentence" profile.

• Transform and reduce: The sentence is
then transformed and reduced according to
the rules of transformation, as has been done
above.

An example of two-step reduction for the sen-
tence raam ne gend ko balle se maara thaa (Ram
hit the ball with a bat) would be as follows:

Step 1:

(nκl1)(κ1) (oκ
l
2)(κ2) (pκ

l
3)(κ3)(p

rornrsτ l)(τ)

Step 2: (nκl1)(κ1) → n, according to the sub-
ject constituent profile. Similarly, (oκl2)(κ2) → o
and (pκl3)(κ3) → p are also valid reductions ac-
cording to the object and predicate profiles. There
is also the ([xr]+nrsτ l)(τ) → ([xr]+nrs), which
is a valid verb form reduction.

Step 3: (n)(o)(p)(prornrs) is obtained, which
fits the sentence profile.

Step 4: (n)(o)(p)(prornrs) → s, which is the
required reduction

An incorrect reduction can be recognized eas-
ily. Given the example that was provided in Sec-
tion 4.2 tinaa gaanaa ne gaayaa. After step 1, the
following is obtained:

(nκl1)(o)(κ1)(o
rnrs)

which cannot be found in any constituent profile.
Therefore, the sentence is ungrammatical, and will
appropriately not be represented by the grammar

6 Word Order Alternation in English

Lambek’s work in English type grammar (Lam-
bek, 2004) and the work that has followed (Preller,
2007; Stabler, 2008) have not dealt with word
order alternation in English yet. While English
is a relatively fixed word order language, note
that prepositional phrases and adverbial phrases
are relatively free, especially with intransitive
verbs. Therefore, while the default order remains
"Subject-Adverb-Verb-PP", it can be seen in the
following sentences that this word order can also
change.

• Default (S-Adv-V-PP): "I quickly ran into the
fields."

• PP-S-Adv-V: "Into the fields, I ran quickly."

• Adv-S-V-PP: "Quickly I ran into the fields."

• S-V-Adv-PP: "I ran quickly into the fields."

• S-V-PP-Adv: "I ran into the fields quickly."



132

To develop a robust representation of English
word order, first, the initial word order constraints
must be noted. The standard word order in En-
glish is SVO, which reduces to SV in the case of
intransitive verbs, which is the focus of this sam-
ple. We examine the word order alternation in this
fragment of English, using the methods explored
in the paper.

First, the set of basic types {π, o, s, n, p} has to
be expanded to include types for adverbial phrase
A and type for prepositional phrase ρ. The sub-
scripts which characterize gender, number, per-
son or tense have been ignored for this example.
The determiner is considered a part of the noun
phrase. Therefore, the sample sentence, in the de-
fault word order, can be typed as follows ("the
fields" has been typed p):

7.
I quickly ran into the fields.
π A Arπrsρl ρpl p

(π)(A)(Arπrsρl)(ρpl)(p)→ s

This reduction is reasonably straightforward.
On changing the word order, precyclic transforma-
tions are applicable, so a similar reduction for the
statement, "Quickly I ran into the fields", can be
handled as follows:

8.
Quickly I ran into the fields.
A π Arπrsρl ρpl p

(A)(π)(Arπrsρl)(ρ pl)(p)
→ (A)(π)(Arπrs)
;ll (A)(π)(πrAls)
→ (A)(Als)

;rr (Arsrr)(A)
;ll (srrAl)(A) ;ll s

The sentence "Quickly I ran the fields into" is
an ungrammatical sentence and should not be re-
ducible by the grammar. However:

9. *
Quickly I ran the fields into.
A π Arπrsρl p ρpl

(A)(π)(Arπrsρl)(p)(ρpl)

;rr (A)(π)(Arπrsρl)(p)(prρ)

→ (A)(π)(Arπrs)
;ll (A)(π)(πrAls)
→ (A)(Als)

;rr (Arsrr)(A)
;ll (srrAl)(A ) ;ll s

Therefore, the methods discussed in section 5 can
be used to disallow this reduction.

• Using the method of restriction of pregroup
grammar rules, the transformation (ρpl) ;rr

(prρ) is disallowed. So the order of the
prepositional phrase and its predicate remains
the same, disallowing an ungrammatical re-
duction.

• Two-step reduction can be used to establish
the prepositional phrase profile as (ρpl)(p),
and the sentence does not follow this profile.
Therefore, further reduction is disallowed.

• Under selective transformation, the only ba-
sic type that can belong to BNT is p. There-
fore, its alternation with the type ρ is consid-
ered ungrammatical and the sentence is not
reduced.

Hence, all three methods can be used to disallow
the representation and reduction of ungrammatical
sentences.

7 Conclusion

This paper is an attempt to formalize the syntac-
tic notion of word order alternation using pre-
group grammars by expanding on the develop-
ments in the current literature and proposing two
novel methods of representing restrictions in word
movement. The inspiration for this development
stems from the syntactic structure of Hindi, an iso-
lating free word order language which allows only
for constituent scrambling, keeping the order of
the words in the constituents the same.

In order to express the syntactic properties of
Hindi, a preliminary pregroup grammar for Hindi
has also been established. This pregroup grammar
has been developed in a manner similar to their de-
velopment in other languages, with the establish-
ment of basic types and examples of sentences rep-
resented using the grammar. Further work can be
done in the development of the pregroup grammar
of Hindi, in modeling agreement rules and other
aspects of the Hindi syntax.

The methods proposed include the expansion
and formal representation of the method used for
Sanskrit, as well as two novel approaches which
are selective transformation and two-step reduc-
tion. Using examples in the paper, these meth-
ods have been applied to prove their effectiveness,



133

and an example has also been taken from English,
which does the same.

Future work in this direction could include de-
velopment of pregroup representations of common
cross-lingual syntactic phenomena, such as agglu-
tenation, that would make the adaptation of pre-
groups to other languages easier. A more thor-
ough grammar, based on other properties such as
subject-verb agreement, verb complements and so
on are other directions of developing the work.

Acknowledgements We sincerely thank the in-
puts and suggestions of Dr. Marie-Catherine de
Marneffe. We would also like to acknowledge and
thank the anonymous reviewers for their time and
effort.

References
V Michele Abrusci. 1991. Phase semantics and se-

quent calculus for pure noncommutative classical
linear propositional logic. The Journal of Symbolic
Logic, 56(4):1403–1451.

Tafseer Ahmed, Miriam Butt, Annette Hautli, and Se-
bastian Sulger. 2012. A reference dependency bank
for analyzing complex predicates. In LREC.

Bharat Ram Ambati, Samar Husain, Joakim Nivre, and
Rajeev Sangal. 2010. On the role of morphosyntac-
tic features in Hindi dependency parsing. In Pro-
ceedings of the NAACL HLT 2010 First Workshop
on Statistical Parsing of Morphologically-Rich Lan-
guages, pages 94–102. Association for Computa-
tional Linguistics.

Daniele Bargelli and Joachim Lambek. 2001a. An
algebraic approach to French sentence structure.
In International Conference on Logical Aspects of
Computational Linguistics, pages 62–78. Springer.

Donna Bargelli and Joachim Lambek. 2001b. An al-
gebraic approach to Arabic sentence structure. Lin-
guistic Analysis, 31(3):301–315.

Akshar Bharati and Rajeev Sangal. 1993. Parsing free
word order languages in the Paninian framework. In
Proceedings of the 31st annual meeting on Associa-
tion for Computational Linguistics, pages 105–111.
Association for Computational Linguistics.

Rajesh Bhatt, Bhuvana Narasimhan, Martha Palmer,
Owen Rambow, Dipti Sharma, and Fei Xia. 2009.
A multi-representational and multi-layered treebank
for hindi/urdu. In Proceedings of the Third Linguis-
tic Annotation Workshop (LAW III), pages 186–189.

Lata Bopche, Gauri Dhopavkar, and Manali Kshir-
sagar. 2012. Grammar checking system using rule
based morphological process for an indian language.
In Global Trends in Information Systems and Soft-
ware Applications, pages 524–531. Springer.

Wojciech Buszkowski. 2001. Lambek grammars based
on pregroups. In International Conference on Logi-
cal Aspects of Computational Linguistics, pages 95–
109. Springer.

Wojciech Buszkowski. 2002. Cut elimination for the
Lambek calculus of adjoints.

Wojciech Buszkowski. 2003. Sequent systems for
compact bilinear logic. Mathematical Logic Quar-
terly: Mathematical Logic Quarterly, 49(5):467–
474.

Miriam Butt and Tracy Holloway King. 1996. Struc-
tural topic and focus without movement. In Pro-
ceedings of the First LFG Conference. Stanford:
CSLI Publications.

Kumi Cardinal. 2002. An algebraic study of Japanese
grammar. Ph.D. thesis, McGill University Mon-
treal.

Claudia Casadio. 2004. Pregroup grammar. theory and
applications.

Claudia Casadio. 2010. Agreement and cliticization in
Italian: a pregroup analysis. In International Con-
ference on Language and Automata Theory and Ap-
plications, pages 166–177. Springer.

Claudia Casadio and Jim Lambek. 2005. A compu-
tational algebraic approach to latin grammar. Re-
search on Language and Computation, 3(1):45.

Claudia Casadio and Joachim Lambek. 2002. A tale of
four grammars. Studia Logica, 71(3):315–329.

Claudia Casadio and Mehrnoosh Sadrzadeh. 2009.
Clitic movement in pregroup grammar: a cross-
linguistic approach. In International Tbilisi Sympo-
sium on Logic, Language, and Computation, pages
197–214. Springer.

Claudia Casadio and Mehrnoosh Sadrzadeh. 2014.
Word order alternation in sanskrit via precyclicity
in pregroup grammars. In Horizons of the Mind.
A Tribute to Prakash Panangaden, pages 229–249.
Springer.

Debasri Chakrabarti, Hemang Mandalia, Ritwik Priya,
Vaijayanthi Sarma, and Pushpak Bhattacharyya.
2008. Hindi compound verbs and their automatic
extraction. Coling 2008: Companion volume:
Posters, pages 27–30.

Bob Coecke, Mehrnoosh Sadrzadeh, and Stephen
Clark. 2010. Mathematical foundations for a com-
positional distributional model of meaning. arXiv
preprint arXiv:1003.4394.

Julia Hockenmaier and Mark Steedman. 2007. Ccg-
bank: a corpus of ccg derivations and dependency
structures extracted from the penn treebank. Com-
putational Linguistics, 33(3):355–396.



134

Ayesha Kidwai. 2000. XP-adjunction in Universal
Grammar: Scrambling and binding in Hindi-Urdu.
Oxford University Press on Demand.

Aleksandra Kislak-Malinowska. 2008. Polish lan-
guage in terms of pregroups. Recent Computational
Algebraic Approaches to Morphology and Syntax.
Polimetrica, Milan, pages 145–172.

J Lambek. 1999. Type grammar revisited. Lecture
notes in computer science, pages 1–27.

Joachim Lambek. 1958. The mathematics of sentence
structure. The American Mathematical Monthly,
65(3):154–170.

Joachim Lambek. 1997. Type grammar revisited.
In International Conference on Logical Aspects of
Computational Linguistics, pages 1–27. Springer.

Joachim Lambek. 2000. Type grammar meets German
word order. Theoretical Linguistics, 26(1-2):19–30.

Joachim Lambek. 2004. A computational algebraic ap-
proach to english grammar. Syntax, 7(2):128–147.

Richard T Oehrle, Emmon Bach, and Deirdre Wheeler.
2012. Categorial grammars and natural language
structures, volume 32. Springer Science & Business
Media.

Martha Palmer, Rajesh Bhatt, Bhuvana Narasimhan,
Owen Rambow, Dipti Misra Sharma, and Fei Xia.
2009. Hindi syntax: Annotating dependency, lexi-
cal predicate-argument structure, and phrase struc-
ture. In The 7th International Conference on Natu-
ral Language Processing, pages 14–17.

Umesh Patil, Gerrit Kentner, Anja Gollrad, Frank Kü-
gler, Caroline Féry, and Shravan Vasishth. 2008. Fo-
cus, word order and intonation in Hindi. Journal of
South Asian Linguistics, 1(1).

Mark Pedersen, Domenyk Eades, Samir K Amin, and
Lakshmi Prakash. 2004. Relative clauses in Hindi
and Arabic: A Paninian dependency grammar anal-
ysis. In Proceedings of the Workshop on Recent Ad-
vances in Dependency Grammar.

Anne Preller. 2007. Toward discourse representation
via pregroup grammars. Journal of Logic, Language
and Information, 16(2):173–194.

Mehrnoosh Sadrzadeh. 2007. Pregroup analysis of Per-
sian sentences.

Mehrnoosh Sadrzadeh. 2011. An adventure into hun-
garian word order with cyclic pregroups. Mod-
els, Logics, and Higher-Dimensional Categories, a
tribute to the work of Michael Makkai, Centre de
Recherches Mathématiques. Proceedings and Lec-
ture Notes, 53:263–275.

Djamé Seddah, Sandra Koebler, and Reut Tsarfaty.
2010. Proceedings of the NAACL HLT 2010 first
workshop on statistical parsing of morphologically-
rich languages. In Proceedings of the NAACL

HLT 2010 First Workshop on Statistical Parsing of
Morphologically-Rich Languages.

Andrew Spencer, Miriam Butt, and Tracy Holloway
King. 2005. Case in Hindi. In Proceedings of LFG,
volume 5, pages 429–446.

Edward P Stabler. 2008. Tupled pregroup gram-
mars. Computational and Algebraic Approaches to
Natural Language, edited by Claudia Casadio and
Joachim Lambek. Milano, Italia: Polimetrica.

David N. Yetter. 1990. Quantales and (noncommuta-
tive) linear logic. The Journal of Symbolic Logic,
55(1):41–64.

A Appendix: The Mathematics of
Selective Transformation

The operations between the sets T (BT ) and
T (BNT ) that were implemented in the paper in
Section 5.2 and the non-precyclic nature of T (B)
are explained here.

Precyclic transformation was introduced in Yet-
ter (1990), for relaxing the conditions on the
cut theorem on one sided sequent calculus for
pure non-commutative classical linear proposi-
tional logic. The original rules of precyclic trans-
formation:

` Γ, A
` A⊥⊥,Γ
` A,Γ
` Γ,⊥⊥A

The calculus for which this rule was applicable
was called SPNCL’, while the calculus where this
rule was not applicable was SPNCL. In order to
understand the affect of this theorem, note the cut
theorem in SPNCL:

` Γ1, A,Γ2 ` ∆1, A⊥,∆2
` ∆1,Γ1,∆2,Γ2

` Γ1,⊥A,Γ2 ` ∆1, A,∆2
` ∆1,Γ1,∆2,Γ2

if ∆1 = ∅ or Γ2 = ∅. And the cut theorem in
SPNCL’, due to these rules, was reduced to:

` Γ, A ` ∆, A⊥

` ∆,Γ
` Γ,⊥A ` ∆, A

` ∆,Γ

Precyclic pregroups are a result of a bilinear
mapping of this reduction in SPNCL’ to pre-
groups, using the interpretation map of compact

http://www.jstor.org/stable/2274953
http://www.jstor.org/stable/2274953


135

bilinear logic (Buszkowski, 2003). However, note
that this reduction was made to relax the con-
straints on cut theorem in SPNCL. Buszkowski
(2002) notes that pregroups are cut eliminated,
which means that all properties that can be proved
using cut theorem can be proved without it. Due
to this cut-elimination, in a pregroup mapped from
SPNCL and one mapped from SPNCL’, the ad-
joint behaviour is identical and therefore their
concatenation and reduction do not undergo any
change.

Now, the non-precyclic nature of the pregroup
T (B) is to be proved. T (B) has been defined
as T (BT ) ∪ T (BNT ), where T (BT ) is the pre-
group that allows for precylic transformations and
T (BNT ) is the pregroup that does not allow the
same. Note that both SPNCL and SPNCL’ are de-
fined over the same set of sequents, but are de-
fined using different formulae. For a formula A of
L (SPNCL) and formula B of L (SPNCL’), the
cut theorem in SPNCL’ will not be applicable for
a proof with bothA andB, as the rule (−)⊥⊥ can-
not be used for formulae of SPNCL. Hence, given
the compact map from bi-linear logic to pregroups,
the analogous ll- and rr-transformations become
inapplicable over a pregroup which has any ele-
ment that does not obey precyclicity. Therefore,
the union of a precyclic and a non-precyclic pre-
group is a non-precyclic pregroup.


