



















































Open Vocabulary Learning for Neural Chinese Pinyin IME


Proceedings of the 57th Annual Meeting of the Association for Computational Linguistics, pages 1584–1594
Florence, Italy, July 28 - August 2, 2019. c©2019 Association for Computational Linguistics

1584

Open Vocabulary Learning for Neural Chinese Pinyin IME

Zhuosheng Zhang1,2, Yafang Huang1,2, Hai Zhao1,2,∗
1Department of Computer Science and Engineering, Shanghai Jiao Tong University

2Key Laboratory of Shanghai Education Commission for Intelligent Interaction
and Cognitive Engineering, Shanghai Jiao Tong University, Shanghai, China

{zhangzs, huangyafang}@sjtu.edu.cn, zhaohai@cs.sjtu.edu.cn

Abstract

Pinyin-to-character (P2C) conversion is the
core component of pinyin-based Chinese in-
put method engine (IME). However, the con-
version is seriously compromised by the am-
biguities of Chinese characters corresponding
to pinyin as well as the predefined fixed vocab-
ularies. To alleviate such inconveniences, we
propose a neural P2C conversion model aug-
mented by an online updated vocabulary with
a sampling mechanism to support open vocab-
ulary learning during IME working. Our ex-
periments show that the proposed method out-
performs commercial IMEs and state-of-the-
art traditional models on standard corpus and
true inputting history dataset in terms of multi-
ple metrics and thus the online updated vocab-
ulary indeed helps our IME effectively follows
user inputting behavior.

1 Introduction

Chinese may use different Chinese characters up
to 20,000 so that it is non-trivial to type the Chi-
nese character directly from a Latin-style key-
board which only has 26 keys (Zhang et al.,
2018a). The pinyin as the official romanization
representation for Chinese provides a solution that
maps Chinese character to a string of Latin al-
phabets so that each character has a letter writing
form of its own and users can type pinyin in terms
of Latin letters to input Chinese characters into a
computer. Therefore, converting pinyin to Chinese
characters is the most basic module of all pinyin-
based IMEs.

As each Chinese character may be mapped to a
pinyin syllable, it is natural to regard the Pinyin-
to-Character (P2C) conversion as a machine trans-

∗ Corresponding author. This paper was partially sup-
ported by National Key Research and Development Program
of China (No. 2017YFB0304100) and Key Projects of Na-
tional Natural Science Foundation of China (U1836222 and
61733011).

lation between two different languages, pinyin se-
quences and Chinese character sequences (namely
Chinese sentence). Actually, such a translation in
P2C procedure is even more straightforward and
simple by considering that the target Chinese char-
acter sequence keeps the same order as the source
pinyin sequence, which means that we can decode
the target sentence from left to right without any
reordering.

Meanwhile, there exists a well-known challenge
in P2C procedure, too much ambiguity mapping
pinyin syllable to character. In fact, there are only
about 500 pinyin syllables corresponding to ten
thousands of Chinese characters, even though the
amount of the commonest characters is more than
6,000 (Jia and Zhao, 2014). As well known, the
homophone and the polyphone are quite common
in the Chinese language. Thus one pinyin may cor-
respond to ten or more Chinese characters on the
average.

However, pinyin IME may benefit from decod-
ing longer pinyin sequence for more efficient in-
putting. When a given pinyin sequence becomes
longer, the list of the corresponding legal character
sequences will significantly reduce. For example,
IME being aware of that pinyin sequence bei jing
can be only converted to either 背景(background)
or北京(Beijing) will greatly help it make the right
and more efficient P2C decoding, as both pinyin
bei and jing are respectively mapped to dozens of
difference single Chinese characters. Table 1 illus-
trates that the list size of the corresponding Chi-
nese character sequence converted by pinyin se-
quence bei jing huan ying ni (北京欢迎你, Wel-
come to Beijing) is changed according to the dif-
ferent sized source pinyin sequences.

To reduce the P2C ambiguities by decoding
longer input pinyin sequence, Chinese IMEs may
often utilize word-based language models since
character-based language model always suffers



1585

Pinyin seq. con- bei jing huan ying ni
sists of 1 syllable 被 敬 环 英 你你你

北北北 静 换 颖 睨
呗 井 还 迎迎迎 逆
杯 京京京 幻 影 拟
背 经 欢欢欢 应 尼

Pinyin seq. con- bei jing huan ying ni
sists of 2 syllables 北北北京京京 幻影 你

背景 欢欢欢迎迎迎 你

Pinyin seq. con- bei jing huan ying ni
sists of 5 syllables 北北北京京京欢欢欢迎迎迎你你你

Table 1: The shorter the pinyin sequence is, the more
character sequences will be mapped.

from the mapping ambiguity. However, the ef-
fect of the work in P2C will be undermined with
quite restricted vocabularies. The efficiency of
IME conversion depends on the sufficiency of the
vocabulary and previous work on machine transla-
tion has shown a large enough vocabulary is nec-
essary to achieve good accuracy (Jean et al., 2015).
In addition, some sampling techniques for vocab-
ulary selection are proposed to balance the com-
putational cost of conversion (Zhou et al., 2016;
Wu et al., 2018). As IMEs work, users inputting
style may change from time to time, let alone di-
verse user may input quite diverse contents, which
makes a predefined fixed vocabulary can never be
sufficient. For a convenient solution, most com-
mercial IMEs have to manually update their vo-
cabulary on schedule. Moreover, the training for
word-based language model is especially difficult
for rare words, which appear sparsely in the cor-
pus but generally take up a large share of the dic-
tionary.

To well handle the open vocabulary learning
problem in IME, in this work, we introduce an
online sequence-to-sequence (seq2seq) model for
P2C and design a sampling mechanism utilizing
our online updated vocabulary to enhance the con-
version accuracy of IMEs as well as speed up the
decoding procedure. In detail, first, a character-
enhanced word embedding (CWE) mechanism is
proposed to represent the word so that the pro-
posed model can let IME generally work at the
word level and pick a very small target vocabu-
lary for each sentence. Second, every time the
user makes a selection contradicted the prediction
given by the P2C conversion module, the mod-

ule will update the vocabulary accordingly. Our
evaluation will be performed on three diverse cor-
pora, including two which are from the real user
inputting history, for verifying the effectiveness of
the proposed method in different scenarios.

The rest of the paper is organized as follows:
Section 2 discusses relevant works. Sections 3
and 4 introduce the proposed model. Experimental
results and the model analysis are respectively in
Sections 5 and 6. Section 7 concludes this paper.

2 Related Work

To effectively utilize words for IMEs, many nat-
ural language processing (NLP) techniques have
been applied. Chen (2003) introduced a joint
maximum n-gram model with syllabification for
grapheme-to-phoneme conversion. Chen and Lee
(2000) used a trigram language model and incor-
porated word segmentation to convert pinyin se-
quence to Chinese word sequence. Xiao et al.
(2008) proposed an iterative algorithm to discover
unseen words in corpus for building a Chinese
language model. Mori et al. (2006) described a
method enlarging the vocabulary which can cap-
ture the context information.

For either pinyin-to-character for Chinese IMEs
or kana-to-kanji for Japanese IMEs, a few lan-
guage model training methods have been devel-
oped. Mori et al. (1998) proposed a probabilis-
tic based language model for IME. Jiampojamarn
et al. (2008) presented online discriminative train-
ing. Lin and Zhang (2008) proposed a statistic
model using the frequent nearby set of the target
word. Chen et al. (2012) used collocations and k-
means clustering to improve the n-pos model for
Japanese IME. Jiang et al. (2007) put forward a
PTC framework based on support vector machine.
Hatori and Suzuki (2011) and Yang et al. (2012)
respectively applied statistic machine translation
(SMT) to Japanese pronunciation prediction and
Chinese P2C tasks. Chen et al. (2015); Huang
et al. (2018) regarded the P2C as a translation be-
tween two languages and solved it in neural ma-
chine translation framework.

All the above-mentioned work, however, still
rely on a predefined fixed vocabulary, and IME
users have no chance to refine their own dictionary
through a user-friendly way. Zhang et al. (2017) is
mostly related to this work, which also offers an
online mechanism to adaptively update user vo-
cabulary. The key difference between their work



1586

and ours lies on that this work presents the first
neural solution with online vocabulary adaptation
while (Zhang et al., 2017) sticks to a traditional
model for IME.

Recently, neural networks have been adopted
for a wide range of tasks (Li et al., 2019; Xiao
et al., 2019; Zhou and Zhao, 2019; Li et al.,
2018a,b). The effectiveness of neural models de-
pends on the size of the vocabulary on the target
side and previous work has shown that vocabular-
ies of well over 50K word types are necessary to
achieve good accuracy (Jean et al., 2015) (Zhou
et al., 2016). Neural machine translation (NMT)
systems compute the probability of the next tar-
get word given both the previously generated tar-
get words as well as the source sentence. Estimat-
ing this conditional distribution is linear in the size
of the target vocabulary which can be very large
for many translation tasks. Recent NMT work has
adopted vocabulary selection techniques from lan-
guage modeling which do not directly generate the
vocabulary from all the source sentences (L’Hostis
et al., 2016; Wu et al., 2018).

The latest studies on deep neural network prove
the demonstrable effects of word representation
on various NLP tasks, such as language model-
ing (Verwimp et al., 2017), question answering
(Zhang and Zhao, 2018; Zhang et al., 2018b), di-
alogue systems (Zhang et al., 2018c; Zhu et al.,
2018) and machine translation (Wang et al.,
2017a,b, 2018; Wang et al., 2018; Chen et al.,
2018). As for improved word representation in
IMEs, Hatori and Suzuki (2011) solved Japanese
pronunciation inference combining word-based
and character-based features within SMT-style
framework to handle unknown words. Neubig
et al. (2013) proposed character-based SMT to
handle sparsity. Okuno and Mori (2012) in-
troduced an ensemble model of word-based and
character-based models for Japanese and Chinese
IMEs. All the above-mentioned methods used
similar solution about character representation for
various tasks.

Our work takes inspiration from (Luong and
Manning, 2016) and (Cai et al., 2017). The for-
mer built a novel representation method to tackle
the rare word for machine translation. In detail,
they used word representation network with char-
acters as the basic input units. Cai et al. (2017)
presented a greedy neural word segmenter with
balanced word and character embedding inputs. In

the meantime, high-frequency word embeddings
are attached to character embedding via average
pooling while low-frequency words are computed
from character embedding. Our embeddings also
contain different granularity levels of embedding,
but the word vocabulary is capable of being up-
dated in accordance with users’ inputting choice
during IME working. In contrast, (Cai et al., 2017)
build embeddings based on the word frequency
from a fixed corpus.

3 Our Models

For a convenient reference, hereafter a character
in pinyin language also refers to an independent
pinyin syllable in the case without causing confu-
sion, and word means a pinyin syllable sequence
which may correspond to a true word written in
Chinese characters.

As illustrated in Figure 1, the core of our hybrid
P2C is a seq2seq model (Cho et al., 2014) in terms
of the encoder-decoder framework. Given a pinyin
sequence X and a Chinese character sequence Y ,
the encoder of our neural P2C model utilizes a
network for pinyin representation in which both
word-level and character-level embedding are ex-
ploited, and the decoder is to generate the Chinese
target sequence which maximizes P (Y |X) using
maximum likelihood training.

Starting from an initial vocabulary with indica-
tor from each turn of the user inputting choice, the
online learning module helps update the word vo-
cabulary by minimizing empirical prediction risk.

3.1 Pinyin-Character Parallel Corpus

Pinyin-character parallel corpus can be conve-
niently generated by automatically annotating
Chinese character text with pinyin as introduced
in (Yang et al., 2012). Using standard Chinese
word segmentation methods, we may segment
both character and pinyin text into words with the
same segmentation for each sentence pair.

3.2 Encoder-Decoder

The encoder is a bi-directional long short-
term memory (LSTM) network (Hochreiter and
Schmidhuber, 1997). The vectorized inputs are
fed to forward and backward LSTMs to obtain the
internal representation of two directions. The out-
put for each input is the concatenation of the two
vectors from both directions. Our decoder is based
on the global attentional models proposed by Lu-



1587

Character-enhanced word embeddings

Decoder

Encoder
Attention Layer

h

c

h

h

y

V
oc
ab
ul
ar
y

&

BiGRU

WE

...

北京欢迎你
(Welcome to Beijing)

北
north

京
capital

欢
fun

迎
welcome

你
you

CE

CWE for 北京欢迎你

Add new words

北
京
人
, b
ei
jin
gr
en

⋯

北
, b
ei

被
, b
ei

北
京
, b
ei
jin
g

备
选
, b
ei
xu
an

背
景
, b
ei
jin
g

北
, b
ei

被
,b
ei

北
京
 ,b
ei
jin
g

⋯
备
选
 ,b
ei
xu
an

Input 
Vectors pinyin embeddings

背
景
, b
ei
jin
g

s

t t

t

t

⋯

北
京
人
,b
ei
jin
gr
en

⋯

Figure 1: Architecture of the proposed Neural-based Chinese Input Method

hs

ct

yt
ht

at ht

Figure 2: Architecture of the attention-based encoder-
decoder model.

ong et al. (2015) to consider the hidden states
of the encoder when deriving the context vector.
The probability is conditioned on a distinct con-
text vector for each target word. The context vec-
tor is computed as a weighted sum of previous hid-
den states. The probability of each candidate word
as being the recommended one is predicted using
a softmax layer over the inner-product between
source embeddings and candidate target charac-
ters. Figure 2 shows the architecture.

4 Online P2C Learning with Vocabulary
Adaptation

As the core of Chinese IME, P2C conversion
has been formulized into a seq2seq model as
machine translation between pinyin and charac-
ter sequences, there are still a few differences
between P2C converting and standard machine
translation. 1) Considering both pinyin syllables
and Chinese characters are segmented into single-
character word as Figure 3a, there is a one-to-
one mapping between any character and its cor-
responding pinyin syllable without word reorder-
ing, while typical machine translation does not en-
joy such benefits and has to perform careful word
reordering explicitly or implicitly. 2) As Chinese
language is always sensitive to the segmentation
scheme, in the writing of either the Chinese char-
acter or the pinyin, P2C as NMT may suffer from
alignment mismatch on both sides like Figure 3b
or benefit a lot from perfect one-to-one alignment
like Figure 3c, while typical machine translation is
seldom affected by such segmentation alignment.
3) P2C as a working component of IME, every
time it returns a list of Chinese character sequence
predictions, user may indicate which one is what
he or she actually expects to input. To speed up the



1588

inputting, IME always tries to rank the user’s in-
tention at the top-1 position. So does IME, we say
there is a correct conversion or prediction. Differ-
ent from machine translation job, users’ inputting
choice will always indicate the ‘correct’ prediction
right after IME returns the list of its P2C conver-
sion results.

(a)

(b)

(c)

Figure 3: Different segmentations decide different
alignments

Therefore, IME working mode implies an on-
line property, we will let our neural P2C model
also work and evaluate in such a way. Meanwhile,
online working means that our model has to track
the continuous change of users’ inputting contents,
which is equally a task about finding new words in
either pinyin sequence or character sequence.

However, the word should be obtained through
the operation of word segmentation. Note that
as we have discussed above, segmentation over
pinyin sequence is also necessary to alleviate the
ambiguity of pinyin-to-character mapping. Thus
the task here for IME online working actually re-
quires an online word segmentation algorithm if
we want to keep the aim of open vocabulary learn-
ing. Our solution to this requirement is adopting a
vocabulary-based segmentation approach, namely,
the maximum matching algorithm which greedily
segments the longest matching in the given vocab-
ulary at the current segmentation point of a given
sequence. Then adaptivity of the segmentation
thus actually relies on the vocabulary online up-
dating.

Algorithm 1 gives our online vocabulary updat-
ing algorithm for one-turn IME inputting. Note
the algorithm maintains a pinyin-character bilin-
gual vocabulary. Collecting the user’s inputting
choices through IME, our P2C model will perform
online training over segmented pinyin and charac-
ter sequences with the updated vocabulary. The
updating procedure introduces new words by com-
paring the user’s choice and IME’s top-1 predic-
tion. The longest mismatch n-gram characters will
be added as new word.

Algorithm 1 Online Vocabulary Updating Algo-
rithm
Input:

• Vocabulary: V = {(Pyi, Chi)|i =
1, 2, 3, · · · };
• Input pinyin sequence: Py = {pyi|i =
1, 2, 3, · · · };
• IME predicted top-1 character sequence:
Cm = {cmi|i = 1, 2, 3, · · · };
• User choosing character sequence: Cu =
{cui|i = 1, 2, 3, · · · }.

Output:

• The Updated Vocabulary: V̂ .
1: � Adding new words
2: for n = 6 to 2 do
3: Compare n-gram of Cu and Cm
4: if Mismatch Ch is found // both the first and

last characters are different at least then
5: if Ch is not in V̂ then
6: V = V ∪ {Ch}
7: end if
8: end if
9: if no mismatch is found then

10: break
11: end if
12: end for
13: return V̂ ;

We adopt a hybrid mechanism to balance
both words and characters representation, namely,
Character-enhanced Word Embedding (CWE). In
the beginning, we keep an initial vocabulary with
the most frequent words. The words inside the vo-
cabulary are represented as enhanced-embedding,
and those outside the list are computed from char-
acter embeddings. A pre-trained word2vec model
(Mikolov et al., 2013) is generated to represent
the word embedding WE(w)(w ∈ V̂ ). At the
same time we feed all characters of each word
to a bi-gated recurrent unit (bi-GRU) (Cho et al.,
2014) to compose the character level representa-
tion CE(w) (w = {ci|i = 1, 2, 3, · · · }).

The enhanced embedding CWE(w) is to
straightforwardly integrate word embedding and
character embedding by element-wise multiplica-
tion,

CWE(w) = WE(w)� CE(w)



1589

5 Target Vocabulary Selection

In this section, we aim to prune the target vocabu-
lary V̂ as small as possible to reduce the comput-
ing time. Our basic idea is to maintain a separate
and small vocabulary V̂ for each sentence so that
we only need to compute the probability distribu-
tion over a small vocabulary for each sentence.

We first generate a sentence-level vocabulary
Vs to be one part of our V̂ , which includes the
mapped Chinese words of each pinyin in the
source sentence. As the bilingual vocabulary V
consists of the pinyin and Chinese word pair of
all the words that ever appeared, it is natural to
use a prefix maximum matching algorithm to ob-
tain a sorted list of relevant candidate translations
D(x) = [Ch1, Ch2, ...] for the source pinyin.
Thus, we generate a target vocabulary Vs for a sen-
tence x = (Py1, Py2, ...) by merging all the can-
didates of all pinyin.

In order to cover target un-aligned functional
words, we also need top n most common target
words Vc.

In training procedure, the target vocabulary V̂
for a sentence x needs to include the target words
Vt in the reference y, V̂ = Vs ∪ Vc ∪ Vy.

In decoding procedure, the V̂ may only contain
two parts, V̂ = Vs ∪ Vc.

6 Experiment

6.1 Datasets and Evaluation Metrics

We adopt two corpora for evaluation. The People’s
Daily corpus is extracted from the People’s Daily
from 1992 to 1998 by Peking University (Emer-
son, 2005). The bilingual corpus can be straight-
forwardly produced by the conversion proposed
by (Yang et al., 2012). Contrast to the style of
the People’s Daily, the TouchPal corpus (Zhang
et al., 2017) is a large scale of user chat history
collected by TouchPal IME, which are more col-
loquial. Hence, we use the latter to simulate user’s
chatting input to verify our online model’s adapt-
ability to different environments. The test set size
is 2,000 MIUs in both corpora. Table 2 shows the
statistics of two corpora1.

Two metrics are used for our evaluation by
following previous work: Maximum Input Unit
(MIU) Accuracy and KeyStroke Score (KySS) (Jia
and Zhao, 2013). The former measures the con-

1The two corpora along with our codes are available at
https://github.com/cooelf/OpenIME .

version accuracy of MIU, which is defined as the
longest uninterrupted Chinese character sequence
inside a sentence. As the P2C conversion aims
to output a rank list of corresponding character
sequences candidates, the top-K MIU accuracy
means the possibility of hitting the target in the
first K predict items. We will follow the defi-
nition of (Zhang et al., 2017) about top-K accu-
racy. The KySS quantifies user experience by us-
ing keystroke count. An IME with higher KySS
is supposed to perform better. For an ideal IME,
there will be KySS = 1.

6.2 Settings

IME works giving a list of character sequence can-
didates for user choosing. Therefore, measuring
IME performance is equivalent to evaluating such
a rank list. In this task, we select 5 converted
character sequence candidates for each pinyin se-
quence. Given a pinyin sequence and candidate
characters, our model is designed to rank the char-
acters in an appropriate order.

Here is the model setting we used: a) pre-
trained word embeddings were generated on the
People’s Daily corpus; b) the recurrent neural net-
works for encoder and decoder have 3 layers and
500 cells, and the representation networks have 1
layer; c) the initial learning rate is 1.0, and we will
halve the learning rate every epoch after 9 epochs;
d) dropout is 0.3; e) the default frequency filter ra-
tio for CWE establishment is 0.9. The same setting
is applied to all models.

For a balanced treatment over both corpora, we
used baseSeg (Zhao et al., 2006) to segment all
text, then extract all resulted words into the ini-

Chinese Pinyin

PD
# MIUs 5.04M
# Word 24.7M 24.7M
# Vocab 54.3K 41.1K
# Target Vocab (train) 2309 -
# Target Vocab (dec) 2168 -

TP
# MIUs 689.6K
# Word 4.1M 4.1M
# Vocab 27.7K 20.2K
# Target Vocab (train) 2020 -
# Target Vocab (dec) 2009 -

Table 2: MIUs count, word count and vocab size statis-
tics of our training data. PD refers to the People’s
Daily, TP is TouchPal corpus.

https://github.com/cooelf/OpenIME


1590

System ED
PD TP

Top1 Top5 Top10 Top1 Top5 Top10
Existing P2C
Google IME 70.9 78.3 82.3 57.5 63.8 69.3

OMWA 55.0 63.7 70.2 19.7 24.8 27.7
On-OMWA 64.4 72.9 77.9 57.1 71.1 80.9
Our P2C

Base P2C 200 53.2 64.7 70.3 46.8 68.8 75.7
On-P2C 200 68.1 77.3 78.2 69.8 88.7 89.3

On-P2C (bi) 200 70.5 79.8 80.1 71.0 89.2 89.5
On-P2C (bi) 300 70.8 80.5 81.2 71.9 89.6 90.6
On-P2C (bi) 400 71.3 80.1 81.3 71.7 89.7 90.3
On-P2C (bi) 500 69.9 78.2 81.0 70.7 89.2 89.8

Table 3: Top-K accuracies on the People’s Daily (PD) , TouchPal (TP) corpora. ED refers to embedding dimension.
The best results are in bold.

tial vocabulary for online evaluation. We train the
base P2C models for 13 epochs with plain stochas-
tic gradient descent on the People’s Daily corpus
with 32 batch size, and the online training process
runs 25 epochs with 1 batch size. In practical ap-
plication, we perform online training for once ev-
ery 64 instances are inputs to control costs.

6.3 Results

We compare our P2C conversion system with two
baseline systems, Google IME 2 and Offline and
Online models for Word Acquisition (OMWA,
On-OMWA)(Zhang et al., 2017), and the results
are shown in Table 3.

On the People’s Daily corpus, our online model
(On-P2C) outperforms the best model in (Zhang
et al., 2017) by +3.72% top-1 MIU accuracy.
The +14.94 improvement over the base P2C con-
version module demonstrates that online learn-
ing vocabulary is effective. The using of bi-
direction LSTM encoder produces a notable boost
of +2.41% accuracy. Our P2C model seizes a
slight but significant improvement when tuning
the dimension of CWE; our model gives 71.32%
top-1 MIU accuracy. The performance on Touch-
Pal corpus is similar and even more obvious; our
best setting achieves 14.35% improvements com-
pared to the best baseline.

The P2C module of IME outputs a rank list, and
then the IME once displays five candidates by de-
fault. If users cannot find the target character in
the top 5 candidates, they have to click the Page

2The Google IME is the only commercial Chinese IME
providing a debuggable API on the market now.

Down button to navigate more candidates, which
involve additional keystroke expenses for users.
Therefore, we list the top-5 accuracy contrast to
all baselines with top-10 results, and the compar-
ison indicates the noticeable advancement of our
P2C model. On TouchPal corpus, our model with
the best setting achieves 89.7% accuracy, surpass-
ing all the baselines.

7 Analysis

7.1 Effects of Online Updated Vocaburay

Figure 5 shows the changes of the MIU accuracy
during the training process. For both top-1 and
top-5 MIU accuracy, models with online vocabu-
lary updating significantly outperform those with-
out updating throughout the entire training. Espe-
cially, online P2C gives top-1 MIU accuracy com-
parable to top-5 MIU accuracy given by the base
P2C module, which suggests a great inputting ef-
ficiency improvement from introducing the online
updating mechanism.

Figure 4 expounds the adaptivity of our online
P2C, in which we feed a joint corpus that is ex-
tracted from test corpora of the People’s Daily and
Touchpal to the base P2C model and record the
top-1 MIU accuracy per group after 2 epochs on-
line vocabulary learning with batch size 1. We
see that online P2C distinctly adapts the corpus
change at the joint part. On the contrary, the base
P2C which works offline performs stably only on
its in-domain segments.



1591

Figure 4: Top-1 accuracy on an interlaced joint Corpus. P: the People’s daily segment, T: Touchpal segment.

Filter Ratio 0 0.3 0.6 0.9 1.0
Top-5 Accuracy(valid set) 66.4 68.3 84.3 89.7 87.5
Top-5 Accuracy(test set) 66.3 68.1 83.9 89.6 87.1

Table 4: Top-5 accuracies of P2C after filtering specific ratio of words from vocabulary.

Models the People’s Daily TouchPal
Google IME 0.7535 0.6465
OMWA 0.6496 0.4489
On-OMWA 0.7115 0.7226
Base P2C 0.6922 0.7910
On-P2C 0.8301 0.8962

Table 5: User experience in terms of KySS

Figure 5: Training curves of top-1 and top-5 accuracy
on TouchPal.

7.2 Effects of Vocaburay Selection

As an adaptive vocabulary is used in our decoder,
it may result in a very large vocabulary to encum-
ber the decoder with efficiency. Therefore, in prac-
tice, we need to control the size of the vocabulary
for acceptable decoding speed. However, prun-
ing the vocabulary in any way will surely hurt
the performance due to all items in the adaptive
vocabulary added with a reason. Figure 6 illus-
trates the relation between accuracy and decoding
speed. The accuracies nearly do not get decreased
with high enough decoding speed when only tak-
ing 88.9% full vocabulary in our system.

Vo
ca
bu
la
ry
 S
iz
e 
(%
)

Vocab size

Figure 6: MIU accuracy versus decoding time on CPU.

7.3 Effects of Word Filtering for CWE
building

As we mentioned in Section 4, P2C conversion
quality depends on the CWE mechanism which
will benefit from an appropriate filtration ratio. As
shown in Table 4, when the filter ratio equals to
0.9, the accuracy reaches the top. We notice two
observations. First, pure word-level representation
is more efficient for P2C tasks than character-level
which only achieves 66.3% accuracy. Second,
omitting partial low-frequency word is instrumen-
tal in establishing word-level embedding. Actu-
ally, when building word embeddings, rare words
behave no more than noise. If the rare words are
not initialized properly, they would also bias the
whole word embeddings. Therefore, we more in-
cline to make character-level embedding to repre-
sent a rare word, and build CWE embeddings for
others.



1592

7.4 User Experience

Jia and Zhao (2013) proposed that the user-IME
interaction contains three steps: pinyin input, can-
didate index choice and page turning. In Table 3,
the 89.7% top-5 accuracy on TouchPal means that
users have nearly 90% possibilities to straightly
obtain the expected inputs in the first page (usu-
ally 5 candidates per page for most IME interface
setting), so that user experiment using IMEs can
be directly measured by KySS. Table 5 shows the
mean KySS of various models. The results indi-
cate that our P2C conversion module further facil-
itates the interaction.

8 Conclusion

This paper presents the first neural P2C converter
for pinyin-based Chinese IME with open vocab-
ulary learning as to our best knowledge. We
adopt an online working-style seq2seq model for
the concerned task by formulizing it as a machine
translation from pinyin sequence to Chinese char-
acter sequence. In addition, we propose an on-
line vocabulary updating algorithm for further per-
formance enhancement by tracking users behav-
ior effectively. The evaluation on the standard
linguistic corpus and true inputting history show
the proposed methods indeed greatly improve user
experience in terms of diverse metrics compared
to commercial IME and state-of-the-art traditional
model.

References
Deng Cai, Hai Zhao, Zhisong Zhang, Yuan Xin,

Yongjian Wu, and Feiyue Huang. 2017. Fast and
accurate neural word segmentation for Chinese. In
Proceedings of the 55th Annual Meeting of the Asso-
ciation for Computational Linguistics (ACL), pages
608–615.

Kehai Chen, Rui Wang, Masao Utiyama, Eiichiro
Sumita, and Tiejun Zhao. 2018. Syntax-directed at-
tention for neural machine translation. In Proceed-
ings of the AAAI Conference on Artificial Intelli-
gence (AAAI), pages 4792–4799.

Long Chen, Xianchao Wu, and Jingzhou He. 2012. Us-
ing collocations and k-means clustering to improve
the n-pos model for japanese ime. In Proceedings
of the Second Workshop on Advances in Text Input
Methods, pages 45–56.

Shenyuan Chen, Rui Wang, and Hai Zhao. 2015. Neu-
ral network language model for Chinese pinyin in-
put method engine. In Proceedings of the 29th Pa-

cific Asia Conference on Language, Information and
Computation (PACLIC), pages 455–461.

Stanley F. Chen. 2003. Conditional and joint mod-
els for grapheme-to-phoneme conversion. In Eighth
European Conference on Speech Communication
and Technology, pages 2033–2036.

Zheng Chen and Kai Fu Lee. 2000. A new statistical
approach to Chinese pinyin input. In Proceedings
of the 38th Annual Meeting of the Association for
Computational Linguistics (COLING), pages 241–
247.

Kyunghyun Cho, Bart Van Merrienboer, Caglar Gul-
cehre, Dzmitry Bahdanau, Fethi Bougares, Holger
Schwenk, and Yoshua Bengio. 2014. Learning
phrase representations using RNN encoder-decoder
for statistical machine translation. In Proceedings of
the 2014 Conference on Empirical Methods in Nat-
ural Language Processing (EMNLP), pages 1724–
1734.

Thomas Emerson. 2005. The second international Chi-
nese word segmentation bakeoff. In Proceedings of
the fourth SIGHAN workshop on Chinese language
Processing, pages 123–133.

Jun Hatori and Hisami Suzuki. 2011. Japanese pro-
nunciation prediction as phrasal statistical machine
translation. In Proceedings of 5th International
Joint Conference on Natural Language Processing
(IJCNLP), pages 993–1004.

Yafang Huang, Zuchao Li, Zhuosheng Zhang, and
Hai Zhao. 2018. Moon IME: neural-based chinese
pinyin aided input method with customizable asso-
ciation. In Proceedings of the 56th Annual Meet-
ing of the Association for Computational Linguistics
(ACL), System Demonstration, pages 140–145.

Sebastien Jean, Kyunghyun Cho, Roland Memisevic,
and Yoshua Bengio. 2015. On using very large
target vocabulary for neural machine translation.
In Proceedings of the 53rd Annual Meeting of the
Association for Computational Linguistics and the
7th International Joint Conference on Natural Lan-
guage Processing (ACL-IJCNLP), pages 1–10.

Zhongye Jia and Hai Zhao. 2013. Kyss 1.0: a frame-
work for automatic evaluation of Chinese input
method engines. In Proceedings of the Sixth In-
ternational Joint Conference on Natural Language
Processing (IJCNLP), pages 1195–1201.

Zhongye Jia and Hai Zhao. 2014. A joint graph model
for pinyin-to-chinese conversion with typo correc-
tion. In Proceedings of the 52nd Annual Meet-
ing of the Association for Computational Linguistics
(ACL), pages 1512–1523.

Sittichai Jiampojamarn, Colin Cherry, and Grzegorz
Kondrak. 2008. Joint processing and discriminative
training for letter-to-phoneme conversion. In Pro-
ceedings of ACL-08: HLT, pages 905–913.

https://doi.org/10.18653/v1/P17-2096
https://doi.org/10.18653/v1/P17-2096
https://www.aaai.org/ocs/index.php/AAAI/AAAI18/paper/view/16060/16008
https://www.aaai.org/ocs/index.php/AAAI/AAAI18/paper/view/16060/16008
https://www.aclweb.org/anthology/W12-4804
https://www.aclweb.org/anthology/W12-4804
https://www.aclweb.org/anthology/W12-4804
https://www.aclweb.org/anthology/Y15-1052
https://www.aclweb.org/anthology/Y15-1052
https://www.aclweb.org/anthology/Y15-1052
https://doi.org/10.1109/ICASSP.2017.7952674
https://doi.org/10.1109/ICASSP.2017.7952674
https://doi.org/10.3115/1075218.1075249
https://doi.org/10.3115/1075218.1075249
https://www.aclweb.org/anthology/D14-1179
https://www.aclweb.org/anthology/D14-1179
https://www.aclweb.org/anthology/D14-1179
https://aclweb.org/anthology/I05-3017
https://aclweb.org/anthology/I05-3017
https://www.aclweb.org/anthology/I11-1014
https://www.aclweb.org/anthology/I11-1014
https://www.aclweb.org/anthology/I11-1014
https://www.aclweb.org/anthology/P18-4024
https://www.aclweb.org/anthology/P18-4024
https://www.aclweb.org/anthology/P18-4024
https://doi.org/10.3115/v1/P15-1001
https://doi.org/10.3115/v1/P15-1001
https://www.aclweb.org/anthology/I13-1170
https://www.aclweb.org/anthology/I13-1170
https://www.aclweb.org/anthology/I13-1170
https://doi.org/10.3115/v1/P14-1142
https://doi.org/10.3115/v1/P14-1142
https://doi.org/10.3115/v1/P14-1142
https://www.aclweb.org/anthology/P08-1103
https://www.aclweb.org/anthology/P08-1103


1593

Wei Jiang, Yi Guan, Xiao Long Wang, and Bing Quan
Liu. 2007. Pinyin to character conversion model
based on support vector machines. Journal of Chi-
nese Information Processing, 21(2):100–105.

Gurvan L’Hostis, David Grangier, and Michael Auli.
2016. Vocabulary selection strategies for neural ma-
chine translation. arXiv preprint arXiv:1610.00072.

Zuchao Li, Jiaxun Cai, Shexia He, and Hai Zhao.
2018a. Seq2seq dependency parsing. In Pro-
ceedings of the 27th International Conference on
Computational Linguistics (COLING), pages 3203–
3214.

Zuchao Li, Shexia He, Jiaxun Cai, Zhuosheng Zhang,
Hai Zhao, Gongshen Liu, Linlin Li, and Luo Si.
2018b. A unified syntax-aware framework for se-
mantic role labeling. In Proceedings of the 2018
Conference on Empirical Methods in Natural Lan-
guage Processing (EMNLP), pages 2401–2411.

Zuchao Li, Shexia He, Hai Zhao, Yiqing Zhang, Zhu-
osheng Zhang, Xi Zhou, and Xiang Zhou. 2019. De-
pendency or span, end-to-end uniform semantic role
labeling. arXiv preprint arXiv:1901.05280.

Bo Lin and Jun Zhang. 2008. A novel statistical Chi-
nese language model and its application in pinyin-
to-character conversion. In Proceedings of the 17th
ACM conference on Information and knowledge
management, pages 1433–1434.

Minh-Thang Luong and Christopher D. Manning.
2016. Achieving open vocabulary neural machine
translation with hybrid word-character models. In
Proceedings of the 54th Annual Meeting of the Asso-
ciation for Computational Linguistics (ACL), pages
1054–1063.

Minh Thang Luong, Hieu Pham, and Christopher D
Manning. 2015. Effective approaches to attention-
based neural machine translation. In Proceedings of
the 2015 Conference on Empirical Methods in Nat-
ural Language Processing (EMNLP), pages 1412–
1421.

Tomas Mikolov, Kai Chen, Greg Corrado, and Jef-
frey Dean. 2013. Efficient estimation of word
representations in vector space. arXiv preprint
arXiv:1301.3781.

Shinsuke Mori, Daisuke Takuma, and Gakuto Kurata.
2006. Phoneme-to-text transcription system with an
infinite vocabulary. In Proceedings of the 21st In-
ternational Conference on Computational Linguis-
tics and the 44th annual meeting of the Associa-
tion for Computational Linguistics (ACL-COLING),
pages 729–736.

Shinsuke Mori, Masatoshi Tsuchiya, Osamu Yamaji,
and Makoto Nagao. 1998. Kana-Kanji conversion
by a stochastic model. Information Processing So-
ciety of Japan (IPSJ), pages 2946–2953.

Graham Neubig, Taro Watanabe, Shinsuke Mori, and
Tatsuya Kawahara. 2013. Machine translation with-
out words through substring alignment. In Proceed-
ings of the 50th Annual Meeting of the Association
for Computational Linguistics (ACL), pages 165–
174.

Yoh Okuno and Shinsuke Mori. 2012. An ensemble
model of word-based and character-based models
for Japanese and Chinese input method. In Proceed-
ings of the Second Workshop on Advances in Text
Input Methods, pages 15–28.

Lyan Verwimp, Joris Pelemans, Hugo Van Hamme,
and Patrick Wambacq. 2017. Character-word LSTM
language models. In Proceedings of the 15th Con-
ference of the European Chapter of the Association
for Computational Linguistics (EACL), pages 417–
427.

Rui Wang, Andrew Finch, Masao Utiyama, and Ei-
ichiro Sumita. 2017a. Sentence embedding for neu-
ral machine translation domain adaptation. In Pro-
ceedings of the 55th Annual Meeting of the Asso-
ciation for Computational Linguistics (ACL), pages
560–566. Association for Computational Linguis-
tics.

Rui Wang, Masao Utiyama, Andrew Finch, Lemao
Liu, Kehai Chen, and Eiichiro Sumita. 2018. Sen-
tence selection and weighting for neural machine
translation domain adaptation. IEEE/ACM Transac-
tions on Audio, Speech, and Language Processing,
26(10):1727–1741.

Rui Wang, Masao Utiyama, Lemao Liu, Kehai Chen,
and Eiichiro Sumita. 2017b. Instance weighting
for neural machine translation domain adaptation.
In Proceedings of the 2017 Conference on Em-
pirical Methods in Natural Language Processing
(EMNLP), pages 1482–1488. Association for Com-
putational Linguistics.

Rui Wang, Masao Utiyama, and Eiichiro Sumita. 2018.
Dynamic sentence sampling for efficient training of
neural machine translation. In Proceedings of the
56th Annual Meeting of the Association for Compu-
tational Linguistics (ACL), pages 298–304.

Yu Wu, Wei Wu, Dejian Yang, Can Xu, Zhoujun Li,
and Ming Zhou. 2018. Neural response generation
with dynamic vocabularies. In Thirty-Second AAAI
Conference on Artificial Intelligence (AAAI), pages
5594–5601.

Fengshun Xiao, Jiangtong Li, Hai Zhao, Rui Wang, and
Kehai Chen. 2019. Lattice-Based Transformer En-
coder for Neural Machine Translation. In Proceed-
ings of the 57th Annual Meeting of the Association
for Computational Linguistics (ACL).

Jinghui Xiao, Bing Quan Liu, and XiaoLong WANG.
2008. A self-adaptive lexicon construction algo-
rithm for Chinese language modeling. Acta Auto-
matica Sinica, 34(1):40–47.

https://doi.org/10.1007/s10822-007-9102-6
https://doi.org/10.1007/s10822-007-9102-6
https://arxiv.org/pdf/1610.00072.pdf
https://arxiv.org/pdf/1610.00072.pdf
https://www.aclweb.org/anthology/C18-1271
https://aclweb.org/anthology/D18-1262
https://aclweb.org/anthology/D18-1262
https://arxiv.org/pdf/1901.05280v1.pdf
https://arxiv.org/pdf/1901.05280v1.pdf
https://arxiv.org/pdf/1901.05280v1.pdf
https://doi.org/10.1145/1458082.1458318
https://doi.org/10.1145/1458082.1458318
https://doi.org/10.1145/1458082.1458318
https://doi.org/10.18653/v1/P16-1100
https://doi.org/10.18653/v1/P16-1100
https://doi.org/10.18653/v1/D15-1166
https://doi.org/10.18653/v1/D15-1166
https://arxiv.org/pdf/1301.3781.pdf
https://arxiv.org/pdf/1301.3781.pdf
https://doi.org/10.3115/1220175.1220267
https://doi.org/10.3115/1220175.1220267
https://ci.nii.ac.jp/naid/110002917060/en/
https://ci.nii.ac.jp/naid/110002917060/en/
https://www.aclweb.org/anthology/P12-1018
https://www.aclweb.org/anthology/P12-1018
https://www.aclweb.org/anthology/W12-4802
https://www.aclweb.org/anthology/W12-4802
https://www.aclweb.org/anthology/W12-4802
https://www.aclweb.org/anthology/E17-1040
https://www.aclweb.org/anthology/E17-1040
https://doi.org/10.18653/v1/P17-2089
https://doi.org/10.18653/v1/P17-2089
https://doi.org/10.1109/TASLP.2018.2837223
https://doi.org/10.1109/TASLP.2018.2837223
https://doi.org/10.1109/TASLP.2018.2837223
https://doi.org/10.18653/v1/D17-1155
https://doi.org/10.18653/v1/D17-1155
https://www.aclweb.org/anthology/P18-2048
https://www.aclweb.org/anthology/P18-2048
https://www.aaai.org/ocs/index.php/AAAI/AAAI18/paper/viewFile/16135/16117
https://www.aaai.org/ocs/index.php/AAAI/AAAI18/paper/viewFile/16135/16117
https://doi.org/10.3724/SP.J.1004.2008.00040
https://doi.org/10.3724/SP.J.1004.2008.00040


1594

Shaohua Yang, Hai Zhao, and Bao-liang Lu. 2012. A
machine translation approach for Chinese whole-
sentence pinyin-to-character conversion. In Pro-
ceedings of the 26th Asian Pacific conference on lan-
guage and information and computation (PACLIC),
pages 333–342.

Xihu Zhang, Chu Wei, and Hai Zhao. 2017. Tracing
a loose wordhood for Chinese input method engine.
arXiv preprint arXiv:1712.04158.

Zhuosheng Zhang, Yafang Huang, and Hai Zhao.
2018a. Subword-augmented embedding for cloze
reading comprehension. In Proceedings of the 27th
International Conference on Computational Lin-
guistics (COLING), pages 1802–1814.

Zhuosheng Zhang, Yafang Huang, Pengfei Zhu, and
Hai Zhao. 2018b. Effective character-augmented
word embedding for machine reading comprehen-
sion. In Proceedings of the Seventh CCF Interna-
tional Conference on Natural Language Processing
and Chinese Computing (NLPCC), pages 27–39.

Zhuosheng Zhang, Jiangtong Li, Pengfei Zhu, and
Hai Zhao. 2018c. Modeling multi-turn conversation
with deep utterance aggregation. In Proceedings of
the 27th International Conference on Computational
Linguistics (COLING), pages 3740–3752.

Zhuosheng Zhang and Hai Zhao. 2018. One-shot
learning for question-answering in gaokao history
challenge. In Proceedings of the 27th International
Conference on Computational Linguistics (COL-
ING), pages 449–461.

Hai Zhao, Chang-Ning Huang, Mu Li, and Taku Kudo.
2006. An improved Chinese word segmentation sys-
tem with conditional random field. In Proceedings
of the Fifth SIGHAN Workshop on Chinese Lan-
guage Processing, pages 162–165.

Jie Zhou, Ying Cao, Xuguang Wang, Peng Li, and Wei
Xu. 2016. Deep recurrent models with fast-forward
connections for neural machine translation. Trans-
actions of the Association for Computational Lin-
guistics (TACL), 4:371–383.

Junru Zhou and Hai Zhao. 2019. Head-Driven Phrase
Structure Grammar Parsing on Penn Treebank. In
Proceedings of the 57th Annual Meeting of the As-
sociation for Computational Linguistics (ACL).

Pengfei Zhu, Zhuosheng Zhang, Jiangtong Li, Yafang
Huang, and Hai Zhao. 2018. Lingke: A fine-grained
multi-turn chatbot for customer service. In Proceed-
ings of the 27th International Conference on Com-
putational Linguistics (COLING), System Demon-
strations, pages 108–112.

https://www.aclweb.org/anthology/Y12-1036
https://www.aclweb.org/anthology/Y12-1036
https://www.aclweb.org/anthology/Y12-1036
https://arxiv.org/pdf/1712.04158.pdf
https://arxiv.org/pdf/1712.04158.pdf
https://www.aclweb.org/anthology/C18-1153
https://www.aclweb.org/anthology/C18-1153
https://arxiv.org/pdf/1808.02772.pdf
https://arxiv.org/pdf/1808.02772.pdf
https://arxiv.org/pdf/1808.02772.pdf
https://www.aclweb.org/anthology/C18-1317
https://www.aclweb.org/anthology/C18-1317
https://www.aclweb.org/anthology/C18-1038
https://www.aclweb.org/anthology/C18-1038
https://www.aclweb.org/anthology/C18-1038
https://www.aclweb.org/anthology/W06-0127
https://www.aclweb.org/anthology/W06-0127
https://doi.org/10.1162/tacl_a_00105
https://doi.org/10.1162/tacl_a_00105
https://www.aclweb.org/anthology/C18-2024
https://www.aclweb.org/anthology/C18-2024

