



















































CoNLL-2017 Shared Task


Proceedings of the CoNLL 2017 Shared Task: Multilingual Parsing from Raw Text to Universal Dependencies, pages 274–282,
Vancouver, Canada, August 3-4, 2017. c© 2017 Association for Computational Linguistics

A rule-based system for cross-lingual parsing of Romance languages with
Universal Dependencies

Marcos Garcia
LyS Group

Departamento de Letras
Universidade da Coruña

marcos.garcia.gonzalez@udc.gal

Pablo Gamallo
Centro Singular de Investigación en

Tecnoloxı́as da Información (CiTIUS)
Universidade de Santiago de Compostela

pablo.gamallo@usc.es

Abstract

This article describes MetaRomance, a
rule-based cross-lingual parser for Ro-
mance languages submitted to CoNLL
2017 Shared Task: Multilingual Parsing
from Raw Text to Universal Dependen-
cies. The system is an almost delexi-
calized parser which does not need train-
ing data to analyze Romance languages.
It contains linguistically motivated rules
based on PoS-tag patterns. The rules in-
cluded in MetaRomance were developed
in about 12 hours by one expert with no
prior knowledge in Universal Dependen-
cies, and can be easily extended using
a transparent formalism. In this paper
we compare the performance of MetaRo-
mance with other supervised systems par-
ticipating in the competition, paying spe-
cial attention to the parsing of different
treebanks of the same language. We also
compare our system with a delexicalized
parser for Romance languages, and take
advantage of the harmonized annotation of
Universal Dependencies to propose a lan-
guage ranking based on the syntactic dis-
tance each variety has from Romance lan-
guages.

1 Introduction

This article describes the MetaRomance parser,
which participated at CoNLL 2017 Shared Task:
Multilingual Parsing from Raw Text to Univer-
sal Dependencies (Zeman et al., 2017). MetaRo-
mance is a rule-based parser for Romance lan-
guages adapted to Universal Dependencies (UD).
The system relies on a basic grammar consisting
on simple cross-lingual and (almost) delexicalized
rules likely to be shared by most Romance lan-

guages. Rules are almost delexicalized because
they are mainly applied on Universal PoS-tags,
only containing few grammar words (some prepo-
sitions and conjunctions) together with a small list
of verbs. The grammar was developed by one ex-
pert with no prior knowledge in UD in about 12
hours.1

As the Universal Dependencies initiative (Nivre
et al., 2016) offers linguistic criteria providing a
consistent representation across languages, it fits
perfectly with our objective of defining cross-
lingual rules. In fact, the availability of har-
monized treebanks provides an interesting test
bench for cross-lingual dependency parsing re-
search (McDonald et al., 2011; Mcdonald et al.,
2013; Vilares et al., 2016).

Our participation at this CoNLL 2017 shared
task has several experimental objectives. First,
we will compare our rule-based approach with the
rest of participants, which are likely to be super-
vised systems, with regard to Romance languages.
Namely, we will analyze the performance of sev-
eral systems on different treebanks of the same
language. Then, we will also evaluate the cross-
lingual property of our system by comparing it
with a supervised delexicalized parser. Last but
not least, the analysis of the results in the shared
task will allow us to check whether our method
might be useful to measure the syntactic distance
between Romance and non-Romance languages.

The results of different experiments show that,
in spite of its simplicity, MetaRomance achieve
reasonable results on Romance languages with no
training data, and that its performance is relatively
uniform across different treebanks of the same lan-
guage. The delexicalized rules of this system al-

1The whole system, DepPattern and MetaRomance, is
freely available at:
https://github.com/CoNLL-UD-2017/
MetaRomance.

274



lowed us to present a classification of all the lan-
guages present in the shared task ranked by their
syntactic distance from Romance languages.

The remaining of the paper is organized as fol-
lows. Section 2 presents some related work on
dependency and cross-lingual parsing. Then, we
present the architecture of MetaRomance in Sec-
tion 3, and several experiments on Section 4. Fi-
nally, we briefly discuss the results and present the
conclusions of our work in Sections 5 and 6, re-
spectively.

2 Related Work

In the last 15 years, most work on depen-
dency parsing has been developed within two
supervised (data-driven) approaches: determinis-
tic parsing, which is also known as transition-
based parsing (Yamada and Matsumoto, 2003;
Nivre, 2004; Gómez-Rodrı́guez and Fernández-
González, 2012), and non-deterministic strategies,
known as graph-based dependency parsing (Mc-
Donald and Pereira, 2006; Carreras, 2007; Martins
et al., 2010).

In opposition to data-driven approaches, many
grammar-driven (or rule-based) parsers use finite-
state technology, which has attractive properties
for syntactic parsing, such as conceptual simplic-
ity, flexibility, and efficiency in terms of space and
time. It permits to build robust and deterministic
parsers. Most finite-state based parsing strategies
use cascades of transducers (Ait-Mokhtar et al.,
2002; Oflazer, 2003).

Concerning cross-lingual parsing, there are two
main approaches for parsing one language (the tar-
get) with resources from one or more source lan-
guages: (a) data transfer, and (b) model trans-
fer methods. On the one hand, data transfer ap-
proaches obtain annotated treebanks of a target
language by projecting the syntactic information
from the source data. Some methods use parallel
corpora (Hwa et al., 2005; Ganchev et al., 2009;
Agić et al., 2016) while others create artificial data
taking advantage of machine translation (Tiede-
mann and Agić, 2016).

On the other hand, the strategies based on model
transfer train systems on the source data that can
be used to parse a target language (Zeman and
Resnik, 2008). The emergence of different initia-
tives promoting harmonized annotations allowed
researchers to explore this approach, using delex-
icalized models and multi-source strategies (Mc-

Donald et al., 2011; Täckström et al., 2012).
More recently, some works addressed multi-

lingual parsing using a single model (trained in
a combination of various treebanks) to analyze
different languages (Vilares et al., 2016; Ammar
et al., 2016).

The growth in cross-lingual parsing research
has given rise to a recent shared task at VarDial
2017 (Zampieri et al., 2017), Cross-lingual De-
pendency Parsing (CLP) (Tiedemann, 2017). CLP
is a shared task whose aim is to develop models
for parsing selected target languages without an-
notated training data, but having annotated data in
one or two closely related languages (Rosa et al.,
2017).

With the emergence of UD as the practical stan-
dard for multilingual PoS and syntactic depen-
dency annotation, it is possible to develop univer-
sal rule-based strategies requiring no training data,
and relying on basic rules exploiting the UD crite-
ria. The Universal Dependency Parser, described
in (Martı́nez Alonso et al., 2017), is a good ex-
ample of this unsupervised strategy. Our work
goes in that direction, but with two differences:
the grammar is focused on Romance languages
and the parser relies on basic rules implemented
as cascades of finite-state transducers.

3 MetaRomance

3.1 The architecture

The core of MetaRomance, depicted in Figure 1,
consists of the following modules:

• An adapter converting CoNLL-U into the
format required by the rule-based parser.

• A MetaRomance grammar with 150 cross-
lingual rules configured to work with tags, la-
bels and linguistic constraints of UD.

• A grammar compiler that takes the grammar
as input and generates a dependency parser,
which is based on finite state transitions.

In order to allow MetaRomance to work on
raw text, some scripts are provided in addition
to the core architecture for converting the tags
given by different PoS-taggers (namely, FreeL-
ing (Padró and Stanilovsky, 2012; Garcia and
Gamallo, 2010), TreeTagger (Schmid, 1994), and
LinguaKit (Garcia and Gamallo, 2015)) into the
CoNLL-U format. Thus, MetaRomance is able

275



to parse raw text which has been tokenized, lem-
matized and PoS-tagged with several systems that
provide high-quality analyses for different lan-
guages.

3.2 The MetaRomance grammar

The cost of writing the grammar is not high since
its size is small and the rules are not language-
specific. The strategy we followed to write the
MetaRomance grammar is based on two method-
ological principles:

• Start with high-coverage rules.
• Otherwise, develop rules shared by as many

Romance languages as possible.

The objective is to find a trade-off between high
performance and low effort, i.e. we look for ef-
ficiency. Most rules satisfy these two principles,
giving rise to a broad-coverage parser. We have
not defined non-projective rules since, in general,
they have low coverage and are language depen-
dent. Some rules contain information on spe-
cific lexical units, but only to identify grammati-
cal words: some prepositions, conjunctions, deter-
miners, and pronouns (and a small and automat-
ically extracted list of verbs). Most phenomena
not covered by the grammar are related with some
long distance dependencies, including subordinate
clauses in non-canonical positions, or complex is-
sues derived from coordination.

Cross-lingual rules were written with DepPat-
tern (Gamallo and González, 2011), a high-level
syntactic formalism aimed to write dependency-
based grammars. This dependency formalism has
been adapted so as to let it interpret Universal De-
pendencies, more specifically UDv2. All rules
were written in about 12 hours by an expert lin-
guist who has skills in the DepPattern formalism,
but with no prior knowledge in UD. He took into
account the syntactic structure of all Romance lan-
guages of the UDv2 treebanks except Romanian.
In the following you can see an example of a Dep-
Pattern rule:

det: DET [ADJ]? NOUN
Agreement: gender, number
%

The first line contains, divided by the colon,
the name of the dependency relation (det) together
with the PoS context. Here, a determiner will be

linked as dependent of a noun (the head), with an
optional adjective between them. The second line
states that this rule will only be applied if both the
dependent and the head agree in gender and num-
ber.

As the grammar is not complete, giving rise to
partial parses, we implemented a post-editor script
linking all tokens without head information to the
corresponding sentence root. Moreover, in order
to assign a label to each unknown dependency, the
script associates dependency names to PoS-tags:
e.g., PUNCT is associated with the dependency
name “punct”, VERB with “xcomp”, and so on.

It is worth noting that the rules implemented in
MetaRomance only make use 25 out of the 37 uni-
versal relations defined in the UDv2 guidelines.

3.3 A finite-state transition parser

The parser, automatically generated from the for-
mal grammar, is based on a finite-state transition
approach making use of a similar strategy to the
shift-reduce algorithm. More precisely, it consists
of a set of transducers/rules that compress the in-
put sequence of tokens by progressively removing
the dependent tokens as soon as dependencies are
recognized (Gamallo, 2015). So, at each applica-
tion of a rule, the system reduces the input and
make it easier to find new dependencies in further
rule applications. In particular, short dependencies
are recognized first and, as a consequence, the in-
put is simplified so as to make lighter the recog-
nition of long distance dependencies. This is in-
spired by the easy-first strategy.

4 Experiments

This section presents several evaluations of
MetaRomance using the data provided by the
CoNLL 2017 shared task on UD parsing (Nivre
et al., 2017). We will show the results of the fol-
lowing experiments:

• Comparison of MetaRomance with other su-
pervised approaches on all the testing tree-
banks of Romance languages.

• Analysis of the performance of several
parsers on different treebanks of the same
language.

• Comparison of MetaRomance with a neu-
ral network delexicalized parser for Romance
languages.

276



Figure 1: Architecture of MetaRomance

• Syntactic distance between Romance and
non-Romance languages.

As we had several alignment issues concerning
the evaluation of data pre-processed by LinguaKit
and FreeLing, all the experiments presented in this
paper (as well as the official MetaRomance re-
sults) used as input the tokenized, lemmatized and
PoS-tagged data provided by the UDPipe baseline
models.

4.1 Results at CoNLL-2017 shared task

In general, our system obtained low LAS and
UAS results in the whole dataset of the shared
task (34.05% LAS, 42.55% UAS).2 The results
were mostly expected due to the characteristics
of MetaRomance: an almost delexicalized parser
which does not require training data, with simple
rules only based on the syntactic structure of Ro-
mance languages.

MetaRomance needed 29 minutes and 155MB
of memory to parse all the testing sets on the TIRA
virtual machine provided by the shared task (Pot-
thast et al., 2014).

Table 1 shows the official MetaRomance results
on every treebank of a Romance language eval-
uated in the shared task. On average, our system
achieved F1 results of 58.9 (LAS) and 66.1 (UAS).
The worst results were obtained in Romanian; this
fact was expected because (a) Romanian is lin-
guistically more distant than the other Romance
languages (Gamallo et al., 2017), and (b) we did
not implement any dependency rule with this lan-
guage in mind.

2After correcting a small bug in a script —which pro-
duced invalid treebanks for three languages—, we obtained
34.98% LAS and 43.81% UAS. The new results, not present
in the official ones, were (LAS/UAS): bxr: 19.51/30.22, cs:
41.63/47.92, and tr: 13.70/23.85.

Even if the values in Table 1 are not compara-
ble with most supervised systems in the compe-
tition, our simple parser obtained competitive re-
sults in some languages, such as es, it, and pt. In-
terestingly, MetaRomance performed better in the
pud datasets than in the others treebanks of the
same languages (with only one exception: UAS
results in pt and pt pud), while most systems in the
shared task decreased their performance in the pud
datasets in several points. In this respect, MetaRo-
mance leaded some supervised approaches in tree-
banks such as pt pud or gl treegal (this last one
with small training data).

Some of the results on different treebanks of the
same language have noticeable LAS differences:
more than 5 points between es and es pud, and
about 10% between pt br and the two other tree-
banks of Portuguese.3

In this regard, our next experiment compares the
cross-treebank performance of supervised models
(i.e., parsing different treebanks of the same lan-
guage with the same model). To carry out this
experiment we trained a UDPipe model (Straka
et al., 2016) in each training dataset of Spanish,
Galician, and Portuguese. These models were
trained using the default parameters of UDPipe
1.1, but removing the lemmas and the morpholog-
ical features of the treebanks, with a view to build-
ing parsers with more robust performance among
the different test sets.4

3Concerning Portuguese, it is important to note that (a)
Brazilian Portuguese has some syntactic (as well as morpho-
logical, orthographic, etc.) differences regarding European
Portuguese, and that (b) the pt br treebank does not contain
lemmas neither morphological features (and also it has some
tokenization issues: e.g., most contractions with the preposi-
tion em are tokenized as en).

4Preliminary tests using the baseline models provided by
the shared task organization showed that some models trained
in one treebank may obtain LAS results with drops of more
than 26% when parsing a different treebank of the same lan-

277



Treebank LAS UAS
ca 57.71 65.57
es 59.80 67.20
es ancora 60.99 69.63
es pud 65.49 71.68
fr 54.10 62.20
fr partut 56.17 63.10
fr sequoia 55.16 60.76
fr pud 58.67 65.94
gl 54.87 62.59
gl treegal 57.20 63.87
it 62.96 70.35
it pud 65.49 71.82
pt 65.50 71.77
pt br 56.19 65.81
pt pud 66.35 71.43
ro 45.04 53.90
average 58.86 66.10

Table 1: MetaRomance results on the Romance
languages test sets (predicted tokens, lemmas, fea-
tures, and PoS-tags).

Table 2 includes the LAS and UAS values of
each model (in the columns) on the target tree-
banks (on each row). These numbers clearly show
that the results of supervised models are very dif-
ferent when parsing a different treebank to the one
used for training, even if both corpus belong to the
same language. These differences are much higher
than those reported for MetaRomance, exceeding
22% in gl parsing gl treegal, more than 15% in
the analysis of es by es ancora, or more than 14
in pt br parsing pt. Note, however, than most su-
pervised parsers (except gl analyzing gl treegal)
achieved better results than those obtained by
MetaRomance.

These results (both the UDPipe and the
MetaRomance ones) suggest that careful analyses
of the different treebanks are required, aimed at
knowing whether these large variations are due to
different domains, annotation issues, or linguistic
differences.

4.2 Comparison with a cross-lingual
delexicalized parser

In the next experiment we compare the per-
formance of MetaRomance with a delexicalized
parser trained with a combined corpus which in-
cludes sentences from every Romance treebank.

guage.

Target Source

Spanish
es es ancora

LAS UAS LAS UAS
es 76.85 81.19 64.25 71.95
es ancora 67.25 76.43 79.36 83.42
es pud 74.88 82.26 67.67 76.77

Galician
gl gl treegal

LAS UAS LAS UAS
gl 73.71 77.17 58.03 68.47
gl treegal 50.98 63.37 65.24 70.81

Portuguese
pt pt br

LAS UAS LAS UAS
pt 78.74 82.43 68.00 77.92
pt br 66.85 76.19 82.10 84.83
pt pud 71.59 77.58 67.75 77.87

Table 2: Results of UDPipe models trained in the
source treebanks (columns) on the target test sets
(rows).

This is a competitive supervised baseline in cross-
lingual transfer parsing work, which gives us an
indication of how our system compares to standard
cross-lingual parsers.

We trained 50 UDPipe models by randomly se-
lecting from 1 to 50 sentences of each Romance
treebank in the training data. Then, we obtained
the average results on all the Romance test tree-
banks, and plotted them together with the MetaRo-
mance performance in Figure 2.

This figure shows that MetaRomance obtains
similar results (≈ 59% LAS) to those achieved
with about 2,000 tokens of all the Romance tree-
banks. The learning curve also suggest that it is
difficult for cross-lingual models with no lexical
features (as MetaRomance, which is also delexi-
calized) to keep increasing their cross-lingual per-
formance on Romance languages. Thus, UDPipe
achieves 64% with about 5,000 tokens, but it can-
not surpass 65% even with a training corpus of
20,000 tokens.

4.3 Syntactic distance from Romance
languages

The last experiment is an attempt to rank all the
languages in the shared task with respect to the
Romance family, aimed at knowing whether it is
possible to use these results as a syntactic distance
between Romance and non-Romance languages.

Table 3 includes the UAS values obtained by
MetaRomance in every language of the dataset.

278



Language UAS Family Branch
Italian 71 Ind Romance
Portuguese 69 Ind Romance
Spanish 69 Ind Romance
Catalan 65 Ind Romance
Galician 63 Ind Romance
French 63 Ind Romance
Bulgarian 54 Ind Slavic
Romanian 53 Ind Romance
Greek 52 Ind European
Russian 52 Ind Slavic
Indonesian 51 Non-Ind Austronesian
Polish 51 Ind Germanic
Old Bulgarian 50 Ind Slavic
Gothic 50 Ind Germanic
Ukrainian 48 Ind Slavic
Dutch 48 Ind Germanic
Croatian 48 Ind Slavic
Norwegian 48 Ind Germanic
Danish 46 Ind Germanic
Hungarian 46 Non-Ind Uralic
Czech 46 Ind Slavic
Sorbian 45 Ind Slavic
English 45 Ind Germanic
Swedish 44 Ind Germanic
Slovak 44 Ind Slavic
German 43 Ind Germanic
Old Greek 40 Ind European
Irish 40 Ind Celtic
Slovene 38 Ind Slavic
Hebrew 38 Non-Ind Semitic
Latin 37 Ind European
Estonian 37 Non-Ind Uralic
Arabic 37 Non-Ind Semitic
Latvian 36 Ind Germanic
Farsi 35 Ind Indian
Norther Sami 35 Non-Ind Uralic
Kurdish 35 Ind Indian
Finnish 34 Non-Ind Uralic
Russian Buryat 30 Non-Ind Mongolic
Korean 27 Non-Ind Koreanic
Turkish 21 Non-Ind Turkic
Uyghur 18 Non-Ind Turkic
Vietnamese 18 Non-Ind Austroasiatic
Kazakh 18 Non-Ind Turkic
Basque 18 Non-Ind isolated
Hindi 15 Ind Indian
Chinese 14 Non-Ind Sino-tibetan
Urdu 13 Ind Indian
Japanese 8 Non-Ind Japonic

Table 3: MetaRomance results (UAS) on each lan-
guage of the CoNLL 2017 dataset. Results in lan-
guages with more than one treebank are the aver-
age values.

Figure 2: LAS values of MetaRomance versus the
learning curve (0–20,000 tokens) of a delexical-
ized UDPipe model trained with random sentences
from all the Romance treebanks. Results are av-
erage F1 values of all the testing Romance tree-
banks.

For those languages with more than one treebank
we show the average results.5

As expected, at the top of the ranking we
find Romance languages, on which MetaRomance
achieves the best results (except on Romanian,
slightly surpassed by Bulgarian). With few excep-
tions, such as the Indian varieties which obtained
low values, Indo-european languages have the best
results. In general, our system does not reach 40%
UAS in Non-Indo-european languages, except in
Hungarian and in Indonesian. In this regard, it
is worth mentioning that Indonesian (with 51%
UAS) has a Subject-Verb-Object word order simi-
lar to most European languages (Sneddon, 1996).

5 Discussion

The experiments performed in this paper provided
some interesting results that claim for further re-
search in cross-lingual parsing.

On the one hand, there are noticeable differ-
ences when parsing different treebanks of the
same language, both using a rule-based system
and harmonized supervised models. In this re-
spect, it could be interesting to analyze the source
of these variations, and MetaRomance could be

5Table 3 follows the language distinction provided by the
shared task, even if we are aware that some linguistic varieties
may be considered dialects of the same language (e.g., Gali-
cian as a variety of Portuguese, Old Bulgarian as a variety of
Bulgarian, etc.).

279



useful for this purpose because it uses linguisti-
cally transparent rules based on PoS-tags.

On the other hand, the learning curve of a cross-
lingual delexicalized model reinforces the idea
that lexical features are required to obtain high-
quality parsing results. In this respect, further ex-
periments could compare this learning curve to
lexicalized cross-lingual models, which seem to
obtain good results in languages from the same
linguistic family. Concerning MetaRomance, the
addition of new rules (both lexicalized and with-
out lexical information) could allow the parser to
better analyze different languages.

Finally, and even if this is not a fair compari-
son, it is worth noting that MetaRomance obtained
higher results in Romance languages than those
achieved by UDP (Martı́nez Alonso et al., 2017).
UDP is a training-free parser based on PageRank
and a small set of head attachment rules, being
more generic than MetaRomance (it can be applied
to any language with more homogeneous results
than our system). The differences on Romance
languages vary between few decimals to more than
6% UAS, but the experiments were performed us-
ing different versions of the UD treebanks.6

6 Conclusions

This paper presented our submission to the CoNLL
2017 Shared Task: Multilingual Parsing from Raw
Text to Universal Dependencies. The system,
MetaRomance, is a fast rule-based parser suited to
analyze Romance languages with no training data.
It can be used on the top of several PoS-taggers
such as LinguaKit, FreeLing, TreeTagger, or in a
CoNLL-U file processed by tools such as UDPipe.

This cross-lingual parser contains 150 rules
based on PoS-tags patterns, implemented by a lin-
guist in about 12 hours. The MetaRomance gram-
mar was written in DepPattern, a formalism that
allows experts to easily modify and increase the
rules to cover more syntactic phenomena.

Several experiments showed that a simple sys-
tem such as the proposed in this paper can ana-
lyze in a uniform way different treebanks of Ro-
mance languages (and also from other linguis-
tic families). Furthermore, a preliminary experi-
ment on cross-lingual delexicalized parsing of Ro-
mance languages suggested that lexical features

6At this moment it is not possible to perform a better com-
parison of both systems, because UDP works with UDv1.2
and MetaRomance with UDv2.0.

are needed to increase the parsing performance.
Lexical information can be added both to super-
vised systems and to our rule-based approach.

The grammar provided by MetaRomance was
also used to present a classification of all the lan-
guages of the shared task datasets ranked by their
syntactic distance with respect to Romance lan-
guages.

Acknowledgments

This work has received financial support from a
2016 BBVA Foundation Grant for Researchers
and Cultural Creators, the TelePares project
(MINECO, ref:FFI2014-51978-C2-1-R), the
Consellerı́a de Cultura, Educación e Orde-
nación Universitaria (accreditation 2016-2019,
ED431G/08), the European Regional Devel-
opment Fund (ERDF), and from a Juan de la
Cierva-formación grant (FJCI-2014-22853).

References
Željko Agić, Anders Johannsen, Barbara Plank, Héctor

Martı́nez Alonso, Natalie Schluter, and Anders
Søgaard. 2016. Multilingual projection for parsing
truly low-resource languages. Transactions of the
Association for Computational Linguistics 4:301–
312.

S. Ait-Mokhtar, J-P Chanod, and C. Roux. 2002.
Robustness beyond Shallowness: Incremental
Deep Parsing. Natural Language Engineering
8(2/3):121–144.

Waleed Ammar, George Mulcaire, Miguel Ballesteros,
Cris Dyer, and Noah A. Smith. 2016. Many Lan-
guages, One Parser. Transactions of the Association
for Computational Linguistics 4:431–444.

Xavier Carreras. 2007. Experiments with a higher-
order projective dependency parser. In Proceed-
ings of the CoNLL Shared Task Session of EMNLP-
CoNLL 2007. Association for Computational Lin-
guistics, Prague, pages 957–961.

Pablo Gamallo. 2015. Dependency parsing with com-
pression rules. In Proceedings of the 14th Inter-
national Workshop on Parsing Technology (IWPT
2015). Association for Computational Linguistics,
Bilbao, Spain, pages 107–117.

Pablo Gamallo and Isaac González. 2011. A grammat-
ical formalism based on patterns of part-of-speech
tags. International Journal of Corpus Linguistics
16(1):45–71.

Pablo Gamallo, José Ramom Pichel, and Iñaki Alegria.
2017. From language identification to language dis-
tance. Physica A 484:162–172.

280



Kuzman Ganchev, Jennifer Gillenwater, and Ben
Taskar. 2009. Dependency grammar induction via
bitext projection constraints. In Proceedings of the
Joint Conference of the 47th Annual Meeting of the
ACL and the 4th International Joint Conference on
Natural Language Processing of the AFNLP. As-
sociation for Computational Linguistics, volume 1,
pages 369–377.

Marcos Garcia and Pablo Gamallo. 2010. Análise mor-
fossintáctica para português europeu e galego: Prob-
lemas, soluçoes e avaliaçao. Linguamática 2(2):59–
67.

Marcos Garcia and Pablo Gamallo. 2015. Yet an-
other suite of multilingual NLP tools. In Languages,
Applications and Technologies. Springer, Switzer-
land, volume 563 of Communications in Computer
and Information Science, pages 65–75. Revised Se-
lected Papers of the Symposium on Languages, Ap-
plications and Technologies (SLATE 2015).

Carlos Gómez-Rodrı́guez and Daniel Fernández-
González. 2012. Dependency parsing with undi-
rected graphs. In 13th Conference of the European
Chapter of the Association for Computational Lin-
guistics (EACL). Avignon, France, pages 66–76.

Rebecca Hwa, Philip Resnik, Amy Weinberg, Clara
Cabezas, and Okan Kolak. 2005. Bootstrapping
parsers via syntactic projection across parallel texts.
Natural Language Engineering 11(03):311–325.

Héctor Martı́nez Alonso, Zeljko Agic, Barbara Plank,
and Anders Søgaard. 2017. Parsing universal de-
pendencies without training. In 15th Conference of
the European Chapter of the Association for Compu-
tational Linguistics (EACL 2017). Valencia, Spain,
pages 229–239.

André F. T. Martins, Noah A. Smith, Eric P. Xing,
Pedro M. Q. Aguiar, and Mário A. T. Figueiredo.
2010. Turboparsers: Dependency parsing by ap-
proximate variational inference. In Empirical Meth-
ods in Natural Language Processing (EMNLP’10).
Boston, USA.

Ryan Mcdonald, Joakim Nivre, Yvonne Quirmbach-
brundage, Yoav Goldberg, Dipanjan Das, Kuzman
Ganchev, Keith Hall, Slav Petrov, Hao Zhang, Oscar
Täckström, Claudia Bedini, Núria Bertomeu, and
Castelló Jungmee Lee. 2013. Universal dependency
annotation for multilingual parsing. In Proceedings
of the 51st Annual Meeting of the Association for
Computational Linguistics (ACL 2013). Association
for Computational Linguistics, Sofia, pages 92–97.

Ryan McDonald and Fernando Pereira. 2006. Online
Learning of Approximate Dependency Parsing Al-
gorithms. In Association for Computational Lin-
guistics, editor, Proceedings of the Eleventh Con-
ference of the European Chapter of the Association
for Computational Linguistics (EACL 2006). Trento,
pages 81–88.

Ryan McDonald, Slav Petrov, and Keith Hall. 2011.
Multi-source Transfer of Delexicalized Dependency
Parsers. In Proceedings of the Conference on Em-
pirical Methods in Natural Language Processing
(EMNLP 2011). Association for Computational Lin-
guistics, Edinburgh, United Kingdom, pages 62–72.

Joakim Nivre. 2004. Incrementality in deterministic
dependency parsing. In ACL Workshop on Incre-
mental Parsing: Bringing Engineering and Cogni-
tion Together. Association for Computational Lin-
guistics, Barcelona, pages 50–57.

Joakim Nivre, Željko Agić, Lars Ahrenberg, et al.
2017. Universal dependencies 2.0 – CoNLL 2017
shared task development and test data. LIN-
DAT/CLARIN digital library at the Institute of For-
mal and Applied Linguistics, Charles University.
http://hdl.handle.net/11234/1-2184.

Joakim Nivre, Marie-Catherine de Marneffe, Filip Gin-
ter, Yoav Goldberg, Jan Hajič, Christopher Man-
ning, Ryan McDonald, Sl av Petrov, Sampo Pyysalo,
Natalia Silveira, Reut Tsarfaty, and Daniel Zeman.
2016. Universal Dependencies v1: A multilingual
treebank collection. In Proceedings of the 10th
International Conference on Language Resources
and Evaluation (LREC 2016). European Language
Resources Association, Portorož, Slovenia, pages
1659–1666.

Kemal Oflazer. 2003. Dependency parsing with an
extended finite-state approach. Computational Lin-
guistics 29(4):515–544.

Lluı́s. Padró and Evgeny Stanilovsky. 2012. FreeL-
ing 3.0: Towards Wider Multilinguality. In Pro-
ceedings of the Language Resources and Evalua-
tion Conference (LREC 2012). European Language
and Resources Association, Istanbul, Turkey, pages
2473–2479.

Martin Potthast, Tim Gollub, Francisco Rangel, Paolo
Rosso, Efstathios Stamatatos, and Benno Stein.
2014. Improving the reproducibility of PAN’s
shared tasks: Plagiarism detection, author identifica-
tion, and author profiling. In Evangelos Kanoulas,
Mihai Lupu, Paul Clough, Mark Sanderson, Mark
Hall, Allan Hanbury, and Elaine Toms, editors, In-
formation Access Evaluation meets Multilingual-
ity, Multimodality, and Visualization. 5th Interna-
tional Conference of the CLEF Initiative (CLEF 14).
Springer, Berlin Heidelberg New York, pages 268–
299.

Rudolf Rosa, Daniel Zeman, David Mareček, and
Zdeněk Žabokrtský. 2017. Slavic forest, norwegian
wood. In Proceedings of the Fourth Workshop on
NLP for Similar Languages, Varieties and Dialects
(VarDial4). Association for Computational Linguis-
tics, Stroudsburg, PA, USA, pages 210–219.

Helmut Schmid. 1994. Probabilistic Part-of-Speech
Tagging Using Decision Trees. In International
Conference on New Methods in Language Process-
ing. Manchester, pages 154–163.

281



James Neil Sneddon. 1996. Indonesian Reference
Grammar. Allen and Unwin, St. Leonards, Aus-
tralia.

Milan Straka, Jan Hajič, and Jana Straková. 2016. UD-
Pipe: trainable pipeline for processing CoNLL-U
files performing tokenization, morphological anal-
ysis, POS tagging and parsing. In Proceedings
of the 10th International Conference on Language
Resources and Evaluation (LREC 2016). European
Language Resources Association, Portorož, Slove-
nia.

Oscar Täckström, Ryan McDonald, and Jakob Uszko-
reit. 2012. Cross-lingual word clusters for direct
transfer of linguistic structure. In Proceedings of
the 2012 Conference of the North American Chap-
ter of the Association for Computational Linguis-
tics: Human language technologies (NAACL - HLT
2012). Association for Computational Linguistics,
pages 477–487.

Jörg Tiedemann. 2017. Cross-lingual dependency
parsing for closely related languages. In Proceed-
ings of the Fourth Workshop on NLP for Similar
Languages, Varieties and Dialects (VarDial 2017).
Association for Computational Linguistics, Valen-
cia, pages 131–136.

Jörg Tiedemann and Željko Agić. 2016. Synthetic
Treebanking for Cross-Lingual Dependency Pars-
ing. Journal of Artificial Intelligence Research
(JAIR) 55:209–248.

David Vilares, Miguel A. Alonso, and Carlos Gómez-
Rodrı́guez. 2016. One model, two languages: train-
ing bilingual parsers with harmonized treebanks. In
Proceedings of the 54th Annual Meeting of the Asso-
ciation for Computational Linguistics (ACL 2016).
Berlin, Germany, volume 2, pages 425–431.

Hiroyasu Yamada and Yuji Matsumoto. 2003. Statisti-
cally Dependency Analysis with Support Vector Ma-
chines. In Proceedings of 8th International Work-
shop on Parsing Technologies (IWPT). pages 195–
206.

Marcos Zampieri, Shervin Malmasi, Nikola Ljubešić,
Preslav Nakov, Ahmed Ali, Jörg Tiedemann, Yves
Scherrer, and Noëmi Aepli. 2017. Findings of the
VarDial Evaluation Campaign 2017. In Proceedings
of the Fourth Workshop on NLP for Similar Lan-
guages, Varieties and Dialects (VarDial). Valencia.

Daniel Zeman, Martin Popel, Milan Straka, Jan
Hajič, Joakim Nivre, Filip Ginter, Juhani Luotolahti,
Sampo Pyysalo, Slav Petrov, Martin Potthast, Fran-
cis Tyers, Elena Badmaeva, Memduh Gökırmak,
Anna Nedoluzhko, Silvie Cinková, Jan Hajič jr.,
Jaroslava Hlaváčová, Václava Kettnerová, Zdeňka
Urešová, Jenna Kanerva, Stina Ojala, Anna Mis-
silä, Christopher Manning, Sebastian Schuster, Siva
Reddy, Dima Taji, Nizar Habash, Herman Leung,
Marie-Catherine de Marneffe, Manuela Sanguinetti,
Maria Simi, Hiroshi Kanayama, Valeria de Paiva,

Kira Droganova, Hěctor Martı́nez Alonso, Hans
Uszkoreit, Vivien Macketanz, Aljoscha Burchardt,
Kim Harris, Katrin Marheinecke, Georg Rehm,
Tolga Kayadelen, Mohammed Attia, Ali Elkahky,
Zhuoran Yu, Emily Pitler, Saran Lertpradit, Michael
Mandl, Jesse Kirchner, Hector Fernandez Alcalde,
Jana Strnadova, Esha Banerjee, Ruli Manurung, An-
tonio Stella, Atsuko Shimada, Sookyoung Kwak,
Gustavo Mendonça, Tatiana Lando, Rattima Nitis-
aroj, and Josie Li. 2017. CoNLL 2017 Shared Task:
Multilingual Parsing from Raw Text to Universal
Dependencies. In Proceedings of the CoNLL 2017
Shared Task: Multilingual Parsing from Raw Text to
Universal Dependencies. Association for Computa-
tional Linguistics.

Daniel Zeman and Philip Resnik. 2008. Cross-
Language Parser Adaptation between Related Lan-
guages. In Proceedings of the Workshop on NLP for
Less Privileged Language at the 3rd International
Joint Conference on Natural Language Processing
(IJCNLP 2008). Asian Federation of Natural Lan-
guage Processing, Hyderabad, pages 35–42.

282


