



















































Detecting Off-topic Responses to Visual Prompts


Proceedings of the 12th Workshop on Innovative Use of NLP for Building Educational Applications, pages 188–197
Copenhagen, Denmark, September 8, 2017. c©2017 Association for Computational Linguistics

Detecting Off-topic Responses to Visual Prompts

Marek Rei
The ALTA Institute

Computer Laboratory
University of Cambridge

United Kingdom
marek.rei@cl.cam.ac.uk

Abstract

Automated methods for essay scoring
have made great progress in recent years,
achieving accuracies very close to human
annotators. However, a known weakness
of such automated scorers is not taking
into account the semantic relevance of
the submitted text. While there is exist-
ing work on detecting answer relevance
given a textual prompt, very little previ-
ous research has been done to incorpo-
rate visual writing prompts. We propose a
neural architecture and several extensions
for detecting off-topic responses to visual
prompts and evaluate it on a dataset of
texts written by language learners.

1 Introduction

Evaluating the relevance of learner essays with re-
spect to the assigned prompt is an important part
of automated writing assessment (Higgins et al.,
2006; Briscoe et al., 2010). Existing systems are
able to assign high-quality assessments based on
grammaticality (Yannakoudakis et al., 2011; Ng
et al., 2014), but are known to be vulnerable to
memorised off-topic answers which can be a crit-
ical weakness in high-stakes testing. In addi-
tion, students who have limited relevant vocabu-
lary may try to shift the topic of their answer in
a more familiar direction, which most automated
assessment systems are not able to capture. So-
lutions for detecting topical relevance can help
prevent these weaknesses and provide informative
feedback to the students.

While there is previous work on assessing the
relevance of answers given a textual prompt (Pers-
ing and Ng, 2014; Cummins et al., 2015; Rei
and Cummins, 2016), very little research has been
done to incorporate visual writing prompts. In

this setting, students are asked to write a short de-
scription about an image in order to assess their
language skills, and we would like to automati-
cally evaluate the semantic relevance of their an-
swers. An intuitive method for comparing multi-
ple modalities is to map them into a shared dis-
tributed space – semantically similar entities will
get mapped to similar vector representations, re-
gardless of the information source. Frome et al.
(2013) used this principle to improve image recog-
nition, by first training separate visual and textual
components, and then mapping the images into
the same space as word embeddings. Ma et al.
(2015) performed information retrieval tasks with
a related model based on convolutional networks.
Klein et al. (2015) learned to associate word em-
beddings to images using Fisher vectors.

In this paper, we start with a similar architec-
ture, based on the approach used by Kiros et al.
(2014) for image caption generation, and propose
modifications that make the model more suitable
for discriminating between relevant and irrelevant
answers. The framework uses an LSTM for text
composition and a pre-trained image recognition
model for extracting visual features. Both rep-
resentations are mapped to the same space and
a prediction is made about the relevance of the
text given the image. We propose a novel gat-
ing component that decides which parts of the im-
age should be considered for the current similarity
calculation, based on first reading the input sen-
tence. Application of dropout to word embed-
dings and visual features helps increase robust-
ness on an otherwise noisy dataset and assisted
in regularising the model. Finally, the standard
loss function is replaced with a version of cross-
entropy, encouraging the model to jointly optimise
over batches. We evaluate on a dataset of short an-
swers by language learners, written in response to
visual prompts and our experiments show perfor-

188



mance improvements for each of the model modi-
fications.

2 Relevance Detection Model

Automated methods for scoring essays and short
answers have made great progress in recent years
(Yannakoudakis et al., 2011; Sakaguchi et al.,
2015; Alikaniotis et al., 2016; Hussein et al.,
2017), achieving accuracies very close to human
annotators. However, a known weakness of such
automated scorers is not taking into account the
topical relevance of the submitted text. Students
with limited language skills may attempt to shift
the topic of the response in a more familiar di-
rection, which automated systems would not be
able to detect. In a high-stakes examination frame-
work, this weakness could be further exploited by
memorising a grammatically correct answer and
presenting it in response to any prompt. Being
able to detect topical relevance can help prevent
such weaknesses, provide useful feedback to the
students, and is also a step towards evaluating
more creative aspects of learner writing. While
there is existing work on detecting answer rele-
vance given a textual prompt (Persing and Ng,
2014; Cummins et al., 2015; Rei and Cummins,
2016), only limited previous research has been
done to extend this to visual prompts. Some re-
cent work has investigated answer relevance to vi-
sual prompts as part of automated scoring systems
(Somasundaran et al., 2015; King and Dickinson,
2016), but they reduced the problem to a textual
similarity task by relying on hand-written refer-
ence descriptions for each image without directly
incorporating visual information.

Our proposed relevance detection model takes
an image and a sentence as input, and assigns a
score indicating how relevant the image is to the
text. Formulating this as a scoring problem instead
of binary classification allows us to treat the model
output as a confidence score, and the classification
threshold can be selected at a later stage based on
the specific application.

Kiros et al. (2014) describe a supervised method
for mapping an image and a sentence into the same
space, which allows them to generate similar vec-
tor representations for images that have semanti-
cally similar descriptions. We base our approach
for multimodal relevance scoring on this architec-
ture, and introduce several modifications in order
to adapt it to the task of discriminating between

relevant and irrelevant textual answers.
The outline of our framework can be seen in

Figure 1. The input sentence is first passed
through a Long Short-Term Memory (LSTM,
Hochreiter and Schmidhuber (1997)) component,
mapping it to a vector representation u. The vi-
sual features for the input image are extracted us-
ing a model trained for image recognition. The vi-
sual representation is then conditioned on the input
sentence and mapped to a vector representation v.
Both u and v are given as input to a function that
predicts a confidence score for the answer being
relevant to the image. In the next sections we will
describe each of these components in more detail.

2.1 Text Composition

The input to the text composition component is
a tokenised sentence. We first map these tokens
to an embedding space, resulting in a sequence of
vector representations:

[w1, w2, ..., wN ] (1)

Next, we apply dropout (Srivastava et al., 2014)
to each of the word embeddings in the sentence.
Dropout is a method of regularising neural net-
works, shown to provide performance imrove-
ments. Neuron activations in a layer are set to zero
with probability p, preventing the model from ex-
cessively relying on the presence of specific fea-
tures. The process can also be thought of as train-
ing a randomly constructed smaller network at
each training iteration, resulting in a full combina-
tion model. At test time, all the values are retained,
but scaled with (1 − p) to compensate for the
difference. While dropout is commonly applied
to weights inside the network (Tai et al., 2015;
Zhang et al., 2015; Kalchbrenner et al., 2015;
Kim et al., 2016), there is also some recent work
that deploy dropout directly on the word embed-
dings (Rocktäschel et al., 2016; Chen et al., 2016).
The relevance scoring model needs to handle texts
from different domains, including error-prone sen-
tences from language learners, and dropout on the
embeddings allows us to introduce robustness into
the training process.

We use an LSTM component for processing the
word embeddings, building up a sentence repre-
sentation. It is similar to a traditional recurrent
neural network, with specialised gating functions
that allow it to dynamically decide which informa-
tion to carry forward or forget. The LSTM calcu-

189



h1

w1

h2

w2 w3

u

x

z

x'v

scoredot(u,v)

Figure 1: The outline of the relevance detection model. The input sentence and image are mapped
to vector representations u and v using modality-specific functions. These vectors are then given to a
relevance function which assigns a real-valued score based on their similarity.

lates a hidden representation at word n based on
the current word embedding and the previous hid-
den representation at time step n− 1:

hn = LSTM(wn, hn−1) (2)

The last hidden representation hN is calculated
based on all the words in the sequence, thereby al-
lowing the model to iteratively construct a seman-
tic representation of the whole sentence. We use
this vector u = hN to represent a given input sen-
tence in the relevance scoring model. Since word-
level processing is not ideal for handling spelling
errors in learner texts, future work could also in-
vestigate character-based extensions for text com-
position, such as those described by Rei et al.
(2016) and Wieting et al. (2016).

2.2 Image Processing
In order to map images to feature vectors, a pre-
trained image recognition model is combined with
a supervised transformation component. We make
use of the BVLC GoogLeNet image recognition
model, which is based on an architecture described
by Szegedy et al. (2015) and provided by the Caffe
toolkit (Jia et al., 2014). The GoogLeNet is a 22-
layer deep convolutional network, trained on Ima-
geNet (Deng et al., 2009) data to detect 1,000 dif-
ferent image classes.

An input image is passed through the network
and a probability distribution over the possible
classes is produced. Instead of using the out-
put layer, we extract the neuron activations at the
second-to-last layer in the network – this takes ad-
vantage of all the visual feature processing on var-
ious levels of the network, but retains a more gen-
eral distributed representation of the image com-
pared to using the output layer. Similarly to the
word embeddings in textual composition, we ap-
ply dropout with probability p directly to the im-
age vectors – this introduces variance to the other-

wise limited training data, and prevents the model
from overfitting on specific features.

The previous process maps the image to a 1024-
dimensional vector x, which contains useful visual
information but is not optimised for the relevance
scoring task. We introduce a gating component
which modulates the image vector, based on the
textual vector representation from the input sen-
tence. A vector of gating weights is calculated as a
nonlinear weighted transformation of the sentence
vector u:

z = σ(uWz + bz) (3)

where Wz is a weight matrix, bz is a bias vector,
and σ() is the logistic activation function with val-
ues between 0 and 1. A new image representation
x′ is then calculated by applying these element-
wise weights to the visual vector x:

x′ = z ∗ x (4)
where ∗ indicates an element-wise multiplication.
This architecture allows the model to first read the
input sentence, determine what to look for in the
corresponding image, and block out irrelevant in-
formation in the image vector. We also disconnect
the backpropagation between vector u and the gat-
ing weights z – this forces the model to optimise
u only for score prediction, leaving Wz and bz to
specialise on handling the gating.

Finally, we pass the image representation
through a fully connected non-linear layer – this
allows the model to transform the pre-trained
GoogLeNet space to a representation that is spe-
cialised for relevance scoring:

v = tanh(x′Wx) (5)

whereWx is a weight matrix that is optimised dur-
ing training, and v is the final image vector that is
used as input to the relevance scoring component.

190



2.3 Scoring and optimisation
Based on vector representations for the input sen-
tence (u) and image (v) we now want to assign a
score which indicates how related they are. Kiros
et al. (2014) used the cosine measure as the sim-
ilarity function – it measures the angle between
two vectors, returning a value in the range [−1, 1],
and is commonly used for similarity calculations
in language processing:

scorecos(u, v) = cos(u, v) =
uv

|u||v| (6)

The model can then be optimised to predict a
high score for image-sentence pairs where the im-
age and sentence and related, and a low score for
randomly constructed pairs. The loss function is
a hinge loss with a margin m; if the score differ-
ence between the positive and negative example is
greater than m, then no training is required, other-
wise the error is backpropagated and weights are
updated accordingly:

Losshinge =
∑
i∈I

∑
j∈J(i)

max(−scorecos(ui, vi)

+scorecos(uj , vi) +m, 0)
(7)

where I is the set of related image-text pairs for
training, and J(i) is a set of randomly constructed
pairs for entry i. When generating the negative ex-
amples, we make sure the resulting set J(i) does
not contain any examples with the same image as
i – otherwise the model would accidentally opti-
mise related examples towards a low score.

In this work we propose using an alternative
scoring function, in order to help discriminate be-
tween the answers. We first replace the cosine sim-
ilarity with a dot-product:

scoredot(u, v) = uv (8)

Next, we create a scoring function by calculat-
ing a probability distribution over the current mini-
batch of examples:

scoreexp(ui, vi) =
exp(scoredot(ui, vi))

Z
(9)

Z = exp(scoredot(ui, vi))

+
∑

j∈J(i)
exp(scoredot(uj , vi)) (10)

images sentences

TRAIN 29,000 145,000
DEV 1,014 5,070
TEST 1,000 5,000

Table 1: Number of images and descriptions in the
Flickr30k dataset.

The model is then optimised for cross-entropy,
which is equivalent to optimising the negative log-
likelihood:

Lossce = −
∑
i∈I

log(scoreexp(ui, vi)) (11)

The transition from cosine to dot-product is re-
quired in order to facilitate the new scoring func-
tion. In this setting, scoreexp(ui, vi) acts as a soft-
max layer, requiring the input values to be un-
bounded for functioning correctly, whereas cosine
would restrict values to a range between -1 and 1.

The new scoring function based on softmax en-
courages the model to further distinguish between
relevant and irrelevant images. While the hinge
loss function is also optimised in minibatches,
it independently optimises the relevance score of
each training pair, whereas softmax connects the
scores for all the pairs into a probability distri-
bution. When this distribution is optimised using
cross-entropy, it specifically focuses more on in-
stances that incorrectly have relatively high scores
compared to other pairs in the dataset. In ad-
dition, optimising towards a larger score for the
known correct example also reduces the scores for
all other pairs in the batch.

3 Evaluation Setup

Given an image and a text written in response
to this image, the goal of the system is to as-
sign a score and return a decision about the rel-
evance of this text. We evaluate the framework
on an experimental dataset collected by the En-
glish Profile1, containing 543 answers written by
language learners in response to visual prompts in
the form of photographs. As part of the instruc-
tions, the students were able to select the image
that they wanted to write about, and were then free
to choose what to write. The length of the col-
lected answers ranges from 1 to 44 sentences.

1http://www.englishprofile.org/

191



This dataset contains real-world examples for
the task of visual relevance detection, and there-
fore also proposes a range of challenges. The an-
swers are provided by students in various stages
of learning English, which means the texts con-
tain numerous writing errors. Spelling mistakes
prevent the model from making full use of word
embeddings, and previously unseen grammatical
mistakes will cause trouble for the LSTM compo-
sition function. The students have also interpreted
the open writing task in various different ways
– while some have answered by describing the
content of the image, others have instead talked
about personal memories triggered by the image,
or even created a short fictional story inspired by
the photo. This has led to answers that vary quite
a bit in writing style, vocabulary size and sentence
length.

Ideally, we would like to train the model on ex-
amples where pairs of images and sentences are
specifically annotated for their semantic relevance.
However, since the collected dataset is not large
enough for training neural networks, we make
use of the Flickr30k (Young et al., 2014) dataset
which contains implicitly relevant pairs of images
and their corresponding descriptions. Flickr30k
is an image captioning dataset, containing 31,014
images and 5 hand-written sentences describing
each image. We use the same splits as Karpathy
and Li (2015) for training and development; the
dataset sizes are shown in Table 1. During train-
ing, the model is presented with 32 sentences and
their corresponding images in each batch, mak-
ing sure all the images within a batch are unique.
The loss function from Section 2.3 is then min-
imised to maximise the predicted scores for the
32 relevant pairs, and minimise the scores for the
32 ∗ 32− 32 = 992 random combinations.

Theano (Bergstra et al., 2010) was used to im-
plement the neural network model. The texts were
tokenised and lowercased, and sentences were
padded with special markers for start and end po-
sitions. The vocabulary includes all words that ap-
peared in the training set at least twice, plus an ex-
tra token for any unseen words. Words were repre-
sented with 300-dimensional embeddings and ini-
tialised with the publicly available vectors trained
with CBOW (Mikolov et al., 2013). All other pa-
rameters were initialised with random values from
a normal distribution with mean 0 and standard de-
viation 0.1.

ACC AP P@50

Random 50.0 50.0 50.0

LSTM-COS 68.2 71.6 81.0
+ gating 69.6 74.6 84.4
+ cross-ent 71.1 79.0 92.2
+ dropout 75.4 81.9 89.8

Table 3: Results on the dataset of short answers
written by language learners in response to visual
prompts. Reporting accuracy, average precision,
and precision at rank 50.

We trained for 300 epochs, measuring perfor-
mance on the development set after every full pass
over the data, and used the best model for evaluat-
ing on the test set. The parameters were optimised
using gradient descent with the initial learning rate
at 0.001 and the ADAM algorithm (Kingma and Ba,
2015) for dynamically adapting the learning rate
during training. Dropout was applied to both word
embeddings and image vectors with p = 0.5. In
order to avoid any outlier results due to random-
ness in the model, which affects both the random
initialisation and the sampling of negative image
examples, we trained each configuration with 10
different random seeds and present here the aver-
aged results.

4 Experiments

We evaluate the visual relevance detection model
by training on Flickr30k and testing on the dataset
of learner responses to visual prompts. In order to
handle multiple sentences in the written responses,
every sentence is first scored individually and the
scores are then averaged over all the sentences.
For every textual answer in the dataset, we create a
negative datapoint by pairing it with a random im-
age. The task is then to accurately detect whether
the pair is truly relevant or randomly created, by
assigning it high or low relevance scores. In or-
der to convert the model output to a binary classi-
fication, we employ leave-one-out optimisation –
one example at a time is used for testing, while the
others are used to calculate the optimal threshold
for accuracy. We also report average precision and
precision at detecting irrelevant answers in the top
50 returned instances, which measure the quality
of the ranking and do not require a fixed thresh-
old.

Results for the different system architectures

192



0.65 In this picture there are lot of people and each one has a different
attitude.

0.81 In the foreground, people are waiting for the green light in order to
cross the street.

-2.75 While a child is talking with an adult about something that is on the
other side of the road, instead a women, with lots of bag in her left
hand, is chatting with her mobile telephone.

0.63 Generally speaking, the picture is full of bright colours and it con-
veys the idea of crowded city.

-2.38 Looking at this pictures reminds me of the time I went scuba diving
in the sea.

-2.16 It’s fascinating, because you are surrounded by water and fishes and
everything seems so coulorful and adventurous.

-1.40 Another good part of diving is coming up.

-1.70 You swim to the surface and you see the sunlight coming nearer and
nearer until you get out and can breathe ”real” air again.

Table 2: Predicted scores from the best relevance scoring model, given example sentences from the
learner dataset and the included photo as a prompt. The first 4 sentences were written in response to this
image, whereas the last 4 were written about a different photo.

can be seen in Table 3. The baseline LSTM-
COS system is based on the framework by Kiros
et al. (2014) – it uses an LSTM for composing
a sentence into a vector, calculates the relevance
score by finding the cosine similarity between the
sentence vector and the image vector, and opti-
mises the model using the hinge loss function.
This model already performs relatively well and is
able to distinguish between relevant and random
image-text pairs with 68.2% accuracy.

On top of this model we incrementally add 3
modifications and measure their impact on the per-
formance. First, we augment the model with the
gating architecture described in Section 2.2. The
vector representation of the text is used to calcu-
late a dynamic mask, which is then applied to the
image vector. This allows the model to first read
the sentence, and then decide which parts of the
image are more important for the similarity cal-
culation. The inclusion of the gating component
improves accuracy by 1.4% and average precision
by 3%.

Next, we change the scoring and optimisation
functions as described in Section 2.3. Cosine simi-
larity measure is substituted with a dot product be-
tween the vectors, removing useful bounds on the
score, but allowing more flexibility in the model.
In addition, the hinge loss function is exchanged
for calculating the negative cross-entropy over a
softmax. While the hinge loss performs only pair-
wise comparisons and applies a sharp cut-off, soft-
max ties all the examples into a probability dis-
tribution and provides a more gradual prioritisa-

DEV TEST

ACC POS NEG ACC

Random 16.7 0.5 0.5 16.7

LSTM-COS 70.8 0.7 0.0 72.6
+ gating 75.6 0.5 -0.6 76.5
+ cross-ent 82.8 5.8 -5.2 83.8
+ dropout 87.0 5.6 -3.7 87.4

Table 4: Results for different system configura-
tions on the Flickr30k development and test sets.
We report accuracy and the average predicted
scores for positive and negative examples.

tion for the parameter optimisation. By introduc-
ing these changes, the accuracy is again increased
by 1.5% and average precision by 4.4%.

Finally, we apply dropout with probability 0.5
to both the 300-dimensional word embeddings
in the input sentence and the 1024-dimensional
image representation produced by the BVLC
GoogLeNet. By randomly setting half of the val-
ues to 0 during training, additional variance is in-
troduced to the available data and the model is
becomes more robust for handling noisy learner-
generated text. Integrating dropout improves the
performance further by 4.3% and average preci-
sion by 2.9%.

Table 2 contains examples of the predicted
scores from the final model, given example sen-
tences written by language learners. For most
sentences, the model successfully distinguishes
between relevant and irrelevant topics, assigning

193



9.866.954.281.50-3.63

Input: A girl in an orange tank top is walking her bike through the forrest.

Input: Two white dogs are laying in the doorway of a wooden floored apartment.

8.587.732.800.66-3.42

Figure 2: Relevance scores for two example sentences, using the best model from Section 4. Higher
values indicate higher confidence in the text being relevant to the image.

lower scores to the last 4 sentences that describe a
different image. However, the model also makes
a mistake and incorrectly assigns a low score to
the third sentence – this likely happens due to the
sentence being much longer and more convoluted
than most examples in the training data, leading
the LSTM to lose some important information in
the sentence representation.

For comparison, we also evaluate the system ar-
chitectures on the Flickr30k dataset in Table 4. In
this setting, we present the model with a sentence
and 6 images from the Flickr30k test set, one of
which is known to be relevant while the others
are selected randomly. Accuracy is then measured
as the proportion of test cases where the model
chooses the correct image as the most relevant one.
A random baseline has a 1 in 6 chance of finding
the correct image for an input sentence, as there
are 5 negative examples for every positive exam-
ple. We also report the average scores assigned by
the models to positive (relevant) and negative (not
relevant) pairs of images and sentences. As can be
seen by the averaged predicted scores in Table 4,
the final system is free to push positive and nega-
tive examples apart by a larger margin, increasing
the average score difference by an order of magni-
tude.

5 Analysis

Figure 2 contains predicted scores for different im-
ages, given example sentences as input. As can be
seen, the system returns high scores when the sen-
tences are paired with very relevant images, and
also offers an intuitive grading of relevance. For
the first sentence describing an orange shirt and

a bicycle, the model has assigned reasonably high
scores to other images containing bikes and orange
objects. Similarly, for the second sentence the sys-
tem has found alternative images containing dogs
and wooden floors.

In order to analyse the possible weaknesses of
the model, we manually examined cases that are
difficult for the system. Figure 3 contains 4 ex-
amples from the Flickr30k development set where
a valid image-description pair received a negative
score from the relevance model. While a negative
score does not necessarily mean an error, as that
depends on the chosen threshold, it indicates that
the model has low confidence in this being a cor-
rect pairing. The use of rare terms is a source of
confusion for the model – if a word was not used
in the training data sufficiently, it will make the
relevance calculation more difficult. For example,
”unicycle” and ”fire lit batons” are relatively rare
terms that can cause confusion in example A. In
addition, the description mentions only the man,
while most of the photo depicts a crowd and a
building.

An alternative source of confusion comes from
the visual component, with GoogLeNet having
more trouble with certain images. Out of 5,070
image-sentence pairs in the development data, the
best model assigned negative scores to 222. Out of
those, only 140 had a unique image, indicating that
the visual component has more trouble detecting
the content of certain unusual images, such as ex-
amples C and D, regardless of the textual compo-
sition. Both of these issues represent cases where
the model is faced with input that is substantially
different from the training examples, and therefore

194



Figure 3: Example valid pairs of images and sentences from the Flickr30k development set where the
system incorrectly predicts a low relevance score.

Figure 4: Visualisation of the 1,024 visual gating weights for two example sentences. Lighter areas
indicate features where the model chooses to discard the visual information.

fails to perform as well as possible. This can be
remedied by either creating models that are able
to generalise better to unseen examples, or by ex-
panding the sources of available training data.

We also analysed the gating component, which
is conditioned on the text vector and applied to
the image vector. The calculation of the gating
weights includes a bias term and a logistic func-
tion, which means it could easily adapt to always
predicting a vector of 1-s, effectively leaving the
image vector unmodified. Instead, we found that
the model actively makes use of this additional ar-
chitecture, choosing to switch off many features in
the image vector. Figure 4 shows a visualisation of
the 1024 gating weights for the two example sen-
tences used in Figure 2. Values close to 0 are rep-
resented by white, and values close to 1 are shown
in blue. As can be seen, quite a few features re-
ceive weights close to zero, therefore effectively
being turned off. In addition, the two sentences
have fairly different gating signatures, demonstrat-
ing that weights are being calculated dynamically
based on the input sentence.

6 Conclusion

We presented a system for mapping images and
sentences into a shared distributed vector space
and evaluating their semantic similarity. The task
is motivated by applications in automated lan-
guage assessment, where scoring systems focus-
ing on grammaticality are otherwise vulnerable to

memorised off-topic answers.
The model starts by learning embeddings for

words in the input sentence, then composing them
to a vector representation using an LSTM. In par-
allel, the image is first passed through a pre-trained
image detection model to extract visual features,
and then a further supervised layer to transform
the representation to a suitable space. We found
that applying dropout on both word embeddings
and visual features allowed the model to gener-
alise better, providing consistent improvements in
accuracy.

Next, we introduced a novel gating compo-
nent which first reads the input sentence and then
decides which visual features from the image
pipeline are important for that specific sentence.
We found that the model actively makes use of
this component, predicting different gating pat-
terns depending on the input sentence, and sub-
stantially improves the overall performance in the
evaluations. Finally, we moved from a pairwise
hinge loss to optimising a probability distribution
over the possible candidates, and found that this
further improved relevance accuracy.

The experiments were performed on two differ-
ent datasets – a collection of short answers writ-
ten by language learners in response to visual
prompts, and an image captioning dataset which
pairs single sentences to photos. The relevance as-
sessment model was able to distinguish unsuitable
image-sentence pairs on both datasets, and the

195



model modifications showed consistent improve-
ments on both tasks. We conclude that automated
relevance detection of short textual answers to vi-
sual prompts can be performed by mapping im-
ages and sentences into the same distributed vec-
tor space, and it is a potentially useful addition for
preventing off-topic responses in automated as-
sessment systems.

References
Dimitrios Alikaniotis, Helen Yannakoudakis, and

Marek Rei. 2016. Automatic Text Scoring Using
Neural Networks. Proceedings of the 54th Annual
Meeting of the Association for Computational Lin-
guistics .

James Bergstra, Olivier Breuleux, Frederic Frédéric
Bastien, Pascal Lamblin, Razvan Pascanu, Guil-
laume Desjardins, Joseph Turian, David Warde-
Farley, and Yoshua Bengio. 2010. Theano: a CPU
and GPU math compiler in Python. Proceedings
of the Python for Scientific Computing Conference
(SciPy) http://www-etud.iro.umontreal.ca/ warde-
far/publications/theano scipy2010.pdf.

Ted Briscoe, Ben Medlock, and Øistein Andersen.
2010. Automated Assessment of ESOL Free Text
Examinations. Technical report.

Danqi Chen, Jason Bolton, and Christopher D. Man-
ning. 2016. A Thorough Examination of the CNN
/ Daily Mail Reading Comprehension Task. In Pro-
ceedings of the 54th Annual Meeting of the Associa-
tion for Computational Linguistics.

Ronan Cummins, Helen Yannakoudakis, and Ted
Briscoe. 2015. Unsupervised Modeling of Topical
Relevance in L2 Learner Text. In In Proceedings
of the 11th Workshop on Innovative Use of NLP for
Building Educational Applications.

Jia Deng, Wei Dong, Richard Socher, Li-Jia Li, Kai
Li, and Li Fei-Fei. 2009. ImageNet: A large-scale
hierarchical image database. 2009 IEEE Confer-
ence on Computer Vision and Pattern Recognition
https://doi.org/10.1109/CVPR.2009.5206848.

Andrea Frome, Greg S. Corrado, Jonathon Shlens,
Samy Bengio, Jeffrey Dean, Marc’ Aurelio Ran-
zato, and Tomas Mikolov. 2013. Devise: A
deep visual-semantic embedding model. Ad-
vances in neural information processing systems
http://papers.nips.cc/paper/5204-devise-a-deep-
visual-semantic-embedding-model.

Derrick Higgins, Jill Burstein, and Yigal At-
tali. 2006. Identifying Off-topic Student
Essays Without Topic-specific Training
Data. Natural Language Engineering 12.
https://doi.org/10.1017/S1351324906004189.

Sepp Hochreiter and Jürgen Schmidhuber. 1997. Long
Short-term Memory. Neural Computation 9.
https://doi.org/10.1.1.56.7752.

Youmna Hussein, Marek Rei, and Ted Briscoe. 2017.
An Error-Oriented Approach to Word Embedding
Pre-Training. In Proceedings of the 12th Workshop
on Innovative Use of NLP for Building Educational
Applications.

Yangqing Jia, Evan Shelhamer, Jeff Donahue, Sergey
Karayev, Jonathan Long, Ross Girshick, Sergio
Guadarrama, and Trevor Darrell. 2014. Caffe: Con-
volutional Architecture for Fast Feature Embedding.
In ACM International Conference on Multimedia.
https://doi.org/10.1145/2647868.2654889.

Nal Kalchbrenner, Ivo Danihelka, and Alex
Graves. 2015. Grid Long Short-Term
Memory. arXiv preprint arXiv:1507.01526
http://arxiv.org/abs/1507.01526.

Andrej Karpathy and Fei Fei Li. 2015. Deep
visual-semantic alignments for generat-
ing image descriptions. Proceedings of
the IEEE Computer Society Conference on
Computer Vision and Pattern Recognition
https://doi.org/10.1109/CVPR.2015.7298932.

Yoon Kim, Yacine Jernite, David Sontag, and Alexan-
der M. Rush. 2016. Character-Aware Neural Lan-
guage Models. In Proceedings of the 30th AAAI
Conference on Artificial Intelligence (AAAI’16)
http://arxiv.org/abs/1508.06615.

Levi King and Markus Dickinson. 2016. Shallow Se-
mantic Reasoning from an Incomplete Gold Stan-
dard for Learner Language. In Proceedings of the
11th Workshop on Innovative Use of NLP for Build-
ing Educational Applications.

Diederik P. Kingma and Jimmy Lei Ba. 2015. Adam:
a Method for Stochastic Optimization. In Interna-
tional Conference on Learning Representations.

Ryan Kiros, Ruslan Salakhutdinov, and Richard S
Zemel. 2014. Unifying Visual-Semantic Em-
beddings with Multimodal Neural Language
Models. arXiv preprint arXiv:1411.2539
http://arxiv.org/abs/1411.2539v1.

Benjamin Klein, Guy Lev, Gil Sadeh, and Lior
Wolf. 2015. Associating neural word em-
beddings with deep image representations us-
ing Fisher Vectors. Proceedings of the IEEE
Computer Society Conference on Computer Vi-
sion and Pattern Recognition pages 4437–4446.
https://doi.org/10.1109/CVPR.2015.7299073.

Lin Ma, Zhengdong Lu, Lifeng Shang, and Hang
Li. 2015. Multimodal convolutional neural net-
works for matching image and sentence. In
Proceedings of the IEEE International Confer-
ence on Computer Vision. pages 2623–2631.
https://doi.org/10.1109/ICCV.2015.301.

196



Tomáš Mikolov, Kai Chen, Greg Corrado, and
Jeffrey Dean. 2013. Efficient Estimation of
Word Representations in Vector Space. In
Proceedings of the International Conference
on Learning Representations (ICLR 2013).
https://doi.org/10.1162/153244303322533223.

Hwee Tou Ng, Siew Mei Wu, Ted Briscoe, Christian
Hadiwinoto, Raymond Hendy Susanto, and Christo-
pher Bryant. 2014. The CoNLL-2014 Shared Task
on Grammatical Error Correction. In Proceedings
of the Eighteenth Conference on Computa-
tional Natural Language Learning: Shared Task.
http://www.aclweb.org/anthology/W/W14/W14-
1701.

Isaac Persing and Vincent Ng. 2014. Modeling prompt
adherence in student essays. In 52nd Annual Meet-
ing of the Association for Computational Linguistics
(ACL 2014).

Marek Rei, Gamal K. O. Crichton, and Sampo Pyysalo.
2016. Attending to Characters in Neural Sequence
Labeling Models. In Proceedings of the 26th Inter-
national Conference on Computational Linguistics
(COLING-2016). http://arxiv.org/abs/1611.04361.

Marek Rei and Ronan Cummins. 2016. Sen-
tence Similarity Measures for Fine-Grained Es-
timation of Topical Relevance in Learner Es-
says. In Proceedings of the 11th Workshop on
Innovative Use of NLP for Building Educational
Applications (BEA). http://ir.dcs.gla.ac.uk/ ro-
nanc/papers/reiBEA2016.pdf.

Tim Rocktäschel, Edward Grefenstette, Karl Moritz
Hermann, and Phil Blunsom. 2016. Reasoning
about Entailment with Neural Attention. Interna-
tional Conference on Learning Representations .

Keisuke Sakaguchi, Michael Heilman, and Nitin
Madnani. 2015. Effective Feature Integration
for Automated Short Answer Scoring. HLT-
NAACL 2015 - Human Language Technology
Conference of the North American Chapter
of the Association of Computational Lin-
guistics, Proceedings of the Main Conference
http://www.scopus.com/inward/record.url?eid=2-
s2.0-84960119751&partnerID=tZOtx3y1.

Swapna Somasundaran, Chong Min Lee, Martin
Chodorow, and Xinhao Wang. 2015. Automated
Scoring of Picture-based Story Narration. Proceed-
ings of the Tenth Workshop on Innovative Use of
NLP for Building Educational Applications .

Nitish Srivastava, Geoffrey E. Hinton, Alex
Krizhevsky, Ilya Sutskever, and Ruslan Salakhut-
dinov. 2014. Dropout : A Simple Way to
Prevent Neural Networks from Overfitting. Jour-
nal of Machine Learning Research (JMLR) 15.
https://doi.org/10.1214/12-AOS1000.

Christian Szegedy, Wei Liu, Yangqing Jia, Pierre
Sermanet, Scott Reed, Dragomir Anguelov, Du-
mitru Erhan, Vincent Vanhoucke, and Andrew Ra-
binovich. 2015. Going deeper with convolutions.

Computer Vision and Pattern Recognition (CVPR)
https://doi.org/10.1109/CVPR.2015.7298594.

Kai Sheng Tai, Richard Socher, and Christopher D.
Manning. 2015. Improved Semantic Representa-
tions From Tree-Structured Long Short-Term Mem-
ory Networks. Proceedings of the 53rd Annual
Meeting of the Association for Computational Lin-
guistics and the 7th International Joint Conference
on Natural Language Processing .

John Wieting, Mohit Bansal, Kevin Gimpel, and
Karen Livescu. 2016. Charagram: Embedding
Words and Sentences via Character n-grams. In
Proceedings of the 2016 Conference on Empir-
ical Methods in Natural Language Processing.
http://arxiv.org/abs/1607.02789.

Helen Yannakoudakis, Ted Briscoe, and Ben Medlock.
2011. A New Dataset and Method for Automati-
cally Grading ESOL Texts. In Proceedings of the
49th Annual Meeting of the Association for Com-
putational Linguistics: Human Language Technolo-
gies. http://www.aclweb.org/anthology/P11-1019.

Peter Young, Alice Lai, Micah Hodosh, and Ju-
lia Hockenmaier. 2014. From image descrip-
tions to visual denotations: New similarity met-
rics for semantic inference over event descriptions.
In Transactions of the Association for Computa-
tional Linguistics. http://web.engr.illinois.edu/ ay-
lai2/publications/TACL2014DenotationGraph.pdf.

Xiang Zhang, Junbo Zhao, and Yann LeCun.
2015. Character-level Convolutional Net-
works for Text Classification. In Advances
in Neural Information Processing Systems.
http://arxiv.org/abs/1509.01626#.

197


