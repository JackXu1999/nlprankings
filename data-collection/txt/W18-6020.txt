



















































Extended and Enhanced Polish Dependency Bank in Universal Dependencies Format


Proceedings of the Second Workshop on Universal Dependencies (UDW 2018), pages 173–182
Brussels, Belgium, November 1, 2018. c©2018 Association for Computational Linguistics

173

Extended and Enhanced Polish Dependency Bank
in Universal Dependencies Format

Alina Wróblewska
Institute of Computer Science
Polish Academy of Sciences

ul. Jana Kazimierza 5
01-248 Warsaw, Poland

alina@ipipan.waw.pl

Abstract

The paper presents the largest Polish Depen-
dency Bank in Universal Dependencies for-
mat – PDBUD – with 22K trees and 352K
tokens. PDBUD builds on its previous ver-
sion, i.e. the Polish UD treebank (PL-SZ),
and contains all 8K PL-SZ trees. The PL-
SZ trees are checked and possibly corrected
in the current edition of PDBUD. Further
14K trees are automatically converted from
a new version of Polish Dependency Bank.
The PDBUD trees are expanded with the en-
hanced edges encoding the shared dependents
and the shared governors of the coordinated
conjuncts and with the semantic roles of some
dependents. The conducted evaluation exper-
iments show that PDBUD is large enough
for training a high-quality graph-based depen-
dency parser for Polish.

1 Introduction

Natural language processing (NLP) is nowadays
dominated by machine learning methods, espe-
cially deep learning methods. Data-driven NLP
tools not only perform more accurately than
rule-based tools, but are also easier to develop.
The shift towards machine learning methods is
also visible in syntactic parsing, especially depen-
dency parsing. The vast majority of the contempo-
rary dependency parsing systems (e.g. Nivre et al.,
2006; Bohnet, 2010; Dozat et al., 2017; Straka and
Straková, 2017) take advantage of machine learn-
ing methods. Based on training data, parsers learn
to analyse sentences and to predict the most appro-
priate dependency structures of these sentences.
Even if various learning methods were applied to
data-driven dependency parsing (e.g. Jiang et al.,
2016), the best results so far are given by the su-
pervised methods (cf. Zeman et al., 2017). Su-
pervised dependency parsers trained on correctly
annotated data achieve high parsing performance

even for languages with rich morphology and rel-
atively free word order, such as Polish.

The supervised learning methods require gold-
standard training data, whose creation is a time-
consuming and expensive process. Nevertheless,
dependency treebanks have been created for many
languages, in particular within the Universal De-
pendencies initiative (UD, Nivre et al., 2016).
The UD leaders aim at developing a cross-
linguistically consistent tree annotation schema
and at building a large multilingual collection of
dependency treebanks annotated according to this
schema.

Polish is also represented in the Universal
Dependencies collection. There are two Polish
treebanks in UD: the Polish UD treebank (PL-
SZ) converted from Składnica zależnościowa1 and
the LFG enhanced UD treebank (PL-LFG) con-
verted from a corpus of the Polish LFG struc-
tures.2 PL-SZ contains more than 8K sentences
with 10.1 tokens per sentence on average. PL-LFG
is larger and contains more than 17K sentences,
but the average number of tokens per sentence is
only 7.6.3

This paper presents the largest Polish Depen-
dency Bank in Universal Dependencies format
– PDBUD4 – with 22K trees and 352K to-
kens (hence 15.8 tokens per sentence on aver-
age). PDBUD builds on its previous version, i.e.
the Polish UD treebank (PL-SZ), and contains all
8K PL-SZ trees. The PL-SZ trees are checked
and possibly corrected in the current edition of

1Składnica zależnościowa was converted to the UD for-
mat by Zeman et al. (2014).

2LFG structures were converted by A. Przepiórkowski
and A. Patejuk.

3A detailed comparison of PL-SZ and PL-LFG is pre-
sented on http://universaldependencies.org/
treebanks/pl-comparison.html.

4PDBUD is publicly available on http://zil.
ipipan.waw.pl/PDB.

http://universaldependencies.org/treebanks/pl-comparison.html
http://universaldependencies.org/treebanks/pl-comparison.html
http://zil.ipipan.waw.pl/PDB
http://zil.ipipan.waw.pl/PDB


174

PDBUD. Further 14K trees are automatically con-
verted from a new version of Polish Dependency
Bank (PDB, see Section 2). Polish sentences un-
derlying the additional PDB trees contain prob-
lematic linguistic phenomena whose conversion
requires some modifications of the UD annotation
schema (see Section 3). Furthermore, the PDBUD
trees are expanded with the enhanced edges en-
coding the shared dependents and the shared gov-
ernors of the coordinated conjuncts (see Section
4) and with the semantic roles of some dependents
(see Section 5). Finally, we conduct some eval-
uation experiments. The evaluation results show
that PDBUD is large enough for training a high-
quality graph-based dependency parser for Polish
(see Section 6).

2 Polish Dependency Bank

2.1 PDB

The first Polish dependency treebank – Składnica
zależnościowa (Wróblewska, 2012) – was a col-
lection of about 8K trees which were automati-
cally converted from Polish constituent trees of
Składnica frazowa (Woliński et al., 2011). All
sentences of Składnica were derived from Pol-
ish National Corpus (Przepiórkowski et al., 2012).
The annotated sentences are rather short with 10.2
tokens per sentence on average and corresponding
trees are relatively simple (there is only 289 non-
projective trees,5 i.e. 3.5% of all trees).

This first version of Polish dependency treebank
was enlarged with 4K trees (Wróblewska, 2014).
The additional trees resulted from the projection
of English dependency structures on Polish paral-
lel sentences from Europarl (Koehn, 2005), DGT-
Translation Memory (Steinberger et al., 2012),
OPUS (Tiedemann, 2012) and Pelcra Parallel
Corpus (Pęzik et al., 2011). The additional sen-
tences with the average length of 15.9 tokens
per sentence were longer than the sentences from

5Non-projective trees contain long distance dependencies
resulting in crossing edges. See the topicalisation example
Czerwoną kupiłam sukienkę ‘I bought a red dress’ (lit. ‘Red
I bought a dress’) with the following non-projective depen-
dency tree:

ROOT Czerwoną kupiłam sukienkę

red I bought dress

root

obj

amod

Składnica. The projection-based trees were also
more complex and 235 of them are non-projective
(i.e. 5.9% of all added trees). The entire set of
Składnica trees and the projection-based trees is
called Polish Dependency Bank (PDB).

PDB is still being developed at the Institute of
Computer Science PAS. The current version of
PDB is enlarged with a suite of 10K sentences an-
notated with the dependency trees. The additional
sentences are relatively complex (20.5 tokens per
sentence on average) and come from Polish Na-
tional Corpus (Przepiórkowski et al., 2012), Pol-
ish CDSCorpus6 (Wróblewska and Krasnowska-
Kieraś, 2017), and literature. There are 1388 non-
projective trees in this set (i.e. 13.9% of 10K
trees). Besides enlarging PDB, the development
consists in correcting the previous PDB trees.
The Składnica trees and the projection-based trees
are manually checked and corrected if necessary.

The current version of PDB consists of more
than 22K trees with 15.8 tokens per sentence
on average (see Table 1). There are 1912 non-
projective trees in PDB (i.e. 8.61% of all trees).

PDB PDBUD
# sentences 22,208
# tokens 351,715
# tokens per sentence 15.84
# dependency types 28 31 (48)*
% non-projective edges 1.76 1.75
% non-projective trees 8.61 8.03
% enhanced edges n/a 4.96
% enhanced graphs n/a 41.58

Table 1: Statistics of Polish Dependency Bank (PDB)
and its UD conversion (PDBUD). *There are 31 uni-
versal dependency types in PDBUD and 48 universal
types with the Polish-specific subtypes.

2.2 PDBUD
The PDB trees are automatically converted to
the UD trees according to the guidelines of Uni-
versal Dependencies v27 and the resulting set is
called PDBUD (i.e. Polish Dependency Bank in
Universal Dependencies format). PDBUD con-
tains all trees of the Polish UD treebank (PL-

6http://zil.ipipan.waw.pl/Scwad/
CDSCorpus

7http://universaldependencies.org/
guidelines.html

http://zil.ipipan.waw.pl/Scwad/CDSCorpus
http://zil.ipipan.waw.pl/Scwad/CDSCorpus
http://universaldependencies.org/guidelines.html
http://universaldependencies.org/guidelines.html


175

SZ), which are possibly corrected. The size of
PDBUD is exactly the same as the size of PDB,
i.e. 22K trees and 351K tokens (see Table 1). 1783
of the PDBUD trees are non-projective, i.e. 8.03%
of all trees. There are 17K enhanced edges (4.96%
of all edges) in PDBUD and 41.6% of the PDBUD
graphs have at least one enhanced edge.

The converted PDBUD trees are largely con-
sistent with the PL-SZ trees. While converting,
we try to preserve the universality principle of
UD, but some necessary modifications are es-
sential. The PL-SZ trees are rather simple and
the sentences underlying this data set do not con-
tain some linguistic phenomena, e.g. ellipsis, com-
parative constructions, directed speech, interpo-
lations and comments, nominative noun phrases
used in the vocative function, and many others.
Therefore, the repertoire of the UD relation sub-
types and language-specific features is slightly ex-
tended in PDBUD to cover these phenomena (see
Section 3). Furthermore, in contrast to the PL-SZ
trees, the PDBUD graphs contain enhanced edges
encoding shared dependents or shared governors
of coordinated elements (see Section 4). Finally,
some semantic labels are added that goes beyond
the standard annotation scheme of Universal De-
pendencies (see Section 5).

3 Corrections and extensions

Plenty of errors are corrected in the original Skład-
nica trees (and the projection-based trees) and thus
they are not transferred to these PDBUD trees,
which correspond to the PL-SZ trees. The errors in
the Składnica trees were predominantly caused by
the inadequate automatic conversion of the phrase-
structure trees into the dependency trees, particu-
larly by the erroneous labelling. Defective part-of-
speech tags, morphological features, lemmas, de-
pendency relations and their labels are manually
corrected by highly qualified linguists. The cor-
rection issues do not fall within the scope of this
paper. The conversion issues and extension sug-
gestions are described in the following sections.

3.1 Comparative constructions

Comparative constructions are distinguished in
the PDB trees and thus they are also marked in
PDBUD. According to Bondaruk (1998), there are
two types of comparative constructions in Polish:
comparatives of equality marked with e.g. tak ...
jak (‘as ... as’), taki ... jaki (‘just like’), and com-

paratives of inequality marked with NIŻ (‘than’).8

All markers introducing comparative construc-
tions, e.g. JAK, NIŻ, JAKBY, NICZYM, are con-
verted as the subordinate conjunctions SCONJ
with the feature ConjType=Cmpr.9 Comparative
constructions are annotated with the following de-
pendencies (see Figure 1): the comparative marker
is labelled mark and it depends on the main el-
ement of the comparative construction labelled
obl:cmpr (a new UD subtype).

znali ceny lepiej niż kelnerzy

they know prices better than waiters

obj
advmod obl:cmpr

mark

Figure 1: The PDBUD tree of [...] znali ceny potraw
lepiej niż kelnerzy (‘they know the prices of dishes bet-
ter than the waiters’) with the comparative construc-
tion.

3.2 Constructions with JAKO

The lexeme JAKO is one of the uninflectable
Polish parts of speech. It causes considerable
difficulties and is heterogeneously analysed as
a preposition, a coordinating conjunction, a sub-
ordinating conjunction, or an adverb in the tra-
ditional Polish linguistics. According to the con-
cept of the bi-functional subordinating conjunc-
tion JAKO (Wróblewska and Wieczorek, 2018),
we convert all examples of JAKO as SCONJ
with the feature ConjType=Pred (i.e. a predica-
tive conjunction – a new Polish-specific feature).
The subordinating conjunction JAKO, which is la-
belled mark, can be governed by the head of
any constituent phrase (e.g. a nominal, preposi-
tional, or verbal phrase) which is, in turn, gov-
erned by the sentence predicate subcategorising
another phrase of the same type (see Figure 2).
There is an identification relation between the sub-

8Comparatives of inequality are sometimes introduced by
the comparative forms of adjectives or adverbs (marked in
PDBUD with the feature Degree=Cmp). However, compara-
tives of inequality can also be introduced by non-comparative
adjectives (e.g. inny ‘other’), adverbs (e.g. inaczej ‘in another
way’, przeciwnie ‘on the contrary’), or even the verb woleć
‘to prefer’.

9Cmp is the value of Degree in UD and comp stands ei-
ther for the oblique complement obl:comp in French or for
the object of comparison nmod:comp in Uyghur. We there-
fore decide to introduce a new value Cmpr/cmpr to indicate
comparative constructions.



176

categorised argument and the phrase introduced
by JAKO (hence the bi-functional subordinating
conjunction) which could be marked with an en-
hanced edge.

o zgodę wystąpił jako o środek
for permission he applied as for measure

case
obl:arg

case
mark

obl

Figure 2: The PDBUD tree of the sentence O zgodę
taką wystąpił jako o środek zapobiegawczy (‘He ap-
plied for such permission as a precautionary measure’)
with JAKO.

3.3 Mobile inflection

The mobile inflections (marked as aglt in the Pol-
ish tagset, e.g. -em in odwołałem ‘IMask recalled’
or -ś in zrobiłabyś ‘youFem would do’) are the en-
clitics which substitute auxiliary verbs in the past
perfect constructions. We convert them as AUX
with Aspect, Number, and Person features, sim-
ilar to PL-SZ. The repertoire of the morphological
features of the mobile inflections is enriched with
Clitic=Yes and its Variant – either Long (e.g. -em
in odwołałem ‘IMask recalled’) or Short (e.g. -m
in odwołałam ‘IFem recalled’). The mobile inflec-
tions are marked with the further features Verb-
Form=Fin and Mood=Ind in the PL-SZ trees, but
as they are not the proper finite verbs, these fea-
tures seem to be incorrect and are not included in
PDBUD. A mobile inflection is the special case of
an auxiliary verb. Therefore, the relation between
the mobile inflection and its governing participle
is labelled with a special subtype aux:clitic (a new
UD subtype).

3.4 Conditional particle

The conditional particle BY, e.g. -by- in zro-
biłabyś (‘youFem would do’), is annotated in PL-
SZ as an auxiliary AUX with the features As-
pect=Imp, Mood=Cnd and VerbForm=Fin, and
with the lemma BYĆ (‘to be’). It is a particle which
doesn’t bear any grammatical features in Polish
(cf. Przepiórkowski et al., 2012). Since it is not
any verb form, it cannot be annotated with Aspect,
Mood and VerbForm features which are reserved
for verbs. Furthermore, its lemma form is BY and
not BYĆ. The conditional particle BY is converted

as PART in PDBUD. The relation between this
particle and its governor is labelled with aux:cnd
(a new UD subtype).

3.5 Other morphosyntactic extensions
We propose some morphosyntactic extensions of
the schema which was used to annotate the PL-SZ
trees. Some of these extensions are already defined
in the UD guidelines, but they were not applied in
PL-SZ. Other extensions are newly defined.

ADP There is only one postposition in Polish
– TEMU (‘ago’), which is converted in PDBUD
as the adposition ADP with the feature Adp-
Type=Post. In PL-SZ, the postposition TEMU
was wrongly assigned the feature AdpType=Prep,
which is reserved for prepositions.

CCONJ We convert the conjunctions PLUS and
MINUS as the coordinating conjunction CCONJ
with the feature ConjType=Oper (a mathematical
operator). There was not any conjunction of this
kind in PL-SZ.

Digits Digits (NumForm=Digit) and roman
numbers (NumForm=Roman), which are distin-
guished in PDB, are converted as follows:

• ordinal numbers: the adjectives ADJ with
the feature NumType=Ord and other stan-
dard features of the adjectives,

• cardinal numbers: the numerals NUM with
the feature NumType=Card and other stan-
dard features of the numerals,

• other numbers: the tag X.

PUNCT Some features of the punctuation
marks are specified:

• PunctSide with the values Initial or Final,

• PunctType with one of the following val-
ues: Brck (bracket), Colo (colon), Comm
(comma), Dash, Elip (elipsis), Slsh (slash),
Blsh (backslash), etc.

Note that Elip, Slsh and Blsh are the newly defined
PunctType values.

SYM There are some symbols, e.g. %, §, $, +,
≤, and emojis, e.g. :-), :), in the PDB trees which
are converted as the symbols SYM in PDBUD.
Emojis are always labelled with the function dis-
course:emo in PDBUD (a new UD subtype).



177

VERB The impersonal verb forms10 are con-
verted as the adjectives ADJ with the fea-
ture Case in PL-SZ. In the Polish linguistics
however, the impersonals are considered verb
forms which cannot be conjugated by the gram-
matical case. Therefore, we convert them as
the verbs VERB with the following features:
Aspect (Perfective or Imperfective), Mood=Ind,
Person=0, Tense=Past, VerbForm=Fin, and
Voice=Act.

X The foreign words are converted as X tags
with the feature Foreign=Yes. Abbreviations are
also annotated as X tags with the features
Abbr=Yes and Pun=Yes if the abbreviation re-
quires a full stop (e.g. art. ‘article’), or Pun=No
if it doesn’t (e.g. cm ‘centimetre’).

3.6 Additional relation subtypes

We also propose to extend the inventory of the UD
relation subtypes with some additional subtypes
listed in the alphabetical order below.11

acl:attrib A Polish clause can modify a noun
phrase, even if it is not a proper relative clause,
e.g. [...] jest jedynie przejawem [...] prawa przy-
ciągania seksualnego: owad nieomylnie trafia do
pragnącej zapylenia rośliny. (‘[it] is just a sign
of the law of sexual attraction: an insect infalli-
bly goes to a plant that wants to be pollinated.’)
– the clause owad nieomylnie trafia [...] modi-
fies the noun prawa (‘of the law’). The relation
subtype acl:attrib (adverbial clause modifier of
a noun)12 is therefore introduced to cover con-
structions of this type.

10Impersonal verb forms are annotated with the tag imps
in PDB.

11The list of all dependency labels used in PDBUD
is as follows (the new dependency labels are under-
lined): acl:attrib, acl:relcl, advcl, advmod, advmod:arg,
advmod:neg, amod, appos, aux, aux:clitic (see Sec-
tion 3.3), aux:cnd (see Section 3.4), aux:imp, aux:pass,
case, cc, cc:preconj, ccomp, ccomp:obj, conj, cop,
csubj, det, discourse:emo (see Section 3.5), discourse:intj,
expl:impers, fixed, flat, iobj, list, mark, nmod, nmod:arg,
nmod:subj, nsubj, nsubj:pass, nummod, obj, obl, obl:agent,
obl:arg, obl:cmpr (see Section 3.1), orphan, parataxis,
parataxis:insert, parataxis:obj, punct, root, vocative,
xcomp.

12We considered labelling this relation with the function
advcl. However, “an adverbial clause modifier is a clause
which modifies a verb or other predicate” (see the UD
guidelines http://universaldependencies.org/
u/dep/advcl.html). Therefore, we decided not to use
the label advcl for an adverbial clause modifier of a noun.
Alternatively, this relation could be labelled with parataxis.

advmod:arg It is possible in Polish that an ad-
verbial is subcategorised by the verb, e.g. lepiej
(‘better’) is subcategorised by the infinitive mieć
(‘to have’) in Wiem, że możemy mieć lepiej (‘I
know that our situation/conditions will improve’,
lit. ‘I know that we can have better’). The rela-
tions between adverbials with the argument status
and governing verbs are labelled with the subtype
advmod:arg (an adverbial with the argument sta-
tus) in PDBUD.

advmod:neg The relation between the negation
particle NIE (‘not’) and its governor is labelled
with advmod:neg.

aux:imp The relation between the imperative
particle NIECH (‘let’s’) and its governor is labelled
with aux:imp.

ccomp:obj The PDB direct objects are
these verb arguments which are shifted into
the grammatical subjects in the passive sentences.
Not only noun objects but also clausal objects
undergo this shift, e.g. Przewidział, że inflacja
będzie spadać (‘He predicted that inflation would
go down’) and its passive version Że inflacja
będzie spadać zostało przewidziane (‘It was
foreseen that inflation would go down’, lit. ‘That
inflation would go down was foreseen’). In
order to convert the clausal objects, the subtype
ccomp:obj is proposed. It is worth considering
whether it is not a better solution to introduce
a new UD type cobj in analogy to csubj.

discourse:intj Interjections, e.g. cześć (‘hello’),
Och (‘Oh’), Okay, are labelled with the function
discourse:intj.

nmod:arg Noun complements of various parts
of speech, except for verbs, are labelled with
the function nmod:arg (noun complement), e.g.
środowiska in ochronaNOUN środowiskaNOUN13

(‘environmental protection’), dzieci in korytarz
pełenADJ dzieciNOUN (‘a corridor full of chil-
dren’).

nmod:subj Polish allows the grammatical sub-
ject realised as a prepositional phrase, e.g. doADP
2 lat więzienia in Grozi mu do 2 lat więzienia
(‘He faces up to two years in prison’, lit. ‘Up to
two years in prison threatens him’) or an adver-
bial phrase, e.g. RzadkoADV in Rzadko nie znaczy

13Ochrona (‘a protection’) is a deverbal noun that is de-
rived from the verb chronić (‘to protect’) subcategorising
an object.

http://universaldependencies.org/u/dep/advcl.html
http://universaldependencies.org/u/dep/advcl.html


178

wcale (‘It’s rare, nevertheless still occurs’, lit.
‘Rarely does not mean at all’). The relation be-
tween a prepositional or adverbial subject and
its governing verb is labelled with the subtype
nmod:subj. We realise that this subtype is not
the best solution. Alternatively, an adverbial sub-
ject could be labelled advmod:arg and a preposi-
tional subject could be labelled obl:arg, but then
we lose information about their subject function.
We also consider introducing two additional sub-
types – advmod:subj and obl:subj, but they are ex-
tremely confusing.14

4 Enhanced graphs

The PDBUD graphs contain the enhanced edges
encoding the dependents shared by the con-
juncts in coordinate structures (see Figure 3) and
the shared governors of the coordinated elements
(see Figure 4).

ROOT Dziewczynka śpiewa i tańczy

girl sings and dances

root
subj conjcc

subj

Figure 3: The PDBUD graph of the sentence
Dziewczynka śpiewa i tańczy (‘A girl sings and dances’)
with the shared subject. The enhanced edge is marked
with the dashed arrow.

ROOT Dziewczynki i chłopcy śpiewają

girl and boy sing

conj
cc

root
subj

subj

Figure 4: The PDBUD graph of Dziewczynki i chłopcy
śpiewają (‘Girls and boys are singing’) with the shared
governor of the coordinated subject. The enhanced
edge is marked with the dashed arrow.

In the PDB trees, all coordinated elements de-
pend on a conjunction and the relations between

14One of the reviewers of the paper suggests to use the la-
bel subj. It would be an ideal solution. However, the function
subj does not belong to the repertoire of the UD functions.

the conjunction and these elements are labelled
with a technical dependency type – conjunct.
A dependent shared by all conjuncts also depends
on the conjunction, but this relation is labelled
with the grammatical function of the shared de-
pendent, e.g. subj, obj. The conversion of the PDB
trees into the enhanced PDBUD graphs is thus
a straightforward process. There are only en-
hanced edges involved in the coordination con-
structions in PDBUD, but they are numerous, i.e.
more than 41% of all PDBUD trees contain at least
one enhanced edge (see Table 1).

5 Semantic labels

The UD format is extended by adding some se-
mantic labels in the 11th column. There are 28
semantic labels corresponding to some selected
frame elements of FrameNet (Fillmore and Baker,
2009; Ruppenhofer et al., 2010). In addition to
the common semantic roles: THEME, RECIPI-
ENT/BENEFICIARY, RESULT, there are roles re-
lated to

• place: SOURCE, GOAL, PLACE, PATH,

• time: TIME, DURATION, STARTING_POINT,
END_POINT, FREQUENCY/ITERATION,

• some other roles: ATTITUDE,
CAUSE/EXPLANATION/REASON, CIR-
CUMSTANCES/OTHER, CONCESSIVE,
CONDITION, CO-PARTICIPANT, DEGREE,
EVENT_DESCRIPTION, INSTRUMENT,
MANNER, PURPOSE, REPLACEE, ROLE,
STIMULUS, SUPERSET, and TITLE.

The additional semantic labels extend the se-
mantic meaning of indirect objects (iobj), oblique
nominals (obl)15, adverbial clause modifiers (ad-
vcl), some adverbial modifiers (advmod), some
noun modifiers (nmod), etc.

6 Evaluation

6.1 Dependency parsing systems
Various contemporary dependency parsing sys-
tems are tested in our evaluation experiments. All
of the tested systems allow dependency parsing,
but only some of them allow part-of-speech tag-
ging, morphological analysis and lemmatisation.
We test transition-based parsers (i.e. MaltParser,
UDPipe, and the transition-based version of BIST

15obl:arg is not semantically specified in PDBUD.



179

system architecture classifier parsing tagging lemmatisation
MaltParser (Nivre et al., 2006) trans LR yes no no
MATE parser (Bohnet, 2010) graph perceptron yes no no
BIST parser (Kiperwasser and Goldberg, 2016) trans/graph biLSTM yes no no
Stanford parser (Dozat et al., 2017) graph biLSTM yes yes no
UDPipe (Straka and Straková, 2017) trans 1-layer NN yes yes yes

Table 2: Properties of the dependency parsing systems tested in our experiments. Explanation: trans – a transition-
based parser, graph – a graph-based parser, LR – a linear classifier based on logistic regression, 1-layer NN – a non-
linear classifier based on 1-layer neural network, biLSTM – Bidirectional Long-Short Term Memory network.

parser) as well as graph-based parsers (i.e. MATE
parser, Stanford parser, and the graph-based ver-
sion of BIST parser). The properties of the tested
dependency parsing systems are summarised in
Table 2.

6.2 Data split

PDBUD is divided into three parts – training,
test and development data sets. The procedure
of assigning dependency trees to particular data
sets is generally random, but there is one con-
straint on the dividing procedure – the Składnica
trees, and thus also the PL-SZ trees, are not in-
cluded in the test set.16 Since sentences underly-
ing the Składnica trees are generally shorter than
the remaining sentences, the average number of to-
kens per sentence is significantly higher in the test
set than in two other sets. The statistics of the par-
ticular data sets is given in Table 3.

PDBUD
train test dev

# sentences 17770 2219 2219
# tokens per sentence 15.4 20.2 15.1
# non-projective trees 1310 302 172
% non-projective trees 7.4 13.6 7.7
# enhanced graphs 7147 1181 855
% enhanced graphs 40.2 53.2 38.5

Table 3: Statistics of the training (train), test (test), and
development (dev) data sets of PDBUD.

16PDBUD is used in the shared task on dependency parsing
of Polish – PolEval 2018 (http://poleval.pl). The or-
ganisers of this shared task decided not to use the PL-SZ
trees, which have been publicly available for some time, for
validation of the participating systems. Therefore, the PL-SZ
trees are not part of the PDBUD test set.

6.3 Evaluation methodology

We apply the evaluation measures defined for
the purpose of CoNLL 2018 shared task on Multi-
lingual Parsing from Raw Text to Universal De-
pendencies.17 The proposed metrics, i.e. LAS,
UAS, CLAS, MLAS, BLEX, evaluate the differ-
ent prediction aspects.

Two evaluation scenarios are proposed: 1) test-
ing the quality of dependency parsing of Polish,
and 2) testing the quality of morphosyntactic pre-
diction of dependency trees, i.e. part-of-speech
tagging, lemmatisation, and dependency parsing
of Polish. For the purpose of our evaluation, we
use the script18 of CoNLL 2018 shared task.

6.4 Results

6.4.1 Evaluation of dependency parsing

Stanford parser is the best performing parser on
Polish data (see Table 4). The second best parser –
MATE parser – performs surprisingly well. Even
if it doesn’t have any neural component, it outper-
forms not only the graph-based neural parser BIST
(87.06 LAS vs. 84.88 LAS), but also all transition-
based parsers. It is also worth mentioning that
the worst graph-based parser – BIST parser –
performs slightly better than its transition-based
version, which achieves LAS of 84.79% and is
the best of all transition-based parsers. It follows
that the graph-based parsers are generally better
suited for parsing Polish than the transition-based
parsers.

17http://universaldependencies.org/
conll18/evaluation.html

18http://universaldependencies.org/
conll18/conll18_ud_eval.py
In order to evaluate the dependency parsers in the first
evaluation scenario, the script conll18_ud_eval.py is slightly
modified, i.e. some conditions (e.g. single-root property) are
disregarded.

http://poleval.pl
http://universaldependencies.org/conll18/evaluation.html
http://universaldependencies.org/conll18/evaluation.html
http://universaldependencies.org/conll18/conll18_ud_eval.py
http://universaldependencies.org/conll18/conll18_ud_eval.py


180

System UAS LAS
MaltParser 79.73 74.57
BIST transition-based 87.91 84.79
UDPipe 86.23 83.41
MATE parser 89.49 87.06
BIST graph-based 87.97 84.88
Stanford parser 92.41 90.03

Table 4: Parsers are tested on the sentences with
the gold-standard tokens, lemmas, and part-of-speech
tags.

6.4.2 Evaluation of morphosyntactic
prediction of dependency trees

Two systems – Stanford system and UDPipe – are
tested in the task of morphosyntactic prediction of
dependency trees. These systems predict universal
part-of-speech tags (UPOS) as well as language-
specific tags (XPOS). Stanford system outper-
forms UDPipe in part-of-speech tagging (see Ta-
ble 5). Only UDPipe predicts morphological fea-
tures (UFEATS) and lemmas (LEMMA).

System UPOS XPOS UFEATS LEMMA
Stanford 97.87 92.45 n/a n/a
UDPipe 96.81 86.05 88.02 95.61

Table 5: The quality (F1 scores) of predicting uni-
versal part-of-speech tags (UPOS), Polish-specific tags
(XPOS), morphological features (UFEATS), and lem-
mas (LEMMA).

Stanford parser significantly outperforms UD-
Pipe in predicting labelled dependency trees
(LAS) and in predicting governors and depen-
dency relation types of content words (CLAS),
see Table 6. Since Stanford system doesn’t pre-
dict morphological features and lemmas, we can-
not compare MLAS and BLEX scores.

6.4.3 Summary
We carried out two evaluation experiments on
PDBUD data. The results of these experi-
ments show that the graph-based parsers, even
the parsers without any neural component, are bet-
ter suited for parsing Polish than the transition-
based parsing systems. The best results in pars-
ing Polish data without preceding morphosyntac-
tic analysis are achieved with Stanford parser,
i.e. 88.04 LAS. These results are slightly lower
than those reported in Dozat et al. (2017), i.e.

System UAS LAS CLAS MLAS BLEX
Stanford 91.33 88.04 85.48 n/a n/a
UDPipe 83.32 78.93 75.22 64.33 71.17

Table 6: The quality (F1 scores) of predicting unla-
belled dependency trees (UAS), labelled dependency
trees (LAS), governors and dependency relation types
of content words (CLAS), governors, dependency re-
lation types, universal part-of-speech tags and mor-
phological features of content words (MLAS), gover-
nors, dependency relation types and lemmas of content
words (BLEX).

90.32 LAS. The possible reason for this is that
our test data contains the dependency trees of
the longer sentences and thus there is more room
for making mistakes. If Stanford parser operates
on the PDBUD sentences with the gold-standard
part-of-speech tags, it performs better, i.e. 90.03
LAS.

7 Conclusions and future work

We presented PDBUD – the largest Polish de-
pendency bank with 22K dependency trees in
Universal Dependencies format. PDBUD con-
tains the corrected trees of the Polish UD tree-
bank (PL-SZ) and 14K dependency trees automat-
ically converted from Polish Dependency Bank.
The PDBUD trees are expanded with the en-
hanced edges encoding the shared dependents and
the shared governors of the coordinated conjuncts
and with the semantic roles of some dependents.
Our evaluation experiments showed that PDBUD
is large enough for training a high-quality graph-
based dependency parser for Polish.

We did our best to maintain consistency with
the UD guidelines while building PDBUD. How-
ever, some of our annotation decisions could be ar-
guable and should be discussed again in the con-
text of the universality assumptions of Universal
Dependencies.

There is plenty of elliptical constructions in Pol-
ish. Some of them are labelled with the function
orphan in PDBUD. In our future works, we plan to
add empty nodes representing the elided elements
to the PDBUD trees. Furthermore, we are going to
create a Polish version of Parallel Universal De-
pendency treebank.

PDBUD data were already used in the shared
task on automatic identification of verbal multi-



181

word expressions (LAW-MWE-CxG-2018)19 and
are currently used in the shared task on depen-
dency parsing of Polish (PolEval 2018).20 This is
a confirmation of the fact that PDBUD is of very
high quality. Therefore, in the future we would
like to replace the Polish UD treebank PL-SZ with
its corrected, extended and enhanced version –
PDBUD.

Acknowledgments

We would like to thank the anonymous review-
ers for their valuable comments that we will un-
doubtedly take into consideration before publish-
ing the final version of our data set.
The research presented in this paper was founded
by SONATA 8 grant no 2014/15/D/HS2/03486
from the National Science Centre Poland and by
the Polish Ministry of Science and Higher Educa-
tion as part of the investment in the CLARIN-PL
research infrastructure.

References
Bernd Bohnet. 2010. Very High Accuracy and Fast De-

pendency Parsing is not a Contradiction. In Pro-
ceedings of the 23rd International Conference on
Computational Linguistics, COLING 2010, pages
89–97.

Anna Bondaruk. 1998. Comparison in English and
Polish Adjectives: A Syntactic Study, volume 6 of
PASE Studies and Monographs. Folium, Lublin.

Timothy Dozat, Peng Qi, and Christopher D. Manning.
2017. Stanford’s Graph-based Neural Dependency
Parser at the CoNLL 2017 Shared Task. In Proceed-
ings of the CoNLL 2017 Shared Task: Multilingual
Parsing from Raw Text to Universal Dependencies,
pages 20–30. Association for Computational Lin-
guistics.

Charles J. Fillmore and Collin Baker. 2009. A Frames
Approach to Semantic Analysis. In Bernd Heine and
Heiko Narrog, editors, The Oxford Handbook of Lin-
guistic Analysis, pages 313–340. Oxford University
Press.

Yong Jiang, Wenjuan Han, and Kewei Tu. 2016. Un-
supervised neural dependency parsing. In Proceed-
ings of the 2016 Conference on Empirical Methods
in Natural Language Processing, pages 763–771,
Austin, Texas. Association for Computational Lin-
guistics.

19http://multiword.sourceforge.net/
PHITE.php?sitesig=CONF&page=CONF_04_
LAW-MWE-CxG_2018___lb__COLING__rb__&
subpage=CONF_40_Shared_Task

20http://poleval.pl

Eliyahu Kiperwasser and Yoav Goldberg. 2016. Sim-
ple and Accurate Dependency Parsing Using Bidi-
rectional LSTM Feature Representations. Transac-
tions of the Association for Computational Linguis-
tics, 4:313–327.

Philipp Koehn. 2005. Europarl: A Parallel Corpus for
Statistical Machine Translation. In Proceedings of
the 10th Machine Translation Summit Conference,
pages 79–86.

Joakim Nivre, Johan Hall, and Jens Nilsson. 2006.
MaltParser: A Data-Driven Parser-Generator for De-
pendency Parsing. In Proceedings of the Fifth In-
ternational Conference on Language Resources and
Evaluation, LREC’06, pages 2216–2219.

Joakim Nivre, Marie-Catherine de Marneffe, Filip
Ginter, Yoav Goldberg, Jan Hajič, Christopher D.
Manning, Ryan T. McDonald, Slav Petrov, Sampo
Pyysalo, Natalia Silveira, Reut Tsarfaty, and Daniel
Zeman. 2016. Universal Dependencies v1: A Mul-
tilingual Treebank Collection. In Proceedings of
the Tenth International Conference on Language Re-
sources and Evaluation LREC 2016, pages 1659–
1666.

Piotr Pęzik, Maciej Ogrodniczuk, and Adam
Przepiórkowski. 2011. Parallel and spoken corpora
in an open repository of Polish language resources.
In Proceedings of the 5th Language & Technology
Conference: Human Language Technologies as a
Challenge for Computer Science and Linguistics,
pages 511–515.

Adam Przepiórkowski, Mirosław Bańko, Rafał L.
Górski, and Barbara Lewandowska-Tomaszczyk,
editors. 2012. Narodowy Korpus Języka Polskiego.
Wydawnictwo Naukowe PWN, Warsaw.

Josef Ruppenhofer, Michael Ellsworth, Miriam R. L.
Petruck, Christopher R. Johnson, and Jan Schef-
fczyk. 2010. FrameNet II: Extended Theory and
Practice. International Computer Science Institute,
Berkeley, California.

Ralf Steinberger, Andreas Eisele, Szymon Klocek,
Spyridon Pilos, and Patrick Schlüter. 2012. DGT-
TM: A freely Available Translation Memory in 22
Languages. In Proceedings of the 8th International
Conference on Language Resources and Evaluation,
pages 454–459.

Milan Straka and Jana Straková. 2017. Tokenizing,
POS Tagging, Lemmatizing and Parsing UD 2.0
with UDPipe. In Proceedings of the CoNLL 2017
Shared Task: Multilingual Parsing from Raw Text to
Universal Dependencies, pages 88–99, Vancouver,
Canada. Association for Computational Linguistics.

Jörg Tiedemann. 2012. Parallel Data, Tools and Inter-
faces in OPUS. In Proceedings of the 8th Interna-
tional Conference on Language Resources and Eval-
uation, pages 2214–2218.

http://multiword.sourceforge.net/PHITE.php?sitesig=CONF&page=CONF_04_LAW-MWE-CxG_2018___lb__COLING__rb__&subpage=CONF_40_Shared_Task
http://multiword.sourceforge.net/PHITE.php?sitesig=CONF&page=CONF_04_LAW-MWE-CxG_2018___lb__COLING__rb__&subpage=CONF_40_Shared_Task
http://multiword.sourceforge.net/PHITE.php?sitesig=CONF&page=CONF_04_LAW-MWE-CxG_2018___lb__COLING__rb__&subpage=CONF_40_Shared_Task
http://multiword.sourceforge.net/PHITE.php?sitesig=CONF&page=CONF_04_LAW-MWE-CxG_2018___lb__COLING__rb__&subpage=CONF_40_Shared_Task
http://poleval.pl


182

Marcin Woliński, Katarzyna Głowińska, and Marek
Świdziński. 2011. A preliminary version of Skład-
nica treebank of Polish. In Proceedings of the 5th
Language & Technology Conference: Human Lan-
guage Technologies as a Challenge for Computer
Science and Linguistics, pages 299–303, Poznań,
Poland.

Alina Wróblewska. 2012. Polish Dependency Bank.
Linguistic Issues in Language Technology, 7(1):1–
15.

Alina Wróblewska. 2014. Polish Dependency Parser
Trained on an Automatically Induced Dependency
Bank. Ph.D. dissertation, Institute of Computer Sci-
ence, Polish Academy of Sciences, Warsaw.

Alina Wróblewska and Katarzyna Krasnowska-Kieraś.
2017. Polish evaluation dataset for compositional
distributional semantics models. In Proceedings of
the 55th Annual Meeting of the Association for Com-
putational Linguistics (Volume 1: Long Papers),
pages 784–792, Vancouver, Canada. Association for
Computational Linguistics.

Alina Wróblewska and Aleksandra Wieczorek. 2018.
Status składniowy jako we współczesnej pol-
szczyźnie. Język Polski, to appear.

Daniel Zeman, Ondřej Dušek, David Mareček, Mar-
tin Popel, Loganathan Ramasamy, Jan Štěpánek,
Zdeněk Žabokrtský, and Jan Hajič. 2014. Ham-
leDT: Harmonized Multi-Language Dependency
Treebank. Language Resources and Evaluation,
48(4):601–637.

Daniel Zeman, Martin Popel, Milan Straka, Jan Ha-
jič, Joakim Nivre, Filip Ginter, Juhani Luotolahti,
Sampo Pyysalo, Slav Petrov, Martin Potthast, Fran-
cis Tyers, Elena Badmaeva, Memduh Gökırmak,
Anna Nedoluzhko, Silvie Cinková, Jan Hajič jr.,
Jaroslava Hlaváčová, Václava Kettnerová, Zdenka
Urešová, Jenna Kanerva, Stina Ojala, Anna Mis-
silä, Christopher D. Manning, Sebastian Schuster,
Siva Reddy, Dima Taji, Nizar Habash, Herman Le-
ung, Marie-Catherine de Marneffe, Manuela San-
guinetti, Maria Simi, Hiroshi Kanayama, Valeria de-
Paiva, Kira Droganova, Héctor Martínez Alonso,
Çağrı Çöltekin, Umut Sulubacak, Hans Uszkor-
eit, Vivien Macketanz, Aljoscha Burchardt, Kim
Harris, Katrin Marheinecke, Georg Rehm, Tolga
Kayadelen, Mohammed Attia, Ali Elkahky, Zhuoran
Yu, Emily Pitler, Saran Lertpradit, Michael Mandl,
Jesse Kirchner, Hector Fernandez Alcalde, Jana Str-
nadová, Esha Banerjee, Ruli Manurung, Antonio
Stella, Atsuko Shimada, Sookyoung Kwak, Gustavo
Mendonça, Tatiana Lando, Rattima Nitisaroj, and
Josie Li. 2017. CoNLL 2017 Shared Task: Multi-
lingual Parsing from Raw Text to Universal Depen-
dencies. In Proceedings of the CoNLL 2017 Shared
Task: Multilingual Parsing from Raw Text to Uni-
versal Dependencies, pages 1–19. Association for
Computational Linguistics.


