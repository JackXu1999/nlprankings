



















































Probabilistic Labeling for Efficient Referential Grounding based on Collaborative Discourse


Proceedings of the 52nd Annual Meeting of the Association for Computational Linguistics (Short Papers), pages 13–18,
Baltimore, Maryland, USA, June 23-25 2014. c©2014 Association for Computational Linguistics

Probabilistic Labeling for Efficient Referential Grounding based on
Collaborative Discourse

Changsong Liu, Lanbo She, Rui Fang, Joyce Y. Chai
Department of Computer Science and Engineering

Michigan State University
East Lansing, MI 48824

{cliu, shelanbo, fangrui, jchai}@cse.msu.edu

Abstract

When humans and artificial agents (e.g.
robots) have mismatched perceptions of
the shared environment, referential com-
munication between them becomes diffi-
cult. To mediate perceptual differences,
this paper presents a new approach us-
ing probabilistic labeling for referential
grounding. This approach aims to inte-
grate different types of evidence from the
collaborative referential discourse into a
unified scheme. Its probabilistic labeling
procedure can generate multiple ground-
ing hypotheses to facilitate follow-up dia-
logue. Our empirical results have shown
the probabilistic labeling approach sig-
nificantly outperforms a previous graph-
matching approach for referential ground-
ing.

1 Introduction

In situated human-robot dialogue, humans and
robots have mismatched capabilities of perceiving
the shared environment. Thus referential commu-
nication between them becomes extremely chal-
lenging. To address this problem, our previous
work has conducted a simulation-based study to
collect a set of human-human conversation data
that explain how partners with mismatched per-
ceptions strive to succeed in referential commu-
nication (Liu et al., 2012; Liu et al., 2013). Our
data have shown that, when conversation partners
have mismatched perceptions, they tend to make
extra collaborative effort in referential commu-
nication. For example, the speaker often refers
to the intended object iteratively: first issuing an
initial installment, and then refashioning till the
hearer identifies the referent correctly. The hearer,
on the other hand, often provides useful feedback
based on which further refashioning can be made.

This data has demonstrated the importance of in-
corporating collaborative discourse for referential
grounding.

Based on this data, as a first step we developed
a graph-matching approach for referential ground-
ing (Liu et al., 2012; Liu et al., 2013). This ap-
proach uses Attributed Relational Graph to cap-
ture collaborative discourse and employs a state-
space search algorithm to find proper ground-
ing results. Although it has made meaning-
ful progress in addressing collaborative referen-
tial grounding under mismatched perceptions, the
state-space search based approach has two ma-
jor limitations. First, it is neither flexible to ob-
tain multiple grounding hypotheses, nor flexible
to incorporate different hypotheses incrementally
for follow-up grounding. Second, the search al-
gorithm tends to have a high time complexity for
optimal solutions. Thus, the previous approach
is not ideal for collaborative and incremental di-
alogue systems that interact with human users in
real time.

To address these limitations, this paper de-
scribes a new approach to referential grounding
based on probabilistic labeling. This approach
aims to integrate different types of evidence from
the collaborative referential discourse into a uni-
fied probabilistic scheme. It is formulated un-
der the Bayesian reasoning framework to easily
support generation and incorporation of multi-
ple grounding hypotheses for follow-up processes.
Our empirical results have shown that the prob-
abilistic labeling approach significantly outper-
forms the state-space search approach in both
grounding accuracy and efficiency. This new ap-
proach provides a good basis for processing col-
laborative discourse and enabling collaborative di-
alogue system in situated referential communica-
tion.

13



2 Related Work

Previous works on situated referential grounding
have mainly focused on computational models that
connect linguistic referring expressions to the per-
ceived environment (Gorniak and Roy, 2004; Gor-
niak and Roy, 2007; Siebert and Schlangen, 2008;
Matuszek et al., 2012; Jayant and Thomas, 2013).
These works have provided valuable insights on
how to manually and/or automatically build key
components (e.g., semantic parsing, grounding
functions between visual features and words, map-
ping procedures) for a situated referential ground-
ing system. However, most of these works only
dealt with the interpretation of single referring ex-
pressions, rather than interrelated expressions in
collaborative dialogue.

Some earlier work (Edmonds, 1994; Heeman
and Hirst, 1995) proposed a symbolic reasoning
(i.e. planning) based approach to incorporate col-
laborative dialogue. However, in situated settings
pure symbolic approaches will not be sufficient
and new approaches that are robust to uncertain-
ties need to be pursued. DeVault and Stone (2009)
proposed a hybrid approach which combined sym-
bolic reasoning and machine learning for inter-
preting referential grounding dialogue. But their
“environment” was a simplistic block world and
the issue of mismatched perceptions was not ad-
dressed.

3 Data

Previously, we have collected a set of human-
human dialogues on an object-naming task (Liu
et al., 2012). To simulate mismatched perceptions
between a human and an artificial agent, two par-
ticipants were shown different versions of an im-
age: the director was shown the original image
containing some randomly placed objects (e.g.,
fruits), and the matcher was shown an impov-
erished version of the image generated by com-
puter vision. They were instructed to communi-
cate with each other to figure out the identities of
some “named” objects (only known to the direc-
tor), such that the matcher could also know which
object has what name.

Here is an example excerpt from this dataset:

D1: there is basically a cluster of four objects in the upper
left, do you see that (1)

M: yes (2)
D: ok, so the one in the corner is a blue cup (3)

1D stands for the director; M stands for the matcher.

M: I see there is a square, but fine, it is blue (4)
D: alright, I will just go with that, so and then right under

that is a yellow pepper (5)
M: ok, I see apple but orangish yellow (6)
D: ok, so that yellow pepper is named Brittany (7)
M: uh, the bottom left of those four? Because I do see a

yellow pepper in the upper right (8)
D: the upper right of the four of them? (9)
M: yes (10)
D: ok, so that is basically the one to the right of the blue

cup (11)
M: yeah (12)
D: that is actually an apple (13)

As we can see from this example, both the direc-
tor and the matcher make extra efforts to overcome
the mismatched perceptions through collaborative
dialogue. Our ultimate goal is to develop com-
putational approaches that can ground interrelated
referring expressions to the physical world, and
enable collaborative actions of the dialogue agent
(similar to the active role that the matcher played
in the human-human dialogue). For the time be-
ing, we use this data to evaluate our computa-
tional approach for referential grounding, namely,
replacing the matcher by our automatic system to
ground the director’s referring expressions.

4 Probabilistic Labeling for Reference
Grounding

4.1 System Overview

Our system first processes the data using auto-
matic semantic parsing and coreference resolu-
tion. For semantic parsing, we use a rule-based
CCG parser (Bozsahin et al., 2005) to parse each
utterance into a formal semantic representation.
For example, the utterance “a pear is to the right
of the apple” is parsed as

[a1, a2] , [Pear(a1), Apple(a2), RightOf(a1, a2)]

which consists of a list of discourse entities (e.g.,
a1 and a2) and a list of first-order-logic predicates
that specify the unary attributes of these entities
and the binary relations between them.

We then perform pairwise coreference resolu-
tion on the discourse entities to find out the dis-
course relations between entities from different ut-
terances. Formally, let ai be a discourse entity ex-
tracted from the current utterance, and aj a dis-
course entity from a previous utterance. We train a
maximum entropy classifier2 (Manning and Klein,

2The features we use for the classification include the dis-
tance between ai and aj , the determiners associated with
them, the associated pronouns, the syntactic roles, the ex-
tracted unary properties, etc.

14



2003) to predict whether ai and aj should refer to
the same object (i.e. positive) or to different ob-
jects (i.e. negative).

Based on the semantic parsing and pairwise
coreference resolution results, our system fur-
ther builds a graph representation to capture the
collaborative discourse and formulate referential
grounding as a probabilistic labeling problem, as
described next.

4.2 Graph Representation
We use an Attributed Relational Graph (Tsai and
Fu, 1979) to represent the referential grounding
discourse (which we call the “dialogue graph”). It
is constructed based on the semantic parsing and
coreference resolution results. The dialogue graph
contains a set A of N nodes:

A = {a1, a2, . . . , aN}

in which each node ai represents a discourse en-
tity from the parsing results. And for each pair
of nodes ai and aj there can be an edge aiaj that
represents the physical or discourse relation (i.e.
coreference) between the two nodes.

Furthermore, each node ai can be assigned a set
of “attributes”:

xi =
{
x

(1)
i , x

(2)
i , . . . , x

(K)
i

}
which are used to specify information about the
unary properties of the corresponding discourse
entity. Similarly, each edge aiaj can also be as-
signed a set of attributes xij to specify informa-
tion about the binary relations between two dis-
course entities. The node attributes are from the
semantic parsing results, i.e., the unary proper-
ties associated to a discourse entity. The edge at-
tributes can be either from parsing results, such
as a spatial relation between two entities (e.g.,
RightOf(a1, a2)); Or from pairwise coreference
resolution results, i.e., two entities are coreferen-
tial (coref = +) or not (coref = −).

Besides the dialogue graph that represents the
linguistic discourse, we build another graph to rep-
resent the perceived environment. This graph is
called the “vision graph” (since this graph is built
based on computer vision’s outputs). It has a set Ω
of M nodes:

Ω = {ω1, ω2, . . . , ωM}

in which each node ωα represents a physical ob-
ject in the scene. Similar to the dialogue graph,

the vision graph also has edges (e.g., ωαωβ), node
attributes (e.g., x̆α) and edge attributes (e.g., x̆αβ).
Note that the attributes in the vision graph mostly
have numeric values extracted by computer vision
algorithms, whereas the attributes in the dialogue
graph have symbolic values extracted from the lin-
guistic discourse. A set of “symbol grounding
functions” are used to bridge between the hetero-
geneous attributes (described later).

Given these two graph representations, referen-
tial grounding then can be formulated as a “node
labeling” process, that is to assign a label θi to
each node ai. The value of θi can be any of the
M node labels from the set Ω.

4.3 Probabilistic Labeling Algorithm
The probabilistic labeling algorithm (Christmas et
al., 1995) is formulated in the Bayesian frame-
work. It provides a unified evidence-combining
scheme to integrate unary attributes, binary rela-
tions and prior knowledge for updating the label-
ing probabilities (i.e. P (θi = ωα)). The algo-
rithm finds proper labelings in an iterative manner:
it first initiates the labeling probabilities by consid-
ering only the unary attributes of each node, and
then updates the labeling probability of each node
based on the labeling of its neighbors and the rela-
tions with them.

Initialization:
Compute the initial labeling probabilities:

P (0)(θi = ωα) =
P (ai | θi = ωα) P̂ (θi = ωα)∑

ωλ∈Ω
P (ai | θi = ωλ) P̂ (θi = ωλ)

in which P̂ (θi = ωα) is the prior probability of
labeling ai with ωα. The prior probability can be
used to encode any prior knowledge about possi-
ble labelings. Especially in incremental process-
ing of the dialogue, the prior can encode previ-
ous grounding hypotheses, and other information
from the collaborative dialogue such as confirma-
tion, rejection, or replacement.
P (ai | θi = ωα) is called the “compatibility co-

efficient” between ai and ωα, which is computed
based on the attributes of ai and ωα:

P (ai | θi = ωα) = P (xi | θi = ωα)
≈∏

k

P
(
x

(k)
i | θi = ωα

)
and we further define

15



P
(
x

(k)
i | θi = ωα

)
= p

(
x

(k)
i | x̆(k)α

)
=

p
(
x̆

(k)
α |x(k)i

)
p
(
x

(k)
i

)
∑

x
(k)
j

∈L(k)
p
(
x̆

(k)
α |x(k)j

)
p
(
x

(k)
j

)

where L(k) is the “lexicon” for the k-th attribute of
a dialogue graph node, e.g., for the color attribute:

L(k) = {red, green, blue, . . .}

and p
(
x̆

(k)
α | x(k)i

)
is what we call a “symbol

grounding function”, i.e., the probability of ob-
serving x̆(k)α given the word x

(k)
i . It judges the

compatibilities between the symbolic attribute val-
ues from the dialogue graph and the numeric at-
tribute values from the vision graph. These sym-
bol grounding functions can be either manually
defined or automatically learned. In our current
work, we use a set of manually defined ground-
ing functions motivated by previous work (Gor-
niak and Roy, 2004).

Iteration:
Once the initial probabilities are calculated, the

labeling procedure iterates till all the labeling
probabilities have converged or the number of it-
erations has reached a specified limit. At each it-
eration and for each possible labeling, it computes
a “support function” as:

Q(n) (θi = ωα) =
∏
j∈Ni

∑
ωβ∈Ω

P (n) (θj = ωβ)

P (aiaj | θi = ωα, θj = ωβ)

and updates the probability of each possible label-
ing as:

P (n+1)(θi = ωα) =
P (n)(θi=ωα)Q

(n)(θi=ωα)∑
ωλ∈Ω

P (n)(θi=ωλ)Q(n)(θi=ωλ)

The support function Q(n) (θi = ωα) expresses
how the labeling θi = ωα at the n-th itera-
tion is supported by the labeling of ai’s neigh-
bors3, taking into consideration the binary rela-
tions that exist between ai and them. Similar to
the node compatibility coefficient, the edge com-
patibility coefficient between aiaj and ωαωβ ,

3The set of indices Ni is defined as:

Ni = {1, 2, . . . , i− 1, i + 1, . . . , N}

Top-1 Top-2 Top-3
Random 7.7% 15.4% 23.1%Guessa

S.S.S. 19.1% 19.7% 21.3%
P.L. 24.9% 36.1% 45.0%

Gainb
5.8% 16.4% 23.7%

(p < 0.01) (p < 0.001) (p < 0.001)

P.L. using
66.4% 74.8% 81.9%annotated

coreference

aEach image contains an average of 13 objects.
bp-value is based on the Wilcoxon signed-rank

test (Wilcoxon et al., 1970) on the 62 dialogues.

Table 1: Comparison of the reference grounding
performances of a random guess baseline, Prob-
abilistic Labeling (P.L.) and State-Space Search
(S.S.S.), and P.L. using manually annotated coref-
erence.

namely the P (aiaj | θi = ωα, θj = ωβ) for com-
puting Q(n) (θi = ωα), is also based on the at-
tributes of the two edges and their corresponding
symbol grounding functions. So we also man-
ually defined a set of grounding functions for
edge attributes such as the spatial relation (e.g.,
RightOf , Above). If an edge is used to encode
the discourse relation between two entities (i.e.,
the pairwise coreference results), the compatibility
coefficient can be defined as (suppose edge aiaj
encodes a positive coreference relation between
entities ai and aj):

P (aiaj = + | θi = ωα, θj = ωβ)
=

P(θi=ωα,θj=ωβ |aiaj=+)P (aiaj=+)
P(θi=ωα,θj=ωβ)

which can be calculated based on the results from
the coreference classifier (Section 4.1).

5 Evaluation and Discussion

Our dataset has 62 dialogues, each of which con-
tains an average of 25 valid utterances from the
director. We first applied the semantic parser and
coreference classifier as described in Section 4.1
to process each dialogue, and then built a graph
representation based on the automatic processing
results at the end of the dialogue. On average, a di-
alogue graph consists of 33 discourse entities from
the director’s utterances that need to be grounded.

We then applied both the probabilistic label-
ing algorithm and the state-space search algorithm
to ground each of the director’s discourse entities
onto an object perceived from the image. The av-
eraged grounding accuracies of the two algorithms

16



are shown in the middle part of Table 1. The first
column of Table 1 shows the grounding accura-
cies of the algorithm’s top-1 grounding hypothesis
(i.e., θi = argmax

ωα
P (θi = ωα) for each i). The

second and third column then show the “accura-
cies” of the top-2 and top-3 hypotheses4, respec-
tively.

As shown in Table 1, probabilistic labeling
(i.e. P.L.) significantly outperforms state-space
search (S.S.S.), especially with regard to produc-
ing meaningful multiple grounding hypotheses.
The state-space search algorithm actually only re-
sults in multiple hypotheses for the overall match-
ing, and it fails to produce multiple hypotheses
for many individual discourse entities. Multiple
grounding hypotheses can be very useful to gen-
erate responses such as clarification questions or
nonverbal feedback (e.g. pointing, gazing). For
example, if there are two competing hypotheses,
the dialogue manager can utilize them to gener-
ate a response like “I see two objects there, are
you talking about this one (pointing to) or that one
(pointing to the other)?”. Such proactive feedback
is often an effective way in referential communi-
cation (Clark and Wilkes-Gibbs, 1986; Liu et al.,
2013).

The probabilistic labeling algorithm not only
produces better grounding results, it also runs
much faster (with a running-time complexity of
O
(
MN2

)
,5 comparing to O

(
N4
)

of the state-
space search algorithm6). Figure 1 shows the av-
eraged running time of the state-space search al-
gorithm on a Intel Core i7 1.60GHz CPU with
16G RAM computer (the running time of the prob-
abilistic labeling algorithm is not shown in Fig-
ure 1 since it always takes less than 1 second to
run). As we can see, when the size of the dialogue
graph becomes greater than 15, state-space search
takes more than 1 minute to run. The efficiency of
the probabilistic labeling algorithm thus makes it
more appealing for real-time interaction applica-
tions.

Although probabilistic labeling significantly
outperforms the state-space search, the grounding
performance is still rather poor (less than 50%)

4The accuracy of the top-2/top-3 grounding hypotheses is
measured by whether the ground-truth reference is included
in the top-2/top-3 hypotheses.

5M is the number of nodes in the vision graph and N is
the number of nodes in the dialogue graph.

6Beam search algorithm is applied to reduce the exponen-
tial O

(
MN

)
to O

(
N4

)
.

Figure 1: Average running time of the state-space
search algorithm with respect to the number of
nodes to be grounded in a dialogue graph.

even for the top-3 hypotheses. With no surprise,
the coreference resolution performance plays an
important role in the final grounding performance
(see the grounding performance of using manually
annotated coreference in the bottom part of Ta-
ble 1). Due to the simplicity of our current coref-
erence classifier and the flexibility of the human-
human dialogue in the data, the pairwise coref-
erence resolution only achieves 0.74 in precision
and 0.43 in recall. The low recall of coreference
resolution makes it difficult to link interrelated re-
ferring expressions and resolve them jointly. So it
is important to develop more sophisticated coref-
erence resolution and dialogue management com-
ponents to reliably track the discourse relations
and other dynamics in the dialogue to facilitate ref-
erential grounding.

6 Conclusion

In this paper, we have presented a probabilistic la-
beling based approach for referential grounding in
situated dialogue. This approach provides a uni-
fied scheme for incorporating different sources of
information. Its probabilistic scheme allows each
information source to present multiple hypotheses
to better handle uncertainties. Based on the in-
tegrated information, the labeling procedure then
efficiently generates probabilistic grounding hy-
potheses, which can serve as important guidance
for the dialogue manager’s decision making. In
future work, we will utilize probabilistic labeling
to incorporate information from verbal and non-
verbal communication incrementally as the dia-
logue unfolds, and to enable collaborative dia-
logue agents in the physical world.

Acknowledgments
This work was supported by N00014-11-1-0410
from the Office of Naval Research and IIS-
1208390 from the National Science Foundation.

17



References
Cem Bozsahin, Geert-Jan M Kruijff, and Michael

White. 2005. Specifying grammars for openccg: A
rough guide. Included in the OpenCCG distribution.

William J. Christmas, Josef Kittler, and Maria Petrou.
1995. Structural matching in computer vision
using probabilistic relaxation. Pattern Analysis
and Machine Intelligence, IEEE Transactions on,
17(8):749–764.

Herbert H Clark and Deanna Wilkes-Gibbs. 1986.
Referring as a collaborative process. Cognition,
22(1):1–39.

David DeVault and Matthew Stone. 2009. Learning to
interpret utterances using dialogue history. In Pro-
ceedings of the 12th Conference of the European
Chapter of the Association for Computational Lin-
guistics, pages 184–192. Association for Computa-
tional Linguistics.

Philip G Edmonds. 1994. Collaboration on reference
to objects that are not mutually known. In Pro-
ceedings of the 15th conference on Computational
linguistics-Volume 2, pages 1118–1122. Association
for Computational Linguistics.

Peter Gorniak and Deb Roy. 2004. Grounded seman-
tic composition for visual scenes. J. Artif. Intell.
Res.(JAIR), 21:429–470.

Peter Gorniak and Deb Roy. 2007. Situated lan-
guage understanding as filtering perceived affor-
dances. Cognitive Science, 31(2):197–231.

Peter A Heeman and Graeme Hirst. 1995. Collabo-
rating on referring expressions. Computational Lin-
guistics, 21(3):351–382.

Krishnamurthy Jayant and Kollar Thomas. 2013.
Jointly learning to parse and perceive: Connecting
natural language to the physical world. Transac-
tions of the Association of Computational Linguis-
tics, 1:193–206.

Changsong Liu, Rui Fang, and Joyce Chai. 2012. To-
wards mediating shared perceptual basis in situated
dialogue. In Proceedings of the 13th Annual Meet-
ing of the Special Interest Group on Discourse and
Dialogue, pages 140–149, Seoul, South Korea, July.
Association for Computational Linguistics.

Changsong Liu, Rui Fang, Lanbo She, and Joyce Chai.
2013. Modeling collaborative referring for situated
referential grounding. In Proceedings of the SIG-
DIAL 2013 Conference, pages 78–86, Metz, France,
August. Association for Computational Linguistics.

Christopher Manning and Dan Klein. 2003. Opti-
mization, maxent models, and conditional estima-
tion without magic. In Proceedings of the 2003
Conference of the North American Chapter of the
Association for Computational Linguistics on Hu-
man Language Technology: Tutorials - Volume 5,

NAACL-Tutorials ’03, pages 8–8, Stroudsburg, PA,
USA. Association for Computational Linguistics.

Cynthia Matuszek, Nicholas FitzGerald, Luke Zettle-
moyer, Liefeng Bo, and Dieter Fox. 2012. A
joint model of language and perception for grounded
attribute learning. In John Langford and Joelle
Pineau, editors, Proceedings of the 29th Interna-
tional Conference on Machine Learning (ICML-12),
ICML ’12, pages 1671–1678, New York, NY, USA,
July. Omnipress.

Alexander Siebert and David Schlangen. 2008. A
simple method for resolution of definite reference
in a shared visual context. In Proceedings of the
9th SIGdial Workshop on Discourse and Dialogue,
pages 84–87. Association for Computational Lin-
guistics.

Wen-Hsiang Tsai and King-Sun Fu. 1979. Error-
correcting isomorphisms of attributed relational
graphs for pattern analysis. Systems, Man and Cy-
bernetics, IEEE Transactions on, 9(12):757–768.

Frank Wilcoxon, SK Katti, and Roberta A Wilcox.
1970. Critical values and probability levels for the
wilcoxon rank sum test and the wilcoxon signed
rank test. Selected tables in mathematical statistics,
1:171–259.

18


