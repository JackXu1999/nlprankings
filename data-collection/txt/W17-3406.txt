



















































A Proof-Theoretic Semantics for Transitive Verbs with an Implicit Object


Proceedings of the 15th Meeting on the Mathematics of Language, pages 59–67,
London, UK, July 13–14, 2017. c©2017 Association for Computational Linguistics

A Proof-Theoretic Semantics for Transitive Verbs with an Implicit Object

Nissim Francez
Computer Science faculty, Technion

Haifa, Israel
francez@cs.technion.ac.il

Abstract

The paper presents a proof-theoretic se-
mantics for sentences headed by transitive
verbs allowing an unexpressed (implicit)
object. Such sentences are shown to have
the same (proof-theoretic) meaning as the
same sentences with an explicit existen-
tially quantified object something.

This semantics is contrasted with a
model-theoretic semantics based on truth-
conditions in models. The models used
contain in their domain “filler” elements,
that have an unclear extra-theoretic signif-
icance with an unclear ontological com-
mitments. In contrast, the proof-theoretic
meaning is appealing to formal (syntactic)
resources that carry no ontological com-
mitment.

Furthermore, the sameness of mean-
ing is based on sameness of deductive
role within a meaning-conferring proof-
system, based on use.

1 Introduction

The purpose of this paper is to provide yet an-
other argument for the benefits of proof-theoretic
semantics (PTS), when applied to natural language
(NL), over the traditional model-theoretic seman-
tics (MTS), by focusing on what came be known
as unexpressed objects of transitive verbs (also re-
ferred to as implicit arguments) as manifested, for
example, by an intransitive use of a transitive verb,
as in1 (1(i)) and(1(ii)) below.

(i) John ate an apple (ii) John ate (1)

1All natural language expressions used in examples are
displayed in the San Serif font, and are always mentioned,
never used.

PTS is a theory of meaning serving as an alter-
native to the more traditional Model-Theoretic Se-
mantics (MTS). While the latter identifies mean-
ing with truth-conditions (in arbitrary models of a
suitable form), the former identifies meaning with
canonical derivability conditions in a meaning-
conferring proof system. Those canonical deriv-
ability conditions provide grounds for assertion.
For a presentation of the motivation for PTS and a
discussion of its advantages over MTS, the reader
is referred to the Introduction sections of Francez
and Dyckhoff (2010) or Francez and Ben-Avi
(2015), which present a PTS for extensive frag-
ments of English. A full presentation can be found
in Francez (2015b).

Turning to the unexpressed arguments, the
essence of the MTS-based meaning is to interpret
such arguments as existentially quantified. Hence,
(1(ii)) above is seen as equivalent to

John ate something (2)

with meaning expressed as usual by a (simply-
typed) λ-term, here expressible in 1st-order logic
(using simple types on variables and constants):

∃xe.eat(e,(e,t))(x, john) (3)

In Dowty (1982), (1(ii)) is seen as resulting from
(1(i)) by a general procedure of argument reduc-
tion.

The structure of the rest of the paper is as fol-
lows. In Section 2 I briefly survey two recent ap-
proaches to obtaining the above mentioned truth-
conditions (MTS-meaning). In Section 3 I briefly
review the PTS of a minimal fragment of En-
glish in which the issue of unexpressed arguments
arises. Fuller details about the PTS (for larger
fragments) can be found in Francez and Dyckhoff
(2010) or Francez and Ben-Avi (2015) and in part
II of Francez (2015b). Section 4 presents the the

59



PTS account of the unexpressed argument issue,
and compares it to the reviewed MTS accounts.
Section 5 ends with some conclusions.

2 A brief review of some model-theoretic
approaches

The topic of unexpressed argument has a long his-
tory. I will mainly relate to Blom et al. (2012) (see
there for references to previous work), and to Gior-
golo and Asudeh (2012).

The common feature of those treatments of the
unexpressed argument is imposing the sameness
of meaning of an intransitive verb used with an im-
plicit argument with the meaning of that verb used
transitively with an existentially quantified object.
For example,

[[Mary ate]] = ∃x.[[Mary ate x]] (4)

The difference between Blom et al. (2012) and
Giorgolo and Asudeh (2012) is the formalism used
for composing meanings, a difference immaterial
for my purpose. I consider here only the issue
of meaning of such constructs, and not with the
syntax-semantics interface used to derive those
meanings compositionally, so I will take Blom
et al. (2012) as the representative of the MTS
to implicit arguments.. A completely different
model-theoretic approach is presented in Carlson
(1984), appealing to models with (Neo Davidso-
nian) events and event modifiers. See Blom et al.
(2012) for a discussion of this kind of MTS.

The main features of the proposed analysis are
the following (expressed in a somewhat different
notation).

1. The standard domainsDτ of interpretation of
types τ in (simply-typed) λ-calculi are ex-
tended with extra elements, designated gener-
ically as ‘∗τ ’, called the filler value of the do-
main of τ . The type-system is extended so
that for every type τ there is a corresponding
extended type τø accommodating the default
value so that Dτø = Dτ∪{∗τ} (where the
union is disjoint).

See below the qualms about this solution.

2. The lexical meaning of verbs licensing unex-
pressed objects is expressed via a function of

the (notationally slightly modified) form

option(xoτ1 , F(τ1,τ2), dτ2)

=df.

{
d x = ∗τ1
F (x) otherwise

(5)

Here dτ2 is the default value of type τ2, chosen ac-
cording to a global strategy: an existential closure
of the word in the lexical semantic value of which
this particular use of option is embedded. The op-
tion operator is of type τ o1 × (τ1, τ2) × τ2. The
function λx.option(x, F, d) is therefore of type
(τ o1 , τ2).

Example 2.1 Consider the lexical semantic value
associated2 with the verb ate, assuming it licensed
an implicit object.

λyeoλxe.option(

yeo ,
λue.ate(e,(e,t))(ue)(ye),

∃xe.ate(x)(y))
(6)

Now consider the two cases for ate.

explicit object: Mary ate an apple

See Figure 1:

implicit object: Mary ate

See Figure 2:

The extra-theoretic interpretation of such “filler el-
ements” ∗τ ∈ Dτo is non-obvious, as is the pres-
ence of such elements in lexical meaning assign-
ments of NL words. They cary an ontological
commitment which is left unexplained.

As an example of one problematic issue involv-
ing filler elements, consider selectional restric-
tions. Typically, the are ignored, but there are
ways of incorporating them into the type-based
analysis above. Suppose one wants to admit

Mary ate an apple

but to exclude

Mary ate a chair

Both are admissible by the above analysis. One
way of imposing selectional restrictions is by re-
fining the type e, to include a sub-type eaddible,

2I ignore here the finer points involved in implementing
this construction in abstract categorial grammar, orthogonal
to my main concern.

60



λyeoλxe.option(yeo , λue.ate(e,(e,t))(ue)(ye),∃xe.ate(e,(e,t)(x)(y))([[an apple]])([[Mary]])
= λxe.option([[an apple]], λue.ate(e,(e,t))(ue)(ye)([[an apple]])([[Mary]]), ∃xe.ate(e,(e,t))(x)(y))
= λu.ate(u)([[an apple]])([[Mary]])
= ate([[an apple]])([[Mary]])

(7)
The second step is due to [[an apple]] 6= ∗e.

Figure 1: [[Mary ate an apple]]

λyeoλxe.option(yeo , λue.ate(e,(e,t))(ue)(ye),∃xe.ate(e,(e,t)(x)(y)))(∗e)([[Mary]])
= λxe.option(∗e, λue.ate(e,(e,t))(ue)(∗e)([[Mary]]),∃xe.ate(x)(y))([[Mary]])
= ∃x.ate(x)(y)([[Mary]])
= ∃x.ate(x)([[Mary]])

(8)

The second step is due to ∗e = ∗e.

Figure 2: [[Mary ate]]

and requiring the object of ate to be of that sub-
type (see Ben-Avi and Francez (2004)).

Is ∗e of type eaddible? One way out is to include
separate filler values for each sub-type of e, e.g.,
∗eaddible . But this cause a proliferation of those
intelligible values as more selectional restrictions
are imposed, for example, admitting

every girl smiled

but excluding

every chair smiled

by introducing a sub-type eanimate of e and requir-
ing the subject of smile to be of this sub-type..

Populating models with unintelligible entities is
typical to MTS in general. One of the main ad-
vantages of PTS is avoiding models an unintelligi-
ble entities with unclear ontological commitments,
dealing only with syntactic entities, artefacts of
meaning-conferring proof-systems.

3 A Proof-Theoretic Semantics for a
fragment of English

3.1 The language fragment
I briefly present in this section the core of a frag-
ment E+0 of English. The core fragment consists
of sentences with intransitive and transitive verbs,
and determiner phrases with a (count, singular)

noun and a determiner. For simplicity, I con-
sider here only the positive determiners every and
some. The inclusion of negative determiners such
as no or at most three involve a certain compli-
cation (see Francez and Ben-Avi (2015)) that is or-
thogonal to the current issue. In addition, there is
the copula isa. For technical reasons (made clear
in Francez and Dyckhoff (2010)) I avoid the use of
proper names, and use quantified subjects instead.
Some typical sentences are listed below.

every/some girl smiles (9)

every/some girl loves every/some boy (10)

A typical sentence with an unexpressed argu-
ment to be considered is

every girl ate (11)

I refer to expressions such as every girl, some
boy as determiner phrases (dps).

3.2 The meaning-conferring proof-system
The PTS is based on a meaning-conferring natural-
deduction-proof system N+0 with introduction
rules and elimination rules (I/E-rules) (see Figure
3). The proof-system is formulated over the lan-
guage L+0 , slightly extending E

+
0 . Meta-variables

61



X schematise nouns, P – intransitive verbs and
R - transitive verbs. Meta-variable S ranges over
sentences, and boldface lower-case j, k, etc., range
over P , a denumerable set of (individual) param-
eters, artefacts of the proof-system (not used to
make assertions). Syntactically, a parameter in L+0
is also regarded as a dp. If a parameter occurs
in S in some position, I refer to S as a pseudo-
sentence, and if all dps in S are parameters, the
pseudo-sentence S is ground. The ground pseudo-
sentences play the role of atomic sentences, and
their meaning is assumed given, externally to the
ND proof-system.

The original full system takes into account also
relative clauses, due to presence of which some
scope-related indexing is essential, as there may
be more than just two scope levels. For the pur-
pose of dealing with unexpressed arguments, it is
enough to have simple sentences, with just two
scope-levels, for the subject and object dps. Fur-
thermore, the general sentential variable S can be
instantiated by P (−), R(−,−) and Ru(−) for
simple sentences headed by intransitive, transi-
tive verbs and transitive verbs allowing intransi-
tive use (lexically specified), respectively. Ac-
cordingly, I consider here a simplification of the
original proof-system, not dealing with quantifier
scope ambiguity. For any dp-expression D having
a quantifier, I use the notation S[(D)] to refer to a
sentence S having a designated position filled by
D.

For example, S[(every X)] refers to a sen-
tence S with a designated occurrence of every X .
I use the conventions that within a rule, both
S[D1], S[D2] refer to the same designated posi-
tion in S. I use Γ, S for the context extending Γ
with sentence S.

Derivations (tree shaped), ranged over by D
(possibly indexed) are defined recursively as
usual. When presenting example derivations, the
context Γ is left implicit, and the notation [· · · ]i
indicates an assumption discharged by an applica-
tion of a rule.

The following is a convenient derived E-rule,
that can be used to shorten derivations.

Γ : S[(every X)] Γ : j isa X

Γ : S[j]
(eÊ) (12)

For example,

Γ : every girl smiled Γ : j isa girl

Γ : j smiled
(eÊ)

3.3 Canonical derivations and meaning

Consider an arbitrary natural-deduction proof-
system intended as being meaning-conferring for
the operators in some object language.

Definition 3.1 An N -derivation D for `NΓ : ψ
(for a compound ψ) is canonical iff it satisfies one
of the following two conditions.

• The last rule applied in D is an I-rule (for
the main operator of ψ).

• The last rule applied in D is an assumption-
discharging E-rule3 the major premise of
which is some ϕ in Γ, and its encompassed
sub-derivations D1, · · · ,Dn (of the minor
premises) are all canonical derivations of ψ.

• Denote by [[S]]cΓ the (possibly empty) collec-
tion of canonical derivations of S from Γ.

For Γ empty, the definition reduces to that of a tra-
ditional canonical proof. Note the recursion in-
volved in this definition. The important observa-
tion regarding this recursion is that it always termi-
nates via the first clause, namely by an application
of an I-rule. I refer to such an application of an
I-rule (ending a recursive path in the definition)
as an essential application, the outcome of which
is propagated throughout the canonical derivation
by applications of the assumption-discharging E-
rules. Note that each sub-derivation Di may start
with an essential application of an I-rule, thus hav-
ing “parallel” essential applications of that rule. I
refer to a sequence of occurrences of ψ in a canon-
icalD starting in the conclusion of an essential ap-
plication of an I-rule and ending in the conclusion
of D as a propagation chain of ψ in D.

The major observation here is that the conclu-
sion ψ of a canonical derivation D from open as-
sumptions, ending a propagation chain, was:

1. inferred (possibly more than once) by the es-
sential applications of the I-rule of its main
operator, and

2. propagated through applications of
assumption-discharging E-rules4 to its
position as the final conclusion of D.

3General elimination rules (GE) have this structure, hence
their association with permuting conversions during normal-
isation. See more on this in Negri and von Plato (2001).

4In propositional intuitionistic logic, say with Gentzen’s
NJ ND-system, this happens with disjunction.

62



Γ, S : S
(Ax)

Γ, j isaX : S[j]

Γ : S[(every X)]
(eI)

Γ : j isaX Γ : S[j]

Γ`S[(someX)] (sI)

Γ : S[(every X)] Γ : j isaX Γ, S[j] : S′

Γ : S′
(eE)

Γ : S[(someX)] Γ, j isaX,S[j] : S′

Γ : S′
(sE)

where j is fresh in (eI), and (sE).

Figure 3: The simplified rules for N+0

The (reified) meaning of a sentence S (in the con-
sidered object language), denoted by [[S]], is de-
fined by

Definition 3.2 (reified meaning)

[[S]] =df. λΓ.[[S]]cΓ (13)

This is a very fine-granularity notion of meaning,
see Francez (2014). A natural coarsening is ob-
tained by considering grounds of assertion.

Definition 3.3 (grounds for assertion)

GA[[S]] = {Γ | `cΓ : S} (14)

Thus, any Γ that canonically derives S serves as
grounds for assertion of S. This is naturally ex-
tended to GA[[Γ]], the grounds of asserting all
S′ ∈ Γ. For the methodological role of this con-
cept in the theory of meaning adhered to by PTS,
see Dummett (1993).

By appealing to equality of grounds, we get
an equivalence relation coarser than meaning as
defined above, inducing a natural ‘sameness of
meaning’ relation.

Definition 3.4 (equi-groundedness) S1 and S2
are equi-grounded, denoted by S1 ≡GA S2, iff
GA[[S1]] = GA[[S2]].

Grounds of assertion lead (see Francez (2015a))
to the following notion of proof-theoretic conse-
quence, that captures the pre-theoretic entailment.

Definition 3.5 (proof-theoretic consequences)
S is a proof-theoretic consequence of Γ (Γ  S)
iff GA[[Γ]] ⊆ GA[[S]].
Thus, proof-theoretic consequences is based on
grounds propagation: every grounds for collec-
tively asserting all of Γ are already grounds for
asserting S.

4 Proof-theoretic semantics for
unexpressed arguments

In this section, I extend the proof-system with
I/E-rules for the sentences allowing (lexically li-
censed) intransitive uses of transitive verbs, under-
lying the proof-theoretic account of their meaning.

The main ideas on which the PTS for implicit
arguments is based is the following:

• Sameness of meaning is based on sameness
of I-rules, implying sameness of canonical
derivations.

• The reduction of an argument is reflected
proof-theoretically by omission of a premise
(in I-rules).

4.1 Adding something

As the alert reader might have noticed, all the nps
in E+0 contain an explicit noun-component; for
example, some girl, every boy. I will refer to
such nps as nominally qualified. Indeed, typical
NL-quantification is what is known as restricted
quantification. However, for the sake of the speci-
fication of the meaning of sentences with an im-
plicit argument, what is needed5 is to augment
the language fragment with an np expressing un-
restricted existential quantification in the form of
something, lacking a nominal qualification.

The nominally-unqualified existential quantifi-
cation in object position is governed by the fol-

5Another alternative is to consider a universal noun thing,
and use it as the noun-qualifier. I consider this less elegant in
the context of PTS.

63



lowing I/E-rules6.

Γ : j R k

Γ : j R something
(usI)

Γ : j R something Γ, j R k : S′

Γ : S′
(usE)

k fresh.
(15)

The difference between those two I/E-rules and
the I/E-rules for nominally-qualified nps ((sI)
and (sE) below) is the absence of a nominally-
qualifying premise k isa X (for some noun X) in
the I-rule, and the absence of a corresponding dis-
charged assumption in the E-rule.

For example,

Γ : j ate k

Γ : j ate something
(usI)

Γ : j ate something Γ, j ate k : S′

Γ : S′
(usE)

k fresh

4.2 Sentential meanings

In contrast to the view of argument reduction
(mentioned above), I present separate I-rules
for the transitive and intransitive uses of sen-
tences with Ru-verbs; furthermore, the same I-
rule serves both for the introduction for sentences
with Ru-verbs with an unexpressed object and for
the corresponding R with an explicit object some-
thing. This establishes the sameness of meaning of
pairs of sentences like (1(ii)) and (2), where this
sameness of meaning is based on both sentences
having the same grounds of assertion.

Transitive verb with an expressed object:
These are the usual rules (sI)and (sE), sim-
plified to objects only, of simple sentences.

Γ : k isa X Γ : j R k

Γ : j R some X
(sI)

Γ : j R some X Γ,k isa X, j R k : S′

Γ : S′
(sE)

k fresh
(16)

6Similar rules govern something in a subject position,
but they do not matter here and are omitted.

Transitive verb with an unexpressed object:

Γ : j Ru k

Γ : j Ru
(uI)

Γ : j Ru Γ, j Ru k : S′

Γ : S′
(uE)

k fresh
(17)

Here only a sentence with an Ru-verb can be
used. Note the “missing” premise k isa X
(for some X), leaving the object nominally-
unqualified, hence omit-able. It is crucial to
note that the subject ofRu has to be a param-
eter, assuring the meaning-identity with the
explicit existentially case below. The param-
eter j is a basis for introduction of a univer-
sally quantified subject with a higher scoping
quantifier.

For example, with Ru = ate (with contexts
omitted):

j ate k

j ate
(uI)

j ate j ate k : S′

Γ : S′
(uE)

k fresh
(18)

Note that no similar (uI)-application can be
used to derive, for example, j smiled, under
the assumption that smiled is a proper intran-
sitive verb.

Example 4.2 As an example, I show that

` every girl ate some apple : every girl ate (19)

The derivation is shown in Figure 4. So, the
“essence” of the derivation is not using the
premise k isa apple, later discharged by the ap-
plication of (sE), in deriving j ate.

4.3 Sameness of meaning
The following proposition, expressing the equal-
ity of meaning between intransitive Ru-headed
pseudo-sentence and explicitly existentially-
quantified R-headed pseudo-sentences is a simple
consequence of those rules.

Proposition 4.1

[[j Ru]] = [[j R something]] (21)

and in particular

j Ru ≡GA j R something (22)

Proof: immediate, as there is a one-one corre-
spondence between canonical derivations on both

64



[j isa girl]1 every girl ate some apple

j ate some apple
(eÊ)

[j ate k]2, [k isa apple]3
j ate

(uI)

j ate
(sE2,3)

every girl ate
(eI1) (20)

Figure 4: Derivation of every girl ate

sides of the equality, because the premises of the
respective I-rules are the same.

A consequence of proposition 4.1 is the follow-
ing theorem7, establishing that the sameness of
meaning for ground pseudo-sentences with Ru-
verbs extends to a congruence of sameness of
meaning for arbitrary sentences with Ru-verbs in
the fragment (namely, arbitrary quantified nps as
subject). As we have here only two possible sub-
jects, we state the theorem for both, explicitly.

Theorem 4.1

[[every X Ru]] = [[every X R something]] (23)

[[some X Ru]] = [[some X R something]] (24)

Proof: Suppose D is a canonical derivation of
every X Ru. Then, omitting contexts, D has to
have a subderivation of the following form.

[j isa X]i
D′
j Ru

every X Ru
(eIi) (25)

There are two sub-cases to consider, depending
whether D′ itself is canonical or not.

1. First, assumeD′ is canonical. By proposition
4.1, D′ is also a canonical derivation of

[j isa X]i

D′
j R something

And, hence,

[j isa X]i
D′

j R something

every X R something
(eIi) (26)

7Note that neither Blom et al. (2012) nor Giorgolo and
Asudeh (2012) relate to this issue, discussing only sentences
with proper names as subjects.

is a canonical derivation, establishing

[[every X Ru]]⊆[[every X R something]]
(27)

Showing

[[every X R something]]⊆[[[[every X Ru]]
(28)

is similar.

2. Next, suppose D′ is not canonical. Thus, the
conclusion j Ru was obtained by an applica-
tion of an E-rule. In the small fragment con-
sidered here, there are two possible E-rules
that could yield this consequence.

(a) The one possibility is the (eÊ)-rule.
This means that D′ must have the fol-
lowing form.

D′1
every Y Ru

D′2
j isa Y

j Ru
(eÊj)

In the subderivation D′1, the conclusion
must have been introduced by the (eI)-
rule. So this premise looks like

[k isa Y ]j
D′′1
k Ru

every Y Ru
(eIj)

SinceD′′1 is smaller thanD, by induction
it follows that

[k isa Y ]j
D′′1

k R something

every Y R something
(eIj)

from which we get the required deriva-
tion

D′1
every Y R something

D′2
j isa Y

j R something
(eÊj)

The other direction is similar.

65



(b) The other possibility is that the relevant
E-rules are (sE) and (uE) (for a subject
some X). The details are similar to the
previous case and omitted.

This proof could be extended for subjects with
other determiners, e.g. at least seven girls
ate, having the same meaning as at least seven
girls ate something, not in the current fragment,
though.

There is an interesting observation arising from
the proof-theoretic meaning device above. Con-
sider sentences with intensional transitive verb
(ITVs) with an indefinite object np, like

Mary seeks/looks for a secretary (29)

Such sentences are known to have a notional read-
ing (unspecific) of their object. Thus, (29) has a
reading by which Mary looks for any secretary.

Such sentences have no equivalent counterpart
with an unexpressed object.

(∗) Mary seeks/looks for (30)

The explanation for the impossibility of the object
omission can be found in the proof-theoretic se-
mantics for ITVs provided in Francez (2016). Un-
der this semantics, the objects of ITVs are different
kind of parameters than the individual parameters,
for which the omission rules present here do not
apply. This shows the power of syntactic meth-
ods, introducing formal distinctions not carrying
any ontological commitments, unlike the need to
populate models with entities of unclear nature as
in model-theoretic semantics.

5 Conclusions

In this paper I have presented a proof-theoretic se-
mantics for sentences headed by transitive verbs
allowing an unexpressed (implicit) object. Such
sentences are shown to have the same (proof-
theoretic) meaning as the same sentences with an
explicit existentially quantified object something.

This semantics is contrasted with a model-
theoretic semantics based on truth-conditions in
models. The models used contain in their do-
main “filler” elements, that have an unclear extra-
theoretic significance with an unclear ontologi-
cal commitments. In contrast, the proof-theoretic
meaning is appealing to formal (syntactic) re-
sources that carry no ontological commitment.

Furthermore, the sameness of meaning is based
on sameness of deductive role within a meaning-
conferring proof-system, based on use.

References
Gilad Ben-Avi and Nissim Francez. 2004. Categorial

grammar with ontology-refined types. In Categorial
Grammars 2004: An efficient tool for Natural Lan-
guage Processing. Montpellier, France.

Chris Blom, Philippe de Groote, Yoad Winter, and
Joost Zwarts. 2012. Implicit arguments: event mod-
ification or option type categories. In Maria Aloni,
Vadim Kimmelman, Floris Roelofsen, Galit W. Sas-
son, Katrin Schulz, and Matthijs Westera, editors,
Proceedings of the 2011 Amsterdam Colloquium.
Springer, LNCS 7218, pages 240–250l.

Greg N. Carlson. 1984. Thematic roles and their role
in semantic interpretation. Linguistics 22:259 – 279.

David Dowty. 1982. Grammatical relations and mon-
tague grammar. In Pauline I. Jacobson and Geof-
frey K. Pullum, editors, The Nature of Syntactic Rep-
resentation, Reidel, Dordrecht, pages 79–130.

Michael Dummett. 1993. The Logical Basis of Meta-
physics. Harvard University Press, Cambridge,
MA., paperback edition. Hardcover 1991.

Nissim Francez. 2014. The granularity of meaning in
proof-theoretic semantics. In Nicholas Asher and
Sergei Soloview, editors, Proceedings of the 8th In-
ternational Conference on Logical Aspects of Com-
putational Linguistics (LACL), Toulouse, France,
June 2014. Springer Verlag, LNCS 8535, Berlin,
Heidelberg, pages 96–106.

Nissim Francez. 2015a. On distinguishing proof-
theoretic consequence from derivability. Logique et
Analysis (to appear).

Nissim Francez. 2015b. Proof-theoretic Semantics.
College Publications, London.

Nissim Francez. 2016. Proof-theoretic semantics for
intensional transitive verbs. Journal of Semantics
33(4):803–826. Doi: 10.1093/jos/ffv013.

Nissim Francez and Gilad Ben-Avi. 2015. A
proof-theoretic reconstruction of generalized quan-
tifiers. Journal of Semantics 32(3):313–371.
Doi:10.1093/jos/ffu001.

Nissim Francez and Roy Dyckhoff. 2010. Proof-
theoretic semantics for a natural language fragment.
Linguistics and Philosophy 33(6):447–477.

Gianluca Giorgolo and Ash Asudeh. 2012. Missing re-
sources in a resource-sensitive semantics. In Pro-
ceedings of the 17th Lexical Functional Grammar
(LFG) conference, Bali, June-July 2012. CSLI on-
line publications.

66



Sara Negri and Jan von Plato. 2001. Structural Proof
Theory. Cambridge University Press, Cambridge,
UK.

67


