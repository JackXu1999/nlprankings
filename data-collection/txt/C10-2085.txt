739

Coling 2010: Poster Volume, pages 739–747,

Beijing, August 2010

Visually and Phonologically Similar Characters in Incorrect 

Simplified Chinese Words 

Chao-Lin Liu† 
Chia-Ying Lee(cid:318)
†‡(cid:313)Department of Computer Science; †(cid:318)Center for Mind, Brain, and Learning 

Min-Hua Lai‡ Yi-Hsuan Chuang(cid:313)

National Chengchi University 

(cid:318)Institute of Linguistics, Academia Sinica 

{†chaolin, ‡g9523, (cid:313)g9804}@cs.nccu.edu.tw, (cid:318)chiaying@gate.sinica.edu.tw 

Abstract

Visually and phonologically similar cha-
racters are major contributing factors for 
errors  in  Chinese  text.  By  defining  ap-
propriate similarity measures that consid-
er extended Cangjie codes, we can identi-
fy  visually  similar  characters  within  a 
fraction of a second. Relying on the pro-
nunciation information noted for individ-
ual  characters  in  Chinese  lexicons,  we 
can  compute  a  list  of  characters  that  are 
phonologically similar to a given charac-
ter.  We  collected  621  incorrect  Chinese 
words reported on the Internet, and ana-
lyzed the causes of these  errors. 83% of 
these errors were related to phonological 
similarity, and 48% of them were related 
to visual similarity between the involved 
characters. Generating the lists of phono-
logically  and  visually  similar  characters, 
our  programs  were  able  to  contain  more 
than  90%  of  the  incorrect  characters  in 
the reported errors. 

Introduction 

1
In  this  paper,  we  report  the  experience  of  our 
studying the errors in simplified Chinese words. 
Chinese  words  consist  of  individual  characters. 
Some words contain just one character, but most 
words comprise two or more characters. For in-
stance,  “(cid:18401)”  (mai4)1 has  just  one  character,  and 
“(cid:20447)(cid:1602)” (yu3 yan2) is formed by two characters. 
Two most common causes for writing or typing 
incorrect  Chinese  words  are  due  to  visual  and 
phonological  similarity  between  the  correct  and 

1 We show simplified Chinese characters followed by 
their Hanyu pinyin. The digit that follows the symbols 
for the sound is the tone for the character. 

the incorrect characters. For instance, one might 
use “(cid:1226)” (hwa2) in the place of “(cid:14563)”(hwa4)  in 
“(cid:1669)(cid:14563)(cid:1486)(cid:3741)”  (ke1  hwa4  xing2  xiang4)  partially 
because  of  phonological  similarity;  one  might 
replace  “(cid:1823)”  (zhuo2)  in  “(cid:1032)(cid:14215)(cid:922)(cid:1823)”  (xin1  lao2 
li4 zhuo2) with “(cid:19845)” (chu4) partially due to visu-
al similarity. (We do not claim that the visual or 
phonological  similarity  alone  can  explain  the 
observed errors.) 

Similar  characters  are  important  for  under-
standing the errors in both traditional and simpli-
fied  Chinese.  Liu  et  al.  (2009a-c)  applied  tech-
niques  for  manipulating  correctness  of  Chinese 
words to computer assisted test-item generation. 
Research in psycholinguistics has shown that the 
number  of  neighbor  characters  influences  the 
timing of activating the mental lexicon during the 
process of understanding Chinese text (Kuo et al. 
2004; Lee et al. 2006).  Having a way to compute 
and  find  similar  characters  will  facilitate  the 
process of finding neighbor words, so can be in-
strumental for related studies in psycholinguistics. 
Algorithms  for  optical  character  recognition  for 
Chinese and for recognizing written Chinese try 
to  guess  the  input  characters  based  on  sets  of 
confusing sets (Fan et al. 1995; Liu et al., 2004). 
The  confusing  sets  happen  to  be  hand-crafted 
clusters of visually similar characters. 

It is relatively easy to judge whether two cha-
racters  have  similar  pronunciations  based  on 
their records in a given Chinese lexicon. We will 
discuss more related issues shortly.  

To  determine  whether  two  characters  are  vi-
sually  similar  is  not  as  easy.  Image  processing 
techniques  may  be  useful  but  is  not  perfectly 
feasible,  given  that  there  are  more  than  fifty 
thousand  Chinese  characters  (HanDict,  2010) 
and that many of them are similar to each other 
in  special  ways.    Liu  et  al.  (2008)  extend  the 
Cangjie codes (Cangjie, 2010; Chu, 2010) to en-
code  the  layouts  and  details  about  traditional 

740

Chinese  characters  for  computing  visually  simi-
lar  characters.  Evidence  observed  in  psycholin-
guistic  studies  offers  a  cognition-based  support 
for the design of Liu et al.’s approach (Yeh and 
Li,  2002).  In  addition,  the  proposed  method 
proves to be effective in capturing incorrect tra-
ditional Chinese words (Liu et al., 2009a-c). 

In this paper, we work on the errors in simpli-
fied  Chinese  words  by  extending  the  Cangjie 
codes for simplified Chinese. We obtain two lists 
of incorrect words that were reported on the In-
ternet, analyze the major reasons that contribute 
to the observed errors, and evaluate how the new 
Cangjie codes help us spot the incorrect charac-
ters. Results of our analysis show that phonolog-
ical and visual similarities contribute similar por-
tions of errors in simplified and traditional Chi-
nese. Experimental results also show that, we can 
catch more than 90% of the reported errors. 

We  go  over  some  issues  about  phonological 
similarity in Section 2, elaborate how we extend 
and  apply  Cangjie  codes  for  simplified  Chinese 
in  Section  3,  present  details  about  our  experi-
ments and observations in Section 4, and discuss 
some technical issues in Section 5.  
2
The  pronunciation  of  a  Chinese  character  in-
volves a sound, which consists of the nucleus and 
an optional onset, and a tone. In Mandarin Chi-
nese, there are four tones. (Some researchers in-
clude the fifth tone.) 

Phonologically Similar Characters 

In  our  work,  we  consider  four  categories  of 
phonological  similarity  between  two  characters: 
same sound and same tone (SS), same sound and 
different tone (SD), similar sound and same tone 
(MS), and similar sound and different tone (MD).  

We rely on the information provided in a lex-
icon (Dict, 2010) to determine whether two cha-
racters  have  the  same  sound  or  the  same  tone. 
The  judgment  of  whether  two  characters  have 
similar sound should consider the language expe-
rience  of  an  individual.  One  who  live  in  the 
southern and one who live in the northern China 
may have quite different perceptions of “similar” 
sound.  In  this  work,  we  resort  to  the  confusion 
sets  observed  in  a  psycholinguistic  study  con-
ducted at the Academic Sinica. 

Some Chinese characters are heteronyms. Let 
C1  and  C2  be  two  characters  that  have  multiple 
pronunciations.  If  C1  and  C2  share  one  of  their 

pronunciations,  we  consider  that  C1  and  C2  be-
long  to  the  SS  category.  This  principle  applies 
when we consider phonological similarity in oth-
er categories. 

One  challenge  in  defining  similarity  between 
characters is that the pronunciations of a charac-
ter can depend on its context. The most common 
example of tone sandhi in Chinese (Chen, 2000) 
is  that  the  first  third-tone  character  in  words 
formed by two adjacent third-tone characters will 
be pronounced in the second tone. At present, we 
ignore the influences of context when determin-
ing  whether  two  characters  are  phonologically 
similar.  

Although  we  have  confined  our  definition  of 
phonological  similarity  to  the  context  of  the 
Mandarin Chinese, it is important to note the in-
fluence of sublanguages within the Chinese lan-
guage family will affect the perception of phono-
logical similarity. Sublanguages used in different 
areas in China, e.g., Shanghai, Min, and Canton 
share the same written forms with the Mandarin 
Chinese,  but have  quite  different  though  related 
pronunciation  systems.  Hence,  people  living  in 
different areas in China may perceive phonologi-
cal similarity in very different ways. The study in 
this direction is beyond the scope of the current 
study.  
3 Visually Similar Characters 
Figure  1  shows  four  groups  of  visually  similar 
characters.  Characters  in  group  1  and  group  2 
differ  subtly  at  the  stroke  level.  Characters  in 
group 3 share the components on their right sides. 
The shared component of the characters in group 
4 appears at different places within the characters. 
Radicals  are  used  in  Chinese  dictionaries  to 
organize characters, so are useful for finding vi-
sually similar characters. The characters in group 
1 and group 2 belong to the radicals “(cid:1174)” and “ ”,
respectively. Notice that, although the radical for 
group  2  is  clear,  the  radical  for  group  1  is  not 
obvious because “(cid:1174)” is not a standalone compo-
nent.

However, the shared components might not be 
the  radicals  of  characters.  The  shared  compo-
nents  in  groups  3  and  4  are  not  the  radicals.  In 

Figure 1. Examples of visually similar characters

741

many cases, radicals are semantic components of 
Chinese characters. In groups 3 and 4, the shared 
components carry information about the pronun-
ciations  of  the  characters.  Hence,  those  charac-
ters  are  listed  under  different  radicals,  though 
they do look similar in some ways.  

Hence, a mechanism other than just relying on 
information  about  characters  in  typical  lexicons 
is necessary, and we will use the extended Cang-
jie codes for finding visually similar characters. 
3.1 Cangjie Codes for Simplified Chinese 
Table  1  shows  the  Cangjie  codes  for  the  13 
characters  listed  in  Figure  1  and  five  other 
characters.  The  “ID”  column 
the 
identification number for the characters, and we 
will refer to the ith character by ci, where i is the 
ID.  The  “CC”  column  shows 
the  Chinese 
characters, and the “Cangjie” column shows the 
Cangjie codes. Each symbol in the Cangjie codes 
corresponds to a key on the keyboard, e.g. “(cid:1174)”
and  “ (cid:973) ”  collocate  with  “W”  and  “L”, 
respectively.  Information  about  the  complete 
correspondence is available on the Wikipedia2.

shows 

Using  the  Cangjie  codes  saves  us  from  using 
image  processing  methods  to  determine  the  de-
grees of similarity between characters. Take the 
Cangjie codes for the characters in group 2 (c5, c6,
and c7) for example. It is possible to find that the 
characters share a common component, based on 
the  shared  substrings  of  the  Cangjie  codes,  i.e., 
“(cid:1033)(cid:950)”.  Using the common substring  (shown in 
black  bold)  of  the  Cangjie  codes,  we  may  also 
find the shared component “(cid:1005)” for characters in 
group 3 (c10, c11, and c12), the shared component 
“(cid:18449)” in c13 and c14, the shared component “(cid:922)” in 
c15 and c16, and the shared component “ ” in c16
and c17.

 Despite  the  perceivable  advantages,  these 
original  Cangjie  codes  are  not  good  enough.  In 
order to maintain efficiency in inputting Chinese 
characters,  the  Cangjie  codes  have  been  limited 
to  no  more  than  five  keys.  Thus,  users  of  the 
Cangjie  input  method  must  familiarize  them-
selves  with  the  principles  for  simplifying  the 
Cangjie  codes.  While  the  simplified  codes  help 
the input efficiency, they also introduce difficul-
ties and ambiguities when we compare the Cang-

ID CC Cangjie 
1 (cid:1174) (cid:1174)(cid:33)
2 (cid:1175) (cid:973)(cid:1174)(cid:33)
3 (cid:1176) (cid:1174)(cid:973)(cid:33)
4 (cid:1177) (cid:973)(cid:1174)(cid:973)(cid:33)
5 (cid:20394) (cid:1033)(cid:1033)(cid:950)(cid:915)(cid:924)(cid:33)(cid:33)
6 (cid:20376) (cid:1033)(cid:1033)(cid:950)(cid:907)(cid:924)(cid:33)
7 (cid:20371) (cid:1033)(cid:1033)(cid:950)(cid:924)(cid:33)
8 (cid:21574) (cid:968)(cid:968)(cid:907)(cid:1042)(cid:1042)
9 (cid:21383) (cid:968)(cid:968)(cid:907)(cid:1032)(cid:945)

ID CC Cangjie 
10 (cid:20546)(cid:33) (cid:1044)(cid:915)(cid:1032)(cid:1032)(cid:1033)(cid:33)
11 (cid:14331)(cid:33) (cid:1053)(cid:1032)(cid:1032)(cid:1033)(cid:33)
12 (cid:6900)(cid:33) (cid:1045)(cid:1032)(cid:1032)(cid:1033)(cid:33)
13 (cid:18449)(cid:33) (cid:945)(cid:945)(cid:1044)(cid:915)(cid:33)
14 (cid:18559)(cid:33) (cid:1174)(cid:945)(cid:945)(cid:1044)(cid:915)(cid:33)
15 (cid:18379)(cid:33) (cid:945)(cid:915)(cid:949)(cid:957)(cid:33)
16 (cid:18372)(cid:33) (cid:968)(cid:968)(cid:907)(cid:949)(cid:957)(cid:33)
17 (cid:21241)(cid:33) (cid:968)(cid:968)(cid:907)(cid:907)(cid:1044)(cid:915)(cid:33)
18 (cid:19848)(cid:33) (cid:950)(cid:907)(cid:968)(cid:915)(cid:907)(cid:33)

Table 1. Examples of Cangjie codes 

jie  codes  for  computing  similar  characters.  The 
prefix  “(cid:968)(cid:907)”  in  c16  and  c17  can  represent  “ ”, 
“(cid:21519)”  (e.g.,  c8),  and  “(cid:21370)”  (e.g.,  c9).  Characters 
whose  Cangjie  codes  include  “(cid:968)(cid:907)”  may  con-
tain any of these three components, but they do 
not really look alike. 

Therefore,  we  augment  the  original  Cangjie 
codes  by  using  the  complete  Cangjie  codes  and 
annotate  each  Chinese  character  with  a  layout 
identification that encodes the overall contours of 
the  characters.  This  is  how  Liu  and  his  col-
leagues (2008) did for the Cangjie codes for tra-
ditional  Chinese  characters,  and  we  employ  a 
similar exploration for the simplified Chinese. 
3.2 Augmenting the Cangjie Codes 
Figure  2  shows  the  twelve  possible  layouts  that 
are  considered  for 
the  Cangjie  codes  for 
simplified  Chinese  characters.  Some  of  the 
layouts contain smaller areas, and the rectangles 
show  a  subarea  within  a  character.  The  smaller 
areas  are  assigned  IDs  between  one  and  three. 
Notice  that,  to  maintain  read-ability  of  the 
figures,  not  all  IDs  for  subareas  are  shown  in 
Figure  2.  An  example  character  is  provided 
below  each  layout.  From  left  to  right  and  from 
top  to  bottom,  each  layout  is  assigned  an 
identification number from 1 to 12. For example, 
the layout ID of “(cid:14426)” is 8. “(cid:14426)” has two parts, i.e., 
“(cid:6317)” and “(cid:1167)”.

Researchers have come up with other ways to 

2en.wikipedia.org/wiki/Cangjie_input_method#Keyboard_la
yout ; last visited on 22 April 2010. 

Figure 2. Layouts of Chinese characters 

742

decompose  individual  Chinese  characters.  The 
Chinese  Document  Lab  at  the  Academia  Sinica 
proposed a system with 13 operators for describ-
ing the relationships among components in Chi-
nese  characters  (CDL,  2010).  Lee  (2010b)  pro-
pose more than 30 possible layouts.  

The  layout  of  a  character  affects  how  people 
perceive  visual  similarity  between  characters. 
For instance, c16 in Table 1 is more similar to c17
than to c18, although they share “ ”. We rely on 
the  expertise  in  Cangjie  codes  reported  in  (Lee, 
2010a) to split the codes into parts. 

Table  2  shows  the  extended  codes  for  some 
characters  listed  in  Table  1.  The  “ID”  column 
provides  links  between  the  characters  listed  in 
both  Table  1  and  Table  2.  The  “CC”  column 
shows the Chinese characters. The “LID” column 
shows  the  identifications  for  the  layouts  of  the 
characters.  The  columns  with  headings  “P1”, 
“P2”, and “P3” show the extended Cangjie codes, 
where  “Pi”  shows  the  ith  part  of  the  Cangjie 
codes, as indicated in Figure 2. 

We  decide  the  extended  codes  for  the  parts 
with the help of computer programs and subjec-
tive judgments. Starting from the original Cang-
jie codes, we can compute the most frequent sub-
strings just like we can compute the frequencies 
of  n-grams  in  corpora  (cf.  Jurafsky  and  Martin, 
2009).  Computing  the  most  common  substrings 
in  the  original  codes  is  not  a  complex  task  be-
cause the longest original Cangjie codes contain 
just five symbols.   

Often,  the  frequent  substrings  are  simplified 
codes for popular components in Chinese charac-
ters, e.g., “ ” and “ ”. The original codes for “ ”
and “ ” are “(cid:1033)(cid:968)(cid:950)” and “(cid:968)(cid:915)(cid:907)”, but they are 
often  simplified  to  “(cid:1033)(cid:950)”  and  “(cid:968)(cid:907)”,  respec-
tively.    When  simplified,  “ ”  have  the  same 
Cangjie code with “(cid:6368)”, and “ ” have the same 
Cangjie code with “(cid:21370)” and “(cid:21519)”.

After finding the frequent substrings, we veri-
fy  whether  these  frequent  substrings  are  simpli-
fied codes for meaningful components. For mea-
ningful  components,  we  replace  the  simplified 
codes  with  complete  codes.  For  instance  the 
Cangjie codes for “(cid:20394)” and “(cid:20376)” are extended to 
include  “(cid:968)”  in  Table  2,  where  we  indicate  the 
extended keys that did not belong to the original 
Cangjie codes in boldface and with a surrounding 
box.  Most  of  the  non-meaningful  frequent  sub-
strings  have  two  keys:  one  is  the  last  key  of  a 

P2

LID P1
2 (cid:1033)(cid:968)(cid:968)(cid:950)(cid:33) (cid:915)(cid:924)(cid:33)
2 (cid:1033)(cid:968)(cid:968)(cid:950)(cid:33) (cid:907)(cid:924)(cid:33)
2 (cid:1033)(cid:968)(cid:968)(cid:950)(cid:33) (cid:924)(cid:33)
(cid:1032)(cid:33)
(cid:1032)(cid:33)
(cid:1032)(cid:33)
(cid:1044)(cid:915)(cid:33)
(cid:945)(cid:33)

ID
CC
5 (cid:20394)
6 (cid:20376)
7 (cid:20371)
10 (cid:20546) 10 (cid:1044)(cid:915)(cid:33)
11 (cid:14331) 10 (cid:1053)(cid:33)
12 (cid:6900) 10 (cid:1045)(cid:33)
5 (cid:945)(cid:33)
13 (cid:18449)
14 (cid:18559)
9 (cid:1174)(cid:33)
2 (cid:945)(cid:1044)(cid:1044)(cid:915)(cid:33) (cid:949)(cid:957)(cid:33)
15 (cid:18379)
2 (cid:968)(cid:915)(cid:915)(cid:907)(cid:33) (cid:949)(cid:957)(cid:33)
16 (cid:18372)
2 (cid:968)(cid:915)(cid:915)(cid:907)(cid:33) (cid:907)(cid:1044)(cid:915)(cid:33)
17 (cid:21241)
18 (cid:19848)
3 (cid:950)(cid:950)(cid:950)(cid:907)(cid:33) (cid:968)(cid:915)(cid:33)
19 (cid:18863)
4 (cid:1032)(cid:33)
(cid:907)(cid:907)(cid:907)(cid:1033)(cid:33) (cid:949)(cid:957)(cid:33)
Table 2. Examples of extended Cangjie codes 

P3
(cid:33)
(cid:33)
(cid:33)
(cid:1033)(cid:33)
(cid:1033)(cid:33)
(cid:1033)(cid:33)
(cid:33)
(cid:1044)(cid:915)(cid:33)
(cid:33)
(cid:33)
(cid:33)
(cid:907)(cid:33)

part, and the other is the first key of another part. 
They were by observed by coincidence. 

Although  most  of  the  examples  provided  in 
Table  2  indicate  that  we  expand  only  the  first 
part of the Cangjie codes, it is absolutely possible 
that the other parts, i.e., P2 and P3, may need to 
be extended too. c19 shows such an example. 

Replacing  simplified  codes  with  complete 
codes  not  only  help  us  avoid  incorrect  matches 
but  also  help  us  find  matches  that  would  be 
missed  due  to  simplification  of  Cangjie  codes. 
Using just the original Cangjie codes in Table 1, 
it is not easy to determine that c18 (“(cid:19848)”) in Table 
1 shares a component (“ ”) with c16 and c17 (“(cid:18372)”
and  “(cid:21241)”).  In  contrast,  there  is  a  chance  to  find 
the similarity with the extended Cangjie codes in 
Table 2, given that all of the three Cangjie codes 
include “(cid:968)(cid:915)(cid:907)”.

We can see an application of the LIDs, using 
“(cid:18372)”, “(cid:21241)” and “(cid:19848)” as an example. Consider the 
case  that  we  want  to  determine  which  of  “(cid:21241)”
and “(cid:19848)” is more similar to “(cid:18372)”. Their extended 
Cangjie  codes  will  indicate  that  “(cid:21241)”  is  the  an-
swer to this question for two reasons. First, “(cid:18372)”
and “(cid:21241)” belong to the same type of layout; and, 
second, the shared components reside at the same 
area in “(cid:18372)” and “(cid:21241)”.
3.3
The  main  differences  between  the  original  and 
the  extended  Cangjie  codes  are  the  degrees  of 
details  about  the  structures  of  the  Chinese  cha-
racters.  By  recovering  the  details  that  were  ig-
nored in the original codes, our programs will be 

Similarity Measures 

743

better  equipped  to  find  the  similarity  between 
characters.  

In the current study, we experiment with three 
different  scoring  methods  to  measure  the  visual 
similarity between two characters based on their 
extended  Cangjie  codes.  Two  of  these  methods 
had been tried by Liu and his colleagues’ study 
for  traditional  Chinese  characters  (Liu  et  al., 
2009b-c).  The  first  method,  denoted  SC1,  con-
siders  the  total  number  of  matched  keys  in  the 
matched  parts  (without  considering  their  part 
IDs). Let ci denote the ith character listed in Table 
2.  We  have  SC1(c15,  c16)  =  2  because  of  the 
matched “(cid:949)(cid:957)”. Analogously, we have SC1(c19,
c16) = 2.  

The  second  method,  denoted  SC2,  includes 
the  score  of  SC1  and  considers  the  following 
conditions: (1) add one point if the matched parts 
locate at the same place in the characters and (2) 
if the first condition is met, an extra point will be 
added if the characters belong to the same layout.  
Hence,  we  have  SC2(c15,  c16)  =SC1(c15,
c16)+1+1=4  because  (1)  the  matched  “(cid:949)(cid:957)”  lo-
cate at P2 in both characters and (2) c15 and c16
belong to the same layout. Assuming that c16 be-
longs  to  layout  5,  than  SC2(c15,  c16)  would  be-
come 3. In contrast, we have SC2(c19, c16)=2. No 
extra weights for the matching “(cid:949)(cid:957)” because it 
locates  at  different  parts  in  the  characters.  The 
extra  weight  considers  the  spatial  influences  of 
the matched parts on the perception of similarity. 
While splitting the extended Cangjie codes in-
to parts allows us to tell that c15 is more similar 
to c16 than to c19, it also creates a new barrier in 
computing similarity scores. An example of this 
problem is that SC2(c17, c18)=0. This is because 
that “(cid:968)(cid:915)(cid:907)” at P1 in c17 can match neither “(cid:968)
(cid:915)” at P2 nor “(cid:907)” at P3 in c18.

To  alleviate  this  problem,  we  consider  SC3 
which  computes  the  similarity  in  three  steps. 
First, we concatenate the parts of a Cangjie code 
for  a  character.  Then,  we  compute  the  longest 
common subsequence (LCS) (cf. Cormen et al., 
2009) of the concatenated codes of the two cha-
racters  being  compared,  and  compute  a  Dice’s 
coefficient (cf. Croft et al., 2010) as the similari-
ty.  Let  X  and  Y  denote  the  concatenated,  ex-
tended Cangjie codes for two characters, and let 
Z  be  the  LCS  of  X  and  Y.  The  similarity  is  de-
fined by the following equation.  

DiceLCS

(cid:32)

2
X

Z
(cid:117)
Y
(cid:14)

 where
,

isS

 the

length

of

string

S

  (1) 

1(cid:100)

LCS

LCS

LCS

(cid:117)5

LCCS

LCCS

Dice

(cid:117)10

Dice

Dice

LCCS Dice

that 
1(cid:100)

.  Notice 
,  and 
Dice

We  compute  another  Dice’s  coefficient  be-
tween X and Y. The formula is the similar to (1), 
except that we set Z to the longest common con-
secutive  subsequence.  We  call 
this  score 
,
Dice
(cid:100)
 .  Finally,  SC3  of  two 
Dice
characters is the sum of their SC2, 
,
LCCS
.  We  multiply  the  Dice’s  coeffi-
and
cients with constants to make them as influential 
as  the  SC2  component  in  SC3.  The  constants 
were not scientifically chosen, but were selected 
heuristically. 
4 Error Analysis and Evaluation 
We evaluate  the effectiveness of using the pho-
nologically  and  visually  similar  characters  to 
captures errors in simplified Chinese words with 
two  lists  of  reported  errors  that  were  collected 
from the Internet.  
4.1 Data Sources 
We need two types of data for the experiments. 
The  information  about  the  pronunciation  and 
structures of the Chinese characters help us gen-
erate  lists  of  similar  characters.  We  also  need 
reported  errors  so  that  we  can  evaluate  whether 
the similar characters catch the reported errors. 

A  lexicon  that  provides  the  pronunciation  in-
formation  about  Chinese  characters  and  a  data-
base that contains the extended Cangjie codes are 
necessary  for  our  programs  to  generate  lists  of 
characters  that  are  phonologically  and  visually 
similar to a given character. 

It is not difficult to acquire lexicons that show 
standard  pronunciations  for  Chinese  characters. 
As  we  stated  in  Section  2,  the  main  problem  is 
that it is not easy to predict how people in differ-
ent areas in China actually pronounce the charac-
ters.  Hence,  we  can  only  rely  on  the  standards 
that are recorded in lexicons.  

With the procedure reported in Section 3.2, we 
built  a  database  of  extended  Cangjie  codes  for 
the  simplified  Chinese.  The  database  was  de-
signed to contain 5401 common characters in the 
BIG5  encoding,  which  was  originally  designed 
for  the  traditional  Chinese.  After  converting  the 
traditional  Chinese  characters  to  the  simplified 
counterparts,  the  database  contained  only  5170

744

different characters. 

We  searched  the  Internet  for  reported  errors 
that  were  collected  in  real-world  scenarios,  and 
obtained  two  lists  of  errors.  The  first  list3 came 
from  the  entrance  examinations  for  senior  high 
schools  in  China,  and  the  second  list4 contained 
errors observed at senior high schools in China. 
We  used  160  and  524  errors  from  the  first  and 
the second lists, respectively, and we refer to the 
combined  list  as  the  Ilist.  An  item  of  reported 
error  contained  two  parts:  the  correct  word  and 
the  mistaken  character,  both  of  which  will  be 
used in our experiments. 
4.2
Since  our  programs  can  compare  the  similarity 
only between characters that are included in our 
lexicon, we have to exclude some reported errors 
from the Ilist. As a result, we used only 621 er-
rors in this section.  

Preliminary Data Analysis 

Two native speakers subjectively classified the 
causes of these errors into three categories based 
on whether the errors were related to phonologi-
cal similarity, visual similarity, or neither. Since 
the annotators did not always agree on their clas-
sifications, the final results have five interesting 
categories: “P”, “V”, “N”, “D”, and “B” in Table 
3. P and V indicate that the annotators agreed on 
the types of errors to be related to phonological 
and  visual  similarity,  respectively.  N  indicates 
that the annotators believed that the errors were 
not  due  to  phonological  or  visual  similarity.  D 
indicates  that  the  annotators  believed  that  the 
errors were due to phonological or visual similar-
ity,  but  they  did  not  have  a  consensus.  B  indi-
cates the intersection of P and V.  

Table  3  shows  the  percentages  of  errors  in 
these categories. To get 100% from the table, we 
can add up P, V, N, and D, and subtract B from 
the total. In reality there are errors of type N, and 
Liu and his colleagues (2009b) reported this type 
of errors. Errors in this category happened to be 
missing in the Ilist. Based on our and Liu’s ob-

 
Ilist 

P 
83.1 

V 
48.3 

N 
0 

D 
3.7 

B 
35.1

Table 3. Percentages of types of errors

3www.0668edu.com/soft/4/12/95/2008/2008091357140.htm
 ; last visited on 22 April 2010. 
4 gaozhong.kt5u.com/soft/2/38018.html;  last  visited  on  22 
April 2010. 

servations,  the  percentages  of  phonological  and 
visual similarities contribute to the errors in sim-
plified and traditional Chinese words with simi-
lar percentages.  
4.3
We  design  and  employ  the  ICCEval  procedure 
for the evaluation task. 

Experimental Procedure 

At step 1, given the correct word and the cor-
rect  character  to  be  intentionally  replaced  with 
incorrect characters, we created a list of charac-
ters  based  on  the  selection  criterion.  We  may 
choose  to  evaluate  phonologically  or  visually 
similar characters. For a given character, ICCEv-
al can generate characters that are in the SS, SD, 
MS, and MD categories for phonologically simi-
lar characters (cf. Section 2). For visually similar 
characters,  ICCEval can  select  characters  based 
on SC1, SC2, and SC3 (cf. Section 3.3). In addi-
tion, ICCEval can  generate  a  list  of  characters 
that belong to the same radical and have the same 
number of strokes with the correct character. In 
the experimental results, we refer to this type of 
similar characters as RS.

At step 2, for a correct word that people origi-
nally  wanted  to  write,  we  replaced  the  correct 
character  with  an  incorrect  character  with  the 
characters that were generated at step 1, submit-
ted  the  incorrect  word  to  Google  AJAX  Search 

for ccr 

Procedure ICCEval
Input:
ccr: the correct character; cwd:
the correct word; crit: the selec-
tion criterion; num: number of re-
quested characters; rnk: the cri-
terion to rank the incorrect 
words;
Output: a list of ranked candidates 
Steps:
1. Generate a list, L, of charac-

ters for ccr with the specified 
criterion, crit. When using SC1, 
SC2, or SC3 to select visually 
similar characters, at most num
characters will be selected. 
2. For each c in L, replace ccr in 
cwd with c, submit the resulting 
incorrect word to Google, and 
record the ENOP. 
generated at step 2, using the 
criterion specified by rnk.

3. Rank the list of incorrect words 

4. Return the ranked list. 

745

API,  and  extracted  the  estimated  numbers  of 
pages  (ENOP)  5  that  contained  the  incorrect 
words. In an ordinary interaction with Google, an 
ENOP  can  be  retrieved  from  the  search  results, 
and it typically follows the string “Results 1-
10 of about” on the upper part of the browser 
window.  Using  the  AJAX  API,  we  just  have  to 
parse the returned results with a simple method.  
Larger  ENOPs  for  incorrect  words  suggest 
that these words are incorrect words that people 
frequently  used  on  their  web  pages.  Hence,  we 
ranked  the  similar  characters  based  on  their 
ENOPs at step 3, and return the list. 

Since  the  reported  errors  contained  informa-
tion about the incorrect ways to write the correct 
words, we could check whether the real incorrect 
characters were among the similar characters that 
our programs generated at step 1 (inclusion tests). 
We could also check whether the actual incorrect 
characters were ranked higher in the ranked lists 
(ranking tests). 

Take the word “(cid:1705)(cid:20192)(cid:1105)(cid:14611)” as an example. In 
the collected data, it is reported that people wrote 
this word as “(cid:1705)(cid:21182)(cid:1105)(cid:14611)”, i.e., the second charac-
ter  was  incorrect.  Hoping  to  capture  the  error, 
ICCEval generated a list of possible substitutions 
for  “(cid:20192)”  at  step  1.  Depending  on  the  categories 
of sources of errors, ICCEval generated a list of 
characters. When aiming to test the effectiveness 
of visually similar characters, we could ask IC-
CEval to apply SC3 to generate a list of alterna-
tives  for  “(cid:20192)”,  possibly  including  “(cid:21182)”,  “(cid:20484)”, 
“(cid:4124)”, and other candidates. At step 2, we created 
and  submitted  query  strings  “(cid:1705)(cid:21182)(cid:1105)(cid:14611)”,  “(cid:1705)(cid:20484)
(cid:1105)(cid:14611)”, and “(cid:1705)(cid:4124)(cid:1105)(cid:14611)” to obtain the ENOPs for 
the candidates. If the ENOPs were, respectively, 
410000,  26100,  and  7940,  these  candidates 
would be returned in the order of “(cid:21182)”, “(cid:20484)”, and 
“(cid:4124)”. As a result, the returned list contained the 
actual incorrect character “(cid:21182)”, and placed “(cid:21182)”
on top of the ranked list. 

Notice  that  we  considered  the  contexts  in 
which the incorrect characters appeared to rank. 
We did not rank the incorrect characters with just 
the unigrams. In addition, although this running 
example  shows  that  we  ranked  the  characters 
directly with the ENOPs, we also ranked the list 

5According to (Croft et al., 2010), the ENOPs may not re-
flect the actual number of pages on the Internet. 

,

)

(cid:12)

(cid:32)

)
X

PMI

(cid:11)
XC

Pr(
C
Pr(

XC
(cid:154)
Pr(
)
(cid:117)

of alternatives with pointwise mutual information: 
,                 (2) 
where X is the candidate character to replace the 
correct  character  and  C  is  the  correct  word  ex-
cluding  the  correct  character  to  be  replaced.  To 
compute the score of replacing “(cid:20192)” with “(cid:21182)” in 
“(cid:1705)(cid:20192)(cid:1105)(cid:14611)”, X = “(cid:21182)”, C=“(cid:1705)(cid:589)(cid:1105)(cid:14611)”, and (C(cid:154)X)
is “(cid:1705)(cid:21182)(cid:1105)(cid:14611)”. ((cid:589)(cid:33)denotes a character to be re-
placed.) PMI is a common tool for judging collo-
cations  in  natural  language  processing.  (cf.  Ju-
rafsky and Martin, 2009). 

It  would  demand  very  much  computation  ef-
fort to find Pr(C). Fortunately, we do not have to 
consider Pr(C) because it is a common denomi-
nator  for  all  incorrect  characters.  Let  X1  and  X2
be two competing candidates for the correct cha-
racter.  We  can  ignore  Pr(C)  because  of  the  fol-
lowing relationship. 

PMI

(cid:11)
XC

,

(cid:12)

1

(cid:116)

PMI

(cid:11)
XC

,

(cid:12)

2

(cid:156)

Hence, X1 prevails if 
(cid:11)
XC
,

score

score
(cid:12)

(cid:32)

)

)

1

(cid:116)

Pr(

Pr(

(cid:154)
X

XC
XC
(cid:154)
2
X
)
Pr(
)
Pr(
2
1
 is larger. 
(cid:12)1, XC
(cid:11)
Pr(
(cid:154)
X

XC
)
Pr(

)

                   (3) 

Experimental Results: Inclusion Tests 

In  our  work,  we  approximate  the  probabilities 
used in (3) by the corresponding frequencies that 
we  can  collect  through  Google,  similar  to  the 
methods that we used to collect the ENOPs. 
4.4
We ran ICCEval with 621 errors in the Ilist. The 
experiments were conducted for all categories of 
phonological  and  visual  similarity.  When  using 
SS, SD, MS, MD, and RS as the selection crite-
rion,  we  did  not  limit  the  number  of  candidate 
characters.  When  using  SC1,  SC2,  and  SC3  as 
the  criterion,  we  limited  the  number  candidates 
to be no more than 30. We consider only words 
that the native speakers have consensus over the 
causes of errors. Hence, we dropped those 3.7% 
of words in Table 3, and had just 598 errors. The 
ENOPs  were  obtained  during  March  and  April 
2010. 

Table 4 shows the chances that the lists, gen-

Ilist

SS 
82.6
SC1
78.3

Phone
97.3 
Visual
Ilist
90.0 
Table 4. Chances of the recommended list con-

MS
1.7 
SC3
87.7 

MD 
1.6 
RS
1.3 

SD
29.3
SC2
71.0

tains the incorrect character

746

erated with different crit at step 1, contained the 
incorrect  character  in  the  reported  errors.  In  the 
Ilist,  there  were  516  and  3006   errors  that  were 
related to phonological and visual similarity, re-
spectively.  Using  the  characters  generated  with 
the  SS  criterion,  we  captured  426  out  of  516 
phone-related  errors,  so  we  showed  426/516  = 
82.6% in the table. 

Results  in  Table  4  show  that  we  captured 
phone-related errors more effectively than visual-
ly-similar errors. With a simple method, we can 
compute  the  union  of  the  characters  that  were 
generated with the SS, SD, MS, and MD criteria. 
This integrated list suggested how well we cap-
tured the errors that were related to phones, and 
we  show  its  effectiveness  under  “Phone”.  Simi-
larly,  we  integrated  the  lists  generated  by  SC1, 
SC2, SC3, and RS to explore the effectiveness of 
finding errors that are related to visual similarity, 
and the result is shown under “Visual”. 
4.5
To  put  the  generated  characters  into  work,  we 
wish to put the actual incorrect character high in 
the  ranked  list.  This  will  help  the  efficiency  in 
supporting  computer  assisted  test-item  writing. 
Having  short  lists  that  contain  relatively  more 
confusing characters may facilitate the data prep-
aration for psycholinguistic studies. 

Experimental Results: Ranking Tests 

At step 3, we ranked the candidate characters 
by forming incorrect words with other characters 
in the correct words as the context and submitted 
the  words  to  Google  for  ENOPs.  The  results  of 
ranking, shown in Table 5, indicate that we may 
just offer the leading five candidates to cover the 
actual incorrect characters in almost all cases.  

The “Total” column shows the total number of 
errors  that  were  captured  by  the  selection  crite-
rion.  The  column  “Ri”  shows  the  percentage  of 
all errors, due to phonological or visual similarity, 
that  were  re-created  and  ranked  ith  at  step  3  in 
ICCEVAL.  The  row  headings  show  the  selection 
criteria  that  were  used  in  the  experiments.  For 
instance, using SS as the criterion, 70.3% of ac-
tual phone-related errors were rank first, 7.4% of 
the phone-related errors were ranked second, etc. 
If we recommended only 5 leading incorrect cha-

6The sum of 516 and 300 is larger than 598 because 
some of the characters are similar both phonologically 
and visually.

SS 
SD 
MS
MD
SC1
SC2
SC3
RS 

Total
426
151
9
8
235
213
263
4

R1
70.3
25.6
1.4
1.6
61.3
53.7
66.7
1.3

R4
0.4 
0.0 
0.0 
0.0 
2.0 
2.3 
1.7 
0.0 
Table 5. Ranking the candidates 

R2
7.4 
2.7 
0.4 
0.0 
10.3 
11.0 
12.7 
0.0 

R3
2.9 
0.6 
0.0 
0.0 
4.3 
3.7 
5.7 
0.0 

R5
0.6
0.4
0.0
0.0
0.3
0.3
0.3
0.0

racters only with SS, we would have captured the 
actual  incorrect  characters  that  were  phone  re-
lated 81.6% (the sum of  R1 to R5) of the time. 
For  errors  that  were  related  to  visual  similarity, 
recommending the top five candidates with SC3 
would  capture  the  actual  incorrect  characters 
87.1%  of  the  time.  Since  we  do  not  show  the 
complete  distributions,  the  sums  over  the  rows 
are  not  100%.  In  the  current  experiments,  the 
worst rank was 21. 

We also used PMI to rank the incorrect words. 
Due  to  page  limits,  we  cannot  show  complete 
details  about  the  results.  The  observed  distribu-
tions in ranks were not very different from those 
shown in Table 5. 
5 Discussion 

Compared with Liu et al.’s analysis (2009b-c) 
for  the  traditional  Chinese,  the  proportions  of 
errors related to phonological factors are almost 
the same, both at about 80%. The proportion of 
errors related to visual factors varied, but the av-
erages in both studies were about 48%. A larger 
scale of study is needed for how traditional and 
simplified  characters  affect  the  distributions  of 
errors. Results shown in Table 4 suggest that it is 
relatively easy to capture errors related to visual 
factors in simplified Chinese. Although we can-
not elaborate, we note that Cangjie codes are not 
good  for  comparing  characters  that  have  few 
strokes, e.g., c1 to c4 in Table 1. In these cases, 
the  coding  method  for  Wubihua  input  method 
(Wubihua, 2010) should be applied. 

Acknowledgement 
This  research  was  supported  in  part  by  the  research 
contract NSC-97-2221-E-004-007-MY2 from the Na-
tional Science Council of Taiwan. We thank the ano-
nymous  reviewers  for  constructive  comments.  Al-
though we are not able to respond to all the comments 

747

Liu,  Chao-Lin,  and  Jen-Hsiang  Lin.  2008.  Using 
structural  information  for  identifying  similar  Chi-
nese  characters.  Proc.  of  the  46th  Annual  Meeting 
of  the  Association  for  Computational  Linguistics,
short papers, 93(cid:1311)96.

Liu,  Chao-Lin,  Kan-Wen  Tien,  Yi-Hsuan  Chuang, 
Chih-Bin  Huang,  and Juei-Yu Weng. 2009a.  Two 
applications  of  lexical  information  to  computer-
assisted  item  authoring  for  elementary  Chinese. 
Proc.  of  the  22nd  Int’l  Conf.  on  Industrial  En-
gineering  &  Other  Applications  of  Applied  Intel-
ligent Systems, 470(cid:1311)480. 

Liu,  Chao-Lin,  Kan-Wen  Tien,  Min-Hua  Lai,  Yi-
Hsuan  Chuang,  and  Shih-Hung  Wu.  2009b.  Cap-
turing errors in written Chinese words. Proc. of the 
47th Annual Meeting of the Association for Compu-
tational Linguistics, short papers, 25(cid:1311)28. 

Liu,  Chao-Lin,  Kan-Wen  Tien,  Min-Hua  Lai,  Yi-
Hsuan Chuang, and Shih-Hung Wu. 2009c. Phono-
logical  and  logographic  influences  on  errors  in 
written  Chinese  words.  Proc.  of  the  7th  Workshop 
on  Asian  Language  Resources,  the  47th  Annual 
Meeting of the ACL, 84(cid:1311)91. 

Liu, Cheng-Lin, Stefan Jaeger, and Masaki Nakagawa. 
2004.  Online  recognition  of  Chinese  characters: 
The  state-of-the-art.  IEEE  Transaction  on  Pattern 
Analysis and Machine Intelligence, 26(2):198(cid:1311)213. 
Wubihua.  2010.  Last  visited  on  22  April  2010: 

en.wikipedia.org/wiki/Wubihua_method. 

Yeh, Su-Ling, and Jing-Ling Li. 2002. Role of struc-
ture  and  component  in  judgments  of  visual  simi-
larity  of  Chinese  Characters.  Journal  of  Expe-
rimental Psychology: Human Perception and Per-
formance, 28(4):933(cid:1311)947. 

in this paper, we have done so in an extended version 
of this paper. 

References 
Cangjie.  2010.  Last  visited  on  22  April  2010: 

en.wikipedia.org/wiki/Cangjie_input_method. 

CDL. 2010. Chinese document laboratory, Academia 
Sinica.  Last  visited  on  22  April,  2010; 
cdp.sinica.edu.tw/cdphanzi/. (in Chinese) 

Chen,  Matthew.  Y.  2000.  Tone  Sandhi:  Patterns 
across  Chinese  Dialects,  (Cambridge  Studies  in 
Linguistics 92). Cambridge University Press. 

Chu, Bong-Foo. 2010. Handbook of the Fifth Genera-
tion of the Cangjie Input Method. last visited on 22 
April 2010: www.cbflabs.com/book/5cjbook/. (in Chi-
nese) 

Cormen, Thomas H., Charles E. Leiserson, Ronald L. 
Rivest,  and  Clifford  Stein.  2009.  Introduction  to 
Algorithms, third edition. MIT Press. 

Croft, W.  Bruce,  Donald  Metzler,  and  Trevor  Stroh-
man, 2010. Search Engines: Information Retrieval 
in Practice, Pearson. 

Dict.  2010.  Last 

visited 

on 

22  April 

2010,

www.cns11643.gov.tw/AIDB/welcome.do 

Fan, Kuo-Chin, Chang-Keng Lin, and Kuo-Sen Chou. 
1995. Confusion set recognition of on-line Chinese 
characters by artificial intelligence technique. Pat-
tern Recognition, 28(3):303(cid:1311)313. 

HanDict.  2010.  Last  visit  on  22  April  2010, 

www.zdic.net/appendix/f19.htm. 

Jurafsky, Daniel and James H. Martin. 2009. Speech 
and Language Processing, second edition, Pearson. 
Kuo,  Wen-Jui,  Tzu-Chen  Yeh,  Jun-Ren  Lee,  Li-Fen 
Chen,  Po-Lei  Lee,  Shyan-Shiou  Chen,  Low-Tone 
Ho,  Daisy  L.  Hung,  Ovid  J.-L.  Tzeng,  and  Jen-
Chuen Hsieh. 2004. Orthographic and phonological 
processing of Chinese characters: An fMRI study. 
NeuroImage, 21(4):1721(cid:1311)1731. 

Lee, Chia-Ying, Jie-Li Tsai, Hsu-Wen Huang, Daisy 
L.  Hung,  Ovid  J.-L.  Tzeng.  2006.  The  temporal 
signatures of semantic and phonological activations 
for Chinese sublexical processing: An even-related 
potential study. Brain Research, 1121(1):150-159. 
Lee,  Hsiang.  2010a.  Cangjie  Input  Methods  in  30 
Days 2. Foruto. Last visited on 22 April 2010:  in-
put.foruto.com/cccls/cjzd.html. 

Lee, Mu. 2010b. A quantitative study of the formation 
of  Chinese  characters.  Last  visited  on  22  April 
2010: chinese.exponode.com/0_1.htm. (in Chinese) 

