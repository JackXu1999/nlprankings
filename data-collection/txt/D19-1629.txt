



















































WIQA: A dataset for "What if..." reasoning over procedural text


Proceedings of the 2019 Conference on Empirical Methods in Natural Language Processing
and the 9th International Joint Conference on Natural Language Processing, pages 6076–6085,
Hong Kong, China, November 3–7, 2019. c©2019 Association for Computational Linguistics

6076

WIQA: A dataset for "What if..." reasoning over procedural text

Niket Tandon*, Bhavana Dalvi Mishra∗, Keisuke Sakaguchi,
Antoine Bosselut, Peter Clark

Allen Institute for Artificial Intelligence, Seattle, WA
{nikett,bhavanad,keisukes,antoineb,peterc}@allenai.org

Abstract

We introduce WIQA, the first large-scale
dataset of "What if..." questions over proce-
dural text. WIQA contains three parts: a col-
lection of paragraphs each describing a pro-
cess, e.g., beach erosion; a set of crowdsourced
influenct graphs for each paragraph, describ-
ing how one change affects another; and a
large (40k) collection of "What if...?" multiple-
choice questions derived from the graphs. For
example, given a paragraph about beach ero-
sion, would stormy weather result in more
or less erosion (or have no effect)? The task
is to answer the questions, given their asso-
ciated paragraph. WIQA contains three kinds
of questions: perturbations to steps mentioned
in the paragraph; external (out-of-paragraph)
perturbations requiring commonsense knowl-
edge; and irrelevant (no effect) perturbations.
We find that state-of-the-art models achieve
73.8% accuracy, well below the human perfor-
mance of 96.3%. We analyze the challenges,
in particular tracking chains of influences, and
present the dataset as an open challenge to the
community.

1 Introduction

Procedural text is common in language, but chal-
lenging to comprehend because it describes a dy-
namically changing world. While recent systems
for procedural text comprehension can answer
questions about what events happen, e.g., (Bosselut
et al., 2018; Henaff et al., 2017; Dalvi et al., 2018),
the extent to which they understand the influences
between those events remains unclear.

One important test of understanding is to pre-
dict what would happen if a process was perturbed
in some way, requiring understanding and tracing

∗*Niket Tandon and Bhavana Dalvi Mishra contributed
equally to this work.

Procedural Text (simplified):

Erosion by the ocean:
1. Wind creates waves in the ocean.
2. The waves wash onto the beaches.
3. The waves hit rocks on the beach.
4. Tiny parts of the rock break off.
5. The rocks become smaller.

Figure 1: WIQA contains procedural paragraphs,
crowdsourced influence graphs associated with them,
and a large collection of “Does changeX result in
changeY?” (what-if) questions, derived from the graphs.

the chain of influences through a paragraph. How-
ever, to date there is no dataset available to help
develop this capability. We aim to fill this gap with
WIQA1, the first large-scale dataset testing "What
if..." reasoning over procedural text.

WIQA contains 40.7K questions, for 379 pro-
cess paragraphs. To efficiently create the questions,
crowdworkers created 2107 influence graphs (IGs)
for the paragraphs, describing how one perturbation
positively or negatively influences another (Fig-

1The dataset is available at http://data.allenai.org/wiqa/



6077

ure 1). Questions were then derived from paths in
the graphs, each asking how the change described
in one node affects another. Each question is a tem-
plated, multiple choice (MC) question of the form
Does changeX result in changeY? (A) Correct (B)
Opposite (C) No effect, where Opposite indicates a
negative influence between changeX and changeY.
To bound the task, perturbations are typically qual-
itative (e.g., “the wind is blowing harder”), and
possible effects are restricted to changes to enti-
ties and events mentioned in the paragraph (e.g.,
“the waves are bigger”). Perturbations themselves
include in-paragraph, out-of-paragraph, and irrel-
evant (no effect) changes. The WIQA task is to
answer the questions, given the paragraph (but not
the IG).

We first describe the task and how the dataset
was constructed, and then present results from base-
lines and strong BERT-based models. We find that
the best model is still 23% behind human perfor-
mance and the gap further widens with indirect
and out-of-paragraph effects, illustrating that the
dataset is hard. We present a detailed analysis show-
ing WIQA is rich in linguistic and semantic phe-
nomena. Our contributions are: (1) the new dataset
(2) performance measures and an analysis of its
challenges, to support research on counterfactual,
textual reasoning over procedural text.

2 Related Work

While there are several NLP datasets now available
for procedural text understanding, e.g., (Kiddon
et al., 2016; Dalvi et al., 2018; Weston et al., 2015),
these have all targeted the task of tracking entity
states throughout the text. WIQA takes the next
step of asking how states might change if a pertur-
bation was introduced.

Predicting the effects of qualitative change has
been studied in the qualitative reasoning (QR) com-
munity, but primarily using formal models (Forbus,
1984; Weld and De Kleer, 2013). Similarly, coun-
terfactual reasoning has been studied in the logic
community (Lewis, 2013), but again using formal
frameworks. In contrast, WIQA treats the task as
a mixture of reading comprehension and common-
sense reasoning, creating a new NLP challenge.

3 Dataset Construction

To efficiently generate questions, we first asked
crowdworkers to create influence graphs (IGs) for
each paragraph. We then create questions from the

Figure 2: The template used to acquire influence graphs

IGs using paths in the IGs. We now describe this
process.

Influence Graphs An influence graph G(V, E)
for a procedural text T is an unweighted directed
graph. Each vertex vi is labeled with one or more
text strings, each describing a change to the origi-
nal conditions described or assumed in T , such that
all those changes have the same influence on a con-
nected node v j. Each edge is labeled with a polarity,
+ or -, indicating whether the influence is positive
(causes/increases) or negative (prevents/ reduces).
Indirect effects can be found by traversing G.
It is useful to distinguish two kinds of nodes:
1. Out-of-para nodes: denoting events or changes
to entities/events not mentioned in the paragraph,
e.g, “during storms” in Figure 1.
2. In-para nodes: denoting events or changes to
entities/events mentioned in the paragraph, e.g,
“the wind is blowing harder” in Figure 1.

Acquiring influence graphs For a source of
paragraphs, we used the 377 training set paragraphs
from the ProPara dataset (Tandon et al., 2018).
(Multiple) influence graphs were then crowd-
sourced for each. To do this, we use an influence
graph template, shown in Figure 2. Workers were
asked to populate this (hidden) template using a se-
quence of five questions, where the later questions
were automatically constructed from their answers
to the earlier questions. The first question asks the
worker to supply an X and Y in: “If [X] occurs, it
will have the intermediate effect [Y] resulting in
accelerated_outcome” (where the accelerated out-
come phrase was pre-authored for each paragraph).
For X and Y, workers were asked to describe a
change in some property/phenomonon mentioned
in the paragraph, e.g., if a paragraph sentence xi
is “Wind creates waves.”, they may author an X
saying “the wind is blowing harder” (Figure 1).



6078

(The alignment of X and xi, and whether X de-
scribes an increase or decrease of xi, denoted by
dX ∈ {+,−}, was also recorded.). This fills X and Y
in Figure 2. Similar questions populate the remain-
ing nodes (see Appendix). 2107 influence graphs
were collected in this way.

Generating Questions from Graphs Each path
in a graph forms a “change→effect?” question,
whose answer is either “correct” or “opposite” de-
pending on the product of the polarities of the
traversed edges. Questions are labeled with the
number of edges traversed (1 = "1-hop", etc.). We
also distinguish in-para and out-of-para questions
depending on the type of node they originated
from. We then created a third category of question,
whose answer is “no effect”, by selecting out-of-
para changes from other paragraphs and asking for
their effect on nodes in the current graph. Occa-
sionally these changes did affect the selected node,
resulting in an erroneous label of "no effect", but
this was rare (and such cases were removed from
the test partition, as we now describe).

Using a separate crowdsourcing task, questions
in the test set were filtered to improve the test
set quality. First, five workers independently an-
swered each question, given the paragraph. The
inter-annotator agreement between workers, us-
ing Krippendorff’s alpha, was moderately high
(0.6). We then retained only questions with ma-
jority agreement (i.e., at least 3 out of 5 workers
agreed), resulting in 88% of questions being re-
tained.

Balancing the Dataset From the (many) ques-
tions thus generated, we (randomly) selected a sub-
set that approximately balanced the numbers of (a)
in-para, out-of-para, and no-effect questions, and
(b) questions with each answer (correct, opposite,
no-effect), resulting in 40,695 questions. Train, dev,
and test partitions do not share paragraphs about
the same topic. Statistics are shown in Table 1.

Explanations As each question is derived from a
path in an IG, we can also generate explanations for
each answer using that path. Although explanation
is not part of the WIQA task, we create an expla-
nation database to support a possible explanation
task at a future date.

Consider a question “Does perturbation qp result
in qe?” with answer de ∈ {+,−} (as a shorthand
for {correct, opposite}), created from an IG path:

qp
rpX−−→ X rXY−−→ Y rYe−−→ qe

Here, rpX , rXY , and rYe denote the polarities
(+/-) of the edges qpX, XY, and Xqe in the IG
respectively. (As described earlier, answer de is the
product of the polarities rpX .rXY .rYe). To define an
explanation in terms of the paragraph’s sentences
x1, ..., xK , we define the gold explanation Egold as
the structure:

qp → dixi → d jx j → deqe
where xi is the sentence corresponding to X, x j
is the sentence corresponding to Y, and di, d j,
and de denote the directions of influence (+/-,
denoting {more,correct}/{less,opposite}). As
workers already annotated the alignment between
X and xi (similarly Y and x j) we know xi and x j.
Similarly, as workers also annotated whether X
describes an increase of decrease of xi, denoted by
dX ∈ {+,−}, we can straightforwardly compute the
directions of influence:

di = rpX .dX
d j = di (in-paragraph influence2)
de = rpX .rXY .rYe = the answer

We can similarly generate explanations for answers
derived from 1-hop and 2-hop paths.

We generated a full database of explanations for
all the questions with answer “correct” or “oppo-
site” (For “no effect” answers, there is no expla-
nation as there is by definition no path of influ-
ence). We then removed the (occasional) explana-
tion where worker annotations were contradictory
(e.g., j < i) or had no majority decision for an anno-
tation. This database is available for a possible fu-
ture explanation task (given question + paragraph,
produce the answer + explanation).

4 Experiments

4.1 Models

We measured the performance of two baselines and
three strong neural models on WIQA, to understand
how it stresses these models:
Majority predicts the most frequent label, correct,

in the training dataset.
Polarity is a rule-based baseline that assumes in-

fluences of the form “more X→ more Y" (sim-
ilarly for “less”) are correct, hence “more X→
less Y” are opposite. A small lexicon of posi-
tive (“more”) and negative (“less”) words is
used to assign the more/less polarities. A ran-
dom class label is chosen when assignments

2Paragraph sentences always describe correct, not opposite,
influences on later sentences, HENCE if xi is more/accelerated,
x j will be too (similarly for less/decelerated).



6079

Count of Train Dev Test Total

Topics 87 23 12 122
Paragraphs 261 77 41 379
Influence graphs 1453 424 230 2107
Questions 29808 6894 3993 40695

# Questions
Train Dev Test Total

Question in-para 7303 1655 935 9893
type out-of-para 12567 2941 1598 17108

no-effect 9936 2298 1460 13694
Total 29808 6894 3993 40695

Number #hops=1 6754 1510 835 9099
of hops #hops=2 8969 2145 1153 12267
(in- & out- #hops=3 4149 941 545 5635
of-para qns) Total 19872 4596 2533 27001

Table 1: Dataset statistics

cannot be made.
Adaboost (Freund and Schapire, 1995) was used

to make the 3-way classification using several
bag-of-word features computed from change
and effect.

Decomp-Attn applies the Decomposable Atten-
tion (DA) model of (Parikh et al., 2016)
to our task. The original DA model com-
putes entailment, i.e., the confidence that a
premise entails (or contradicts) a hypothesis.
We recast WIQA as an entailment task where
cause-effect becomes premise-hypothesis, and
(correct/opposite/no-effect) correspond to (en-
tailment/contradiction/neutral). We retrain the
DA model on WIQA using this mapping.

BERT (Devlin et al., 2018) is a pre-trained
transformer-based language model that has
achieved state of the art performance on many
NLP tasks. We supply questions to BERT
as [CLS] paragraph [SEP] question [SEP]
answer-option for each of the three options.
The [CLS] token is then projected to a single
logit and fed through a softmax layer across
the three options, using cross entropy loss,
and the highest-scoring option selected. We
fine-tune BERT on the WIQA training data
in this way. We also measure an ablated ver-
sion where the paragraph is omitted (train and
test).

Human Performance was estimated by having
three people independently answering the
same 100 questions (with paragraphs) drawn
randomly from the test set. Krippendorff’s al-
pha (nominal metric) for these answers was

Question Type in-para out-of-para no-effect Total

# questions 935 1598 1460 3993

Majority 45.46 49.47 0.55 30.66
Polarity 76.31 53.59 0.27 39.43
Adaboost 49.41 36.61 48.42 43.93
Decomp-Attn 56.31 48.56 73.42 59.48
BERT (no para) 60.32 43.74 84.18 62.41
BERT 79.68 56.13 89.38 73.80
Human perf. 96.33

Table 2: Comparing models on WIQA test partition

Figure 3: Accuracy of the best baselines drops as num-
ber of hops increase, quicker for ‘no para’ version.

0.908 (high agreement) (Krippendorff, 1970).

5 Results and Analysis
5.1 Prediction Accuracy

The results (Table 2) provide several insights:
1. The dataset is hard. Our strongest model (73.8)
is over 20 points behind human performance, sug-
gesting WIQA poses significant challenges. Predic-
tion of out-of-para effects is particularly challeng-
ing, 37 points behind human performance.
2. BERT already “knows” some change-effect
knowledge. Even without the paragraph, and even
though the test paragraphs are on topics unseen
in training, BERT scores substantially above the
baselines. This suggests BERT has some type of
cause-effect information embedded in it.
3. Supplying the paragraph helps, resulting in
10 points higher score, illustrating that WIQA con-
tains questions that require understanding of the
paragraph. This suggests more sophisticated read-
ing strategies may further improve results.

5.2 Predicting Indirect Effects

In-para and out-of-para questions were derived
from chains of different lengths (“hops”) in the
influence graphs. Figure 3 shows how performance
varies with respect to those lengths, and shows that



6080

“indirect” (2/3-hop) effects are harder to pre-
dict than “direct” (1-hop) effects. For example,
it is easier to predict “cloudy day” results in “less
sunshine” (direct) than “less photosynthesis” (in-
direct). This suggests that some form of reasoning
along influence chains may be needed to predict in-
direct effects reliably, as those effects are less likely
to be explicitly stated in corpora and embedded in
pre-trained language models.

5.3 Consistency

Are the models making consistent predictions? If
a model predicts both X→Y and Y→Z are correct,
it should, if it were consistent, also predict X →Z
is correct. To measure a model’s transitivity consis-
tency, for each influence graph, we measure how of-
ten its indirect predictions (2/3-hop) are consistent3

with its 1-hop predictions. Similarly, we measure
disjunctive consistency by how often its predic-
tions for edges known to be opposite (eg X→Y and
X→opp-effect-in-para in Fig 2) are indeed so4. The
results in Figure 4 illustrate that the models are far
from consistent. This suggests that reasoning with
global consistency constraints may improve results,
e.g., (Ning et al., 2017; Tandon et al., 2018).

5.4 Linguistic and Semantic Phenomena

We analyzed 200 descriptions of changes in 100
random questions, and observe the following chal-
lenging (overlapping) phenomena to handle:
1. Qualitative Language: ≈65% of the change
statements are expressed qualitatively, using a
broad vocabulary of comparatives (e.g., more,
fewer, smaller, larger, cooler, slower, higher, harder,
decreased, hotter) or their corresponding adjectives
(small, cool, etc.). In addition, whether the change
is a positive or negative influence on the process
is context-dependent (“more X” can be positive or
negative, depending on X, and sometimes depend-
ing on the paragraph topic itself).
2. Commonsense (≈45%): Exogenous influences
are (by definition) not stated in the paragraph, and
so require substantial commonsense to understand,
e.g., that “heavy rainfall” (out of para) negatively
influences “more wild fires” (in para); or that “over-
fishing” (out of para) negatively influences “fish
lay eggs” (in para).

3i.e., the polarity (+/-, for correct/opposite) of edge XZ =
the product of the polarities of edges chaining from X to Z.
As models can also predict “no effect”, random score is 1/3.

4Only edge pairs with labels +&-, or -&+, are disjunctively
consistent (of 9 possible labelings), hence random is 2/9.

Figure 4: The best models (red,yellow) make substan-
tially less consistent predictions than humans (green).

3. Lexical matching ≈15% of the in-para changes
refer to paragraph entities using different terms,
e.g., “insect” (para)↔ “bee” (question), “becomes”
↔ “forms”, “removes”↔ “expels”, complicating
aligning questions with the paragraph.
4. Negation (≈6%): Negation occurs in about 6%
of the changes, e.g., “drought does not occur”, “soil
is not fertile”, “magma does not get larger”.
5. Juxtaposed polarities (≈3%): Sometimes
positive- and negative-related terms are juxtaposed,
(e.g., “much less”, “increased deforestation”, “less
severe”) again challenging to process.
These all illustrate the diversity of linguistic and
semantic challenges in WIQA.

6 Conclusion

An important test of understanding procedural text
is whether the effects of perturbations to the pro-
cess can be predicted. To that end, we have in-
troduced WIQA, the first large-scale dataset for
“what if” reasoning over text. While our experi-
ments suggest language models have some built-
in knowledge of influences, and some ability to
identify influences in paragraphs, these capabil-
ities are limited, producing predictions that are
over 20 points worse than humans, often incon-
sistent, and particularly erroneous about indirect
(multi-hop) effects. WIQA aims to improve this
state of affairs, offering a new challenge and re-
source to the community. The dataset is available
at http://data.allenai.org/wiqa/.

Acknowledgements

We are grateful to the AllenNLP and Beaker teams
at AI2, and for the insightful discussions with other
Aristo team members. Computations on beaker.org
were supported in part by credits from Google
Cloud.



6081

References
Antoine Bosselut, Omer Levy, Ari Holtzman, Corin En-

nis, Dieter Fox, and Yejin Choi. 2018. Simulating
action dynamics with neural process networks. 6th
International Conference on Learning Representa-
tions (ICLR).

Bhavana Dalvi, Lifu Huang, Niket Tandon, Wen-tau
Yih, and Peter Clark. 2018. Tracking state changes
in procedural text: A challenge dataset and models
for process paragraph comprehension. In NAACL-
HLT’18.

Jacob Devlin, Ming-Wei Chang, Kenton Lee, and
Kristina Toutanova. 2018. Bert: Pre-training of deep
bidirectional transformers for language understand-
ing. CoRR, abs/1810.04805.

Kenneth D. Forbus. 1984. Qualitative process theory.
Artificial Intelligence, 24:85–168.

Yoav Freund and Robert E. Schapire. 1995. A decision-
theoretic generalization of on-line learning and an
application to boosting. In EuroCOLT.

Mikael Henaff, Jason Weston, Arthur Szlam, Antoine
Bordes, and Yann LeCun. 2017. Tracking the world
state with recurrent entity networks. In ICLR.

Chloé Kiddon, Luke S. Zettlemoyer, and Yejin Choi.
2016. Globally coherent text generation with neural
checklist models. In EMNLP.

Klaus Krippendorff. 1970. Estimating the reliabil-
ity, systematic error and random error of interval
data. Educational and Psychological Measurement,
30(1):61–70.

David Lewis. 2013. Counterfactuals. John Wiley &
Sons.

Qiang Ning, Zhili Feng, and Dan Roth. 2017. A struc-
tured learning approach to temporal relation extrac-
tion. In EMNLP, pages 1027–1037.

Ankur Parikh, Oscar Täckström, Dipanjan Das, and
Jakob Uszkoreit. 2016. A decomposable attention
model for natural language inference. In Proceed-
ings of the 2016 Conference on Empirical Methods
in Natural Language Processing, pages 2249–2255,
Austin, Texas. Association for Computational Lin-
guistics.

Niket Tandon, Bhavana Dalvi Mishra, Joel Grus, Wen-
tau Yih, Antoine Bosselut, and Peter Clark. 2018.
Reasoning about actions and state changes by inject-
ing commonsense knowledge. EMNLP’18, arXiv
preprint arXiv:1808.10012.

Daniel S Weld and Johan De Kleer. 2013. Readings in
qualitative reasoning about physical systems. Mor-
gan Kaufmann.

Jason Weston, Antoine Bordes, Sumit Chopra, Alexan-
der M Rush, Bart van Merriënboer, Armand Joulin,
and Tomas Mikolov. 2015. Towards AI-complete
question answering: A set of prerequisite toy tasks.
arXiv preprint arXiv:1502.05698.

Appendix A: Topicwise consistency

We study trends in topic-wise accuracy of models
as they read more context information. Bert
no-para model does not have access to any
context or paragraph, except the language model’s
background knowledge from Wikipedia. By
reading the paragraph context Bert with-para
model performs much better on certain topics
such as Pollination, blood, mountain,
evaporation but the impact of reading is much
less on topics such as Igneous rocks, plant
crops, solar eclipse, DNA replication.
Topics such as blood are very popular on
Wikipedia and distributed across several very
different articles. These topics are harder for BERT
as it requires additional paragraph context to
understand the question.

topic BERT (no para) BERT
igneous rock 0.66 0.64
plant crops 0.61 0.61
solar eclipse 0.43 0.43
frog 0.59 0.62
DNA replication 0.58 0.63
water cycle 0.63 0.69
fish 0.5 0.57
pumpkin 0.61 0.69
pollination 0.62 0.75
blood 0.62 0.76
mountain 0.57 0.72
evaporation 0.42 0.67

Table 3: As the Bert model (that has access to the
paragraph in context) reads more paragraphs in con-
text, its accuracy is better. Reading helps certain
topics such as Pollination, blood, mountain,
evaporation more than others

Appendix B: Crowdsourcing Influence
Graphs

We crowdsource influence graphs by getting the
graphs constructed progressively, with the help of
five questions stated in Figure 7. At first, the turkers
see an empty graph in Figure 5.

When the annotators answer the first question
(shown in Fig. 7), two nodes of the partial influence
graph are filled (depicted in Fig. 6).

Once all the questions are answered, the influ-
ence graph will be ready. During the process of
annotation, there are appropriate validations for
quality control.



6082

Figure 5: At the start of the process to annotate an in-
fluence graph for a given paragraph, the annotators see
a blank influence graph with the basic structure.

Figure 6: As the annotators answer questions in Fig. 7,
a partial influence graph emerges. As they answer ques-
tions, the annotators found it useful to validate their an-
swers by examining the emerged influence graph.

Appendix C: Sample Influence Graphs

To get an impression of our crowdsourced influence
graph repository, we display four paragraphs (not
hand picked) in Figures 8, 9, 10, 11. These range
from natural process, to human body process and
mechanical process.



6083

Figure 7: The interface shown to the annotators on Mechanical turk platform. Given a paragraph in yellow back-
ground, the annotators answer the five questions and an influence graph emerges from their answers.

Figure 8: Influence graph for a paragraph from the topic evaporation



6084

Figure 9: Influence graph for a paragraph from the topic flashlight

Figure 10: Influence graph for a paragraph from the topic lungs



6085

Figure 11: Influence graph for a paragraph from the topic minerals


