




































Bridging Knowledge Gaps in Neural Entailment via Symbolic Models


Proceedings of the 2018 Conference on Empirical Methods in Natural Language Processing, pages 4940–4945
Brussels, Belgium, October 31 - November 4, 2018. c©2018 Association for Computational Linguistics

4940

Bridging Knowledge Gaps in Neural Entailment via Symbolic Models

Dongyeop Kang1 Tushar Khot2 Ashish Sabharwal2 Peter Clark2
1School of Computer Science, Carnegie Mellon University, Pittsburgh, PA, USA

2Allen Institute for Artificial Intelligence, Seattle, WA, USA
{dongyeok}@cs.cmu.edu {tushark,ashishs,peterc}@allenai.org

Abstract
Most textual entailment models focus on lexi-
cal gaps between the premise text and the hy-
pothesis, but rarely on knowledge gaps. We fo-
cus on filling these knowledge gaps in the Sci-
ence Entailment task, by leveraging an exter-
nal structured knowledge base (KB) of science
facts. Our new architecture combines standard
neural entailment models with a knowledge
lookup module. To facilitate this lookup, we
propose a fact-level decomposition of the hy-
pothesis, and verifying the resulting sub-facts
against both the textual premise and the struc-
tured KB. Our model, NSnet, learns to ag-
gregate predictions from these heterogeneous
data formats. On the SciTail dataset, NSnet
outperforms a simpler combination of the two
predictions by 3% and the base entailment
model by 5%.

1 Introduction

Textual entailment, a key challenge in natural lan-
guage understanding, is a sub-problem in many
end tasks such as question answering and infor-
mation extraction. In one of the earliest works
on entailment, the PASCAL Recognizing Textual
Entailment Challenge, Dagan et al. (2005) define
entailment as follows: text (or premise) P en-
tails a hypothesis H if typically a human reading
P would infer that H is most likely true. They
note that this informal definition is “based on (and
assumes) common human understanding of lan-
guage as well as common background knowledge”.

While current entailment systems have achieved
impressive performance by focusing on the lan-
guage understanding aspect, these systems, es-
pecially recent neural models (e.g. Parikh et al.,
2016; Khot et al., 2018), do not directly address
the need for filling knowledge gaps by leveraging
common background knowledge.

Figure 1 illustrates an example of P and H from
SciTail, a recent science entailment dataset (Khot

P: The aorta is a large blood vessel that moves
blood away from the heart to the rest of the body.

H (entailed): Aorta is the major artery carrying re-
cently oxygenated blood away from the heart.

H’ (not entailed): Aorta is the major vein carrying
recently oxygenated blood away from the heart.

Figure 1: Knowledge gap: Aorta is a major artery
(not a vein). Large blood vessel soft-aligns with
major artery but also with major vein.

et al., 2018), that highlights the challenge of
knowledge gaps—sub-facts of H that aren’t stated
in P but are universally true. In this exam-
ple, an entailment system that is strong at filling
lexical gaps may align large blood vessel with
major artery to help conclude that P entails H.
Such a system, however, would equally well—but
incorrectly—conclude that P entails a hypothetical
variant H’ of H where artery is replaced with vein.
A typical human, on the other hand, could bring to
bear a piece of background knowledge, that aorta
is a major artery (not a vein), to break the tie.

Motivated by this observation, we propose a
new entailment model that combines the strengths
of the latest neural entailment models with a
structured knowledge base (KB) lookup module
to bridge such knowledge gaps. To enable KB
lookup, we use a fact-level decomposition of
the hypothesis, and verify each resulting sub-fact
against both the premise (using a standard entail-
ment model) and against the KB (using a struc-
tured scorer). The predictions from these two
modules are combined using a multi-layer “ag-
gregator” network. Our system, called NSnet,
achieves 77.9% accuracy on SciTail, substantially
improving over the baseline neural entailment
model, and comparable to the structured entail-
ment model proposed by Khot et al. (2018).



4941

Compositional Layer

Hybrid Layer (per Hs)

KB 

sub-facts of 
hypothesis 

In
p
u
ts

M
o
d
u
le

s
A

g
g
re

g
a
to

r 

...

Hypothesis (Q+A)
Premise (text)

Retrieved 
KB tuples 

...

Aggregator

p
p

kb

hi
hi

hi

ph

Neural
Entailment

Symbolic
Matcher

Symbolic
LookUp

by aggregator
by neur. entailment
by symb. matcher
by symb. lookup

outputs

kb

hi

intermediate representations

Hypothesis 
Decomposer

KB 
Retrieval

Figure 2: Neural-symbolic learning in NSnet. The bottom layer has QA and their supporting text in
SciTail, and the knowledge base (KB). The middle layer has three modules: Neural Entailment (blue)
and Symbolic Matcher and Symbolic Lookup (red). The top layer takes the outputs (black and yellow)
and intermediate representation from the middle modules, and hierarchically trains with the final labels.
All modules and aggregator are jointly trained in an end-to-end fashion.

2 Neural-Symbolic Learning

A general solution for combining neural and sym-
bolic modules remains a challenging open prob-
lem. As a step towards this, we present a system
in the context of neural entailment that demon-
strates a successful integration of the KB lookup
model and simple overlap measures, opening up a
path to achieve a similar integration in other mod-
els and tasks. The overall system architecture of
our neural-symbolic model for textual entailment
is presented in Figure 2. We describe each layer
of this architecture in more detail in the following
sub-sections.

2.1 Inputs

We decompose the hypothesis and identify rele-
vant KB facts in the bottom “inputs” layer (Fig. 2).

Hypothesis Decomposition: To identify knowl-
edge gaps, we must first identify the facts stated in
the hypothesis h = (h1, h2..). We use ClausIE (Del
et al., 2013) to break h into sub-facts. ClausIE
tuples need not be verb-mediated and generate
multiple tuples derived from conjunctions, lead-
ing to higher recall than alternatives such as Open

IE (Banko et al., 2007). 1

Knowledge Base (KB): To verify these facts,
we use the largest available clean knowledge
base for the science domain (Dalvi et al., 2017),
with 294K simple facts, as input to our system.
The knowledge base contains subject-verb-object
(SVO) tuples with short, one or two word argu-
ments (e.g., hydrogen; is; element). Using these
simple facts ensures that the KB is only used to fill
the basic knowledge gaps and not directly prove
the hypothesis irrespective of the premise.

KB Retrieval: The large number of tuples in
the knowledge base makes it infeasible to evalu-
ate each hypothesis sub-fact against the entire KB.
Hence, we retrieve the top-100 relevant knowledge
tuples, K′, for each sub-fact based on a simple Jac-
card word overlap score.

1While prior work on question answering in the science
domain has successfully used Open IE to extract facts from
sentences (Khot et al., 2017), one of the key reasons for errors
was the lossy nature of Open IE.



4942

2.2 Modules
We use a Neural Entailment model to compute
the entailment score based on the premise, as well
as two symbolic models, Symbolic Matcher and
Symbolic Lookup, to compute entailment scores
based on the premise and the KB respectively
(middle layer in Fig. 2).

Neural Entailment We use a simple neural en-
tailment model, Decomposable Attention (Parikh
et al., 2016), one of the state-of-the-art models
on the SNLI entailment dataset (Bowman et al.,
2015). However, our architecture can just as easily
use any other neural entailment model. We initial-
ize the model parameters by training it on the Sci-
ence Entailment dataset. Given the sub-facts from
the hypothesis, we use this model to compute an
entailment score n(hi, p) from the premise to each
sub-fact hi.

Symbolic Matcher In our initial experiments,
we noticed that the neural entailment models
would often either get distracted by similar words
in the distributional space (false positives) or com-
pletely miss an exact mention of hi in a long
premise (false negatives). To mitigate these errors,
we define a Symbolic Matcher model that com-
pares exact words in hi and p, via a simple asym-
metric bag-of-words overlap score:

m(hi, p) =
|hi ∩ p|
|p|

One could instead use more complex symbolic
alignment methods such as integer linear program-
ming (Khashabi et al., 2016; Khot et al., 2017).

Symbolic Lookup This module verifies the
presence of the hypothesis sub-fact hi in the re-
trieved KB tuples K′, by comparing the sub-fact
to each tuple and taking the maximum score. Each
field in the KB tuple kb j is scored against the cor-
responding field in hi (e.g., subject to subject) and
averaged across the fields. To compare a field, we
use a simple word-overlap based Jaccard similar-
ity score, Sim(a, b) = |a∩b||a∪b| . The lookup match
score for the entire sub-fact and kb-fact is:

Sim f (hi, kb j) =

∑
k

Sim(hi[k], kb j[k])

 /3
and the final lookup module score for hi is:

l(hi) = max
kb j∈K′

Sim f (hi, kb j)

Note that the Symbolic Lookup module assesses
whether a sub-fact of H is universally true. Neural
models, via embeddings, are quite strong at medi-
ating between P and H. The goal of the KB lookup
module is to complement this strength, by verify-
ing universally true sub-facts of H that may not be
stated in P (e.g. “aorta is a major artery” in our
motivating example).

2.3 Aggregator Network
For each sub-fact hi, we now have three scores:
n(hi, p) from the neural model, m(hi, p) from the
symbolic matcher, and l(hi) from the symbolic
lookup model. The task of the Aggregator net-
work is to combine these to produce a single en-
tailment score. However, we found that using
only the final predictions from the three modules
was not effective. Inspired by recent work on
skip/highway connections (He et al., 2016; Sri-
vastava et al., 2015), we supplement these scores
with intermediate, higher-dimensional representa-
tions from two of the modules.

From the Symbolic Lookup model, we use the
representation of each sub-fact henci = Enc(hi)
obtained by averaging word embeddings (Pen-
nington et al., 2014) and individual similarity
scores over the top-100 KB tuples embi =
[. . . , Sim f (hi, kb j), . . .]. From the neural entail-
ment model, we use the intermediate representa-
tion of both the sub-fact of hypothesis and premise
text from the final layer (before the softmax com-
putation), nv(hi, p) = [v1; v2].

We define a hybrid layer that takes as input a
simple concatenation of these representation vec-
tors from the different modules:

in(hi, p) =[henci ; l(hi); m(hi, p); n(hi, p);

embi; nv(hi, p)]

The hybrid layer is a single layer MLP for each
sub-fact hi that outputs a sub-representation outi =
MLP(in(hi, p)). A compositional layer then uses a
two-layer MLP over a concatenation of the hybrid
layer outputs from different sub-facts, {h1, . . . , hI},
to produce the final label,

label = MLP([out1; out2; · · · outI])

Finally, we use the cross-entropy loss to train the
Aggregator network jointly with representations in
the neural entailment and symbolic lookup mod-
els, in an end-to-end fashion. We refer to this en-
tire architecture as the NSnet network.



4943

Table 1: Entailment accuracies on the SciTail
dataset. NSnet substantially improves upon its
base model and marginally outperforms DGEM.

Entailment Model Valid. Test

Majority classifier 63.3 60.3
DecompAttn (Base model) 73.1 74.3
DecompAttn + HypDecomp 71.8 72.7
DGEM 79.6 77.3
Ensemble (this work) 75.2 74.8
NSnet (this work) 77.4 77.9

To assess the effectiveness of the aggregator net-
work, we also use a simpler baseline model, En-
semble, that works as follows. For each sub-fact hi,
it combines the predictions from each model using
a probabilistic-OR function, assuming the model
score Pm as a probability of entailment. This
function computes the probability of at least one
model predicting that hi is entailed, i.e. P(hi) =
1 − Πm(1 − Pm) where m ∈ n(hi, p),m(hi, p), l(hi).
We average the probabilities from all the facts to
get the final entailment probability.2

3 Experiments

We use the SciTail dataset3 (Khot et al., 2018) for
our experiments, which contains 27K entailment
examples with a 87.3%/4.8%/7.8% train/dev/test
split. The premise and hypothesis in each example
are natural sentences authored independently as
well as independent of the entailment task, which
makes the dataset particularly challenging. We fo-
cused mainly on the SciTail dataset, since other
crowd-sourced datasets, large enough for training,
contained limited linguistic variation (Gururangan
et al., 2018) leading to limited gains achievable via
external knowledge.

For background knowledge, we use version
v4 of the aforementioned Aristo TupleKB4 (Dalvi
et al., 2017), containing 283K basic science facts.
We compare our proposed models to Decomposed
Graph Entailment Model (DGEM) (Khot et al.,
2018) and Decomposable Attention Model (De-
compAttn) (Parikh et al., 2016).

2While more intuitive, performing an AND aggregation
resulted in worse performance (cf. Appendix ?? for details).

3http://data.allenai.org/scitail
4http://data.allenai.org/tuple-kb

3.1 Results

Table 1 summarizes the validation and test accu-
racies of various models on the SciTail dataset.
The DecompAttn model achieves 74.3% on the
test set but drops by 1.6% when the hypotheses
are decomposed. The Ensemble approach uses the
same hypothesis decomposition and is able to re-
cover 2.1% points by using the KB. The end-to-
end NSnet network is able to further improve the
score by 3.1% and is statistically significantly (at
p-value 0.05) better than the baseline neural entail-
ment model. The model is marginally better than
DGEM, a graph-based entailment model proposed
by the authors of the SciTail dataset We show sig-
nificant gains over our base entailment model by
using an external knowledge base, which are com-
parable to the gains achieved by DGEM through
the use of hypothesis structure. These are orthog-
onal approaches and one could replace the base
DecompAttn model with DGEM or more recent
models (Tay et al., 2017; Yin et al., 2018).

Table 2: Ablation: Both Symbolic Lookup
and Symbolic Matcher have significant impact on
NSnet performance.

Valid. Test

NSnet 77.39 77.94
- Symbolic Matcher 76.46 74.73 (-3.21%)
- Symbolic Lookup 75.95 75.80 (-2.14%)
- Both 75.10 73.98 (-3.96%)

In Table 2, we evaluate the impact of the Sym-
bolic Matcher and Symbolic Lookup module on
the best reported model. As we see, removing the
symbolic matcher, despite its simplicity, results in
a 3.2% drop. Also, the KB lookup model is able
to fill some knowledge gaps, contributing 2.1% to
the final score. Together, these symbolic matching
models contribute 4% to the overall score.

3.2 Qualitative Analysis

Figure 3 shows few randomly selected examples
in test set. The first two examples show cases
when the symbolic models help to change the neu-
ral alignment’s prediction (F) to correct prediction
(T) by our proposed Ensemble or NSnet models.
The third question shows a case where the NSnet
architecture learns a better combination of the neu-
ral and symbolic methods to correctly identify the
entailment relation while Ensemble fails to do so.

http://data.allenai.org/scitail
http://data.allenai.org/tuple-kb


4944

Table 3: Few randomly selected examples in the test set between symbolic only, neural only, Ensemble
and NSnet inference. The symbolic only model shows its the most similar knowledge from knowledge
base inside parenthesis. The first two example shows when knowledge helps fill the gap where neural
model can’t. The third example shows when NSnet predicts correctly while Ensemble fails.

Premise: plant cells possess a cell wall , animals never .

Hypothesis: a cell wall is found in a plant cell but not in an animal cell .

Sub-fact of hypothesis neural only symbolic only Ensemble NSnet

a cell wall is found in a plant cell but not in an
animal cell

F(0.47) T(0.07) (cell is located in animal) T(0.50) -

Prediction (true label: T (entail)) F T T T

Premise: the pupil is a hole in the iris that allows light into the eye .

Hypothesis: the pupil of the eye allows light to enter .

Sub-fact of hypothesis neural only symbolic only Ensemble NSnet

the pupil of the eye allows light to enter F(0.43) T(0.12), (light enter eye) T(0.50) -

Prediction (true label: T (entail)) F T T T

Premise: binary fission in various single-celled organisms ( left ) .

Hypothesis: binary fission is a form of cell division in prokaryotic organisms that produces identical offspring .

Sub-facts of hypothesis neural only symbolic only Ensemble NSnet

binary fission is a form of cell division in
prokaryotic organisms

F(0.49) T(0.07) (binary fission involve division) T(0.52) -

binary fission is a form F(0.63) T(0.1) (phase undergo binary fission) T(0.66) -

a form of cell division in prokaryotic or-
ganisms produces identical offspring

F(0.46) T(0.05) (cell division occur in tissue) T(0.48) -

Prediction (true label: T (entail)) F T F T

4 Related Work

Compared to neural only (Bowman et al., 2015;
Parikh et al., 2016) or symbolic only (Khot et al.,
2017; Khashabi et al., 2016) systems, our model
takes advantage of both systems, often called
neural-symbolic learning (Garcez et al., 2015).
Various neural-symbolic models have been pro-
posed for question answering (Liang et al., 2016)
and causal explanations (Kang et al., 2017).
We focus on end-to-end training of these models
specifically for textual entailment.

Contemporaneous to this work, Chen et al.
(2018) have incorporated knowledge-bases within
the attention and composition functions of a neural
entailment model, while Kang et al. (2018) gen-
erate adversarial examples using symbolic knowl-
edge (e.g., WordNet) to train a robust entailment
model. We focused on integrating knowledge-
bases via a separate symbolic model to fill the
knowledge gaps.

5 Conclusion

We proposed a new entailment model that attempts
to bridge knowledge gaps in textual entailment by
incorporating structured knowledge base lookup
into standard neural entailment models. Our ar-
chitecture, NSnet, can be trained end-to-end, and
achieves a 5% improvement on SciTail over the
baseline neural model used here. The methodol-
ogy can be easily applied to more complex entail-
ment models (e.g., DGEM) as the base neural en-
tailment model. Accurately identifying the sub-
facts from a hypothesis is a challenging task in it-
self, especially when dealing with negation. Im-
provements to the fact decomposition should fur-
ther help improve the model.

Acknowledgments

We thank the anonymous reviewers as well as
Luke Zettlemoyer, Matt Gardner, Oyvind Tafjord,
Julia Hockenmaier and Eduard Hovy for their
comments and suggestions.



4945

References
Michele Banko, Michael J Cafarella, Stephen Soder-

land, Matthew Broadhead, and Oren Etzioni. 2007.
Open information extraction from the web. In IJ-
CAI, volume 7, pages 2670–2676.

Samuel R Bowman, Gabor Angeli, Christopher Potts,
and Christopher D Manning. 2015. A large anno-
tated corpus for learning natural language inference.
In EMNLP.

Qian Chen, Xiaodan Zhu, Zhen-Hua Ling, and Diana
Inkpen. 2018. Natural language inference with ex-
ternal knowledge. In ACL.

Ido Dagan, Oren Glickman, and Bernardo Magnini.
2005. The PASCAL recognising textual entailment
challenge. In MLCW.

Bhavana Dalvi, Niket Tandon, and Peter Clark. 2017.
Domain-targeted, high precision knowledge extrac-
tion. TACL.

Corro Luciano Del, Rainer Gemulla, and Rainer
Gemulla. 2013. ClausIE: clause-based open infor-
mation extraction. In Proceedings of the 22nd in-
ternational conference on World Wide Web, pages
355–366. ACM.

A dAvila Garcez, Tarek R Besold, Luc De Raedt,
Peter Földiak, Pascal Hitzler, Thomas Icard, Kai-
Uwe Kühnberger, Luis C Lamb, Risto Miikkulainen,
and Daniel L Silver. 2015. Neural-symbolic learn-
ing and reasoning: contributions and challenges.
In Proceedings of the AAAI Spring Symposium on
Knowledge Representation and Reasoning: Inte-
grating Symbolic and Neural Approaches, Stanford.

Suchin Gururangan, Swabha Swayamdipta, Omer
Levy, Roy Schwartz, Samuel Bowman, and Noah A.
Smith. 2018. Annotation artifacts in natural lan-
guage inference data. In NAACL (Short Papers).

Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian
Sun. 2016. Deep residual learning for image recog-
nition. In CVPR, pages 770–778.

Dongyeop Kang, Varun Gangal, Ang Lu, Zheng Chen,
and Eduard Hovy. 2017. Detecting and explaining
causes from text for a time series event. In EMNLP.

Dongyeop Kang, Tushar Khot, Ashish Sabharwal, and
Eduard Hovy. 2018. Adventure: Adversarial train-
ing for textual entailment with knowledge-guided
examples. In ACL, Melbourne, Australia.

Daniel Khashabi, Tushar Khot, Ashish Sabharwal, Pe-
ter Clark, Oren Etzioni, and Dan Roth. 2016. Ques-
tion answering via integer programming over semi-
structured knowledge. In IJCAI.

Tushar Khot, Ashish Sabharwal, and Peter Clark. 2017.
Answering complex questions using open informa-
tion extraction. In ACL.

Tushar Khot, Ashish Sabharwal, and Peter Clark. 2018.
SciTail: A textual entailment dataset from science
question answering. AAAI.

Chen Liang, Jonathan Berant, Quoc Le, Kenneth D
Forbus, and Ni Lao. 2016. Neural symbolic ma-
chines: Learning semantic parsers on freebase with
weak supervision. In ACL.

Ankur P Parikh, Oscar Täckström, Dipanjan Das, and
Jakob Uszkoreit. 2016. A decomposable attention
model for natural language inference. In EMNLP.

Jeffrey Pennington, Richard Socher, and Christopher
Manning. 2014. GloVe: Global vectors for word
representation. In EMNLP, pages 1532–1543.

Rupesh Kumar Srivastava, Klaus Greff, and Jürgen
Schmidhuber. 2015. Highway networks. arXiv
preprint arXiv:1505.00387.

Yi Tay, Luu Anh Tuan, and Siu Cheung Hui. 2017.
A compare-propagate architecture with alignment
factorization for natural language inference. arXiv
preprint arXiv:1801.00102.

Wenpeng Yin, Dan Roth, and Hinrich Schütze. 2018.
End-task oriented textual entailment via deep ex-
ploring inter-sentence interactions. In ACL.


