




































Improving Entity Linking by Modeling Latent Relations between Mentions


Proceedings of the 56th Annual Meeting of the Association for Computational Linguistics (Long Papers), pages 1595–1604
Melbourne, Australia, July 15 - 20, 2018. c©2018 Association for Computational Linguistics

1595

Improving Entity Linking by
Modeling Latent Relations between Mentions

Phong Le1 and Ivan Titov1,2
1University of Edinburgh 2University of Amsterdam

{ple,ititov}@inf.ed.ac.uk

Abstract

Entity linking involves aligning textual
mentions of named entities to their corre-
sponding entries in a knowledge base. En-
tity linking systems often exploit relations
between textual mentions in a document
(e.g., coreference) to decide if the linking
decisions are compatible. Unlike previous
approaches, which relied on supervised
systems or heuristics to predict these rela-
tions, we treat relations as latent variables
in our neural entity-linking model. We in-
duce the relations without any supervision
while optimizing the entity-linking sys-
tem in an end-to-end fashion. Our multi-
relational model achieves the best reported
scores on the standard benchmark (AIDA-
CoNLL) and substantially outperforms its
relation-agnostic version. Its training also
converges much faster, suggesting that the
injected structural bias helps to explain
regularities in the training data.

1 Introduction

Named entity linking (NEL) is the task of as-
signing entity mentions in a text to corresponding
entries in a knowledge base (KB). For example,
consider Figure 1 where a mention “World Cup”
refers to a KB entity FIFA WORLD CUP. NEL
is often regarded as crucial for natural language
understanding and commonly used as preprocess-
ing for tasks such as information extraction (Hoff-
mann et al., 2011) and question answering (Yih
et al., 2015).

Potential assignments of mentions to entities are
regulated by semantic and discourse constraints.
For example, the second and third occurrences of
mention “England” in Figure 1 are coreferent and
thus should be assigned to the same entity. Be-

sides coreference, there are many other relations
between entities which constrain or favor certain
alignment configurations. For example, consider
relation participant in in Figure 1: if “World Cup”
is aligned to the entity FIFA WORLD CUP then
we expect the second “England” to refer to a foot-
ball team rather than a basketball one.

NEL methods typically consider only corefer-
ence, relying either on off-the-shelf systems or
some simple heuristics (Lazic et al., 2015), and
exploit them in a pipeline fashion, though some
(e.g., Cheng and Roth (2013); Ren et al. (2017))
additionally exploit a range of syntactic-semantic
relations such as apposition and possessives. An-
other line of work ignores relations altogether and
models the predicted sequence of KB entities as a
bag (Globerson et al., 2016; Yamada et al., 2016;
Ganea and Hofmann, 2017). Though they are able
to capture some degree of coherence (e.g., pref-
erence towards entities from the same general do-
main) and are generally empirically successful, the
underlying assumption is too coarse. For example,
they would favor assigning all the occurrences of
“England” in Figure 1 to the same entity.

We hypothesize that relations useful for NEL
can be induced without (or only with little) domain
expertise. In order to prove this, we encode rela-
tions as latent variables and induce them by opti-
mizing the entity-linking model in an end-to-end
fashion. In this way, relations between mentions
in documents will be induced in such a way as to
be beneficial for NEL. As with other recent ap-
proaches to NEL (Yamada et al., 2017; Ganea and
Hofmann, 2017), we rely on representation learn-
ing and learn embeddings of mentions, contexts
and relations. This further reduces the amount
of human expertise required to construct the sys-
tem and, in principle, may make it more portable
across languages and domains.

Our multi-relational neural model achieves an



1596

World Cup   1966 was held in   England   ….   England   won… The final saw   England   beat   West Germany   .

coreference beat
located_in

FIFA_World_Cup
FIBA_Basketball_

World_Cup
...

West_Germany
Germany_national_

football_team
Germany_national_
basketball_team

...

England
England_national_

football_team
England_national_
basketball_team

...

England
England_national
_football_team

England_national
_basketball_team

...

participant_in

Figure 1: Example for NEL, linking each mention to an entity in a KB (e.g. “World Cup” to
FIFA WORLD CUP rather than FIBA BASKETBALL WORLD CUP). Note that the first and the sec-
ond “England” are in different relations to “World Cup”.

improvement of 0.85% F1 over the best re-
ported scores on the standard AIDA-CoNLL
dataset (Ganea and Hofmann, 2017). Substan-
tial improvements over the relation-agnostic ver-
sion show that the induced relations are indeed
beneficial for NEL. Surprisingly its training also
converges much faster: training of the full model
requires ten times shorter wall-clock time than
what is needed for estimating the simpler relation-
agnostic version. This may suggest that the in-
jected structural bias helps to explain regularities
in the training data, making the optimization task
easier. We qualitatively examine induced rela-
tions. Though we do not observe direct counter-
parts of linguistic relations, we, for example, see
that some of the induced relations are closely re-
lated to coreference whereas others encode forms
of semantic relatedness between the mentions.

2 Background and Related work

2.1 Named entity linking problem

Formally, given a document D containing a list of
mentions m1, ...,mn, an entity linker assigns to
each mi an KB entity ei or predicts that there is no
corresponding entry in the KB (i.e., ei = NILL).

Because a KB can be very large, it is stan-
dard to use an heuristic to choose potential can-
didates, eliminating options which are highly un-
likely. This preprocessing step is called candidate
selection. The task of a statistical model is thus re-
duced to choosing the best option among a smaller
list of candidates Ci = (ei1, ..., eili). In what fol-
lows, we will discuss two classes of approaches
tackling this problem: local and global modeling.

2.2 Local and global models
Local models rely only on local contexts of men-
tions and completely ignore interdependencies be-
tween the linking decisions in the document (these
interdependencies are usually referred to as coher-
ence). Let ci be a local context of mention mi and
Ψ(ei, ci) be a local score function. A local model
then tackles the problem by searching for

e∗i = argmax
ei∈Ci

Ψ(ei, ci) (1)

for each i ∈ {1, ..., n} (Bunescu and Paşca, 2006;
Lazic et al., 2015; Yamada et al., 2017).

A global model, besides using local context
within Ψ(ei, ci), takes into account entity co-
herency. It is captured by a coherence score func-
tion Φ(E,D):

E∗ = argmax
E∈C1×...×Cn

n∑
i=1

Ψ(ei, ci) + Φ(E,D)

where E = (e1, ..., en). The coherence score
function, in the simplest form, is a sum over
all pairwise scores Φ(ei, ej , D) (Ratinov et al.,
2011; Huang et al., 2015; Chisholm and Hachey,
2015; Ganea et al., 2016; Guo and Barbosa, 2016;
Globerson et al., 2016; Yamada et al., 2016), re-
sulting in:

E∗ = argmax
E∈C1×...×Cn

n∑
i=1

Ψ(ei, ci)+∑
i ̸=j

Φ(ei, ej , D) (2)

A disadvantage of global models is that exact
decoding (Equation 2) is NP-hard (Wainwright
et al., 2008). Ganea and Hofmann (2017) over-
come this using loopy belief propagation (LBP),



1597

an approximate inference method based on mes-
sage passing (Murphy et al., 1999). Globerson
et al. (2016) propose a star model which approxi-
mates the decoding problem in Equation 2 by ap-
proximately decomposing it into n decoding prob-
lems, one per each ei.

2.3 Related work

Our work focuses on modeling pairwise score
functions Φ and is related to previous approaches
in the two following aspects.

Relations between mentions

A relation widely used by NEL systems is corefer-
ence: two mentions are coreferent if they refer to
the same entity. Though, as we discussed in Sec-
tion 1, other linguistic relations constrain entity as-
signments, only a few approaches (e.g., Cheng and
Roth (2013); Ren et al. (2017)), exploit any rela-
tions other than coreference. We believe that the
reason for this is that predicting and selecting rel-
evant (often semantic) relations is in itself a chal-
lenging problem.

In Cheng and Roth (2013), relations between
mentions are extracted using a labor-intensive ap-
proach, requiring a set of hand-crafted rules and a
KB containing relations between entities. This ap-
proach is difficult to generalize to languages and
domains which do not have such KBs or the set-
tings where no experts are available to design the
rules. We, in contrast, focus on automating the
process using representation learning.

Most of these methods relied on relations pre-
dicted by external tools, usually a coreference sys-
tem. One notable exception is Durrett and Klein
(2014): they use a joint model of entity linking and
coreference resolution. Nevertheless their corefer-
ence component is still supervised, whereas our
relations are latent even at training time.

Representation learning

How can we define local score functions Ψ and
pairwise score functions Φ? Previous approaches
employ a wide spectrum of techniques.

At one extreme, extensive feature engineering
was used to define useful features. For example,
Ratinov et al. (2011) use cosine similarities be-
tween Wikipedia titles and local contexts as a fea-
ture when computing the local scores. For pair-
wise scores they exploit information about links
between Wikipedia pages.

At the other extreme, feature engineering is al-
most completely replaced by representation learn-
ing. These approaches rely on pretrained embed-
dings of words (Mikolov et al., 2013; Penning-
ton et al., 2014) and entities (He et al., 2013; Ya-
mada et al., 2017; Ganea and Hofmann, 2017) and
often do not use virtually any other hand-crafted
features. Ganea and Hofmann (2017) showed
that such an approach can yield SOTA accuracy
on a standard benchmark (AIDA-CoNLL dataset).
Their local and pairwise score functions are

Ψ(ei, ci) = e
T
i Bf(ci)

Φ(ei, ej , D) =
1

n− 1
eTi Rej (3)

where ei, ej ∈ Rd are the embeddings of entity
ei, ej , B,R ∈ Rd×d are diagonal matrices. The
mapping f(ci) applies an attention mechanism to
context words in ci to obtain a feature representa-
tions of context (f(ci) ∈ Rd).

Note that the global component (the pairwise
scores) is agnostic to any relations between enti-
ties or even to their ordering: it models e1, ..., en
simply as a bag of entities. Our work is in line with
Ganea and Hofmann (2017) in the sense that fea-
ture engineering plays no role in computing local
and pair-wise scores. Furthermore, we argue that
pair-wise scores should take into account relations
between mentions which are represented by rela-
tion embeddings.

3 Multi-relational models

3.1 General form

We assume that there are K latent relations. Each
relation k is assigned to a mention pair (mi,mj)
with a non-negative weight (‘confidence’) αijk.
The pairwise score (mi,mj) is computed as a
weighted sum of relation-specific pairwise scores
(see Figure 2, top):

Φ(ei, ej , D) =
K∑
k=1

αijkΦk(ei, ej , D)

Φk(ei, ej , D) can be any pairwise score func-
tion, but here we adopt the one from Equation 3.
Namely, we represent each relation k by a diago-
nal matrix Rk ∈ Rd×d, and

Φk(ei, ej , D) = e
T
i Rkej



1598

The weights αijk are normalized scores:

αijk =
1

Zijk
exp

{
fT (mi, ci)Dkf(mj , cj)√

d

}
(4)

where Zijk is a normalization factor, f(mi, ci) is
a function mapping (mi, ci) onto Rd, and Dk ∈
Rd×d is a diagonal matrix.

ei,mi,ci ej,mj,cj

αij1Φ1(ei,ej,D)

αij2Φ2(ei,ej,D)

αij3Φ3(ei,ej,D)

ei,mi,ci ej,mj,cj

(general form)

(rel-norm)

normalize over relations: αij1 + αij2 + αij3 = 1 

ei,mi,ci ej,mj,cj

(ment-norm)

normalize over mentions: 
αi12 + αi22 + … + αij2 + … + αin2 = 1 

e1,m1,c1

en,mn,cn

...

...

Figure 2: Multi-relational models: general form
(top), rel-norm (middle) and ment-norm (bottom).
Each color corresponds to one relation.

In our experiments, we use a single-layer neural
network as f (see Figure 3) where ci is a concate-
nation of the average embedding of words in the
left context with the average embedding of words
in the right context of the mention.1

As αijk is indexed both by mention index j
and relation index k, we have two choices for
Zijk: normalization over relations and normaliza-
tion over mentions. We consider both versions of
the model.

1We also experimented with LSTMs but we could not pre-
vent them from severely overfitting, and the results were poor.

3.2 Rel-norm: Relation-wise normalization
For rel-norm, coefficients αijk are normalized
over relations k, in other words,

Zijk =

K∑
k′=1

exp

{
fT (mi, ci)Dk′f(mj , cj)√

d

}

so that
∑K

k=1 αijk = 1 (see Figure 2, middle). We
can also re-write the pairwise scores as

Φ(ei, ej , D) = e
T
i Rijej (5)

where Rij =
∑K

k=1 αijkRk.

In foreign policy        Bill Clinton    ordered U.S. military  

tanh, dropout

Figure 3: Function f(mi, ci) is a single-layer neu-
ral network, with tanh activation function and a
layer of dropout on top.

Intuitively, αijk is the probability of assigning a
k-th relation to a mention pair (mi,mj). For ev-
ery pair rel-norm uses these probabilities to choose
one relation from the pool and relies on the corre-
sponding relation embedding Rk to compute the
compatibility score.

For K = 1 rel-norm reduces (up to a scal-
ing factor) to the bag-of-entities model defined in
Equation 3.

In principle, instead of relying on the linear
combination of relation embeddings matrices Rk,
we could directly predict a context-specific rela-
tion embedding Rij = diag{g(mi, ci,mj , cj)}
where g is a neural network. However, in prelim-
inary experiments we observed that this resulted
in overfitting and poor performance. Instead, we
choose to use a small fixed number of relations as
a way to constrain the model and improve gener-
alization.

3.3 Ment-norm: Mention-wise normalization
We can also normalize αijk over j:

Zijk =
n∑

j′=1
j′ ̸=i

exp

{
fT (mi, ci)Dkf(mj′ , cj′)√

d

}



1599

This implies that
∑n

j=1,j ̸=i αijk = 1 (see Figure 2,
bottom). If we rewrite the pairwise scores as

Φ(ei, ej , D) =
K∑
k=1

αijke
T
i Rkej , (6)

we can see that Equation 3 is a special case of
ment-norm when K = 1 and D1 = 0. In other
words, Ganea and Hofmann (2017) is our mono-
relational ment-norm with uniform α.

The intuition behind ment-norm is that for each
relation k and mention mi, we are looking for
mentions related to mi with relation k. For each
pair of mi and mj we can distinguish two cases:
(i) αijk is small for all k: mi and mj are not re-
lated under any relation, (ii) αijk is large for one
or more k: there are one or more relations which
are predicted for mi and mj .

In principle, rel-norm can also indirectly handle
both these cases. For example, it can master (i) by
dedicating a distinct ‘none’ relation to represent
lack of relation between the two mentions (with
the corresponding matrix Rk set to 0). Though
it cannot assign large weights (i.e., close to 1) to
multiple relations (as needed for (ii)), it can in
principle use the ‘none’ relation to vary the proba-
bility mass assigned to the rest of relations across
mention pairs, thus achieving the same effect (up
to a multiplicative factor). Nevertheless, in con-
trast to ment-norm, we do not observe this behav-
ior for rel-norm in our experiments: the inductive
basis seems to disfavor such configurations.

Ment-norm is in line with the current trend
of using the attention mechanism in deep learn-
ing (Bahdanau et al., 2014), and especially related
to multi-head attention of Vaswani et al. (2017).
For each mention mi and for each k, we can inter-
pret αijk as the probability of choosing a mention
mj among the set of mentions in the document.
Because here we have K relations, each mention
mi will have maximally K mentions (i.e. heads
in terminology of Vaswani et al. (2017)) to focus
on. Note though that they use multi-head attention
for choosing input features in each layer, whereas
we rely on this mechanism to compute pairwise
scoring functions for the structured output (i.e. to
compute potential functions in the corresponding
undirected graphical model, see Section 3.4).

Mention padding
A potentially serious drawback of ment-norm is
that the model uses all K relations even in cases

where some relations are inapplicable. For ex-
ample, consider applying relation coreference to
mention “West Germany” in Figure 1. The men-
tion is non-anaphoric: there are no mentions
co-referent with it. Still the ment-norm model
has to distribute the weight across the mentions.
This problem occurs because of the normalization∑n

j=1,j ̸=i αijk = 1. Note that this issue does
not affect standard applications of attention: nor-
mally the attention-weighted signal is input to an-
other transformation (e.g., a flexible neural model)
which can then disregard this signal when it is use-
less. This is not possible within our model, as it
simply uses αijk to weight the bilinear terms with-
out any extra transformation.

Luckily, there is an easy way to circumvent this
problem. We add to each document a padding
mention mpad linked to a padding entity epad. In
this way, the model can use the padding mention
to damp the probability mass that the other men-
tions receive. This method is similar to the way
some mention-ranking coreference models deal
with non-anaphoric mentions (e.g. Wiseman et al.
(2015)).

3.4 Implementation
Following Ganea and Hofmann (2017) we use
Equation 2 to define a conditional random field
(CRF). We use the local score function identical
to theirs and the pairwise scores are defined as ex-
plained above:

q(E|D) ∝ exp


n∑

i=1

Ψ(ei, ci) +
∑
i≠j

Φ(ei, ej , D)


We also use max-product loopy belief propagation
(LBP) to estimate the max-marginal probability

q̂i(ei|D) ≈ maxe1,...,ei−1
ei+1,...,en

q(E|D)

for each mention mi. The final score function for
mi is given by:

ρi(e) = g(q̂i(e|D), p̂(e|mi))

where g is a two-layer neural network and p̂(e|mi)
is the probability of selecting e conditioned only
on mi. This probability is computed by mix-
ing mention-entity hyperlink count statistics from
Wikipedia, a large Web corpus and YAGO.2

2See Ganea and Hofmann (2017, Section 6).



1600

We minimize the following ranking loss:

L(θ) =
∑
D∈D

∑
mi∈D

∑
e∈Ci

h(mi, e) (7)

h(mi, e) = max
(
0, γ − ρi(e∗i ) + ρi(e)

)
where θ are the model parameters, D is a training
dataset, and e∗i is the ground-truth entity. Adam
(Kingma and Ba, 2014) is used as an optimizer.

For ment-norm, the padding mention is treated
like any other mentions. We add fpad =
f(mpad, cpad) and epad ∈ Rd, an embedding of
epad, to the model parameter list, and tune them
while training the model.

In order to encourage the models to explore dif-
ferent relations, we add the following regulariza-
tion term to the loss function in Equation 7:

λ1
∑
i,j

dist(Ri,Rj) + λ2
∑
i,j

dist(Di,Dj)

where λ1, λ2 are set to −10−7 in our experiments,
dist(x,y) can be any distance metric. We use:

dist(x,y) =
∥∥∥∥ x∥x∥2 − y∥y∥2

∥∥∥∥
2

Using this regularization to favor diversity is
important as otherwise relations tend to collapse:
their relation embeddings Rk end up being very
similar to each other.

4 Experiments

We evaluated four models: (i) rel-norm proposed
in Section 3.2; (ii) ment-norm proposed in Sec-
tion 3.3; (iii) ment-norm (K = 1): the mono-
relational version of ment-norm; and (iv) ment-
norm (no pad): the ment-norm without using men-
tion padding. Recall also that our mono-relational
(i.e. K = 1) rel-norm is equivalent to the relation-
agnostic baseline of Ganea and Hofmann (2017).

We implemented our models in PyTorch and
run experiments on a Titan X GPU. The source
code and trained models will be publicly avail-
able at https://github.com/lephong/
mulrel-nel.

4.1 Setup
We set up our experiments similarly to those of
Ganea and Hofmann (2017), run each model 5
times, and report average and 95% confidence in-
terval of the standard micro F1 score (aggregates
over all mentions).

Datasets
For in-domain scenario, we used AIDA-CoNLL
dataset3 (Hoffart et al., 2011). This dataset
contains AIDA-train for training, AIDA-A for
dev, and AIDA-B for testing, having respectively
946, 216, and 231 documents. For out-domain
scenario, we evaluated the models trained on
AIDA-train, on five popular test sets: MSNBC,
AQUAINT, ACE2004, which were cleaned and
updated by Guo and Barbosa (2016); WNED-
CWEB (CWEB), WNED-WIKI (WIKI), which
were automatically extracted from ClueWeb and
Wikipedia (Guo and Barbosa, 2016; Gabrilovich
et al., 2013). The first three are small with 20, 50,
and 36 documents whereas the last two are much
larger with 320 documents each. Following previ-
ous works (Yamada et al., 2016; Ganea and Hof-
mann, 2017), we considered only mentions that
have entities in the KB (i.e., Wikipedia).

Candidate selection
For each mention mi, we selected 30 top candi-
dates using p̂(e|mi). We then kept 4 candidates
with the highest p̂(e|mi) and 3 candidates with the
highest scores eT

(∑
w∈di w

)
, where e,w ∈ Rd

are entity and word embeddings, di is the 50-word
window context around mi.

Hyper-parameter setting
We set d = 300 and used GloVe (Pennington et al.,
2014) word embeddings trained on 840B tokens
for computing f in Equation 4, and entity embed-
dings from Ganea and Hofmann (2017).4 We use
the following parameter values: γ = 0.01 (see
Equation 7), the number of LBP loops is 10, the
dropout rate for f was set to 0.3, the window size
of local contexts ci (for the pairwise score func-
tions) is 6. For rel-norm, we initialized diag(Rk)
and diag(Dk) by sampling from N (0, 0.1) for all
k. For ment-norm, we did the same except that
diag(R1) was sampled from N (1, 0.1).

To select the best number of relations K, we
considered all values of K ≤ 7 (K > 7 would not
fit in our GPU memory, as some of the documents
are large). We selected the best ones based on the
development scores: 6 for rel-norm, 3 for ment-
norm, and 3 for ment-norm (no pad).

When training the models, we applied early
stopping. For rel-norm, when the model reached

3TAC KBP datasets are no longer available.
4https://github.com/dalab/deep-ed

https://github.com/lephong/mulrel-nel
https://github.com/lephong/mulrel-nel
https://github.com/dalab/deep-ed


1601

91% F1 on the dev set, 5 we reduced the learning
rate from 10−4 to 10−5. We then stopped the train-
ing when F1 was not improved after 20 epochs.
We did the same for ment-norm except that the
learning rate was changed at 91.5% F1.

Note that all the hyper-parameters except K and
the turning point for early stopping were set to the
values used by Ganea and Hofmann (2017). Sys-
tematic tuning is expensive though may have fur-
ther increased the result of our models.

4.2 Results

Methods Aida-B
Chisholm and Hachey (2015) 88.7

Guo and Barbosa (2016) 89.0
Globerson et al. (2016) 91.0
Yamada et al. (2016) 91.5

Ganea and Hofmann (2017) 92.22± 0.14
rel-norm 92.41± 0.19

ment-norm 93.07± 0.27
ment-norm (K = 1) 92.89± 0.21
ment-norm (no pad) 92.37± 0.26

Table 1: F1 scores on AIDA-B (test set).

Table 1 shows micro F1 scores on AIDA-B
of the SOTA methods and ours, which all use
Wikipedia and YAGO mention-entity index. To
our knowledge, ours are the only (unsupervis-
edly) inducing and employing more than one re-
lations on this dataset. The others use only one
relation, coreference, which is given by simple
heuristics or supervised third-party resolvers. All
four our models outperform any previous method,
with ment-norm achieving the best results, 0.85%
higher than that of Ganea and Hofmann (2017).

Table 2 shows micro F1 scores on 5 out-domain
test sets. Besides ours, only Cheng and Roth
(2013) employs several mention relations. Ment-
norm achieves the highest F1 scores on MSNBC
and ACE2004. On average, ment-norm’s F1 score
is 0.3% higher than that of Ganea and Hofmann
(2017), but 0.2% lower than Guo and Barbosa
(2016)’s. It is worth noting that Guo and Barbosa
(2016) performs exceptionally well on WIKI, but
substantially worse than ment-norm on all other
datasets. Our other three models, however, have
lower average F1 scores compared to the best pre-
vious model.

The experimental results show that ment-norm
outperforms rel-norm, and that mention padding
plays an important role.

5We chose the highest F1 that rel-norm always achieved
without the learning rate reduction.

4.3 Analysis
Mono-relational v.s. multi-relational
For rel-norm, the mono-relational version (i.e.,
Ganea and Hofmann (2017)) is outperformed
by the multi-relational one on AIDA-CoNLL,
but performs significantly better on all five out-
domain datasets. This implies that multi-relational
rel-norm does not generalize well across domains.

For ment-norm, the mono-relational version
performs worse than the multi-relational one on all
test sets except AQUAINT. We speculate that this
is due to multi-relational ment-norm being less
sensitive to prediction errors. Since it can rely on
multiple factors more easily, a single mistake in
assignment is unlikely to have large influence on
its predictions.

Oracle

G&H rel-norm ment-norm
(K=1)

ment-norm

92

92.5

93

93.5

94

94.5 LBP
oracle

Figure 4: F1 on AIDA-B when using LBP and the
oracle. G&H is Ganea and Hofmann (2017).

In order to examine learned relations in a more
transparant setting, we consider an idealistic sce-
nario where imperfection of LBP, as well as mis-
takes in predicting other entities, are taken out of
the equation using an oracle. This oracle, when
we make a prediction for mention mi, will tell
us the correct entity e∗j for every other mentions
mj , j ̸= i. We also used AIDA-A (development
set) for selecting the numbers of relations for rel-
norm and ment-norm. They are set to 6 and 3,
respectively. Figure 4 shows the micro F1 scores.

Surprisingly, the performance of oracle rel-
norm is close to that of oracle ment-norm, al-
though without using the oracle the difference
was substantial. This suggests that rel-norm is
more sensitive to prediction errors than ment-
norm. Ganea and Hofmann (2017), even with the
help of the oracle, can only perform slightly bet-
ter than LBP (i.e. non-oracle) ment-norm. This



1602

Methods MSNBC AQUAINT ACE2004 CWEB WIKI Avg
Milne and Witten (2008) 78 85 81 64.1 81.7 77.96

Hoffart et al. (2011) 79 56 80 58.6 63 67.32
Ratinov et al. (2011) 75 83 82 56.2 67.2 72.68

Cheng and Roth (2013) 90 90 86 67.5 73.4 81.38
Guo and Barbosa (2016) 92 87 88 77 84.5 85.7

Ganea and Hofmann (2017) 93.7 ± 0.1 88.5 ± 0.4 88.5 ± 0.3 77.9 ± 0.1 77.5 ± 0.1 85.22
rel-norm 92.2 ± 0.3 86.7 ± 0.7 87.9 ± 0.3 75.2 ± 0.5 76.4 ± 0.3 83.67

ment-norm 93.9 ± 0.2 88.3 ± 0.6 89.9 ± 0.8 77.5 ± 0.1 78.0 ± 0.1 85.51
ment-norm (K = 1) 93.2 ± 0.3 88.4 ± 0.4 88.9 ± 1.0 77.0 ± 0.2 77.2 ± 0.1 84.94
ment-norm (no pad) 93.6 ± 0.3 87.8 ± 0.5 90.0 ± 0.3 77.0 ± 0.2 77.3 ± 0.3 85.13

Table 2: F1 scores on five out-domain test sets. Underlined scores show cases where the corresponding
model outperforms the baseline.

suggests that its global coherence scoring com-
ponent is indeed too simplistic. Also note that
both multi-relational oracle models substantially
outperform the two mono-relational oracle mod-
els. This shows the benefit of using more than one
relations, and the potential of achieving higher ac-
curacy with more accurate inference methods.

Relations

In this section we qualitatively examine relations
that the models learned by looking at the prob-
abilities αijk. See Figure 5 for an example. In
that example we focus on mention “Liege” in the
sentence at the top and study which mentions are
related to it under two versions of our model:
rel-norm (leftmost column) and ment-norm (right-
most column).

For rel-norm it is difficult to interpret the mean-
ing of the relations. It seems that the first relation
dominates the other two, with very high weights
for most of the mentions. Nevertheless, the fact
that rel-norm outperforms the baseline suggests
that those learned relations encode some useful in-
formation.

For ment-norm, the first relation is similar to
coreference: the relation prefers those mentions
that potentially refer to the same entity (and/or
have semantically similar mentions): see Figure
5 (left, third column). The second and third rela-
tions behave differently from the first relation as
they prefer mentions having more distant mean-
ings and are complementary to the first relation.
They assign large weights to (1) “Belgium” and
(2) “Brussels” but small weights to (4) and (6)
“Liege”. The two relations look similar in this
example, however they are not identical in gen-
eral. See a histogram of bucketed values of their
weights in Figure 5 (right): their α have quite dif-
ferent distributions.

Complexity
The complexity of rel-norm and ment-norm is lin-
ear in K, so in principle our models should be
considerably more expensive than Ganea and Hof-
mann (2017). However, our models converge
much faster than their relation-agnostic model:
on average ours needs 120 epochs, compared to
theirs 1250 epochs. We believe that the structural
bias helps the model to capture necessary regu-
larities more easily. In terms of wall-clock time,
our model requires just under 1.5 hours to train,
that is ten times faster than the relation agnostic
model (Ganea and Hofmann, 2017). In addition,
the difference in testing time is negligible when
using a GPU.

5 Conclusion and Future work

We have shown the benefits of using relations in
NEL. Our models consider relations as latent vari-
ables, thus do not require any extra supervision.
Representation learning was used to learn rela-
tion embeddings, eliminating the need for exten-
sive feature engineering. The experimental results
show that our best model achieves the best re-
ported F1 on AIDA-CoNLL with an improvement
of 0.85% F1 over the best previous results.

Conceptually, modeling multiple relations is
substantially different from simply modeling co-
herence (as in Ganea and Hofmann (2017)). In
this way we also hope it will lead to interest-
ing follow-up work, as individual relations can be
informed by injecting prior knowledge (e.g., by
training jointly with relation extraction models).

In future work, we would like to use syntac-
tic and discourse structures (e.g., syntactic depen-
dency paths between mentions) to encourage the
models to discover a richer set of relations. We
also would like to combine ment-norm and rel-
norm. Besides, we would like to examine whether



1603

rel-norm on Friday , Liege police said in ment-norm
(1) missing teenagers in Belgium .
(2) UNK BRUSSELS UNK
(3) UNK Belgian police said on
(4) , ” a Liege police official told
(5) police official told Reuters .
(6) eastern town of Liege on Thursday ,
(7) home village of UNK .
(8) link with the Marc Dutroux case , the
(9) which has rocked Belgium in the past

0.25 0.30 0.35 0.40 0.45 0.50 0.55
α

0

10

20

30

40

50

60

α •,2

α •,3

Figure 5: (Left) Examples of α. The first and third columns show αijk for oracle rel-norm and oracle
ment-norm, respectively. (Right) Histograms of α•k for k = 2, 3, corresponding to the second and third
relations from oracle ment-norm. Only α > 0.25 (i.e. high attentions) are shown.

the induced latent relations could be helpful for re-
lation extract.

Acknowledgments

We would like to thank anonymous reviewers for
their suggestions and comments. The project
was supported by the European Research Council
(ERC StG BroadSem 678254), the Dutch National
Science Foundation (NWO VIDI 639.022.518),
and an Amazon Web Services (AWS) grant.

References
Dzmitry Bahdanau, Kyunghyun Cho, and Yoshua Ben-

gio. 2014. Neural machine translation by jointly
learning to align and translate. arXiv preprint
arXiv:1409.0473.

Razvan Bunescu and Marius Paşca. 2006. Using en-
cyclopedic knowledge for named entity disambigua-
tion. In 11th Conference of the European Chapter of
the Association for Computational Linguistics.

Xiao Cheng and Dan Roth. 2013. Relational inference
for wikification. In Proceedings of the 2013 Con-
ference on Empirical Methods in Natural Language
Processing, pages 1787–1796, Seattle, Washington,
USA. Association for Computational Linguistics.

Andrew Chisholm and Ben Hachey. 2015. Entity dis-
ambiguation with web links. Transactions of the As-
sociation of Computational Linguistics, 3:145–156.

Greg Durrett and Dan Klein. 2014. A joint model for
entity analysis: Coreference, typing, and linking.
Transactions of the Association for Computational
Linguistics, 2:477–490.

Evgeniy Gabrilovich, Michael Ringgaard, and Amar-
nag Subramanya. 2013. Facc1: Freebase annotation
of clueweb corpora.

Octavian-Eugen Ganea, Marina Ganea, Aurelien Luc-
chi, Carsten Eickhoff, and Thomas Hofmann. 2016.
Probabilistic bag-of-hyperlinks model for entity
linking. In Proceedings of the 25th International
Conference on World Wide Web, pages 927–938. In-
ternational World Wide Web Conferences Steering
Committee.

Octavian-Eugen Ganea and Thomas Hofmann. 2017.
Deep joint entity disambiguation with local neural
attention. In Proceedings of the 2017 Conference
on Empirical Methods in Natural Language Pro-
cessing, pages 2609–2619. Association for Compu-
tational Linguistics.

Amir Globerson, Nevena Lazic, Soumen Chakrabarti,
Amarnag Subramanya, Michael Ringaard, and Fer-
nando Pereira. 2016. Collective entity resolution
with multi-focal attention. In Proceedings of the
54th Annual Meeting of the Association for Compu-
tational Linguistics (Volume 1: Long Papers), pages
621–631. Association for Computational Linguis-
tics.

Zhaochen Guo and Denilson Barbosa. 2016. Robust
named entity disambiguation with random walks.
Semantic Web, (Preprint).

Zhengyan He, Shujie Liu, Mu Li, Ming Zhou, Longkai
Zhang, and Houfeng Wang. 2013. Learning entity
representation for entity disambiguation. In Pro-
ceedings of the 51st Annual Meeting of the Associa-
tion for Computational Linguistics (Volume 2: Short
Papers), pages 30–34, Sofia, Bulgaria. Association
for Computational Linguistics.

Johannes Hoffart, Mohamed Amir Yosef, Ilaria Bor-
dino, Hagen Fürstenau, Manfred Pinkal, Marc Span-
iol, Bilyana Taneva, Stefan Thater, and Gerhard
Weikum. 2011. Robust disambiguation of named
entities in text. In Proceedings of the 2011 Con-
ference on Empirical Methods in Natural Language
Processing, pages 782–792. Association for Com-
putational Linguistics.

Raphael Hoffmann, Congle Zhang, Xiao Ling,
Luke Zettlemoyer, and Daniel S. Weld. 2011.

http://www.aclweb.org/anthology/E06-1002
http://www.aclweb.org/anthology/E06-1002
http://www.aclweb.org/anthology/E06-1002
http://www.aclweb.org/anthology/D13-1184
http://www.aclweb.org/anthology/D13-1184
http://www.aclweb.org/anthology/Q15-1011
http://www.aclweb.org/anthology/Q15-1011
http://www.aclweb.org/anthology/D17-1276
http://www.aclweb.org/anthology/D17-1276
https://doi.org/10.18653/v1/P16-1059
https://doi.org/10.18653/v1/P16-1059
http://www.aclweb.org/anthology/P13-2006
http://www.aclweb.org/anthology/P13-2006
http://www.aclweb.org/anthology/D11-1072
http://www.aclweb.org/anthology/D11-1072


1604

Knowledge-based weak supervision for information
extraction of overlapping relations. In Proceedings
of the 49th Annual Meeting of the Association for
Computational Linguistics: Human Language Tech-
nologies, pages 541–550, Portland, Oregon, USA.
Association for Computational Linguistics.

Hongzhao Huang, Larry Heck, and Heng Ji. 2015.
Leveraging deep neural networks and knowledge
graphs for entity disambiguation. arXiv preprint
arXiv:1504.07678.

Diederik Kingma and Jimmy Ba. 2014. Adam: A
method for stochastic optimization. arXiv preprint
arXiv:1412.6980.

Nevena Lazic, Amarnag Subramanya, Michael Ring-
gaard, and Fernando Pereira. 2015. Plato: A selec-
tive context model for entity resolution. Transac-
tions of the Association for Computational Linguis-
tics, 3:503–515.

Tomas Mikolov, Kai Chen, Greg Corrado, and Jef-
frey Dean. 2013. Efficient estimation of word
representations in vector space. arXiv preprint
arXiv:1301.3781.

David Milne and Ian H Witten. 2008. Learning to link
with wikipedia. In Proceedings of the 17th ACM
conference on Information and knowledge manage-
ment, pages 509–518. ACM.

Kevin P Murphy, Yair Weiss, and Michael I Jordan.
1999. Loopy belief propagation for approximate in-
ference: An empirical study. In Proceedings of the
Fifteenth conference on Uncertainty in artificial in-
telligence, pages 467–475. Morgan Kaufmann Pub-
lishers Inc.

Jeffrey Pennington, Richard Socher, and Christopher
Manning. 2014. Glove: Global vectors for word
representation. In Proceedings of the 2014 Con-
ference on Empirical Methods in Natural Language
Processing (EMNLP), pages 1532–1543. Associa-
tion for Computational Linguistics.

Lev Ratinov, Dan Roth, Doug Downey, and Mike An-
derson. 2011. Local and global algorithms for dis-
ambiguation to wikipedia. In Proceedings of the
49th Annual Meeting of the Association for Com-
putational Linguistics: Human Language Technolo-
gies, pages 1375–1384. Association for Computa-
tional Linguistics.

Xiang Ren, Zeqiu Wu, Wenqi He, Meng Qu, Clare R
Voss, Heng Ji, Tarek F Abdelzaher, and Jiawei Han.
2017. Cotype: Joint extraction of typed entities and
relations with knowledge bases. In Proceedings of
the 26th International Conference on World Wide
Web, pages 1015–1024. International World Wide
Web Conferences Steering Committee.

Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob
Uszkoreit, Llion Jones, Aidan N Gomez, Ł ukasz
Kaiser, and Illia Polosukhin. 2017. Attention is all
you need. In I. Guyon, U. V. Luxburg, S. Bengio,

H. Wallach, R. Fergus, S. Vishwanathan, and R. Gar-
nett, editors, Advances in Neural Information Pro-
cessing Systems 30, pages 6000–6010. Curran As-
sociates, Inc.

Martin J Wainwright, Michael I Jordan, et al. 2008.
Graphical models, exponential families, and varia-
tional inference. Foundations and Trends R⃝ in Ma-
chine Learning, 1(1–2):1–305.

Sam Wiseman, Alexander M. Rush, Stuart Shieber, and
Jason Weston. 2015. Learning anaphoricity and an-
tecedent ranking features for coreference resolution.
In Proceedings of the 53rd Annual Meeting of the
Association for Computational Linguistics and the
7th International Joint Conference on Natural Lan-
guage Processing (Volume 1: Long Papers), pages
1416–1426. Association for Computational Linguis-
tics.

Ikuya Yamada, Hiroyuki Shindo, Hideaki Takeda, and
Yoshiyasu Takefuji. 2016. Joint learning of the em-
bedding of words and entities for named entity dis-
ambiguation. In Proceedings of The 20th SIGNLL
Conference on Computational Natural Language
Learning, pages 250–259. Association for Compu-
tational Linguistics.

Ikuya Yamada, Hiroyuki Shindo, Hideaki Takeda, and
Yoshiyasu Takefuji. 2017. Learning distributed rep-
resentations of texts and entities from knowledge
base. arXiv preprint arXiv:1705.02494.

Wen-tau Yih, Ming-Wei Chang, Xiaodong He, and
Jianfeng Gao. 2015. Semantic parsing via staged
query graph generation: Question answering with
knowledge base. In Proceedings of the 53rd Annual
Meeting of the Association for Computational Lin-
guistics and the 7th International Joint Conference
on Natural Language Processing (Volume 1: Long
Papers), pages 1321–1331, Beijing, China. Associ-
ation for Computational Linguistics.

http://www.aclweb.org/anthology/P11-1055
http://www.aclweb.org/anthology/P11-1055
https://tacl2013.cs.columbia.edu/ojs/index.php/tacl/article/view/637
https://tacl2013.cs.columbia.edu/ojs/index.php/tacl/article/view/637
https://doi.org/10.3115/v1/D14-1162
https://doi.org/10.3115/v1/D14-1162
http://www.aclweb.org/anthology/P11-1138
http://www.aclweb.org/anthology/P11-1138
http://papers.nips.cc/paper/7181-attention-is-all-you-need.pdf
http://papers.nips.cc/paper/7181-attention-is-all-you-need.pdf
https://doi.org/10.3115/v1/P15-1137
https://doi.org/10.3115/v1/P15-1137
https://doi.org/10.18653/v1/K16-1025
https://doi.org/10.18653/v1/K16-1025
https://doi.org/10.18653/v1/K16-1025
http://www.aclweb.org/anthology/P15-1128
http://www.aclweb.org/anthology/P15-1128
http://www.aclweb.org/anthology/P15-1128

