



















































Working Hard or Hardly Working: Challenges of Integrating Typology into Neural Dependency Parsers


Proceedings of the 2019 Conference on Empirical Methods in Natural Language Processing
and the 9th International Joint Conference on Natural Language Processing, pages 5714–5720,
Hong Kong, China, November 3–7, 2019. c©2019 Association for Computational Linguistics

5714

Working Hard or Hardly Working:
Challenges of Integrating Typology into Neural Dependency Parsers

Adam Fisch∗ Jiang Guo∗ Regina Barzilay
Computer Science and Artificial Intelligence Laboratory

Massachusetts Institute of Technology
{fisch,jiang guo,regina}@csail.mit.edu

Abstract

This paper explores the task of leveraging
typology in the context of cross-lingual de-
pendency parsing. While this linguistic in-
formation has shown great promise in pre-
neural parsing, results for neural architec-
tures have been mixed. The aim of our in-
vestigation is to better understand this state-
of-the-art. Our main findings are as fol-
lows: 1) The benefit of typological informa-
tion is derived from coarsely grouping lan-
guages into syntactically-homogeneous clus-
ters rather than from learning to leverage vari-
ations along individual typological dimensions
in a compositional manner; 2) Typology con-
sistent with the actual corpus statistics yields
better transfer performance; 3) Typological
similarity is only a rough proxy of cross-
lingual transferability with respect to parsing.1

1 Introduction

Over the last decade, dependency parsers for
resource-rich languages have steadily continued to
improve. In parallel, significant research efforts
have been dedicated towards advancing cross-
lingual parsing. This direction seeks to capitalize
on existing annotations in resource-rich languages
by transferring them to the rest of the world’s over
7,000 languages (Bender, 2011). The NLP com-
munity has devoted substantial resources towards
this goal, such as the creation of universal annota-
tion schemas, and the expansion of existing tree-
banks to diverse language families. Nevertheless,
cross-lingual transfer gains remain modest when
put in perspective: the performance of transfer
models can often be exceeded using only a handful
of annotated sentences in the target language (Sec-
tion 5). The considerable divergence of language
structures proves challenging for current models.
∗The first two authors contributed equally.
1Code: github.com/ajfisch/TypologyParser

One promising direction for handling these di-
vergences is linguistic typology. Linguistic ty-
pology classifies languages according to their
structural and functional features. By explic-
itly highlighting specific similarities and differ-
ences in languages’ syntactic structures, typology
holds great potential for facilitating cross-lingual
transfer (O’Horan et al., 2016). Indeed, non-
neural parsing approaches have already demon-
strated empirical benefits of typology-aware mod-
els (Naseem et al., 2012; Täckström et al., 2013;
Zhang and Barzilay, 2015) While adding discrete
typological attributes is straightforward for tradi-
tional feature-based approaches, for modern neu-
ral parsers finding an effective implementation
choice is more of an open question. Not surpris-
ingly, the reported results have been mixed. For
instance, Ammar et al. (2016) found no benefit to
using typology for parsing when using a neural-
based model, while Wang and Eisner (2018) and
Scholivet et al. (2019) did in several cases.

There are many possible hypotheses that can at-
tempt to explain the state-of-the-art. Might neu-
ral models already implicitly learn typological in-
formation on their own? Is the hand-specified ty-
pology information sufficiently accurate — or pro-
vided in the right granularity — to always be use-
ful? How do cross-lingual parsers use, or ignore,
typology when making predictions? Without un-
derstanding answers to these questions, it is diffi-
cult to develop a principled way for robustly incor-
porating linguistic knowledge as an inductive bias
for cross-lingual transfer.

In this paper, we explore these questions in
the context of two predominantly-used typology-
based neural architectures for delexicalized depen-
dency parsing.2 The first method implements a
variant of selective sharing (Naseem et al., 2012);

2We focus on delexicalized parsing in order to isolate the
effects of syntax by removing lexical influences.

github.com/ajfisch/TypologyParser


5715

the second adds typological information as an
additional feature of the input sentence. Both
models are built on top of the popular Biaffine
Parser (Dozat and Manning, 2017). We study
model performance across multiple forms of ty-
pological representation and resolution.

Our key findings are as follows:

• Typology as Quantization Cross-lingual
parsers use typology to coarsely group
languages into syntactically-homogeneous
clusters, yet fail to significantly capture finer
distinctions or typological feature composi-
tions. Our results indicate that they primarily
take advantage of the simple geometry of the
typological space (e.g. language distances),
rather than specific variations in individual
typological dimensions (e.g. SV vs. VS).

• Typology Quality Typology that is consistent
with the actual corpus statistics results in better
transfer performance, most likely by capturing
a better reflection of the typological variations
within that sample. Typology granularity also
matters. Finer-grained, high-dimensional repre-
sentations prove harder to use robustly.

• Typology vs. Parser Transferability Typo-
logical similarity only partially explains cross-
lingual transferability with respect to parsing.
The geometry of the typological space does not
fully mirror that of the “parsing” space, and
therefore requires task-specific refinement.

2 Typology Representations

Linguistic Typology, TL: The standard represen-
tation of typology is sets of annotations by lin-
guists for a variety of language-level properties.
These properties can be found in online databases
such as The World Atlas of Language Structures
(WALS) (Dryer and Haspelmath, 2013). We con-
sider the same subset of features related to word
order as used by Naseem et al. (2012), represented
as a k-hot vector T ∈ {0, 1}

∑
f |Vf |, where Vf is

the set of values feature f may take.

Liu Directionalities, TD: Liu (2010) proposed
using a real-valued vector T ∈ [0, 1]r of the aver-
age directionalities of each of a corpus’ r depen-
dency relations as a typological descriptor. These
serve as a more fine-grained alternative to linguis-
tic typology. Compared to WALS, there are rarely
missing values, and the degree of dominance of
each dependency ordering is directly encoded —

potentially allowing for better modeling of local
variance within a language. It is important to note,
however, that true directionalities require a parsed
corpus to be derived; thus, they are not a realistic
option for cross-lingual parsing in practice.3 Nev-
ertheless, we include them for completeness.
Surface Statistics, TS: It is possible to de-
rive a proxy measure of typology from part-of-
speech tag sequences alone. Wang and Eisner
(2017) found surface statistics to be highly pre-
dictive of language typology, while Wang and Eis-
ner (2018) replaced typological features entirely
with surface statistics in their augmented depen-
dency parser. Surface statistics have the advantage
of being readily available and are not restricted
to narrow linguistic definitions, but are less in-
formed by the true underlying structure. We com-
pute the set of hand-engineered features used in
(Wang and Eisner, 2018), yielding a real-valued
vector T ∈ [0, 1]2380.

3 Parsing Architecture

We use the graph-based Deep Biaffine Attention
neural parser of (Dozat and Manning, 2017) as
our baseline model. Given a delexicalized sen-
tence s consisting of n part-of-speech tags, the Bi-
affine Parser embeds each tag pi, and encodes the
sequence with a bi-directional LSTM to produce
tag-level contextual representations hi. Each hi is
then mapped into head- and child-specific repre-
sentations for arc and relation prediction, harc-depi ,
harc-headi , h

rel-dep
i , and h

rel-head
i , using four separate

multi-layer perceptrons.
For decoding, arc scores are computed as:

sarcij =
(
harc-headi

)T (
U arch

arc-dep
j + b

arc
)

(1)

while the score for dependency label r for edge
(i, j) is computed in a similar fashion:

srel(i,j),r =
(
hrel-headi

)T
U relr h

rel-dep
j +(

urel-headr
)T

hrel-headi +(
urel-depr

)T
h

rel-dep
j + br

(2)

Both sarcij and s
rel
(i,j),r are trained greedily using

cross-entropy loss with the correct head or label.
At test time the final tree is composed using the
Chu-Liu-Edmonds (CLE) maximum spanning tree
algorithm (Chu and Liu, 1965; Edmonds, 1967).

3Though Wang and Eisner (2017) indicate that they can be
predicted from unparsed corpora with reasonable accuracy.



5716

Language B∗ +T∗S Our Baseline Selective Sharing +TL +TD +TS Fine-tune

Basque 49.89 54.34 56.18 56.54 56.35† 56.77 56.50 60.71
Croatian 65.03 67.78 74.86 75.23 74.07 77.39 75.20 78.39
Greek 65.91 68.37 70.09 70.49 68.05 71.66 70.47 73.35
Hebrew 62.58 66.27 68.85 68.61 72.02 72.75 69.21 73.88
Hungarian 58.50 64.13 63.81 64.78 70.28 66.40 64.21 72.50
Indonesian 55.22 64.63 63.68 64.96 69.73 67.73 66.25 73.34
Irish 58.58 61.51 61.72 61.49† 65.88 66.49 62.21 66.76
Japanese 54.97 60.41 57.28 57.80 63.83 64.28 57.04 72.72
Slavonic 68.79 71.13 75.18 75.17† 74.65 74.17 75.16† 73.11
Persian 40.38 34.20 53.87 53.61 45.14 56.72 53.03 59.92
Polish 72.15 76.85 76.01 75.93† 79.51 71.09 76.29 77.78
Romanian 66.55 69.69 73.00 73.40 75.20 76.34 73.82 75.15
Slovenian 72.21 76.06 81.21 80.99 81.39 81.36 80.92 82.43
Swedish 72.26 75.32 79.39 79.64 80.28 80.10 79.22 81.29
Tamil 51.59 57.53 57.81 58.85 59.70 60.37 58.39 62.94

Average 60.97 64.55 67.53 67.83 69.07 69.57 67.86 72.28

Table 1: A comparison of all methods on held-out test languages. UAS results are reported over the train splits
of the held-out languages, following (Wang and Eisner, 2018). B∗ and +T∗S are the baseline and surface statistics
model results, respectively, of (Wang and Eisner, 2018).4 Fine-tune is the result of adapting our baseline model
using only 10 sentences from the target language. All of our reported numbers are the average of three runs with
different random seeds. Results with differences that are statistically insignificant compared to the baseline are
marked with † (arc-level paired permutation test with p ≥ 0.05).

4 Typology Augmented Parsing

Selective Sharing: Naseem et al. (2012) intro-
duced the idea of selective sharing in a genera-
tive parser, where the features provided to a parser
were controlled by its typology. The idea was
extended to discriminative models by Täckström
et al. (2013). For neural parsers which do not rely
on manually-defined feature templates, however,
there isn’t an explicit way of using selective shar-
ing. Here we choose to directly incorporate selec-
tive sharing as a bias term for arc-scoring:

s
arc-aug
ij = s

arc
ij + v

>f ij (3)

where v is a learned weight vector and f ij is a
feature vector engineered using Täckström et al.’s
head-modifier feature templates (Appendix B).

Input Features: We follow Wang and Eisner
(2018) and encode the typology for language l
with an MLP, and concatenate it with each input:

Φ = W2 · tanh
(
W1 ·T(l) + b

)
(4)

h = BiLSTM ({p1 ⊕ Φ, . . . ,pn ⊕ Φ}) (5)

This approach assumes the parser is able to learn
to use information in T(l) ∈ {T(l)L ,T

(l)
D ,T

(l)
S } to

induce some distinctive change in encoding h.

5 Experiments

Data: We conduct our analysis on the Univer-
sal Dependencies v1.2 dataset (Nivre et al., 2015)
and follow the same train-test partitioning of lan-
guages as Wang and Eisner (2018). We train on 20
treebanks and evaluate cross-lingual performance
on the other 15; test languages are shown in Ta-
ble 1.5 We perform hyper-parameter tuning via
5-fold cross-validation on the training languages.
Results: Table 1 presents our cross-lingual trans-
fer results. Our baseline model improves over
the benchmark in (Wang and Eisner, 2018) by
more than 6%. As expected, using typology yields
mixed results. Selective sharing provides little to
no benefit over the baseline. Incorporating the ty-
pology vector as an input feature is more effec-
tive, with the Liu Directionalities (TD) driving
the most measurable improvements — achieving
statistically significant gains on 13/15 languages.
The Linguistic Typology (TL) gives statistically
significant gains on 10/15 languages. Neverthe-
less, the results are still modest. Fine-tuning on
only 10 sentences yields a 2.3× larger average
UAS increase, a noteworthy point of reference.

4Wang and Eisner (2018)’s final T∗S also contains addi-
tional neural features that we omitted, as we found it to un-
derperform using only hand-engineered features.

5Two treebanks are excluded from evaluation, following
the setting of Wang and Eisner (2018).



5717

cs

esfr

hi

de

it

no

ar pt

en

nl

da

fi

grc

et

bg

hr

ga

he

hu

fa

ta

cu

el

ro

sl

ja

sv

id

eu

pl

la
got

Figure 1: t-SNE projection of WALS vectors with clus-
tering. Persian (fa) is an example of a poorly perform-
ing language that is also far from its cluster center.

6 Analysis

Typology as Quantization: Adding simple, dis-
crete language identifiers to the input has been
shown to be useful in multi-task multi-lingual set-
tings (Ammar et al., 2016; Johnson et al., 2017).
We hypothesize that the model utilizes typologi-
cal information for a similar purpose by clustering
languages by their parsing behavior. Testing this
to the extreme, we encode languages using one-
hot representations of their cluster membership.
The clusters are computed by applying K-Means6

to WALS feature vectors (see Figure 1 for an illus-
tration). In this sparse form, compositional aspects
of cross-lingual sharing are erased. Performance
using this impoverished representation, however,
only suffers slightly compared to the original —
dropping by just 0.56% UAS overall and achiev-
ing statistically significant parity or better with TL
on 7/15 languages. A gap does still partially re-
main; future work may investigate this further.

This phenomenon is also reflected in the perfor-
mance when the original WALS features are used.
Test languages that do belong to compact clusters
have higher performance on average than that of
those who are isolates (e.g., Persian, Basque). In-
deed from Table 1 and Fig. 1 we observe that the
worst performing languages are isolated from their
cluster centers. Even though their typology vec-
tors can be viewed as compositions of training lan-
guages, the model appears to have limited gener-
alization ability. This suggests that the model does
not effectively use individual typological features.

This can likely be attributed to the training rou-
tine, which poses two inherent difficulties: 1)
the parser has few examples (entire languages)

6We use Euclidean distance as our metric, another ex-
treme simplification. There is no guarantee that all dimen-
sions should be given equal weight, as indicated in Table 4.

WALS ID 82A 83A 85A 86A 87A 88A

Logreg 87 85 97 92 94 92
Majority 61 56 87 75 51 82

Table 2: Performance of typology prediction using hid-
den states of the parser’s encoder, compared to a major-
ity baseline which predicts the most frequent category.

+GD B∗ +T∗S Baseline +T
‡
L +TD +TS

Average – 67.11 68.45 69.23 68.36 67.12

Table 3: Average UAS results when training with
Galactic Dependencies. The Linguistic Typology (T‡L)
here is computed directly from the corpora using the
rules in Appendix E. All of our reported numbers are
the average of three runs.

to generalize from, making it hard from a learn-
ing perspective and 2) a naı̈ve encoder can al-
ready implicitly capture important typological fea-
tures within its hidden state, using only the surface
forms of the input. This renders the additional ty-
pology features redundant. Table 2 presents the
results of probing the final max-pooled output of
the BiLSTM encoder for typological features on a
sentence level. We find they are nearly linearly
separable — logistic regression achieves greater
than 90% accuracy on average.

Wang and Eisner (2018) attempt to address the
learning problem by using the synthetic Galac-
tic Dependencies (GD) dataset (Wang and Eis-
ner, 2016) as a form of data augmentation. GD
constructs “new” treebanks with novel typological
qualities by systematically permuting the behav-
iors of real languages. Following their work, we
add 8, 820 GD treebanks synthesized from the 20
UD training languages, giving 8, 840 training tree-
banks in total. Table 3 presents the results of train-
ing on this setting. While GD helps the weaker
T∗S substantially, the same gains are not realized
for models built on top of our stronger baseline —
in fact, the baseline only narrows the gap even fur-
ther by increasing by 0.92% UAS overall.7

Typology Quality: The notion of typology is
predicated on the idea that some language features
are consistent across different language samples,
yet in practice this is not always the case. For
instance, Arabic is listed in WALS as SV (82A,
SubjectxVerb), yet follows a large number of
VerbySubject patterns in UD v1.2. Fig. 2 fur-

7Sourcing a greater number of real languages may still be
helpful. The synthetic GD setting is not entirely natural, and
might be sensitive to hyper-parameters.



5718

eu en n
l

da de id e
t ar bg f
r

gr
c cs es s
l fi

0.2

0.4

0.6

0.8

1.0

Ac
cu

ra
cy

Figure 2: Averaged matching accuracy of the
linguistically-defined WALS features on 15 randomly
sampled languages compared to their corpus-specific
values derived from UD v1.2. Rules for deriving the
features from corpus are described in Appendix E.

ther demonstrates that for some languages these
divergences are significant (see Appendix F for
concrete examples). Given this finding, we are in-
terested in measuring the impact this noise has on
typology utilization. Empirically, TD, which is
consistent with the corpus, performs best. Further-
more, updating our typology features for TL to
match the dominant ordering of the corpus yields
a slight improvement of 0.21% UAS overall, with
statistically significant gains on 7/15 languages.

In addition to the quality of the representation,
we can also analyze the impact of its resolution.
In theory, a richer, high-dimensional representa-
tion of typology may capture subtle variations.
In practice, however, we observe an opposite ef-
fect, where the Linguistic Typology (TL) and the
Liu Directionalities (TD) outperform the surface
statistics (TS), with |TL| ≈ |TD| � |TS |. This
is likely due to the limited number of languages
used for training (though training on GD exhibits
the same trend). This suggests that future work
may consider using targeted dimensionality reduc-
tion mechanisms, optimized for performance.

Typology vs. Parser Transferability: The im-
plicit assumption of all the typology based meth-
ods is that the typological similarity of two lan-
guages is a good indicator of their parsing trans-
ferability. As a measure of parser transferabil-
ity, for each language we select the oracle source
language which results in the best transfer per-
formance. We then compute precision@k for the
nearest k neighbors in the typological space, i.e.
whether the best source appears in the k near-
est neighbors. As shown in Table 4, we observe
that while there is some correlation between the
two, they are far from perfectly aligned. TD has
the best alignment, which is consistent with its
corresponding best parsing performance. Overall,
this divergence motivates the development of ap-
proaches that better match the two distributions.

P@1 P@3 P@5 P@10

TL 13 33 60 80
TD 27 67 67 93
TS 13 27 27 73

Table 4: Precision@k for identifying the best parsing
transfer language, for the k typological neighbors.

7 Related Work

Other recent progress in cross-lingual parsing has
focused on lexical alignment (Guo et al., 2015,
2016; Schuster et al., 2019). Data augmenta-
tion (Wang and Eisner, 2017) is another promis-
ing direction, but at the cost of greater training
demands. Both directions do not directly address
structure. Ahmad et al. (2019) showed structural-
sensitivity is important for modern parsers; in-
sensitive parsers suffer. Data transfer is an alter-
native solution to alleviate the typological diver-
gences, such as annotation projection (Tiedemann,
2014) and source treebank reordering (Rasooli and
Collins, 2019). These approaches are typically
limited by parallel data and imperfect alignments.
Our work aims to understand cross-lingual pars-
ing in the context of model transfer, with typology
serving as language descriptors, with the goal of
eventually addressing the issue of structure.

8 Conclusion

Realizing the potential for typology may re-
quire rethinking current approaches. We can fur-
ther drive performance by refining typology-based
similarities into a metric more representative of ac-
tual transfer quality. Ultimately, we would like to
design models that can directly leverage typologi-
cal compositionality for distant languages.

Acknowledgments

We thank Dingquan Wang, Jason Eisner, the MIT
NLP group (special thanks to Jiaming Luo), and
the reviewers for their valuable comments. This
research is supported in part by the Office of the
Director of National Intelligence, Intelligence Ad-
vanced Research Projects Activity, via contract
#FA8650-17-C-9116, and the National Science
Foundation Graduate Research Fellowship under
Grant #1122374. Any opinion, findings, conclu-
sions, or recommendations expressed in this mate-
rial are those of the authors and do not necessarily
reflect the views of the the NSF, ODNI, IARPA, or
the U.S. Government. We are also grateful for the
support of MIT Quest for Intelligence program.



5719

References
Wasi Ahmad, Zhisong Zhang, Xuezhe Ma, Eduard

Hovy, Kai-Wei Chang, and Nanyun Peng. 2019. On
difficulties of cross-lingual transfer with order dif-
ferences: A case study on dependency parsing. In
NAACL, pages 2440–2452.

Waleed Ammar, George Mulcaire, Miguel Ballesteros,
Chris Dyer, and Noah A Smith. 2016. Many lan-
guages, one parser. TACL, 4:431–444.

Emily M. Bender. 2011. On achieving and evaluating
language-independence in nlp. Linguistic Issues in
Language Technology.

Yoeng-Jin Chu and Tseng-Hong Liu. 1965. On the
shortest arborescence of a directed graph. Scientia
Sinica, 14:1396–1400.

Timothy Dozat and Christopher D. Manning. 2017.
Deep Biaffine Attention for Neural Dependency
Parsing. In ICLR.

Matthew S. Dryer and Martin Haspelmath, editors.
2013. WALS Online. Max Planck Institute for Evo-
lutionary Anthropology, Leipzig.

Jack Edmonds. 1967. Optimum branchings. Journal
of Research of the National Bureau of Standards,
71B:233–240.

Jiang Guo, Wanxiang Che, David Yarowsky, Haifeng
Wang, and Ting Liu. 2015. Cross-lingual depen-
dency parsing based on distributed representations.
In ACL-IJCNLP, volume 1, pages 1234–1244.

Jiang Guo, Wanxiang Che, David Yarowsky, Haifeng
Wang, and Ting Liu. 2016. A representation learn-
ing framework for multi-source transfer parsing. In
AAAI.

Melvin Johnson, Mike Schuster, Quoc V Le, Maxim
Krikun, Yonghui Wu, Zhifeng Chen, Nikhil Thorat,
Fernanda Viégas, Martin Wattenberg, Greg Corrado,
et al. 2017. Googles multilingual neural machine
translation system: Enabling zero-shot translation.
TACL, 5:339–351.

Haitao Liu. 2010. Dependency direction as a means
of word-order typology: A method based on depen-
dency treebanks. Lingua, 120(6):1567–1578.

Tahira Naseem, Regina Barzilay, and Amir Globerson.
2012. Selective sharing for multilingual dependency
parsing. In ACL, pages 629–637. Association for
Computational Linguistics.

Joakim Nivre, Željko Agić, Maria Jesus Aranzabe,
Masayuki Asahara, Aitziber Atutxa, Miguel Balles-
teros, John Bauer, Kepa Bengoetxea, Riyaz Ah-
mad Bhat, Cristina Bosco, Sam Bowman, Giuseppe
G. A. Celano, Miriam Connor, Marie-Catherine
de Marneffe, Arantza Diaz de Ilarraza, Kaja Do-
brovoljc, Timothy Dozat, Tomaž Erjavec, Richárd
Farkas, Jennifer Foster, Daniel Galbraith, Filip

Ginter, Iakes Goenaga, Koldo Gojenola, Yoav
Goldberg, Berta Gonzales, Bruno Guillaume, Jan
Hajič, Dag Haug, Radu Ion, Elena Irimia, An-
ders Johannsen, Hiroshi Kanayama, Jenna Kan-
erva, Simon Krek, Veronika Laippala, Alessan-
dro Lenci, Nikola Ljubešić, Teresa Lynn, Christo-
pher Manning, Cătălina Mărănduc, David Mareček,
Héctor Martı́nez Alonso, Jan Mašek, Yuji Mat-
sumoto, Ryan McDonald, Anna Missilä, Verginica
Mititelu, Yusuke Miyao, Simonetta Montemagni,
Shunsuke Mori, Hanna Nurmi, Petya Osenova, Lilja
Øvrelid, Elena Pascual, Marco Passarotti, Cenel-
Augusto Perez, Slav Petrov, Jussi Piitulainen, Bar-
bara Plank, Martin Popel, Prokopis Prokopidis,
Sampo Pyysalo, Loganathan Ramasamy, Rudolf
Rosa, Shadi Saleh, Sebastian Schuster, Wolfgang
Seeker, Mojgan Seraji, Natalia Silveira, Maria Simi,
Radu Simionescu, Katalin Simkó, Kiril Simov,
Aaron Smith, Jan Štěpánek, Alane Suhr, Zsolt
Szántó, Takaaki Tanaka, Reut Tsarfaty, Sumire Ue-
matsu, Larraitz Uria, Viktor Varga, Veronika Vincze,
Zdeněk Žabokrtský, Daniel Zeman, and Hanzhi
Zhu. 2015. Universal dependencies 1.2. LIN-
DAT/CLARIN digital library at the Institute of For-
mal and Applied Linguistics (ÚFAL), Faculty of
Mathematics and Physics, Charles University.

Helen O’Horan, Yevgeni Berzak, Ivan Vulic, Roi Re-
ichart, and Anna Korhonen. 2016. Survey on the
use of typological information in natural language
processing. In COLING, pages 1297–1308.

Mohammad Sadegh Rasooli and Michael Collins.
2019. Low-resource syntactic transfer with unsu-
pervised source reordering. In NAACL, pages 3845–
3856.

Manon Scholivet, Franck Dary, Alexis Nasr, Benoit
Favre, and Carlos Ramisch. 2019. Typological
features for multilingual delexicalised dependency
parsing. In NAACL, pages 3919–3930.

Tal Schuster, Ori Ram, Regina Barzilay, and Amir
Globerson. 2019. Cross-lingual alignment of con-
textual word embeddings, with applications to zero-
shot dependency parsing. In NAACL, pages 1599–
1613.

Oscar Täckström, Ryan McDonald, and Joakim Nivre.
2013. Target language adaptation of discriminative
transfer parsers. In NAACL, pages 1061–1071, At-
lanta, Georgia. Association for Computational Lin-
guistics.

Jörg Tiedemann. 2014. Rediscovering annotation pro-
jection for cross-lingual parser induction. In COL-
ING, pages 1854–1864.

Dingquan Wang and Jason Eisner. 2016. The galactic
dependencies treebanks: Getting more data by syn-
thesizing new languages. TACL, 4:491–505.

Dingquan Wang and Jason Eisner. 2017. Fine-grained
prediction of syntactic typology: Discovering latent
structure with supervised learning. TACL, 5:147–
161.

https://wals.info/
http://hdl.handle.net/11234/1-1548


5720

Dingquan Wang and Jason Eisner. 2018. Surface statis-
tics of an unknown language indicate how to parse
it. TACL, 6:667–685.

Yuan Zhang and Regina Barzilay. 2015. Hierarchical
low-rank tensors for multilingual transfer parsing.
In EMNLP.


