








































Q-Theory Representations are logically equivalent
to Autosegmental Representations

Nick Danis
Program in Linguistics
Princeton University

ndanis@princeton.edu

Adam Jardine
Department of Linguistics

Rutgers University
adam.jardine@rutgers.edu

Abstract

We use model theory and logical interpreta-
tions to systematically compare two compet-
ing representational theories in phonology, Q-
Theory (Shih and Inkelas, 2014, forthcom-
ing) and Autosegmental Phonology (Gold-
smith, 1976). We find that, under reasonable
assumptions for capturing tone patterns, Q-
Theory Representations are equivalent to Au-
tosegmental Representations, in that any con-
straint that can be written in one theory can
be written in another. This contradicts the as-
sertions of Shih and Inkelas, who claim that
Q-Theory Representations are different from,
and superior to, Autosegmental Representa-
tions.

1 Introduction

Model theory and mathematical logic can be
used to rigorously define phonological represen-
tations and constraints (Bird, 1995; Potts and
Pullum, 2002). The logical notion of interpreta-
tion (Enderton, 1972; Courcelle, 1994; Hodges,
1997) between logics of different kinds of mod-
els then allows us to compare and contrast differ-
ing representational theories, and rigorously ex-
amine whether or not they are truly distinct or if
they are simply notational variants of one another
(Strother-Garcia and Heinz, 2017).

This paper uses these techniques to critically
examine the Q-Theory Representations (QRs) of
Shih and Inkelas (forthcoming, henceforth SI; see
also Shih and Inkelas (2014)). SI argue for QRs as
a superior alternative to Autosegmental Represen-
tations (ARs; Goldsmith (1976)), specifically with
respect to phonological tone patterns. We find that,
to the contrary, the differences are notational. We
show that for any constraint that can be written in
the first-order logic of QRs, there is an equivalent
constraint in ARs, and vice versa.

The fundamental idea behind QRs is that ev-
ery segment, or Q, is divided into three sub-
segments, or qs. Agreement and disagreement is
based on correspondence (Hansson, 2001; Rose
and Walker, 2004; Bennett, 2015), a relation that
holds between qs and between Qs. To give an ex-
ample, SI give the following QR in (1a) for the
Basaá word [hólôl] ‘ripen’ (Dimmendaal, 1988;
Hyman, 2003), in which the first vowel is a level
high tone and the second vowel is a falling tone.
Each [o] vowel Q is split into three qs, which each
carry a tone. Indices on the qs represent correspon-
dence. (Consonant qs have been abbreviated.)

a. h(ó1 ó1,2 ó2,3)l(ó3 ò4 ò4)l b. H L

V V

(1)

In (1a), the first q of the second vowel is high-
toned while the rest are low-toned; this thus repre-
sents the falling contour of the second vowel. Fur-
thermore, the last q of the first vowel and the first
q in the second are in correspondence (and both
high-toned). This indicates that the falling contour
on the second vowel is the result of partial agree-
ment with the high-toned first vowel.

In contrast, ARs would depict [hólôl] using sep-
arate strings of autosegments associated to one an-
other. An AR for [hólôl], given in (1b), represents
a high (H) tone associated to both the first vowel
(V) and the second vowel.

SI make several claims about QRs in favor of
ARs. First, they claim that representations like in
(1) capture tone patterns without “the special rep-
resentational machinery of autosegments and as-
sociation lines” (SI, pp. 18-9). They give a number
of analyses which they argue shows that QRs are
“better at capturing key tone behaviors” (p. 2).

By precisely studying the nature of these rep-
resentations, however, we show that QRs are log-
ically equivalent to ARs. First, we give model-

29
Proceedings of the Society for Computation in Linguistics (SCiL) 2019, pages 29-38.

New York City, New York, January 3-6, 2019



a. H
1

H

2

H

3

H

4

L

5

L

6

Q

7

Q

8

7!
H

10

L

50

V

70

V

80

b. H
3

L

4

V

1

V

2

7!
H

11

H

12

H

13

H

21

L

22

L

23

Q

10

Q

20

Figure 1: Overview of the transductions (a) from QRs to ARs and (b) from ARs to QRs.

theoretic definitions of both QRs and ARs. This
shows that, contra to SI’s claims, QRs do require
an ‘association’ relation between qs and Qs. Sec-
ond, based on the logical transductions of Cour-
celle (1994), we give a first-order (FO) transduc-
tion from QRs to ARs, and from ARs to QRs. This
guarantees that, given any FO statement ' writ-
ten over QRs, there is an equivalent FO statement
'0 in ARs such that any QR model satisfies ' if
and only if its equivalent AR model satisfies '0. In
phonological terms, this means that for any con-
straint that we can write in FO logic of QRs, there
is an equivalent constraint in the FO logic of ARs
(and vice versa). These models and transductions
reveal an equivalence between chains of qs con-
nected by correspondence in QRs and tonal au-
tosegments in ARs.

This paper is not meant to be a complete rebut-
tal of SI, but instead to lay the formal groundwork
for establishing the similarity of QRs and ARs.
Throughout, we assume that FO logic as the up-
per bound for the expressivity necessary to capture
constraints in natural language phonology (Bird,
1995; Rogers et al., 2013).

This paper is structured as follows. §2 summa-
rizes the equivalence between structures in infor-
mal terms. §3 gives the preliminaries of model the-
ory and logic; §4 defines ARs and QRs in terms
of model theory; and §5 defines the transductions
between them. §6 summarizes and discusses the
results, and §7 concludes.

2 Overview

Before going into the formal details, we first give
a brief overview of how transductions between the
two representations proceed. These are illustrated
with examples in Fig. 1 showing transductions be-
tween models for the representations in (1).

As shown in the left-hand side of Fig. 1a, defin-
ing QRs precisely reveals that there must be a re-
lation pairing tone-bearing qs (depicted with Hs
and Ls) with vowel Qs. Moving from a QR to an
AR, then, is a matter of identifying the first mem-
ber of a chain of corresponding qs (indicated by
curved lines) and as assigning it to a tone in the
output AR. All other qs in that chain are ‘merged’
into that autosegment—thus, for example, as both
vowel Qs are associated to correspondents of 1 in
the QR in Fig. 1a, both equivalent Vs in the AR
are associated to its output tone 10.

In the other direction, illustrated in Fig. 1b, we
create three additional copies of each V in the AR,
representing the output qs. For example, vowel 1
in the left-hand side of Fig. 1b has copies 11, 12,
and 13 in the right-hand side. These copies are la-
beled and related through correspondence accord-
ing to the associations in the AR. For a series of
vowels associated to the same tone in the AR, their
output Qs are associated to a chain of correspond-
ing qs of the same tone value. For example, both
vowels 1 and 2 in the left-hand side of Fig. 1b are
associated to the same H tone, so their output Qs
are associated to a chain of corresponding H-toned
qs in the output. This thus implements the equiv-
alence of tonal autosegments to q-correspondence
chains in the transduction from ARs to QRs.

3 Preliminaries

3.1 Models

The following is based on standard concepts
of finite relational structures (Enderton, 1972;
Libkin, 2004). A signature S is a fixed set
{R1, R2, ..., Rn} of n named relations. A model
M over a signature is a tuple hD; R1, R2, ..., Rni
with a domain D of elements and a set of n rela-

30



tions where each Ri ✓ Dk for some k. Here, k
is equal to either 1 or 2; that is, we consider only
unary and binary relations.

For example, the signature {<, Pa, Pb} can de-
scribe the set of strings over the alphabet a and b.
A model in this signature is given in Fig. 2.

a

1

b

2

b

3

a

4

Figure 2: A model of the string abba. D = {1, 2, 3, 4},
Pa and Pb are indicated by labels on the nodes, and <
by arrows.

3.2 Logic
A fixed signature induces a first-order (FO) log-
ical language LS as follows. For every Ri 2 S ,
Ri(x1, ..., xk) is an atomic formula in LS , which
is interpreted as true in a model M when x1, ..., xk
are evaluated to d1, ..., dk 2 D and (d1, ..., dk) 2
Ri in M . We also assume an equality predicate
x ⇡ y that is true when x and y are both evalu-
ated to some i 2 D. We then define the FO logic
of LS and its semantics in the usual way; for de-
tails, see, e.g., Enderton (1972). For a FO formula
'(x1, ..., xk) we write M |= '(d1, ..., dk) when
'(x1, ..., xk) is true in M when x1, ..., xk are eval-
uated to d1, ..., dk in D. A sentence is a formula
with no free variables; for a sentence ' we write
M |= ' when ' is true in M .

3.3 Transductions and interpretations
To directly compare structures in distinct sig-
natures we use logical transductions (Courcelle,
1994), in which the relations in an output structure
are defined using the logic of an input structure.
Given an input signature S and an output signa-
ture T = {R1, ..., Rn}, we define each Ri in LS .
Such a transduction thus induces an interpretation
of T in S; that is, for any formula we can write
in LT , there exists a translation into LS (Ender-
ton, 1972; Hodges, 1997). If there then also exists
a transduction back from T to S , there then ex-
ists an interpretation of S in T . If interpretations
in both directions exist, we say that S and T are
bi-interpretable.

A FO transduction is defined as follows. Fix a
copy set C = {1, ..., k}, an input signature S ,
and an output signature T = {R1, ..., Rn}. A FO

transduction ⌧ from S to T is thus a set of for-
mulae 'c1,...,cmi (x1, ..., xm) for each Ri 2 T and
each c1, ..., cm 2 Cm, where m is the arity of Ri.

The output of such a transduction is calculated
as follows.1 For a stucture M over the input signa-
ture S , and whose domain is D, ⌧(M) is a struc-
ture N = hD0, R1, ..., Rni defined as follows:

1. For every d 2 D, there is a copy dc 2 D0 iff
there is exactly one unary predicate Rci (x) in
⌧ such that M |= 'i(d).

2. For any Ri of arity m, (dc11 , ..., d
cm
m ) 2 Ri if

and only if there is a d1, ..., dm 2 Dm and
a 'c1,...,cmi (x1, ..., xm) in ⌧ such that M |=
'c1,...,cmi (d1, ..., dm), and each d

ci
i 2 D0 as

per the requirement in (1).

Intuitively, given a structure M over S , the out-
put structure in T can have up to |C| copies of
elements in the domain of D, and the relations in
T are defined relative to these copies.

For example, given the string signature S de-
fined above we can define a transduction into
a pseudo-autosegmental signature T = {/0
, A0, P 0c, P

0
b} as follows. Set the copy set to C =

{1, 2}. Then define a transduction ⌧ as

x /01,1 y def= x < y ^ ¬(9z)[x < z ^ z < y],
x /02,2 y def= x < y ^ ¬(9z)[x < z ^ z < y],
xA01,2y def= x ⇡ y,
P 02b (x)

def
= Pb(x),

P 01c (x)
def
= Pb(x) _ Pa(x),

and for all other i, j 2 C, x /0i,j y def= xA0i,jy def=
False, and P 01b

def
= P 02c

def
= False.

b

22
b

32

c

11
c

21
c

31
c

41

Figure 3: Output structure in T obtained by applying ⌧
to the string model in Fig. 2. Arrows denote /0 and lines
without arrows denote A0. Indices of the nodes are of
the form dc, where d is a node from Fig. 2 and c 2 C.

1We use an abbreviated construction used for those in
strings, based on (Engelfriet and Hoogeboom, 2001). For the
full construction see (Courcelle et al., 2012).

31



We interpret ⌧ as follows; an example is given

in Fig. 3. As P 01c (x)
def
= Pb(x) _ Pa(x), every

node d in the input string is given a copy d1 in the

output labeled c. Similarly, as P 02b (x)
def
= Pb(x)

means that for any d labeled b in the input, there
is a second copy d2 labeled b in the output. As
P 01b (x) = P

02
c (x) = False, no other copies are

produced. Thus, the b nodes in Fig. 2 have both a
corresponding c node and b node in Fig. 3, but the
a nodes only have a corresponding c node.

The definitions for x /01,1 y and x /02,2 y then
establish a successor relation between the first and
second copies of nodes, respectively. Thus, for two
nodes d1 and d2 in the input structure, d12 is the
successor of d11 if and only if i < j in in the input
structure and no node intervenes between them;
likewise for d21 and d

2
2. As x /

0i,j y is False
for all other i, j 2 C, the first and second copies
are not ordered with respect to each other. Instead,

xA01,2y def= x ⇡ y establishes that for any d, d1 in
the output is associated to its own second copy d2

in the output (assuming that it survives according
to (1) above). This can be seen for the copies of
the b nodes 2 and 3 from Fig. 2 in Fig. 3.

As such a transduction is defined in terms of the
atomic predicates of the output signature, it also
induces an interpretation from the logic of the out-
put signature to the logic of the input signature.

Lemma 1 (Courcelle et al. (2012)) A FO trans-
duction ⌧ from S to T induces a translation f from
the FO language LS of S to the FO language LT
of T such that for every sentence ' in LS there is
a sentence f(') in LT such that for any structure
M over S , M |= ' if and only if ⌧(M) |= f(').

In terms of phonology, if there is a FO transduc-
tion from one representational theory S to another
T , Lemma 1 means that for any FO constraint C
over S there is a FO constraint C 0 over T such that
a representation in S satisfies C if and only if its
equivalent representation in T satisfies C 0.

4 Phonological representations as models

We now apply this technique to studying the rela-
tionship between ARs and QRs. First, we define
the representations in model-theoretic terms.

4.1 Autosegmental representations
We assume a basic theory of autosegmental repre-
sentations (ARs), which also follows SI’s charac-
terization of ARs (p. 2). The crucial assumptions

are that there exists a tier of timing units (in our
case, vowels), and featural elements are associated
to elements on this tier. Each type of featural el-
ement (for our purposes, Hs and Ls) are also on
their own tier, ordered together. For the patterns
discussed in SI, a single tonal tier is sufficient. The
signature for ARs is thus as below.

A = {/A, AA, VA, HA, LA} (2)

VA, HA, and LA are unary relations that label el-
ements as vowels, H tones, and L tones, respec-
tively. The association relation is AA; to simplify
definitions we treat AA as antisymmetric and di-
rected from vowels to tones; that is, xAAy holds
only if VA(x) is true and either HA(y) or LA(y).

H

1

L

2

V

3

V

4

Figure 4: An example AR of the sequence V́V̂.

Each tier is ordered by the /A successor rela-
tion. Thus, the set of elements labeled VA are or-
dered, as are the set of elements labeled HA or LA.
A vowel can be associated to more than one tone
(a contour) or a tone can be associated to more
than one vowel (spreading). This is shown in Fig-
ure 4. For further simplicity, we also assume full
specification: there are no toneless vowels and no
floating tones. This last assumption is somewhat
generous, as by SI’s own admission, QRs cannot
capture floating tones (see SI §6.1).

Next, we assume two axioms that specially
require the use of precedence (<). The first is
No Gapping (NG), which prohibits autosegments
from being linked to non-contiguous elements on
the timing tier (Nı́ Chiośain and Padgett, 2001).

NG
def
= (8x, y, z, w)

⇥ �
x < y < z ^ AA(x, w)
^ AA(z, w)

�
! AA(y, w)

⇤

We also adopt the No-Crossing Constraint (NCC),
which states that association must respect prece-
dence on each tier (Goldsmith, 1976).

NCC
def
= (8x, y, v, w)

⇥
(xAAv ^ yAAw
^ x < y) ! v < w

⇤

Thus, models in A satisfy NG ^ NCC.

32



Finally, we assume that vowels can only asso-
ciate to at most three tones—this maintains equiv-
alence between ARs and QRs. While this has not
traditionally been explicitly stated as an axiom of
ARs, recent proposals do state such constraints
(Yli-Jyrä, 2013; Jardine and Heinz, 2015).

4.2 Q-Theory representations
Q-Theory Representations (QRs) consist of two
sets of ordered elements: one of Qs, and one of
qs. Each Q consists of exactly 3 qs, and every q is
part of exactly one Q. According to SI, qs are sub-
segments; the featural information of the segment
is carried on the q. For our purposes, the relevant
features are the tone features H and L. Thus, be-
cause constraints in SI refer to the featural infor-
mation of some Q, it must be able to “see” what
qs are relevant; a Q and its qs must be in some
relation. We denote this relation AQ.

We thus consider the following signature for
QRs. Fig. 5 gives an example model in this sig-
nature of the QR for [hólôl] from (1).

Q = {/Q, RQ, AQ, QQ, HQ, LQ} (3)

H

1

H

2

H

3

H

4

L

5

L

6

Q

7

Q

8

Figure 5: An example QR of the sequence V́V̂.

This signature includes a sucessor relation /Q,
a correspondence relation RQ (the curved lines in
Fig. 5), the relation AQ associating Qs to qs, and
three unary relations QQ, HQ, and LQ, labeling
Qs, H-toned qs, and L-toned qs, respectively.

The axioms that govern RQ are not straightfor-
ward and so we discuss them here. We base our
axioms for RQ on both the explicit and implicit
discussion in SI.

First, we assume that RQ is transitive. While
SI claim their correspondence to be non-transitive,
their constraints crucially refer to correspondence
chains, or unbroken chains of corresponding ele-
ments. They state: “[A] sequence of three identical
consecutive segments S in a grammar requiring
that identical segments correspond would satisfy
that constraint as follows: S1S1,2S2, where coin-
dexation encodes correspondence” (SI, p. 5). In

other words, the first S1 and third S2, although
they do not directly correspond, satisfy any cor-
respondence constraints because there is a corre-
spondence chain connecting them (through the in-
termediary S1,2). Thus, in practice, the correspon-
dence relation of SI is transitive.

For ease of definition we further assume RQ is
also reflexive and symmetric and thus an equiva-
lence relation (per Bennett (2015)).

EQ
def
= 8(x, y, z)[ (xRQy ! yRQx) ^

(xRQx )^
((xRQy ^ yRQz) ! xRQz) ]

However, this choice is not crucial to our results.
Furthermore, like SI, we define RQ to be local:

“‘Local’ means consecutive; thus V-to-V corre-
spondence is still considered local even if a conso-
nant intervenes, as long as the closest two vowels
in the string correspond” (SI: 4–5). In all of their
case studies, correspondence is always between
adjacent vowels. (The only candidate that includes
non-local correspondence in terms of vowels is
SI:(8d), which is not an optimum.) In the models
here, consonants are not included, so vowels are
strictly adjacent.

To restrict correspondence to a span of adjacent
elements, we must adopt the following axiom.

ADJ
def
= (8x, y, z)[(x < y ^ y < z ^ xRQz)

! (xRQy ^ yRQz)]

ADJ states that for any x and z in correspondence,
all intervening y must also be in correspondence.
Note that this axiom requires specially adopting
the < relation, as it must hold for all intervening
elements y. This is stricter than SI’s requirement
of ‘consecutivity’, which instead restricts corre-
spondence to intervening elements of some type—
e.g., vowels—but as they are vague about how this
is determined we ignore this here, and note only
that relativizing ‘consecutivity’ to a particular type
of element is also FO-definable (Graf, 2017).

Thus, we assume Q models satisfy EQ ^ ADJ.
(For comparison to models that do not, see §6.2.)

Finally, correspondence implies identity. As SI
state: “Our operating assumption is that GEN does
not even produce candidates in which elements
obey CORR but violate the associated IDENT-XX
constraint” (SI: 6). Thus, correspondence between
two qs implies they are either both H or both
L. Similarly, correspondence between Qs implies
they are associated to identical strings of qs.

33



5 Transductions

We now show the FO-equivalence between these
two representational theories by defining a trans-
duction from Q to A, and then from A to Q.

5.1 From Q-Theory Representations
We begin with a transductions from QRs in Q to
ARs in A. Intuitively, this transduction is based on
the idea that a correspondence chain of qs in a QR
is equivalent to a tone in an AR.

We identify qs by the fact that they carry tones.

qQ(x)
def
= HQ(x) _ LQ(y)

Then, to uniquely identify each chain of cor-
responding qs, we define the following predicate
FC(x), which identifies the first correspondent;
i.e., the first element in a correspondence chain.

FC(x)
def
= ¬(9y)[xRQy ^ y /Q x]

This is possible with a successor relation /Q be-
cause of the adjacency axiom ADJ. If y /Q x and
¬yRQx and there is no z such that z <Q x and
zRQx, then x must be first in the chain.

The transduction is thus as given in Table 1. The
copy set is C = {1}, so we omit superscripts indi-
cating copies. An example output structure, given
Fig. 5 as an input, is given in Fig. 6.

VA(x)
def
= QQ(x)

HA(x)
def
= HQ(x) ^ FC(x)

LA(x)
def
= LQ(x) ^ FC(x)

x /A y
def
=

�
QQ(x) ^ QQ(y) ^ x /Q y

�
_�

qQ(x) ^ qQ(y) ^ FC(x) ^ FC(y)^
(9z)[xRQz ^ z /Q y]

�

xAAy
def
= FC(x) ^ (9z)[xRQz ^ zAQy]

Table 1: Transduction from Q to A.

First, the definitions of VA(x), HA(x), and
LA(x), are straightforward. As vowels in ARs and
Qs in QRs are equivalent, we set VA(x) equal to
QQ(x). For HA(x), and LA(x), we set each to the
first q of a chain that is valued either H or L, re-
spectively. Thus, for example in Fig. 6, only nodes
1 and 5 are copied over from Fig. 5.

The definition of x /A y, then, is relativized to
elements for which these predicate are true. The

H

10

L

50

V

70

V

80

Figure 6: Output of the transduction in Table 1 given
Fig. 5 as input; i0 indicates a surviving copy of node i
from Fig. 5.

disjunct
�
QQ(x) ^ QQ(y) ^ x /Q y

�
means that

the successor relation between vowels in the AR
is identical to the successor relation between Qs
in the QR. The other disjunct defines the succes-
sor relation between tones. This has two parts:
qQ(x)^qQ(y)^FC(x)^FC(y) ensures that the suc-
cessor relation only holds between first elements
in correspondence chains, and (9z)[xRQz ^ z /Q
y] identifies for some x the element y that starts
the next correspondence chain; that is, it succeeds
the element z that is the last element in x’s cor-
respondence chain. This can be seen in Fig. 6 be-
tween 10 and 50. In Fig. 5, in both 1 and 5 are first
in their chains and 5 is the successor of 4, which
corresponds with 1; thus 50 succeeds 10 in Fig. 6.

In a similar fashion, the definition for xAAy
holds true when x is the first member of a chain
and y that is associated to some z that corresponds
with x. Thus, for example, since 4 is associated
to 8 in Fig. 5 and 4 is a member of 1’s corre-
spondence chain, 10 and 80 are associated in Fig.
6. Thus, A is definable from Q.
Lemma 2 A is FO-definable from Q.

Proof: Witnessed by transduction defined in
Table 1. Note that these ARs will satisfy NG and
NCC. Briefly, this is because AA and /A are
defined through RQ, which satisfies ADJ as
outlined in Sec. 4.2. ADJ essentially orders
correspondence chains, and thus the tones and
association relations defined via RQ. ⇤

5.2 From Autosegmental Representations

For this transformation, the copy set is C =
{0, 1, 2, 3}. For each vowel, we need both the
vowel itself (for the Q; let this be copy 0) and three
copies (for each q; let these be copies 1, 2, and 3).

The tones themselves in the AR are not copied.
Instead, the values of the qs will be determined by
the string of tones associated to the vowel in the

34



AR, as (partially) summarized in Table 2.2

Tones qs

H ! H1H1,2H2
HL ! H1L2L2
HLH ! H1L2H3

Tones qs

L ! L1L1,2L2
LH ! L1H2H2
LHL ! L1H2L3

Table 2: Mapping from strings of tones associated to a
vowel (AR) to strings of qs associated to a Q (QR).

a. first(x, y) def= ¬(9z)[xAAz ^ z /A y]
b. last(x, y) def= ¬(9z)[xAAz ^ y /A z]
c. second(x, y) def= (9z)[xAAz ^ z /A y

^ first(x, z)]
d. only(x, y) def= first(x, y) ^ last(x, y)

Table 3: Predicates used in the AR to QR transduction

a.
H

y

V

x

7!
H

x1

H

x2

H

x3

Q

x0

b.
H

y1

L

y2

V

x

7!
H

x1

L

x2

L

x3

Q

x0

Figure 7: Deriving strings of qs from strings of tones.
On the right, xi indicates the ith copy of x.

These correspondences are FO-definable. First,
we define a series of predicates first(x, y),
second(x, y), last(x, y), and only(x, y) that in-
dicate when y is the first, second, last, or only tone
associated to x, respectively. These definitions are
given in Table 3. (These do not explicitly associate
y to x; this will be invoked in later definitions.)

From these predicates we can determine, for
each vowel in the AR, how to label its q copies
in the QR. This is given in Table 4b. For example,
H1Q(x) is true when there is a H tone y that is the
first tone associated to x. This means that copy 1
of x will be a q valued H. Similarly, H2Q(x) is true
when there is some H tone associated to x that is
either the second tone or the only tone associated
to x. This last disjunct is necessary in case x has a

2It is also the case that, e.g., a vowel associated to a string
of three H tones (i.e., HHH) will be output as a Q associated
to a string of three, non-corresponding H qs (H1H2H3).

single H associated to it in the AR, for its equiva-
lent QR all three qs will be H (see Fig. 7a).

Table 4a specifies when Qs are built: the 0th
copy of each vowel x is labeled Q. Table 4c then
specifies that the 0th copy of x is associated to
each of its own copies 1, 2, and 3 (i.e., the qs).
The specification that x ⇡ y ensures that the Q for
each vowel is associated to each of its q copies.
Likewise, Table 4d specifies that the successor re-
lation /A between vowels is preserved between Qs
(i.e., the 0 copies of vowels) and, that for the 1st
through 3rd copies of vowel x, its ith copy is suc-
ceeded by its own i + 1th copy. The reader can
confirm this via the examples in Fig. 7.

Finally, we define RQ. First, as described in
§4.2, correspondence between Qs is dependent on
identity between Qs, which again depends on their
associated qs. Thus, xR0,0Q y should be true when
the output Qs of x and y are associated to iden-
tical strings of qs. The values of q copies of are
determined by the tones associated to x and y, re-
spectively. Thus, Table 4e defines xR0,0Q y with the
predicate ident(x, y), which is true if and only if
the first, second, and last tones of x and y have

the same value. (Let same(x, y) def=
�
HA(x) ^

HA(y)
�
_
�
LA(x) ^ LA(y)

�
.) For example, this

is true of the vowels in Fig. 8a, but not in 8b.
Between qs, we define correspondence based on

shared associations. Table 4f thus defines xRi,jQ y
for 1  i, j  3 to be true when there is some z
for which both x and y are associated. However,
which qs of x and y correspond depend on z’s po-
sition relative to other tones associated to x and
y. Thus, z must also satisfy requirements 'i(x, z)
and 'j(y, z) based on the value of i and j.

For example, when i = 1 and j = 1—that
is, when defining correspondence between the 1st
q of x and the 1st q of y—z must satisfy both
first(x, z) and first(y, z). Intuitively, the first
q of x and the first q of y correspond only if x and
y share an association to z and z is the first tone
associated to both x and y. This can be seen in Fig.
8; for example, in Fig. 8b, both x and y share an
initial tone z, and so x1 and y1 correspond.

Thus, Table 4 is a transduction from A to Q.
Lemma 3 Q is FO-definable from A.

Proof: Witnessed by the transduction defined in
Table 4. In particular, we sketch why RQ is guar-
anteed to be an equivalence relation over the copy
set. First, xRi,iQ y holds when x ⇡ y and thus RQ is

35



a. QiQ(x)
def
= VA(x) for i = 0; False otherwise

b. For T 2 {H, L}, T 0Q(x)
def
= False

T 1Q(x)
def
= (9y)[xAAy ^ TA(y) ^ first(x, y)]

T 2Q(x)
def
= (9y)[xAAy ^ TA(y) ^ (only(x, y) _ second(x, y))]

T 3Q(x)
def
= (9y)[xAAy ^ TA(y) ^ last(x, y)]

c. xAi,jQ y
def
= x ⇡ y for i = 0 and 1  i  3; False otherwise.

d. x /i,jQ y
def
= x / y for i, j = 0 or i = 3, j = 1; x ⇡ y for 1  i, j  3, j = i + 1; False otherwise.

e. xR0,0Q y
def
= ident(x, y) ^ (x /Q y _ y /Q x), where

ident(x, y)
def
= (8v, w)

⇥�
(xAAv ^ yAAw) ^

�
(first(x, v) ^ first(y, w))_

((only(x, v) _ second(x, v) ^ (only(y, w) _ second(y, w))_
(last(x, v) ^ last(y, w))

��
! same(v, w)

⇤
;

xRi,0Q y
def
= xR0,jQ y

def
= False for any 1  i, j  3

f. xRi,jQ y
def
= (9z)[xAAz ^ yAAz ^ 'i(x, z) ^ 'j(y, z)],

where 'n(v, w)
def
= first(v, w) if n = 1,

(only(v, w) _ second(v, w)) if n = 2, and
last(v, w) if n = 3, for 1  i, j  3.

Table 4: Transduction from A to Q

a.
H L H L

V

x

V

y

7!
H

x1

L

x2

L

x3

H

y1

L

y2

L

y3

Q

x0

Q

y0

b.
H

z

L

V

x

V

y

7!
H

x1

H

x2

H

x3

H

y1

L

y2

L

y3

Q

x0

Q

y0

Figure 8: Deriving RQ from tonal associations.

reflexive and symmetric. Finally, the fact that RQ
is transitive derives from the fact that the relation
defined by (8z)[xAAz ^ yAAz] is transitive.

Also, because any input AR satisfies NG, x
and y in an AR only share associations if they are
adjacent, and thus RQ will satisfy ADJ. ⇤

6 Summary and discussion

6.1 Equivalence of the models

We have now shown that A is definable from
Q and Q is definable from A.

Theorem 1 A and Q are FO bi-interpretable.

Proof: From Lemmas 2 and 3. ⇤

As stated in the introduction, this means that
for any FO constraint written for QRs, there is an
equivalent FO constraint on ARs, and vice-versa.
Thus, while QRs may be based on a particular set
of axioms and constraints, an equivalent set of ax-
ioms and constraints can be written in ARs, with-
out changing the complexity of the constraints.

Furthermore, while SI argue that QRs are a fun-
damental reimagining of phonological structure,
our model-theoretic analysis shows that they are
remarkably similar to ARs in which each vowel
is associated to three autosegments. To illustrate
this point, one reported benefit of QRs is that the

36



fixed number of 3 subsegments predicts contrasts
between HHL and HLL-toned vowels, for instance
(SI, p. 14). While not commonly proposed for
ARs, this contrast is possible for ARs as well if
the OCP is relaxed (as argued by Odden 1986).

6.2 Relation to other correspondence models

As noted in Sec. 4.2, we follow SI in restricting
the correspondence relation to adjacent elements.
This is more restrictive than other theories of cor-
respondence; the formulation of Bennett (2013),
for example, obeys EQ but not ADJ. How do ARs
compare to QRs given a less restrictive correspon-
dence relation? We conjecture that A and Q are
incomparable to such a signature.

To see why, consider a signature identical to Q
with the exception that models in Q0 only satisfy
EQ, thus allowing unbounded correspondence.
Defining RQ from R0 would require defining a bi-
nary predicate in the FO logic of Q0 that satisfies
ADJ. However, it is likely that no such predicate
exists, because the definition of ADJ crucially re-
quires <, and it is well-known that < cannot be
defined from /. (See, e.g., Libkin (2004).)

Going the other way, Q0 essentially allows for
quantification over a single abstract binary predi-
cate whose only restriction is that it is an equiv-
alence relation. For example, the FO language of
Q0 includes sentences such as

(8x, y)
⇥

(first(x) ^ last(y) ! xR0y)^
(8z, w)[w /0Q x ^ y /0Q z ! wR0z]

⇤
,

where first(x) = (8y)[¬y /Q x] and
last(x) = (8y)[¬x /Q y]. This enforces ‘center
embedding’ correspondence where in a string of
elements a0a1a2...a`�2a`�1a`, each ai and a`�i
(for i  `/2) are in correspondence.

Such a relation is almost certainly more ex-
pressive than anything definable in Q and A.
First, A is FO-definable from strings with <
(Jardine, 2017). FO-transductions are closed un-
der composition (Courcelle et al., 2012). If Q0

were to be FO-definable from A, it would then
have to be FO-definable from strings. As ‘center
embedding’-type relations are well-known to not
be FO-definable, this is very likely not to be true.

6.3 Future work

An even stronger result would be that A and
Q are equivalent under quantifier-free (QF) trans-
ductions (Chandlee and Lindell, forthcoming;

Strother-Garcia, 2017). However, QF transduc-
tions of Chandlee and Lindell and Strother-Garcia
crucially use models with functions instead of pure
relational models. Here, in order to hew to the
standard definitions of association and correspon-
dence as relations, we leave the interesting ques-
tion of QF transductions for future work.

The result here is based on the machinery neces-
sary to capture the case studies from SI, which all
involve local tone interactions. As they also sug-
gest extending their theory to segmental phonol-
ogy, the obvious next direction is long-distance
segmental phenomena. This involves more fea-
tures, or unary predicates on qs, in addition to re-
laxing the ADJ axiom.

7 Conclusion

Model theory and logic provide for a power-
ful way to compare representational theories in
phonology. Here, we have shown that ARs and
QRs are not as different as they appear. This paper
also serves as a case study for how logical transfor-
mations can be used to precisely evaluate theories
of representation in phonology.

References
William Bennett. 2013. Dissimilation, Consonant Har-

mony, and Surface Correspondence. Ph.D. thesis,
Rutgers, the State University of New Jersey.

William G. Bennett. 2015. The phonology of conso-
nants: Harmony, dissimilation, and correspondence.
Cambridge, UK: Cambridge University Press.

Steven Bird. 1995. Computational phonology: A
constraint-based approach. Studies in Natural Lan-
guage Processing. Cambridge University Press.

Jane Chandlee and Steven Lindell. forthcoming. A log-
ical characterization of strictly local functions. In
Jeffrey Heinz, editor, Doing Computational Phonol-
ogy. OUP.

Bruno Courcelle. 1994. Monadic second-order de-
finable graph transductions: a survey. Theoretical
Computer Science, 126:53–75.

Bruno Courcelle, Joost Engelfriet, and Maurice Nivat.
2012. Graph structure and monadic second-order
logic: A language-theoretic approach. Cambridge
University Press.

Gerrit Dimmendaal. 1988. Aspects du basaa. In
Bibliographie de la SELAF 96. Paris, France:
Peeters/SELAF. Trans. Luc Bouquiaux.

Herbert Enderton. 1972. A mathematical introduction
to logic. Academic Press.

37



Joost Engelfriet and Hendrik Jan Hoogeboom. 2001.
MSO definable string transductions and two-way
finite-state transducers. ACM Transations on Com-
putational Logic, 2:216–254.

John Goldsmith. 1976. Autosegmental Phonology.
Ph.D. thesis, Massachussets Institute of Technology.

Thomas Graf. 2017. The power of locality domains in
phonology. Phonology, 34:385–405.

Gunnar Ólafur Hansson. 2001. Theoretical and Typo-
logical Issues in Consonant Harmony. Ph.D. thesis,
University of California, Berkeley.

Wilfred Hodges. 1997. A Shorter Model Theory. Cam-
bridge: Cambridge University Press.

Larry Hyman. 2003. Basaa a.43. In Derek Nurse and
Gérard Philippson, editors, The Bantu Languages,
pages 257–282. London, UK: Routledge.

Adam Jardine. 2017. On the logical complexity of
autosegmental representations. In Proceedings of
the 15th Meeting on the Mathematics of Language,
pages 22–35, London, UK. Association for Compu-
tational Linguistics.

Adam Jardine and Jeffrey Heinz. 2015. A concatena-
tion operation to derive autosegmental graphs. In
Proceedings of the 14th Meeting on the Mathematics
of Language (MoL 2015), pages 139–151, Chicago,
USA. Association for Computational Linguistics.

Leonid Libkin. 2004. Elements of Finite Model The-
ory. Berlin: Springer-Verlag.

Maire Nı́ Chiośain and Jaye Padgett. 2001. Marked-
ness, segment realization, and locality in spreading.
In Linda Lombardi, editor, Segmental phonology in
Optimality Theory, pages 118–156. Cambridge Uni-
versity Press.

David Odden. 1986. On the role of the Obligatory Con-
tour Principle in phonological theory. Language,
62(2):353–383.

Christopher Potts and Geoffrey K. Pullum. 2002.
Model theory and the content of OT constraints.
Phonology, 19:361–393.

James Rogers, Jeffrey Heinz, Margaret Fero, Jeremy
Hurst, Dakotah Lambert, and Sean Wibel. 2013.
Cognitive and sub-regular complexity. In Formal
Grammar, volume 8036 of Lecture Notes in Com-
puter Science, pages 90–108. Springer.

Sharon Rose and Rachel Walker. 2004. A typology of
consonant agreement as correspondence. Language,
80:475–531.

Stephanie Shih and Sharon Inkelas. 2014. A sub-
segmental correspondence approach to contour tone
(dis)harmony patterns. In Proceedings of the 2013
Meeting on Phonology (UMass Amherst), Proceed-
ings of the Annual Meetings on Phonology. LSA.

Stephanie Shih and Sharon Inkelas. forthcoming. Au-
tosegmental aims in surface optimizing phonology.
Ms. available at lingbuzz/002520.

Kristina Strother-Garcia. 2017. Imdlawn Tashlhiyt
Berber syllabification is quantifier-free. In Proceed-
ings of the first annual meeting of the Society for
Computation in Linguistics, volume 1, pages 145–
153.

Kristina Strother-Garcia and Jeffrey Heinz. 2017. Log-
ical foundations of syllable representations. Poster
presented at the 5th Annual Meeting on Phonology,
New York University, New York City.

Anssi Yli-Jyrä. 2013. On finite-state tonology with au-
tosegmental representations. In Proceedings of the
11th International Conference on Finite State Meth-
ods and Natural Language Processing, pages 90–98.
Association for Computational Linguistics.

38


