




































Multimodal Logical Inference System for Visual-Textual Entailment


Proceedings of the 57th Annual Meeting of the Association for Computational Linguistics: Student Research Workshop, pages 386–392
Florence, Italy, July 28 - August 2, 2019. c©2019 Association for Computational Linguistics

386

Multimodal Logical Inference System for Visual-Textual Entailment
Riko Suzuki1

suzuki.riko@is.ocha.ac.jp

Hitomi Yanaka1,2
hitomi.yanaka@riken.jp

Masashi Yoshikawa3
yoshikawa.masashi.

yh8@is.naist.jp

Koji Mineshima1
mineshima.koji@ocha.ac.jp

Daisuke Bekki1
bekki@is.ocha.ac.jp

1Ochanomizu University, Tokyo, Japan
2RIKEN Center for Advanced Intelligence Project, Tokyo, Japan

3Nara Institute of Science and Technology, Nara, Japan

Abstract

A large amount of research about multimodal
inference across text and vision has been re-
cently developed to obtain visually grounded
word and sentence representations. In this
paper, we use logic-based representations as
unified meaning representations for texts and
images and present an unsupervised multi-
modal logical inference system that can ef-
fectively prove entailment relations between
them. We show that by combining seman-
tic parsing and theorem proving, the system
can handle semantically complex sentences for
visual-textual inference.

1 Introduction

Multimodal inference across image data and text
has the potential to improve understanding infor-
mation of different modalities and acquiring new
knowledge. Recent studies of multimodal in-
ference provide challenging tasks such as visual
question answering (Antol et al., 2015; Hudson
and Manning, 2019; Acharya et al., 2019) and vi-
sual reasoning (Suhr et al., 2017; Vu et al., 2018;
Xie et al., 2018).

Grounded representations from image-text pairs
are useful to solve such inference tasks. With the
development of large-scale corpora such as Visual
Genome (Krishna et al., 2017) and methods of au-
tomatic graph generation from an image (Xu et al.,
2017; Qi et al., 2019), we can obtain structured
representations for images and sentences such as
scene graph (Johnson et al., 2015), a visually-
grounded graph over object instances in an image.

While graph representations provide more inter-
pretable representations for text and image than
embedding them into high-dimensional vector
spaces (Frome et al., 2013; Norouzi et al., 2014),
there remain two challenges: (i) to capture com-
plex logical meanings such as negation and quan-

7 No cat is next to a pumpkin. (1)
7 There are at least two cats. (2)
3All pumpkins are orange. (3)

Figure 1: An example of visual-textual entailment.
An image paired with logically complex statements,
namely, negation (1), numeral (2), and quantification
(3), leads to a true (3) or false (7) judgement.

tification, and (ii) to perform logical inferences on
them.

For example, consider the task of checking if
each statement in Figure 1 is true or false under
the situation described in the image. The state-
ments (1) and (2) are false, while (3) is true. To
perform this task, it is necessary to handle seman-
tically complex phenomena such as negation, nu-
meral, and quantification.

To enable such advanced visual-textual infer-
ences, it is desirable to build a framework for rep-
resenting richer semantic contents of texts and im-
ages and handling inference between them. We
use logic-based representations as unified meaning
representations for texts and images and present
an unsupervised inference system that can prove
entailment relations between them. Our visual-
textual inference system combines semantic pars-
ing via Combinatory Categorial Grammar (CCG;
Steedman (2000)) and first-order theorem prov-
ing (Blackburn and Bos, 2005). To describe infor-
mation in images as logical formulas, we propose
a method of transforming graph representations
into logical formulas, using the idea of predicate
circumscription (McCarthy, 1986), which comple-
ments information implicit in images using the
closed world assumption. Experiments show that
our system can perform visual-textual inference
with semantically complex sentences.



387

Figure 2: Overview of the proposed system. In this work, we assume the input image is processed into an FOL
structure or scene graph a priori. The system consists of three parts: (a) Graph Translator converts an image
annotated with a scene graph/FOL structure to formula M ; (b) Semantic parser maps a sentence to formula T via
CCG parsing; (c) Inference Engine checks whether M entails T by FOL theorem proving.

2 Background

There are two types of grounded meaning repre-
sentations for images: scene graphs and first-order
logic (FOL) structures. Both characterize objects
and their semantic relationships in images.

2.1 Scene Graph

A scene graph, as proposed in Johnson et al.
(2015), is a graphical representation that depicts
objects, their attributes, and relations among them
occurring in an image. An example is given in Fig-
ure 2. Nodes in a scene graph correspond to ob-
jects with their categories (e.g. woman) and edges
correspond to the relationships between objects
(e.g. touch). Such a graphical representation has
been shown to be useful in high-level tasks such
as image retrieval (Johnson et al., 2015; Schuster
et al., 2015) and visual question answering (Teney
et al., 2017). Our proposed method builds on the
idea that these graph representations can be trans-
lated into logical formulas and be used in complex
logical reasoning.

2.2 FOL Structure

In logic-based approaches to semantic represen-
tations, FOL structures (also called FOL models)
are used to represent semantic information in im-
ages (Hürlimann and Bos, 2016), An FOL struc-
ture is a pair (D, I) where D is a domain (also
called universe) consisting of all the entities in an

image and I is an interpretation function that maps
a 1-place predicate to a set of entities and a 2-place
predicate to a set of pairs of entities, and so on; for
instance, we write I(man) = {d1} if the entity
d1 is a man, and I(next to) = {(d1, d2)} if d1 is
next to d2. FOL structures have clear correspon-
dence with the graph representations of images in
that they both capture the categories, attributes and
relations holding of the entities in an image. For
instance, the FOL structure and scene graph in the
upper left of Figure 2 have exactly the same infor-
mation. Thus, the translation from graphs to for-
mulas can also work for FOL structures (see §3.1).

3 Multimodal Logical Inference System

Figure 2 shows the overall picture of the proposed
system. We use formulas of FOL with equality as
unified semantic representations for text and im-
age information. We use 1-place and 2-place pred-
icates for representing attributes and relations, re-
spectively. The language of FOL consists of (i) a
set of atomic formulas, (ii) equations of the form
t = u, and (iii) complex formulas composed of
negation (¬), conjunction (∧), disjunction (∨), im-
plication (→), and universal and existential quan-
tification (∀ and ∃). The expressive power of the
FOL language provides a structured representation
that captures not only objects and their semantic
relationships but also those complex expressions
including negation, quantification and numerals.



388

Trs(D) = entity(d1) ∧ . . . ∧ entity(dn)

Trs(P ) = P (d1) ∧ . . . ∧ P (dn′)

Trs(R) = R(di1 , dj1) ∧ . . . ∧R(din , djn)

Trc(D) = ∀x.(entity(x) ↔ (x = d1 ∨ . . . ∨ x = dn))

Trc(P ) = ∀x.(P (x) ↔ (x = d1 ∨ . . . ∨ x = dn′))

Trc(R) = ∀x∀y.(R(x, y) ↔ ((x = di1 ∧ y = dj1) ∨ . . .
∨ (x = dim ∧ y = djm)))

Table 1: Definition of two types of translation, TRs and
TRc. Here we assume that D = {d1, . . . , dn}, P =
{d1, . . . , dn′}, and R = {(di1 , dj1), . . . , (dim , djm)}.

The system takes as input an image I and a sen-
tence S and determines whether I entails S, in
other words, S is true with respect to the situation
described in I . In this work, we assume the in-
put image I is processed into a scene graph/FOL
structure GI using an off-the-shelf converter (Xu
et al., 2017; Qi et al., 2019).

To determine entailment relations between sen-
tences and images, we proceed in three steps.
First, graph translator maps a graph GI to a for-
mula M . We develop two ways of translating
graphs to FOL formulas (§3.1). Second, semantic
parser takes a sentence S as input and return a for-
mula T via CCG parsing. We improve a semantic
parser in CCG for handling numerals and quantifi-
cation (§3.2). Additionally, we develop a method
for utilizing image captions to extend GI with in-
formation obtainable from their logical formulas
(§3.3). Third, inference engine checks whether
M entails T , written M ⊢ T , using FOL theo-
rem prover (§3.4). Note that FOL theorem provers
can accept multiple premises, M1, . . . ,Mn, con-
verted from images and/or sentences and check if
M1, . . . ,Mn ⊢ T holds or not. Here we focus on
single-premise visual inference.

3.1 Graph Translator

We present two ways of translating graphs (or
equivalently, FOL structures) to formulas: a sim-
ple translation (Trs) and a complex translation
(Trc). These translations are defined in Ta-
ble 1. For example, consider a graph consist-
ing of the domain D = {d1, d2}, where we
have man(d1), hat(d2), red(d2) as properties and
wear(d1, d2) as relations. The simple translation
TRs gives the formula (S) below, which simply
conjoins all the atomic information.

(S) man(d1)∧hat(d2)∧ red(d2)∧wear(d1, d2)

1. A ∈ P, ¬A ∈ N , if A is an atomic formula.
2. A, ¬A ∈ P , if A is an equation of the form t=u.
3. A ∧B, A ∨B ∈ P , if A ∈ P and B ∈ P .
4. A ∧B, A ∨B ∈ N , if A ∈ N or B ∈ N .
5. A → B ∈ P , if A ∈ N and B ∈ P .
6. A → B ∈ N , if A ∈ P or B ∈ N .
7. ∀x.A, ∃x.A ∈ P , if A ∈ P .
8. ∀x.A, ∃x.A ∈ N , if A ∈ N .

Table 2: Positive (P) and negative (N ) formulas

However, this does not capture the negative in-
formation that d1 is the only entity that has the
property man; similarly for the other predicates.
To capture it, we use the complex translation Trc,
which gives the following formula:

(C) ∀x.(man(x) ↔ x = d1) ∧
∀y.(hat(y) ↔ y = d2) ∧
∀z.(red(z) ↔ z = d2) ∧
∀x∀y.(wear(x, y) ↔ (x = d1 ∧ y = d2))

This formula says that d1 is the only man in the
domain, d2 is the only hat in the domain, and
so on. This way of translation can be regarded
as an instance of Predicate Circumscription (Mc-
Carthy, 1986), which complement negative infor-
mation using the closed world assumption. The
translation Trc is useful for handling formulas with
negation and universal quantification.

One drawback here is that since (C) involves
complex formulas, it increases the computational
cost in theorem proving. To remedy this prob-
lem, we use two types of translation selectively,
depending on the polarity of the formula to be
proved. Table 2 shows the definition to classify
each FOL formula A ∈ L into positive (P) and
negative (N ) one. For instance, the formulas
∃x∃y.(cat(x) ∧ dog ∧ touch(x, y)), which corre-
spond to A cat touches a dog, is a positive for-
mula, while ¬∃x.(cat(x) ∧ white(x)), which cor-
responds to No cats are white, is a negative for-
mula.

3.2 Semantic Parser
We use ccg2lambda (Mineshima et al., 2015), a
semantic parsing system based on CCG to convert
sentences to formulas, and extend it to handle nu-
merals and quantificational sentences. In our sys-
tem, a sentence with numerals, e.g., There are (at
least) two cats, is compositionally mapped to the
following FOL formula:

(Num) ∃x∃y.(cat(x) ∧ cat(y) ∧ (x ̸= y))



389

Also, to capture the existential import of universal
sentences, the system maps the sentence All cats
are white to the following one:

(Q) ∃x.cat(x) ∧ ∀y.(cat(y) → white(y))

3.3 Extending Graphs with Captions

Compared with images, captions can describe a
variety of properties and relations other than spa-
tial and visual ones. By integrating caption infor-
mation into FOL structures, we can obtain seman-
tic representations reflecting relations that can be
described only in the caption.

We convert captions into FOL structures (=
graphs) using our semantic parser. We only con-
sider the cases where the formulas obtained are
composed of existential quantifiers and conjunc-
tions. For extending FOL structures with cap-
tion information, it is necessary to analyze co-
reference between the entities occurring in sen-
tences and images. We add a new predicate to an
FOL structure if the co-reference is uniquely de-
termined.

As an illustration, consider the captions and the
FOL structure (D, I) which represents the image
shown in Figure 2.1 The captions, (1a) and (2a),
are mapped to the formulas (1a) and (2b), respec-
tively, via semantic parsing.

(1) a. The woman is calling.

b. ∃x.(woman(x) ∧ calling(x))

(2) a. The woman is wearing glasses.

b. ∃x∃y.(woman(x) ∧ glasses(y)
∧ wear(x, y))

Then, the information in (1b) and (2b) can be
added to (D, I), because there is only one woman
d1 in (D, I) and thus the co-reference between the
woman in the caption and the entity d1 is uniquely
determined. Also, a new entity d5 for glasses is
added because there are no such entities in the
structure (D, I). Thus we obtain the following
new structure (D∗, I∗) extended with the informa-
tion in the captions.

D∗ := D ∪ {d5}
I∗ := I ∪ {(glasses, {d5}), (calling, {d1}),

(wear, {(d1, d5)})}
1Note that there is a unique correspondence between FOL

structures and scene graphs. For the sake of illustration, we
use FOL structures in this subsection.

Pattern Phenomena
There is a ⟨attr⟩ ⟨attr⟩ ⟨obj⟩ . Con
There are at least ⟨number⟩ ⟨obj⟩ . Num
All ⟨obj⟩ are ⟨attr⟩ . Q
⟨obj⟩ ⟨rel⟩ ⟨obj⟩ . Rel
No ⟨obj⟩ is ⟨attr⟩ . Neg
All ⟨obj⟩ ⟨attr⟩ or ⟨attr⟩ . Con, Q
Every ⟨obj⟩ is not ⟨rel⟩ ⟨obj⟩ . Num, Rel, Neg

Table 3: Examples of sentence templates. ⟨obj⟩ : ob-
jects, ⟨attr⟩ : attributes, ⟨rel⟩ : relations.

3.4 Inference Engine

Theorem prover is a method for judging whether a
formula M entails a formula T . We use Prover92

as an FOL prover for inference. We set timeout
(10 sec) to judge that M does not entail T .

4 Experiment

We evaluate the performance of the proposed
visual-textual inference system. Concretely, we
formulate our task as image retrieval using query
sentences and evaluate the performance in terms
of the number of correctly returned images. In
particular, we focus on semantically complex sen-
tences containing numerals, quantifiers, and nega-
tion, which are difficult for existing graph repre-
sentations to handle.

Dataset: We use two datasets: Visual
Genome (Krishna et al., 2017), which con-
tains pairs of scene graphs and images, and
GRIM dataset (Hürlimann and Bos, 2016), which
annotates an FOL structure of an image and two
types of captions (true and false sentences with
respect to the image). Note that our system is fully
unsupervised and does not require any training
data; in the following, we describe only test set
creation procedure.

For the experiment using Visual Genome, we
randomly extracted 200 images as test data, and
a separate set of 4,000 scene graphs for creating
query sentences; we made queries by the follow-
ing steps. First, we prepared sentence templates
focusing on five types of linguistic phenomena:
logical connective (Con), numeral (Num), quan-
tifier (Q), relation (Rel) and negation (Neg). See
Table 3 for the templates. Then, we manually ex-
tracted object, attribute and relation types from the
frequent ones (appearing more than 30 times) in
the extracted 4,000 graphs, and created queries by

2http://www.cs.unm.edu/ mccune/prover9/



390

Sentences Phenomena Count
There is a long red bus. Con 3
There are at least three men. Num 32
All windows are closed. Q 53
Every green tree is tall. Q 18
A man is wearing a hat. Rel 12
No umbrella is colorful. Neg 197
There is a train which is not red. Neg 6
There are two cups or three cups. Con, Num 5
All hairs are black or brown. Con, Q 46
A gray or black pole has two signs. Con, Num, Rel 6
Three cars are not red. Num, Neg 28
All women wear a hat. Q, Rel 2
A man is not walking on a street. Rel, Neg 76
A clock on a tower is not black. Rel, Neg 7
Two women aren’t having black hair. Num, Rel, Neg 10
Every man isn’t eating anything. Q, Rel, Neg 67

Table 4: Examples of query sentences In §4.1; Count
shows the number of images describing situations un-
der which each sentence is true.

replacing ⟨obj⟩ , ⟨attr⟩ and ⟨rel⟩ in the templates
with them. As a result, we obtained 37 semanti-
cally complex queries as shown in Table 4. To as-
sign correct images to each query, two annotators
judged whether each of the test images entails the
query sentence. If the two judgments disagreed,
the first author decided the correct label.

In the experiment using GRIM, we adopted the
same procedure to create a test dataset and ob-
tained 19 query sentences and 194 images.

One of the issues in this dataset is that annotated
FOL structures contain only spatial relations such
as next to and near; to handle queries containing
general relations such as play and sing, our sys-
tem needs to utilize annotated captions (§3.3). To
evaluate if our system can effectively extract infor-
mation from captions, we split Rel of above lin-
guistic phenomena into spatial relation (Spa-Rel;
relations about spatial information) and general re-
lation (Gen-Rel; other relations), and report the
scores separately in terms of these categories.

4.1 Experimental Results on Visual Genome

Firstly, we evaluate the performance in terms of
our Graph translator’s conversion algorithm. As
described in §3.1, there are two translation algo-
rithms; simple one that conjunctively enumerates
all relation in a graph (SIMPLE in the following),
and one that selectively employs translation based
on Predicate Circumscription (HYBRID).

Table 5 shows image retrieval scores per lin-
guistic phenomenon, macro averages of F1 scores
of queries labeled with the respective phenomena.

Phenomena (#) SIMPLE HYBRID
Con (17) 36.40 41.66
Num (9) 43.07 45.45

Q (9) 8.59 28.18
Rel (11) 25.13 35.10
Neg (11) 66.38 73.39

Table 5: Experimental results on Visual Genome (F1).
“#” stands for the number of query sentences catego-
rized into that phenomenon.

HYBRID shows better performance for all phe-
nomena than SIMPLE one, improving by 19.59%
on Q, 9.97% on Rel and 7.01% on Neg, over SIM-
PLE, suggesting that the proposed complex trans-
lation is useful for inference using semantically
complex sentences including quantifier and nega-
tion. Figure 3 shows retrieved results for a query
(a) Every green tree is tall and (b) No umbrella is
colorful, each containing universal quantifier and
negation, respectively. Our system successfully
performs inference on these queries, returning the
correct images, while excluding wrong ones (note
that the third picture in (a) contains short trees).

(a) Every green tree is tall.

(b) No umbrella is colorful.

Figure 3: Predicted images of our system; Images in
green entail the queries, while those in red do not.

Error Analysis: One of the reasons for the
lower F1 of Q is the gap of annotation rule be-
tween Visual Genome and our test set. Quan-
tifiers in natural language often involve vague-
ness (Pezzelle et al., 2018). for example, the in-
terpretation of everyone depends on what counts
as an entity in the domain. Difficulties in fixing
the interpretation of quantifiers caused the lower
performance.

The low F1 in Rel is primarily due to lexical
gaps between formulas of a query and an image.
For example, sentences All women wear a hat and
All women have a hat are the same in their mean-
ing. However, if a scene graph contains only wear



391

relation, our system can handle the former query,
while not the other. In future work, we will ex-
tend our system with a knowledge insertion mech-
anism (Martı́nez-Gómez et al., 2017).

4.2 Experimental Results on GRIM

We test our system on GRIM dataset. As noted
above, the main issue on this dataset is the lack of
relations other than spatial ones. We evaluate if
our system can be enhanced using the information
contained in captions. The F1 scores of the Hybrid
system with captions are the same with the one
without captions on the sets except for Gen-Rel;3
on the subset, the F1 score of the former improves
by 60% compared to the latter, which suggests that
captions can be integrated into FOL structures for
the improved performance.

5 Conclusion

We have proposed a logic-based system to achieve
advanced visual-textual inference, demonstrating
the importance of building a framework for rep-
resenting the richer semantic content of texts and
images. In the experiment, we have shown that our
CCG-based pipeline system, consisting of graph
translator, semantic parser and inference engine,
can perform visual-textual inference with seman-
tically complex sentences, without requiring any
supervised data.

Acknowledgement

We thank the two anonymous reviewers for their
encouragement and insightful comments. This
work was partially supported by JST CREST
Grant Number JPMJCR1301, Japan.

References
Manoj Acharya, Kushal Kafle, and Christopher Kanan. 2019.

TallyQA: Answering complex counting questions. In The
Association for the Advancement of Artificial Intelligence
(AAAI2019).

Stanislaw Antol, Aishwarya Agrawal, Jiasen Lu, Margaret
Mitchell, Dhruv Batra, C. Lawrence Zitnick, and Devi
Parikh. 2015. VQA: Visual Question Answering. In In-
ternational Conference on Computer Vision.

Patrick Blackburn and Johan Bos. 2005. Representation and
Inference for Natural Language: A First Course in Com-
putational Semantics. Center for the Study of Language
and Information, Stanford, CA, USA.

3Con: 91.41%, Num: 95.24%, Q: 78.84%, Spa-Rel:
88.57%, Neg: 62.57%.

Andrea Frome, Greg S Corrado, Jon Shlens, Samy Bengio,
Jeff Dean, Marc Aurelio Ranzato, and Tomas Mikolov.
2013. DeViSE: A Deep Visual-Semantic Embedding
Model. In Neural Information Processing Systems con-
ference, pages 2121–2129.

Drew A. Hudson and Christopher D. Manning. 2019. Gqa:
A new dataset for real-world visual reasoning and compo-
sitional question answering. In The IEEE Conference on
Computer Vision and Pattern Recognition (CVPR).

Manuela Hürlimann and Johan Bos. 2016. Combining lexical
and spatial knowledge to predict spatial relations between
objects in images. In Proceedings of the 5th Workshop on
Vision and Language, pages 10–18. Association for Com-
putational Linguistics.

Justin Johnson, Ranjay Krishna, Michael Stark, Li-Jia Li,
David A. Shamma, Michael S. Bernstein, and Li Fei-Fei.
2015. Image retrieval using scene graphs. In IEEE/ CVF
International Conference on Computer Vision and Pattern
Recognition, pages 3668–3678. IEEE Computer Society.

Ranjay Krishna, Yuke Zhu, Oliver Groth, Justin Johnson,
Kenji Hata, Joshua Kravitz, Stephanie Chen, Yannis
Kalantidis, Li-Jia Li, David A Shamma, Michael Bern-
stein, and Li Fei-Fei. 2017. Visual genome: Connect-
ing language and vision using crowdsourced dense image
annotations. International Journal of Computer Vision,
123(1):32–73.

Pascual Martı́nez-Gómez, Koji Mineshima, Yusuke Miyao,
and Daisuke Bekki. 2017. On-demand Injection of Lex-
ical Knowledge for Recognising Textual Entailment. In
Proceedings of The European Chapter of the Association
for Computational Linguistics, pages 710–720.

John McCarthy. 1986. Applications of circumscription to
formalizing common-sense knowledge. Artificial Intelli-
gence, 28(1):89–116.

Koji Mineshima, Pascual Martı́nez-Gómez, Yusuke Miyao,
and Daisuke Bekki. 2015. Higher-order logical inference
with compositional semantics. In Proceedings of the 2015
Conference on Empirical Methods in Natural Language
Processing, pages 2055–2061. Association for Computa-
tional Linguistics.

Mohammad Norouzi, Tomas Mikolov, Samy Bengio, Yoram
Singer, Jonathon Shlens, Andrea Frome, Greg Corrado,
and Jeffrey Dean. 2014. Zero-Shot Learning by Convex
Combination of Semantic Embeddings. In International
Conference on Learning Representations.

Sandro Pezzelle, Ionut-Teodor Sorodoc, and Raffaella
Bernardi. 2018. Comparatives, quantifiers, proportions:
a multi-task model for the learning of quantities from vi-
sion. In Proceedings of the 2018 Conference of the North
American Chapter of the Association for Computational
Linguistics: Human Language Technologies, pages 419–
430. Association for Computational Linguistics.

Mengshi Qi, Weijian Li, Zhengyuan Yang, Yunhong Wang,
and Jiebo Luo. 2019. Attentive relational networks for
mapping images to scene graphs. In The IEEE Conference
on Computer Vision and Pattern Recognition.

Sebastian Schuster, Ranjay Krishna, Angel Chang, Li Fei-
Fei, and Christopher D. Manning. 2015. Generating se-
mantically precise scene graphs from textual descriptions
for improved image retrieval. In Proceedings of the Fourth
Workshop on Vision and Language, pages 70–80. Associ-
ation for Computational Linguistics.



392

Mark Steedman. 2000. The Syntactic Process. MIT Press,
Cambridge, MA, USA.

Alane Suhr, Mike Lewis, James Yeh, and Yoav Artzi. 2017.
A corpus of natural language for visual reasoning. In Pro-
ceedings of the 55th Annual Meeting of the Association
for Computational Linguistics (Volume 2: Short Papers),
pages 217–223, Vancouver, Canada. Association for Com-
putational Linguistics.

Damien Teney, Lingqiao Liu, and Anton van den Hengel.
2017. Graph-structured representations for visual ques-
tion answering. In The IEEE Conference on Computer
Vision and Pattern Recognition, pages 3233–3241.

Hoa Trong Vu, Claudio Greco, Aliia Erofeeva, Somayeh Ja-
faritazehjan, Guido Linders, Marc Tanti, Alberto Testoni,
Raffaella Bernardi, and Albert Gatt. 2018. Grounded tex-
tual entailment. In Proceedings of the 27th International
Conference on Computational Linguistics, pages 2354–
2368.

Ning Xie, Farley Lai, Derek Doran, and Asim Kadav. 2018.
Visual entailment task for visually-grounded language
learning. arXiv preprint arXiv:1811.10582.

Danfei Xu, Yuke Zhu, Christopher B. Choy, and Li Fei-Fei.
2017. Scene Graph Generation by Iterative Message Pass-
ing. In The IEEE Conference on Computer Vision and
Pattern Recognition.


