



















































DSGAN: Generative Adversarial Training for Distant Supervision Relation Extraction


Proceedings of the 56th Annual Meeting of the Association for Computational Linguistics (Long Papers), pages 496–505
Melbourne, Australia, July 15 - 20, 2018. c©2018 Association for Computational Linguistics

496

DSGAN: Generative Adversarial Training for Distant Supervision
Relation Extraction

Pengda Qin], Weiran Xu], William Yang Wang[
]Beijing University of Posts and Telecommunications, China

[University of California, Santa Barbara, USA
{qinpengda, xuweiran}@bupt.edu.cn

{william}@cs.ucsb.edu

Abstract

Distant supervision can effectively label
data for relation extraction, but suffers
from the noise labeling problem. Recent
works mainly perform soft bag-level noise
reduction strategies to find the relatively
better samples in a sentence bag, which is
suboptimal compared with making a hard
decision of false positive samples in sen-
tence level. In this paper, we introduce
an adversarial learning framework, which
we named DSGAN, to learn a sentence-
level true-positive generator. Inspired by
Generative Adversarial Networks, we re-
gard the positive samples generated by the
generator as the negative samples to train
the discriminator. The optimal generator is
obtained until the discrimination ability of
the discriminator has the greatest decline.
We adopt the generator to filter distant su-
pervision training dataset and redistribute
the false positive instances into the nega-
tive set, in which way to provide a cleaned
dataset for relation classification. The ex-
perimental results show that the proposed
strategy significantly improves the perfor-
mance of distant supervision relation ex-
traction comparing to state-of-the-art sys-
tems.

1 Introduction

Relation extraction is a crucial task in the field
of natural language processing (NLP). It has a
wide range of applications including information
retrieval, question answering, and knowledge base
completion. The goal of relation extraction sys-
tem is to predict relation between entity pair in
a sentence (Zelenko et al., 2003; Bunescu and
Mooney, 2005; GuoDong et al., 2005). For exam-

DS data space

DS true positive data

DS false positive data

DS negative data

The decision boundary
of DS data

The desired decision
boundary

Figure 1: Illustration of the distant supervision
training data distribution for one relation type.

ple, given a sentence “The [owl]e1 held the mouse
in its [claw]e2.”, a relation classifier should figure
out the relation Component-Whole between en-
tity owl and claw.

With the infinite amount of facts in real world,
it is extremely expensive, and almost impossible
for human annotators to annotate training dataset
to meet the needs of all walks of life. This prob-
lem has received increasingly attention. Few-
shot learning and Zero-shot Learning (Xian et al.,
2017) try to predict the unseen classes with few
labeled data or even without labeled data. Dif-
ferently, distant supervision (Mintz et al., 2009;
Hoffmann et al., 2011; Surdeanu et al., 2012) is
to efficiently generate relational data from plain
text for unseen relations with distant supervision
(DS). However, it naturally brings with some de-
fects: the resulted distantly-supervised training
samples are often very noisy (shown in Figure 1),
which is the main problem of impeding the per-
formance (Roth et al., 2013). Most of the cur-
rent state-of-the-art methods (Zeng et al., 2015;
Lin et al., 2016) make the denoising operation in
the sentence bag of entity pair, and integrate this
process into the distant supervision relation ex-



497

traction. Indeed, these methods can filter a sub-
stantial number of noise samples; However, they
overlook the case that all sentences of an entity
pair are false positive, which is also the common
phenomenon in distant supervision datasets. Un-
der this consideration, an independent and accu-
rate sentence-level noise reduction strategy is the
better choice.

In this paper, we design an adversarial learning
process (Goodfellow et al., 2014; Radford et al.,
2015) to obtain a sentence-level generator that can
recognize the true positive samples from the noisy
distant supervision dataset without any supervised
information. In Figure 1, the existence of false
positive samples makes the DS decision boundary
suboptimal, therefore hinders the performance of
relation extraction. However, in terms of quan-
tity, the true positive samples still occupy most
of the proportion; this is the prerequisite of our
method. Given the discriminator that possesses
the decision boundary of DS dataset (the brown
decision boundary in Figure 1), the generator tries
to generate true positive samples from DS posi-
tive dataset; Then, we assign the generated sam-
ples with negative label and the rest samples with
positive label to challenge the discriminator. Un-
der this adversarial setting, if the generated sam-
ple set includes more true positive samples and
more false positive samples are left in the rest set,
the classification ability of the discriminator will
drop faster. Empirically, we show that our method
has brought consistent performance gains in vari-
ous deep-neural-network-based models, achieving
strong performances on the widely used New York
Times dataset (Riedel et al., 2010). Our contribu-
tions are three-fold:

• We are the first to consider adversarial learn-
ing to denoise the distant supervision relation
extraction dataset.

• Our method is sentence-level and model-
agnostic, so it can be used as a plug-and-play
technique for any relation extractors.

• We show that our method can generate a
cleaned dataset without any supervised infor-
mation, in which way to boost the perfor-
mance of recently proposed neural relation
extractors.

In Section 2, we outline some related works on
distant supervision relation extraction. Next, we

describe our adversarial learning strategy in Sec-
tion 3. In Section 4, we show the stability analyses
of DSGAN and the empirical evaluation results.
And finally, we conclude in Section 5.

2 Related Work

To address the above-mentioned data sparsity is-
sue, Mintz et al. (2009) first align unlabeled
text corpus with Freebase by distant supervision.
However, distant supervision inevitably suffers
from the wrong labeling problem. Instead of ex-
plicitly removing noisy instances, the early works
intend to suppress the noise. Riedel et al. (2010)
adopt multi-instance single-label learning in rela-
tion extraction; Hoffmann et al. (2011) and Sur-
deanu et al. (2012) model distant supervision re-
lation extraction as a multi-instance multi-label
problem.

Recently, some deep-learning-based mod-
els (Zeng et al., 2014; Shen and Huang, 2016)
have been proposed to solve relation extraction.
Naturally, some works try to alleviate the wrong
labeling problem with deep learning technique,
and their denoising process is integrated into rela-
tion extraction. Zeng et al. (2015) select one most
plausible sentence to represent the relation be-
tween entity pairs, which inevitably misses some
valuable information. Lin et al. (2016) calculate
a series of soft attention weights for all sentences
of one entity pair and the incorrect sentences can
be down-weighted; Base on the same idea, Ji et al.
(2017) bring the useful entity information into the
calculation of the attention weights. However,
compared to these soft attention weight assign-
ment strategies, recognizing the true positive
samples from distant supervision dataset before
relation extraction is a better choice. Takamatsu
et al. (2012) build a noise-filtering strategy based
on the linguistic features extracted from many
NLP tools, including NER and dependency tree,
which inevitably suffers the error propagation
problem; while we just utilize word embedding
as the input information. In this work, we learn
a true-positive identifier (the generator) which is
independent of the relation prediction of entity
pairs, so it can be directly applied on top of any
existing relation extraction classifiers. Then, we
redistribute the false positive samples into the
negative set, in which way to make full use of the
distantly labeled resources.



498

3 Adversarial Learning for Distant
Supervision

In this section, we introduce an adversarial learn-
ing pipeline to obtain a robust generator which can
automatically discover the true positive samples
from the noisy distantly-supervised dataset with-
out any supervised information. The overview of
our adversarial learning process is shown in Fig-
ure 2. Given a set of distantly-labeled sentences,
the generator tries to generate true positive sam-
ples from it; But, these generated samples are re-
garded as negative samples to train the discrimina-
tor. Thus, when finishing scanning the DS positive
dataset one time, the more true positive samples
that the generator discovers, the sharper drop of
performance the discriminator obtains. After ad-
versarial training, we hope to obtain a robust gen-
erator that is capable of forcing discriminator into
maximumly losing its classification ability.

In the following section, we describe the adver-
sarial training pipeline between the generator and
the discriminator, including the pre-training strat-
egy, objective functions and gradient calculation.
Because the generator involves a discrete sampling
step, we introduce a policy gradient method to cal-
culate gradients for the generator.

3.1 Pre-Training Strategy

Both the generator and the discriminator require
the pre-training process, which is the common set-
ting for GANs (Cai and Wang, 2017; Wang et al.,
2017). With the better initial parameters, the ad-
versarial learning is prone to convergence. As pre-
sented in Figure 2, the discriminator is pre-trained
with DS positive dataset P (label 1) and DS nega-
tive set ND (label 0). After our adversarial learn-
ing process, we desire a strong generator that can,
to the maximum extent, collapse the discrimina-
tor. Therefore, the more robust generator can be
obtained via competing with the more robust dis-
criminator. So we pre-train the discriminator un-
til the accuracy reaches 90% or more. The pre-
training of generator is similar to the discrimi-
nator; however, for the negative dataset, we use
another completely different dataset NG, which
makes sure the robustness of the experiment. Spe-
cially, we let the generator overfits the DS posi-
tive dataset P . The reason of this setting is that
we hope the generator wrongly give high proba-
bilities to all of the noisy DS positive samples at
the beginning of the training process. Then, along

with our adversarial learning, the generator learns
to gradually decrease the probabilities of the false
positive samples.

3.2 Generative Adversarial Training for
Distant Supervision Relation Extraction

The generator and the discriminator of DSGAN
are both modeled by simple CNN, because CNN
performs well in understanding sentence (Zeng
et al., 2014), and it has less parameters than RNN-
based networks. For relation extraction, the input
information consists of the sentences and entity
pairs; thus, as the common setting (Zeng et al.,
2014; Nguyen and Grishman, 2015), we use both
word embedding and position embedding to con-
vert input instances into continuous real-valued
vectors.

What we desire the generator to do is to ac-
curately recognize true positive samples. Unlike
the generator applied in computer vision field (Im
et al., 2016) that generates new image from the
input noise, our generator just needs to discover
true positive samples from the noisy DS posi-
tive dataset. Thus, it is to realize the “sampling
from a probability distribution” process of the dis-
crete GANs (Figure 2). For a input sentence sj ,
we define the probability of being true positive
sample by generator as pG(sj). Similarly, for
discriminator, the probability of being true pos-
itive sample is represented as pD(sj). We de-
fine that one epoch means that one time scan-
ning of the entire DS positive dataset. In or-
der to obtain more feedbacks and make the train-
ing process more efficient, we split the DS posi-
tive dataset P = {s1, s2, ..., sj , ...} into N bags
B = {B1, B2, ...BN}, and the network parame-
ters θG, θD are updated when finishing processing
one bag Bi1. Based on the notion of adversarial
learning, we define the objectives of the generator
and the discriminator as follow, and they are al-
ternatively trained towards their respective objec-
tives.

Generator Suppose that the generator produces
a set of probability distribution {pG(sj)}j=1...|Bi|
for a sentence bag Bi. Based on these probabili-
ties, a set of sentence are sampled and we denote
this set as T .

T = {sj}, sj ∼ pG(sj), j = 1, 2, ..., |Bi| (1)
1The bag here has the different definition from the sen-

tence bag of an entity pair mentioned in the Section 1.



499

Epoch 𝑖

Bag%&'

Bag%

Bag%('

…
…

DS Positive
Dataset

𝑠'
𝑠*
𝑠+

…

	𝑠-

G

…

𝑝' = 0.57

𝑝* = 0.02

𝑝+ = 0.83

𝑝7 = 0.26

𝑝9 = 0.90

Sampling

𝑙𝑎𝑏𝑒𝑙 = 1

𝑙𝑎𝑏𝑒𝑙 = 0
D

𝑟𝑒𝑤𝑎𝑟𝑑

DS positive
dataset

DS negative
dataset

𝑙𝑎𝑏𝑒𝑙 = 1

𝑙𝑎𝑏𝑒𝑙 = 0

Pre-training

𝑝- = 0.7

High-confidence
samples

Load
Parameter

Low-confidence
samples

Generator Discriminator

Figure 2: An overview of the DSGAN training pipeline. The generator (denoted by G) calculates the
probability distribution over a bag of DS positive samples, and then samples according to this probability
distribution. The high-confidence samples generated by G are regarded as true positive samples. The dis-
criminator (denoted by D) receives these high-confidence samples but regards them as negative samples;
conversely, the low-confidence samples are still treated as positive samples. For the generated samples,
G maximizes the probability of being true positive; on the contrary, D minimizes this probability.

This generated dataset T consists of the high-
confidence sentences, and is regard as true posi-
tive samples by the current generator; however, it
will be treated as the negative samples to train the
discriminator. In order to challenge the discrimi-
nator, the objective of the generator can be formu-
lated as maximizing the following probabilities of
the generated dataset T :

LG =
∑
sj∈T

log pD(sj) (2)

Because LG involves a discrete sampling step,
so it cannot be directly optimized by gradient-
based algorithm. We adopt a common approach:
the policy-gradient-based reinforcement learning.
The following section will give the detailed intro-
duction of the setting of reinforcement learning.
The parameters of the generator are continually
updated until reaching the convergence condition.

Discriminator After the generator has gener-
ated the sample subset T , the discriminator treats
them as the negative samples; conversely, the rest
part F = Bi−T is treated as positive samples. So,
the objective of the discriminator can be formu-
lated as minimizing the following cross-entropy
loss function:

(3)

LD = −(
∑

sj∈(Bi−T )

log pD(sj)

+
∑
sj∈T

log(1− pD(sj)))

The update of discriminator is identical to the
common binary classification problem. Naturally,
it can be simply optimized by any gradient-based
algorithm.

What needs to be explained is that, unlike
the common setting of discriminator in previ-
ous works, our discriminator loads the same pre-
trained parameter set at the beginning of each
epoch as shown in Figure 2. There are two rea-
sons. First, at the end of our adversarial training,
what we need is a robust generator rather than a
discriminator. Second, our generator is to sample
data rather than generate new data from scratch;
Therefore, the discriminator is relatively easy to be
collapsed. So we design this new adversarial strat-
egy: the robustest generator is yielded when the
discriminator has the largest drop of performance
in one epoch. In order to create the equal con-
dition, the bag set B for each epoch is identical,
including the sequence and the sentences in each



500

Algorithm 1 The DSGAN algorithm.
Data: DS positive set P , DS negative set NG for generator G, DS negative set ND for discriminator D
Input: Pre-trained G with parameters θG on dataset (P , NG); Pre-trained D with parameters θD on

dataset (P , ND)
Output: Adversarially trained generator G

1: Load parameters θG for G
2: Split P into the bag sequence P = {B1, B2, ..., Bi, ..., BN}
3: repeat
4: Load parameters θD for D
5: GG ← 0, GD ← 0
6: for Bi ∈ P, i = 1 toN do
7: Compute the probability pG(sj) for each sentence sj in Bi
8: Obtain the generated part T by sampling according to {pG(sj)}j=1...|B| and the rest set F =
Bi − T

9: GD ← − 1|P |{5θD
∑T log(1− pD(sj)) +5θD ∑F log pD(sj)}

10: θD ← θD − αDGD
11: Calculate the reward r
12: GG ← 1|T |

∑T r5θG log pG(sj)
13: θG ← θG + αGGG
14: end for
15: Compute the accuracy ACCD on ND with the current θD
16: until ACCD no longer drops
17: Save θG

bag Bi.

Optimizing Generator The objective of the
generator is similar to the objective of the one-step
reinforcement learning problem: Maximizing the
expectation of a given function of samples from a
parametrized probability distribution. Therefore,
we use a policy gradient strategy to update the
generator. Corresponding to the terminology of
reinforcement learning, sj is the state and PG(sj)
is the policy. In order to better reflect the quality
of the generator, we define the reward r from two
angles:

• As the common setting in adversarial learn-
ing, for the generated sample set, we hope
the confidence of being positive samples by
the discriminator becomes higher. Therefore,
the first component of our reward is formu-
lated as below:

r1 =
1

|T |
∑
sj∈T

pD(sj)− b1 (4)

the function of b1 is to reduce variance during
reinforcement learning.

• The second component is from the average

prediction probability of ND,

p̃ =
1

|ND|
∑

sj∈ND
pD(sj) (5)

ND participates the pre-training process of
the discriminator, but not the adversarial
training process. When the classification ca-
pacity of discriminator declines, the accuracy
of being predicted as negative sample on ND

gradually drops; thus, p̃ increases. In other
words, the generator becomes better. There-
fore, for epoch k, after processing the bagBi,
reward r2 is calculated as below,

r2 = η(p̃
k
i − b2)

where b2=max{p̃mi },m=1..., k−1
(6)

b2 has the same function as b1.

The gradient of LG can be formulated as below:

5θDLG =
∑
sj∈Bi

Esj∼pG(sj)r5θG log pG(sj)

=
1

|T |
∑
sj∈T

r5θG log pG(sj)

(7)



501

3.3 Cleaning Noisy Dataset with Generator
After our adversarial learning process, we obtain
one generator for one relation type; These genera-
tors possess the capability of generating true pos-
itive samples for the corresponding relation type.
Thus, we can adopt the generator to filter the noise
samples from distant supervision dataset. Simply
and clearly, we utilize the generator as a binary
classifier. In order to reach the maximum utiliza-
tion of data, we develop a strategy: for an en-
tity pair with a set of annotated sentences, if all
of these sentences are determined as false nega-
tive by our generator, this entity pair will be redis-
tributed into the negative set. Under this strategy,
the scale of distant supervision training set keeps
unchanged.

4 Experiments

This paper proposes an adversarial learning strat-
egy to detect true positive samples from the noisy
distant supervision dataset. Due to the absence
of supervised information, we define a genera-
tor to heuristically learn to recognize true posi-
tive samples through competing with a discrim-
inator. Therefore, our experiments are intended
to demonstrate that our DSGAN method possess
this capability. To this end, we first briefly intro-
duce the dataset and the evaluation metrics. Em-
pirically, the adversarial learning process, to some
extent, has instability; Therefore, we next illus-
trate the convergence of our adversarial training
process. Finally, we demonstrate the efficiency
of our generator from two angles: the quality of
the generated samples and the performance on the
widely-used distant supervision relation extraction
task.

4.1 Evaluation and Implementation Details
The Reidel dataset2 (Riedel et al., 2010) is a
commonly-used distant supervision relation ex-
traction dataset. Freebase is a huge knowledge
base including billions of triples: the entity pair
and the specific relationship between them. Given
these triples, the sentences of each entity pair are
selected from the New York Times corpus(NYT).
Entity mentions of NYT corpus are recognized by
the Stanford named entity recognizer (Finkel et al.,
2005). There are 52 actual relationships and a spe-
cial relation NA which indicates there is no rela-
tion between head and tail entities. Entity pairs of

2http://iesl.cs.umass.edu/riedel/ecml/

Hyperparameter Value
CNN Window cw, kernel size ck 3, 100

Word embedding de, |V | 50, 114042
Position embedding dp 5
Learning rate of G, D 1e-5, 1e-4

Table 1: Hyperparameter settings of the generator
and the discriminator.

NA are defined as the entity pairs that appear in
the same sentence but are not related according to
Freebase.

Due to the absence of the corresponding labeled
dataset, there is not a ground-truth test dataset to
evaluate the performance of distant supervision re-
lation extraction system. Under this circumstance,
the previous work adopt the held-out evaluation
to evaluate their systems, which can provide an
approximate measure of precision without requir-
ing costly human evaluation. It builds a test set
where entity pairs are also extracted from Free-
base. Similarly, relation facts that discovered from
test articles are automatically compared with those
in Freebase. CNN is widely used in relation clas-
sification (Santos et al., 2015; Qin et al., 2017),
thus the generator and the discriminator are both
modeled as a simple CNN with the window size
cw and the kernel size ck. Word embedding is di-
rectly from the released word embedding matrix
by Lin et al. (2016)3. Position embedding has the
same setting with the previous works: the maxi-
mum distance of -30 and 30. Some detailed hy-
perparameter settings are displayed in Table 1.

4.2 Training Process of DSGAN
Because adversarial learning is widely regarded
as an effective but unstable technique, here
we illustrate some property changes during the
training process, in which way to indicate the
learning trend of our proposed approach. We
use 3 relation types as the examples: /busi-
ness/person/company, /people/person/place lived
and /location/neighborhood/neighborhood of.
Because they are from three major classes (bussi-
ness, people, location) of Reidel dataset and they
all have enough distant-supervised instances.
The first row in Figure 3 shows the classification
ability change of the discriminator during training.
The accuracy is calculated from the negative set
ND. At the beginning of adversarial learning, the

3https://github.com/thunlp/NRE



502

0.63

0.66

0.69

0.72

0.75

0.78

0.81

0.84

0.87

0.9

0.93

0.96

0.99

6 8 10 12 14 16 18 20 22 24 26 28

F1
Sc
or
e

Epoch

Random
Pre-training
DSGAN

0.7

0.73

0.76

0.79

0.82

0.85

0.88

0.91

0.94

0.97

1

1.03

6 8 10 12 14 16 18 20 22 24 26 28

F1
Sc
or
e

Epoch

Random
Pre-training
DSGAN

0.93

0.94

0.95

0.96

0.97

0.98

0.99

1

1.01

1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17

Ac
cu
ra
cy

Bag Sequence

0.73

0.76

0.79

0.82

0.85

0.88

0.91

0.94

0.97

1

1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17

Ac
cu
ra
cy

Bag Sequence

0.8

0.83

0.86

0.89

0.92

0.95

0.98

1.01

1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17

Ac
cu
ra
cy

Bag Sequence

0.7

0.73

0.76

0.79

0.82

0.85

0.88

0.91

0.94

0.97

1

6 8 10 12 14 16 18 20 22 24 26 28

F1
Sc
or
e

Epoch

Random
Pre-training
DSGAN

/business/person/company

/business/person/company /people/person/place_lived

/people/person/place_lived

/location/neighborhood/neighborhood_of

/location/neighborhood/neighborhood_of

Figure 3: The convergence of the DSGAN training process for 3 relation types and the performance of
their corresponding generators. The figures in the first row present the performance change on ND in
some specific epochs during processing the B = {B1, B2, ...BN}. Each curve stands for one epoch;
The color of curves become darker as long as the epoch goes on. Because the discriminator reloads
the pre-trained parameters at the beginning of each epoch, all curves start from the same point for each
relation type; Along with the adversarial training, the generator gradually collapses the discriminator.
The figures in the second row reflect the performance of generators from the view of the difficulty level
of training with the positive datasets that are generated by different strategies. Based on the noisy DS
positive dataset P , DSGAN represents that the cleaned positive dataset is generated by our DSGAN
generator; Random means that the positive set is randomly selected from P ; Pre-training denotes that
the dataset is selected according to the prediction probability of the pre-trained generator. These three
new positive datasets are in the same size.

discriminator performs well on ND; moreover,
ND is not used during adversarial training.
Therefore, the accuracy on ND is the criterion
to reflect the performance of the discriminator.
In the early epochs, the generated samples from
the generator increases the accuracy, because it
has not possessed the ability of challenging the
discriminator; however, as the training epoch
increases, this accuracy gradually decreases,
which means the discriminator becomes weaker.
It is because the generator gradually learn to
generate more accurate true positive samples in
each bag. After the proposed adversarial learning
process, the generator is strong enough to collapse
the discriminator. Figure 4 gives more intuitive
display of the trend of accuracy. Note that there
is a critical point of the decline of accuracy for
each presented relation types. It is because that
the chance we give the generator to challenge
the discriminator is just one time scanning of

the noisy dataset; this critical point is yielded
when the generator has already been robust
enough. Thus, we stop the training process when
the model reaches this critical point. To sum
up, the capability of our generator can steadily
increases, which indicates that DSGAN is a robust
adversarial learning strategy.

4.3 Quality of Generator

Due to the absence of supervised information, we
validate the quality of the generator from another
angle. Combining with Figure 1, for one rela-
tion type, the true positive samples must have ev-
idently higher relevance (the cluster of purple cir-
cles). Therefore, a positive set with more true
positive samples is easier to be trained; In other
words, the convergence speed is faster and the fit-
ting degree on training set is higher. Based on
this , we present the comparison tests in the sec-
ond row of Figure 3. We build three positive



503

0.5

0.55

0.6

0.65

0.7

0.75

0.8

0.85

0.9

0.95

1

1.05

5 15 25 35 45 55 65 75 85

Ac
cu
ra
cy

Epoch

/business/person/company
/people/person/place_lived
/location/neighborhood/neighborhood_of

Figure 4: The performance change of the discrim-
inator on ND during the training process. Each
point in the curves records the prediction accuracy
on ND when finishing each epoch. We stop the
training process when this accuracy no longer de-
creases.

datasets from the noisy distant supervision dataset
P : the randomly-selected positive set, the positive
set base on the pre-trained generator and the pos-
itive set base on the DSGAN generator. For the
pre-trained generator, the positive set is selected
according to the probability of being positive from
high to low. These three sets have the same size
and are accompanied by the same negative set.
Obviously, the positive set from the DSGAN gen-
erator yields the best performance, which indicates
that our adversarial learning process is able to pro-
duce a robust true-positive generator. In addition,
the pre-trained generator also has a good perfor-
mance; however, compared with the DSGAN gen-
erator, it cannot provide the boundary between the
false positives and the true positives.

4.4 Performance on Distant Supervision
Relation Extraction

Based on the proposed adversarial learning pro-
cess, we obtain a generator that can recognize the
true positive samples from the noisy distant super-
vision dataset. Naturally, the improvement of dis-
tant supervision relation extraction can provide a
intuitive evaluation of our generator. We adopt the
strategy mentioned in Section 3.3 to relocate the
dataset. After obtaining this redistributed dataset,
we apply it to train the recent state-of-the-art mod-
els and observe whether it brings further improve-
ment for these systems. Zeng et al. (2015) and Lin
et al. (2016) are both the robust models to solve
wrong labeling problem of distant supervision re-
lation extraction. According to the comparison
displayed in Figure 5 and Figure 6, all four mod-

0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4

Recall

0.3

0.4

0.5

0.6

0.7

0.8

0.9

1

Pr
ec
is
io
n

CNN+ONE
CNN+ONE+DSGAN
CNN+ATT
CNN+ATT+DSGAN

Figure 5: Aggregate PR curves of CNN˙based
model.

0 0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4

Recall

0.4

0.5

0.6

0.7

0.8

0.9

1

Pr
ec
is
io
n

PCNN+ONE
PCNN+ONE+DSGAN
PCNN+ATT
PCNN+ATT+DSGAN

Figure 6: Aggregate PR curves of PCNN˙based
model.

els (CNN+ONE, CNN+ATT, PCNN+ONE and
PCNN+ATT) achieve further improvement.

Even though Zeng et al. (2015) and Lin et al.
(2016) are designed to alleviate the influence of
false positive samples, both of them merely focus
on the noise filtering in the sentence bag of en-
tity pairs. Zeng et al. (2015) combine at-least-one
multi-instance learning with deep neural network
to extract only one active sentence to represent the
target entity pair; Lin et al. (2016) assign soft at-
tention weights to the representations of all sen-
tences of one entity pair, then employ the weighted
sum of these representations to predict the rela-
tion between the target entity pair. However, from
our manual inspection of Riedel dataset (Riedel
et al., 2010), we found another false positive case
that all the sentences of a specific entity pair are
wrong; but the aforementioned methods overlook



504

Model - +DSGAN p-value
CNN+ONE 0.177 0.189 4.37e-04
CNN+ATT 0.219 0.226 8.36e-03
PCNN+ONE 0.206 0.221 2.89e-06
PCNN+ATT 0.253 0.264 2.34e-03

Table 2: Comparison of AUC values between
previous studies and our DSGAN method. The p-
value stands for the result of t-test evaluation.

this case, while the proposed method can solve this
problem. Our DSGAN pipeline is independent of
the relation prediction of entity pairs, so we can
adopt our generator as the true-positive indicator
to filter the noisy distant supervision dataset be-
fore relation extraction, which explains the origin
of these further improvements in Figure 5 and Fig-
ure 6. In order to give more intuitive compari-
son, in Table 2, we present the AUC value of each
PR curve, which reflects the area size under these
curves. The larger value of AUC reflects the better
performance. Also, as can be seen from the result
of t-test evaluation, all the p-values are less than
5e-02, so the improvements are obvious.

5 Conclusion

Distant supervision has become a standard method
in relation extraction. However, while it brings
the convenience, it also introduces noise in dis-
tantly labeled sentences. In this work, we propose
the first generative adversarial training method
for robust distant supervision relation extraction.
More specifically, our framework has two com-
ponents: a generator that generates true positives,
and a discriminator that tries to classify positive
and negative data samples. With adversarial train-
ing, our goal is to gradually decrease the perfor-
mance of the discriminator, while the generator
improves the performance for predicting true pos-
itives when reaching equilibrium. Our approach
is model-agnostic, and thus can be applied to any
distant supervision model. Empirically, we show
that our method can significantly improve the per-
formances of many competitive baselines on the
widely used New York Time dataset.

Acknowledge

This work was supported by National Natural Sci-
ence Foundation of China (61702047), Beijing
Natural Science Foundation (4174098), the Fun-
damental Research Funds for the Central Univer-

sities (2017RC02) and National Natural Science
Foundation of China (61703234)

References
Razvan Bunescu and Raymond J Mooney. 2005. Sub-

sequence kernels for relation extraction. In NIPS,
pages 171–178.

Liwei Cai and William Yang Wang. 2017. Kbgan: Ad-
versarial learning for knowledge graph embeddings.
arXiv preprint arXiv:1711.04071.

Jenny Rose Finkel, Trond Grenager, and Christopher
Manning. 2005. Incorporating non-local informa-
tion into information extraction systems by gibbs
sampling. In Proceedings of the 43rd annual meet-
ing on association for computational linguistics,
pages 363–370. Association for Computational Lin-
guistics.

Ian Goodfellow, Jean Pouget-Abadie, Mehdi Mirza,
Bing Xu, David Warde-Farley, Sherjil Ozair, Aaron
Courville, and Yoshua Bengio. 2014. Generative ad-
versarial nets. In Advances in neural information
processing systems, pages 2672–2680.

Zhou GuoDong, Su Jian, Zhang Jie, and Zhang Min.
2005. Exploring various knowledge in relation ex-
traction. In Proceedings of the 43rd annual meeting
on association for computational linguistics, pages
427–434. Association for Computational Linguis-
tics.

Raphael Hoffmann, Congle Zhang, Xiao Ling, Luke
Zettlemoyer, and Daniel S Weld. 2011. Knowledge-
based weak supervision for information extraction
of overlapping relations. In Proceedings of the 49th
Annual Meeting of the Association for Computa-
tional Linguistics: Human Language Technologies-
Volume 1, pages 541–550. Association for Compu-
tational Linguistics.

Daniel Jiwoong Im, Chris Dongjoo Kim, Hui Jiang,
and Roland Memisevic. 2016. Generating images
with recurrent adversarial networks. arXiv preprint
arXiv:1602.05110.

Guoliang Ji, Kang Liu, Shizhu He, Jun Zhao, et al.
2017. Distant supervision for relation extraction
with sentence-level attention and entity descriptions.
In AAAI, pages 3060–3066.

Yankai Lin, Shiqi Shen, Zhiyuan Liu, Huanbo Luan,
and Maosong Sun. 2016. Neural relation extraction
with selective attention over instances. In ACL (1).

Mike Mintz, Steven Bills, Rion Snow, and Dan Juraf-
sky. 2009. Distant supervision for relation extrac-
tion without labeled data. In Proceedings of the
Joint Conference of the 47th Annual Meeting of the
ACL and the 4th International Joint Conference on
Natural Language Processing of the AFNLP: Vol-
ume 2-Volume 2, pages 1003–1011. Association for
Computational Linguistics.



505

Thien Huu Nguyen and Ralph Grishman. 2015. Event
detection and domain adaptation with convolutional
neural networks. In ACL (2), pages 365–371.

Pengda Qin, Weiran Xu, and Jun Guo. 2017. De-
signing an adaptive attention mechanism for relation
classification. In Neural Networks (IJCNN), 2017
International Joint Conference on, pages 4356–
4362. IEEE.

Alec Radford, Luke Metz, and Soumith Chintala.
2015. Unsupervised representation learning with
deep convolutional generative adversarial networks.
arXiv preprint arXiv:1511.06434.

Sebastian Riedel, Limin Yao, and Andrew McCal-
lum. 2010. Modeling relations and their mentions
without labeled text. In Machine Learning and
Knowledge Discovery in Databases, pages 148–163.
Springer.

Benjamin Roth, Tassilo Barth, Michael Wiegand, and
Dietrich Klakow. 2013. A survey of noise reduction
methods for distant supervision. In Proceedings of
the 2013 workshop on Automated knowledge base
construction, pages 73–78. ACM.

Cicero Nogueira dos Santos, Bing Xiang, and Bowen
Zhou. 2015. Classifying relations by ranking with
convolutional neural networks. arXiv preprint
arXiv:1504.06580.

Yatian Shen and Xuanjing Huang. 2016. Attention-
based convolutional neural network for semantic re-
lation extraction. In Proceedings of COLING 2016,
the 26th International Conference on Computational
Linguistics: Technical Papers.

Mihai Surdeanu, Julie Tibshirani, Ramesh Nallapati,
and Christopher D Manning. 2012. Multi-instance
multi-label learning for relation extraction. In Pro-
ceedings of the 2012 Joint Conference on Empirical
Methods in Natural Language Processing and Com-
putational Natural Language Learning, pages 455–
465. Association for Computational Linguistics.

Shingo Takamatsu, Issei Sato, and Hiroshi Nakagawa.
2012. Reducing wrong labels in distant supervi-
sion for relation extraction. In Proceedings of the
50th Annual Meeting of the Association for Compu-
tational Linguistics: Long Papers-Volume 1, pages
721–729. Association for Computational Linguis-
tics.

Jun Wang, Lantao Yu, Weinan Zhang, Yu Gong,
Yinghui Xu, Benyou Wang, Peng Zhang, and Dell
Zhang. 2017. Irgan: A minimax game for uni-
fying generative and discriminative information re-
trieval models. In Proceedings of the 40th Interna-
tional ACM SIGIR conference on Research and De-
velopment in Information Retrieval, pages 515–524.
ACM.

Yongqin Xian, Bernt Schiele, and Zeynep Akata. 2017.
Zero-shot learning-the good, the bad and the ugly.
arXiv preprint arXiv:1703.04394.

Dmitry Zelenko, Chinatsu Aone, and Anthony
Richardella. 2003. Kernel methods for relation ex-
traction. Journal of machine learning research,
3(Feb):1083–1106.

Daojian Zeng, Kang Liu, Yubo Chen, and Jun Zhao.
2015. Distant supervision for relation extraction via
piecewise convolutional neural networks. In Pro-
ceedings of the 2015 Conference on Empirical Meth-
ods in Natural Language Processing (EMNLP), Lis-
bon, Portugal, pages 17–21.

Daojian Zeng, Kang Liu, Siwei Lai, Guangyou Zhou,
Jun Zhao, et al. 2014. Relation classification via
convolutional deep neural network. In COLING,
pages 2335–2344.


