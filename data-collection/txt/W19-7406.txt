

















































Automatic Arabic Text Summarization Based on Fuzzy Logic

Lamees M. Al Qassem
The Emirates ICT Innovation Center

Electrical and Computer Engineering Department,
Khalifa University,
Abu Dhabi, UAE

lamees.alqassem@ku.ac.ae

Di Wanga
The Emirates ICT Innovation Center

Khalifa University,
Abu Dhabi, UAE.

di.wang@ku.ac.ae

Hassan Barada
Electrical and Computer
Engineering Department,

Khalifa University,
Abu Dhabi, UAE

hassan.barada@ku.ac.ae

Ahmad Al Rubaiea, Nawaf Al Moosaa
The Emirates ICT Innovation Center

Khalifa University,
Abu Dhabi, UAE.

{ahmad.al-rubaie,nawaf.almoosa}@ku.ac.ae

Abstract

The unprecedented growth in the amount of
online information available in many lan-
guages to users and businesses, including news
articles and social media, has made it diffi-
cult and time consuming for users to iden-
tify and consume sought after content. Hence,
automatic text summarization for various lan-
guages to generate accurate and relevant sum-
maries from the huge amount of information
available is essential nowadays. Techniques
and methodologies for automatic Arabic text
summarization are still immature due to the in-
herent complexity of the Arabic language in
terms of both structure and morphology. This
work attempts to improve the performance of
Arabic text summarization. We propose a new
Arabic text summarization approach based on
a new noun extraction method and fuzzy logic.
The proposed summarizer is evaluated using
EASC corpus and benchmarked against pop-
ular state of the art Arabic text summariza-
tion systems. The results indicate that our pro-
posed Fuzzy logic approach with noun extrac-
tion outperforms existing systems.

1 Introduction

In the recent two decades, the exponential growth
in the amount of information like email, online
news articles, reports, social media content and
memos, introduced new challenges and made it
harder for users to sift through and extract the
key information they need. Hence, a smart sys-
tem that can automatically identify important in-
formation from vast amount of data and generate

concise summaries from these identified data is
highly demanded nowadays. Automatic accurate
text summarization is the key to addressing this
challenge. Text summarization is the process of
conveying important information from the original
text source(s). The summary is typically no longer
than half of the original text(s) and usually sig-
nificantly less than that (Das and Martins, 2007).
Techniques for automatic text summarization for
widely-used and relatively simple-grammar lan-
guages such as English are mature. However, lit-
tle work has been done for Arabic summarization
(Al Qassem et al., 2017) due to the complexity of
the language in terms of both structure and mor-
phology. Nevertheless, Arabic summarization sys-
tems are highly needed nowadays. There are more
than 300 million Arabic speakers in the world, and
Arabic is an official language in the United Na-
tions (Nenkova et al., 2011) and 22 other countries
(Al-Shalabi et al., 2009). Therefore, researchers
are working on improving Arabic text summa-
rization methods and developing real world sys-
tems. A smart system is needed to automatically
generate summaries from Arabic texts and deliver
these summaries to the user, either directly or on-
demand. The generated summaries need to be co-
herent, readable, grammatically correct, and com-
prise the key information of the original texts. This
requires an in-depth study to achieve better pre-
processing for Arabic text and a better methodol-
ogy to extract the main information and generate a
more accurate summary.

In this work, we propose and develop a smart



Arabic summarization system with better accuracy
than the current state of the art. The system has
been applied to generate summaries from online
news in real time and delivers the summary in-
stantly to the right users who just need it. The pa-
per is organized as follows. The state of art for
text summarization (mainly English and Arabic
summarization systems) is discussed in Section 2.
Our proposed summarization system is described
in Section 3. The evaluation and comparison re-
sults are explained in Section 4. Our conclusion is
given in Section 5.

2 Related Work

The first automatic summarization system was
proposed by (Luhn, 1958). Luhn came up with
the assumption that says the more frequent the
word appears in the text the more important it
is; excluding the very common words (called stop
words). Ten years later, (Edmundson, 1969) ex-
panded Luhns work by adding more features, such
as resemblance to the title feature (the vocabulary
overlap between the title and the sentence) and the
position feature (the relevant position of the sen-
tence within the text). The results showed that
the word frequency is set to be the least impor-
tant feature. It is important to note that the author
assigned weights to the features subjectively; thus,
these assigned weights could be imprecise and un-
certain. In 1995, (Kupiec et al., 1995) developed
a trainable document summarizer to automatically
train the weights of the features using a corpus
instead of defining the weights subjectively. The
evaluation results agreed with Edmundsons results
(Edmundson, 1969). As a conclusion, both work
claimed that the best combination of features is
made of the position feature, key word feature, and
the title feature.

Although a lot of work has been done for text
summarization for English, the work for Arabic
summarization is very recent and limited. Lakhas
(Douzidia and Lapalme, 2004) considered one of
the first known Arabic text summarization system
that was evaluated and compared to English sys-
tems. The system produces a summary of size of
10 words only and translates it to English. The
authors claimed that the translation process is the
reason for the bad evaluation scores. Using TF-
IDF (term frequency-inverse document frequency)
as the main feature to score sentences is a com-
mon method in Arabic summarization systems.

TF-IDF is the ratio of the frequency of a term in
a document over its frequency in a corpus. TF-
IDF is a good indicator of the importance of a
word in a document and a topic, and hence high-
lights the importance of the corresponding sen-
tence. (Haboush et al., 2012) used TF-IDF on
clustered word roots and obtained competitive ac-
curacy. (Al-Radaideh and Afif, 2009) developed a
system that focuses on the inner product between
TF in a sentence and the document frequency DF
for each extracted noun. ACBTSS and AQBTSS
(El-Haj et al., 2009) are two most recent sys-
tems that used TF-IDF with Vector Space Model
(VSM). Semantic connectedness among sentences
and documents is another important factor when
generating summaries with minimum redundancy.
LCEAS system (Sarmini, 2015) used lexical co-
hesion to identify important topics and text entail-
ment to remove redundancy. Their system outper-
formed (Haboush et al., 2012), (Al-Radaideh and
Afif, 2009), Sakhr, AQBTSS (El-Haj et al., 2009),
Gen-Summ (El-Haj et al., 2010) and LSA-Summ
(El-Haj et al., 2010), by containing more signif-
icant sentences and less redundancy. In recent
work, more features/indicators are researched to
represent the importance of sentences. Therefore,
deciding which features to use and the weights for
these features become a hard task and more re-
search is needed. Some researchers followed the
machine learning approach and modeled the sum-
marization process as a classification problem (i.e.
the sentences are classified as summary and non-
summary sentences). The work in (Boudabous
et al., 2010) and (Belkebir and Guessoum, 2015)
includes examples of systems that followed the
machine learning approach. In (Boudabous et al.,
2010), SVM (Support Vector Machine) was used
to classify the sentences using 15 features. In
(Belkebir and Guessoum, 2015) an Arabic sum-
marizer was proposed using AdaBoost. Machine
learning approaches give researchers the ability
to efficiently utilize a large number of features
in the scoring process, which is desirable. Us-
ing fuzzy logic in text summarization is a very re-
cent approach in English text summarization (Ya-
dav and Meena, 2016). (Suanmali et al., 2009)
used the fuzzy logic approach to select the sen-
tences based on eight features. The system was
compared to a baseline summarizer that gener-
ates summaries by selecting the first 200 words in
the input document and MS word 2007 summa-



Figure 1: System Architecture.

rizer. The results showed that their proposed ap-
proach outperformed the baseline summarizer and
MS word 2007 summarizer. (Yadav and Meena,
2016) used fuzzy logic along with WordNet syn-
onyms and bushy path, a graph-based method, to
improve the performance of extractive text sum-
marization system. The WordNet synonyms is
used for the semantic similarity of the text; bushy
path is used for the relationship between differ-
ent parts of the text; finally, fuzzy logic is used
to solve the issue of uncertainty and vagueness re-
lated to the weights for different features of the
sentences. The system generated three summaries
from the three approaches and then selected the
sentences that appeared in all summaries to form
the final summary. The three approaches were
evaluated and compared against the proposed ap-
proach using ROUGE-1 and ROUGE-2. The re-
sults showed that the proposed approach outper-
formed the other three approaches. In addition, the
evaluation results showed that the fuzzy logic ap-
proach outperformed the bushy path and the Word-
Net synonyms methods. (Sarmini, 2015) proposed
an Arabic text summarizer based on fuzzy logic
and genetic algorithm. The genetic algorithm was
used to select the optimal member functions of
the selected features. The fuzzy system is used to
score the sentences. To sum up, all reviewed sys-
tems claimed that using fuzzy logic improved the
performance of the summarization systems and
the quality of the summaries. Fuzzy logic ap-
proaches handled the issues related to the uncer-
tainty, imprecision and vagueness of determining
the importance of different features using machine
learning approaches, leading to better summaries.

3 Proposed Fuzzy Logic Arabic
Summarizer

Condensing all the discussions and comparisons
in the literature review, we propose an Arabic
summarization system with five main components
(pre-processing, noun extraction, features extrac-
tion, fuzzy logic, sentence selection) to generate
the final summary. Figure 1 shows the five compo-
nents in the proposed system. The first two steps in
the proposed system are Pre-processing and Noun
extraction. Pre-processing prepares the text be-
fore sentences are further treated and summarized.
Noun extraction extracts the nouns from the text
output of the pre-processor. From the state of
art noun words are considered to carry important
information than other words (Al Qassem et al.,
2017; Al-Radaideh and Afif, 2009). A noun is any
word representing an idea, a thing or a person. To
have a good summary, we need to make sure all
sentences representing the main ideas are selected.
To assure this, all nouns in the text should be pro-
cessed and evaluated. The importance of a sen-
tence will then be scored by the extracted nouns
only. Furthermore, using nouns only will reduce
noise and increase efficiency by avoiding unnec-
essary processing. In our previous work, we pro-
posed a linguistic-rule-based noun extraction sys-
tem (Al Qassem et al., 2018) that extracts nouns
according to Arabic grammar rules. The system is
evaluated against the widely used Stanford Arabic
Part of Speech (POS) tagger (Stanford Log-linear
Part-Of-Speech Tagger, n.d.). The results show
that the proposed method is more efficient when
achieving comparable benchmark accuracies. The
details of our proposed Arabic noun extraction



method has been explained in our previous paper
(Al Qassem et al., 2018) and will not be repeated
here due to the size limit of the paper. After that
the feature extraction module extracts key features
(sentence position, TF-IDF, cue phrase, topic sig-
nature and numerical data) representing the impor-
tance of the sentences. Finally, the extracted fea-
tures/scores are input into the fuzzy logic module
to generate the final scores of the sentences. The
sentence’ score indicates how important a sen-
tence is within the whole article. The sentences
with the highest scores are selected to form the fi-
nal summary. In our system we used five features
based on the discussion and experimental results
from the state of art (Ferreira et al., 2013; Fattah
and Ren, 2009); they are: (1) Sentence position:
this is just the position of the sentence within the
full text; (2) TF-IDF: it is calculated for the ex-
tracted nouns only as a feature that indicates the
importance accumulation of the extracted nouns
in a sentence; (3) Cue phrases: they are phrases
that give a good indication about the content of this
sentence such as in conclusion, the most important
... etc., and defined as positive cue phrases (Fer-
reira et al., 2013). (Haboush et al., 2012) claimed
that the existence of these cue phrases increases
the probability for a sentence to be selected. On
the contrary, there are list of phrases that give a
detailed explanation or indicates redundant infor-
mation like in other words and for example. These
phrases are called negative cue phrases (Fattah and
Ren, 2009). In our system, we use both types of
cue phrases to either increase or decrease the im-
portance score of the sentences. The two other
features are: (4) Topic Signature: each topic has
a list of topic signature words used across all doc-
uments within this topic but not frequently used
across other topics(the score of the sentence that
contains topic signature words is supposed to in-
crease); and finally (5) Numerical Data: sentences
that contain numbers are more likely to be added
to the summary because numbers refer to impor-
tant information like money transaction, dates, ad-
dress ... etc. (Ferreira et al., 2013; Fattah and
Ren, 2009). The final score of the sentences is
calculated by combining all the features. The
linear combination of all features (feature-weight
equation) is usually used for the final score. The
main challenge in this step is assigning a weight
for each feature. As discussed previously, not all
features are equally important and different fea-

tures should be given different weights represent-
ing their importance and contribution to generate
a high quality summary. Therefore, we use fuzzy
logic. At this stage the features extracted from the
sentence are inputs to the fuzzy logic system, and
the sentence final score is the output. According
to (Hüllermeier, 2011), fuzzy logic can contribute
in solving issues related to uncertainty, vagueness,
ambiguity, and imprecision that result from in-
complete and imprecise information. Fuzzy logic
provides the ability to map rules using concept
(e.g. long vs short, big vs small) rather than num-
bers (numerical data). Furthermore, representing
gradual concepts is a key feature of fuzzy logic
compared with machine learning that failed to do
so (Hüllermeier, 2011). Fuzzy logic is transpar-
ent, data-driven and makes use of available expert
knowledge (for model initialization) to generate
a robust model. It is considered an approximate
reasoning solution that can be initialized from ex-
pert knowledge and optimized from data with very
strong reasoning capabilities (Megala et al., 2014).
Finally, the sentences with highest scores from the
fuzzy logic system are selected to form the sum-
mary. The sentences in the summary are ordered
by their original position in the article. The pro-
posed Arabic summarization system can gener-
ate different sizes of the summaries based on user
choice. Our observations and evaluation of the
generated model are aligned with our hypothesis,
in that the first few sentences represent the main
ideas. This is expected in news articles that tend
to be relatively short; important words repeat more
frequently within the text and cue phrases are used
to attract the attention of the reader.

4 System Evaluation

Evaluating an Arabic text summarizer is a chal-
lenging task due to the lack of gold standard cor-
pora and the different measures used in assessing
summarization systems. We have therefore, de-
cided to choose the corpus and evaluation metrics
that are used by most benchmark systems in the
literature, to provide as objective comparison as
possible. Based on this approach, we found that
ROUGE-N (N=1and 2) with EASC corpus (El-
Haj et al., 2010) are used by many recent sys-
tems. ROUGE correlates well with human judge-
ment for single-document summarization tasks. In
addition, the correlation increases by using multi-
ple references. This gives an advantage for EASC



Figure 2: Performance comparison with other systems
in the literature.

corpus as each document has five reference sum-
maries.

We compared our system with the state of
art systems (LCEAS 2015 (Al-Khawaldeh and
Samawi, 2015), (Al-Radaideh and Afif, 2009),
(Haboush et al., 2012) and (Oufaida et al., 2014)).
Figure 2 below illustrates the comparison of
ROUGE-2 results for our summarizer and the
other systems. The 30% summary size represents
the reference summaries that are neither too long
nor too short, the 10% summary size represents
the shortest summary. As shown in the Figure,
the ROUGE-2 scores for LCEAS (Al-Khawaldeh
and Samawi, 2015), (Al-Radaideh and Afif, 2009)
and (Haboush et al., 2012) are less than 0.3 for re-
call and less than 0.2 for precision, where the best
scores were obtained by LCEAS. The F-measure
for LCEAS system is approximately 0.22. To
compare our system against these three systems,
we use the ROUGE results when the summary size
is 10% from the proposed Arabic summarization
system (the smallest possible size). The average
ROUGE-2 recall, precision and F-measure scores
for our system are 0.27, 0.40 and 0.29, respec-
tively. Our system outperformed the three sys-
tems in F-measure scores despite the fact that these
systems were compared against our worst-case re-
sults.

Furthermore, LCEAS was compared against
Sakhr, AQBTSS (El-Haj et al., 2009), Gen-Summ
and LSA-Summ (El-Haj et al., 2010). The authors
claimed that LCEAS outperformed all these three
systems. Since our fuzzy logic summarizer out-
performed LCEAS, it is our logical assumption

System

Average
Recall

Average
Precision

Average
F-measure

ROUGE- ROUGE- ROUGE-
1 2 1 2 1 2

Oufaida
(2014)

0.41 0.38 0.37 0.27 0.36 0.26

Our Sys
10%

0.34 0.27 0.51 0.40 0.37 0.29

Our Sys
30%

0.45 0.35 0.48 0.38 0.44 0.34

Table 1: ROUGE evaluation results for our system and
Oufaida system.

that our system will outperform these three sys-
tems too.

For (Oufaida et al., 2014), the system was evalu-
ated using ROUGE-N (N=1 and 2) and EASC cor-
pus.

The generated summary size of a document
is equal to its reference summary. The EASC
has five summaries per article. Consequently,
the system generated five summaries per doc-
ument and computed their average ROUGE-N
scores. The system ROUGE-1 and ROUGE-2
scores are shown in Table 1. We compared our
system against Oufaida using the ROUGE-results
obtained for the summary sizes 30% and 10%,
which are the percentages used in the state of art
methods for our fair comparison. In the real world
application, this percentage can be changed and
adjusted by users based on the requirements. The
less the percentage is, the more concise the sum-
mary is but some information might be missed.
On the contrary, summary with higher percentage
of length provides more information (sentences)
but the summary takes more human beings time
to read (hence not a very efficient summary). Ac-
cording to both summary sizes 10% and 30% and
ROUGE-N (N=1,2) results, our system outper-
formed Oufaidas.

5 Conclusion

Due to the increase in the amount of information
available online, consuming a broad range of rel-
evant, concise but important information has be-
come a laborious task. Automatic text summa-
rization methods are put forward to address this
problem. Text summarization for English is ad-
vanced and many approaches have been studied
and evaluated. However, this field is still in its
early stages for the Arabic language. In this pa-
per, we discussed different text summarization ap-



proaches and methodologies and proposed our ap-
proach by using fuzzy logic for a more accurate
and efficient Arabic summarization system. Fuzzy
logic is still very recent in English summarization
and showed improvement in the quality of the gen-
erated summaries. We compared our summarizer
against five state of the art Arabic text summariz-
ers that reported good results. The results showed
that fuzzy logic improved the performance of the
summarization system. The system is able to cre-
ate very short summaries containing the most im-
portant ideas, and performed better than five state
of art Arabic summarization systems. The future
work might be looking into better Arabic prepro-
cessing, (e.g. http://arabicnlp.pro/alp/) for more
accurate Arabic summarizer.

References
F Al-Khawaldeh and V Samawi. 2015. Lexical co-

hesion and entailment based segmentation for ara-
bic text summarization (lceas). The World of Com-
puter Science and Information Technology Journal
(WSCIT), 5(3):51–60.

Lamees Al Qassem, Di Wang, and Hassan Barada.
2018. Noun extraction tool for anlp applications.
In 2018 IEEE 12th International Conference on Se-
mantic Computing (ICSC), pages 308–309. IEEE.

Lamees Mahmoud Al Qassem, Di Wang, Zaid Al Mah-
moud, Hassan Barada, Ahmad Al-Rubaie, and
Nawaf I Almoosa. 2017. Automatic arabic sum-
marization: a survey of methodologies and systems.
Procedia Computer Science, 117:10–18.

Q Al-Radaideh and Mohammad Afif. 2009. Arabic
text summarization using aggregate similarity. In
International Arab conference on information tech-
nology (ACIT2009), Yemen.

Riyad Al-Shalabi, Ghassan Kanaan, Bashar Al-
Sarayreh, Khalid Khanfar, Ali Al-Ghonmein,
Hamed Talhouni, Salem Al-Azazmeh, et al. 2009.
Proper noun extracting algorithm for arabic lan-
guage. In International conference on IT, Thailand.

Riadh Belkebir and Ahmed Guessoum. 2015. A super-
vised approach to arabic text summarization using
adaboost. In New Contributions in Information Sys-
tems and Technologies, pages 227–236. Springer.

Mohamed Mahdi Boudabous, Mohamed Hédi
Maaloul, and Lamia Hadrich Belguith. 2010.
Digital learning for summarizing arabic documents.
In International Conference on Natural Language
Processing, pages 79–84. Springer.

Dipanjan Das and André FT Martins. 2007. A survey
on automatic text summarization. Literature Survey

for the Language and Statistics II course at CMU,
4(192-195):57.

Fouad Soufiane Douzidia and Guy Lapalme. 2004.
Lakhas, an arabic summarization system. Proceed-
ings of DUC2004.

Harold P Edmundson. 1969. New methods in au-
tomatic extracting. Journal of the ACM (JACM),
16(2):264–285.

Mahmoud El-Haj, Udo Kruschwitz, and Chris Fox.
2009. Experimenting with automatic text summari-
sation for arabic. In Language and Technology Con-
ference, pages 490–499. Springer.

Mahmoud El-Haj, Udo Kruschwitz, and Chris Fox.
2010. Using mechanical turk to create a corpus of
arabic summaries.

Mohamed Abdel Fattah and Fuji Ren. 2009. Ga, mr,
ffnn, pnn and gmm based models for automatic
text summarization. Computer Speech & Language,
23(1):126–144.

Rafael Ferreira, Luciano de Souza Cabral,
Rafael Dueire Lins, Gabriel Pereira e Silva,
Fred Freitas, George DC Cavalcanti, Rinaldo
Lima, Steven J Simske, and Luciano Favaro.
2013. Assessing sentence scoring techniques for
extractive text summarization. Expert systems with
applications, 40(14):5755–5764.

Ahmad Haboush, Maryam Al-Zoubi, Ahmad Momani,
and Motassem Tarazi. 2012. Arabic text summa-
rization model using clustering techniques. World
of Computer Science and Information Technology
Journal (WCSIT) ISSN, pages 2221–0741.

Eyke Hüllermeier. 2011. Fuzzy sets in machine learn-
ing and data mining. Applied Soft Computing,
11(2):1493–1505.

J Kupiec, J Pedersen, and F Chen. 1995. A trainable
document summarizer. dans les actes de acm special
interest group on information retrieval (sigir), 68–
73.

Hans Peter Luhn. 1958. The automatic creation of lit-
erature abstracts. IBM Journal of research and de-
velopment, 2(2):159–165.

S Santhana Megala, A Kavitha, and A Marimuthu.
2014. Enriching text summarization using fuzzy
logic. International Journal of Computer Science
and Information Technologies, 5(1):863–867.

Ani Nenkova, Kathleen McKeown, et al. 2011. Auto-
matic summarization. Foundations and Trends R© in
Information Retrieval, 5(2–3):103–233.

Houda Oufaida, Omar Nouali, and Philippe Blache.
2014. Minimum redundancy and maximum rel-
evance for single and multi-document arabic text
summarization. Journal of King Saud University-
Computer and Information Sciences, 26(4):450–
461.



Mohamad Sarmini. 2015. Design and implementation
of hybrid syntactic-fuzzy genetic system for extrac-
tive arabic text summarization. International Jour-
nal of Computer Science and Engineering in Arabic,
6:69–98.

Ladda Suanmali, Naomie Salim, and Mo-
hammed Salem Binwahlan. 2009. Feature-based
sentence extraction using fuzzy inference rules. In
2009 International Conference on Signal Processing
Systems, pages 511–515. IEEE.

Jyoti Yadav and Yogesh Kumar Meena. 2016. Use of
fuzzy logic and wordnet for improving performance
of extractive automatic text summarization. In 2016
International Conference on Advances in Comput-
ing, Communications and Informatics (ICACCI),
pages 2071–2077. IEEE.


