



















































Automatic Detection of Vague Words and Sentences in Privacy Policies


Proceedings of the 2018 Conference on Empirical Methods in Natural Language Processing, pages 3508–3517
Brussels, Belgium, October 31 - November 4, 2018. c©2018 Association for Computational Linguistics

3508

Automatic Detection of Vague Words and Sentences in Privacy Policies

Logan Lebanoff and Fei Liu
Department of Computer Science

University of Central Florida, Orlando, FL 32816, USA
loganlebanoff@knights.ucf.edu feiliu@cs.ucf.edu

Abstract

Website privacy policies represent the single
most important source of information for users
to gauge how their personal data are collected,
used and shared by companies. However, pri-
vacy policies are often vague and people strug-
gle to understand the content. Their opaque-
ness poses a significant challenge to both users
and policy regulators. In this paper, we seek to
identify vague content in privacy policies. We
construct the first corpus of human-annotated
vague words and sentences and present empir-
ical studies on automatic vagueness detection.
In particular, we investigate context-aware and
context-agnostic models for predicting vague
words, and explore auxiliary-classifier gener-
ative adversarial networks for characterizing
sentence vagueness. Our experimental results
demonstrate the effectiveness of proposed ap-
proaches. Finally, we provide suggestions for
resolving vagueness and improving the usabil-
ity of privacy policies.

1 Introduction

Website privacy policies are difficult to read and
people struggle to understand the content. Recent
studies (Sadeh et al., 2013) have raised concerns
over their opaqueness, which poses a considerable
challenge to both Internet users and policy reg-
ulators. Nowadays, consumers supply their per-
sonal information to online websites in exchange
for personalized services; they are surrounded by
smart gadgets such as voice assistants and surveil-
lance cameras, which constantly monitor their ac-
tivities in the home and work environments. With-
out clearly specifying how users’ information will
be collected, used and shared, there is a substantial
risk of information misuse, including undesired
advertisements and privacy breaches. Especially
with recent high-profile cases involving Facebook
and Cambridge Analytica, the public is becoming

S1 We may use the information automatically
collected from your computer or other devices
for the following uses... (Vagueness: 3.8)

S2 In addition, in some cases the Sites can deliver
content based on your current location if you
choose to enable that feature.
(Vagueness: 2.25)

S3 Our Sites and Services may, from time to
time, provide links to sites operated by third
parties. (Vagueness: 3.2)

S4 To customize and serve advertising and other
marketing communications that may be visi-
ble to you on our Sites and Services or else-
where on the internet. (Vagueness: 4)

S5 This includes your credit card number, in-
come level, or any other information that
would normally be considered confidential.
(Vagueness: 3)

Table 1: Example human-annotated vague words and sen-
tences. Vague words are italicized. Averaged sentence vague-
ness is given in the parentheses. Higher score is more vague.

more aware and concerned with how their infor-
mation is handled.

Privacy policies are binding agreements be-
tween companies and users that stipulate how
companies collect, use, and share users’ personal
information. They are lengthy and difficult to read.
Bhatia et al. (2016) suggested two possible causes
for this. First, privacy policies must be compre-
hensive in order to cover a variety of uses (e.g., in-
store and online purchases). Second, the policies
have to be accurate to all data practices and sys-
tems. Clearly, it would be difficult for a company’s
legal counsel to anticipate all future needs. They
need to resort to vague language to describe the
content, causing it to be difficult to read and com-
promising the effectiveness of privacy policies.

In this paper, we present the first study on au-
tomatic detection of vague content in website pri-
vacy policies. We construct a sizable corpus con-
taining word- and sentence-level human annota-
tions of vagueness for privacy policy documents.
The corpus contains a total of 133K words and



3509

4.5K sentences. Our methods for automatically
detecting vague words and sentences are based on
deep neural networks, which have demonstrated
impressive recent success. Specifically, we inves-
tigate context-aware and context-agnostic models
for predicting word vagueness, where feature rep-
resentations of words are built with and without
considering their surrounding words. By this, we
seek to verify the hypothesis that vagueness is an
intrinsic property of words and has little to do
with context. To understand sentence vagueness,
we explore auxiliary-classifier generative adver-
sarial networks (AC-GAN, Odena et al., 2018).
The model has performed strongly on vision tasks
(e.g., image synthesis), however, whether it can
be adapted to handle text data has not been thor-
oughly investigated. We train the AC-GAN model
to discriminate between real/fake privacy policy
sentences while simultaneously classifying sen-
tences exhibiting different levels of vagueness, in-
cluding “clear,” “somewhat clear,” “vague,” and
“extremely vague,” thus improving the model’s
generalization capabilities. The detected vague
words and sentences can assist users in browsing
privacy policy documents, and privacy regulators
in assessing the clarity of privacy policy practices.
Our research contributions include the following:

• we present the first study on automatic detection
of vague content in privacy policies. Vague con-
tent compromises the usability of privacy poli-
cies and there is an urgent need to identify and
resolve vagueness;
• we construct a sizable text corpus including hu-

man annotations for 133K words and 4.5K sen-
tences of privacy policy texts. The data1 is avail-
able publicly to advance research on language
vagueness; and
• we investigate both context-aware and context-

agnostic methods for predicting vague words.
We also explore the auxiliary-classifier genera-
tive adversarial networks for characterizing sen-
tence vagueness. This is the first study lever-
aging deep neural networks for detecting vague
content in privacy policies.

2 Related Work

Privacy policies are often verbose, difficult to read,
and perceived as ineffective (McDonald and Cra-
nor, 2008). In particular, vague language in these

1https://loganlebanoff.github.io/data/
vagueness_data.tar.gz

documents hurts understanding. “A term is re-
garded as vague if it admits borderline cases,
where speakers are reluctant to say either the
term definitely applies or definitely does not ap-
ply,” a definition of vagueness quoted from (van
Deemter, 2010). Legal scholars and language
philosophers strive to understand vagueness from
a theoretical perspective (Keefe, 2000; Shapiro,
2006). The “sorites paradox” describes the phe-
nomenon of vagueness (Keefe, 2000). It states that
small changes in the object do not affect the appli-
cability of a vague term. For example, a room can
remain “bright” even if the light is dimmed little
by little until it is entirely extinguished, thus cre-
ating a paradox. Hyde (2014) further suggests that
vagueness is a feature pertaining to multiple syn-
tactic categories. Nouns, adjectives and adverbs
(e.g., “child”, “tall”, “many”) are all susceptible
to reasoning. These studies often focus on linguis-
tic case studies but not on developing resources for
automatic detection of vagueness.

Recent years have seen a growing interest in
using natural language processing techniques to
improve the effectiveness of website privacy poli-
cies. Sadeh et al. (2013) describe a Usable Pri-
vacy Policy Project that seeks to semi-automate
the extraction of salient details from privacy poli-
cies. Other studies include crowdsourcing privacy
policy annotations and categorizing data prac-
tices (Ammar et al., 2012; Massey et al., 2013;
Wilson et al., 2016b,a), grouping text segments re-
lated to certain policy issues (Liu et al., 2014; Ra-
manath et al., 2014), summarizing terms of ser-
vices (Braun et al., 2017), identifying user opt-
out choices (Sathyendra et al., 2017), and many
others. These studies emphasize the “too long to
read” issue of privacy policies but leave behind the
“difficult to understand” aspect, such as identify-
ing and eliminating vague content.

The work of (Liu et al., 2016) is close to ours.
The authors attempt to learn vector representations
of words in privacy policies using deep neural net-
works, where the vectors encode not only seman-
tic/syntactic aspects but also vagueness of words.
The model is later fed to an interactive visualiza-
tion tool (Strobelt et al., 2016) to test its ability
to discover related vague terms. While promising,
their approach is not fully automatic, and the fea-
sibility of detecting vague words and sentences in
an automatic manner is still left untested.

In this work we conduct the first study to auto-

https://loganlebanoff.github.io/data/vagueness_data.tar.gz
https://loganlebanoff.github.io/data/vagueness_data.tar.gz


3510

matically detect vague content from privacy poli-
cies. We ask human annotators to label vague
words and sentences and train supervised classi-
fiers to do the same. Classifying vague words
is a challenging task, because vagueness is an
understudied property and it spans multiple syn-
tactic categories (e.g., “usually,” “personal data,”
“necessary”). Neural network classifiers such as
CNN and LSTM have demonstrated prior success
on text classification tasks (Zhang and Wallace,
2015), but whether they can be utilized to identify
vague terms is not well understood.

For sentence classification, we investigate aux-
iliary classifier generative adversarial networks
(AC-GAN, Odena et al., 2018). GANs have seen
growing popularity in recent years (Mirza and
Osindero, 2014; Yu et al., 2016; Li et al., 2017;
Gu et al., 2018; Cai and Wang, 2018). AC-GAN
is a variant of GAN that generates word sequences
using class-conditional probabilities. E.g., it gen-
erates “fake” privacy policy sentences exhibit-
ing different degrees of vagueness (e.g., “clear,”
“vague,” “extremely vague”). AC-GAN nicely
combines real (human-annotated) and fake (syn-
thetic) privacy policy sentences in a discrimina-
tive framework to improve the model’s generaliza-
tion capabilities. This can be equated to a semi-
supervised learning paradigm through augmenta-
tion of the dataset with generated sentences. Data
augmentation is particularly valuable for vague-
ness detection, which generally has small expen-
sive datasets. We perform a full analysis on AC-
GAN and compare it to state-of-the-art systems.

3 The Corpus

Annotating vague words and sentences is a non-
trivial task. We describe our effort to select pri-
vacy policy sentences for annotation, recruit qual-
ified workers, and design annotation guidelines.

We select 100 website privacy policies from the
collection gathered by Liu et al. (2014). The doc-
uments are quite lengthy, containing on average
2.3K words. More importantly, most content is not
vague. To obtain a more balanced corpus, a filter-
ing step is used to select only sentences that have a
moderate-to-high chance of containing vague con-
tent. Fortunately, Bhatia et al. (2016) provide a list
of 40 cue words for vagueness, manually compiled
by policy experts. We therefore retain only sen-
tences containing one of the cue words for further
annotation. A brief examination shows that most

Vague Term Freq. Vague Term Freq.
may 1,575 other information 30
personal info. 465 non-personal info. 30
information 302 sometimes 27
other 261 reasonably 26
some 214 appropriate 25
certain 205 necessary 24
third parties 183 certain info. 23
third party 134 typically 22
pers. iden. info. 88 affiliates 21
time to time 75 reasonable 20
most 54 non-personal 19
generally 52 personally iden. 18
personal data 52 such as 18
third-party 49 usually 17
others 41 personal 16
general 39 may be 15
many 37 content 14
various 36 otherwise 14
might 35 periodically 14
services 33 similar 14

Table 2: The most frequent vague terms identified by hu-
man annotators and their frequencies in our corpus. “pers.,”
“iden.” and “info.” are shorthand for “personally,” “identifi-
able” and “information.”

of the sentences removed from the corpus are in-
deed clear. Even with this bias, the resulting cor-
pus still contains a small portion of clear sentences
(See Figure 1). The reason is that a cue word can
be used in a way that is not vague. For example, in
the sentence “Users may post to our website,” the
word may indicates permission but not possibility,
and therefore the sentence is not vague.

Reidenberg et al. (2015) discuss attempts to use
crowdsourced workers as a cost-effective alterna-
tive to policy experts for annotating privacy poli-
cies. In this study, we hire crowd workers from
the Amazon Mechanical Turk platform. To recruit
quality workers, we require them to reside in the
U.S. and be proficient in English; they are skilled
workers maintaining a task success rate of 90% or
above. We provide example labelled vague terms
obtained from the case studies described in Bhatia
et al. (2016) to reduce discrepancies among work-
ers. The annotators are then asked to use their best
judgment to perform the task.

Given a privacy policy sentence, the annotators
are instructed to identify all vague terms2 and as-
sign a score of vagueness to the sentence. A vague
term is limited to be 5 words or less (e.g., “includ-
ing but not limited to”). We use this rule to prevent
annotators from tagging an entire sentence/clause
as vague. A slider is provided in the interface to al-

2We use “term” to denote either a single word or a phrase.



3511

Figure 1: (Left) Percentage of sentences containing different
numbers of vague words. (Right) Perc. of sentences with
different levels of vagueness. 1 is clear, 5 is extremely vague.

low annotators to select a vagueness score for the
sentence: 1 is extremely clear and 5 is extremely
vague. We design a human intelligence task (HIT)
to include 5 privacy policy sentences and a worker
is rewarded $0.05 for completing the task. Five
human workers are recruited to perform each task.

We obtain annotations for 133K words and 4.5K
sentences. The average sentence vagueness score
is 2.4±0.9. As of inter-annotator agreement3, we
find that 47.2% of the sentences have their vague-
ness scores agreed by 3 or more annotators; 12.5%
of the sentence vagueness scores are agreed by 4
or more annotators. Furthermore, the annotators
are not required to select vague words if they be-
lieve the sentences are clear. We remove vague
words selected by a single annotator. Among the
rest, 46.1% of the words are selected by 3 or more
annotators; 18.5% of the words are selected by 4
or more annotators. These results suggest that, al-
though annotating vague terms and sentences is
considered challenging, our annotators can reach
a reasonable degree of agreement. We present ex-
ample vague terms in Table 2. Note that we obtain
a total of 1,124 unique vague terms, which go well
beyond the 40 cue words used for sentence pres-
election. Figure 1 shows more statistics on sen-
tence vagueness, including (i) the percentages of
sentences containing different numbers of vague
words, and (ii) the percentages of sentences whose
vagueness scores fall in different ranges.

4 Word Vagueness

We seek to test an important hypothesis related to
word vagueness. We conjecture that vagueness is
an intrinsic property of words; whether a word is
vague or not has little to do with its context words.
To verify this hypothesis, we build context-aware
and context-agnostic models to classify each word

3We choose not to calculate a kappa statistic, as labelling
vague words/sentences is not a clear-cut classification task.

Sent: This includes your credit card number , income level , or any
other information that would normally be considered confidential .

Annotator 1: any, other, normally
Annotator 2: any other information
Annotator 3: normally, confidential, any other

Ground Truth Labels: [This]0 [includes]0 [your]0 [credit]0 [card]0
[number]0 , [income]0 [level]0 , [or]0 [any]1 [other]1 [information]0
[that]0 [would]0 [normally]1 [be]0 [considered]0 [confidential]0 .

Table 3: Ground truth labels are obtained by consolidating
human-annotated vague terms; “any,” “other,” “normally” are
labelled 1 because they are selected by 2 or more annotators.

in a privacy policy sentence as either vague or non-
vague. The ground-truth labels are obtained by
consolidating human annotations (see Table 3 for
an example). A word is labelled 1 if it is selected
by two or more annotators, otherwise 0. We de-
scribe details of the two classifiers below.

Context-aware classifier. It builds feature rep-
resentations of words based on the surrounding
context words. Given its strong performance, we
construct a bidirectional LSTM (Hochreiter and
Schmidhuber, 1997) for this purpose. A word
is replaced by its word2vec embedding (Mikolov
et al., 2013) before it is fed to the model. For
each time step, we concatenate the hidden states
obtained from the forward and backward passes
and use it as input to a feedforward layer with sig-
moid activation to predict if a word is vague or
non-vague. Because single words consist of the
majority of the human-annotated vague terms, we
choose to use binary word labels instead of a BIO
scheme (Chiu and Nichols, 2016) for sequence
tagging. Figure 2 shows the architecture.

Context-agnostic classifier. It uses intrinsic fea-
ture representations of words without considering
the context. Specifically, we represent a word us-
ing its word2vec embedding, then feed it to a feed-
forward layer with sigmoid activation to obtain the
prediction (Figure 2). We train the classifier us-
ing a list of unique words obtained from the train-
ing data; a word is considered positive if it has a
ground truth label of 1 in any sentence, otherwise
negative. Note that the ratio of positive/negative
unique words in our corpus is 1068/3176=0.34.
At test time, we apply the binary classifier to each
word of the test set. A word is assigned the same
label regardless of which sentence it appears in.
We adopt this setting to ensure the context-aware
and context-agnostic results are comparable.

5 Sentence Vagueness

We next investigate how vagueness is manifested
in privacy policy sentences. Our goal is to assign a



3512

or any other information…

N V V N

or

any

other

N

V

V

information

N

Figure 2: (Left) Context-aware word classifier implemented
as a bidirectional LSTM. (Right) Context-agnostic classifier.
“V” and “N” are shorthands for “vague” and “non-vague.”

label to each sentence indicating its level of vague-
ness. We derive ground truth sentence labels by
averaging over vagueness scores assigned by hu-
man annotators, and further discretizing the scores
into four buckets: [1,2), [2,3), [3,4), [4,5], respec-
tively corresponding to “clear,” “somewhat clear,”
“vague,” and “extremely vague” categories. The
sentences in the four buckets respectively consist
of 26.9%, 50.8%, 20.5%, and 1.8% of the total an-
notated sentences. We choose to predict discrete
labels instead of continuous scores because labels
are more informative to human readers. E.g., a la-
bel of “extremely vague” is more likely to trigger
user alerts than a score of 4.2.

5.1 Auxiliary-Classifer GAN

Predicting vague sentences is a nontrivial task
due to the complexity and richness of natural lan-
guage. We propose to tackle this problem by ex-
ploring the auxiliary classifier generative adversar-
ial networks (AC-GAN, Odena et al., 2018). We
choose GAN because of its ability to combine text
generation and classification in a unified frame-
work (Yu et al., 2016; Li et al., 2017; Gu et al.,
2018). Privacy policy sentences are particularly
suited for text generation because the policy lan-
guage is restricted and a text generator can effec-
tively learn the patterns. AC-GAN has a great po-
tential to make use of both human-annotated data
and “fake” augmented data for classification. The
system architecture is presented in Figure 3. The
generator learns to generate “fake” privacy pol-
icy sentences and sentences exhibiting different
levels of vagueness using class conditional proba-
bilities (hence the name auxiliary-classifer GAN).
The discriminator learns to discriminate among
real/fake sentences as well as sentences of differ-
ent levels of vagueness. They are jointly trained
using a heuristic, non-saturating game loss. In the
following we present the model details.

CNN
Discriminator

RNN
Generator

C (class) Z (noise)

X_real X_fake

fake C=4

real C=3
C=2
C=1

0.01
0.92
…
0.01

0.01
0.03
…
0.87

0.95
0.02
…
0.01

0.01
0.01
…
0.94

embeddings obtained by argmax

weighted embeddings generated by softmax

Figure 3: System architecture for AC-GAN. (Left) The Gen-
erator generates plausible privacy policy sentences (X fake).
The Discriminator must learn to differentiate between real
and fake sentences as well as predicting the vagueness cate-
gory (C) of the sentences. (Right) RNN-generator. A vocab-
ulary distribution is produced for each step. Gumbel-softmax
is applied to the distributions to calculate weighted embed-
dings to be used by the Discriminator (arrows pointing up).
Argmax is applied to the distributions to retrieve embeddings
to be passed to the next step (arrows pointing down).

5.2 Sentence Generator

The generator focuses on generating “fake” sam-
ples that resemble privacy policy sentences of a
given vagueness category. This is denoted by
P (X|C), where X = {xt}Tt=1 is a sequence of
words and C ∈ {1, 2, 3, 4} is a vagueness cat-
egory. A vagueness category is randomly sam-
pled in the generation process, and the generator
attempts to generate a sentence of that vagueness
level. A typical RNN text generator unrolls the
sequence X one word at a time until an end-of-
sentence symbol (EOS) is reached. At time step
t, it samples a word xt from a vocabulary-sized
vector of probability estimates P (xt):

xt ∼ P (xt) = softmax(at), (1)
at = Wht + b, (2)

ht = fRNN (ht−1, xt−1), (3)

where at is a vector of activation values and ht
is the t-th RNN hidden state. We train a neural
text generator, implemented as Long Short-Term
Memory networks (Hochreiter and Schmidhuber,
1997), on a large collection of privacy policy sen-
tences using cross-entropy loss. While generating
natural language sentences is successfully tackled
by recurrent neural networks, the generated sen-
tences are not necessarily vague. Training the gen-
erator only on vague sentences is impractical be-
cause there is a limited number of annotated sen-
tences. In this paper we introduce a new way of



3513

defining class conditional probabilities:

xt ∼ P (xt|C) = softmax(at + λCv), (4)

where v is a vocabulary-sized, trainable vector in-
dicating how likely a vocabulary word is vague.
λC is a coefficient for vagueness category C. The
underlying assumption is that a “clear” sentence is
less likely to contain vague words (λC is negative),
whereas an “extremely vague” sentence tends to
contain many vague words (λC is positive).

Finally, the generated “fake” sentences, to-
gether with “real” sentences labelled by human an-
notators, are fed to the discriminator for training
a classifier discriminating between real/fake sen-
tences and sentences of different vagueness lev-
els. Nevertheless, there remains a critical issue
with the current system: we cannot backpropagate
through discrete samples X . As a result, the gen-
erator parameters cannot be properly updated us-
ing backpropagation. To circumvent this issue, we
attempt the reparameterization trick with Gumbel-
Softmax relaxation (Gu et al., 2018).

Straight-Through Gumbel-Softmax. Two com-
peting issues exist in the RNN generator. First, the
discriminator requires a continuous form for each
generated word to keep the entire model differen-
tiable. Second, the generator requires a discrete
choice for each word to generate a sentence, rather
than propagating “partial words” through the se-
quence. To solve this problem, the softmax dis-
tribution over vocabulary words is sent to the dis-
criminator, while the argmax over the distribution
is sent to the next step of the generator. This sys-
tem is referred to as Straight-Through Gumbel.

We explain the process of calculating the soft-
max distribution to send to the discriminator. To
simulate the random-sampling process, the ap-
proach applies reparameterization to shift random-
ness from sampling a discrete variable xt (Eq. (4))
to sampling a continuous noise vector zt follow-
ing the Gumbel distribution (Eq. (5)). The noise
vector is added to the activation at+λCv to com-
pute the argmax (Eq. (6)). To simulate the argmax
operation, a temperature parameter τ is applied to
softmax (Eq. (7)), where small values of τ greatly
skew the distribution, causing it to peak at the
largest value, while still remaining differentiable.
Similar reparameterization is also used for varia-
tional auto-encoders (Kingma and Welling, 2014).

zt ∼ Gumbel(z) (5)

xt = argmax(at + zt + λCv) (6)

P (xt|C) = softmax(
at + zt + λCv

τ
) (7)

The generator requires a discrete word to prop-
agate to the next time step of the RNN. The word
with the maximum activation value is chosen as
shown in (Eq. (6)). An illustration of ST Gumbel
is presented in Figure 3.

5.3 Sentence Discriminator

A sentence discriminator learns to perform two
tasks simultaneously. Given a privacy policy
sentence X , it predicts a probability distribution
over its sources, denoted by P (S|X), where S
= {real, fake}; and a probability distribution over
its level of vagueness, denoted by P (C|X), C =
{clear, somewhat clear, vague, extremely vague}.
The learning objective for the discriminator is to
maximize the log-likelihood of making correct
predictions on both tasks, denoted by LC + LS ,
where LC and LS are defined in Eq. (8) and (9).

LC = E[logP (C = c|Xreal+fake)] (8)
LS = E[logP (S = real|Xreal)]

+ E[logP (S = fake|Xfake)] (9)

The ground truth vagueness labels C for real
sentences are annotated by human annotators. For
fake sentences the labels are randomly sampled
in the generation process; and conditioned on the
sampled vagueness labels, fake sentences are gen-
erated using P (xt|C) (Eq. (7)).

L′C = E[logP (C = c|Xfake)] (10)
L′S = E[logP (S = real|Xfake)] (11)

The generator is trained to maximize L′C + L
′
S

as illustrated in Eq. (10-11). Intuitively, the gen-
erator is rewarded (or punished) only based on
the “fake” samples it produces. It is rewarded by
generating sentences correctly exhibiting different
levels of vagueness, denoted by (L′C). It is also
rewarded by generating sentences that look “real”
and cannot be easily distinguished by the discrim-
inator (L′S). Eq. (11) corresponds to a heuristic,
non-saturating game loss that mitigates gradient
saturation (Goodfellow, 2016).

We experiment with two variants of the discrim-
inator, implemented respectively using the convo-
lutional neural networks (CNN) (Zhang and Wal-
lace, 2015) and LSTM (Hochreiter and Schmid-



3514

Word-Level
System P (%) R (%) F (%)
Context-Agnostic 11.30 78.15 19.71
Context-Aware 68.39 53.57 60.08

Table 4: Results of detecting vague words in privacy policies
using context-aware and context-agnostic classifiers.

huber, 1997). In both cases, the discriminator as-
signs a source and a vagueness label to each sen-
tence. The CNN discriminator scans through each
sentence using using a sliding window and apply
a number of filters to each window. A max pool-
ing over the sequence is performed to create a fea-
ture map for the sentence. This feature map is
treated as the sentence representation. It is fed to
two separate dense layers with softmax activation
to predict P (C|X) and P (S|X) respectively. In
contrast, the LSTM discriminator runs a forward
pass through the sentence and uses the last hidden
state as the sentence representation. Similarly, this
representation is fed to two dense layers used to
predict P (C|X) and P (S|X). Both methods pro-
duce probability estimations using a shared sen-
tence representation. Given the scarcity of labelled
sentences, this multitask setting is expected to im-
prove the model’s generalization capabilities.

6 Experiments

We conduct experiments on the annotated corpus
using a 5-fold cross validation; 10% of the train-
ing data in each fold are reserved for validation.
In the following sections we present details of ex-
perimental settings and report results on detecting
vague words and sentences in privacy policy texts.

6.1 Parameter Settings

The Xavier scheme (Glorot and Bengio, 2010) is
used for parameter initialization. For the context-
aware word classifier, the bidirectional LSTM has
512 hidden units. For AC-GAN, the CNN discrim-
inator uses convolutional filters of size {3, 4, 5}
and 128 filters for each size. The LSTM gener-
ator and discriminator both have 512 hidden units.
The generator is further pretrained on 82K privacy
policy sentences using a 10K vocabulary. The co-
efficient λC is set to {−1, 0, 1, 2} respectively for
‘clear,’ ‘somewhat clear,’ ‘vague,’ and ‘extremely
vague’ categories. v is initialized as a binary vec-
tor, where an entry is set to 1 if it is one of the
40 cue words for vagueness (Bhatia et al., 2016).
Word embeddings are initialized to their word2vec

S1 ... while we use [reasonable]tp [efforts]fn to
protect your PII, we can not guarantee its ab-
solute security.

S2 We use [third-party]fn advertising compa-
nies to serve [some]tp of the ads when you
visit our web site.

S3 The [information]fn we obtain from [those
services]fn [often depends]fp on your set-
tings or their privacy policies, so be sure to
check what those are.

S4 In the event of an insolvency, bankruptcy or
receivership, [personal data may]tp also be
transferred as a business asset.

Table 5: Examples of detected vague words in privacy poli-
cies. [·]tp denotes true positive, [·]fp is false positive, [·]fn is
false negative. All unmarked words are true negatives.

False Alarms Misses
POS Tag Perc. (%) POS Tag Perc. (%)
Adjective 37.19 Noun 47.64
Noun 35.24 Adjective 25.07
Verb 20.53 Verb 13.31
Adverb 4.63 Adverb 5.62
Determiner 1.72 Determiner 2.79

Table 6: The most frequent part-of-speech (POS) tags ap-
peared in false alarms and misses of detected vague words.

embeddings and are made trainable during the en-
tire training process.

6.2 Predicting Vague Words

We compare context-aware with context-agnostic
classifiers on detecting vague words in privacy
policy text. The goal is to test an important hy-
pothesis: that vagueness is an intrinsic property
of words, thus a word being vague has little to do
with its context. Results are presented in Table 4.

Interestingly, context-agnostic classifier yields
a high recall score (78.15%) despite it ignoring
context. This result indicates word vagueness
can be encoded in distributed word embeddings.
However, the low precision (11.30%) suggests
that context is important for fine-grained analysis.
While it is possible for experts to create a com-
prehensive list of vague terms for assessing pri-
vacy policies, extra effort is required to verify the
tagged vague terms. Using a context-aware clas-
sifier produces more balanced results, improving
the F-score from 19.71% to 60.08%. Our findings
suggest that the context information is necessary
for detecting vague words.

In Table 5, we present examples of detected
vague words. The nouns have caught our atten-
tion. The classifier misses several of these, in-
cluding “efforts,” “information,” “services,” per-



3515

Sentence-Level
System P (%) R (%) F (%)
Baseline (Majority) 25.77 50.77 34.19
LSTM 47.79 50.06 47.88
CNN 49.66 52.51 50.18

AC-GAN (Full Model) 51.00 53.50 50.42
AC-GAN (Vagueness Only) 52.90 54.64 52.34

Table 7: Results on classifying vague sentences.

haps because there is no clear definition for these
terminologies. In Table 6, we found nouns consist
of 47.64% of all the miss-detected vague words,
while adjectives consist of 37.19% of the false
alarms. There is also an interesting phenomenon.
In S3, “Information” and “those services” are con-
sidered more vague by humans than “often de-
pends.” However, if those terms are removed from
the sentence, yielding “The [..] we obtain from
[..] often depends on your settings or their privacy
policies.” In this case, the vagueness of “often de-
pends” become more prominent and is captured by
our system. It suggests that the degree of vague-
ness may be relative, depending on if other terms
in the sentence are more vague.

6.3 Predicting Vague Sentences

In Table 7 we present results on classifying pri-
vacy policy sentences into four categories: clear,
somewhat clear, vague, and extremely vague. We
compare AC-GAN with three baselines: CNN and
LSTM trained on human-annotated sentences, and
a majority baseline that assigns the most frequent
label to all test sentences. We observe that the AC-
GAN models (using CNN discriminator) perform
strongly, surpassing all baseline approaches. CNN
shows strong performance, yielding an F-score of
50.92%. A similar effect has been demonstrated
on other sentence classification tasks, where CNN
outperforms LSTM and logistic regression classi-
fiers (Kim, 2014; Zhang and Wallace, 2015). We
report results of AC-GAN using the CNN discrim-
inator. Comparing “Full Model” with “Vagueness
Only,” we found that allowing the AC-GAN to
only discriminate sentences of different levels of
vagueness, but not real/fake sentences, yields bet-
ter results. We conjecture this is because training
GAN models, especially with a multitask learn-
ing objective, can be unstable and more effort is
required to balance the two objectives (LS and
LC). Example sentences generated by AC-GAN
are presented in Table 9.

% (Freq) Clear SomeC Vague ExtrV

Clear 39.4 (477) 59.8 (723) 0.7 (8) 0.2 (2)
SomeC 12.4 (284) 85.2 (1945) 2.4 (54) 0.0 (1)
Vague 3.4 (31) 89.6 (828) 7.0 (65) 0.0 (0)
ExtrV 1.2 (1) 88.9 (72) 9.9 (8) 0.0 (0)

Table 8: Confusion matrix for sentence classification. The
decimal values are the percentage of system-identified sen-
tences that were placed in the specified vagueness class. For
example: the item in (row 1, col 2) conveys that 59.8% of
sentences (absolute count is 723) identified by the system as
“clear” were actually “somewhat clear” according to humans.

Figure 4: ROC curves for classifying vague words (left) and
sentences (right).

Figure 4 shows the ROC curves of the four
vagueness classes. Because the dataset is im-
balanced, the ROC curves are more informative
than F-scores. The “clear” and “somewhat clear”
classes yield promising AUC scores of 0.71 and
0.78 respectively. The “vague” and “extremely
vague” classes are more challenging. They are
also the minority classes, consisting of 20.5% and
1.8% of the annotated data. Confusion matrix
in Table 8 reveals that the majority of the sen-
tences are tagged as “somewhat clear,” while 7.0%
of the vague sentences are tagged as vague. It
suggests more annotated data may be helpful to
enable the classifier to distinguish “vague” and
“extremely vague” sentences. Interestingly, we
found there is little correlation between the sen-
tence vagueness score and sentence length (Pear-
son correlation r=0.18, p <0.001) while there is
a relatively strong correlation (r=0.57, p <0.001)
between sentence vagueness and the number of
vague words in it. This finding verifies our hy-
pothesis that vague words seem to increase the
perceived sentence vagueness.

Lessons learned. We summarize some lessons
learned from annotating and detecting vague con-
tent in privacy policies, useful for policy regula-
tors, users and website operators. In general, pri-
vacy policies are suggested to:

• provide clear definitions for key concepts.
Lacking definition is a major source of confu-



3516

Clear Our commitment to travian games uses
paid services or send an order online.
To learn how important anonymization it,
we provide a separate medicare.

SomeC Slate use certain cookies and offers.
Visitors who apply us an credit card may
sign up.

Vague There may take certain incidents various of-
ferings found on various topics; some or all
individual has used.
You may modify certain edit or otherwise
delete certain features or a similar id will no
longer.

ExtrV Also, some apps may offer contests, sweep-
stakes, games or some community where
necessary.
If necessary, buying or clarify certain links,
certain features of our site may place or
some or some features may offer stack or
unauthorized access some some functional-
ity.

Table 9: Plausible sentences generated by AC-GAN. They
exhibit different levels of vagueness. “SomeC” and “ExtrV”
are shorthands for “somewhat clear” and “extremely vague.”

sion for the unfamiliar reader. Example con-
cepts include personally identifiable informa-
tion, personal (non-personal) information, third
parties, service providers, subsidiaries, etc.

• suppress the use of vague words. There are on
average 2.5 vague words per sentence in our
corpus. The more vague words, the more likely
the sentence is perceived as vague (r = 0.57);

• use sentences with simple syntactic structure to
ease understanding. A sophisticated sentence
with vague terms in it, e.g., “You may request
deletion of your personal data by us, but please
note that we may be required (by law or oth-
erwise) to keep this information and not delete
it...” appears especially confusing to readers.

7 Conclusion

In this paper we present the first empirical study
on automatic detection of vague content in pri-
vacy policies. We create a sizable text corpus in-
cluding human annotations of vague words and
sentences. We further investigate the feasibility
of predicting vague words and sentences using
deep neural networks. Specifically we investigate
context-agnostic and context-aware models for de-
tecting vague words, and AC-GAN for detecting
vague sentences. Our results suggest that a super-
vised paradigm for vagueness detection provides
a promising avenue for identifying vague content
and improving the usability of privacy policies.

Acknowledgments

We thank the anonymous reviewers for their valu-
able comments and suggestions, which help to im-
prove this paper. This work is in part supported by
an ORC In-House Research Grant.

References
Waleed Ammar, Shomir Wilson, Norman Sadeh, and

Noah A. Smith. 2012. Automatic categorization of
privacy policies: A pilot study. Technical Report
CMU-LTI-12-019, Carnegie Mellon University.

Jaspreet Bhatia, Travis D. Breaux, Joel R. Reidenberg,
and Thomas B. Norton. 2016. A theory of vague-
ness and privacy risk perception. In Proceedings of
the IEEE International Conference on Requirements
Engineering (RE).

Daniel Braun, Elena Scepankova, Patrick Holl, and
Florian Matthes. 2017. SaToS: Assessing and sum-
marising terms of services from german webshops.
In Proceedings of the 10th International Conference
on Natural Language Generation (INLG).

Liwei Cai and William Yang Wang. 2018. KBGAN:
Adversarial learning for knowledge graph embed-
dings. In Proceedings of the North American Chap-
ter of the Association for Computational Linguistics
(NAACL).

Jason P.C. Chiu and Eric Nichols. 2016. Named entity
recognition with bidirectional LSTM-CNNs. Trans-
actions of the Association for Computational Lin-
guistics 4:357–370.

Xavier Glorot and Yoshua Bengio. 2010. Understand-
ing the difficulty of training deep feedforward neural
networks. In Proceedings of the 13th International
Conference on Artificial Intelligence and Statistics
(AISTATS).

Ian Goodfellow. 2016. NIPS 2016 tutorial: Generative
adversarial networks. arXiv:1701.00160 .

Jiatao Gu, Daniel Jiwoong Im, and Victor O.K. Li.
2018. Neural machine translation with gumbel-
greedy decoding. In Proceedings of the Thirty-
Second AAAI Conference on Artificial Intelligence
(AAAI).

Sepp Hochreiter and Jurgen Schmidhuber. 1997.
Long short-term memory. Neural Computation
9(8):1735–1780.

Dominic Hyde. 2014. Sorites paradox. In Edward N.
Zalta, editor, The Stanford Encyclopedia of Philoso-
phy.

Rosanna Keefe. 2000. Theories of Vagueness. Cam-
bridge University Press.

Yoon Kim. 2014. Convolutional neural networks for
sentence classification. In Proceedings of EMNLP.



3517

Diederik P. Kingma and Max Welling. 2014. Auto-
encoding variational bayes. In Proceedings of the
International Conference on Learning Representa-
tions (ICLR).

Jiwei Li, Will Monroe, Tianlin Shi, Sebastien Jean,
Alan Ritter, and Dan Jurafsky. 2017. Adversarial
learning for neural dialogue generation. In Proceed-
ings of the Conference on Empirical Methods in Nat-
ural Language Processing (EMNLP).

Fei Liu, Nicole Fella, and Kexin Liao. 2016. Modeling
language vagueness in privacy policies using deep
neural networks. In Proceedings of the AAAI Fall
Symposium on Privacy and Language Technologies.

Fei Liu, Rohan Ramanath, Norman Sadeh, and
Noah A. Smith. 2014. A step towards usable privacy
policy: Automatic alignment of privacy statements.
In Proceedings of the 25th International Conference
on Computational Linguistics (COLING).

Aaron K. Massey, Jacob Eisenstein, Annie I. Anton,
and Peter P. Swire. 2013. Automated text mining
for requirements analysis of policy documents. Pro-
ceedings of the 21st IEEE International Require-
ments Engineering Conference .

Aleecia M. McDonald and Lorrie Faith Cranor. 2008.
The cost of reading privacy policies. I/S: A Journal
of Law and Policy for the Information Society .

Tomas Mikolov, Ilya Sutskever, Kai Chen, Greg S. Cor-
rado, and Jeff Dean. 2013. Distributed representa-
tions of words and phrases and their compositional-
ity. In Proceedings of Advances in Neural Informa-
tion Processing Systems (NIPS).

Mehdi Mirza and Simon Osindero. 2014. Conditional
generative adversarial nets. CoRR abs/1411.1784.

Augustus Odena, Christopher Olah, and Jon Shlens.
2018. Conditional image synthesis with auxiliary
classifier GANs. In Proceedings of the Thirty-
fifth International Conference on Machine Learning
(ICML).

Rohan Ramanath, Fei Liu, Norman Sadeh, and
Noah A. Smith. 2014. Unsupervised alignment of
privacy policies using hidden markov models. In
Proceedings of the 52th Annual Meeting of the Asso-
ciation for Computational Linguistics (ACL 2014).

Joel R. Reidenberg, Travis Breaux, Lorrie Faith Cranor,
Brian French, Amanda Grannis, James T. Graves,
Fei Liu, Aleecia M. McDonald, Thomas B. Nor-
ton, Rohan Ramanath, N. Cameron Russell, Nor-
man Sadeh, and Florian Schaub. 2015. Disagree-
able privacy policies: Mismatches between meaning
and users’ understanding. Berkeley Law Technology
Journal 30(1).

Norman Sadeh, Alessandro Acquisti, Travis Breaux,
Lorrie Cranor, Aleecia McDonald, Joel Reiden-
berg, Noah Smith, Fei Liu, Cameron Russel, Flo-
rian Schaub, and Shomir Wilson. 2013. The usable

privacy policy project: Combining crowdsourcing,
machine learning and natural language processing to
semi-automatically answer those privacy questions
users care about. Technical Report CMU-ISR-13-
119, Carnegie Mellon University.

Kanthashree Mysore Sathyendra, Shomir Wilson, Flo-
rian Schaub, Sebastian Zimmeck, and Norman
Sadeh. 2017. Identifying the provision of choices
in privacy policy text. In Proceedings of the Con-
ference on Empirical Methods in Natural Language
Processing (EMNLP).

Stewart Shapiro. 2006. Vagueness in Context. Oxford:
Oxford University Press.

Hendrik Strobelt, Sebastian Gehrmann, Bernd Huber,
Hanspeter Pfister, and Alexander M. Rush. 2016.
Visual analysis of hidden state dynamics in recurrent
neural networks. In arXiv:1606.07461.

Kees van Deemter. 2010. Not Exactly: In Praise of
Vagueness. New York: Oxford University Press.

Shomir Wilson, Florian Schaub, Aswarth Abhilash
Dara, Frederick Liu, Sushain Cherivirala, Pe-
dro Giovanni Leon, Mads Schaarup Andersen, Se-
bastian Zimmeck, Kanthashree Mysore Sathyen-
dra, N. Cameron Russell, Thomas B. Norton, Ed-
uard Hovy, Joel R. Reidenberg, and Norman Sadeh.
2016a. The creation and analysis of a website pri-
vacy policy corpus. In Proceedings of the 54th An-
nual Meeting of the Association for Computational
Linguistics (ACL).

Shomir Wilson, Florian Schaub, Rohan Ramanath,
Norman Sadeh, Fei Liu, Noah A. Smith, and Fred-
erick Liu. 2016b. Crowdsourcing annotations for
websites’ privacy policies: Can it really work? In
Proceedings of the 25th International World Wide
Web Conference (WWW).

Lantao Yu, Weinan Zhang, Jun Wang, and Yong Yu.
2016. SeqGAN: Sequence generative adversarial
nets with policy gradient. In Proceedings of the
Thirty-First AAAI Conference on Artificial Intelli-
gence (AAAI).

Ye Zhang and Byron C. Wallace. 2015. A sensitiv-
ity analysis of (and practitioners’ guide to) convo-
lutional neural networks for sentence classification.
http://arxiv.org/abs/1510.03820v4 .


