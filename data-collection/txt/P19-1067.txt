



















































A Cross-Domain Transferable Neural Coherence Model


Proceedings of the 57th Annual Meeting of the Association for Computational Linguistics, pages 678–687
Florence, Italy, July 28 - August 2, 2019. c©2019 Association for Computational Linguistics

678

A Cross-Domain Transferable Neural Coherence Model

Peng Xu1, Hamidreza Saghir1, Jin Sung Kang1, Teng Long1, Avishek Joey Bose∗,1,2,
Yanshuai Cao1, Jackie Chi Kit Cheung1,2,3

1Borealis AI
{peng.z.xu,hamidreza.saghir,jinsung.kang,leo.long,yanshuai.cao}@borealisai.com

2McGill University
{joey.bose,jcheung}@cs.mcgill.ca

3Canada CIFAR Chair, Mila

Abstract

Coherence is an important aspect of text qual-
ity and is crucial for ensuring its readabil-
ity. One important limitation of existing co-
herence models is that training on one do-
main does not easily generalize to unseen cat-
egories of text. Previous work (Li and Ju-
rafsky, 2017) advocates for generative models
for cross-domain generalization, because for
discriminative models, the space of incoher-
ent sentence orderings to discriminate against
during training is prohibitively large. In this
work, we propose a local discriminative neu-
ral model with a much smaller negative sam-
pling space that can efficiently learn against
incorrect orderings. The proposed coherence
model is simple in structure, yet it significantly
outperforms previous state-of-art methods on a
standard benchmark dataset on the Wall Street
Journal corpus, as well as in multiple new
challenging settings of transfer to unseen cate-
gories of discourse on Wikipedia articles.

1 Introduction

Coherence is a discourse property that is con-
cerned with the logical and semantic organiza-
tion of a passage, such that the overall meaning
of the passage is expressed fluidly and clearly.
It is an important quality measure for text gen-
erated by humans or machines, and modelling
coherence can benefit many applications, includ-
ing summarization, question answering (Verberne
et al., 2007), essay scoring (Miltsakaki and Ku-
kich, 2004; Burstein et al., 2010) and text gener-
ation (Park and Kim, 2015; Kiddon et al., 2016;
Holtzman et al., 2018).

The ability to generalize to new domains of text
is desirable for NLP models in general. Besides
the practical reason of avoiding costly retraining

∗Work done while the author was an intern at Borealis
AI.

on every new domain, for coherence modelling,
we would also like our model to make decisions
based on the semantic relationships between sen-
tences, rather than simply overfit to the structural
cues of a specific domain.

The standard task used to test a coherence
model in NLP is sentence ordering, for example,
to distinguish between a coherently ordered list of
sentences and a random permutation thereof. Ear-
lier work focused on feature engineering, drawing
on theories such as Centering Theory (Grosz et al.,
1995) and Rhetorical Structure Theory (Thomp-
son and Mann, 1987) to propose features based
on local entity and lexical transitions, as well as
more global concerns regarding topic transitions
(Elsner et al., 2007). With the popularization of
deep learning, the focus has shifted towards spec-
ifying model architectures, including a number of
recent models that rely on distributed word rep-
resentations used in a deep neural network (Li
and Jurafsky, 2017; Nguyen and Joty, 2017; Lo-
geswaran et al., 2018).

One key decision which forms the foundation of
a model is whether it is discriminative or genera-
tive. Discriminative models depend on contrastive
learning; they use automatic corruption methods
to generate incoherent passages of text, then learn
to distinguish coherent passages from incoherent
ones. By contrast, generative approaches aim
at maximising the likelihood of the training text,
which is assumed to be coherent, without seeing
incoherent text or explicitly incorporating coher-
ence into the optimization objective.

It has been argued that neural discriminative
models of coherence are prone to overfitting on
the particular dataset and domain that they are de-
signed for (Li and Jurafsky, 2017), possibly due
to the expressive nature of functions learnable by
a neural network. Another potential problem for
discriminative models raised by Li and Jurafksy is



679

that there are n! possible sentence orderings for a
passage with n sentences, thus the sampled nega-
tive instances can only cover a tiny proportion of
this space, limiting the performance of such mod-
els. There is thus an apparent association between
discriminative models and high performance on a
specific narrow domain.

We argue in this paper that there is, in fact,
nothing inherent about discriminative models that
cause previous systems to be brittle to domain
changes. We demonstrate a solution to the above
problems by combining aspects of previous gener-
ative and discriminative models to produce a sys-
tem that works well in both in-domain and cross-
domain settings, despite being a discriminative
model overall.

Our method relies on two key ideas. The first is
to reexamine the operating assumption of previous
work that a global, passage-level model is neces-
sary for good performance. While it is true that
coherence is a property of a passage as a whole,
capturing long-term dependencies in sequences re-
mains a fundamental challenge when training neu-
ral networks in practice (Trinh et al., 2018). On the
other hand, it is plausible that much of global co-
herence can be decomposed into a series of local
decisions, as demonstrated by foundational theo-
ries such as Centering Theory. Our hypothesis in
this work is that there remains much to be learned
about local coherence cues which previous work
has not fully captured and that these cues make up
an essential part of global coherence. We demon-
strate that such is the case.

Our model thus take neighbouring pairs of sen-
tences as inputs, for which the space of nega-
tives is much smaller and can therefore be effec-
tively covered by sampling other sentences in the
same document. Surprisingly, adequately mod-
elling local coherence alone significantly outper-
forms previous approaches, and furthermore, lo-
cal coherence captures text properties that are
domain-agnostic, generalizing much better in
open-domain settings to unseen categories of text.

Our second insight is that the superiority of pre-
vious generative approaches in cross-domain set-
tings can be effectively incorporated into a dis-
criminative model as a pre-training step. We
show that generatively pre-trained sentence en-
coders enhance the performance of our discrimi-
native local coherence model.

We demonstrate the effectiveness of our ap-

proach on the Wall Street Journal (WSJ) bench-
mark dataset, as well as on three challenging new
evaluation protocols using different categories of
articles drawn from Wikipedia that contain in-
creasing levels of domain diversity. We show
that our discriminative model significantly outper-
forms strong baselines on all datasets tested. Fi-
nally, hypothesis testing shows that the coherence
scores from our model have a significant statisti-
cal association with the “rewrite” flag for regular
length Wikipedia articles, demonstrating that our
model prediction aligns with human judgement of
text quality.

To summarize, our contributions are:

1. We correct the misconception that discrim-
inative models cannot generalize well for
cross-domain coherence scoring, with a
novel local discriminative neural model.

2. We propose a set of cross-domain coherence
datasets with increasingly difficult evaluation
protocols.

3. Our new method outperforms previous meth-
ods by a significant margin on both the previ-
ous closed domain WSJ dataset as well as on
all open-domain ones, setting the new state-
of-the-art for coherence modelling.

4. Even with the simplest sentence encoder, av-
eraged GloVe, our method frequently outper-
forms previous methods, while it can gain
further accuracy by using stronger encoders.

2 Related Work

Barzilay and Lapata (2008) introduced the entity
grid representation of a document, which uses the
local syntactic transitions of entity mentions to
model discourse coherence. Three tasks for eval-
uation were introduced for evaluation: discrimi-
nation, summary coherence rating, and readability
assessment. Many models were proposed to ex-
tend this model (Eisner and Charniak, 2011; Feng
and Hirst, 2012; Guinaudeau and Strube, 2013),
including models relying on HMMs (Louis and
Nenkova, 2012) to model document structure.

Driven by the success of deep neural networks,
many neural models were proposed in the past
few years. Li and Hovy (2014) proposed a neural
clique-based discriminative model to compute the
coherence score of a document by estimating a co-
herence probability for each clique of L sentences.
Nguyen and Joty (2017) proposed a neural entity



680

grid model with convolutional neural network that
operates over the entity grid representation. Mohi-
uddin et al. (2018) extended this model for written
asynchronous conversations. Both methods rely
on hand-crafted features derived from NLP pre-
processing tools to enhance the original entity grid
representation. We take a different approach to
feature engineering in our work, focusing on the
effect of supervised or unsupervised pre-training.

Li and Jurafsky (2017) was the first work to
use generative models to model coherence and
proposed to evaluate the performance of coher-
ence models in an open-domain setting. Most
recently, Logeswaran et al. (2018) used an RNN
based encoder-decoder architecture to model the
coherence which can also be treated as the gener-
ative model. One obvious disadvantage of gener-
ative models is that they maximize the likelihood
of training text but never see the incoherent text.
In other words, to produce a binary classification
decision about coherence, such a generative model
only sees data from one class. As we will demon-
strate later in the experiments, this puts generative
models at a disadvantage comparing to our local
discriminative model.

3 Background: Generative Coherence
Models

To understand the advantages of our local dis-
criminative model, we first introduce the previous
global passage-level generative coherence mod-
els. We will use “passage” and “document” in-
terchangeably in this work, since all the models
under consideration work in the same way for a
full document or a passage in document.

Generative models are based on the idea that in
a coherent passage, subsequent sentences should
be predictable given their preceding sentences,
and vice versa. Let us denote the corpus as C =
{dk}Nk=1, which consists of N documents, with
each document dk comprised of a sequence of
sentences {si}. Formally, generative coherence
models are trained using a log-likelihood objec-
tive as follows (with some variations according to
the specific model):

max
θ

∑
d∈C

∑
s∈d

log p(s|cs; θ), (1)

where cs is the context of the sentence s and θ
represents the model parameters. cs can be cho-
sen as the next or previous sentence (Li and Juraf-

sky, 2017), or all previous sentences (Logeswaran
et al., 2018).

There are two hidden assumptions behind this
maximum likelihood approach to coherence. First,
it assumes that conditional log likelihood is a good
proxy for coherence. Second, it assumes that train-
ing can well capture the long-range dependencies
implied by the generative model.

Conditional log likelihood essentially measures
the compressibility of a sentence given the con-
text; i.e., how predictable s is given cs. However,
although incoherent next sentence is generally not
predictable given the context, the inverse is not
necessarily true. In other words, a coherent sen-
tence does not need to have high conditional log-
likelihood, as log likelihood can also be influenced
by other factors such as fluency, grammaticality,
sentence length, and the frequency of words in
a sentence. Second, capturing long-range depen-
dencies in neural sequence models is still an ac-
tive area of research with many challenges (Trinh
et al., 2018), hence there is no guarantee that maxi-
mum likelihood learning can faithfully capture the
inductive bias behind the first assumption.

4 Our Local Discriminative Model

We propose the local coherence discriminator
model (LCD) whose operating assumption is that
the global coherence of a document can be well
approximated by the average of coherence scores
between consecutive pairs of sentences. Our ex-
perimental results later will validate the appropri-
ateness of this assumption. For now, this sim-
plification allows us to cast the learning prob-
lem as discriminating consecutive sentence pairs
(si, si+1) in the training documents (assumed to
be coherent) from incoherent ones (si, s′) (nega-
tive pairs to be constructed).

Training objective: Formally, our discrimina-
tive model fθ(., .) takes a sentence pair and returns
a score. The higher the score, the more coherent
the input pair. Then our training objective is:

L(θ)=
∑
d∈C

∑
si∈d

E
p(s′|si)

[
L(fθ(si, si+1), fθ(si, s

′))
]

(2)
where Ep(s′|si) denotes expectation with respect to
negative sampling distribution p which could be
conditioned on si; andL(., .) is a loss function that
takes two scores, one for a positive pair and one for
a negative sentence pair.



681

Loss function: The role of the loss function is
to encourage f+ = fθ(si, si+1) to be high while
f− = fθ(si, s

′) to be low. Common losses such as
margin or log loss can all be used. Through exper-
imental validation, we found that margin loss to
be superior for this problem. Specifically, L takes
on the form: L(f+, f−) = max(0, η − f+ + f−)
where η is the margin hyperparameter.

Negative samples: Technically, we are free to
choose any sentence s′ to form a negative pair
with si. However, because of potential differ-
ences in genre, topic and writing style, such neg-
atives might cause the discriminative model to
learn cues unrelated to coherence. Therefore, we
only select sentences from the same document to
construct negative pairs. Specifically, suppose si
comes from document dk with length nk, then
p(s′|si) is a uniform distribution over the nk−1
sentences {sj}j 6= i from dk. For a document with
n sentences, there are n−1 positive pairs, and
(n−1)∗(n−2)/2 negative pairs. It turns out that
the quadratic number of negatives provides a rich
enough learning signal, while at the same time, is
not too prohibitively large to be effectively cov-
ered by a sampling procedure. In practice, we
sample a new set of negatives each time we see
a document, hence after many epochs, we can ef-
fectively cover the space for even very long doc-
uments. Section 5.7 discusses further details on
sampling.

4.1 Model Architecture

The specific neural architecture that we use for fθ
is illustrated in Figure 1. We assume the use of
some pre-trained sentence encoder, which is dis-
cussed in the next section.

Given an input sentence pair, the sentence en-
coder maps the sentences to real-valued vectors S
and T . We then compute the concatenation of the
following features: (1) concatenation of the two
vectors (S, T ); (2) element-wise difference S−T ;
(3) element-wise product S ∗T ; (4) absolute value
of element-wise difference |S − T |. The concate-
nated feature representation is then fed to a one-
layer MLP to output the coherence score.

In practice, we make our overall coherence
model bidirectional, by training a forward model
with input (S, T ) and a backward model with in-
put (T, S) with the same architecture but separate
parameters. The coherence score is then the aver-
age from the two models.

Figure 1: Generic architecture for our proposed model.

4.2 Pre-trained Generative Model as the
Sentence Encoder

Our model can work with any pre-trained sen-
tence encoder, ranging from the most simplistic
average GloVe (Pennington et al., 2014) embed-
dings to more sophisticated supervised or unsu-
pervised pre-trained sentence encoders (Conneau
et al., 2017). As mentioned in the introduction,
since generative models can often be turned into
sentence encoder, generative coherence model can
be leveraged by our model to benefit from the
advantages of both generative and discriminative
training, similar to (Kiros et al., 2015; Peters et al.,
2018). After initialization, we freeze the genera-
tive model parameters to avoid overfitting.

In Section 5, we will experimentally show that
while we do benefit from strong pre-trained en-
coders, the fact that our local discriminative model
improves over previous methods is independent of
the choice of sentence encoder.

5 Experiments

5.1 Evaluation Tasks

Following Nguyen and Joty (2017) and other pre-
vious work, we evaluate our models on the dis-
crimination and insertion tasks. Additionally, we
evaluate on the paragraph reconstruction task in
open-domain settings, in a similar manner to Li
and Jurafsky (2017).

In the discrimination task, a document is com-
pared to a random permutation of its sentences,
and the model is considered correct if it scores the
original document higher than the permuted one.
Twenty permutations are used in the test set in ac-
cordance with previous work.



682

In the insertion task, we evaluate models based
on their ability to find the correct position of a sen-
tence that has been removed from a document. To
measure this, each sentence in a given document
is relocated to every possible position. An inser-
tion position is selected for which the model gives
the highest coherence score to the document. The
insertion score is then computed as the average
fraction of sentences per document reinserted into
their original position.

In the reconstruction task, the goal is to recover
the original correct order of a shuffled paragraph
given the starting sentence. We use beam search to
drive the reconstruction process, with the different
coherence models serving as the selection mech-
anism for beam search. We evaluate the perfor-
mance of different models based on the rank cor-
relation achieved by the top-1 reconstruction after
search, averaged across different paragraphs.

For longer documents, since a random permuta-
tion is likely to be different than the original one
at many places, the discrimination task is easy. In-
sertion is much more difficult since the candidate
documents differ only by the position of one sen-
tence. Reconstruction is also hard because small
errors accumulate.

5.2 Datasets and Protocols
Closed-domain: The single-domain evaluation
protocol is done on the Wall Street Journal (WSJ)
portion of Penn Treebank (Table 2), similar to pre-
vious work (Nguyen and Joty, 2017)1.

Open-domain: Li and Jurafsky (2017) first pro-
posed open-domain evaluation for coherence mod-
elling using Wikipedia articles, but did not release
the dataset2.

Hence, we create a new dataset based on
Wikipedia and design three cross-domain evalua-
tion protocols with increasing levels of difficulty.
Based on the ontology defined by DBpedia3, we
choose seven different categories under the do-
main Person and three other categories from irrel-
evant domains. We parse all the articles in these
categories and extract paragraphs with more than
10 sentences to be used as the passages for train-
ing and evaluation. The statistics of this dataset

1Since the preprocessing pipeline is different, we generate
the random permutations by ourselves.

2A version of preprocessed data consisting of integer in-
dices is available online, but it is not usable without important
preprocessing details.

3http://mappings.dbpedia.org/server/ontology/classes/

is summarized in Table 1. The three settings with
increasing level of hardness are as follows:

1. Wiki-A(rticle) randomly split all paragraphs
of the seven categories under Person into
training part and testing part;

2. Wiki-C(ategory) hold out paragraphs in one
category from Person for evaluation and train
on the remaining categories in Person;

3. Wiki-D(omain) train on all seven categories
in Person, and evaluate on completely differ-
ent domains, such as Plant, Institution, Celes-
tialBody, and even WSJ.

Wiki-A setting is essentially the same protocol
as the open domain evaluation as the one used in
(Li and Jurafsky, 2017). Importantly, there is no
distribution drift (up to sampling noise) between
training and testing. Thus, this protocol only tests
whether the coherence model is able to capture a
rich enough set of signal for coherence, and does
not check whether the learned cues are specific to
the domain, or generic semantic signals. For ex-
ample, cues based on style or regularities in dis-
course structure may not generalize to different
domains. Therefore, we designed the much harder
Wiki-C and Wiki-D to check whether the coher-
ence models capture cross-domain transferrable
features. In particular, in the Wiki-D setting, we
even test whether the models trained on Person ar-
ticles from Wikipedia generalize to WSJ articles.

Domain Category # Paras Avg. # Sen.
Person Artist 9553 11.87

Athlete 23670 12.26
Politician 2420 11.62

Writer 3310 11.83
MilitaryPerson 6428 11.90
OfficeHolder 6578 11.54

Scientist 2766 11.77
Species Plant 3100 12.26
Organization Institution 5855 11.58
Place CelestialBody 414 11.55

Table 1: Statistics of the Wiki Dataset.

5.3 Baselines

We compared our proposed model LCD against
two document-level discriminative models: (1)
Clique-based discriminator Clique-Discr. (Li and
Hovy, 2014; Li and Jurafsky, 2017) with win-
dow size 3 and 7. (2) Neural entity grid model
Grid-CNN and Extended Grid-CNN (Nguyen



683

and Joty, 2017); And three generative models:
(3) Seq2Seq (Li and Jurafsky, 2017); (4) Vae-
Seq2Seq (Li and Jurafsky, 2017)4 ; (5) LM, an
RNN language model, and use the difference be-
tween conditional log likelihood of a sentence
given its preceding context, and the marginal log
likelihood of the sentence. All the results are
based on our own implementations except Grid-
CNN and Extended Grid-CNN, for which we
used code from the authors.

We compare these baselines to our proposed
model with three different encoders:

1. LCD-G: use averaged GloVe vectors (Pen-
nington et al., 2014) as the sentence repre-
sentation;

2. LCD-I: use pre-trained InferSent (Conneau
et al., 2017) as the sentence encoder;

3. LCD-L: apply max-pooling on the hidden
state of the language model to get the sen-
tence representation.

5.4 Results on Domain-specific Data

Discr. Ins.
Clique-Discr. (3) 70.91 11.53
Clique-Discr. (7) 70.30 5.01
Grid-CNN 85.57 (85.13) 23.12
Extended Grid-CNN 88.69 (87.51) 25.95
Seq2Seq 86.95 27.28
Vae-Seq2Seq 87.01 26.73
LM 86.50 26.33
LCD-G 92.51 30.30
LCD-I 94.54 32.34
LCD-L 95.49 33.79

Table 2: Accuracy of Discrimination and Insertion
tasks evaluated on WSJ. For Grid-CNN and Extended
Grid-CNN, the numbers outside brackets are taken
from the corresponding paper, and numbers shown in
the bracket are based on our experiments with the code
released by the authors.

We first evaluate the proposed models on the
Wall Street Journal (WSJ) portion of Penn Tree-
bank (Table 2). Our proposed models perform sig-
nificantly better than all other baselines, even if we
use the most naı̈ve sentence encoder, i.e., averaged
GloVe vectors. Among all the sentence encoders,

4As the authors did not release their code, so we tried our
best at replicating their model. Some important implementa-
tion details are missing from (Li and Jurafsky, 2017), so we
cannot guarantee exactly the same setup as in (Li and Juraf-
sky, 2017).

LM trained on the local data in an unsupervised
fashion performs the best, better than InferSent
trained on a much larger corpus with supervised
learning. In addition, combining the generative
model LM with our proposed architecture as the
sentence encoder improves the performance sig-
nificantly over the generative model alone.

5.5 Results on Open-Domain Data

Clique-Discr. (3) 76.17
Clique-Discr. (7) 73.86
Seq2Seq 86.63
Vae-Seq2Seq 82.40
LM 93.83
LCD-G 91.32
LCD-I 94.01
LCD-L 96.01

Table 3: Accuracy of discrimination task under Wiki-A

We next present results in the more challeng-
ing open-domain settings. Tables 3, 4, and 5
present results on the discriminative task under the
Wiki-A, Wiki-C, Wiki-D settings. We do not re-
port results of the neural entity grid models, since
these models heavily depend on rich linguistics
features from a preprocessing pipeline, but we
cannot obtain these features on the Wiki datasets
with high enough accuracy using standard pre-
processing tools. As in the closed-domain set-
ting, our proposed models outperform all the base-
lines for almost all tasks even with the averaged
GloVe vectors as the sentence encoder. Gener-
ally, LCD-L performs better than LCD-I, but their
performances are comparable under Wiki-D set-
ting. This result may be caused by the fact that
InferSent is pre-trained on a much larger dataset
in a supervised way, and generalizes better to un-
seen domains.

As the Wiki-A setting is similar to the open-
domain setting proposed by Li and Jurafsky
(2017), and we also have similar observations as
stated in their papers. The generative models per-
form quite well under this setting and applying
them on top of our proposed architecture as the
sentence encoder further enhances their perfor-
mances, as illustrated in Table 3. However, as ob-
served in Tables 4 and 5, the generative models
do not generalize as well into unseen categories,
and perform even worse in unseen domains. We
emphasize that a protocol like Wiki-A or simi-



684

Model Artist Athlete Politician Writer MilitaryPerson OfficeHolder Scientist Average
Clique-Discr. (3) 73.01 68.90 73.82 73.28 72.86 73.74 74.56 72.88
Clique-Discr. (7) 71.26 66.56 73.72 72.01 72.67 72.62 71.86 71.53
Seq2Seq 82.72 73.45 84.88 85.99 81.40 83.25 85.27 82.42
Vae-Seq2Seq 82.58 74.14 84.70 84.94 81.07 82.66 85.09 82.17
LM 88.18 78.79 88.95 90.68 87.02 87.35 91.92 87.56
LCD-G 89.66 86.06 90.98 90.26 89.23 89.86 90.64 89.53
LCD-I 92.14 89.03 93.23 92.07 91.63 92.39 93.03 91.93
LCD-L 93.54 90.13 94.04 93.68 93.20 93.01 94.81 93.20

Table 4: Accuracy of discrimination task under Wiki-C setting.

Model Plant Institution CelestialBody WSJ Average
Clique-Discr. (3) 66.14 66.51 60.38 64.71 64.44
Clique-Discr. (7) 65.47 69.14 61.44 66.66 65.68
Seq2Seq 82.58 80.86 69.44 74.62 76.88
Vae-Seq2Seq 81.90 78.00 69.10 73.27 75.57
LM 81.88 83.82 74.78 79.78 80.07
LCD-G 86.57 86.10 79.16 82.51 83.59
LCD-I 89.07 88.58 80.41 83.27 85.33
LCD-L 88.83 89.46 81.31 82.23 85.48

Table 5: Accuracy of discrimination task under Wiki-D setting.

lar setup considered in Li and Jurafsky (2017)
is insufficient for evaluating open domain perfor-
mance. Because difficulties in open domain co-
herence modelling lie not only in the variety of
style and content in the dataset, but also in the fact
that training set cannot cover all potential variation
there is in the wild, making cross domain general-
ization a critical requirement.

5.6 Paragraph Order Reconstruction Results

Model Wiki-D (CelestialBody) Wiki-A
Seq2Seq 0.2104 0.2119
LM 0.1656 0.1420
LCD-I 0.2507 0.2744
LCD-L 0.2326 0.2900

Table 6: Kendall’s tau for re-ordering on Wiki-A/-D

As shown by the discrimination and insertion
tasks, Seq2Seq and LM are the stronger baselines,
so for paragraph reconstruction, we compare our
method to them, on two cross domain settings, the
simpler Wiki-A and the harder Wiki-D. We re-
port the reconstruction quality via Kendall’s tau
rank correlation in Table 6, which shows that our
method is superior by a significant margin.

5.7 Hyperparameter Setting and
Implementation Details

In this work, we search through different hyper-
parameter settings by tuning on the development
data of the WSJ dataset, then apply the same set-
ting across all the datasets and protocols. The

fact that one set of hyperparameters tuned on the
closed-domain setting works across all protocols,
including open-domain ones, demonstrates the ro-
bustness of our method.

The following hyperparameter settings are cho-
sen: Adam optimizer (Kingma and Ba, 2014) with
default settings and learning rate 0.001, and no
weight decay; the number of hidden state dh for
the one-layer MLP as 500, input dropout proba-
bility pi as 0.6, hidden dropout probability ph as
0.3; the margin loss was found to be superior to
log loss, and margin of 5.0 was selected. In ad-
dition, we use early-stopping based on validation
accuracy in all runs.

Furthermore, during training, every time we
encounter a document, we sample 50 triplets
(si, si+1, s

′)’s, where (si, si+1)’s form positive
pairs while (si, s′)’s form negative pairs. So effec-
tively, we resample sentences so that documents
are trained for the same number of steps regard-
less of the length. For all the documents including
the permuted ones, we add two special tokens to
indicate the start and the end of the document.

5.8 Analysis

5.8.1 Ablation Study

To better understand how different design choices
affect the performance of our model, we present
the results of an ablation study using variants of
our best-performing models in Table 7. The pro-
tocol used for this study is Wiki-D with Celes-
tialBody and Wiki-WSJ, the two most challenging



685

datasets in all of our evaluations.
The first variant uses a unidirectional model in-

stead of the default bidirectional mode with two
separately trained models. The second variant
only uses the concatenation of the two sentence
representations as the features instead of the full
feature representation described in Section 4.1.

Model CelestialBody Wiki-WSJ
LCD-L 81.31 82.23
no bidirectional 80.33 82.30
no extra features 79.28 79.84

Table 7: Ablation study: Discr. under Wiki-D

As we can see, even our ablated models still out-
perform the baselines, though performance drops
slightly compared to the full model. This demon-
strates the effectiveness of our general framework
for modelling coherence.

5.8.2 Effect of Sample Coverage

Figure 2: Discrimination accuracy on CelestialBody
and Wiki-WSJ with different portions of all valid sam-
ples. The x axis is in log-scale.

Previous work raised concerns that negative
sampling cannot effectively cover the space of
negatives for discriminative learning (Li and Ju-
rafsky, 2017). Fig. 2 shows that for our local dis-
criminative model, there is a diminishing return
when considering greater coverage beyond certain
point (20% on these datasets). Hence, our sam-
pling strategy is more than sufficient to provide
good coverage for training.

5.8.3 Comparison with Human Judgement
To evaluate how well our coherence model aligns
with human judgements of text quality, we com-
pare our coherence score to Wikipedia’s article-
level “rewrite” flags. This flag is used for articles
that do not adhere to Wikipedia’s style guidelines,

which could be due to other reasons besides text
coherence, so this is an imperfect proxy metric.
Nevertheless, we aim to demonstrate a potential
correlation here, because carelessly written arti-
cles are likely to be both incoherent and in vi-
olation of style guidelines. This setup is much
more challenging than previous evaluations of co-
herence models, as it requires the comparison of
two articles that could be on very different topics.

For evaluation, we want to verify whether there
is a difference in average coherence between ar-
ticles marked for rewrite and articles that are
not. We select articles marked with an article-
level rewrite flag from Wikipedia, and we sam-
ple the non-rewrite articles randomly. We then
choose articles that have a minimum of two para-
graphs with at least two sentences. We use our
model trained for the Wiki-D protocol, and av-
erage its output scores per paragraph, then aver-
age these paragraph scores to obtain article-level
scores. This two-step process ensures that all para-
graphs contribute roughly equally to the final co-
herence score. We then perform a one-tailed t-test
for the mean coherence scores between the rewrite
and no-rewrite groups.

We find that among articles of a typical length
between 2,000 to 6,000 characters (Wikipedia av-
erage length c. 2,800 characters), the average co-
herence scores are 0.56 (marked for rewrite) vs.
0.79 (not marked) with a p-value of .008. For
longer articles of 8,000 to 14,000 characters, the
score gap is smaller (0.60 vs 0.64), and p-value
is 0.250. It is possible that in the longer marked
article, only a subportion of the article is incoher-
ent, or that other stylistic factors play a larger role,
which our simple averaging does not capture well.

6 Conclusion

In this paper, we examined the limitations of two
general frameworks for coherence modelling; i.e. ,
passage-level discriminative models and genera-
tive models. We propose a simple yet effective lo-
cal discriminative neural model which retains the
advantages of generative models while address-
ing the limitations of both kinds of models. Ex-
perimental results on a wide range of tasks and
datasets demonstrate that the proposed model out-
performs previous state-of-the-art methods signif-
icantly and consistently on both domain-specific
and open-domain datasets.



686

Acknowledgements

We thank all the anonymous reviewers for their
valuable inputs.

References
Regina Barzilay and Mirella Lapata. 2008. Modeling

local coherence: An entity-based approach. Compu-
tational Linguistics, 34(1):1–34.

Jill Burstein, Joel Tetreault, and Slava Andreyev. 2010.
Using entity-based features to model coherence in
student essays. In Human language technologies:
The 2010 annual conference of the North American
chapter of the Association for Computational Lin-
guistics, pages 681–684. Association for Computa-
tional Linguistics.

Alexis Conneau, Douwe Kiela, Holger Schwenk, Loic
Barrault, and Antoine Bordes. 2017. Supervised
learning of universal sentence representations from
natural language inference data. EMNLP.

Micha Eisner and Eugene Charniak. 2011. Extending
the entity grid with entity-specific features. In Pro-
ceedings of the 49th Annual Meeting of the Associ-
ation for Computational Linguistics: Human Lan-
guage Technologies: short papers-Volume 2, pages
125–129. Association for Computational Linguis-
tics.

Micha Elsner, Joseph Austerweil, and Eugene Char-
niak. 2007. A unified local and global model for dis-
course coherence. In Human Language Technolo-
gies 2007: The Conference of the North American
Chapter of the Association for Computational Lin-
guistics; Proceedings of the Main Conference, pages
436–443.

Vanessa Wei Feng and Graeme Hirst. 2012. Extend-
ing the entity-based coherence model with multiple
ranks. In Proceedings of the 13th Conference of the
European Chapter of the Association for Computa-
tional Linguistics, pages 315–324. Association for
Computational Linguistics.

Barbara J Grosz, Scott Weinstein, and Aravind K Joshi.
1995. Centering: A framework for modeling the lo-
cal coherence of discourse. Computational linguis-
tics, 21(2):203–225.

Camille Guinaudeau and Michael Strube. 2013.
Graph-based local coherence modeling. In Proceed-
ings of the 51st Annual Meeting of the Association
for Computational Linguistics (Volume 1: Long Pa-
pers), volume 1, pages 93–103.

Geoffrey E Hinton, Nitish Srivastava, Alex Krizhevsky,
Ilya Sutskever, and Ruslan R Salakhutdinov. 2012.
Improving neural networks by preventing co-
adaptation of feature detectors. arXiv preprint
arXiv:1207.0580.

Ari Holtzman, Jan Buys, Maxwell Forbes, Antoine
Bosselut, David Golub, and Yejin Choi. 2018.
Learning to write with cooperative discriminators.
arXiv preprint arXiv:1805.06087.

Chloé Kiddon, Luke Zettlemoyer, and Yejin Choi.
2016. Globally coherent text generation with neural
checklist models. In Proceedings of the 2016 Con-
ference on Empirical Methods in Natural Language
Processing, pages 329–339.

Diederik P Kingma and Jimmy Ba. 2014. Adam: A
method for stochastic optimization. arXiv preprint
arXiv:1412.6980.

Ryan Kiros, Yukun Zhu, Ruslan R Salakhutdinov,
Richard Zemel, Raquel Urtasun, Antonio Torralba,
and Sanja Fidler. 2015. Skip-thought vectors. In
Advances in neural information processing systems,
pages 3294–3302.

Jiwei Li and Eduard Hovy. 2014. A model of co-
herence based on distributed sentence representa-
tion. In Proceedings of the 2014 Conference on
Empirical Methods in Natural Language Processing
(EMNLP), pages 2039–2048.

Jiwei Li and Dan Jurafsky. 2017. Neural net models
for open-domain discourse coherence. In Proceed-
ings of the 2017 Conference on Empirical Methods
in Natural Language Processing (EMNLP), pages
198–209.

Lajanugen Logeswaran, Honglak Lee, and Dragomir
Radev. 2018. Sentence ordering and coherence
modeling using recurrent neural networks. AAAI.

Annie Louis and Ani Nenkova. 2012. A coherence
model based on syntactic patterns. In Proceedings
of the 2012 Joint Conference on Empirical Methods
in Natural Language Processing and Computational
Natural Language Learning, pages 1157–1168. As-
sociation for Computational Linguistics.

Eleni Miltsakaki and Karen Kukich. 2004. Evaluation
of text coherence for electronic essay scoring sys-
tems. Natural Language Engineering, 10(1):25–55.

Tasnim Mohiuddin, Shafiq Joty, and Dat Tien Nguyen.
2018. Coherence modeling of asynchronous con-
versations: A neural entity grid approach. arXiv
preprint arXiv:1805.02275.

Dat Tien Nguyen and Shafiq Joty. 2017. A neural local
coherence model. In Proceedings of the 55th Annual
Meeting of the Association for Computational Lin-
guistics (Volume 1: Long Papers), volume 1, pages
1320–1330.

Cesc C Park and Gunhee Kim. 2015. Expressing an
image stream with a sequence of natural sentences.
In Advances in Neural Information Processing Sys-
tems, pages 73–81.



687

Jeffrey Pennington, Richard Socher, and Christopher
Manning. 2014. Glove: Global vectors for word
representation. In Proceedings of the 2014 confer-
ence on empirical methods in natural language pro-
cessing (EMNLP), pages 1532–1543.

Matthew E Peters, Mark Neumann, Mohit Iyyer, Matt
Gardner, Christopher Clark, Kenton Lee, and Luke
Zettlemoyer. 2018. Deep contextualized word rep-
resentations. NAACL.

Mukund Sundararajan, Ankur Taly, and Qiqi Yan.
2017. Axiomatic attribution for deep networks.
arXiv preprint arXiv:1703.01365.

Sandra A Thompson and William C Mann. 1987.
Rhetorical structure theory. IPRA Papers in Prag-
matics, 1(1):79–105.

Trieu H Trinh, Andrew M Dai, Thang Luong, and
Quoc V Le. 2018. Learning longer-term dependen-
cies in rnns with auxiliary losses. arXiv preprint
arXiv:1803.00144.

Suzan Verberne, Lou Boves, Nelleke Oostdijk, and
Peter-Arno Coppen. 2007. Evaluating discourse-
based answer extraction for why-question answer-
ing. In Proceedings of the 30th annual international
ACM SIGIR conference on Research and develop-
ment in information retrieval, pages 735–736. ACM.


