










































KySS 1.0: a Framework for Automatic Evaluation of Chinese Input Method Engines


International Joint Conference on Natural Language Processing, pages 1195–1201,
Nagoya, Japan, 14-18 October 2013.

KySS 1.0: a Framework for Automatic Evaluation
of Chinese Input Method Engines∗

Zhongye Jia and Hai Zhao†
MOE-Microsoft Key Laboratory for Intelligent Computing and Intelligent Systems,

Center for Brain-Like Computing and Machine Intelligence
Department of Computer Science and Engineering, Shanghai Jiao Tong University

800 Dongchuan Road, Shanghai 200240, China
jia.zhongye@gmail.com, zhaohai@cs.sjtu.edu.cn

Abstract

Chinese Input Method Engine (IME) plays
an important role in Chinese language pro-
cessing. However, it has been subjected
to lacking a proper evaluation metric for
a long time. The natural metric for IME
is user experience, which is a rather vague
goal for research purpose. We propose a
novel approach of quantifying user expe-
rience by using keystroke count and then
correspondingly develop a framework of
IME evaluation, which is fast and accu-
rate. With the underlying linguistic back-
ground, the proposed evaluation frame-
work can properly model the user behavior
as Chinese is input through English key-
board. It is helpful to point out a way to
improve the current Chinese IME perfor-
mance. 1

1 Introduction

Chinese IME is a software solution that enables
user to input Chinese into computer with a reason-
able size keyboard, by mapping Chinese characters
into English letter combinations. Nowadays the
majority of Chinese IMEs are pinyin based. Pinyin
is originally designed as the phonetic symbol of a
Chinese character, using Latin letters as its syllable
notation. For example, the pinyin of the Chinese
character “爱”(love) is “ài”.2 There are only less

∗This work was partially supported by the National Nat-
ural Science Foundation of China (Grant No.60903119, Grant
No.61170114, and Grant No.61272248), and the National Ba-
sic Research Program of China (Grant No.2009CB320901
and Grant No.2013CB329401).

†Corresponding author
1KySS is the abbreviation for: KeyStroke Score
2Chinese is a language with tone, but for nearly all pinyin

IMEs, tone marks are omitted since it is inconvenient to input.

than 500 pinyin syllables in standard modern Chi-
nese, compared with over 6,000 commonly used
Chinese characters, which leads to serious ambigu-
ity for pinyin-to-character mapping. Other IMEs
using various mapping scheme more or less share
this same ambiguity problem, although some of
them such as five-stroke IME3, may have lower
ambiguity but they are very difficult to learn. So
at present pinyin IMEs are the most popular, we
focus on them in this paper. Modern IMEs are
sentence-based(Chen and Lee, 2000) to reduce the
ambiguity, which means that the IME generates
a character sequence upon a sequence of English
letter inputs, e.g. pinyin syllables. This is a non-
typical sequence labeling task, as English alphabet
input is the original sequence and Chinese charac-
ters are target labels. IMEs usually utilize beam
search incorporated with language model initial-
ized by (Chen and Lee, 2000), then later extended
by (Liu andWang, 2002), (Lee, 2003), and (Zhang,
2007). There are also various methods using con-
ventional sequence labeling techniques such as:
support vector machine (Jiang et al., 2007), max-
imum entropy model (Wang et al., 2006), condi-
tional random field model (Li et al., 2009) and ma-
chine translation (Yang et al., 2012a), etc. IME also
attracts attention from major software and internet
corporations, Microsoft4, Google5 and many oth-
ers developed their own IME products.

Note that “sentence” from an IME’s viewpoint is
not the linguistic “sentence”. It is actually the Max
Input Unit (MIU), the longest consecutive Chi-
nese character sequence inside a sentence. For ex-
ample, the sentence “第51届ACL年会即将召开”
(The 51st annual meeting of ACL will open soon)

3http://www.wangma.com.cn/
4http://bing.msn.cn/pinyin/
5http://www.google.com/intl/zh-CN/ime/pinyin/

1195



has 3MIUs: “第”, “届” and “年会即将召开”. For
more precise expression, we will use “MIU” or
“character sequence” throughout this paper as far
as possible, instead of “sentence”.

Chinese is used by the largest population in the
world, and IME is necessary for all Chinese com-
puter users. However according to our best knowl-
edge there are no comprehensive and quantified
metrics for evaluating its performance. The ex-
isting evaluation metrics for IME (Chen and Lee,
2000; Yang et al., 2012a) only focus on the char-
acter sequence generation, by adopting typical se-
quence labeling measurements such as character-
wise precision and recall, sequence error rate and
so on. However IME is an application deeply in-
volving human-computer interaction, user behav-
ior ought to be taken into account for IME evalua-
tion(Zheng et al., 2011). Rather than merely judg-
ing the performance of character sequence gener-
ation, a good IME evaluation system should prop-
erly model the user behavior.

Compared with other typical evaluation systems
for NLP tasks, such as the well known machine
translation evaluation system BLEU (Papineni et
al., 2002) and the summarization evaluation sys-
tem ROUGE (Lin, 2004), they measure the close-
ness ofmachine translation/summarization and hu-
man results, using some n-gram co-occurrence
statistics (Lin and Hovy, 2003), while our IME
evaluation framework tries to quantify user experi-
ence during inputting Chinese. Existing keystroke
based methods mostly focus on the keystroke dura-
tion and frequency pattern for biometric authenti-
cate system security (Giot et al., 2009; El-Abed et
al., 2012), instead of user experience modeling.

2 The Evaluation System

2.1 The User-IME Interaction

As introduced in Section 1, nearly all IMEs nowa-
days are “sentence based”. However, IME does
not always succeed to exactly generate the entire
expected character sequence for an input letter se-
quence. Thus IMEs output a list of all possi-
ble candidate character sequences corresponding
to the input sequence.

Suppose that the input pinyin sequence is
S1S2...Sn where Si is a pinyin syllable with in-
dex i and n is number of pinyin syllables. The best
character sequence has the same length as the in-
put pinyin sequence, and is always in the first posi-
tion of the list. Other output character sequences in

the candidate list is given according to S1S2...Sn′
where n′ is usually less than n. As n is usually
large, it is unlikely that the best character sequence
is completely correct, but for those shorter charac-
ter sequences in the candidate list, user can always
find that one of them may partially match his/her
input target. If user has selected a candidate from
the list to partially complete the input, for example,
the character sequence for S1S2...Sj has been de-
termined by this selection, then IME will dynam-
ically output a new list of character sequences for
the rest pinyin sequence Sj+1Sj+2...Sn. User can
continue to make the selection from the list until
the desired input is accomplished. For a candidate,
we define its position in candidate list as its rank, r.
The best character sequence has r = 0. The can-
didate at the j-th position in the list has r = j− 1.

There are often dozens of candidates for a pinyin
sequence, as the space of input interface is limited,
candidates have to be shown in multiple pages. A
page is part of the candidate list. User can make
the choice from the page by pressing candidate ID
1, 2, . . . , m in the current page. If the expected
word/character does not occur in the current page,
user has to press a “next-page”6 key to see more
candidates.

Suppose that one wants to input the MIU “年
会即将召开”(The annual meeting will open soon)
by typing the pinyin sequence “nian hui ji jiang
zhao kai”, a typical IME prompt window is like
Figure 1a.

As shown in Figure 1a, the best character se-
quence is not completely correct for the input pur-
pose. User has to pick up the 2nd candidate
“年会”(annual meeting). Then the IME will up-
date the window as Figure 1b. User can select the
3rd candidate “即将”(soon). The IME will update
for the rest as shown in Figure 1c. The first candi-
date exactly completes the expected character se-
quence.

In the real world, user behavior is very diffi-
cult to predict. In order to alleviate the difficulty
of user behavior modeling, an abstract assumption
for user-IME interaction is proposed: all user in-
put actions are only restricted to pinyin sequence
input, candidate ID selection and page turning. In
this manner, user inputs a sequence of pinyin then
make a choice from the candidate list in the current
page given by the IME, if the desired character se-

6Usually this “next-page” key is not the PageDown key,
but mapped to some more convenient keys such as “+” or “.”.

1196



nian hui ji jiang zhao kai
1.年会激将召开
2.年会
3.年
4.念
5.粘

(a) The first IME window

年会 ji jiang zhao kai
1.激将召开
2.激将
3.即将
4.即
5.及

(b) The second IME window

年会即将 zhao kai
1.召开
2.找
3.赵
4.照
5.招

(c) The third IME window

Figure 1: IME windows for inputting an MIU

quence is not presented in the current page, then
user has to press “next-page” and goes on until the
target is met.

Under this proposed user behavior model, user
input is divided in to two parts: 1. a sequence of
alphabet keys for pinyin and 2. a selection action
sequence of “next-page” and candidate ID keys.
The first part of inputting alphabet keys for dif-
ferent IMEs will be always the same, thus it can
be ignored for evaluation metric. The second part
would be the essential difference among different
IMEs. We define the sequence of ranks of candi-
dates asRank Sequence, For an ideal rank sequence
, it is always just {0}. For our previous example in
this section, the actual rank sequence is {1, 2, 0}.

2.2 Evaluating IME
To make use of the rank sequence, i.e. keystroke
count, as the metric to evaluate an IME, we define
a few terms as follows:

• L: It is the length of MIU in characters.
• P: It is the length of rank sequence. It mea-
sures how many parts the MIU is split into to
accomplish the input. In the previous exam-
ple, P = 3 for “年会”, “即将” and “召开”.
In the ideal situation, P for any MIU is 1
since the exactly expected character sequence
is rank at the top.

• R: It is the sum of all the elements in the rank
sequence, i.e. the sum of ranks of candidates
for each part. In our previous example, R =
1 + 2 + 0 = 3. For the ideal situation, R is
always 0.

• RW : It is the total keystroke without alpha-
bet keys, by using the weighted sum of rank
sequence:

RW =
k−1∑
i=1

ω(ri) + 1. (1)

The weight function ω(·) reflects the cost of
pressing “next-page” and candidate ID keys.

In the rest of this paper we will assume there
are 5 candidates on each page which is the de-
fault setting for most existing IMEs. We also
assume the keystroke cost of pressing numeric
keys for candidate ID is 1 and the keystroke
cost of pressing “next-page” is also 1, then the
weight function is

ω(r) = ⌊r
5
⌋+ 1.

For example the 1st candidate on 3rd page has
RW = 1 × 2 + 1 = 3. RW measures how
many keys the user has to press i.e. howmuch
effort the user has to make to accomplish in-
putting an MIU.

• KySS: It is the final evaluation score of an
IME. Consider an evaluation corpus C with
MIUs {m1,m2, . . . ,mc}, for a certain IME,
the i-th MIU mi has RW (i), then the KySS
score for the actual IME on the corpus is de-
fined as the ratio between the total RW for
the ideal IME and the total RW given by the
actual IME:

KySS =

∑
mi∈C R

ideal
W (i)∑

mi∈C RW (i)
(2)

=
∥C∥∑

mi∈C RW (i)
. (3)

For an ideal IME, we have KySS = 1. For
actual IMEs, 0 < KySS < 1. An IME with
higher KySS is supposed to performan better.

3 Analysis on IMEs

3.1 Corpus

To build a corpus for evaluation, we extract
100,000 sentences from China Daily corpus7. We
annotate it with pinyin sequence using the method
in (Yang et al., 2012b). The corpus contains over
4 million characters, 87.6% of which are Chinese

7http://www.icl.pku.edu.cn/icl_res/default_en.asp

1197



characters, other 12.4% are foreign letters, dig-
its and punctuation. At last, a corpus with over
420,000 MIUs is built.

The IME for evaluation is sunpinyin8 which
is the state-of-the-art open-source Chinese pinyin
IME on Linux developed by the former Sun Mi-
crosystems, Inc..

The distribution ofL for the evaluation corpus is
shown in Figure 2. It can be seen that the length of

Length of Max Input Unit

Fr
eq

ue
nc

y

0 20 40 60 80 100 120

0.
00

0.
02

0.
04

0.
06

0.
08

0.
10

Figure 2: Distribution of L

1 5 9 13 18 23 28 33 38 43 48 53 59 66 83 95

−
12

−
10

−
8

−
6

−
4

−
2

Length of Max Input Unit

lo
g(

F
re

qu
en

cy
)

Figure 3: Linear fit on log-frequency over L

MIUs roughly follows an exponential function dis-
tribution in statistics. A linear regression on log-
frequency is made and it fits the actual data well.
The result is shown in Figure 3.

8http://code.google.com/p/sunpinyin/

●

●

●

●

●

●

●

●

●

●

●

●

●

●

●

●

●

●
●

●
●

●
●●

●●
●●●

●●●●●●●●
●●●●●●●●●●●●●●●●●●●● ●● ●● ●●● ●● ● ● ● ●● ●● ● ●

0 20 40 60 80 100 120

0.
2

0.
4

0.
6

0.
8

1.
0

Length of Max Input Unit

D
en

si
ty

7 14 26

50%

80%

98%

Figure 4: Cumulative distribution of L

●

●

●
●

●

●

●

●

●
● ●

●
●

● ●

●

● ●

●
●

●

● ●

●
●

●

0 5 10 15 20 25

0.
3

0.
4

0.
5

0.
6

0.
7

Length of Max Input Unit

F
re

qu
en

cy

Figure 5: Rate of successful MIU generation

Although there are very long MIUs in the cor-
pus, it can be observed from the cumulative distri-
bution of L in Figure 4 that most MIUs are short
ones.

Paying so much attention to the length statis-
tics of MIUs is necessary, because the core task of
IME, character sequence generation, is heavily af-
fected by the sequence length. The rate of success-
ful character sequence generation decays linearly
with the increment of L as shown in Figure 5.

It also can be seen from Figure 4 that nearly 50%
of MIUs are between 7 and 26 characters long, but
as shown in Figure 5 they suffer from the rate of
successful character sequence generation less than
0.5, which will be our major concern later.

1198



3.2 Position Matters: How Character
Sequence Generation Fails

From our empirical observation over those cases in
which IME fails to generate the completely correct
MIU, we found something interesting. The his-
tograms of P and R of MIUs with L = 10 are
shown in Figure 6, note that only unsuccessful re-
sults are plotted in the figure.

The interesting point is that a peak appears at
L/2 in the histograms, as is shown in dotted lines
in Figure 6. All the cases that we observed with
length ranging from 7 to 26 demonstrate this “error
peak” property.

We extract MIUs, IME generated best character
sequences and rank sequences of those cases. The
underlying reason is discovered after a manual in-
spection: in those best character sequences, the last
error is at the rear of MIU. In such cases user has
to select candidate words one by one until the end
of the MIU.

For example, while inputting the MIU “大理
航站是个年轻的航站”(Dali airport is a new air-
port), the best character sequence generated by
IME is “大力航展是个年轻的航展”(STRONG
air show is a new air show). Its L = 11. The
selected candidates are: “大理”(Dali), “航站”(air-
port), “是个”(is), “年轻”(new), “的”(meaningless
function word), and “航站”; so P = 6. And the
rank sequence is {2, 1, 1, 1, 1, 1} so R = 7. So
when errors occur at the rear of MIU, we have
P ≈ NW , where NW is the number of words
in MIU. For most of the real circumstances, those
correctly generated words in the front part of MIU
achieve a very high rank r, often the highest among
candidates, i.e., r = 1 so R ≈ P ≈ NW . In
sunpinyin, candidates except for the best character
sequence are words queried from a internal dictio-
nary. An important linguistic issue is that average
length of Chinese words is about 1.8 characters,
nearly two character long (Zhao et al., 2006). At
last we obtainNW ≈ L/2, which explains the “er-
ror peak” at the middle position.

3.3 Improving IMEs with Evaluation Results

We propose a method to make use of the “error
peak” for better IME performance. Among all
those MIUs with the “error peak” problem, we can
see an annoying situation is that all words except
for the last few ones are successfully generated. In
order to correct one or two words, user has to select
word by word all the way through the character se-

quence. To avoid unnecessary selection, the IME
can cut the front part of the generated character se-
quence and make it an independent candidate so
that user can accomplish inputting as many words
in one selection as possible. We suggest five cut-
ting policies as the following:

• Weakest: Cut at the position where the con-
ditional probability is smallest.

• Mean, LtoR: Cut at the position where the
probability is lower than the mean of condi-
tional probabilities of the sequence, scanning
from left to right.

• Mean, RtoL: Similar as previous but scan-
ning from right to left.

• Halfway: Cut at exactly at the middle posi-
tion.

• Fixed: Cut a fixed length sequence. We ex-
periment on length from 1 to 10 and found the
best length is 3.

The KySS for each policy is shown in Table 1.
The baseline is the original algorithm used by sun-

Policy KySS
Baseline 27.67%
Weakest 29.41%
Mean, LtoR 29.21%
Mean, RtoL 29.06%
Halfway 30.71%
Fixed-3 31.30%

Table 1: KySS of each policy

pinyin without any cutting. To our surprise, the
dummy Fixed-3 and Halfway cutting performs
best with a more than 10% boost over the baseline
due to its robustness. The Fixed-3 and Halfway
policy can always stably cut out a reasonable length
of MIU. The problem with Mean, RtoL is that it
is likely to cut at the end of MIU thus the head that
it cuts out may still include errors. On the con-
trast, the Mean, LtoR policy tends to cut out too
few words. And the Weakest policy is easy to fail
because it often cuts a sequence with a low condi-
tional probability but actually being correct.

4 Conclusion and Future Work

In this paper, a novel evaluation framework for
Chinese IME, KySS, is proposed by effectively
modeling user behavior during Chinese input. This
evaluation framework aims to fast and accurately
evaluate various IMEs from the view of user ex-
perience. It uses keystroke count as core metric.

1199



Fr
eq

ue
nc

y

2 4 6 8 10

0.
00

0.
05

0.
10

0.
15

0.
20

(a) Histogram of P

Fr
eq

ue
nc

y

0 50 100 150

0.
00

0.
02

0.
04

0.
06

0.
08

(b) Histogram ofR

Figure 6: Histogram of P andR, with L = 10

With the help of the framework we preliminarily
propose a sequence cutting strategy to enhance the
current IME.

The real world IME and user behavior can be
very complicated. In this paper, we make a simpli-
fied assumption that all user input is correct. Un-
fortunately it may contains typos. And the IME
may have prediction feature, i.e. generating char-
acter sequence longer than the input pinyin se-
quence. We may include those in our future work.

References

Zheng Chen and Kai-Fu Lee. 2000. A New Statisti-
cal Approach To Chinese Pinyin Input. In Proceed-
ings of the 38th Annual Meeting of the Association
for Computational Linguistics, pages 241–247, Hong
Kong, October.

Mohamad El-Abed, Patrick Lacharme, and Christophe
Rosenberger. 2012. Security evabio: An analysis
tool for the security evaluation of biometric authenti-
cation systems. In Biometrics (ICB), 2012 5th IAPR
International Conference on, pages 460–465. IEEE.

Romain Giot, Mohamad El-Abed, and Christophe
Rosenberger. 2009. Greyc keystroke: a benchmark
for keystroke dynamics biometric systems. In Bio-
metrics: Theory, Applications, and Systems, 2009.
BTAS’09. IEEE 3rd International Conference on,
pages 1–6. IEEE.

W. Jiang, Y. Guan, XL Wang, and BQ Liu. 2007.
Pinyin-to-character conversion model based on sup-
port vector machines. Journal of Chinese informa-
tion processing, 21(2):100–105.

Y.S. Lee. 2003. Task adaptation in stochastic lan-
guage model for chinese homophone disambigua-
tion. ACM Transactions on Asian Language Infor-
mation Processing, 2(1):49–62.

L. Li, X. Wang, X.L. Wang, and Y.B. Yu. 2009. A con-
ditional random fields approach to chinese pinyin-
to-character conversion. Journal of Communication
and Computer, 6(4):25–31.

Chin-Yew Lin and Eduard Hovy. 2003. Auto-
matic evaluation of summaries using n-gram co-
occurrence statistics. In Proceedings of the 2003
Conference of the North American Chapter of the
Association for Computational Linguistics on Hu-
man Language Technology - Volume 1, NAACL ’03,
pages 71–78, Stroudsburg, PA, USA. Association for
Computational Linguistics.

Chin-Yew Lin. 2004. Rouge: A package for auto-
matic evaluation of summaries. In Stan Szpakowicz
Marie-Francine Moens, editor, Text Summarization
Branches Out: Proceedings of the ACL-04 Work-
shop, pages 74–81, Barcelona, Spain, July. Associ-
ation for Computational Linguistics.

B.Q. Liu and X.L. Wang. 2002. An approach to ma-
chine learning of chinese pinyin-to-character con-
version for small-memory application. In Machine
Learning and Cybernetics, 2002. Proceedings. 2002
International Conference on, volume 3, pages 1287–
1291. IEEE.

Kishore Papineni, Salim Roukos, Todd Ward, and Wei-
Jing Zhu. 2002. Bleu: a method for automatic
evaluation of machine translation. In Proceedings
of 40th Annual Meeting of the Association for Com-
putational Linguistics, pages 311–318, Philadelphia,
Pennsylvania, USA, July. Association for Computa-
tional Linguistics.

1200



X. Wang, L. Li, L. Yao, and W. Anwar. 2006. A
maximum entropy approach to chinese pin yin-to-
character conversion. In Systems, Man and Cyber-
netics, 2006. SMC’06. IEEE International Confer-
ence on, volume 4, pages 2956–2959. IEEE.

S. Yang, H. Zhao, and B. Lu. 2012a. A machine trans-
lation approach for chinese whole-sentence pinyin-
to-character conversion. In Pacific Asia Conference
on Language Information and Computation, pages
367–376, Bali, Indonesia, November.

S. Yang, H. Zhao, X. Wang, and B. Lu. 2012b. Spell
checking for chinese. In International Conference
on Language Resources and Evaluation, pages 730–
736, Istanbul, Turkey, May.

S. Zhang. 2007. Solving the pinyin-to-chinese-
character conversion problem based on hybrid word
lattice. CHINESE JOURNAL OF COMPUTERS-
CHINESE EDITION-, 30(7):1145.

Hai Zhao, Chang-Ning Huang, Mu Li, and Bao-Liang
Lu. 2006. Effective tag set selection in chinese word
segmentation via conditional random field model-
ing. In Proceedings of PACLIC, volume 20, pages
87–94.

Yabin Zheng, Lixing Xie, Zhiyuan Liu, Maosong Sun,
Yang Zhang, and Liyun Ru. 2011. Why Press
Backspace? Understanding User Input Behaviors in
Chinese Pinyin Input Method. In Proceedings of the
49th Annual Meeting of the Association for Compu-
tational Linguistics: Human Language Techologies,
pages 485–490, Portland, Oregon, USA, June. Asso-
ciation for Computational Linguistics.

1201


