



















































Improving Temporal Relation Extraction with a Globally Acquired Statistical Resource


Proceedings of NAACL-HLT 2018, pages 841–851
New Orleans, Louisiana, June 1 - 6, 2018. c©2018 Association for Computational Linguistics

Improving Temporal Relation Extraction with a Globally Acquired
Statistical Resource

Qiang Ning,1 Hao Wu,2 Haoruo Peng,1 Dan Roth1,2
Department of Computer Science

1University of Illinois at Urbana-Champaign, Urbana, IL 61801, USA
2University of Pennsylvania, Philadelphia, PA 19104, USA

{qning2,hpeng7}@illinois.edu, {haowu4,danroth}@seas.upenn.edu

Abstract

Extracting temporal relations (before, after,
overlapping, etc.) is a key aspect of under-
standing events described in natural language.
We argue that this task would gain from the
availability of a resource that provides prior
knowledge in the form of the temporal order
that events usually follow. This paper devel-
ops such a resource – a probabilistic knowl-
edge base acquired in the news domain – by
extracting temporal relations between events
from the New York Times (NYT) articles over
a 20-year span (1987–2007). We show that ex-
isting temporal extraction systems can be im-
proved via this resource. As a byproduct, we
also show that interesting statistics can be re-
trieved from this resource, which can poten-
tially benefit other time-aware tasks. The pro-
posed system and resource are both publicly
available1.

1 Introduction

Time is an important dimension of knowledge rep-
resentation. In natural language, temporal infor-
mation is often expressed as relations between
events. Reasoning over these relations can help
figuring out when things happened, estimating
how long things take, and summarizing the time-
line of a series of events. Several recent SemEval
workshops are a good showcase of the importance
of this topic (Verhagen et al., 2007, 2010; Uz-
Zaman et al., 2013; Llorens et al., 2015; Minard
et al., 2015; Bethard et al., 2015, 2016, 2017).

One of the challenges in temporal relation ex-
traction is that it requires high-level prior knowl-
edge of the temporal order that events usually fol-
low. In Example 1, we have deleted events from
several snippets from CNN, so that we cannot use
our prior knowledge of those events. We are also

1http://cogcomp.org/page/publication_
view/830

told that e1 and e2 have the same tense, and e3
and e4 have the same tense, so we cannot resort
to their tenses to tell which one happens earlier.
As a result, it is very difficult even for humans
to figure out the temporal relations (referred to as
“TempRels” hereafter) between those events. This
is because rich temporal information is encoded
in the events’ names, and this often plays an in-
dispensable role in making our decisions. In the
first paragraph of Example 1, it is difficult to un-
derstand what really happened without the actual
event verbs; let alone the TempRels between them.
In the second paragraph, things are even more in-
teresting: if we had e3:dislike and e4:stop, then
we would know easily that “I dislike” occurs af-
ter “they stop the column”. However, if we had
e3:ask and e4:help, then the relation between e3
and e4 is now reversed and e3 is before e4. We
are in need of the event names to determine the
TempRels; however, we do not have them in Ex-
ample 1. In Example 2, where we show the com-
plete sentences, the task has become much easier
for humans due to our prior knowledge, namely,
that explosion usually leads to casualties and that
people usually ask before they get help. Moti-
vated by these examples (which are in fact very
common), we believe in the importance of such
a prior knowledge in determining TempRels be-
tween events.

Example 1: Difficulty in understanding TempRels
when event content is missing. Note that e1 and e2
have the same tense, and e3 and e4 have the same tense.
More than 10 people have (e1:died), police said. A car
(e2:exploded) on Friday in the middle of a group of men
playing volleyball.
The first thing I (e3:ask) is that they (e4:help) writing
this column.

However, most existing systems only make use
of rather local features of these events, which can-
not represent the prior knowledge humans have

841



Example Pairs Before (%) After (%)
accept determine 42 26

ask help 86 9
attend schedule 1 82
accept propose 10 77

die explode 14 83
. . .

Table 1: TEMPROB is a unique source of informa-
tion of the temporal order that events usually fol-
low. The probabilities below do not add up to 100%
because less frequent relations are omitted. The word
sense numbers are not shown here for convenience.

about these events and their “typical” order. As
a result, existing systems almost always attempt
to solve the situations shown in Example 1, even
when they are actually presented with input as in
Example 2. The first contribution of this work is
thus the construction of such a resource in the form
of a probabilistic knowledge base, constructed
from a large New York Times (NYT) corpus.
We hereafter name our resource TEMporal rela-
tion PRObabilistic knowledge Base (TEMPROB),
which can potentially benefit many time-aware
tasks. A few example entries of TEMPROB are
shown in Table 1. Second, we show that exist-
ing TempRel extraction systems can be improved
using TEMPROB, either in a local method or in
a global method (explained later), by a signif-
icant margin in performance on the benchmark
TimeBank-Dense dataset (Cassidy et al., 2014).

Example 2: The original sentences in Example 1.
More than 10 people have (e1:died), police said. A car
(e2:exploded) on Friday in the middle of a group of men
playing volleyball.
The first thing I (e3:ask) is that they (e4:help) writing
this column.

The rest of the paper is organized as follows.
Section 2 provides a literature review of TempRels
extraction in NLP. Section 3 describes in detail the
construction of TEMPROB. In Sec. 4, we show
that TEMPROB can be used in existing TempRels
extraction systems and lead to significant improve-
ment. Finally, we conclude in Sec. 5.

2 Related Work

The TempRels between events can be represented
by an edge-labeled graph, where the nodes are
events, and the edges are labeled with TempRels
(Chambers and Jurafsky, 2008; Do et al., 2012;
Ning et al., 2017). Given all the nodes, we work
on the TempRel extraction task, which is to assign

labels to the edges in a temporal graph (a “vague”
or “none” label is often included to account for the
non-existence of an edge).

Early work includes Mani et al. (2006); Cham-
bers et al. (2007); Bethard et al. (2007); Verhagen
and Pustejovsky (2008), where the problem was
formulated as learning a classification model for
determining the label of every edge locally with-
out referring to other edges (i.e., local methods).
The predicted temporal graphs by these methods
may violate the transitive properties that a tempo-
ral graph should possess. For example, given three
nodes, e1, e2, and e3, a local method can pos-
sibly classify (e1,e2)=before, (e2,e3)=before, and
(e1,e3)=after, which is obviously wrong since be-
fore is a transitive relation and (e1,e2)=before and
(e2,e3)=before dictate that (e1,e3)=before. Recent
state-of-the-art methods, (Chambers et al., 2014;
Mirza and Tonelli, 2016), circumvented this is-
sue by growing the predicted temporal graph in a
multi-step manner, where transitive graph closure
is performed on the graph every time a new edge
is labeled. This is conceptually solving the struc-
tured prediction problem greedily. Another fam-
ily of methods resorted to Integer Linear Program-
ming (ILP) (Roth and Yih, 2004) to get exact infer-
ence to this problem (i.e., global methods), where
the entire graph is solved simultaneously and the
transitive properties are enforced naturally via ILP
constraints (Bramsen et al., 2006; Chambers and
Jurafsky, 2008; Denis and Muller, 2011; Do et al.,
2012). A most recent work brought this idea even
further, by incorporating structural constraints into
the learning phase as well (Ning et al., 2017).

The TempRel extraction task has a strong de-
pendency on prior knowledge, as shown in our
earlier examples. However, very limited atten-
tion has been paid to generating such a resource
and to make use of it; to our knowledge, the
TEMPROB proposed in this work is completely
new. We find that the time-sensitive relations pro-
posed in Jiang et al. (2016) is a close one in litera-
ture (although it is still very different). Jiang et al.
(2016) worked on the knowledge graph comple-
tion task. Based on YAGO2 (Hoffart et al., 2013)
and Freebase (Bollacker et al., 2008), it manually
selects a small number of relations that are time-
sensitive (10 relations from YAGO2 and 87 rela-
tions from Freebase, respectively). Exemplar re-
lations are wasBornIn→diedIn→ and graduate-
From→workAt, where → means temporally be-

842



fore.
Our work significantly differs from the time-

sensitive relations in Jiang et al. (2016) in the
following aspects. First, scale difference: Jiang
et al. (2016) can only extract a small number of
relations (<100), but we work on general seman-
tic frames (tens of thousands) and the relations
between any two of them, which we think has
broader applications. Second, granularity differ-
ence: the smallest granularity in Jiang et al. (2016)
is one year2, i.e., only when two events happened
in different years can they know the temporal or-
der of them, but we can handle implicit temporal
orders without having to refer to the physical time
points of events (i.e., the granularity can be ar-
bitrarily small). Third, domain difference: while
Jiang et al. (2016) extracts time-sensitive relations
from structured knowledge bases (where events
are explicitly anchored to a time point), we extract
relations from unstructured natural language text
(where the physical time points may not even ex-
ist in text). Our task is more general and it allows
us to extract much more relations, as reflected by
the 1st difference above.

Another related work is the VerbOcean
(Chklovski and Pantel, 2004), which extracts
temporal relations between pairs of verbs using
manually designed lexico-syntactic patterns (there
are in total 12 such patterns), in contrast to the
automatic extraction method proposed in this
work. In addition, the only termporal relation
considered in VerbOceans is before, while we
also consider relations such as after, includes,
included, equal, and vague. As expected, the
total numbers of verbs and before relations in
VerbOcean is about 3K and 4K, respectively, both
of which are much smaller than TEMPROB, which
contains 51K verb frames (i.e., disambiguated
verbs), 9.2M (verb1, verb2, relation) entries,
and up to 80M temporal relations altogether.

All these differences necessitate the construc-
tion of a new resource for TempRel extraction,
which we explain below.

3 TEMPROB: A Probabilistic Resource
for TempRels

In the TempRel extraction task, people have usu-
ally assumed that events are already given. How-
ever, to construct the desired resource, we need

2We notice that the smallest granularity in Freebase itself
is one day, but Jiang et al. (2016) only used years.

to extract events (Sec. 3.1) and extract TempRels
(Sec. 3.2), from a large, unannotated3 corpus
(Sec. 3.3). We also show some interesting statis-
tics discovered in TEMPROB that may benefit
other tasks (Sec. 3.4). In the next, we describe
each of these elements.

3.1 Event Extraction

Extracting events and the relations between them
(e.g., coreference, causality, entailment, and tem-
poral) have long been an active area in the NLP
community. Generally speaking, an event is con-
sidered to be an action associated with corre-
sponding participants involved in this action. In
this work, following (Peng and Roth, 2016; Peng
et al., 2016; Spiliopoulou et al., 2017) we con-
sider semantic-frame based events, which can be
directly detected via off-the-shelf semantic role la-
beling (SRL) tools. This aligns well with previous
works on event detection (Hovy et al., 2013; Peng
et al., 2016).

Depending on the events of interest, the SRL
results are often a superset of events and need to
be filtered afterwards (Spiliopoulou et al., 2017).
For example, in ERE (Song et al., 2015) and Event
Nugget Detection (Mitamura et al., 2015), events
are limited to a set of predefined types (such as
“Business”, “Conflict”, and “Justice”); in the con-
text of TempRels, existing datasets have focused
more on predicate verbs rather than nominals4

(Pustejovsky et al., 2003; Graff, 2002; UzZaman
et al., 2013). Therefore, we only look at verb se-
mantic frames in this work due to the difficulty of
getting TempRel annotation for nominal events,
and we will use “verb (semantic frames)” inter-
changeably with “events” hereafter in this paper.

3.2 TempRel Extraction

Given the events extracted in a given article (i.e.,
given the nodes in a graph), we next explain how
the TempRels are extracted (that is, the edge labels
in the graph).

3.2.1 Features
We adopt the commonly used feature set in
TempRel extraction (Do et al., 2012; Ning et al.,
2017) and here we simply list them for repro-
ducibility. For each pair of nodes, the follow-

3Unannotated with TempRels.
4Some nominal events were indeed annotated in Time-

Bank (Pustejovsky et al., 2003), but their annotation did not
align well with modern nominal-SRL methods.

843



ing features are extracted. (i) The part-of-speech
(POS) tags from each individual verb and from
its neighboring three words. (ii) The distance be-
tween them in terms of the number of tokens. (iii)
The modal verbs between the event mention (i.e.,
will, would, can, could, may and might). (iv)
The temporal connectives between the event men-
tions (e.g., before, after and since). (v) Whether
the two verbs have a common synonym from
their synsets in WordNet (Fellbaum, 1998). (vi)
Whether the input event mentions have a common
derivational form derived from WordNet. (vii) The
head word of the preposition phrase that covers
each verb, respectively.

3.2.2 Learning

With the features defined above, we need to train
a system that can annotate the TempRels in each
document. The TimeBank-Dense dataset (TB-
Dense) (Cassidy et al., 2014) is known to have
the best quality in terms of its high density of
TempRels and is a benchmark dataset for the
TempRel extraction task. It contains 36 docu-
ments from TimeBank (Pustejovsky et al., 2003)
which were re-annotated using the dense event
ordering framework proposed in (Cassidy et al.,
2014). We follow its label set (denoted by R) of
before, after, includes, included, equal, and vague
in this study.

Due to the slight event annotation difference in
TBDense, we collect our training data as follows.
We first extract all the verb semantic frames from
the raw text of TBDense. Then we only keep those
semantic frames that are matched to an event in
TBDense (about 85% semantic frames are kept in
this stage). By doing so, we can simply use the
TempRel annotations provided in TBDense. Here-
after the TBDense dataset used in this paper refers
to this version unless otherwise specified.

We group the TempRels by the sentence dis-
tance of the two events of each relation5. Then
we use the averaged perceptron algorithm (Freund
and Schapire, 1998) implemented in the Illinois
LBJava package (Rizzolo and Roth, 2010) to learn
from the training data described above. Since only
relations that have sentence distance 0 or 1 are an-
notated in TBDense, we will have two classifiers,
one for same sentence relations, and one for neigh-
boring sentence relations, respectively.

5That is, the difference of the appearance order of the sen-
tence(s) containing the two target events.

Note that TBDense was originally split into
Train (22 docs), Dev (5 docs), and Test (9 docs).
In all subsequent analysis, we combined Train and
Dev and we performed 3-fold cross validation on
the 27 documents (in total about 10K relations) to
tune the parameters in any classifier.

3.2.3 Inference
When generating TEMPROB, we need to pro-
cess a large number of articles, so we adopt the
greedy inference strategy described earlier due
to its computational efficiency (Chambers et al.,
2014; Mirza and Tonelli, 2016). Specifically, we
apply the same-sentence relation classifier before
the neighboring-sentence relation classifier; when-
ever a new relation is added in this article, a tran-
sitive graph closure is performed immediately. By
doing this, if an edge is already labeled during the
closure phase, it will not be labeled again, so con-
flicts are avoided.

3.3 Corpus

As mentioned earlier, the source corpus on which
we are going to construct TEMPROB is comprised
of NYT articles from 20 years (1987-2007)6. It
contains more than 1 million documents and we
extract events and corresponding features from
each document using the Illinois Curator pack-
age (Clarke et al., 2012) on Amazon Web Services
(AWS) Cloud. In total, we discovered 51K unique
verb semantic frames and 80M relations among
them in the NYT corpus (15K of the verb frames
had more than 20 relations extracted and 9K had
more than 100 relations).

3.4 Interesting Statistics

We first describe the notations that we are going to
use. We denote the set of all verb semantic frames
by V . Let Di, i = 1, . . . , N be the i-th document
in our corpus, where N is the total number of doc-
uments. Let Gi = (Vi, Ei) be the temporal graph
inferred from Di using the approach described
above, where Vi ⊆ V is the set of verbs/events
extracted in Di and Ei = {(vm, vn, rmn)}m<n ⊆
Vi × Vi × R is the edge set of Di, which is com-
posed of TempRel triplets; specifically, a TempRel
triplet (vm, vn, rmn) ∈ Ei represents that in docu-
ment Di, the TempRel between vm and vn is rmn.
Due to the symmetry in TempRels, we only keep
the triplets with m < n in Ei. Assuming that the

6https://catalog.ldc.upenn.edu/LDC2008T19

844



verbs in Vi are ordered by their appearance order
in text, then m < n means that in the i-th docu-
ment, vm appears earlier in text than vn does.

Given the usual confusion between that one
event is temporally before another and that one
event is physically appearing before another in
text, we will refer to temporally before as T-
Before and physically before as P-Before. Us-
ing this language, for example, Ei only keeps the
triplets that vm is P-Before vn in Di.

3.4.1 Extreme cases
We first show extreme cases that some events are
almost always labeled as T-Before or T-After in
the corpus. Specifically, for each pair of verbs
vi, vj ∈ V , we define the following ratios:

ηb =
C(vi, vj , before)

C(vi, vj , before) + C(vi, vj , after)
, ηa = 1 − ηb,

(1)

where C(vi, vj , r) is the count of vi P-Before vj
with TempRel r ∈ R:

C(vi, vj , r) =
N∑

i=1

∑

(vm,vn,rmn)∈Ei

I{vm=vi&vn=vj&rmn=r},

(2)

where I{·} is the indicator function. Add-one
smoothing technique from language modeling is
used to avoid divided-by-zero errors. In Table 2,
we show some event pairs with either ηb > 0.9
(upper part) or ηa > 0.9 (lower part).

We think the examples from Table 2 are in-
tuitively appealing: chop happens before taste,
clean happens after contaminate, etc. More in-
terestingly, in the lower part of the table, we show
pairs in which the physical order is different from
the temporal order: for example, when achieve
is P-Before desire, it is still labeled as T-After in
most cases (104 out of 111 times), which is cor-
rect intuitively. In practice, e.g., in the TBDense
dataset (Cassidy et al., 2014), roughly 30%-40%
of the P-Before pairs are T-After. Therefore, it is
important to be able to capture their temporal or-
der rather than simply taking their physical order if
one wants to understand the temporal implication
of verbs.

3.4.2 Distribution of Following Events
For each verb v, we define the marginal count of
v being P-Before to arbitrary verbs with TempRel
r ∈ R as C(v, r) = ∑vi∈V C(v, vi, r). Then for
every other verb v′, we define

P (v T-Before v′|v T-Before) ≜ C(v, v
′, before)

C(v, before)
, (3)

Example Pairs #T-Before #T-After
chop.01 taste.01 133 8

concern.01 protect.01 110 10
conspire.01 kill.01 113 6
debate.01 vote.01 48 5

dedicate.01 promote.02 67 7
fight.01 overthrow.01 98 8

achieve.01 desire.01 7 104
admire.01 respect.01 7 121
clean.02 contaminate.01 3 82

defend.01 accuse.01 13 160
die.01 crash.01 8 223

overthrow.01 elect.01 3 100

Table 2: Several extreme cases from TEMPROB,
where some event is almost always labeled to be T-
Before or T-After throughout the NYT corpus. By “ex-
treme”, we mean that either the probability of T-Before
or T-After is larger than 90%. The upper part of the
table shows the pairs that are both P-Before and T-
Before, while the lower part shows the pairs that are
P-Before but T-After. In TEMPROB, there are about
7K event pairs being extreme cases.

which is the probability of v T-Before v′, condi-
tioned on v T-Before anything. Similarly, we de-
fine

P (v T-After v′|v T-After) ≜ C(v, v
′, after)

C(v, after)
. (4)

For a specific verb, e.g., v=investigate, each
verb v′ ∈ V is sorted by the two conditional
probabilities above. Then the most probable
verbs that temporally precede or follow v are
shown in Fig. 1, where the y-axes are the corre-
sponding conditional probabilities. We can see
reasonable event sequences like {involve, kill,
suspect, steal}→investigate→{report, prosecute,
pay, punish}, which indicates the possibility of
using TEMPROB for event sequence predictions
or story cloze tasks. There are also suspicious
pairs like know in the T-Before list of investi-
gate (Fig. 1a), report in the T-Before list of bomb
(Fig. 1b), and play in the T-After list of mourn
(Fig. 1c). Since the arguments of these verb
frames are not considered here, whether these few
seemingly counter-intuitive pairs come from sys-
tem error or from a special context needs further
investigation.

4 Experiments

In the above, we have explained the construction
of TEMPROB and shown some interesting exam-
ples from it, which were meant to visualize its cor-
rectness. In this section, we first quantify the cor-
rectness of the prior obtained in TEMPROB, and

845



(a) investigate (b) bomb

(c) mourn (d) sentence

Figure 1: Top events that most frequently precede or follow “investigate”, “bomb”, “mourn”, or “sentence”
in time, sorted by their conditional probabilities in h. Word senses have been disambiguated and the “bomb”
and “sentence” here are their verb meanings. There are some possible errors (e.g., report is T-Before bomb) and
some unclear pairs (e.g., know is T-Before investigate and play is T-After mourn), but overall the event sequences
discovered here are reasonable. More examples can be found in the appendix.

then show TEMPROB can be used to improve ex-
isting TempRel extraction systems.

4.1 Quality Analysis of TEMPROB

In Table 2, we showed examples with either ηb or
ηa > 0.9. We argued that they seem correct. Here
we quantify the “correctness” of ηb and ηa based
on TBDense. Specifically, we collected all the
gold T-Before and T-After pairs. Let τ ∈ [0.5, 1)
be a constant threshold. Imagine a naive predic-
tor such that for each pair of events vi and vj , if
ηb > τ , it predicts that vi is T-Before vj ; if ηa > τ ,
it predicts that vi is T-After vj ; otherwise, it pre-
dicts that vi is T-Vague to vj . We expect that a
higher ηb (or ηa) represents a higher confidence for
an instance to be labeled T-Before (or T-After).

Table 3 shows the performance of this predictor,
which meets our expectation and thus justifies the
validity of TEMPROB. As we gradually increase
the value of τ in Table 3, the precision increases
in roughly the same pace with τ , which indicates
that the values of ηb and ηa7 from TEMPROB in-
deed represent the confidence level. The decrease
in recall is also expected because more examples
are labeled as T-Vague when τ is larger.

To further justify the quality, we also used
7Recall the definitions of ηb and ηa in Eq. (1).

Threshold τ Dist=0 Dist=1P R P R
0.5 65.6 61.3 58.5 53.3
0.6 69.8 44.5 60.5 36.9
0.7 74.6 29.2 63.6 18.7
0.8 81.0 13.9 64.8 6.9
0.9 82.9 5.0 76.9 1.2

Table 3: Validating ηb and ηa from TEMPROB based
on the T-Before and T-After examples in TBDense.
Performances are decomposed into same sentence ex-
amples (Dist=0) and contiguous sentence examples
(Dist=1). A larger threshold leads to a higher precision,
so ηb and ηa indeed represent a notion of confidence.

another dataset that is not in the TempRel do-
main. Instead, we downloaded the EventCausality
dataset8 (Do et al., 2011). For each causally re-
lated pair e1 and e2, if EventCausality annotates
that e1 causes e2, we changed it to be T-Before;
if EventCausality annotates that e1 is caused by
e2, we changed it to be T-after. Therefore, based
on the assumption that the cause event is T-Before
the result event, we converted the EventCausality
dataset to be a TempRel dataset and it thus could
also be used to evaluate the quality of TEMPROB.
We adopted the same predictor used in Table 3

8http://cogcomp.org/page/resource_
view/27

846



with τ = 0.5 and in Table 4, we compared it
with two baselines: (i) always predicting T-Before
and (ii) always predicting T-After. First, the accu-
racy (66.2%) in Table 4 is rather consistent with its
counterpart in Table 3, confirming the stability of
statistics from TEMPROB. Second, by directly us-
ing the prior statistics ηb and ηa from TEMPROB,
we can improve the precision of both labels with
a significant margin relative to the two baselines
(17.0% for “T-Before” and 15.9% for “T-After”).
Overall, the accuracy was improved by 11.5%.

System T-Before T-After Acc.P R P R
T-Before Only 54.7 100.0 0 0 54.7
T-After Only 0 0 45.3 100 45.3

τ = 0.5 71.7 63.3 61.2 69.8 66.2

Table 4: Further justification of ηb and ηa from
TEMPROB on the EventCausality dataset. The
thresholding predictor from Table 3 with τ = 0.5 is
used here. Compared to always predicting the major-
ity label (i.e., T-Before in this case), τ = 0.5 signifi-
cantly improved the performance for both labels, with
the overall accuracy improved by 11.5%.

4.2 Improving TempRel Extraction

The original purpose of TEMPROB was to improve
TempRel extraction. We show it from two per-
spectives: How effective the prior distributions ob-
tained from TEMPROB are (i) as features in local
methods and (ii) as regularization terms in global
methods. The results below were evaluated on the
test split of TB-Dense (Cassidy et al., 2014).

4.2.1 Improving Local Methods
We first test how well the prior distributions from
TEMPROB can be used as features in improving
local methods for TempRel extraction. In Ta-
ble 5, we used the original feature set proposed
in Sec. 3.2.1 as the baseline, and added the prior
distribution obtained from TEMPROB on top of
it. Specifically, we added ηb (see Eq. (1)) and
{fr}r∈R, respectively, where {fr}r∈R is the prior
distributions of all labels, i.e.,

fr(vi, vj) =
C(vi, vj , r)∑

r′∈R C(vi, vj , r
′)

, r ∈ R. (5)

Recall function C is defined in Eq. (2). All com-
parisons were decomposed to same sentence rela-
tions (Dist=0) and neighboring sentence relations
(Dist=1) for a better understanding of the behav-
ior. All classifiers were trained using the averaged

perceptron algorithm (Freund and Schapire, 1998)
and tuned by 3-fold cross validation.

From Table 5, we can see that simply adding ηb
into the feature set could improve the original sys-
tem F1 by 1.8% (Dist=0) and 3.0% (Dist=1). If we
further add as features the full set of prior distri-
butions {fr}r∈R, the improvement comes to 2.7%
and 6.5%, respectively. Noticing that the feature is
more helpful for Dist=1, we think that it is because
distant pairs usually have less lexical dependency
and thus need more prior information provided by
our new feature. With Dist=0 and Dist=1 com-
bined (numbers not shown in the Table), the 3rd
line improved the ”original” by 4.7% in F1 and by
5.1% in the temporal awareness F-score (another
metric used in the TempEval3 workshop).

Feature Set Dist=0 Dist=1P R F1 P R F1
Original 44.5 57.1 50.0 49.0 36.9 42.1

+ηb 46.2 58.9 51.8 55.3 38.1 45.1
+{fr}r∈R 46.9 60.1 52.7 51.3 46.2 48.6

Note The performances here are consistently lower than
those in Table 3 because in Table 3, only T-Before and T-
After examples are considered, but here all labels are taken
into account and the problem is more practical and harder.

Table 5: Using prior distributions derived from
TEMPROB as features in an example local method.
Incorporating ηb to the original feature set already
yields better performance. By using the full set of prior
distributions, {fr}r∈R, the final system improves the
original in almost all metrics, and the improvement is
statistically significant with p<0.005 per the McNe-
mar’s test.

4.2.2 Improving Global Methods

As mentioned earlier in Sec. 2, many systems
adopt a global inference method via integer lin-
ear programming (ILP) (Roth and Yih, 2004) to
enforce transitivity constraints over an entire tem-
poral graph (Bramsen et al., 2006; Chambers and
Jurafsky, 2008; Denis and Muller, 2011; Do et al.,
2012; Ning et al., 2017). In addition to the us-
age shown in Sec. 4.2.1, the prior distributions
from TEMPROB can also be used to regularize
the conventional ILP formulation. Specifically, in
each document, let Ir(ij) ∈ {0, 1} be the indi-
cator function of relation r for event i and event
j; let xr(ij) ∈ [0, 1] be the corresponding soft-
max score obtained from the local classifiers (de-
pending on the sentence distance between i and
j). Then the ILP objective for global inference is

847



formulated as follows.

Î = argmax
I

∑

ij∈E

∑

r∈R
(xr(ij) + λfr(ij))Ir(ij) (6)

s.t. ΣrIr(ij) = 1
(uniqueness)

, Ir(ij) = Ir̄(ji),
(symmetry)

Ir1(ij) + Ir2(jk) − ΣMm=1Irm3 (ik) ≤ 1,
(transitivity)

for all distinct events i, j, and k, where E =
{ij | sentence dist(i, j)≤ 1}, λ adjusts the regu-
larization term and was heuristically set to 0.5 in
this work, r̄ is the reverse relation of r, and M is
the number of possible relations for r3 when r1
and r2 are true. Note our difference from the ILP
in (Ning et al., 2017) is the underlined regulariza-
tion term fr(ij) (which itself is defined in Eq. (5))
obtained from TEMPROB.

No. System P R F1 Faware
1 Baseline 48.1 44.4 46.2 42.5
2 +Feature: {fr}r∈R 50.6 52.0 51.3 49.1
3 +Regularization 51.3 53.0 52.1 49.6

Table 6: Regularizing global methods by the prior
distribution derived from TEMPROB. The “+”
means adding a component on top of its preceding line.
Faware is the temporal awareness F-score, another eval-
uation metric used in TempEval3. The baseline sys-
tem is to use (unregularized) ILP on top of the original
system in Table 5. System 3 is the proposed. Per the
McNemar’s test, System 3 is significantly better than
System 1 with p<0.0005.

We present our results on the test split of TB-
Dense in Table 6, which is an ablation study show-
ing step-by-step improvements in two metrics. In
addition to the straightforward precision, recall,
and F1 metric, we also compared the F1 of the tem-
poral awareness metric used in TempEval3 (UzZa-
man et al., 2013). The awareness metric performs
graph reduction and closure before evaluation so
as to better capture how useful a temporal graph
is. Details of this metric can be found in UzZaman
and Allen (2011); UzZaman et al. (2013); Ning
et al. (2017).

In Table 6, the baseline used the original fea-
ture set proposed in Sec. 3.2.1 and applied global
ILP inference with transitivity constraints. Tech-
nically, it is to solve Eq. (6) with λ = 0 (i.e., un-
regularized) on top of the original system in Ta-
ble 5. Apart from some implementation details,
this baseline is also the same as many existing
global methods as Chambers and Jurafsky (2008);
Do et al. (2012). System 2, “+Feature: {fr}r∈R”,

Label P R F1
before +0.3 +15 +6
after +4 +4 +4
equal +11 0 +2

includes +17 0 +0.2
included +8 0 +2

vague +3 -4 -1

Table 7: Label-wise performance improvement of
System 3 over System 1 in Table 6. We can see that
incorporating TEMPROB improves the recall of before
and after, and improves the precision of all labels, with
a slight drop in the recall of vague.

is to add prior distributions as features when train-
ing the local classifiers. Technically, the scores
xr(ij)’s in Eq. (6) used by baseline were changed.
We know from Table 5 that adding {fr}r∈R made
the local decisions better. Here the performance
of System 2 shows that this was also the case
for the global decisions made via ILP: both pre-
cision and recall got improved, and F1 and aware-
ness were both improved by a large margin, with
5.1% in F1 and 6.6% in awareness F1. On top
of this, System 3 sets λ = 0.5 in Eq. (6) to add
regularizations to the conventional ILP formula-
tion. The sum of these regularization terms repre-
sents a confidence score of how coherent the pre-
dicted temporal graph is to our TEMPROB, which
we also want to maximize. Even though a con-
siderable amount of information from TEMPROB
had already been encoded as features (as shown by
the large improvements by System 2), these regu-
larizations were still able to further improve the
precision, recall and awareness scores. To sum
up, the total improvement over the baseline sys-
tem brought by TEMPROB is 5.9% in F1 and 7.1%
in awareness F1, both with a notable margin. Ta-
ble 7 furthermore decomposes this improvement
into each TempRel label.

To compare with state-of-the-art systems,
which all used gold event properties (i.e., Tense,
Aspect, Modality, and Polarity), we retrained Sys-
tem 3 in Table 6 with these gold properties and
show the results in Table 8. We reproduced the
results of CAEVO9 (Chambers et al., 2014) and
Ning et al. (2017)10 and evaluated them on the par-
tial TBDense test split11. Under both metrics, the

9https://github.com/nchambers/caevo
10http://cogcomp.org/page/publication_

view/822
11There are 731 relations in the partial TBDense test split

(201 before, 138 after, 39 includes, 31 included, 14 equal,
and 308 vague).

848



proposed system achieved the best performance.
An interesting fact is that even without these gold
properties, our System 3 in Table 6 was already
better than CAEVO (on Line 1) and Ning et al.
(2017) (on Line 2) in both metrics. This is appeal-
ing because in practice, those gold properties may
not exist, but our proposed system can still gener-
ate state-of-the-art performance without them.

No. System P R F1 Faware
Partial TBDense*: Focus of this work.

1 CAEVO 52.3 43.7 47.6 46.7
2 Ning et al. (2017) 47.4 56.3 51.5 49.1
3 Proposed 50.0 62.4 55.5 52.8

Complete TBDense: Naive augmentation.
4 CAEVO 51.8 32.6 40.0 45.7
5 Ning et al. (2017) 46.2 40.6 43.2 48.5
6 Proposed** 47.2 42.4 44.7 49.2

*Note that TEMPROB is only available for events extracted
by SRL (See Sec. 3.2.2 for details).
**Augment the output of Line 3 with predictions from Ning
et al. (2017).

Table 8: Comparison of the proposed TempRel ex-
traction method with two best-so-far systems us-
ing two metrics. Since TEMPROB is only on SRL
verb events, Partial TBDense is the focus of our work,
where we can see significant improvement brought by
simply using the prior knowledge from TEMPROB. Per
the McNemar’s test, Line 3 is better than Line 2 with
p<0.0005. For interested readers, we also naively aug-
mented the proposed method to the complete TBDense
and show state-of-the-art performance on it.

For readers who are interested in the complete
TBDense dataset, we also performed a naive aug-
mentation as follows. Recall that System 3 only
makes predictions to a subset of the complete TB-
Dense dataset. We kept this subset of predictions,
and filled the missing predictions by Ning et al.
(2017). Performances of this naively augmented
proposed system is compared with CAEVO and
Ning et al. (2017) on the complete TBDense
dataset. We can see that by replacing with predic-
tions from our proposed system, Ning et al. (2017)
got a better precision, recall, F1, and awareness F1,
which is the new state-of-the-art on all reported
performances on this dataset. Note that the aware-
ness F1 scores on Lines 4-5 are consistent with re-
ported values in Ning et al. (2017). To our knowl-
edge, the results in Table 8 is the first in literature
that reports performances in both metrics, and it is
promising to see that the proposed method outper-
formed state-of-the-art methods in both metrics.

5 Conclusion

Temporal relation (TempRel) extraction is an im-
portant and challenging task in NLP, partly due to
its strong dependence on prior knowledge. Moti-
vated by practical examples, this paper argues that
a resource of the temporal order that events usually
follow is helpful. To construct such a resource, we
automatically processed a large corpus from NYT
with more than 1 million documents using an ex-
isting TempRel extraction system and obtained the
TEMporal relation PRObabilistic knowledge Base
(TEMPROB). The TEMPROB is a good show-
case of the capability of such prior knowledge,
and it has shown its power in improving exist-
ing TempRel extraction systems on a benchmark
dataset, TBDense. The resource and the system
reported in this paper are both publicly available12

and we hope that it can foster more investigations
into time-related tasks.

Acknowledgements

We thank all the reviewers for providing useful
comments. This research is supported in part by
a grant from the Allen Institute for Artificial In-
telligence (allenai.org); the IBM-ILLINOIS Cen-
ter for Cognitive Computing Systems Research
(C3SR) - a research collaboration as part of the
IBM AI Horizons Network; by DARPA under
agreement number FA8750-13-2-0008; and by the
Army Research Laboratory (ARL) under agree-
ment W911NF-09-2-0053.

The U.S. Government is authorized to repro-
duce and distribute reprints for Governmental
purposes notwithstanding any copyright notation
thereon. The views and conclusions contained
herein are those of the authors and should not be
interpreted as necessarily representing the official
policies or endorsements, either expressed or im-
plied, of DARPA or the U.S. Government. Any
opinions, findings, conclusions or recommenda-
tions are those of the authors and do not neces-
sarily reflect the view of the ARL.

References
Steven Bethard, Leon Derczynski, Guergana Savova,

James Pustejovsky, and Marc Verhagen. 2015.
SemEval-2015 Task 6: Clinical TempEval. In Pro-
ceedings of the 9th International Workshop on Se-
mantic Evaluation (SemEval 2015). Association for
12http://cogcomp.org/page/publication_

view/830

849



Computational Linguistics, Denver, Colorado, pages
806–814.

Steven Bethard, James H Martin, and Sara Klingen-
stein. 2007. Timelines from text: Identification of
syntactic temporal relations. In IEEE International
Conference on Semantic Computing (ICSC). pages
11–18.

Steven Bethard, Guergana Savova, Wei-Te Chen, Leon
Derczynski, James Pustejovsky, and Marc Verhagen.
2016. SemEval-2016 Task 12: Clinical TempEval.
In Proceedings of the 10th International Workshop
on Semantic Evaluation (SemEval-2016). Associa-
tion for Computational Linguistics, San Diego, Cal-
ifornia, pages 1052–1062.

Steven Bethard, Guergana Savova, Martha Palmer,
and James Pustejovsky. 2017. SemEval-2017 Task
12: Clinical TempEval. In Proceedings of the
11th International Workshop on Semantic Evalu-
ation (SemEval-2017). Association for Computa-
tional Linguistics, pages 565–572.

Kurt Bollacker, Colin Evans, Praveen Paritosh, Tim
Sturge, and Jamie Taylor. 2008. Freebase: a collab-
oratively created graph database for structuring hu-
man knowledge. In Proceedings of the 2008 ACM
SIGMOD international conference on Management
of data. ACM, pages 1247–1250.

P. Bramsen, P. Deshpande, Y. K. Lee, and R. Barzilay.
2006. Inducing temporal graphs. In Proceedings of
the Conference on Empirical Methods for Natural
Language Processing (EMNLP). pages 189–198.

Taylor Cassidy, Bill McDowell, Nathanel Chambers,
and Steven Bethard. 2014. An annotation frame-
work for dense event ordering. In Proceedings of
the Annual Meeting of the Association for Computa-
tional Linguistics (ACL). pages 501–506.

N. Chambers and D. Jurafsky. 2008. Jointly combining
implicit constraints improves temporal ordering. In
Proceedings of the Conference on Empirical Meth-
ods for Natural Language Processing (EMNLP).

Nathanael Chambers, Taylor Cassidy, Bill McDowell,
and Steven Bethard. 2014. Dense event ordering
with a multi-pass architecture. Transactions of the
Association for Computational Linguistics 2:273–
284.

Nathanael Chambers, Shan Wang, and Dan Juraf-
sky. 2007. Classifying temporal relations between
events. In Proceedings of the 45th Annual Meeting
of the ACL on Interactive Poster and Demonstration
Sessions. pages 173–176.

T. Chklovski and P. Pantel. 2004. VerbOcean: Min-
ing the Web for Fine-Grained Semantic Verb Re-
lations. In Proceedings of the Conference on Em-
pirical Methods for Natural Language Processing
(EMNLP). pages 33–40.

J. Clarke, V. Srikumar, M. Sammons, and D. Roth.
2012. An nlp curator (or: How i learned to stop
worrying and love nlp pipelines). In Proc. of the In-
ternational Conference on Language Resources and
Evaluation (LREC).

Pascal Denis and Philippe Muller. 2011. Predicting
globally-coherent temporal structures from texts via
endpoint inference and graph decomposition. In
Proceedings of the International Joint Conference
on Artificial Intelligence (IJCAI). volume 22, page
1788.

Q. Do, Y. Chan, and D. Roth. 2011. Minimally super-
vised event causality identification. In Proc. of the
Conference on Empirical Methods in Natural Lan-
guage Processing (EMNLP). Edinburgh, Scotland.

Q. Do, W. Lu, and D. Roth. 2012. Joint inference for
event timeline construction. In Proc. of the Con-
ference on Empirical Methods in Natural Language
Processing (EMNLP).

C. Fellbaum. 1998. WordNet: An Electronic Lexical
Database. MIT Press.

Y. Freund and R. Schapire. 1998. Large margin clas-
sification using the Perceptron algorithm. In Pro-
ceedings of the Annual ACM Workshop on Compu-
tational Learning Theory (COLT). pages 209–217.

David Graff. 2002. The AQUAINT corpus of english
news text. Linguistic Data Consortium, Philadel-
phia .

Johannes Hoffart, Fabian M. Suchanek, Klaus
Berberich, and Gerhard Weikum. 2013. Yago2: A
spatially and temporally enhanced knowledge base
from wikipedia (extended abstract). In Proceedings
of the International Joint Conference on Artificial
Intelligence (IJCAI).

Eduard Hovy, Teruko Mitamura, Felisa Verdejo, Jun
Araki, and Andrew Philpot. 2013. Events are not
simple: Identity, non-identity, and quasi-identity. In
Workshop on Events.

Tingsong Jiang, Tianyu Liu, Tao Ge, Lei Sha, Baobao
Chang, Sujian Li, and Zhifang Sui. 2016. Towards
time-aware knowledge graph completion. In Pro-
ceedings of COLING 2016, the 26th International
Conference on Computational Linguistics: Techni-
cal Papers. The COLING 2016 Organizing Commit-
tee, Osaka, Japan, pages 1715–1724.

Hector Llorens, Nathanael Chambers, Naushad UzZa-
man, Nasrin Mostafazadeh, James Allen, and James
Pustejovsky. 2015. SemEval-2015 Task 5: QA
TEMPEVAL - evaluating temporal information un-
derstanding with question answering. In Proceed-
ings of the 9th International Workshop on Semantic
Evaluation (SemEval 2015). pages 792–800.

Inderjeet Mani, Marc Verhagen, Ben Wellner,
Chong Min Lee, and James Pustejovsky. 2006.

850



Machine learning of temporal relations. In Proceed-
ings of the Annual Meeting of the Association for
Computational Linguistics (ACL). pages 753–760.

Anne-Lyse Minard, Manuela Speranza, Eneko
Agirre, Itziar Aldabe, Marieke van Erp, Bernardo
Magnini, German Rigau, Ruben Urizar, and Fon-
dazione Bruno Kessler. 2015. SemEval-2015 Task
4: TimeLine: Cross-document event ordering. In
Proceedings of the 9th International Workshop
on Semantic Evaluation (SemEval 2015). pages
778–786.

Paramita Mirza and Sara Tonelli. 2016. CATENA:
CAusal and TEmporal relation extraction from NAt-
ural language texts. In The 26th International Con-
ference on Computational Linguistics. pages 64–75.

T. Mitamura, Y. Yamakawa, S. Holm, Z. Song, A. Bies,
S. Kulick, and S. Strassel. 2015. Event nugget anno-
tation: Processes and issues. In Proceedings of the
Workshop on Events at NAACL-HLT .

Qiang Ning, Zhili Feng, and Dan Roth. 2017. A struc-
tured learning approach to temporal relation extrac-
tion. In Proceedings of the Conference on Em-
pirical Methods for Natural Language Processing
(EMNLP). Copenhagen, Denmark.

Haoruo Peng and Dan Roth. 2016. Two discourse
driven language models for semantics. In Proc. of
the Annual Meeting of the Association for Computa-
tional Linguistics (ACL).

Haoruo Peng, Yangqiu Song, and Dan Roth. 2016.
Event detection and co-reference with minimal su-
pervision. In Proc. of the Conference on Em-
pirical Methods in Natural Language Processing
(EMNLP).

James Pustejovsky, Patrick Hanks, Roser Sauri, An-
drew See, Robert Gaizauskas, Andrea Setzer,
Dragomir Radev, Beth Sundheim, David Day, Lisa
Ferro, et al. 2003. The TIMEBANK corpus. In Cor-
pus linguistics. volume 2003, page 40.

N. Rizzolo and D. Roth. 2010. Learning based java for
rapid development of nlp systems. In Proc. of the In-
ternational Conference on Language Resources and
Evaluation (LREC). Valletta, Malta.

D. Roth and W. Yih. 2004. A linear programming
formulation for global inference in natural language
tasks. In Hwee Tou Ng and Ellen Riloff, editors,
Proc. of the Conference on Computational Natural
Language Learning (CoNLL). pages 1–8.

Zhiyi Song, Ann Bies, Stephanie Strassel, Tom Riese,
Justin Mott, Joe Ellis, Jonathan Wright, Seth Kulick,
Neville Ryant, and Xiaoyi Ma. 2015. From light
to rich ere: Annotation of entities, relations, and
events. In Proceedings of the The 3rd Workshop on
EVENTS: Definition, Detection, Coreference, and
Representation. Association for Computational Lin-
guistics, Denver, Colorado, pages 89–98.

Evangelia Spiliopoulou, Eduard Hovy, and Teruko Mi-
tamura. 2017. Event detection using frame-semantic
parser. In Proceedings of the Events and Stories in
the News Workshop. Association for Computational
Linguistics, Vancouver, Canada, pages 15–20.

Naushad UzZaman and James F Allen. 2011. Tempo-
ral evaluation. In Proceedings of the Annual Meet-
ing of the Association for Computational Linguistics
(ACL). pages 351–356.

Naushad UzZaman, Hector Llorens, James Allen, Leon
Derczynski, Marc Verhagen, and James Pustejovsky.
2013. SemEval-2013 Task 1: TempEval-3: Evaluat-
ing time expressions, events, and temporal relations.
In Second Joint Conference on Lexical and Compu-
tational Semantics. volume 2, pages 1–9.

Marc Verhagen, Robert Gaizauskas, Frank Schilder,
Mark Hepple, Graham Katz, and James Pustejovsky.
2007. SemEval-2007 Task 15: TempEval temporal
relation identification. In SemEval. pages 75–80.

Marc Verhagen and James Pustejovsky. 2008. Tem-
poral processing with the TARSQI toolkit. In 22nd
International Conference on on Computational Lin-
guistics: Demonstration Papers. pages 189–192.

Marc Verhagen, Roser Sauri, Tommaso Caselli, and
James Pustejovsky. 2010. SemEval-2010 Task 13:
TempEval-2. In SemEval. pages 57–62.

851


