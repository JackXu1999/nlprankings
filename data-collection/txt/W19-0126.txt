








































Augmenting Compositional Models for Knowledge Base
Completion Using Gradient Representations

Matthias Lalisse
Dept of Cognitive Science
Johns Hopkins University

Baltimore, MD USA
lalisse@jhu.edu

Paul Smolensky
Dept of Cognitive Science
Johns Hopkins University
& Microsoft Research AI

Seattle, WA USA
smolensky@jhu.edu

Abstract

Neural models of Knowledge Base data
have typically employed compositional rep-
resentations of graph objects: entity and
relation embeddings are systematically
combined to evaluate the truth of a can-
didate Knowedge Base entry. Using a
model inspired by Harmonic Grammar,
we propose to tokenize triplet embeddings
by subjecting them to a process of op-
timization with respect to learned well-
formedness conditions on Knowledge Base
triplets. The resulting model, known as
Gradient Graphs, leads to sizable improve-
ments when implemented as a compan-
ion to compositional models. Also, we
show that the “supracompositional” triplet
token embeddings it produces have in-
terpretable properties that prove helpful
in performing inference on the resulting
triplet representations.

1 Introduction

As they are conventionally analyzed, representa-
tions of semantic or linguistic data are “composi-
tional”: the meanings of complex representations
are built up from the meanings of their constituent
parts. This idea has motivated numerous models
of graph data deployed in knowledge base com-
pletion (KBC), in which embeddings of entities
and relations are combined into composite repre-
sentations—pairs of entities in a particular rela-
tion with one another—that are built up system-
atically from the constituent parts. But what hap-
pens when the whole is not a simple function of
the parts? A natural case arises in the interpre-
tation of Noun-Noun compounds. The contrasting
senses of vampire cat (a-cat-that-is-a-vampire) and
vampire stake (a-stake-used-to-kill-a-vampire) has
as much to do with the compatibility of the con-
tituent nouns occurring in a given relation than
with the meanings of the individual constituents.

Pursuing this line of thought, we propose Gra-
dient Graphs, a neural network model for

KBC built on the principle that compositionally-
obtained representations of semantic objects can
be optimized to reflect context-specific aspects of
the meanings of their constituents. The issue of
context-conditioned, tokenized semantic represen-
tations has received little explicit attention in the
KBC literature. However, precedents do exist.
Bordes et al. (2011) model context-sensitive entity
senses by embedding relations as pairs of matrices
(Rlhs, Rrhs) that linearly transform entity embed-
dings into pairs of embeddings defined by the rela-
tion and the entities’ positions within it (the left-
hand-side or right-hand-side). The distances of the
resulting embeddings are then compared. Socher
et al. (2013) cope with the context-sensitivity of re-
lation meanings by learning a k⇥d⇥d-dimensional
tensor embeddings for each relation, letting their
model represent polysemy by learning k versions of
the relation represented in the k slices of its em-
bedding tensor. The intuition underlying this ap-
proach is that, for instance, the relation has part
has a di↵erent sense when applied to a biologi-
cal organism than when predicated of a company.
While the former has parts like organs and limbs,
the latter has parts like subsidiaries and workers,
which occupy very di↵erent parts of the seman-
tic space. Each relational slice is then responsible
for learning the compatibility of arguments within
particular semantic subspaces.

In contrast to these other works, our approach is
more radical in the sense that our context-sensitive
representations of knowledge base entries are not
just computed from the entries’ constituent ele-
ments (entity and relation embeddings), but are
instead the result of a representation-optimization
procedure that balances compositionally-derived
representations with general knowledge about the
characteristics of well-formed semantic structures.
We show that this additional “supracomposi-
tional” processing, in addition to yielding siz-
able accuracy improvements over the composi-
tional models we apply it to, leads to embeddings
of entity tokens with interpretable characteristics.

257
Proceedings of the Society for Computation in Linguistics (SCiL) 2019, pages 257-266.

New York City, New York, January 3-6, 2019



1.1 Layout of the paper

Section 2 lays out the general framework, which
is compatible with a variety of implementations.
Section 3 presents two compositional embedding
models proposed in the literature. We adapt these
models to construct compositional embeddings,
and in Section 4 report evaluations of Gradient
versions of these models. Section 5 discusses the
characteristics of the resulting semantic represen-
tations in greater detail, as well as their role in
assisting inference. Section 6 concludes. Technical
details about the model and the implementations
are given in the Appendices.

2 Optimization of semantic tokens

� � � � �

fcompfcomp

x

h

e` er

r

Figure 1: Gradient Graph as a recurrent neural
network. In addition to bias terms (omitted in
the figure) and self-connections, hidden units are
densely connected to one another via a layer of con-
nections with symmetric (undirected) weights, and
receive constant input weighted by � from a single
unit in the input layer. The composition function
fcomp(e`, r, er), which di↵ers between implementa-
tions, computes a compositional embedding x,
which is fed into a hidden layer h of the net-
work. The continuous-time dynamics of this net-
work compute an internal representation ĥ of the
input triplet that is optimal with respect to the
Harmony (1)—a measure of the triplet’s semantic
well-formedness.

The hypothesis underlying the approach we pro-
pose is that noncompositional e↵ects in knowledge
base data can be modeled by subjecting candi-
date facts to a process of optimization with respect
to a set of learned semantic coherence conditions.

These semantic coherence conditions, encoded in a
symmetric matrix, map out the covariance struc-
ture of the semantic space, indicating which seman-
tic features are likely to co-occur with one another.
The embedding of a given triplet is then the vector
obtained by optimizing the semantic coherence of
the the triplet embedding.

We first lay out the model in abstract form, be-
fore introducing particular implementations. Let
x 2 Rd be a d-dimensional embedding of a knowl-
edge base triplet (e`, r, er) obtained as some func-
tion fcomp—the composition function—of the
embeddings of the left and right entities as well
as the relation r. Section 3 provides several mod-
els for constructing the triplet embedding x. Also,
let h be a d-dimensional vector giving the internal
(“hidden”) state of the network. The Harmony of
an internal state h of the network with respect to
the triplet embedding x is

(1) H(h, x) = 1
2

⇥
h>Wh + b>h��(h � x)>(h � x)

⇤

where W is a d ⇥ d weight matrix with W = W>
and b is a bias vector, both learned. (1) is com-
posed of two terms: Core Harmony, a measure
of the semantic coherence of the state vector h,
and Faithfulness, a penalty incurred due to the
state h’s deviation from the compositional triplet
embedding x. � is a hyperparameter that controls
the magnitude of the penalty incurred for straying
from x.

H(h, x) may be rewritten as (2).

(2) H(h, x) = 12 [h> (W � �I) h + (b + 2�x)>h
��x>x)]

If � is greater than the largest eigenvalue of W,
then V = W� �I is negative-definite, and H(h, x)
has a unique global optimum ĥ = argmaxhH(h, x)
for each x. In closed form, this global optimum is

(3) µ(x) = 12V
�1(b + 2�x)

which depends only on the network parameters and
on x. The expression µ(x) comes from observing

that ĥ is the mean of a Gaussian distribution with
inverse covariance matrix V , which implies that ĥ
is the most probable state h of the network with re-
spect to the probability distribution over the state
space defined by p(h|x) / exp{H(h, x)} (see Ap-
pendix A). We take the token embedding for a
triplet x to be µ(x), which is the most semanti-
cally coherent triplet embedding given the compo-
sitional triplet x. In the limit as � ! 1, µ(x) is
just x itself. Let �W denote the largest eigenvalue
of W; then as � ! �W, µ(x) becomes independent
of the triplet embedding x.

A Gradient Graph may be viewed as a neural
network with weight matrix W and bias vector b2 ,

258



where the synaptic weights W specify a feedback
layer through which the values of the hidden state
units a↵ect one another. The construction is as
follows. We stipulate that the hidden state of the
network follows the gradient of Harmony over time:

(4) dhdt =
@H(x,h)

@h

Therefore,

dhi
dt

=
d

dhi

1

2

h
h>Wh + b>h � � kx � hk2

i

=
d

dhi

1

2

2
4X

jk

hjWjkhk + bihi � �(xi � hi)2
3
5

=
1

2

2
4X

j

hjWji +
X

k

Wikhk

3
5 + bi

2
+ �xi � �hi

The above specifies the connectivity of a network
whose hidden units have the linear transfer func-
tion (f(input) = input), bias b2 and external in-
put x (weighted by �). Each hi also receives self-
inhibitory input weighted by ��, as well as inputs
Wijhj from each hj . The symmetry of W implies
that each term Wijhj = hjWji occurs twice, so
that the factor of 12 cancels. This connectivity
structure is illustrated in Figure 1.

2.1 Relation to Harmonic Grammar

In addition to being globally optimal with respect
to the Harmony function H(h, x) conditioned on
a particular input x, µ(x) is the unique fixed
point of this network’s state-evolution dynamics.
It is interesting to note that such networks are
the connectionist foundation for Harmonic Gram-
mar (HG) and Optimality Theory (OT) in Lin-
guistics (Smolensky and Legendre, 2006), where
the dynamics of a neural network perform opti-
mization over internal representations of an input
structure. Appropriate output representations are
then selected in accordance with well-formedness
constraints encoded in the network parameters.
There, the output representation balances Faith-
fulness to the input (an Underlying Form) and the
network’s knowledge about the characteristics of
well-formed structures in general.

Similarly, it is appealing to conceptualize the
hidden layer of a Gradient Graph network as clean-
ing up a knowledge base triplet by subjecting it to
semantic well-formedness conditions. The optimal
triplet µ(x) is then the point to which the network
converges in the limit of infinite computation time.
However, our model di↵ers from typical implemen-
tations of HG and OT in that the optimal struc-
ture µ(x) does not, in general, decompose into a
unique combination of the input constituents (en-
tity and relation embeddings). The resulting rep-
resentations are in this sense gradient, rather than

being the product of a combination of discrete ob-
jects. Furthermore, Gradient Graphs are, to our
knowledge, the first application of these ideas to
the automatic learning of an appropriate semantic
optimization function from a large amount of data.

2.2 Comparison with translation-based
approaches

Like a large class of Translation-based models
(Bordes et al., 2011; Yoon et al., 2016; Lin et al.,
2015; Ji et al., 2016), our inference procedure con-
sists of the application of an a�ne transformation
to an input x (Equation (3)), which is then scored
using some regular operation. In our case, this
scoring function is quadratic. A particular close
cousin is the bilinear Semantic Matching En-
ery (SME) method of Bordes et al. (2014), which
learns a global third-order tensor W that, when
dotted along the third mode with a relation embed-
ding r, yields a relation-specific matrix Wr. Along
with learned left and right bias vectors b` snd br,
this weight matrix is fed into the bilinear scoring
function (5):

(5) scoreSME(e`, r, er) =
(Wre` + b`)>(Wrer + br)

Expanding out this expression, we get (6).

(6) e`
>Wr>Wrer +b`>Wrer +br>Wrel +b`>br

The relation-specific bilinear form Wr>Wr is, like
our global W matrix, symmetric. The remaining
terms, apart from the constant b`

>br, compute a
pair of relation-specific bias vectors b`

>Wr and
br

>Wr applied to the pair of entity embeddings.
The resulting Energy function used to score triplets
has more than a passing similarity to our Harmony
function (1) when � = 1 and, thus, no optimiza-
tion takes place.

A distinctive characteristic of our approach in
relation to these structurally similar models is
that the transformation undergone by a Gradient
Graph triplet is directly connected to the well-
formedness criterion according to which triplets
are evaluated in inference. As illustrated in the
Discussion, our transformation of a compositional
triplets using learned well-formedness criteria leads
to two kinds of triplet embeddings: composition-
ally obtained type embeddings, and contextually
optimized token embeddings. In qualitative and
quantitative analyses of the learned representation,
we see (1) that the space of compositionally ob-
tained triplet embeddings has a reasonable struc-
ture, independently of the optimizing transforma-
tion, that is already sensitive to the context sup-
plied by the relation, and (2) that semantic op-
timization improves these compositional represen-
tations in recognizable ways. Interestingly, im-

259



proving triplets with respect to the Harmony func-
tion does not uniformly place them in regions that
are high-Harmony in a global sense. In fact, we
find that whereas positive triplets end up close
to other positive triplets, plausible but negative
triplets tend to be detained in clusters with other
negative instances (Tables 2 and 4).

3 Compositional and Gradient
Models

Optimization with respect to H can be imple-
mented wherever we can construct a triplet em-
bedding x. In our experiments, we apply Har-
monic optimization of triplet representations to
two compositional embedding models drawn from
the knowledge base completion literature: Dist-
Mult and HolE. Both models specify a scor-
ing function for triplet embeddings obtained via
operations applied to embeddings of the three
triplet components—two entity vectors and a re-
lation vector—with no additional learned com-
ponents apart from these representations of the
triplet constituents. We take the terms occurring
in these scoring functions to be components of the
representation of the triplet, specifying what in-
formation about the triplet elements is important
to evaluating the triplet’s quality. Hence, we con-
structed Harmonic triplet embeddings according to
the desideratum that every term occurring in the
basic method’s scoring function should also appear
in the triplet representation x in the Harmonic
model. For instance, the score of a DistMult
triplet is a sum of three-way products of the corre-
sponding elements of the embeddings e`, r, and er.
Setting the products [e`]i[r]i[er]i to appear in our
compositional triplet embeddings (as in Eqn (8))
satisfies this desideratum.

DistMult (Yang et al., 2015) is a baseline
model for scoring knowledge base triplets using the
scoring function (7):

(7) scoreDistMult(e`, r, er) = e`
>diag(r)er

where e`, r, er are d-dimensional embeddings and
diag(r) is the d ⇥ d-dimensional matrix obtained
by arranging the elements of r along the diag-
onal. Kadlec et al. (2017) have recently shown
that DistMult can outperform many more com-
plicated scoring functions when hyperparameters
are properly optimized, making it a strong baseline
comparison for the method we propose. In addi-
tion, DistMult often occurs as a subcomponent in
state-of-the-art KBC models—e.g. (Schlichtkrull
et al., 2017; Toutanova et al., 2015). From this
starting-point, we construct Harmonic Dist-
Mult (HDistMult) by setting the triplet embed-
ding x to the elementwise multiplication of the re-
lation and the pair of entity vectors:

(8) xHDM = e` � r � er
where � denotes elementwise multiplication.

Holographic Embeddings (HolE) were in-
troduced by Nickel et al. (2016) building on theo-
retical work by (Plate, 1995), as a means of con-
structing compressed tensor product representa-
tions of relational triplets. The method computes
the score for a triplet (e`, r, er) from the similarity
between a relation vector and the circular corre-
lation e` ? er of the entity vectors and a relation
vector:

(9) scoreHolE(e`, r, er) = r
>(e` ? er)

where the circular correlation of e` and er is com-
puted as (10).

(10) e` ? er = F�1
⇣
F(e`) � F(er)

⌘

F and F�1 denote the Fourier Transform and its
inverse, and F(e`) is the complex conjugate of
F(e`).1 Circular correlation is asymmetric (e` ?
er 6= er?e`)—allowing it to model asymmetric rela-
tions—and the result of the operation has the same
dimensionality as the input vectors, while still car-
rying information about which pair of entities was
bound together via correlation.

We construct Harmonic HolE (HHolE)
triplet embeddings via elementwise multiplication
of relation vectors with the correlated pair of entity
vectors:

(11) xHHolE = r � (e` ? er)

In both Harmonic models, the score for a can-
didate triplet (e`, r, er) with embedding x is calcu-
lated by taking the Harmony of its optimal instan-
tiation, ĥ = µ(x), i.e.

(12) score(x) = H(µ(x), x)

In the experiments, we train our networks using
the log-softmax objective with negative sampling.
For each positive training example (e`, r, er) with
embedding x, we construct N negative examples
(ẽn` , r̃

n, ẽnr ) obtained by deleting either the left or
right entity of the true triplet and replacing it with
a randomly sampled entity vector. Let x̃n denote
the embedding of the nth negatively sample triplet

1The Fourier transform decomposes a function of
time into its frequency components. In the context
of holographic embeddings, its utility comes from the
Convolution Theorem, which states that convolution in
the time domain corresponds to elementwise multipli-
cation in the frequency domain. This is useful in actual
computations. The circular correlation—which con-
sists of convolution with a time-reversed signal—can
also be computed as a sum over o↵-diagonals of the
tensor product of vectors, with time complexity O(d2).
In contrast, the Fast Fourier Transform (FFT) has time
complexity O(n log n) (Nickel et al., 2016).

260



(ẽn` , r̃
n, ẽnr ). The training objective is then to min-

imize (13):

(13) LH(e`, r, er) =
� log exp{H(µ(x),x)}

exp{H(µ(x),x)}+PNn=1 exp{H(µ(x̃n),x̃n)}

This has the e↵ect of increasing the Harmony
of positive examples relative to negative sam-
ples. The learning rule is thus Harmony-
maximizing: the network parameters maximize the
well-formedness of the positive examples relative to
negative samples.

4 Experiments

We evaluated Gradient Graphs using the stan-
dard WN18 and FB15K datasets (Bordes et al.,
2013)—which are subsets of the WordNet (Miller,
1995) and Freebase (Bollacker et al., 2008)
databases—on the Entity Reconstruction task. In
Entity Reconstruction, the network ranks comple-
tions of triplets ( · , r, er) and (e`, r, · ) with deleted
left and right entities. The model is successful if it
ranks the true triplet above other candidate com-
pletions. We report results in the filtered evalua-
tion setting (Bordes et al., 2013), in which a test
triplet is only ranked against triplets that do not
occur in the database. The rank of a test triplet is
thus the rank of the first correct answer to the
query. For both DistMult and HolE, we re-
port the originally reported results alongside re-
sults for our reimplementations, comparing these
models with our Harmonic variants HDistMult
and HHolE with and without optimization of hid-
den layer representations. The Harmonic models
with � = 1 have the Harmony function H(x, x),
i.e. where the hidden representation is just the
compositional embedding itself and the Faithful-
ness penalty in (1) is 0.

Our models used 256- to 512-dimensional em-
beddings and manually tuned values of the hyper-
parameter �. In all models, entity and relation
embeddings were normalized to kvk = 1. We do
not regularize parameters, but instead set an up-
per bound ��✏ (✏ a small constant) on the l2 norm
of the weight matrix W, which helps constrain the
spectral norm (maximum eigenvalue) of W to re-
main lower than �. This is equivalent to adopting
a uniform prior on weight matrices lying within the
n-ball with squared radius �� ✏. Importantly, this
procedure keeps the matrix V = W� �I negative-
definite—a necessary condition for the existence of
a unique optimum for H(h, x).

Results from the experiments are reported in
Table 1. Overall, we found that models using
our quadratic scoring function (1) to perform best
across the board. This e↵ect was particularly seen
in more stringent evaluation criteria—Hits@1 and

Hits@3—leading to, for instance—a 15% improve-
ment in Hits@1 (accuracy) on Freebase between
our DistMult reimplementation and quadratic
HDistMult (� = 1). The bestDistMult mod-
els were those with high � values; however, within-
model comparison of HolE shows dramatic im-
provements from including the optimization com-
ponent—a 32% increase in FB15K accuracy be-
tween the results of (Nickel et al., 2016) and our
HHolE with a permissive �-criterion of 1.0.

5 Discussion

In part, the appeal of our supracompositional rep-
resentations stems from their ability to produce
emeddings of tokens of semantic objects—that is,
embeddings that take into account the context of
a particular instance of a semantic type. Tok-
enized embeddings have proven useful in various
settings. For instance, Dasigi et al. (2017) con-
struct token embeddings by superposing learned
vectors for WordNet senses in ratios determined
by a probability distribution computed from the
context. The resulting representation is a context-
weighted sum of discrete senses drawn from a hand-
crafted ontology. Closer to our approach, Belanger
and Kakade (2015) model text as a linear dynami-
cal system that generates texts through transitions
of a continuous-state, discrete-time dynamical sys-
tem across time. Estimates of the system’s most
probable internal state can then be extracted as
an embedding of the tokens, which prove useful in
language modeling and other downstream tasks.

In our framework, types correspond to static en-
tity and relation embeddings that are the input to
fcomp, and the triplet embeddings resulting from
their combination. Token triplet embeddings are
produced by optimization of the hidden layer of a
GG. To understand the e↵ect of optimizing the
hidden layer of a GGraph both on its learned
representations and on its performance in infer-
ence, we used the best-performing trained HHolE
model to produce token embeddings of database
triplets in order to inspect their semantic neigh-
borhoods. For a given compositional triplet em-
bedding fcomp(e`, r, er) ⌘ x, we first computed
the optimized triplet representation µ(x) ⌘ ĥ
using Equation (3). Treating ĥ as the contex-
tually optimal (token) embedding of the triplet
(e`, r, er), we then examined the semantic neigh-
borhood by computing the 5 closest optimized em-
beddings in the context of the same relation. Table
4 shows the semantic neighborhoods of composi-
tional triplets x and optimized triplets ĥ for di↵er-
ent possible completions of a number of queries.
Rows 1 and 2 display completions of the query
( · , office position or title, US President),
and Rows 2 and 4 consider the neighborhood of the
entity embedding of Bob Dylan in the context of

261



FB15K WN18

Rank Hits@ Rank Hits@

Model � MR MRR 1 3 10 � MR MRR 1 3 10

DistMult - - .350 - - .577 - - .830 - - .942

Ensemble DM† - 36 .837 .797 - .904 - 457 .790 .784 - .950

DistMult⇤ - 28 .710 .605 .792 .876 - 220 .825 .714 .938 .950

HDistMult 1 23 .806 .751 .845 .898 1 164 .841 .740 .943 .955
HDistMult 50.0 23 .742 .661 .799 .881 3.0 184 .831 .732 .931 .945

HolE - - .524 .402 .613 .739 - - .938 .930 .945 .949

HolE⇤ - 39 .409 .289 .464 .647 - 205 .916 .893 .936 .946

HHolE 1 32 .682 .575 .763 .850 1 293 .919 .903 .934 .942
HHolE 1.0 21 .796 .727 .848 .901 2.0 183 .939 .931 .945 .951

Table 1: Results on FB15K and WN18. The results from the original DistMult and HolE
models are drawn from (Yang et al., 2015) and (Nickel et al., 2016). Our reimplementations⇤ of
DistMult and HolE di↵er in numerous details from those in the original papers (see Appendix
B for technical details). Ensemble DistMult† refers to the hyperparameter-optimized Ensemble
(product of experts) reimplementation of DistMult proposed by Kadlec et al. (2017). For each
model, we report Mean Rank (MR) and Mean Reciprocal Rank (MRR), as well as Hits@N for
N 2 {1, 3, 10}. Hits@N denotes the fraction of test instances in which the true triplet completion
had rank less than or equal to N . The best results within each category (DistMult and HolE)
are marked in bold, and the best results overall are additionally underlined.

queries about his profession (e` = Bob Dylan, r =
has profession) while varying the profession er.
This illustrates how the representation of Bob Dy-
lan varies across his di↵erent professional guises.

The table illustrates the utility of token embed-
dings in inference. Token embeddings of George W.
Bush and Barack Obama in the context of a query
about their having held the o�ce of U.S. president
are in semantic neighborhoods with a greater den-
sity of true instances of U.S. Presidents than their
type embeddings. The negative examples John
McCain and Hilary Rodham Clinton have type em-
beddings that are close to actual presidents. This is
sensible since, for instance, Hilary Rodham Clin-
ton is married to Bill Clinton—one of her near-
est neighbors. But both of the negative exam-
ples’ token embeddings have neighborhoods that
are mostly cleared of actual presidents—despite
having type embedding neighborhoods that are rel-
atively dense with presidents.

Turning to the second half of the table,
we note that Bob Dylan’s type embedding
is already in a neighborhood dense with
singer-songwriters. It is appropriate, then,
that this neighborhood undergoes no change
apart from minor re-ranking when the triplet
(Bob Dylan,has profession,singer-songwriter)
is optimized. For more di�cult cases, however,
where Dylan is not a prototypical example,
the semantic neighborhoods undergo dramatic
reconfiguration. For instance, optimizing the
triplet (Bob Dylan,has profession,disc jockey)
correctly places Dylan in the neighborhood of
other DJs, despite the implausibility of this associ-
ation in the neighborhood of his type embedding,
which contains no DJs. This places him in the
token neighborhood of Moby, who is otherwise

quite unlike Bob Dylan except in respect of their
common career as DJs.

Combined with our finding that optimization
yields the most dramatic improvements in the more
stringent evaluation criteria (Hits@1 and Hits@3),
this suggests that our optimization procedure is
particularly helpful in arbitrating between di�-
cult cases. This qualitative observation about the
neighborhoods of compositional and supracompo-
sitional triplets can be quantified. Using the triplet
classification dataset introduced by Socher et al.
(2013), which contains an equal number of posi-
tive and negative triplets, we find (Table 2) that
positive triplets, on average, end up in supracom-
positional neighborhoods that are more dense in
positive examples than their compositional coun-
terparts. On the other hands, negative triplets suf-
fer a decrease in the number of positive triplets in
the neighborhoods of their supracompositional em-
beddings.

To further quantify the role of semantic opti-
mization in inference, we correlated the di↵erence
between the Harmony (score) of input triplets pre-
and post-optimization with the change in its rank
on the FB15K dataset. The change in Harmony
is computed as �H = H(µ(x), x) � H(x, x), i.e.
the di↵erence between the Harmony of the token
embedding and the Harmony of the type embed-
ding. This comparison is model-internal—it does
not compare models trained to do token infer-
ence with models trained for type inference. How-
ever, it serves as a useful index of the performance
gains attributable to the optimization procedure.
If optimizing a triplet representation indeed im-
proves its relative position among all candidate
triplets, we expect changes in Harmony to be nega-
tively correlated with the change in rank of positive

262



�density t statistic p

Pos 0.241 t = 99.7 p ⌧ 10�10
Neg -0.059 t = �62.4 p ⌧ 10�10

Table 2: Change in neighborhood (top-5 clos-
est neighbors) density of true triplets (�density)
for positive and negative triplets drawn from the
triplet classification dataset introduced by Socher
et al. (2013), which is derived from the FB15K test
set and consists of 59,071 positive triplets and the
same number of negative triplets. This resulted in
N = 118, 142 queries for both positive and nega-
tive examples (two for each triplet, querying both
the left and right entity). After computing each
triplet’s neighborhood, we counted the number of
triplet neighbors that were in fact in the training,
validation, or test sets of FB15K, yielding a mea-
sure of the concentration of true and false examples
in the neighborhood of both type and token triplet
embeddings.

triplets. Consistent with this, we find that opti-
mization leads to significant improvements in raw
rank in our best trained HHolE model (Spear-
man’s ⇢ = �0.0157, p < 10�6, Figure 5). When
considering the change in Mean Reciprocal Rank,
a more standard evaluation metric, we find that
�H is positively associated with improvements in
MRR

�
⇢ = .1370, p ⌧ 10�10

�
,2 particularly when

triplets whose ranks do not change at all are omit-
ted

�
⇢ = .3746, p ⌧ 10�10

�
. In other words, when

semantic optimization makes a di↵erence, it does
so for the better.

For HDistMult, �H is significantly associ-
ated with increases in the rank of true triplets�
⇢ = 0.1226, p ⌧ 10�10

�
, a result consistent with

our finding that this class of models disprefers low
settings of �. This illustrates the importance of
choices of representational format for embeddings
of semantic data. Our optimization procedure can
only operate over information that is contained in
its compositional input. Hence, choices about how
to combine the learned features of entities and rela-
tions—i.e. about the manner of composition—are
central to our framework.

5.1 Desiderata of a composition function

What factors a↵ect the success of semantic opti-
mization in combination with a particular com-
position scheme? We suspect that multiplicative
interactions across embedding components—which
are present in HHolE and absent in HDist-
Mult—are essential for our optimization proce-
dure to contribute helpfully to inference. Both

2�MRR is computed as MRR(µ(x))�MRR(x), i.e.
the di↵erence between the Mean Reciprocal Rank of
the supracompositional and the compositional triplets.

Figure 2: E↵ect of optimization on the rank
of FB15K validation set triplets (N = 100, 000;
50, 000 triplets with two queries per triplet) from
the best-performing HHolE model (d = 512,� =
1.0). The horizontal axis is a triplet’s change
in Harmony pre- and post-optimiation (�H ⌘
H(µ(x), x) � H(x, x)) minus the mean change in
Harmony for all triplets (µ(�H)). This is plot-
ted against rankq(µ(x)) � rankq(x), the triplet’s
change in rank due to optimization for query q. A
negative correlation indicates reductions in rank
(improvements) associated with increasing opti-
mization of triplet representations.

DistMult and HolE are special cases of con-
tracted Tensor Product Representations (TPRs),
obtained by summing over (HolE) or discard-
ing (DistMult) terms from the three-way tensor
product e` ⌦ r ⌦ er.3 In particular, DistMult re-
tains only multiplicative interactions within com-
ponents, omitting terms with non-matching in-
dices. This fact appears to be crucial. In a follow-
up experiment, we implemented a series of full
TPR models trained on FB15K, using the com-
position operation (14):

(14) xHTPR = e` ⌦ r ⌦ er

Such models are necessarily small in size due to
the rapid growth of dimensionality for TPRs as
a function of the dimensionality of entity and re-
lation embeddings. Consequently, their perfor-
mance is also poor in comparison to our other im-
plementations. However, the trend matched that
which we observed within the HHolE class: mod-
els including the optimization procedure consis-
tently outperformed those with � = 1 (see Table
3). From this, we conclude that other embedding-
based KBC models incorporating cross-component
multiplicative interactions are likely to see im-
provements from the addition of a semantic op-
timization step prior to scoring.

3See (Nickel et al., 2016) for discussion of holo-
graphic embeddings as compressed tensor products.

263



� MR MRR H@1 H@3 H@10

1 150 .278 .192 .305 .447
1.0 134 .295 .204 .326 .471

Table 3: Performance of HTPR models with and
without optimization (controlled by �). For both
models, entities were 5-dimensional and relations
20-dimensional. This trend held across other hy-
perparameter settings.

6 Conclusion

In this paper, we proposed Gradient Graphs, a
general method for augmenting compositional rep-
resentations of Knowledge Graphs with a post-
composition procedure that optimizes the well-
formedness of triplet embeddings, highlighting the
model’s connection to Harmonic Grammar and
Optimality Theory. The resulting model shows
marked improvements over the compositional mod-
els it is implemented alongside, and also pro-
duces triplet token embeddings with properties
that prove useful for inference about knowledge
base entities. In future work, we intend to explore
the utility of semantically-optimized token embed-
dings in other linguistic settings.

References

Abadi, M., Barham, P., Chen, J., Chen, Z., Davis,
A., Dean, J., Devin, M., Ghemawat, S., Irv-
ing, G., Isard, M., Kudlur, M., Levenberg, J.,
Monga, R., Moore, S., Murray, D. G., Steiner,
B., Tucker, P., Vasudevan, V., Warden, P.,
Wicke, M., Yu, Y., and Zheng, X. (2016). Ten-
sorflow: A system for large-scale machine learn-
ing. In Proceedings of the 12th USENIX Confer-
ence on Operating Systems Design and Imple-
mentation, OSDI’16, pages 265–283, Berkeley,
CA, USA. USENIX Association.

Belanger, D. and Kakade, S. (2015). A linear dy-
namical system model for text. In ICML 32,
volume 37.

Bollacker, K., Evans, C., Paritosh, P., Sturge,
T., and Taylor, J. (2008). Freebase: A col-
laboratively created graph database for struc-
turing human knowledge. In Proceedings of the
2008 ACM SIGMOD International Conference
on Management of Data, SIGMOD ’08, pages
1247–1250, New York, NY, USA. ACM.

Bordes, A., Glorot, X., Weston, J., and Bengio, Y.
(2014). A semantic matching energy function
for learning with multi-relational data. Machine
Learning, 94(2):233–259.

Bordes, A., Usunier, N., Garcia-Duran, A., We-
ston, J., and Yakhnenko, O. (2013). Translating
embeddings for modeling multi-relational data.

In Burges, C. J. C., Bottou, L., Welling, M.,
Ghahramani, Z., and Weinberger, K. Q., editors,
Advances in Neural Information Processing Sys-
tems 26, pages 2787–2795. Curran Associates,
Inc.

Bordes, A., Weston, J., Collobert, R., and Bengio,
Y. (2011). Learning structured embeddings of
knowledge bases. In AAAI.

Dasigi, P., Ammar, W., Dyer, C., and Hovy, E.
(2017). Ontology-aware token embeddings for
prepositional phrase attachment. In ACL55,
pages 2089–2098.

Ji, G., Liu, K., He, S., and Zhao, J. (2016). Knowl-
edge graph completion with adaptive sparse
transfer matrix. In AAAI-16, pages 985–991.

Kadlec, R., Bajgar, O., and Kleindienst, J. (2017).
Knowledge base completion: Baselines strike
back. In 2nd Workshop on Representation
Learning for NLP, pages 69–74.

Kingma, D. and Ba, J. (2015). Adam: A method
for stochastic optimization. In ICLR.

Lin, Y., Liu, Z., Sun, M., Liu, Y., and Zhu, X.
(2015). Learning entity and relation embed-
dings for knowledge graph completion. In AAAI,
pages 2181–2187.

Ling, X. and Weld, D. (2012). Fine-grained entity
recognition. In AAAI 26.

Miller, G. A. (1995). Wordnet: A lexical database
for english. Commun. ACM, 38(11):39–41.

Nickel, M., Rosasco, L., and Poggio, T. (2016).
Holographic embeddings of knowledge graphs.
In AAAI.

Nickel, M., Tresp, V., and Kriegel, H.-P. (2011). A
three-way model for collective learning on multi-
relational data. In Proceedings of the 28 th In-
ternational Conference on Machine Learning.

Plate, T. (1995). Holographic reduced representa-
tions. IEEE Transactions on Neural Networks,
6:623–641.

Schlichtkrull, M., Kipf, T. N., Bloem, P., Berg, R.
v. d., Titov, I., and Welling, M. (2017). Model-
ing relational data with graph convolutional net-
works. arXiv preprint arXiv:1703.06103.

Smolensky, P. and Legendre, G. (2006). The
Harmonic Mind: From Neural Computation to
Optimality-Theoretic Grammar, volume 1: Cog-
nitive Architecture. The MIT Press.

Socher, R., Chen, D., Manning, C. D., and Ng, A.
(2013). Reasoning with neural tensor networks
for knowledge base completion. In NIPS.

Toutanova, K., Chen, D., Pantel, P., Poon, H.,
Choudhury, P., and Gamon, M. (2015). Rep-
resenting text for joint embedding of text and
knowledge bases. In EMNLP. ACL – Associa-
tion for Computational Linguistics.

264



US Presidents

George W. Bush Barack Obama

n x (compositional) ĥ (optimized) n x (compositional) ĥ (optimized)

1 George H. W. Bush George H. W. Bush 1 Hillary Rodham Clinton George W. Bush

2 Bill Clinton Bill Clinton 2 Al Gore Bill Clinton

3 Jimmy Carter Jimmy Carter 3 George W. Bush John F. Kennedy

4 John F. Kennedy Ronald Reagan 4 Bill Clinton Ronald Reagan

5 Ronald Reagan Barack Obama 5 John F. Kennedy George H. W. Bush

John McCain Al Gore

n x (compositional) ĥ (optimized) n x (compositional) ĥ (optimized)

1 John Kerry John Kerry 1 Barack Obama Condoleezza Rice

2 Hillary Rodham Clinton Colin Powell 2 George W. Bush John C. Calhoun

3 Colin Powell Nancy Pelosi 3 Colin Powell Colin Powell

4 Richard Nixon Joe Biden 4 Condoleezza Rice Hillary Rodham Clinton

5 Herbert Hoover Dick Cheney 5 John F. Kennedy John Kerry

Guises of Bob Dylan

Singer-Songwriter Screenwriter

n x (compositional) ĥ (optimized) n x (compositional) ĥ (optimized)

1 Eric Clapton Bonnie Raitt 1 John Lennon John Lennon

2 Bonnie Raitt Eric Clapton 2 Jimi Hendrix Barbara Streisand

3 Van Morrison Van Morrison 3 Barbara Streisand Eric Idle

4 B.B. King B.B. King 4 Eric Clapton Nick Cave

5 Bob Seger Bob Seger 5 Eddie Vedder Alan Bergman

Disc Jockey Writer

n x (compositional) ĥ (optimized) n x (compositional) ĥ (optimized)

1 Tom Petty Steven Van Zandt 1 John Lennon Alanis Morissette

2 Warren Zevon Erykah Badu 2 Alanis Morissette John Lennon

3 Willie Nelson Alice Cooper 3 Paul McCartney Leonard Cohen

4 John Mayer John Mayer 4 Tina Turner Leonard Bernstein

5 Steve Earle Moby 5 Dolly Parton Prince

Table 4: Semantic neighborhoods of type (pre-) and token (post-optimization) triplets output by the best-
performing HHolE model (d = 512,� = 1.0). US Presidents: E↵ect of optimization on the semantic
neighborhoods of entity embeddings in the context of the query ( · , office title, US President). Guises
of Bob Dylan: E↵ect of optimization on the semantic neighborhood of Bob Dylan in the context of four
queries about his profession: Bob Dylan as singer-songwriter, screenwriter, disc jockey, and
writer. Bob Dylan is a positive instance of each of these professions in FB15K. For each entity, we
retrieved the 5 closest (Euclidian Distance) compositional triplet embeddings, as well as the five closest
triplets, among all candidate triplets, when all these candidates are optimized. Triplet completions that
in fact occur in FB15K are marked in bold. Human-readable entity names were retrieved from a mapping
between Freebase machine IDs and names of Wikipedia articles built by Ling and Weld (2012). See main
text for discussion of the results.

265



Yang, B., Yih, W., He, X., Gao, J., and Deng,
L. (2015). Embedding entities and relations for
learning and infer- ence in knowledge bases. In
ICLR.

Yoon, H., Song, H., Park, S., and Park, S. (2016).
A translation-based knowledge graph embedding
preserving logical property of relations. In Pro-
ceedings of NAACL-HLT, pages 907–916.

7 Appendix A: Model details

(15) Claim: µ(x) = 12 (W � �I)�1(b + 2�x) is
the unique global optimum for H(h, x) for
any fixed x.

We define the Harmony of hidden state h with re-
spect to triplet embedding x as in (1):

H(h, x) ⌘ 1
2

⇥
h>Wh + b>h � �(h � x)>(h � x)

⇤

=
1

2

⇥
h> (W � �I) h + (b + 2�x)>h � �x>x

⇤

⌘ 1
2

⇥
h>V h + m(x)>h � �x>x

⇤

Completing the square yields:

H(h, x) =1
2

"✓
h � 1

2
V �1m(x)

◆>
V

✓
h � 1

2
V �1m(x)

◆#

+
1

2


��x>x � 1

4
m(x)>V �1m(x)

�

⌘1
2

h
(h � µ(x))> V (h � µ(x))

i
+ `(x)

This is valid because V = W � �I is symmet-
ric. `(x) does not depend on h, so it is su�cient

to optimize 12

h
(h � µ(x))> V (h � µ(x))

i
. Setting

@H(h,x)
@h = 0 yields 2V (h � µ(x)) = 0; ) h = µ(x).

Since V is negative-definite, this point is a maxi-
mum.

The truth of the claim may also be perceived
from observing that H(h, x) defines a Gaussian
distribution over the hidden state variable h with
mean µ(x) and inverse covariance matrix ⌃�1 ⌘ V .
The optimality of µ(x) then follows from the uni-
modality of Gaussians.

The training objective (13) may be justified by
the following considerations. We take the com-
positional triplet data to be generated by hidden
states of the gradient graph network, and maxi-
mize the log probability of the training data us-
ing the maximum a posteriori point estimate of
the hidden state h. The “complete data” are then
D = {hĥ, xi} = {hµ(x), xi}. For fixed x, H(h, x)
models the conditional distribution p(h|x), with

(16) p(h|x) = exp{H(h,x)}Z(x)
where Z(x) =

R
h0 exp {H(h0, x)} dh0 =

|2⇡V �1| 12 exp{`(x)} is the partition function

conditioned on x. Let �q = {x0} be the set of
candidate triplet embeddings consistent with a
given query q. Choosing the discrete distribution

p(x) = exp{`(x)}P
x02�q exp{`(x0)}

over triplet embeddings as

the prior probability of the embedding x, we have
that:

p(µ(x), x|q) / exp{H(µ(x), x)}
|2⇡V �1| 12 Px02�q exp{`(x0)}

For given parameters, the denominator is con-
stant. So, renormalizing over the discrete triplets
�q gives:

p(µ(x), x|q) = exp{H(µ(x), x)}P
x02�q exp{H(µ(x), x)}

Approximating the discrete distribution over all of
�q with a negative sample yields the objective (13).

8 Appendix B: Implementation
details

In initial experiments, we searched through a num-
ber of candidate models. These included two Har-
monic variants of the Rescal model (Nickel et al.,
2011), as well as models that constructed x as a
simple concatenation of entity and relation vectors,
as well as three-way tensor products of these vec-
tors. These initial experiments led us to focus on
DistMult and HolE as the best-performing can-
didates. Our Harmonic models and reimplementa-
tions of the DistMult and HolE baselines were
written in TensorFlow (Abadi et al., 2016) and esti-
mated using the Adam optimizer (Kingma and Ba,
2015). With the exception of the HolE reimple-
mentation, we uniformly used the log-softmax loss
(13), which performed best in initial experiments.
In contrast, Yang et al. (2015) use a margin-based
ranking loss that is linear in the margin between
the scores of positive and negative examples up to a
threshold, and Nickel et al. (2016) use the pairwise
linear margin loss applied to the scores squashed
by the logistic function. For HolE, we used the
linear margin loss, which provided by far the best
performance in the experiments. For each model,
we trained until performance on the validation set
decrease, then chose the best-performing embed-
ding size from among d 2 {256, 512}. Batch size
(512), negative sampling rate (500), and learning
rate (0.001) were kept constant across models. We
note in passing that regions of the hyperparame-
ter space for DistMult explored by Kadlec et al.
(2017) were inaccessible to us for technical reasons.
For the Harmonic models, we manually tuned the
� hyperparameter.

266


