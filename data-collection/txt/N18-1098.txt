



















































Deep Temporal-Recurrent-Replicated-Softmax for Topical Trends over Time


Proceedings of NAACL-HLT 2018, pages 1079–1089
New Orleans, Louisiana, June 1 - 6, 2018. c©2018 Association for Computational Linguistics

Deep Temporal-Recurrent-Replicated-Softmax for
Topical Trends over Time

Pankaj Gupta1,2, Subburam Rajaram1, Hinrich Schütze2, Bernt Andrassy1
1Corporate Technology, Machine-Intelligence (MIC-DE), Siemens AG Munich, Germany

2CIS, University of Munich (LMU) Munich, Germany
{pankaj.gupta, subburam.rajaram, bernt.andrassy}@siemens.com

pankaj.gupta@campus.lmu.de | inquiries@cislmu.org

Abstract

Dynamic topic modeling facilitates the iden-
tification of topical trends over time in tem-
poral collections of unstructured documents.
We introduce a novel unsupervised neural dy-
namic topic model named as Recurrent Neural
Network-Replicated Softmax Model (RNN-
RSM), where the discovered topics at each
time influence the topic discovery in the sub-
sequent time steps. We account for the tempo-
ral ordering of documents by explicitly mod-
eling a joint distribution of latent topical de-
pendencies over time, using distributional es-
timators with temporal recurrent connections.
Applying RNN-RSM to 19 years of articles
on NLP research, we demonstrate that com-
pared to state-of-the art topic models, RNN-
RSM shows better generalization, topic inter-
pretation, evolution and trends. We also intro-
duce a metric (named as SPAN) to quantify the
capability of dynamic topic model to capture
word evolution in topics over time.

1 Introduction

Topic Detection and Tracking (Allan et al., 1998)
is an important area of natural language process-
ing to find topically related ideas that evolve over
time in a sequence of text collections and exhibit
temporal relationships. The temporal aspects of
these collections can present valuable insight into
the topical structure of the collections and can be
quantified by modeling the dynamics of the under-
lying topics discovered over time.

Problem Statement: We aim to generate tem-
poral topical trends or automatic overview time-
lines of topics for a time sequence collection of
documents. This involves the following three tasks
in dynamic topic analysis: (1) Topic Structure De-
tection (TSD): Identifying main topics in the doc-
ument collection. (2) Topic Evolution Detection
(TED): Detecting the emergence of a new topic

     Language Model
Distributional Semantics
       Word Vectors
       Linear Model
          Rule Set

Neural Language Model
      Word Embedding
Semantic Representation
    Distributional models
       Neural Network

1996 2014

... h
(0)  h(t-1)

RSM

 h(t)

RSM

 h(T)

RSM

...

 V(t-1)  V(t)  V(T)

(t-1) (t) (T)

Figure 1: (Left): Word Usage over time for Topic
(Word Representation) in scholarly articles. (Right):
RSM-based dynamic topic model with explicit tempo-
ral topic dependence

and recognizing how it grows or decays over time
(Allan, 2002). (3) Temporal Topic Characteriza-
tion (TTC): Identifying the characteristics for each
of the main topics in order to track the words’ us-
age (keyword trends) for a topic over time i.e. topi-
cal trend analysis for word evolution (Fig 1, Left).

Probabilistic static topic models, such as La-
tent Dirichlet Allocation (LDA) (Blei et al., 2003)
and its variants (Wang and McCallum, 2006; Hall
et al., 2008; Gollapalli and Li, 2015) have been
investigated to examine the emergence of top-
ics from historical documents. Another vari-
ant known as Replicated Softmax (RSM) (Hinton
and Salakhutdinov, 2009) has demonstrated bet-
ter generalization in log-probability and retrieval,
compared to LDA. Prior works (Iwata et al., 2010;
Pruteanu-Malinici et al., 2010; Saha and Sind-
hwani, 2012; Schein et al., 2016) have investigated
Bayesian modeling of topics in time-stamped doc-
uments. Particularly, Blei and Lafferty (2006)
developed a LDA based dynamic topic model
(DTM) to capture the evolution of topics in a time
sequence collection of documents; however they
do not capture explicitly the topic popularity and
usage of specific terms over time. We propose a
family of probabilistic time series models with dis-
tributional estimators to explicitly model the dy-
namics of the underlying topics, introducing tem-
poral latent topic dependencies (Fig 1, Right).

To model temporal dependencies in high dimen-

1079



u(0) u(1)

bh(1)

bv(1)

h(1)

Wuh

Wuv
Wuu

Wvu

u(2)

h(2)

Wvu

Wvh

bh(2)

bv(2)

Wuu u(T)

h(T)

Wvu

bh(T)

bv(T)

...

...

...

Wvh Wvh

RNN

RSM

w1 w2

Multinomial Visible

Latent Topics

Vn

hw1
w2

Latent Topics

h
w2w1w1

w2

      Observed Softmax Visibles

1 0 1 2 46k=1

k=K
w1 w2 w3

0

0 0 0 0

101
.
.
.

.

.

.

.

.

.

.

.

.
.
.
.

.

.

.

.

.

.

vn vn
(1) vn

(2) vn
(T)

k=2 ...
76 379 487

0 0 18 106

.

.

.

.

.

.

319

 V(1)  V(2)  V(T)

Figure 2: (Left): RSM for a document Vn of Dn=3 words (w). The bottom layer represents the softmax visible
units, that share the same set of weights connected to binary hidden units h. (Middle): Interpretation of RSM
in which Dn softmax units with identical weights are replaced by a single multinomial unit, sampled Dn times.
(Right): Graphical structure of 2-layered RNN-RSM, unfolded in time. Single and double headed arrows represent
deterministic and stochastic-symmetric connections, respectively. V̂(t) and h(t) are binary visible and hidden
layers of RSM for a document collection at time, t. u is RNN hidden layer. k: dictionary index for a word w

sional sequences, such as polyphonic music, the
temporal stack of RBMs (Smolensky, 1986; Hin-
ton, 2002) has been investigated to model com-
plex distributions. The Temporal RBM (Taylor
et al., 2007; Sutskever and Hinton, 2007), Recur-
rent Temporal RBM (RTRBM) (Sutskever et al.,
2009) and RNN-RBM (Boulanger-Lewandowski
et al., 2012) show success in modeling the tem-
poral dependencies in such symbolic sequences.
In addition, RNNs (Gupta et al., 2015a; Vu et al.,
2016a,b; Gupta et al., 2016) have been recognized
for sentence modeling in natural language tasks.
We aspire to build neural dynamic topic model
called RNN-RSM to model document collections
over time and learn temporal topic correlations.

We consider RSM for TSD and introduce the
explicit latent topical dependencies for TED and
TTC tasks. Fig 1 illustrates our motivation, where
temporal ordering in document collection V̂(t) at
each time step t, is modeled by conditioning the
latent topic h(t) on the sequence history of latent
topics h(0), ..., h(t−1), accumulated with temporal
lag. Each RSM discovers latent topics, where the
introduction of a bias term in each RSM via the
time-feedback latent topic dependencies enables
to explicitly model topic evolution and specific
topic term usage over time. The temporal connec-
tions and RSM biases allow to convey topical in-
formation and model relation among the words, in
order to deeply analyze the dynamics of the un-
derlying topics. We demonstrate the applicability
of proposed RNN-RSM by analyzing 19 years of
scientific articles from NLP research.

The contributions in this work are:
(1) Introduce an unsupervised neural dynamic
topic model based on recurrent neural network
and RSMs, named as RNN-RSM to explicitly
model discovered latent topics (evolution) and
word relations (topic characterization) over time.
(2) Demonstrate better generalization (log-
probability and time stamp prediction), topic
interpretation (coherence), evolution and charac-
terization, compared to the state-of-the-art.
(3) It is the first work in dynamic topic modeling
using undirected stochastic graphical models and
deterministic recurrent neural network to model
collections of different-sized documents over
time, within the generative and neural network
framework. The code and data are available at
https://github.com/pgcool/RNN-RSM.

2 The RNN-RSM model

RSM (Fig 2, Left) models are a family of different-
sized Restricted Boltzmann Machines (RBMs)
(Gehler et al., 2006; Xing et al., 2005; Gupta
et al., 2015b,c) that models word counts by sharing
the same parameters with multinomial distribution
over the observable i.e. it can be interpreted as a
single multinomial unit (Fig 2, Middle) sampled as
many times as the document size. This facilitates
in dealing with the documents of different lengths.

The proposed RNN-RSM model (Fig 2, Right)
is a sequence of conditional RSMs1 such that at
any time step t, the RSM’s bias parameters bv(t)

1Notations: Û={Un}Nn=1; U:2D-Matrix; l:vector;
U/l:Upper/lower-case; Scalars in unbold

1080



and bh(t) depend on the output of a determinis-
tic RNN with hidden layer u(t−1) in the previous
time step, t−1. Similar to RNN-RBM (Boulanger-
Lewandowski et al., 2012), we constrain RNN hid-
den units (u(t)) to convey temporal information,
while RSM hidden units (h(t)) to model condi-
tional distributions. Therefore, parameters (bv(t),
bh

(t)) are time-dependent on the sequence history
at time t (via a series of conditional RSMs) de-
noted by Θ(t) ≡ {V̂(τ),u(τ)|τ < t}, that captures
temporal dependencies. The RNN-RSM is defined
by its joint probability distribution:

P (V̂,H) = P ({V̂(t),h(t)}Tt=1) =
T∏

t=1

P (V̂(t),h(t)|Θ(t))

where V̂ = [V̂(1), ...V̂(T )] and H = [h(1), ...h(T )].
Each h(t) ∈ {0, 1}F be a binary stochastic hidden
topic vector with size F and V̂(t) = {V(t)n }N(t)n=1
be a collection of N documents at time step t. Let
V

(t)
n be a K ×D(t)n observed binary matrix of the

nth document in the collection where, D(t)n is the
document size and K is the dictionary size over
all the time steps. The conditional distribution (for
each unit in hidden or visible) in each RSM at time
step, is given by softmax and logistic functions:

P (v
k,(t)
n,i = 1|h(t)n ) =

exp(bv,i
k,(t) +

∑F
j=1 h

(t)
n,jW

k
ij)

∑K
q=1 exp(bv,i

q,(t) +
∑F
j=1 h

(t)
n,jW

q
ij)

P (h
(t)
n,j = 1|V(t)n ) = σ(b

(t)
h,j +

D
(t)
n∑

i=1

K∑

k=1

v
k,(t)
n,i W

k
ij)

where P (vk,(t)n,i = 1|h
(t)
n ) and P (h(t)n,j = 1|V

(t)
n ) are

conditional distributions for ith visible vn,i and jth

hidden unit hn,j for the nth document at t. W kij is
a symmetric interaction term between i that takes
on value k and j. vk,(t)n is sampled D

(t)
n times

with identical weights connected to binary hid-
den units, resulting in multinomial visibles, there-
fore the name Replicated Softmax. The condition-
als across layers are factorized as: P (V(t)n |h(t)n ) =
∏D(t)n
i=1 P (v

(t)
n,i|h

(t)
n ); P (h(t)n |V(t)n ) =

∏
j P (h

(t)
n,j |V

(t)
n ).

Since biases of RSM depend on the output of
RNN at previous time steps, that allows to propa-
gate the estimated gradient at each RSM backward
through time (BPTT). The RSM biases and RNN
hidden state u(t) at each time step t are given by-

bv
(t) = bv+Wuvu

(t−1)

bh
(t) = bh+Wuhu

(t−1) (1)

u(t) = tanh(bu + Wuuu
(t−1) + Wvu

N(t)∑

n=1

v̂(t)n ) (2)

Algorithm 1 Training RNN-RSM with BPTT
Input: Observed visibles, V̂ =
{V̂(0), V̂(1), ..., V̂(t), ..., V̂(T )}
RNN-RSM Parameters: θ = {Wuh, Wvh, Wuv,
Wvu, Wuu, bv, bu, bh, bv(t), bh(t), u(0)}

1: Propagate u(t) in RNN portion of the graph using eq 2.
2: Compute bv(t) and bh(t) using eq 1.
3: Generate negatives V(t)∗ using k-step Gibbs sampling.
4: Estimate the gradient of the cost C w.r.t. parameters of

RSM Wvh, bv(t) and bh(t) using eq 5.
5: Compute gradients (eq 6) w.r.t. RNN connections (Wuh,

Wuv,Wuu,Wvu,u
0) and biases (bv, bh, bu).

6: Goto step 1 until stopping criteria (early stopping or
maximum iterations reached)

where Wuv, Wuh and Wvu are weights con-
necting RNN and RSM portions (Figure 2). bu
is the bias of u and Wuu is the weight between
RNN hidden units. v̂(t)n is a vector of v̂kn (de-
notes the count for the kth word in nth document).∑N(t)

n=1 v̂
(t)
n refers to the sum of observed vectors

across documents at time step t where each docu-
ment is represented as-

v̂(t)n = [{v̂k,(t)n }Kk=1] and v̂k,(t)n =
D

(t)
n∑

i=1

v
k,(t)
n,i (3)

where vk,(t)n,i =1 if visible unit i takes on k
th value.

In each RSM, a separate RBM is created for
each document in the collection at time step t with
D

(t)
n softmax units, where D

(t)
n is the count of

words in the nth document. Consider a document
of D(t)n words, the energy of the state {V(t)n ,h(t)n }
at time step, t is given by-

E(V(t)n ,h
(t)
n ) =−

F∑

j=1

K∑

k=1

h
(t)
n,jW

k
j v̂

k,(t)
n

−
K∑

k=1

v̂k,(t)n b
k
v −D(t)n

F∑

j=1

bh,jh
(t)
n,j

Observe that the bias terms on hidden units are
scaled up by document length to allow hidden
units to stabilize when dealing with different-sized
documents. The corresponding energy-probability
relation in the energy-based model is-

P (V(t)n ) =
1

Z
(t)
n

∑

h
(t)
n

exp(−E(V(t)n ,h(t)n )) (4)

where Z(t)n =
∑

V
(t)
n

∑
h
(t)
n

exp(−E(V(t)n ,h(t)n ))
is the normalization constant. The lower bound on
the log likelihood of the data takes the form:

lnP (V(t)n ) ≥
∑

h(t)

Q(h(t)n |V(t)n ) lnP (V(t)n ,h(t)n ) +H(Q)

= lnP (V(t)n )−KL[Q(h(t)n |V(t)n )||P (h(t)n |V(t)n )]

1081



Year 1996 1997 1998 1999 2000 2001 2002 2003 2004 2005 2006 2007 2008 2009 2010 2011 2012 2013 2014 Total
ACL 58 73 250 83 79 70 177 112 134 134 307 204 214 243 270 349 227 398 331 3713

EMNLP 15 24 15 36 29 21 42 29 58 28 75 132 115 164 125 149 140 206 228 1756
ACL+EMNLP 73 97 265 119 108 91 219 141 192 162 382 336 329 407 395 498 367 604 559 5469

Table 1: Number of papers from ACL and EMNLP conferences over the years

where H(·) is the entropy and Q is the approxi-
mating posterior. Similar to Deep Belief Networks
(Hinton et al., 2006), adding an extra layer im-
proves lower bound on the log probability of data,
we introduce the extra layer via RSM biases that
propagates the prior via RNN connections. The
dependence analogy follows-

E(V
(t)
n ,h

(t)
n ) ∝ 1bv(t) and E(V

(t)
n ,h

(t)
n ) ∝ 1bh(t)

lnP (V
(t)
n ) ∝ 1

E(V
(t)
n ,h

(t)
n )

; lnP (V̂
(t)
n ) ∝ lnP ({V̂τn}τ<t)

Observe that the prior is seen as the determin-
istic hidden representation of latent topics and in-
jected into each hidden state of RSMs, that enables
the likelihood of the data to model complex tem-
poral densities i.e. heteroscedasticity in document
collections (V̂) and temporal topics (H).

Gradient Approximations: The cost in RNN-
RSM is: C =

∑T
t=1Ct ≡

∑T
t=1− lnP (V̂(t))

Due to intractable Z, the gradient of cost at
time step t w.r.t. (with respect to) RSM parame-
ters are approximated by k-step Contrastive Diver-
gence (CD) (Hinton, 2002). The gradient of the
negative log-likelihood of a document collection
{V(t)n }N(t)n=1 w.r.t. RSM parameter Wvh,

1

N (t)

N(t)∑

n=1

∂(− lnP (V(t)n ))
∂Wvh

=
1

N (t)

N(t)∑

n=1

∂F(V
(t)
n )

∂Wvh
− ∂(− lnZ

(t)
n )

∂Wvh

= EPdata [
∂F(V

(t)
n )

∂Wvh
]

︸ ︷︷ ︸
data-dependent expectation

−EPmodel [
∂F(V

(t)
n )

∂Wvh
]

︸ ︷︷ ︸
model’s expectation

' 1
N (t)

N(t)∑

n=1

∂F(V
(t)
n )

∂Wvh
− ∂F(V

(t)∗
n )

∂Wvh

The second term is estimated by negative sam-
ples V(t)∗n obtained from k-step Gibbs chain
starting at V(t)n samples. Pdata(V̂(t),h(t)) =
P (h(t)|V̂(t))Pdata(V̂(t)) and Pdata(V̂(t)) =
1

N(t)

∑N(t)
n δ(V̂

(t) −V(t)n ) is the empirical distri-
bution on the observable. Pmodel(V

(t)∗
n ,h

(t)
n ) is

defined in eq. 4. The free energy F(V(t)n ) is re-
lated to normalized probability of V(t)n as P (V

(t)
n )

≡ exp−F(V(t)n ) /Z(t)n and as follows-

F(V(t)n ) = −
K∑

k=1

v̂k,(t)n b
k
v −

F∑

j=1

log(1+

exp(D(t)n bh,j +

K∑

k=1

v̂k,(t)n W
k
j ))

Gradient approximations w.r.t. RSM parameters,

∂Ct

∂bv
(t)
'

N(t)∑

n=1

v̂(t)∗n − v̂(t)n

∂Ct

∂bh
(t)
'

N(t)∑

n=1

σ(Wvhv̂
(t)∗
n −D(t)n bh(t))

−σ(Wvhv̂(t)n −D(t)n bh(t))

∂Ct
∂Wvh

'
T∑

t=1

N(t)∑

n=1

σ(Wvhv̂
(t)∗
n −D(t)n bh(t))

v̂(t)∗Tn − σ(Wvhv̂(t)n −D(t)n bh(t))v̂(t)Tn
(5)

The estimated gradients w.r.t. RSM biases are
back-propagated via hidden-to-bias parameters
(eq 1) to compute gradients w.r.t. RNN connec-
tions (Wuh, Wuv, Wvu and Wuu) and biases
(bh, bv and bu).

∂C

∂Wuh
=

T∑

t=1

∂Ct

∂bh
(t)

u(t−1)T

∂C

∂Wuv
=

T∑

t=1

∂Ct

∂bv
(t)

u(t−1)T

∂C

∂Wvu
=

T∑

t=1

∂Ct

∂u(t)
u(t)(1− u(t))

N(t)∑

n=1

v̂(t)Tn

∂C

∂bh
=

T∑

t=1

∂Ct

∂bh
(t)

and
∂C

∂bv
=

T∑

t=1

∂Ct

∂bv
(t)

∂C

∂bu
=

T∑

t=1

∂Ct

∂u(t)
u(t)(1− u(t))

∂C

∂Wuu
=

T∑

t=1

∂Ct

∂u(t)
u(t)(1− u(t))u(t−1)T

(6)

1082



Parameter Value(s) Optimal
epochs 1000 1000

CD iterations 15 15
learning rate 0.1, 0.03, 0.001 0.001
hidden size 20, 30, 50 30

Table 2: Hyperparameters for RNN-RSM model

For the single-layer RNN-RSM, the BPTT recur-
rence relation for 0 ≤ t < T is given by-

∂Ct

∂u(t)
= Wuu

∂Ct+1

∂u(t+1)
u(t+1)(1− u(t+1))

+Wuh
∂Ct+1

∂bh
(t+1)

+ Wuv
∂Ct+1

∂bv
(t+1)

where u(0) being a parameter and ∂CT
∂u(T )

= 0.
See Training RNN-RSM with BPTT in Algo 1.

3 Evaluation

3.1 Dataset and Experimental Setup
We use the processed dataset (Gollapalli and Li,
2015), consisting of EMNLP and ACL conference
papers from the year 1996 through 2014 (Table 1).
We combine papers for each year from the two
venues to prepare the document collections over
time. We use ExpandRank (Wan and Xiao, 2008)
to extract top 100 keyphrases for each paper, in-
cluding unigrams and bigrams. We split the bi-
grams to unigrams to create a dictionary of all un-
igrams and bigrams. The dictionary size (K) and
word count are 3390 and 5.19 M, respectively.

We evaluate RNN-RSM against static (RSM,
LDA) and dynamic (DTM) topics models for topic
and keyword evolution in NLP research over time.
Individual 19 different RSM and LDA models are
trained for each year, while DTM2 and RNN-
RSM are trained over the years with 19 time steps,
where paper collections for a year is input at each
time step. RNN-RSM is initialized with RSM
(Wvh, bv, bh) trained for the year 2014.

We use perplexity to choose the number of top-
ics (=30). See Table 2 for hyperparameters.

3.2 Generalization in Dynamic Topic Models
Perplexity: We compute the perplexity on unob-
served documents (V̂(t)) at each time step as

PPL(V̂(t), t) = exp
(
− 1
N (t)

∑N(t)
n=1 logP (V

(t)
n )

∑N(t)
n=1 D

(t)
n

)

2https://radimrehurek.com/gensim/models/dtmmodel.html

model
metric

SumPPL Err mean-COH median-COH TTD

DTM 10.9 8.10 0.1514 0.1379 0.084

RNN-RSM 3.8 7.58 0.1620 0.1552 0.268

Table 3: State-of-the-art Comparison: Generalization
(PPL and Err), Topic Interpretation (COH) and Evolu-
tion (TTD) in DTM and RNN-RSM models

where t is the time step. N (t) is the number of
documents in a collection (V̂(t)) at time t. Better
models have lower perplexity values, suggesting
less uncertainties about the documents. For held-
out documents, we take 10 documents from each
time step i.e. total 190 documents and compute
perplexity for 30 topics. Fig 3d shows the com-
parison of perplexity values for unobserved doc-
uments from DTM and RNN-RSM at each time
step. The SumPPL (Table 3) is the sum of PPL
values for the held-out sets of each time step.

Document Time Stamp Prediction: To fur-
ther assess the dynamic topics models, we split
the document collections at each time step into
80-20% train-test, resulting in 1067 held-out doc-
uments. We predict the time stamp (dating) of a
document by finding the most likely (with the low-
est perplexity) location over the time line. See the
mean absolute error (Err) in year for the held-out
in Table 3. Note, we do not use the time stamp as
observables during training.

3.3 TSD, TED: Topic Evolution over Time

Topic Detection: To extract topics from each
RSM, we compute posterior P (V̂(t)|hj = 1) by
activating a hidden unit and deactivating the rest
in a hidden layer. We extract the top 20 terms
for every 30 topic set from 1996-2014, resulting
in |Q|max = 19× 30× 20 possible topic terms.

Topic Popularity: To determine topic popular-
ity, we selected three popular topics (Sentiment
Analysis, Word Vector and Dependency Parsing)
in NLP research and create a set3 of key-terms
(including unigrams and bigrams) for each topic.
We compute cosine similarity of the key-terms de-
fined for each selected topic and topics discovered
by the topic models over the years. We consider
the discovered topic that is the most similar to the
key-terms in the target topic and plot the simi-
larity values in Figure 3a, 3b and 3b. Observe
that RNN-RSM shows better topic evolution for
the three emerging topics. LDA and RSM show

3topic-terms to be released with code

1083



96 97 98 99 00 01 02 03 04 05 06 07 08 09 10 11 12 13 14

0

0.1

0.2

0.3

0.4

0.5

0.6

0.7

Years

C
os

in
e

Si
m

ila
ri

ty
RNN-RSM

RSM
LDA
DTM

(a) Topic: Sentiment Analysis

96 97 98 99 00 01 02 03 04 05 06 07 08 09 10 11 12 13 14

0

0.1

0.2

0.3

0.4

0.5

0.6

0.7

Years

C
os

in
e

Si
m

ila
ri

ty

RNN-RSM
RSM
LDA
DTM

(b) Topic: Word Vector

96 97 98 99 00 01 02 03 04 05 06 07 08 09 10 11 12 13 14

0

0.1

0.2

0.3

0.4

0.5

0.6

0.7

Years

C
os

in
e

Si
m

ila
ri

ty

RNN-RSM
RSM
LDA
DTM

(c) Topic: Dependency Parsing

96 97 98 99 00 01 02 03 04 05 06 07 08 09 10 11 12 13 14

0

0.2

0.4

0.6

0.8

Years

Pe
rp

le
xi

ty
(P

PL
)

RNN-RSM
DTM

(d) Perplexity on Unobserved

96 97 98 99 00 01 02 03 04 05 06 07 08 09 10 11 12 13 14

14

14.5

15

15.5

16

16.5

17

17.5

18

Years

C
O

H
(m

ea
n)

of
to

pi
cs

:C
O

H
×

10
−
2

RNN-RSM
DTM

(e) COH (mean) Over Time

96 97 98 99 00 01 02 03 04 05 06 07 08 09 10 11 12 13 14

12
12.5

13
13.5

14
14.5

15
15.5

16
16.5

17
17.5

18

Years

C
O

H
(m

ed
ia

n)
of

to
pi

cs
:C

O
H
×

10
−
2

RNN-RSM
DTM

(f) COH (median) Over Time

96
-00

00
-05

05
-10

10
-14

0.5

0.6

0.7

0.8

0.9

1

Years

C
os

in
e

Si
m

ila
ri

ty

Sentiment Analysis
Word Vector

Dependency Parsing

(g) RNN-RSM Adj Topic Sim

96
-00

00
-05

05
-10

10
-14

0.1

0.2

0.3

0.4

0.5

0.6

0.7

0.8

0.9

1

Years

C
os

in
e

Si
m

ila
ri

ty

Sentiment Analysis
Word Vector

Dependency Parsing

(h) DTM Adj Topic Sim

1996 2000 2005 2010
0

0.2

0.4

0.6

0.8

1

Starting Year

C
os

in
e

Si
m

ila
ri

ty

2000
2005
2010
2014

(i) RSM

1996 2000 2005 2010
0

0.2

0.4

0.6

0.8

1

Starting Year

C
os

in
e

Si
m

ila
ri

ty

2000
2005
2010
2014

(j) LDA

1996 2000 2005 2010
0

0.2

0.4

0.6

0.8

1

Starting Year

C
os

in
e

Si
m

ila
ri

ty

2000
2005
2010
2014

(k) DTM

1996 2000 2005 2010
0

0.2

0.4

0.6

0.8

1

Starting Year

C
os

in
e

Si
m

ila
ri

ty

2000
2005
2010
2014

(l) RNN-RSM

Figure 3: (a, b, c): Topic popularity by LDA, RSM, DTM and RNN-RSM over time (d): Perplexity on the
unobserved document collections over time (e, f): Mean and Median Topic Coherence (g, h): Topic Evolution
(i,j,k,l): Topic focus change over time. Adj- Adjacent; Sim- Similarity

topical locality in Figure 3c attributed to no corre-
lation in topic dynamics over time, while in Fig-
ure 3b, DTM does not capture evolution of topic
Word Vector.

Topic Drift (Focus Change): To compute the
topic focus change over the years, we first split
the time period 1996-2014 into five parts:{1996,
2000, 2005, 2010, 2014}. The cosine similarity
scores are computed between the topic sets dis-
covered in a particular year and the years pre-
ceding it in the above set, for example the sim-
ilarity scores between the topic-terms in (1996,
2000), (1996, 2005), (1996, 2010) and (1996,
2014), respectively. Figure 3i, 3j, 3k and 3l
demonstrate that RNN-RSM shows higher conver-
gence in topic focus over the years, compared to
LDA and RSM. In RNN-RSM, the topic similar-
ity is gradually increased over time, however not
in DTM. The higher similarities in the topic sets
indicate that new/existing topics and words do not
appear/disappear over time.

We compute topic-term drift (TTD) to show

the changing topics from initial to final year, as

TTD = 1.0− cosineSimilarity(Q(t),Q(t′))
where Q is the set of all topic-terms for time step
t. Table 3 shows that TTD (where t=1996 and
t′=2014) are 0.268 and 0.084 for RNN-RSM and
DTM, respectively. It suggests that the higher
number of new topic-terms evolved in RNN-RSM,
compared to DTM. Qualitatively, the Table 4
shows the topics observed with the highest and
lowest cosine drifts in DTM and RNN-RSM.

In Figure 3g and 3h, we also illustrate the tem-
poral evolution (drift) in the selected topics by
computing cosine similarity on their adjacent topic
vectors over time. The topic vectors are selected
similarly as in computing topic popularity. We ob-
serve better TED in RNN-RSM than DTM for the
three emerging topics in NLP research. For in-
stance, for the selected topic Word Vector, the red
line in DTM (Fig 3h) shows no drift (for x-axis
00-05, 05-10 and 10-14), suggesting the topic-
terms in the adjacent years are similar and does
not evolve.

1084



Drift Model (year) Topic Terms

0.20
DTM (1996)

document, retrieval, query, documents, information, search, information retrieval, queries, terms,
words, system, results, performance, method, approach

DTM (2014)
document, query, search, documents, queries, information, retrieval, method, results,

information retrieval, research, terms, other, approach, knowledge

0.53
DTM (1996)

semantic, lexical, structure, syntactic, argument, frame, example, lexicon, information, approach,
source, function, figure, verbs, semantic representation

DTM (2014)
semantic, argument, frame, sentence, syntactic, semantic parsing, structure, semantic role,

example, role labeling, language, learning, logical form, system, lexicon

0.20
RNN-RSM (1996)

reordering, statistical machine, translation model, translations, arabic, word align, translation probability, word alignment,
translation system, source word, ibm model, source sentence, english translation, target language, word segmentation

RNN-RSM (2014)
reordering, statistical machine, translation model, translations, arabic, word align, translation probability, word alignment,

translation system, source word, reordering model, bleu score, smt system, english translation, target language

0.53
RNN-RSM (1996)

input, inference, semantic representation, distributional models, logical forms, space model, clustering algorithm, space models,
similar word, frequent word, meaning representation, lexical acquisition, new algorithm, same context, multiple words

RNN-RSM (2014)
input, inference, word vector, word vectors, vector representation, semantic representation, distributional models, semantic space,

space model, semantic parser, vector representations, neural language, logical forms, cosine similarity, clustering algorithm

Table 4: Topics (top 15 words) with the highest and lowest drifts (cosine) observed in DTM and RNN-RSM

3.4 Topic Interpretability
Beyond perplexities, we also compute topic coher-
ence (Chang et al., 2009; Newman et al., 2009;
Das et al., 2015) to determine the meaningful
topics captured. We use the coherence mea-
sure proposed by Aletras and Stevenson (2013)
that retrieves co-occurrence counts for the set of
topic words using Wikipedia as a reference cor-
pus to identify context features (window=5) for
each topic word. Relatedness between topic words
and context features is measured using normalized
pointwise mutual information (NPMI), resulting
in a single vector for every topic word. The coher-
ence (COH) score is computed as the arithmetic
mean of the cosine similarities between all word
pairs. Higher scores imply more coherent topics.
We use Palmetto4 library to estimate coherence.
Quantitative: We compute mean and median co-
herence scores for each time step using the corre-
sponding topics, as shown in Fig 3e and 3f. Ta-
ble 3 shows mean-COH and median-COH scores,
computed by mean and median of scores from
Fig 3e and 3f, respectively. Observe that RNN-
RSM captures topics with higher coherence.
Qualitative: Table 5 shows topics (top-10 words)
with the highest and lowest coherence scores.

3.5 TTC: Trending Keywords over time
We demonstrate the capability of RNN-RSM to
capture word evolution (usage) in topics over
time. We define: keyword-trend and SPAN. The
keyword-trend is the appearance/disappearance of
the keyword in topic-terms detected over time,
while SPAN is the length of the longest sequence
of the keyword appearance in its keyword trend.

4github.com/earthquakesan/palmetto-py

DTM (2001) RNN-RSM (2001) DTM (2012) RNN-RSM (1997)
semantic words discourse parse

frame models relation cluster
argument grammar relations clustering
syntactic trees structure results
structure dependency parsing sentence query
lexical parsers class pos tag

example dependency trees lexical queries
information parsing argument retrieval
annotation parse trees corpus coreference

lexicon dependency parse other logical form
COH: 0.268 0.284 0.064 0.071

Table 5: Topics with the highest and lowest coherence

Let Q̂model = {Q(t)model}Tt=1 be a set of sets5 of
topic-terms discovered by themodel (LDA, RSM,
DTM and RNN-RSM) over different time steps.
Let Q(t) ∈ Q̂model be the topic-terms at time step
t. The keyword-trend for a keyword k is a time-
ordered sequence of 0s and 1s, as

trendk(Q̂) = [find(k,Q(t))]Tt=1

where; find(k,Q(t)) =

{
1 if k ∈ Q(t)
0 otherwise

(7)

And the SPAN (Sk) for the kth keyword is-

Sk(Q̂) = length
(
longestOnesSeq(trendk(Q̂)

)

We compute keyword-trend and SPAN for each
term from the set of some popular terms. We de-
fine average-SPAN for all the topic-terms appear-
ing in the topics discovered over the years,

avg-SPAN(Q̂) =
1

||Q̂||
∑

{k|Q(t)∈Q̂∧k∈Q(t)}

Sk(Q̂)

v̂k

=
1

||Q̂||
∑

{k|Q(t)∈Q̂∧k∈Q(t)}

Sdictk (Q̂)

5a set by bold and set of sets by b̂old

1085



  Textual 
Entailment

96 97 98 99 00 01 02 03 04 05 06 07 08 09 10 11 12 13 14

Sentiment 
  Analysis

 LDA 
model

Dependency
   Parsing

   Latent
Semantics

 Relation
Extraction

    Word
Embedding

   Neural 
Language

  Machine 
Translation

Language
  Model

RNN-RSM RSM LDADTM

Rule-set

Graphical 
   Model

Seed
words

Figure 4: Keyword-trend by RNN-RSM, DTM, RSM,
LDA. Bar: Keyword presence in topics for the year

where ||Q̂|| = |{k|Q(t) ∈ Q̂ ∧ k ∈ Q(t)}|
is the count of unique topic-terms and v̂k =∑T

t=1

∑Dt
j=1 v

k
j,t denotes the count of k

th keyword.
In Figure 4, the keyword-trends indicate emer-

gence (appearance/disappearance) of the selected
popular terms in topics discovered in ACL and
EMNLP papers over time. Observe that RNN-
RSM captures longer SPANs for popular key-
words and better word usage in NLP research. For
example: Word Embedding is one of the top key-
words, appeared locally (Figure 5) in the recent
years. RNN-RSM detects it in the topics from
2010 to 2014, however DTM does not. Similarly,
for Neural Language. However, Machine Trans-
lation and Language Model are globally appeared
in the input document collections over time and
captured in the topics by RNN-RSM and DTM.
We also show keywords (Rule-set and Seed Words)
that disappeared in topics over time.

Higher SPAN suggests that the model is capa-
ble in capturing trending keywords. Table 6 shows
corresponding comparison of SPANs for the 13

96 97 98 99 00 01 02 03 04 05 06 07 08 09 10 11 12 13 14
Years

0

500

1000

1500

2000

2500

3000

3500

4000

Ke
y-

te
rm

 fr
eq

ue
nc

y

relation extraction
word embedding
neural language
machine translation
language model

Figure 5: Key-term frequency in the input over years

Term v̂k
LDA RSM DTM RNN-RSM

Sk S
dict
k Sk S

dict
k Sk S

dict
k Sk S

dict
k

Textual entailment 918 0 .000 1 .001 0 .000 11 .011
Sentiment analysis 1543 6 .004 3 .002 5 .0032 11 0.007
Lda model 392 1 .003 1 .002 0 .000 8 .020
Dependency parsing 3409 9 .003 5 .001 11 .0032 18 .005
Latent semantic 974 1 .001 2 .002 0 .000 18 .018
Relation extraction 1734 4 .002 1 .001 9 .0052 12 .007
Word embedding 534 1 .002 1 .002 0 .000 5 .009
Neural language 121 0 .000 3 .025 0 .000 5 .041
Machine translation 11741 11 .001 7 .001 19 .0016 19 .002
Language model 11768 13 .001 3 .000 19 .0016 19 .002
Graphical model 680 0 .000 1 .001 0 .000 11 .016
Rule set 589 1 .0017 4 .0068 0 .000 2 .0034
Seed words 396 1 .0025 1 .0025 0 .000 4 .0101

avg-SPAN(Q̂) .002 .007 .003 .018
||Q̂model|| 926 2274 335 731

Table 6: SPAN (Sk) for selected terms, avg-SPAN and
set ||Q̂|| by LDA, RSM, DTM and RNN-RSM

selected keywords. The SPAN Sk for each key-
word is computed from Figure 4. Observe that
||Q̂||DTM < ||Q̂||RNN−RSM suggests new topics
and words emerged over time in RNN-RSM, while
higher SPAN values in RNN-RSM suggest better
trends. Figure 6 shows how the word usage, cap-
tured by DTM and RNN-RSM for the topic Word
Vector, changes over 19 years in NLP research.
RNN-RSM captures popular terms Word Embed-
ding and Word Representation emerged in it.

4 Discussion: RNN-RSM vs DTM

Architecture: RNN-RSM treats document’s
stream as high dimensional sequences over time
and models the complex conditional probability
distribution i.e. heteroscedasticity in document
collections and topics over time by a temporal
stack of RSMs (undirected graphical model), con-
ditioned on time-feedback connections using RNN
(Rumelhart et al., 1985). It has two hidden lay-
ers: h (stochastic binary) to capture topical infor-
mation, while u (deterministic) to convey tempo-
ral information via BPTT that models the topic
dependence at a time step t on all the previous
steps τ < t. In contrast, DTM is built upon

1086



1996

           Model
   Language Model
           Words 
        Language
         Probability 

2000

           Model
   Language Model
           Words 
        Language
         Probability 

2005

           Model
   Language Model
           Words 
        Language
         Probability 

2014

           Model
   Language Model
           Words 
        Language
    Neural Network 

1996

     Neural Network
   Language Models
Word Representation 
        Linear Model
         Rule Set 

2000

     Neural Network
   Language Models
Supervised Approach 
        Linear Model
         Rule Set 

2005

     Neural Network
   Language Models
Word Representation
        Joint Model 
Word Representations 
        2014

     Neural Network
   Language Models
   Word Embedding
  Word Embeddings
Word Representation 
         

(a) DTM

(b) RNN-RSM

Figure 6: Word usage for emerging topic Word Vector
over time, captured by DTM and RNN-RSM

LDA (directed model), where Dirichlet distribu-
tion on words is not amenable to sequential mod-
eling, therefore its natural parameters (topic and
topic proportion distributions) for each topic are
chained, instead of latent topics that results in in-
tractable inference in topic detection and chaining.

Topic Dynamics: The introduction of explicit
connection in latent topics in RNN-RSM allow
new topics and words for the underlying topics to
appear or disappear over time by the dynamics of
topic correlations. As discussed, the distinction of
h and u permits the latent topic h(t) to capture new
topics, that may not be captured by h(t−1).

DTM assumes a fixed number of global topics
and models their distribution over time. However,
there is no such assumption in RNN-RSM. We
fixed the topic count in RNN-RSM at each time
step, since Wvh is fixed over time and RSM bi-
ases turn off/on terms in each topic. However,
this is fundamentally different for DTM. E.g. a
unique label be assigned to each of the 30 top-
ics at any time steps t and t′. DTM follows
the sets of topic labels: {TopicLabels(t)}30k=1 =
{TopicLabels(t′)}30k=1, due to eq (1) in Blei and
Lafferty (2006) (discussed in section 5) that limits
DTM to capture new (or local) topics or words ap-
peared over time. It corresponds to the keyword-
trends (section 3.5).

Optimization: The RNN-RSM is based on
Gibbs sampling and BPTT for inference while
DTM employs complex variational methods, since
applying Gibbs sampling is difficult due to the
nonconjugacy of the Gaussian and multinomial
distributions. Thus, easier learning in RNN-RSM.

For all models, approximations are solely used
to compute the likelihood, either using varia-
tional approaches or contrastive divergence; per-
plexity was then computed based on the approxi-
mated likelihood. More specifically, we use vari-
ational approximations to compute the likelihood

for DTM (Blei and Lafferty, 2006). For RSM and
RNN-RSM, the respective likelihoods are approx-
imated using the standard Contrastive Divergence
(CD). While there are substantial differences be-
tween variational approaches and CD, and thus in
the manner the likelihood for different models is
estimated - both approximations work well for the
respective family of models in terms of approxi-
mating the true likelihood. Consequently, perplex-
ities computed based on these approximated like-
lihoods are indeed comparable.

5 Conclusion and Future Work

We have proposed a neural temporal topic model
which we name as RNN-RSM, based on prob-
abilistic undirected graphical topic model RSM
with time-feedback connections via determinis-
tic RNN, to capture temporal relationships in his-
torical documents. The model is the first of its
kind that learns topic dynamics in collections of
different-sized documents over time, within the
generative and neural network framework. The ex-
perimental results have demonstrated that RNN-
RSM shows better generalization (perplexity and
time stamp prediction), topic interpretation (co-
herence) and evolution (popularity and drift) in
scientific articles over time. We also introduced
SPAN to illustrate topic characterization.

In future work, we forsee to investigate learning
dynamics in variable number of topics over time.
It would also be an interesting direction to inves-
tigate the effect of the skewness in the distribu-
tion of papers over all years. Further, we see a po-
tential application of the proposed model in learn-
ing the time-aware i.e. dynamic word embeddings
(Aitchison, 2001; Basile et al., 2014; Bamler and
Mandt, 2017; Rudolph and Blei, 2018; Yao et al.,
2018) in order to capture language evolution over
time, instead of document topics.

Acknowledgments

We thank Sujatha Das Gollapalli for providing
us with the data sets used in the experiments.
We express appreciation for our colleagues Flo-
rian Buettner, Mark Buckley, Stefan Langer, Ulli
Waltinger and Usama Yaseen, and anonymous re-
viewers for their in-depth review comments. This
research was supported by Bundeswirtschaftsmin-
isterium (bmwi.de), grant 01MD15010A (Smart
Data Web) at Siemens AG- CT Machine Intelli-
gence, Munich Germany.

1087



References
Jean Aitchison. 2001. Language change: progress or

decay?. Cambridge University Press.

Nikolaos Aletras and Mark Stevenson. 2013. Evaluat-
ing topic coherence using distributional semantics.
In Proceedings of the 10th International Conference
on Computational Semantics (IWCS). Potsdam, Ger-
many, pages 13–22.

James Allan. 2002. Introduction to topic detection and
tracking. In Topic detection and tracking, Springer,
pages 1–16.

James Allan, Jaime G Carbonell, George Doddington,
Jonathan Yamron, and Yiming Yang. 1998. Topic
detection and tracking pilot study final report. In
Proceedings of the DARPA Broadcast News Tran-
scription and Understanding Workshop. Virginia,
US, pages 194–218.

Robert Bamler and Stephan Mandt. 2017. Dynamic
word embeddings. In Proceedings of the 34th Inter-
national Conference on Machine Learning. Sydney,
Australia, pages 380–389.

Pierpaolo Basile, Annalina Caputo, and Giovanni Se-
meraro. 2014. Analysing word meaning over time
by exploiting temporal random indexing. In Pro-
ceedings of the 1st Italian Conference on Computa-
tional Linguistics (CLiC-it). Pisa University Press,
Pisa, Italy.

David M. Blei and John D. Lafferty. 2006. Dynamic
topic models. In Proceedings of the 23rd Interna-
tional Conference on Machine Learning. Associa-
tion for Computing Machinery, Pittsburgh, Pennsyl-
vania USA, pages 113–120.

David M. Blei, Andrew Y. Ng, and Michael I. Jordan.
2003. Latent dirichlet allocation. Proceedings of
Machine Learning Research 3(Jan):993–1022.

Nicolas Boulanger-Lewandowski, Yoshua Bengio, and
Pascal Vincent. 2012. Modeling temporal depen-
dencies in high-dimensional sequences: Application
to polyphonic music generation and transcription. In
Proceedings of the 29th International Conference on
Machine Learning. Edinburgh, Scotland UK.

Jonathan Chang, Sean Gerrish, Chong Wang, Jordan L.
Boyd-Graber, and David M. Blei. 2009. Reading tea
leaves: How humans interpret topic models. In Ad-
vances in Neural Information Processing Systems.
Curran Associates, Inc., Vancouver, Canada, pages
288–296.

Rajarshi Das, Manzil Zaheer, and Chris Dyer. 2015.
Gaussian lda for topic models with word embed-
dings. In Proceedings of the 53rd Annual Meet-
ing of the Association for Computational Linguistics
and the 7th International Joint Conference on Natu-
ral Language Processing. Association for Computa-
tional Linguistics, Beijing, China, volume 1, pages
795–804.

Peter V. Gehler, Alex D. Holub, and Max Welling.
2006. The rate adapting poisson model for infor-
mation retrieval and object recognition. In Proceed-
ings of the 23rd International Conference on Ma-
chine Learning. Association for Computing Machin-
ery, Pittsburgh, Pennsylvania USA, pages 337–344.

Sujatha Das Gollapalli and Xiaoli Li. 2015. Emnlp ver-
sus acl: Analyzing nlp research over time. In Pro-
ceedings of the Conference on Empirical Methods
in Natural Language Processing. Association for
Computational Linguistics, Lisbon, Portugal, pages
2002–2006.

Pankaj Gupta, Thomas Runkler, Heike Adel, Bernt
Andrassy, Hans-Georg Zimmermann, and Hinrich
Schütze. 2015a. Deep learning methods for the ex-
traction of relations in natural language text. Tech-
nical report, Technical University of Munich, Ger-
many.

Pankaj Gupta, Thomas Runkler, and Bernt Andrassy.
2015b. Keyword learning for classifying require-
ments in tender documents. Technical report, Tech-
nical University of Munich, Germany.

Pankaj Gupta, Hinrich Schütze, and Bernt Andrassy.
2016. Table filling multi-task recurrent neural net-
work for joint entity and relation extraction. In Pro-
ceedings of COLING 2016, the 26th International
Conference on Computational Linguistics: Techni-
cal Papers. Osaka, Japan, pages 2537–2547.

Pankaj Gupta, Udhayaraj Sivalingam, Sebastian
Pölsterl, and Nassir Navab. 2015c. Identifying pa-
tients with diabetes using discriminative restricted
boltzmann machines. Technical report, Technical
University of Munich, Germany.

David Hall, Daniel Jurafsky, and Christopher D. Man-
ning. 2008. Studying the history of ideas using topic
models. In Proceedings of the conference on Empir-
ical Methods in Natural Language Processing. As-
sociation for Computational Linguistics, Honolulu,
Hawaii, pages 363–371.

Geoffrey Hinton and Ruslan Salakhutdinov. 2009.
Replicated softmax: an undirected topic model. In
Advances in Neural Information Processing Systems
22. Curran Associates, Inc., Vancouver, Canada,
pages 1607–1614.

Geoffrey E. Hinton. 2002. Training products of experts
by minimizing contrastive divergence. Neural Com-
putation 14(8):1771–1800.

Geoffrey E. Hinton, Simon Osindero, and Yee-Whye
Teh. 2006. A fast learning algorithm for deep belief
nets. Neural Computation 18(7):1527–1554.

Tomoharu Iwata, Takeshi Yamada, Yasushi Saku-
rai, and Naonori Ueda. 2010. Online multiscale
dynamic topic models. In Proceedings of the
16th ACM SIGKDD International Conference on
Knowledge Discovery and Data Mining. Associ-
ation for Computing Machinery, Washington DC,
USA, pages 663–672.

1088



David Newman, Sarvnaz Karimi, and Lawrence Cave-
don. 2009. External evaluation of topic models.
In Proceedings of the 14th Australasian Document
Computing Symposium. Citeseer, Sydney, Australia.

Iulian Pruteanu-Malinici, Lu Ren, John Paisley, Eric
Wang, and Lawrence Carin. 2010. Hierarchical
bayesian modeling of topics in time-stamped doc-
uments. IEEE transactions on pattern analysis and
machine intelligence 32(6):996–1011.

Maja Rudolph and David Blei. 2018. Dynamic
bernoulli embeddings for language evolution. In
Proceedings of the 27th International Conference on
World Wide Web Companion. Lyon, France.

David E. Rumelhart, Geoffrey E. Hinton, and Ronald J.
Williams. 1985. Learning internal representations
by error propagation. Technical report, California
Univ San Diego La Jolla Inst for Cognitive Science.

Ankan Saha and Vikas Sindhwani. 2012. Learning
evolving and emerging topics in social media: a dy-
namic nmf approach with temporal regularization.
In Proceedings of the 5th ACM International Con-
ference on Web Search and Data Mining. Associa-
tion for Computing Machinery, Seattle, Washington
USA, pages 693–702.

Aaron Schein, Hanna Wallach, and Mingyuan Zhou.
2016. Poisson-gamma dynamical systems. In Ad-
vances in Neural Information Processing Systems
29, Curran Associates, Inc., Barcelona, Spain, pages
5005–5013.

Paul Smolensky. 1986. Information processing in dy-
namical systems: Foundations of harmony theory.
Technical report, Colorado University at Boulder
Department of Computer Science.

Ilya Sutskever and Geoffrey Hinton. 2007. Learn-
ing multilevel distributed representations for high-
dimensional sequences. In Proceedings of the 11th
International Conference on Artificial Intelligence
and Statistics. San Juan, Puerto Rico, pages 548–
555.

Ilya Sutskever, Geoffrey E. Hinton, and Graham W.
Taylor. 2009. The recurrent temporal restricted
boltzmann machine. In Advances in Neural Infor-
mation Processing Systems 22. Curran Associates,
Inc., Vancouver, Canada, pages 1601–1608.

Graham W. Taylor, Geoffrey E. Hinton, and Sam T.
Roweis. 2007. Modeling human motion using bi-
nary latent variables. In Advances in Neural Infor-
mation Processing Systems 20. Curran Associates,
Inc., Vancouver, Canada, pages 1345–1352.

Ngoc Thang Vu, Heike Adel, Pankaj Gupta, and Hin-
rich Schütze. 2016a. Combining recurrent and con-
volutional neural networks for relation classifica-
tion. In Proceedings of the North American Chap-
ter of the Association for Computational Linguis-
tics: Human Language Technologies. Association
for Computational Linguistics, San Diego, Califor-
nia USA, pages 534–539.

Ngoc Thang Vu, Pankaj Gupta, Heike Adel, and
Hinrich Schütze. 2016b. Bi-directional recurrent
neural network with ranking loss for spoken lan-
guage understanding. In Proceedings of the Acous-
tics, Speech and Signal Processing (ICASSP). IEEE,
Shanghai, China, pages 6060–6064.

Xiaojun Wan and Jianguo Xiao. 2008. Single doc-
ument keyphrase extraction using neighborhood
knowledge. In Proceedings of the 23rd National
Conference on Artificial Intelligence. Chicago, Illi-
nois USA, volume 8, pages 855–860.

Xuerui Wang and Andrew McCallum. 2006. Topics
over time: a non-markov continuous-time model of
topical trends. In Proceedings of the 12th ACM
SIGKDD International Conference on Knowledge
Discovery and Data Mining. Association for Com-
puting Machinery, Philadelphia, Pennsylvania USA,
pages 424–433.

Eric P. Xing, Rong Yan, and Alexander G. Haupt-
mann. 2005. Mining associated text and images
with dual-wing harmoniums. In Proceedings of the
21st Conference on Uncertainty in Artificial Intelli-
gence. AUAI Press, Edinburgh, Scotland UK.

Zijun Yao, Yifan Sun, Weicong Ding, Nikhil Rao, and
Hui Xiong. 2018. Dynamic word embeddings for
evolving semantic discovery. In Proceedings of the
11th ACM International Conference on Web Search
and Data Mining (WSDM). Association for Comput-
ing Machinery, Los Angeles, California USA, pages
673–681.

1089


