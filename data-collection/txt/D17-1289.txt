



















































Learning to Predict Charges for Criminal Cases with Legal Basis


Proceedings of the 2017 Conference on Empirical Methods in Natural Language Processing, pages 2727–2736
Copenhagen, Denmark, September 7–11, 2017. c©2017 Association for Computational Linguistics

Learning to Predict Charges for Criminal Cases with Legal Basis

Bingfeng Luo1, Yansong Feng∗1, Jianbo Xu2, Xiang Zhang2 and Dongyan Zhao1
1Institute of Computer Science and Technology, Peking University, China

2Beijing Institute of Big Data Research, China
{bf luo, fengyansong, xujb, xiang.zhang, zhaody}@pku.edu.cn

Abstract

The charge prediction task is to deter-
mine appropriate charges for a given case,
which is helpful for legal assistant systems
where the user input is fact description.
We argue that relevant law articles play an
important role in this task, and therefore
propose an attention-based neural network
method to jointly model the charge pre-
diction task and the relevant article extrac-
tion task in a unified framework. The ex-
perimental results show that, besides pro-
viding legal basis, the relevant articles can
also clearly improve the charge prediction
results, and our full model can effectively
predict appropriate charges for cases with
different expression styles.

1 Introduction

The task of automatic charge prediction is to deter-
mine appropriate charges, such as fraud, larceny
or homicide, for a case by analyzing its textual fact
description. Such techniques are crucial for legal
assistant systems, where users could find similar
cases or possible penalties by describing a case
with their own words. This is helpful for non-legal
professionals to get to know the legal basis of their
interested cases, e.g., cases they or their friends are
involved in, since the massive legal materials and
the lack of knowledge of legal jargons make it hard
for outsiders to do it on their own.

However, predicting appropriate charges based
on fact descriptions is not trivial: (1) The differ-
ences between two charges can be subtle, for ex-
ample, in the context of criminal cases in China,
distinguishing intentional homicide from inten-
tional injury would require to determine, from the
fact description, whether the defendant intended
to kill the victim, or just intended to hurt the vic-

tim, who, unfortunately died of severe injury. (2)
Multiple crimes may be involved in a single case,
which means we need to conduct charge predic-
tion in the multi-label classification paradigm. (3)
Although we can expect an off-the-shelf classifi-
cation model to learn to label a case with corre-
sponding charges through massive training data, it
is always more convincing to make the prediction
with its involved law articles explicitly shown to
the users, as legal basis to support the prediction.
This issue is crucial in countries using the civil law
system, e.g., China (except Hong Kong), where
judgements are made based on statutory laws only.
For example, in Fig. 1, a judgement document in
China always includes relevant law articles (in the
court view part) to support the decision. Even
in countries using the common law system, e.g.,
the United States (except Louisiana), where the
judgement is based mainly on decisions of previ-
ous cases, there are still some statutory laws that
need to be followed when making decisions.

Existing attempts formulate the task of auto-
matic charge prediction as a single-label classi-
fication problem, by either adopting a k-Nearest
Neighbor (KNN) (Liu et al., 2004; Liu and Hsieh,
2006) as the classifier with shallow textual fea-
tures, or manually designing key factors for spe-
cific charges to help text understanding (Lin et al.,
2012), which make those works hard to scale to
more types of charges. There are also works ad-
dressing a related task, finding the law articles that
are involved in a given case. A simple solution
is to convert this multi-label problem into a multi-
class classification task by only considering a fixed
set of article combinations (Liu and Liao, 2005;
Liu and Hsieh, 2006), which can only be applied
to a small set of articles and does not fit to real
applications. Recent improvement takes a two-
step approach by performing a preliminary classi-
fication first and then re-ranking the results with

2727



word-level and article-level features (Liu et al.,
2015). These efforts advance the applications of
machine learning and natural language process-
ing methods into legal assistance services, how-
ever, they are still in an early stage, e.g., relying
on expert knowledge, using relatively simple clas-
sification paradigms, and shallow textual analysis.
More importantly, related tasks, e.g., charge pre-
diction and relevant article extraction, are treated
independently, ignoring the fact that they could
benefit from each other.

Recent advances in neural networks enable us
to jointly model charge prediction and relevant
article extraction in a unified framework, where
the latent correspondence from the fact descrip-
tion about a case to its related law articles and
further to its charges can be explicitly addressed
by a two-stack attention mechanism. Specifi-
cally, we use a sentence-level and a document-
level Bi-directional Gated Recurrent Units (Bi-
GRU) (Bahdanau et al., 2015) with a stack of fact-
side attention components to model the correla-
tions among words and sentences, in order to cap-
ture the whole story as well as important details of
the case. Given the analysis of the fact description,
we accordingly learn a stack of article-side atten-
tion components to attentively select the most sup-
portive law articles from the statutory laws to sup-
port our charge prediction, which is investigated in
the multi-label paradigm.

We evaluate our model in the context of pre-
dicting charges for criminal cases in China. We
collect publicly available judgement documents
from China’s government website, from which we
can automatically extract fact descriptions, rele-
vant law articles and the charges using simple
rules, as shown in Figure 1. Experimental results
show that our neural network method can effec-
tively predict appropriate charges for a given case,
and also provide relevant law articles as legal ba-
sis to support the prediction. Our experiments also
provide quantitive analysis about the effect of fact-
side and article-side information on charge predi-
cion, and confirm that, apart from providing le-
gal basis, relevant articles also contain useful in-
formation that can help to improve charge pre-
diction in the civil law system. We also exam-
ine our model on the news reports about criminal
cases. Although trained on judgement documents,
our model can still achieve promising performance
on news data, showing a reasonable generalization

ability over different expression styles.

2 Related Work

The charge prediction task aims at finding appro-
priate charges based on the facts of a case. Previ-
ous works consider this task in a multi-class clas-
sification framework, which takes the fact descrip-
tion as input and outputs a charge label. (Liu et al.,
2004; Liu and Hsieh, 2006) use KNN to clas-
sify 12 and 6 criminal charges in Taiwan. How-
ever, except for the inferior scalability of the KNN
method, their word-level and phrase-level features
are too shallow to capture sufficient evidence to
distinguish similar charges with subtle differences.
(Lin et al., 2012) propose to make deeper under-
standing of a case by identifying charge-specific
factors that are manually designed for 2 charges.
This method also suffers from the scalability issue
due to the human efforts required to design and an-
notate these factors for each pair of charges. Our
method, however, employs Bi-GRU and a two-
stack attention mechanism to make comprehensive
understanding of a case without relying on explicit
human annotations.

Within the civil law system, there are some
works focusing on identifying applicable law ar-
ticles for a given case. (Liu and Liao, 2005; Liu
and Hsieh, 2006) convert this multi-label problem
into a multi-class classification problem by only
considering a fixed set of article combinations,
which cannot scale well since the number of pos-
sible combinations will grow exponentially when
a larger set of law articles are considered. (Liu
et al., 2015) instead design a scalable two-step
approach by first using Support Vector Machine
(SVM) for preliminary article classification, and
then re-ranking the results using word level fea-
tures and co-occurence tendency among articles.
We also use SVM to extract top k candidate arti-
cles, but further adopt Bi-GRU and article-side at-
tention to better understand the texts and exploring
the correlation among articles. More importantly,
we optimize the article extraction task within our
charge prediction framework, which not only pro-
vides another view to understand the facts, but also
serves as legal basis to support the final decision.

Another related thread of work is to predict the
overall outcome of a case. The target can be which
party will the outcome side with (Aletras et al.,
2016), or whether the present court will affirm or
reverse the decision of a lower court (Katz et al.,

2728



Figure 1: An example judgement document excerpt of a criminal case in our dataset. Names are
anonymized as AA and BB. Rectangulars, ellipses and dashed rectangulars refer to the clauses that
usually indicate the beginning of the facts part, the court view part and the decision part, respectively.
Articles and charges are extracted with regular expressions and a charge list.

2016). Our work differs from them in that, instead
of binary outcome (the latter one also contains an
other class), we step further to focus on the de-
tailed results of a case, i.e., the charges, where the
output may contain multiple labels.

We also share similar spirit with the legal ques-
tion answering task (Kim et al., 2014a), which
aims at answering the yes/no questions in the
Japanese legal bar exams, that we all believe that
relevant law articles are important for decisions in
the civil law system. Different from ours, this task
requires participants to extract relevant Japanese
Civil Code articles first, and then use them to an-
swer the yes/no questions. The former phase is of-
ten treated as an information retrieval task, and the
latter phase is considered as a textual entailment
task (Kim et al., 2014b; Carvalho et al., 2016).

In the field of artificial intelligence and law,
there are also works trying to find relevant cases
given the input query (Raghav et al., 2016; Chen
et al., 2013), which is crutial for decision making
in the common law system. Rather than finding
relevant cases, our work focuses on predicting spe-
cific charges, and we also emphasize the impor-
tance of law articles in decision making, which is
important in the civil law system where the deci-
sions are made based solely on statutory laws.

Our work is also related to the task of docu-
ment classification, but mainly differs in that we
also need to automatically identify applicable law
articles to support and improve the charge predic-
tion. Recently, various neural network (NN) ar-
chitectures such as Convolutional Neural Network
(CNN) (Kim, 2014) and Recurrent Neural Net-
work (RNN) have been used for document em-
bedding, which is further used for classification.
(Tang et al., 2015) propose a two-layer scheme,
RNN or CNN for sentence embedding, and an-

other RNN for document embedding. (Yang et al.,
2016) further use global context vectors to at-
tentively distinguish informative words or sen-
tences from non-informative ones during embed-
ding, which we share similar spirit with. But, we
take a more flexible and descriptive two-stack at-
tention mechanism, one stack for fact embedding,
and the other for article embedding which is dy-
namically generated for each instance according
to the fact-side clues as extra guidance. Another
difference is the multi-label nature of our task,
where, rather than optimizing as multiple binary
classification tasks (Nam et al., 2014), we convert
the multi-label target to label distribution during
training with cross entropy as loss function (Ku-
rata et al., 2016), and use a threshold tuned on val-
idation set to produce the final prediction, which
performs better in our pilot experiments.

3 Data Preparation

Our data are collected from China Judgements
Online1, where the Chinese government has been
publishing judgement documents since 2013. We
randomly choose 50,000 documents for training,
5,000 for validation and 5,000 for testing. To en-
sure enough training data for each charge, we only
classify the charges that appear more than 80 times
in the training data, and treat documents with other
charges as negative data. As for law articles, we
consider those in the Criminal Law of the People’s
Republic of China. The resulting dataset contains
50 distinct charges, 321 distinct articles, averagely
383 words per fact description, 3.81 articles per
case, and 3.56% cases with more than one charges.

An example judgement document is shown in
Figure 1, where we highlight the indicator clauses
that we used to divide a document into three pieces

1http://wenshu.court.gov.cn

2729



and extract fact description, articles, and charges
from each piece, respectively. We use a manually
collected charge list to identify all the charges, and
law articles are extracted by regular expressions2.
The extracted charges and articles are considered
as gold standard charges and articles for the corre-
sponding fact description. We also masked all the
charges in fact descriptions, since although rare,
charge names sometimes may appear in the fact
description part.

Currently, it is hard and expensive to match the
facts related to different defendants with their cor-
responding charges. We therefore only consider
the cases with one defendant, and leave the chal-
lenging multi-defendant cases for future work. Al-
though this simplification may change the real-
world charge distribution, it enables us to automat-
ically build large scale high quality dataset without
relying on annotations from legal practitioners.

4 Our Approach

As depicted in Fig. 2, our approach contains the
following steps: (1) The input fact description is
fed to a document encoder to generate the fact
embedding df , where ufw and ufs are global
word-level and sentence-level context vectors used
to attentively select informative words and sen-
tences. (2) Concurrently, the fact description is
also passed to an article extractor to find top k
relevant law articles. (3) These articles are em-
bedded by another document encoder, and passed
to an article aggregator to attentively select sup-
portive articles, and produce the aggregated article
embedding da. Specifically, three context vectors,
i.e., uaw, uas and uad, are dynamically generated
from df , to produce attention values within the ar-
ticle document encoder and the article aggregator.
(4) Finally, df and da are concatenated and passed
to a softmax classifier to predict the charge distri-
bution for the input case.

4.1 Document Encoder
Intuitively, a sentence is a sequence of words
and a document is a sequence of sentences. The
document embedding problem, therefore, can be
converted to two sequence embedding problems
(Tang et al., 2015; Yang et al., 2016). As shown
in Fig. 3, we can first embed each sentence us-
ing a sentence-level sequence encoder, and then

2The regular expression used to extract law articles:
“第[、零○一二两三四五六七八九十百千0-9]+条(之[一
二两三四五六七八九十])?)”

Figure 2: Overview of Our Model

aggregate them with a document-level sequence
encoder to produce the document embedding d.
While these two encoders can have different ar-
chitectures, we use the same here for simplicity.

Figure 3: Document Encoder Framework

Figure 4: Attentive Sequence Encoder

Bi-GRU Sequence Encoder A challenge in
building a sequence encoder is how to take the
correlation among different elements into consid-
eration. A promising solution is Bi-directional
Gated Recurrent Units (Bi-GRU) (Bahdanau et al.,
2015), which encodes the context of each element
by using a gating mechanism to track the state of
sequence. Specifically, Bi-GRU first uses a for-
ward and a backward GRU (Cho et al., 2014),
which is a kind of RNN, to encode the sequence
in two opposite directions, and then concatenates
the states of both GRUs to form its own states.

Given a sequence [x1,x2, ...,xT ] where xt is

2730



the input embedding of element t, the state of Bi-
GRU at position t is:

ht = [hft,hbt] (1)

where hft and hbt are the states of the forward and
backward GRU at position t. The final sequence
embedding is either the concatenation of hfT and
hb1 or simply the average of ht.

Attentive Sequence Encoder However, directly
using [hfT ,hb1] for sequence encoding often fails
to capture all the information when the sequence
is long, while using the average of ht also has
the drawback of treating useless elements equally
with informative ones. Inspired by (Yang et al.,
2016), we use a context vector to attentively ag-
gregate the elements, but instead of using a global
context vector, we allow the context vector to
be dynamically generated when extra guidance is
available (see Sec. 4.2).

As shown in Fig. 4, given the Bi-GRU state
sequence [h1,h2, ...,hT ], our attentive sequence
encoder calculates a sequence of attention values
[α1, α2, ..., αT ], where αt ∈ [0, 1] and

∑
t αt = 1.

The final sequence embedding g is calculated by:

g =
T∑

t=1

αtht; αt =
exp(tanh(Wht)Tu)∑
t exp(tanh(Wht)Tu)

(2)
where W is a weight matrix, and u is the context
vector to distinguish informative elements from
non-informative ones.

By using this sequence encoder for fact em-
bedding, the fact-side attention module actually
contains two components, i.e., the word-level and
sentence-level, using ufw and ufs as their global
context vectors, respectively.

4.2 Using Law Articles
One of the challenges of using law articles to sup-
port charge prediction lies in the fact that statu-
tory laws contain a large number of articles, which
makes applying complex models to these articles
directly time-consuming, and thus hard to scale.
The multi-label nature of relevant article extrac-
tion also requires a model that can output multi-
ple articles. We thus adopt a two-step approach,
specifically, we first build a fast and easy-to-scale
classifier to filter out a large fraction of irrelevant
articles, and retain the top k articles. Then, we
use neural networks to make comprehensive un-
derstanding of the top k articles, and further use

the article-side attention module to select the most
supportive ones for charge prediction.

Top k Article Extractor We treat the relevant
article extraction task as multiple binary classifica-
tions. Specifically, we build a binary classifier for
each article, focusing on its relevance to the input
case, which results in 321 binary classifiers corre-
sponding to the 321 distinct law articles appearing
in our dataset. When more articles are considered,
we can simply add more binary classifiers accord-
ingly, with the existing classifiers untouched.

Similar to the preliminary classification phase
of (Liu et al., 2015), we also use word-based SVM
as our binary classifier, which is fast and performs
well in text classification (Joachims, 2002; Wang
and Manning, 2012). Specifically, we use bag-of-
words TF-IDF features, chi-square for feature se-
lection and linear kernel for binary classification.

Article Encoder Since each law article may
contain multiple sentences, as shown in Fig. 2,
we also use the document encoder described in
Sec. 4.1 to produce an embedding aj , j ∈ [1, k],
for each article in the top k extracted articles.
While using similar architecture, this article en-
coder differs from the fact encoder that, instead of
using global context vectors, its word-level con-
text vector uaw and sentence-level context vector
uas are dynamically generated for each case ac-
cording to its corresponding fact embedding df :

uaw = Wwdf + bw; uas = Wsdf + bs (3)

where W∗ is the weight matrix and b∗ is the bias.
The context vectors, uaw and uas, are used to pro-
duce the word-level and sentence-level attention
values, respectively. Through the dynamic context
vectors, the fact embedding df actually guides our
model to attend to informative words or sentences
with respect to the facts of each case, rather than
just selecting generally informative ones.

Attentive Article Aggregator The article ag-
gregator aims to find supportive articles for charge
prediction from the top k extractions, and accord-
ingly produce an aggregated article embedding.
Although the order of the top k extracted articles
is not fully reliable, (Vinyals et al., 2016) sug-
gests that it is still beneficial to use a bi-directional
RNN to embed the context of each element even
in a set, where the order does not exist. In our

2731



task, bi-directional RNN can help to utilize the co-
occurrence tendency of relevant articles.

Specifically, we use the attentive sequence en-
coder in Sec. 4.1 to produce the aggregated arti-
cle embedding da. Again, to guide the attention
with fact descriptions, we dynamically generate
the article-level context vector uad by:

uad = Wddf + bd (4)

The attention values produced by the attentive
sequence encoder can be seen as the relevance of
each article to the input case, which can be used to
rank and filter the top k articles. The results can be
shown to users as legal basis for charge prediction.

4.3 The Output

To make the final charge prediction, we first con-
catenate the document embedding df and the ag-
gregated article embedding da, and feed them to
two consecutive full connection layers to generate
a new vector d′, which is then passed to a soft-
max classifier to produce the predicted charge dis-
tribution. We use the validation set to determine a
threshold τ , and consider all the charges with out-
put probability higher than τ as positive predic-
tions. The input to the first full connection layer
can also be only df or da, which means we use
only fact or article to make the prediction.

The loss function for training is cross entropy:

Loss = −
N∑

i=1

L∑
l=1

yillog(oil) (5)

where N is the number of training data, L is the
number of charges, yil and oil are the target and
predicted probability of charge l for case i. The
target charge distribution yi is produced by setting
positive labels to 1mi and negative ones to 0, where
mi is the number of positive labels in case i.

Supervised Article Attention We can also uti-
lize the gold-standard law articles naturally in the
judgement documents to supervise the article at-
tention during training. Specifically, given the top
k articles, we want the article attention distribution
α ∈ Rk to simulate the target article distribution
t ∈ Rk, where tj = 1k′ if article j belongs to the
gold-standard articles and tj = 0 otherwise. Here
k′ is the number of gold-standard articles in the
top k extractions. We, again, use cross entropy,

and the loss function is:

Loss = −
N∑

i=1

(
L∑

l=1

yillog(oil)+β
k∑

j=1

tijlog(αij))

(6)
where β is the weight of the article attention loss.

5 Experiments

5.1 Experimental Setup
We use HanLP3 for Chinese word segmentation
and POS tagging. Word embeddings are trained
using word2vec (Mikolov et al., 2013) on judge-
ment documents, web pages from several legal fo-
rums and Baidu Encyclopedia. The resulting word
embeddings contain 573,353 words, with 100 di-
mension. We randomly initialize a 50-d vector
for each POS tag, which is concatenated with the
word embedding as the final input. Each GRU in
the Bi-GRU is of size 75, the two full connection
layers are of size 200 and 150. The relevant arti-
cle extractor generates top 20 articles, the weight
of the article attention loss (β in Eq. 6) is 0.1, and
prediction threshold τ is 0.4. We use Stochastic
Gradient Descent (SGD) for training, with learn-
ing rate 0.1, and batch size 8.

We compare our full model with two variations:
without article attention supervision and only us-
ing facts for charge prediction. The latter one is
similar to the state-of-art document classification
model (Yang et al., 2016), but adapted to the multi-
label nature of our problem. We also implement
an SVM model, which is effective and scales well
in many fact-description-related tasks in the field
of artificial intelligence and law (Liu et al., 2015;
Aletras et al., 2016). Specifically, the SVM model
takes bag-of-words TF-IDF features as input, and
uses chi-square to select top 2,000 features.

5.2 Charge Prediction Results
The charge distribution is imbalanced, and the top
5 charges take more than 60% of the cases. There-
fore, we evaluate the charge prediction task us-
ing precision, recall and F1, in both micro- and
macro-level. The macro-precision/recall are cal-
culated by averaging the precision and recall of
each charge, and the micro-precision/recall are av-
eraged over each prediction.

As shown in Table 1, the basic SVM fact
model, which only takes fact descriptions as in-
put, indeed proves to be a strong baseline. By

3https://github.com/hankcs/HanLP

2732



Model Precision Recall F1(Micro-/Macro-)
SVM fact 93.94/79.53 77.66/49.54 85.03/61.05
SVM art 82.12/42.90 61.23/39.56 70.15/41.16

SVM fact art 91.77/71.33 72.10/45.85 80.76/55.82
NN fact 91.30/83.32 87.39/74.99 89.31/78.94
NN art 90.09/81.50 86.10/69.62 88.05/75.10

NN fact art 90.79/83.07 88.42/75.73 89.59/79.23
NN fact supv art 91.80/82.44 88.67/78.62 90.21/80.48
SVM fact gold art 98.97/94.58 95.39/83.21 97.15/88.53
NN fact gold art 98.78/95.26 98.24/95.57 98.51/95.42

Table 1: Charge prediction results. Left and
right side of the slash refer to micro and macro
statistics, respectively. gold art refers to using
gold standard articles mentioned in judgements
(marked in blue in Fig. 1), which is the upper
bound for article-related modules.

contrast, our corresponding neural network model
(NN fact), which also only uses facts for pre-
diction, outperforms SVM fact by about 4% in
micro-F1. Since NN fact benefits from the pre-
trained word embeddings, the two-level Bi-GRU
architecture, and the fact-side attention module, it
can attentively recognize informative expressions
from the description and better capture the under-
lying correspondence from fact descriptions to ap-
propriate charges, even when there is less over-
lap in the words used among cases with the same
charge, or when there are limited data (i.e., infre-
quent charges). This may explain that NN mod-
els have more balanced performance over different
charges, leading to more prominent improvements
over SVM ones in macro metrics, which usually
have a strong bias towards frequent charges.

When we use both facts and extracted relevant
law articles (that are admittedly noisy), the SVM
version (SVM fact art) drops by around 5%
than SVM fact, showing that the SVM model
cannot benefit from the extracted, thus noisy,
relevant articles in such a straightforward way.
However, our NN version (NN fact article)
can still learn from the noisy article extractions
through attentively aggregating those extracted ar-
ticles even without direct guidance, thus improves
NN fact by around 0.4%. Furthermore, if we
use the gold standard articles during training as su-
pervision for the article attention (our full model,
NN fact supv art), the results can be fur-
ther improved, achieving 90.21% and 80.48% in
micro- and macro-F1, respectively. The improve-
ments made by using relevant law articles actually
indicates the nature of the civil law system that

judgements are made based on statutory laws.
However, if we only use the extracted rele-

vant articles to make prediction (SVM art and
NN art4), the performance becomes worse. Even
with the proved-helpful attentive aggregator, the
model performs worst among all NN variants
(though still better than SVM fact). This indi-
cates that it is necessary to consider both facts and
relevant law articles for charge prediction, and, the
fact that NN fact outperforms NN art also indi-
cates that although the judgments are made based
on the statutory laws in the civil law system, the
logic employed by the court when making deci-
sions, to some extent, may be implicitly captured
through massive fact-charges paris.

Now the question is: how much improve-
ment can we have if we can make full use of
the relevant law articles within the civil law
system? Let us consider an ideal situation
where we can access both fact descriptions and
gold standard law articles during testing, which
could be considered as an upper bound sce-
nario. The SVM version (SVM fact gold art)
significantly outperforms SVM fact art by
more than 30% in macro-F1. And the
NN version (NN fact gold art) outperforms
NN fact supv art by over 8%. These compar-
isons confirm again that law articles play an im-
portant role for automatic judgement prediction,
but the extracted relevant articles inevitably con-
tain noise, which should be properly handled, e.g.,
using an attentively aggregation mechanism to dis-
till valuable evidence to support charge prediction.

Case Study We study the model outputs and
find certain star-like confusion patterns among the
charges. For example, intentional injury is of-
ten confused with multiple charges like intentional
homicide (when the victim is dead, the difference
is whether the defendant intends to kill or just
hurt the victim) and picking quarrels and provok-
ing troubles (there may also exist injuries here).
These charges usually share some similar fact de-
scriptions, e.g., how the injuries are caused, and
since intentional injury appears more frequently
than the others, SVM fact thus outputs inten-
tional injury in most situations, and fails to distin-
guish these charges. However, by using Bi-GRU
and the attention mechanism, NN fact can at-

4 NN art uses fact embeddings to attentively aggregate
relevant articles, but only use the aggregated article embed-
ding da, without fact embedding df , for charge prediction.

2733



β Prec@1 MAP Charge F1
0 60.94 61.61 89.59/79.23

0.01 81.06 78.00 89.77/79.48
0.1 87.90 83.39 90.21/80.48
0.5 91.44 86.95 89.93/79.67
1 92.66 88.24 89.83/78.66

Table 2: Refined Article Extraction Performance

tend to important details of the facts and signifi-
cantly improves the performance on these charges.
When the direct supervision for articles is avail-
able, NN fact supv art can enhance the inter-
action between certain pairs of fact descriptions
and law articles, which helps to capture the sub-
tle differences among similar charges, and further
improves the performance on these situations.

5.3 Article Extraction Results

We also evaluate our SVM article extractor, which
achieves 77.60%, 88.96%, 94.21% and 96.53% re-
call regarding the top 5, 10, 20 and 30 articles,
respectively. Although simple, the SVM extrac-
tor can obtain over 94% recall for top 20 arti-
cles, which is good enough for further refinement.
However, the micro-F1 of the extractor is only
61.08% in the test set, which will lead to severe
error propagation problem if we use the prediction
results of the extractor directly. Therefore, we de-
sign the article attention mechanism to handle the
noise in the top 20 articles.

Table 2 shows the re-ranking results of our ar-
ticle attention module (column 2-3) and the corre-
sponding charge prediction performances (column
4), under different weights for article attention (β
in Eq. 6). Prec@1 refers to top 1 precision, and
MAP refers to mean average precision. We can see
that, even if there is no supervision over the article
attention (β = 0), our model still has reasonable
performance on re-ranking the k articles. When
the attention supervision is employed, the extrac-
tion quality improves significantly, and keeps in-
creasing as β goes up. However, the charge pre-
diction performance does not always increase with
the article extraction quality, and the best perfor-
mance is achieved when β = 0.1. This is not sur-
prising, since there exists a tradeoff between the
benefits of more accurate article extraction and the
less model capacity left for charge classification
due to the increased emphasis on the article extrac-
tion performance. The promising article extraction
results also confirm the ability of our model to pro-
vide legal basis for the charge prediction.

Model Precision Recall F1
SVM fact 100.00 40.20 57.34
NN fact 87.14 59.80 70.93

NN fact art 87.18 66.67 75.56
NN fact supv art 90.00 70.59 79.12

Table 3: Performance (micro statistics) on News

5.4 Performance on News Data

There are usually clear differences between the ex-
pressions used by legal practitioners and people
without legal background, thus it is important to
see how our model will perform on fact descrip-
tions written by non-legal professionals.

We create a news dataset by asking 3 law school
students to annotate the appropriate charges for
100 social news reports about criminal cases from
two news websites5, with 262 words on average
and 25 distinct charges. The κ value is 0.83, indi-
cating good consistency. The annotators are asked
to have a disscussion to achieve an aggreement on
inconsistent annotations. The results are shown in
Table 3, where we only report micro statistics due
to the relatively small size of the dataset compared
with the number of distinct charges.

We can see that, SVM fact suffers a signifi-
cant drop in F1 on the news data, confirming the
gap between the expressions used by legal prac-
titioners and non-legal professionals, given the
BOW nature of SVM fact. Although SVM fact
cannot generalize well, the patterns learned by
SVM fact are reliable in themselves, leading to
a high precision. It is not surprising that our
NN models also suffer from the expression differ-
ences, but due to the effectiveness of our NN archi-
tecture, with about 10%∼15% less absolute drop
in F1, and NN fact supv art can still achieve
79.12% in F1. For example, the word暴打 (beat
up) is seldom used in judgement documents, mak-
ing it hard for SVM fact to correctly utilize 暴
打 as an indicator for injury related charges, but,
our NN models can associate it with its near-
synonymy殴打 (hit), which is a formal expression
in judgement documents. Furthermore, the clear
improvements from NN fact to NN fact art,
and further to NN fact supv art prove again
the importance of relevant law articles in support-
ing the charge prediction, even in news domain.
The reasonable performance on news data also
shows that our method do have the ability to help
non-legal professionals.

5http://news.cn and http://people.com.cn

2734



6 Conclusion

In this paper, we propose an attention-based neu-
ral network framework that can jointly model the
charge prediction task and the relevant article ex-
traction task, where the weighted relevant articles
can serve as legal basis to support the charge pre-
diction. The experimental results on judgement
documents of criminal cases in China show the ef-
fectiveness of our model on both charge prediction
and relevant article extraction. The comparison of
different variants of our model also indicates the
importance of law articles in making judicial de-
cisions in the civil law system. By experiment-
ing on news data, we show that, although trained
on judgement documents, our model also has rea-
sonable generalization ability on fact descriptions
written by non-legal professionals. While promis-
ing, our model still cannot explicitly handle multi-
defendant cases, and there is also a clear gap be-
tween our model and the upper bound improve-
ment that relevant articles can achieve. We will
leave these challenges for future work.

Acknowledgement

This work is supported by the National High Tech-
nology R&D Program of China (2015AA015403);
the National Natural Science Foundation of China
(61672057, 61672058); KLSTSPI Key Lab. of In-
telligent Press Media Technology.

References
Nikolaos Aletras, Dimitrios Tsarapatsanis, Daniel

Preoţiuc-Pietro, and Vasileios Lampos. 2016. Pre-
dicting judicial decisions of the european court of
human rights: A natural language processing per-
spective. PeerJ Computer Science, 2:e93.

Dzmitry Bahdanau, Kyunghyun Cho, and Yoshua Ben-
gio. 2015. Neural machine translation by jointly
learning to align and translate. In Proceedings of
ICLR.

Danilo S Carvalho, Minh-Tien Nguyen, Tran Xuan
Chien, and Minh Le Nguyen. 2016. Lexical-
morphological modeling for legal text analysis.
arXiv preprint arXiv:1609.00799.

Yen-Liang Chen, Yi-Hung Liu, and Wu-Liang Ho.
2013. A text mining approach to assist the general
public in the retrieval of legal documents. Journal
of the American Society for Information Science and
Technology, 64(2):280–290.

Kyunghyun Cho, Bart van Merrienboer, Caglar Gul-
cehre, Dzmitry Bahdanau, Fethi Bougares, Holger

Schwenk, and Yoshua Bengio. 2014. Learning
phrase representations using rnn encoder–decoder
for statistical machine translation. In Proceedings
of EMNLP, pages 1724–1734.

Thorsten Joachims. 2002. Learning to classify text us-
ing support vector machines: Methods, theory and
algorithms. Kluwer Academic Publishers.

Daniel Martin Katz, II Bommarito, J Michael, and Josh
Blackman. 2016. A general approach for predict-
ing the behavior of the supreme court of the united
states. arXiv preprint arXiv:1612.03473.

Mi-Young Kim, Randy Goebe, and Ken Satoh.
2014a. COLIEE-14. http://webdocs.
cs.ualberta.ca/˜miyoung2/jurisin_
task/index.html.

Mi-Young Kim, Ying Xu, and Randy Goebel. 2014b.
Legal question answering using ranking svm and
syntactic/semantic similarity. In JSAI International
Symposium on Artificial Intelligence, pages 244–
258. Springer.

Yoon Kim. 2014. Convolutional neural networks for
sentence classification. In Proceedings EMNLP,
pages 1746–1751.

Gakuto Kurata, Bing Xiang, and Bowen Zhou. 2016.
Improved neural network-based multi-label classifi-
cation with better initialization leveraging label co-
occurrence. In Proceedings of NAACL-HLT, pages
521–526.

Wan-Chen Lin, Tsung-Ting Kuo, and Tung-Jia Chang.
2012. Exploiting machine learning models for chi-
nese legal documents labeling, case classification,
and sentencing prediction. ROCLING XXIV (2012),
page 140.

Chao-Lin Liu, Cheng-Tsung Chang, and Jim-How Ho.
2004. Case instance generation and refinement for
case-based criminal summary judgments in chinese.
Journal of Information Science and Engineering,
20(4):783–800.

Chao-Lin Liu and Chwen-Dar Hsieh. 2006. Exploring
phrase-based classification of judicial documents for
criminal charges in chinese. In International Sym-
posium on Methodologies for Intelligent Systems,
pages 681–690. Springer.

Chao-Lin Liu and Ting-Ming Liao. 2005. Classifying
criminal charges in chinese for web-based legal ser-
vices. In Asia-Pacific Web Conference, pages 64–75.
Springer.

Yi-Hung Liu, Yen-Liang Chen, and Wu-Liang Ho.
2015. Predicting associated statutes for legal prob-
lems. Information Processing & Management,
51(1):194–211.

Tomas Mikolov, Ilya Sutskever, Kai Chen, Greg S Cor-
rado, and Jeff Dean. 2013. Distributed representa-
tions of words and phrases and their compositional-
ity. In Proceedings of NIPS, pages 3111–3119.

2735



Jinseok Nam, Jungi Kim, Eneldo Loza Mencı́a, Iryna
Gurevych, and Johannes Fürnkranz. 2014. Large-
scale multi-label text classification—revisiting neu-
ral networks. In Joint European Conference on
Machine Learning and Knowledge Discovery in
Databases, pages 437–452. Springer.

K Raghav, P Krishna Reddy, and V Balakista Reddy.
2016. Analyzing the extraction of relevant legal
judgments using paragraph-level and citation in-
formation. AI4J–Artificial Intelligence for Justice,
page 30.

Duyu Tang, Bing Qin, and Ting Liu. 2015. Document
modeling with gated recurrent neural network for
sentiment classification. In Proceedings of the 2015
Conference on Empirical Methods in Natural Lan-
guage Processing, pages 1422–1432.

Oriol Vinyals, Charles Blundell, Tim Lillicrap, Daan
Wierstra, et al. 2016. Matching networks for one
shot learning. In Advances in Neural Information
Processing Systems, pages 3630–3638.

Sida Wang and Christopher D Manning. 2012. Base-
lines and bigrams: Simple, good sentiment and topic
classification. In Proceedings of the 50th Annual
Meeting of the Association for Computational Lin-
guistics: Short Papers-Volume 2, pages 90–94. As-
sociation for Computational Linguistics.

Zichao Yang, Diyi Yang, Chris Dyer, Xiaodong He,
Alex Smola, and Eduard Hovy. 2016. Hierarchi-
cal attention networks for document classification.
In Proceedings of the 2016 Conference of the North
American Chapter of the Association for Computa-
tional Linguistics: Human Language Technologies.

2736


