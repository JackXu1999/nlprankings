








































Word Segmentation of Informal Arabic with Domain Adaptation

Will Monroe, Spence Green, and Christopher D. Manning
Computer Science Department, Stanford University

{wmonroe4,spenceg,manning}@stanford.edu

Abstract
Segmentation of clitics has been shown to
improve accuracy on a variety of Arabic
NLP tasks. However, state-of-the-art Ara-
bic word segmenters are either limited to
formal Modern Standard Arabic, perform-
ing poorly on Arabic text featuring dialectal
vocabulary and grammar, or rely on lin-
guistic knowledge that is hand-tuned for
each dialect. We extend an existing MSA
segmenter with a simple domain adapta-
tion technique and new features in order to
segment informal and dialectal Arabic text.
Experiments show that our system outper-
forms existing systems on broadcast news
and Egyptian dialect, improving segmenta-
tion F1 score on a recently released Egyp-
tian Arabic corpus to 92.09%, compared
to 91.60% for another segmenter designed
specifically for Egyptian Arabic.

1 Introduction
Segmentation of words, clitics, and affixes is essen-
tial for a number of natural language processing
(NLP) applications, including machine translation,
parsing, and speech recognition (Chang et al., 2008;
Tsarfaty, 2006; Kurimo et al., 2006). Segmentation
is a common practice in Arabic NLP due to the lan-
guage’s morphological richness. Specifically, clitic
separation has been shown to improve performance
on Arabic parsing (Green and Manning, 2010) and
Arabic-English machine translation (Habash and
Sadat, 2006). However, the variety of Arabic di-
alects presents challenges in Arabic NLP. Dialectal
Arabic contains non-standard orthography, vocab-
ulary, morphology, and syntax. Tools that depend
on corpora or grammatical properties that only con-
sider formal Modern Standard Arabic (MSA) do
not perform well when confronted with these differ-
ences. The creation of annotated corpora in dialec-
tal Arabic (Maamouri et al., 2006) has promoted

the development of new systems that support dialec-
tal Arabic, but these systems tend to be tailored to
specific dialects and require separate, costly efforts
for Egyptian Arabic, Levantine Arabic, Maghrebi
Arabic, etc.

We present a single clitic segmentation model
that is accurate on both MSA and informal Arabic.
The model is an extension of the character-level
conditional random field (CRF) model of Green
and DeNero (2012). Our work goes beyond theirs
in three aspects. First, we handle two Arabic ortho-
graphic normalization rules that commonly require
rewriting of tokens after segmentation. Second,
we add new features that improve segmentation ac-
curacy. Third, we show that dialectal data can be
handled in the framework of domain adaptation.
Specifically, we show that even simple feature space
augmentation (Daumé, 2007) yields significant im-
provements in task accuracy.

We compare our work to the original Green and
DeNero model and two other Arabic segmenta-
tion systems: the MADA+TOKAN toolkit v. 3.1
(Habash et al., 2009) and its Egyptian dialect vari-
ant, MADA-ARZ v. 0.4 (Habash et al., 2013). We
demonstrate that our system outperforms all three
other systems on broadcast news and Egyptian di-
alect in F1 segmentation score, achieving a 92.09%
F1 score evaluated against a gold standard on Egyp-
tian dialect data, compared to 91.60% for MADA-
ARZ and 88.64% for Green and DeNero. In ad-
dition, our model decodes input an order of mag-
nitude faster than either version of MADA. Like
the Green and DeNero system, but unlike MADA
and MADA-ARZ, our system does not rely on a
morphological analyzer, and can be applied di-
rectly to any dialect for which segmented training
data is available. The source code is available in
the latest public release of the Stanford Word Seg-
menter (http://nlp.stanford.edu/software/
segmenter.shtml).



2 Arabic Word Segmentation Model

A CRF model (Lafferty et al., 2001) defines a distri-
bution p(Y|X; θ), whereX = {x1, . . . , xN} is the
observed input sequence andY = {y1, . . . , yN} is
the sequence of labels we seek to predict. Green
and DeNero use a linear-chain model with X as
the sequence of input characters, and Y∗ chosen
according to the decision rule

Y∗ = argmax
Y

N∑
i=1

θ>φ(X, yi, . . . , yi−3, i) .

where φ is the feature map defined in Section 2.1.
Their model classifies each yi as one of I (contin-
uation of a segment), O (whitespace outside any
segment), B (beginning of a segment), or F (pre-
grouped foreign characters).

Our segmenter expands this label space in order
to handle four Arabic-specific orthographic rules.
In our model, each yi can take on one of the five
values {I,O,B,F,Rew}, where the label Rew in-
dicates one of the following orthographic rewrites:

• if the current character is the Arabic letter È
l, it should start a new segment and be trans-
formed into the definite article �Ë @ al- when
segmented. This type of transformation occurs
after the prefix �Ë li- “to”.

• if the current character is the letter �H t, it is
a continuation but should become the letter �è
h when segmented. Arabic orthography rules
restrict the occurrence of �è h to the word-final
position, writing it instead as �H t whenever
it is followed by a clitic.

• if the current character is the letter ø


y or ø

ā, it is a continuation but should become the
opposite letter. In MSA, certain prepositions
are spelled with a ø ā that becomes ø



ywhen

a clitic follows; in Egyptian dialect, these two
letters are often interchangeable.

2.1 Features
The model of Green and DeNero is a third-order
(i.e., 4-gram) Markov CRF, employing the follow-
ing indicator features:

• a five-character window around the current
character: for each −2 ≤ δ ≤ 2 and 1 ≤ i ≤
N , the triple (xi+δ, δ, yi)

• n-grams consisting of the current character
and up to three preceding characters: for
each 2 ≤ n ≤ 4 and n ≤ i ≤ N ,
the character-sequence/label-sequence pair
(xi−n+1 . . . xi, yi−n+1 . . . yi)

• whether the current character is punctuation

• whether the current character is a digit

• the Unicode block of the current character

• the Unicode character class of the current char-
acter

In addition to these, we include two other types of
features motivated by specific errors the original
system made on Egyptian dialect development data:

• Word length and position within a word: for
each 1 ≤ i ≤ N , the pairs (`, yi), (a, yi), and
(b, yi), where `, a, and b are the total length
of the word containing xi, the number of char-
acters after xi in the word, and the number of
characters before xi in the word, respectively.
Some incorrect segmentations produced by
the original system could be ruled out with the
knowledge of these statistics.

• First and last two characters of the current
word, separately influencing the first two
labels and the last two labels: for each
word consisting of characters xs . . . xt, the tu-
ples (xsxs+1, xt−1xt, ysys+1, “begin”) and
(xsxs+1, xt−1xt, yt−1yt, “end”). This set of
features addresses a particular dialectal Arabic
construction, the negation AÓ mā- + [verb] +

�
 -sh, which requires a matching prefix and
suffix to be segmented simultaneously. This
feature set also allows themodel to take into ac-
count other interactions between the beginning
and end of a word, particularly those involving
the definite article �Ë @ al-.

A notable property of this feature set is that it re-
mains highly dialect-agnostic, even though our ad-
ditional features were chosen in response to errors
made on text in Egyptian dialect. In particular,
it does not depend on the existence of a dialect-
specific lexicon or morphological analyzer. As a
result, we expect this model to perform similarly
well when applied to other Arabic dialects.



F1 (%) TEDEval (%)
Model Training Data ATB BN ARZ ATB BN ARZ

GD ATB 97.42 95.84 74.80 98.01 97.10 79.95
GD +BN+ARZ 96.77 96.28 88.64 97.69 97.27 89.33

+Rew ATB 97.44 95.85 74.43 98.24 97.35 80.14
+Rew +BN 97.50 97.19 77.55 98.27 98.11 82.06
+Rew +BN+ARZ 96.76 96.31 88.57 97.90 97.54 89.76

+Rew+DA +BN+ARZ 97.53 96.99 90.37 98.28 98.00 90.86
+Rew+DA+Feat +BN+ARZ 98.23 97.61 92.10 98.62 98.34 92.05

Table 1: Development set results. GD is the model of Green and DeNero (2012). Rew is support for
orthographic rewrites with the RewAl and RewTa labels. The fifth row shows the strongest baseline,
which is the GD+Rew model trained on the concatenated training sets from all three treebanks. DA is
domain adaptation via feature space augmentation. Feat adds the additional feature templates described
in section 2.1. ATB is the newswire ATB; BN is the Broadcast News treebank; ARZ is the Egyptian
treebank. Best results (bold) are statistically significant (p < 0.001) relative to the strongest baseline.

2.2 Domain adaptation

In this work, we train our model to segment Arabic
text drawn from three domains: newswire, which
consists of formal text in MSA; broadcast news,
which contains scripted, formal MSA as well as
extemporaneous dialogue in a mix of MSA and di-
alect; and discussion forum posts written primarily
in Egyptian dialect.
The approach to domain adaptation we use is

that of feature space augmentation (Daumé, 2007).
Each indicator feature from the model described
in Section 2.1 is replaced by N + 1 features in
the augmented model, where N is the number of
domains from which the data is drawn (here, N =
3). These N + 1 features consist of the original
feature and N “domain-specific” features, one for
each of theN domains, each of which is active only
when both the original feature is present and the
current text comes from its assigned domain.

3 Experiments

We train and evaluate on three corpora: parts 1–3 of
the newswire Arabic Treebank (ATB),1 the Broad-
cast News Arabic Treebank (BN),2 and parts 1–8
of the BOLT Phase 1 Egyptian Arabic Treebank
(ARZ).3 These correspond respectively to the do-
mains in section 2.2. We target the segmentation
scheme used by these corpora (leaving morphologi-
cal affixes and the definite article attached). For the

1LDC2010T13, LDC2011T09, LDC2010T08
2LDC2012T07
3LDC2012E{93,98,89,99,107,125}, LDC2013E{12,21}

ATB, we use the same split as Chiang et al. (2006).
For the other two corpora, we use the procedure
defined by Diab et al. (2013).4 We train the Green
and DeNero model and our improvements using
L-BFGS with L2 regularization.

3.1 Evaluation metrics
We use two evaluation metrics in our experiments.
The first is an F1 precision-recall measure, ignoring
orthographic rewrites. F1 scores provide a more
informative assessment of performance than word-
level or character-level accuracy scores, as over 80%
of tokens in the development sets consist of only
one segment, with an average of one segmentation
every 4.7 tokens (or one every 20.4 characters).
The second metric we use is the TEDEval met-

ric (Tsarfaty et al., 2012). TEDEval was devel-
oped to evaluate joint segmentation and parsing5
in Hebrew, which requires a greater variety of or-
thographic rewrites than those possible in Arabic.
Its edit distance-based scoring algorithm is robust
enough to handle the rewrites produced by both
MADA and our segmenter.
We measure the statistical significance of differ-

ences in these metrics with an approximate ran-
domization test (Yeh, 2000; Padó, 2006), with
R = 10,000 samples.

4Listings for these splits are available at
http://nlp.stanford.edu/software/parser-
arabic-data-splits.shtml.

5In order to evaluate segmentation in isolation, we convert
each segmented sentence from both the model output and
the gold standard to a flat tree with all segments descending
directly from the root.



F1 (%) TEDEval (%)
ATB BN ARZ ATB BN ARZ

MADA 98.01 97.06 76.85 98.64 97.98 84.45
MADA-ARZ 93.65 94.82 91.60 95.32 96.38 93.33
GD+Rew+DA+Feat 98.24 97.39 92.09 98.74 98.29 92.32

Table 2: Test set results. Our final model (last row) is trained on all available data (ATB+BN+ARZ). Font
style indicates significance relative to the next highest model (bold: p < 0.001, bold italic: p < 0.05).

ATB BN ARZ

MADA 705.6 ± 5.1 472.0 ± 0.8 767.8 ± 1.9
MADA-ARZ 784.7 ± 1.6 492.1 ± 4.2 779.0 ± 2.7
GD+Rew+DA+Feat 90.0 ± 1.0 59.5 ± 0.3 72.7 ± 0.2

Table 3: Wallclock time (in seconds) for MADA, MADA-ARZ, and our model for decoding each of the
three development datasets. Means and standard deviations were computed for 10 independent runs.

3.2 Results
Table 1 contains results on the development set
for the model of Green and DeNero and our im-
provements. Using domain adaptation alone helps
performance on two of the three datasets (with a sta-
tistically insignificant decrease on broadcast news),
and our additional features further improve segmen-
tation on all datasets. Table 2 shows the segmenta-
tion scores our model achieves when evaluated on
the three test sets, as well as the results for MADA
and MADA-ARZ. Our segmenter matches or out-
performs both MADA and MADA-ARZ on all met-
rics and datasets except for the TEDEval metric
on the Egyptian dataset, which reflects the greater
variety of orthographic normalizations (Habash et
al., 2012) implemented in MADA-ARZ. In addi-
tion, our segmenter is faster than MADA. Table 3
compares the running times of the three systems.
Our segmenter achieves a 7x or more speedup over
MADA and MADA-ARZ on all datasets.

4 Error Analysis
We randomly sampled 100 of the errors made by our
final model on the ARZ development set; see Table
4. These errors fall into three general categories:

• typographical errors and annotation inconsis-
tencies in the gold data;

• errors that can be fixed with a fuller analysis
of just the problematic token, and therefore
represent a deficiency in the feature set; and

• errors that would require additional context or
sophisticated semantic awareness to fix.

4.1 Typographical errors and annotation
inconsistencies

Of the 100 errors we sampled, 33 are due to typo-
graphical errors or inconsistencies in the gold data.
We classify 7 as typos and 26 as annotation incon-
sistencies, although the distinction between the two
is murky: typos are intentionally preserved in the
treebank data, but segmentation of typos varies de-
pending on how well they can be reconciled with
standard Arabic orthography. Four of the seven
typos are the result of a missing space, such as:

• ú


ÍAJ


�
ÊËAK. Qê�
 yashar-bi-’l-layālı̄ “staysawakeat-

night” (QîD�
 yashar + K. bi- + ú


ÍAJ


�
ÊË @ al-layālı̄)

• 	à

@ A

	
J
�
JÊÔ« ↪amilatnā-↩an “madeus” ( �IÊÔ«

↪amilat + A 	J� -nā + 	à

@ ↩an)

The first example is segmented in the Egyptian tree-
bank but is left unsegmented by our system; the
second is left as a single token in the treebank but is
split into the above three segments by our system.
Of the annotation inconsistencies that do not in-

volve typographical errors, a handful are segmenta-
tion mistakes; in most cases, however, the segmen-
tation is justifiable but arbitrary. In particular, a few
colloquial “filler” expressions are sometimes not
segmented, despite containing Arabic clitics that
are segmented elsewhere in the data. These include
A
	
J
�
K. P rabbinā “[our] Lord” (oath); AÓY

	
J« ↪indamā

“when”/“while”; and ½J

�
Ê

	
g khallı̄k “keep”/“stay”.

Also, tokens containing foreign words are some-
times not segmented, despite carrying clitics. An



Category # of errors

Abnormal gold data 33
Typographical error 7
Annotation inconsistency 26

Need full-token features 36
Need more context 31

Bð wlā 5
A
	
J� -nā: verb/pron 7
ù


� -y: nisba/pron 4

other 15

Table 4: Counts of error categories (out of 100
randomly sampled ARZ development set errors).

example is Q��Óð wamistur “andMister [English]”,
which could be segmented as ð wa- + Q��Ó mistur.

4.2 Features too local
In 36 of the 100 sampled errors, we conjecture that
the presence of the error indicates a shortcoming
of the feature set, resulting in segmentations that
make sense locally but are not plausible given the
full token. Two examples of these are:

• �é�®K
Q¢
	
¯ð wafit.arı̄qah “and in the way” seg-

mented as ð wa- + �é�®K
Q¢
	
¯ fit.arı̄qah (correct

analysis is ð wa- + � 	¯ fi- + �é�®K
Q£ t.arı̄qah).
Q¢

	
¯ ft.r “break”/“breakfast” is a common Ara-

bic root, but the presence of � q should indi-
cate that Q¢ 	¯ ft.r is not the root in this case.

• Ñê�ÒîE
Bð walāyuhimmhum “and it’s not im-
portant to them” segmented as ð wa- + �Ë
li- + �ÑîE
 A� -ayuhimm + Ñê� -hum (correct
analysis is ð wa- + B lā + �ÑîE
 yuhimm +
Ñê� -hum). The 4-character window éK
B lāyh
occurs commonly with a segment boundary
after the È l, but the segment �ÑîE
 A� -ayuhimm
is not a well-formed Arabic word.

4.3 Context-sensitive segmentations and
multiple word senses

In the remaining 31 of 100 errors, external context
is needed. In many of these, it is not clear how to
address the error without sophisticated semantic
reasoning about the surrounding sentence.
One token accounts for five of these errors: Bð

wlā, which in Egyptian dialect can be analyzed as
ð wa- + B lā “and [do/does] not” or as B

�
ð wallā

“or”. In a few cases, either is syntactically correct,
and the meaning must be inferred from context.
Two other ambiguities are a frequent cause of

error and seem to require sophisticated disambigua-
tion. The first is A 	J� -nā, which is both a first person
plural object pronoun and a first person plural past
tense ending. The former is segmented, while the
latter is not. An example of this is the pair A 	JÒÊ«
↪ilmunā “our knowledge” (ÕÎ« ↪ilmu + A 	J� -nā)
versus A 	JÒÊ« ↪alimnā “we knew” (one segment).
The other is ù



� -y, which is both a first person

singular possessive pronoun and the nisba suffix
(“of or related to”); only the former is segmented.
One example of this distinction that appeared in the
development set is the pair ú



«ñ

	
ñÓ mawd. ū↪̄ı “my

topic” (¨ñ 	ñÓ mawd. ū↪+ ù


� -y) versus �ú



«ñ

	
ñÓ

mawd. ū↪̄ıy “topical”, “objective”.

5 Conclusion
In this paper we demonstrate substantial gains on
Arabic clitic segmentation for both formal and
dialectal text using a single model with dialect-
independent features and a simple domain adap-
tation strategy. We present a new Arabic segmenter
which performs better than tools employing sophis-
ticated linguistic analysis, while also giving im-
pressive speed improvements. We evaluated our
segmenter on broadcast news and Egyptian Arabic
due to the current availability of annotated data in
these domains. However, as data for other Arabic di-
alects and genres becomes available, we expect that
the model’s simplicity and the domain adaptation
method we use will allow the system to be applied
to these dialects with minimal effort and without a
loss of performance in the original domains.

Acknowledgments
We thank the three reviewers, Nizar Habash for
helping discover and correct problems in process-
ing the LDC data, and Reut Tsarfaty for valuable
correspondence regarding TEDEval. The second
author is supported by a National Science Foun-
dation Graduate Research Fellowship. This work
was supported by the Defense Advanced Research
Projects Agency (DARPA) Broad Operational Lan-
guage Translation (BOLT) program through IBM.
Any opinions, findings, and conclusions or recom-
mendations expressed in this material are those of
the author(s) and do not necessarily reflect the view
of DARPA or the US government.



References
Pi-Chuan Chang, Michel Galley, and Christopher D.

Manning. 2008. Optimizing Chinese word segmen-
tation for machine translation performance. InWMT.

David Chiang, Mona T. Diab, Nizar Habash, Owen
Rambow, and Safiullah Shareef. 2006. Parsing Ara-
bic dialects. In EACL.

Hal Daumé, III. 2007. Frustratingly easy domain adap-
tation. In ACL.

Mona Diab, Nizar Habash, Owen Rambow, and Ryan
Roth. 2013. LDC Arabic treebanks and associ-
ated corpora: Data divisions manual. CCLS Tech-
nical Report CCLS-13-02, Center for Computational
Learning Systems, Columbia University.

Spence Green and John DeNero. 2012. A class-based
agreement model for generating accurately inflected
translations. In ACL.

Spence Green and Christopher D. Manning. 2010. Bet-
ter Arabic parsing: Baselines, evaluations, and anal-
ysis. In COLING.

Nizar Habash and Fatiha Sadat. 2006. Arabic prepro-
cessing schemes for statistical machine translation.
In NAACL, Short Papers.

Nizar Habash, Owen Rambow, and Ryan Roth. 2009.
MADA+TOKAN: A toolkit for Arabic tokenization,
diacritization, morphological disambiguation, POS
tagging, stemming and lemmatization. In MEDAR.

Nizar Habash, Mona Diab, and Owen Rambow. 2012.
Conventional orthography for dialectal Arabic. In
LREC.

Nizar Habash, Ryan Roth, Owen Rambow, Ramy Es-
kander, and Nadi Tomeh. 2013. Morphological anal-
ysis and disambiguation for dialectal Arabic. InHLT-
NAACL.

Mikko Kurimo, Antti Puurula, Ebru Arisoy, Vesa Si-
ivola, Teemu Hirsimäki, Janne Pylkkönen, Tanel
Alumäe, and Murat Saraclar. 2006. Unlimited
vocabulary speech recognition for agglutinative lan-
guages. In HLT-NAACL.

John D. Lafferty, Andrew McCallum, and Fernando
C. N. Pereira. 2001. Conditional random fields:
Probabilistic models for segmenting and labeling se-
quence data. In ICML.

Mohamed Maamouri, Ann Bies, Tim Buckwalter,
Mona Diab, Nizar Habash, Owen Rambow, and
Dalila Tabessi. 2006. Developing and using a pilot
dialectal Arabic treebank. In LREC.

Sebastian Padó, 2006. User’s guide to sigf:
Significance testing by approximate randomisa-
tion. http://www.nlpado.de/~sebastian/
software/sigf.shtml.

Reut Tsarfaty, Joakim Nivre, and Evelina Andersson.
2012. Joint evaluation of morphological segmenta-
tion and syntactic parsing. In ACL, Short Papers.

Reut Tsarfaty. 2006. Integrated morphological and
syntactic disambiguation for Modern Hebrew. In
COLING-ACL.

Alexander Yeh. 2000. More accurate tests for the statis-
tical significance of result differences. In COLING.


