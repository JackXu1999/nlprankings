



















































Multi-Source Domain Adaptation with Mixture of Experts


Proceedings of the 2018 Conference on Empirical Methods in Natural Language Processing, pages 4694–4703
Brussels, Belgium, October 31 - November 4, 2018. c©2018 Association for Computational Linguistics

4694

Multi-Source Domain Adaptation with Mixture of Experts

Jiang Guo, Darsh J Shah and Regina Barzilay
Computer Science and Artificial Intelligence Laboratory

Massachusetts Institute of Technology
{jiang guo, darsh, regina}@csail.mit.edu

Abstract

We propose a mixture-of-experts approach for
unsupervised domain adaptation from multi-
ple sources. The key idea is to explicitly cap-
ture the relationship between a target exam-
ple and different source domains. This re-
lationship, expressed by a point-to-set met-
ric, determines how to combine predictors
trained on various domains. The metric is
learned in an unsupervised fashion using meta-
training. Experimental results on sentiment
analysis and part-of-speech tagging demon-
strate that our approach consistently outper-
forms multiple baselines and can robustly han-
dle negative transfer.1

1 Introduction

Typical domain adaptation methods are designed
to transfer supervision from a single source do-
main. However, in many practical applications,
we have access to multiple sources. For instance,
in sentiment analysis of product reviews, we can
often transfer from a wide range of product do-
mains, rather than one. This can be particularly
promising for target domains which do not match
any one available source well. For example, the
Kitchen product domain may include reviews on
pans, cookbooks or electronic devices, which can-
not be perfectly aligned to a single source such as
Cookware, Books or Electronics. By intelligently
aggregating distinct and complementary informa-
tion from multiple sources, we may be able to bet-
ter fit the target distribution.

A straightforward approach to utilizing data
from multiple sources is to combine them into a
single domain. This strategy, however, does not
account for distinct relations between individual
sources and the target example. Constructing a

1Our code and data are available at https://github.
com/jiangfeng1124/transfer.

common feature space for this heterogeneous col-
lection may wash out informative characteristics
of individual domains and also lead to negative
transfer (Rosenstein et al., 2005).

Therefore, we propose to explicitly model the
relationship between different source domains and
target examples. We hypothesize that different
source domains are aligned to different sub-spaces
of the target domain. Specifically, in this paper,
we model the domain relationship with a mixture-
of-experts (MoE) approach (Jacobs et al., 1991b).
For each target example, the predicted posterior
is a weighted combination of all the experts’ pre-
dictions. The weights reflect the proximity of the
example to each source domain. Our model learns
this point-to-set metric automatically, without ad-
ditional supervision.

We define the point-to-set metric using Maha-
lanobis distance (Weinberger and Saul, 2009) be-
tween individual examples and a set (i.e. domain),
which are computed within the hidden represen-
tation space of our model. The main challenge
is to learn this metric in an unsupervised setting.
We address it through a meta-training procedure,
in which we create multiple meta-tasks of do-
main adaptation from the source domains. In each
meta-task, we pick one of the source domains as
meta-target, and the rest source domains as meta-
sources. By minimizing the loss using the MoE
predictions on meta-target, we are able to learn
both the model and the metric simultaneously. To
further improve transfer quality, we align the en-
coding space of our target and source domains via
adversarial learning.

We evaluate our approach on sentiment anal-
ysis using the benchmark multi-domain Amazon
reviews dataset (Chen et al., 2012; Ziser and Re-
ichart, 2017) as well as on part-of-speech (POS)
tagging using the SANCL dataset (Petrov and Mc-
Donald, 2012). Experiments show that our ap-

https://github.com/jiangfeng1124/transfer
https://github.com/jiangfeng1124/transfer


4695

proach consistently improves the adaptation re-
sults over the best single-source model and a uni-
fied multi-source model. On average, we achieve
a 7% relative error reduction on the Amazon re-
views dataset, and a 13% on the SANCL dataset.
Importantly, the POS tagging experiments on the
SANCL dataset demonstrate that our method is
able to robustly handle negative transfer from un-
related sources (e.g., Twitter) and utilize it effec-
tively to consistently improve performance.

2 Related Work

Unsupervised domain adaptation Most exist-
ing domain adaptation methods focus on align-
ing the feature space between source and target
domains to reduce the domain shift (Ben-David
et al., 2007; Blitzer et al., 2007, 2006; Pan et al.,
2010). Our approach is close to the representa-
tion learning approaches, such as the denoising
autoencoder (Glorot et al., 2011), the marginal-
ized stacked denoising autoencoders (Chen et al.,
2012), and domain adversarial networks (Tzeng
et al., 2014; Ganin et al., 2016; Zhang et al., 2017;
Shen et al., 2018).

In contrast to these previous approaches, how-
ever, our approach not only learns a shared repre-
sentation space that generalizes well to the target
domain, but also captures informative characteris-
tics of individual source domains.

Multi-Source domain adaptation The main
challenge in using multiple sources for domain
adaptation is in learning domain relations. Some
approaches assume that all source domains are
equally important to the target domain (Li and
Zong, 2008; Luo et al., 2008; Crammer et al.,
2008). Others learn a global domain similarity
metric using labeled data in a supervised fashion
(Yang et al., 2007; Duan et al., 2009; Yu et al.,
2018). Alternatively, Mansour et al. (2009) and
Bhatt et al. (2016) utilize unlabeled data of the tar-
get domain to find a distribution weighted com-
bination of the source domains or to construct
an auxiliary training set of the source domain in-
stances close to the target domain instances. Re-
cent adversarial methods on multi-source domain
adaptation (Zhao et al., 2018; Chen and Cardie,
2018) align source domains to the target domains
globally, without accounting for the distinct im-
portance of each source with respect to a specific
target example.

The work most related to ours is by Kim et al.

!

"#$

"

…

…

FS1 FS2 FSK

↵(x, S1)
↵(x, S2)

...

↵(x, SK)

$

pS1(y|x) pS2(y|x) pSK (y|x)

pmoe(y|x)

E(x)

Figure 1: Architecture of the MoE model. E is the en-
coder which maps an input x to a hidden representation
E(x); FSi is the classifier on the ith source domain; D
is the critic that is only used during adversarial train-
ing. M is the metric learning component, which takes
the encoding of x and source domains (S1:K) as input
and computes α.

(2017). They also model the example-to-domain
relations, but use an attention mechanism. The
attention module is learned using limited train-
ing data from the target domain in a supervised
fashion. Our method, however, works in an unsu-
pervised setting without utilizing any labeled data
from the target domain.

3 Methodology

Problem definition We follow the unsupervised
multi-source domain adaptation setup, assuming
access to labeled training data from K source do-
mains: {Si}Ki=1 where Si , {(xSit , ySit )}

|Si|
t=1, and

(optionally) unlabeled data from a target domain:
T , {xTt }|T |t=1. The goal is to learn a model us-
ing the source domain data, that generalizes well
to the target domain.

Notations For the rest of the paper, we denote
an individual example as x, and a batch of exam-
ples as x. We use superscript to denote the domain
from which an example is sampled, and use sub-
script to denote the index of an example.



4696

3.1 Overview of Our Approach
We model the multiple source domains as a mix-
ture of experts, and learn a point-to-set metric α
to weight the experts for different target examples.
The metric is learned in an unsupervised manner.

Our model consists of four key components
as shown in Figure 1, namely the encoder (E),
classifier (F ), metric (M ) and adversary (D).
We use a typical neural multi-task learning archi-
tecture (Caruana, 1997), with a shared encoder
across all sources, and domain-specific classifiers
({FSi}Ki=1). Each input is first encoded with
E, and then fed to each classifier to obtain the
domain-specific predictions (i.e. posteriors). The
final predictions are then weighted based on the
metric (see Equation 1).

We start by describing the representation learn-
ing component.

3.2 Representation
Our goal is to design an encoder that sup-
ports transfer, while maintaining source domain-
specific information. Depending on different tasks
and datasets, we select appropriate encoders —
MLP, CNN or LSTM (see Section 4.3 for details).

We further add an adversarial module (D) on
top of the encoder, in order to align the target do-
main with the sources. D is typically designed
as a parameterized classifier in domain adversarial
networks (Ganin et al., 2016; Zhang et al., 2017),
which is trained jointly with the encoder and the
classifiers through a minimax game. Here, we in-
stead use Maximum Mean Discrepancy (MMD)
(Gretton et al., 2012) as our adversary. This dis-
tance metric measures the discrepancy between
two distributions explicitly in a non-parametric
manner, greatly simplifying the training procedure
compared to domain adversarial networks which
use an additional domain classifier module.

3.3 Mixture of Experts
Given an example x from the target domain, we
model its posterior distribution as a mixture of
posteriors produced by models trained on differ-
ent source domain data:

pmoe(y|x) =
K∑
i=1

α(x,Si) · pSi(y|x)

=

K∑
i=1

α(x,Si) · softmax
(
WSiE(x)

)
(1)

pSi is the posterior distribution produced by the
ith source classifier FSi (the ith expert). WSi is
the output layer weights of FSi , α is a parame-
terized metric function that measures how much
confidence we put in the specific source expert for
a given example x.2 To derive α, we first define a
point-to-set Mahalanobis distance metric between
an example x and a set S:

d(x,S) =
((
E(x)− µS

)>
MS

(
E(x)− µS

)) 12
where µS is the mean encoding of S. In its origi-
nal form, the matrix MS played the role of the in-
verse covariance matrix. However, computing the
inverse of the covariance matrix is both time con-
suming and numerically unstable in practice. Here
we allow M to denote any positive semi-definite
matrix which is to be estimated during training
(Weinberger and Saul, 2009). To guarantee the
positive semi-definiteness of M, we approximate
M with M = UU>, where U ∈ Rh×r, h is
the dimension of hidden representations and r is
a hyper-parameter controlling the rank of M.

Based on the distance metric, we further de-
rive a confidence score e(x,Si) = f

(
d(x,Si)

)
for each specific expert. The final metric values
α(x,Si) are then obtained by normalizing these
confidence scores:

α(x,Si) =
exp

(
e(x,Si)

)∑K
j=1 exp

(
e(x,Sj)

) (2)
Here, we explain our design of e(x,S) on two

tasks, respectively binary classification and se-
quence tagging, which are also used for evaluation
in this paper (Section 4).

Binary classification The point-to-set Maha-
lanobis distance metric measures the distance be-
tween an example x and the mean encoding of S,
i.e. µS , while taking into account the (pseudo) co-
variance of S. In binary classification, however,
the mean vector µS is likely to be located near the
decision boundary, particularly under a balanced

2In traditional MoE frameworks (Jacobs et al., 1991a,b;
Shazeer et al., 2017), α is commonly realized as a “gating
network”, which produces a normalized weight vector that
determines the combination of experts depending solely on
the input example x. However, simple gating networks do
not yield promising results in our scenario. We hypothesize
that both the input instance and the underlying domain distri-
bution should be captured for determining the credit assign-
ment.



4697

setting. Therefore, a small d(x,S) actually im-
plies lower confidence of the corresponding clas-
sifier, which is counter-intuitive. To this end, we
instead define the confidence e(x,S) as the differ-
ence between the distances from x to each cate-
gory of S:

e(x,S) =
∣∣d(x,S+)− d(x,S−)∣∣

Here S+ and S− stand for the positive space and
negative space of S respectively. Consequently, if
x is either far away from S (i.e., x is not in the
manifold of S) or near the classification boundary,
we will get a small e(x,S) indicating a low con-
fidence to the corresponding prediction. On the
contrary, if x is much closer to a specific category
of S than other categories, the classifier will get a
higher confidence.

Sequence tagging For sequence tagging tasks
(e.g., POS tagging), we compute the distance met-
ric at the token level.3 Unlike in binary classifi-
cation, the decision boundary here is more com-
plicated, and the label distribution is typically im-
balanced. The mean vector µS is unlikely to be
located at the decision boundary. So we directly
use the (reverse) distance as the confidence value
for each token x:

e(x,S) = −d(x,S)
3.4 Training
Since we do not have annotated data in the target
domain, we have to learn our model in an unsu-
pervised fashion. Inspired by the recent progress
on few-shot learning with metric-based models
such as matching network (Vinyals et al., 2016; Yu
et al., 2018) and prototypical network (Snell et al.,
2017), we propose the following meta-training ap-
proach. Given K source domains, each source
domain will be considered as a target, referred
to as meta-target, with the rest of the source do-
mains as meta-sources. This way, we obtain K
(meta-sources, meta-target) training pairs for do-
main adaptation. Then, we apply our MoE formu-
lation over these meta-training pairs to learn the
metric. At testing time, the metric will be applied
to all the K source domains for each example in
the target domain.

We optimize two main objectives: the MoE ob-
jective and the multi-task learning (MTL) objec-
tive.

3This actually makes it a multi-class classification prob-
lem with respect to every token of a sequence.

MoE objective For each example in each meta-
target domain, we compute its MoE posterior us-
ing the corresponding meta-sources. Therefore,
we get the following MoE loss over the entire
multi-source training data:

Lmoe = −
K∑
i=1

|Si|∑
j=1

log pmoe(y
Si
j |xSij )

= −
K∑
i=1

|Si|∑
j=1

log

K∑
l=1,l 6=i

α(x,Sl) · pSl(ySij |xSij )

(3)

Note that α is normalized over the meta-sources
for each meta-target, rather than over all the K
sources.

MTL objective For each meta-target, we fur-
ther optimize a supervised cross-entropy loss us-
ing the corresponding labels. All supervised ob-
jectives are optimized jointly with the encoder be-
ing shared, resulting in the following multi-task
learning objective:

Lmtl = −
K∑
i=1

|Si|∑
j=1

log pSi(ySij |xSij ) (4)

Adversary-augmented MoE We use MMD
(Gretton et al., 2012) as the adversary to minimize
the divergence between the marginal distribution
of target domain and source domains. Specifi-
cally, at each training epoch, given the K batches
{xS1 ,xS2 , ...,xSK} from all the source domains,
we sample a batch (unlabeled) xT from our target
domain, and minimize the MMD:

Ladv = MMD2(xS1 ∪ ... ∪ xSK ,xT ) (5)

where

MMD(DS ,DT ) =∥∥∥∥∥∥ 1|DS |
∑
xs∈DS

φ
(
E(xs)

)
− 1|DT |

∑
xt∈DT

φ
(
E(xt)

)∥∥∥∥∥∥
H

measures the discrepancy between DS and DT
based on Reproducing Kernel Hilbert Space
(RKHS). φ(·) is the feature map induced by a uni-
versal kernel. We follow Bousmalis et al. (2016)
and use a linear combination of multiple RBF ker-
nels: κ(hi,hj) = Σn exp(− 12σn ‖hi − hj‖

2).



4698

Algorithm 1 Training Procedure
1: Input: multi-source domain data S = {Si}Ki=1, target domain data T
2: Hyper-parameters: mini-batch size m, coefficients for different losses: λ, γ and η
3: repeat
4: Sample K source mini-batches {(xSi ,ySi)}Ki=1 from S and a target mini-batch xT from T
5: Lmtl,Lmoe,Ladv,Rh ← 0
6: for t = 1 to K do
7: Set meta-target as T meta , S̃t , (xSt ,ySt)
8: Set meta-sources as Smeta , {S̃i}Ki=1,i 6=t, where S̃i , (xSi ,ySi)
9: Compute cross-entropy loss over T meta, and add to Lmtl

10: Compute Mahalanobis metric α(x,S ′) for each x ∈ T meta and S ′ ∈ Smeta . Eq. (2)
11: Compute MoE loss over (Smeta, T meta) using α, and add to Lmoe
12: Compute entropy of α over S , and add toRh
13: end for
14: Compute MMD between xT and ∪Ki=1xSi , and add to Ladv . Eq. (5)
15: Update parameters via backpropagating gradients of the total loss L . Eq. (7)
16: until converge

Entropy regularization In the meta-training
process, for each example x in meta-target, we
know exactly from which source x is sampled.
This provides additional insight that the α distri-
bution is skewed, which can be utilized as a soft
constraint. Therefore, we propose to regularize the
entropy of the α distribution over all the sources,
rather than meta-sources:4

H
(
α(x, ·)

)
= −

K∑
l=1

α(x,Sl) · logα(x,Sl)

Rh =
K∑
i=1

|Si|∑
j=1

H
(
α(xSij , ·)

)
(6)

Joint learning Our final objective is the
weighted combination of each individual compo-
nent loss:

L = λ · Lmoe + (1− λ) · Lmtl
+ γ · Ladv
+ η · Rh

(7)

where λ controls the balance of the MoE loss and
MTL loss. γ is set to 0 in non-adversarial set-
ting when unlabeled data from the target domain

4Alternatively, we can directly exploit this supervision
and minimize the KL divergence of the α distribution and
its ground truth one-hot distribution. In practice, however,
we found it beneficial to allow examples from one domain
to be attended to different sources. This observation may be
attributed to the fact that each domain indeed consists of mul-
tiple latent sub-domains.

is not provided. Additionally, it would be straight-
forward to add an MoE loss for labeled data in the
target domain if they are available, thus extending
our framework to a setting where we have few-
shot target annotations. The training process is
shown in Algorithm 1.

4 Experimental Setup

4.1 Task and Dataset
Sentiment classification We use the multi-
domain Amazon reviews dataset (Blitzer et al.,
2007), one of the standard benchmark datasets for
domain adaptation. It contains reviews on four do-
mains: Books (B), DVDs (D), Electronics (E), and
Kitchen appliances (K).

We follow the specific experiment settings pro-
posed by Chen et al. (2012) (CHEN12) and Ziser
and Reichart (2017) (ZISER17).

1. In CHEN12, each domain has 2,000 labeled
examples for training (1,000 positive and
1,000 negative), and the target test set has
3,000 to 6,000 examples.5

2. In ZISER17, each domain also has 2,000
labeled examples (1,000 positive and
1,000 negative), sampled differently from
CHEN12.

For each dataset, we conduct experiments by se-
lecting the target domain in a round-robin fash-

5This dataset has been processed by the author to TF-IDF
representations, using the 5,000 most frequent unigram and
bigram features, thus word order information is not available.



4699

ion. Following the protocol in previous work,
we use cross-validation over source domains for
hyper-parameters selection for each adaptation
task (Zhao et al., 2018). When training with an
adversary, we use the 2,000 examples training set
of the target domain as the unlabeled data in both
the settings. In ZISER17, the same data is also
used for test, resulting in a transductive setting.

Part-of-Speech tagging We further consider a
sequence tagging task, where the metric is com-
puted over the token-level encodings and multi-
class predictions are made at the token (word)
level. We use the SANCL dataset (Petrov and
McDonald, 2012) which contains part-of-speech
(POS) tagging annotations in 5 web domains:
Emails, Weblogs, Answers, Newsgroups, and Re-
views. Among these, Newsgroups, Reviews, and
Answers have both a validation and a test set, and
are used as target domains. The test set from We-
blogs and Emails are used as individual source do-
mains. The tagging is performed using the Univer-
sal POS tagset (Petrov et al., 2012). We also use
Twitter (Liu et al., 2018) as an additional training
source. Since it differs substantially from other
sources and the target domain, we can assess our
model’s ability to handle negative transfer. We
consider 750 sentences from each SANCL source
domain for training, and up to 2,250 sentences
from the Twitter dataset to magnify the negative
transfer. The validation set in the standard split of
each target domain is used for hyper-parameters
selection and early-stopping in our experiments.

4.2 Baselines
We verify the efficacy of our approach (MoE) in
non-adversarial and adversarial settings respec-
tively. In both settings, we compare our approach
against the following two baselines:

• best-SS: the best single-source adaptation
model among all the sources.

• uni-MS: the unified multi-source adaptation
model, which is trained using the combina-
tion of all the source domain data with single-
source transfer methods. uni-MS is a com-
mon and strong baseline for multi-source do-
main adaptation (Zhao et al., 2018).

For the rest of the paper, we name the adversar-
ial counterpart of the models as ∗-A.

In the adversarial setting on CHEN12, in addi-
tion to best-SS and uni-MS with adversarial loss,

we further compare with the following two sys-
tems that also utilize unlabeled data from target
domain.

• mSDA: the marginalized stacked denoising
autoencoder (Chen et al., 2012). mSDA
outperforms prior deep learning and shallow
learning approaches such as structural corre-
spondence learning (Blitzer et al., 2007) and
denoising autoencoder (Glorot et al., 2011).

• MDAN: the multi-source domain adversarial
network (Zhao et al., 2018). MDAN gives the
state-of-the-art performance for multi-source
domain adaptation on CHEN12. It general-
izes the domain adversarial network to multi-
ple source domain adaptation by selectively
backpropagating the domain discrimination
loss according to domain classification error.

4.3 Implementation Details

For CHEN12, since the dataset is in TF-IDF for-
mat and the word ordering information is not
available, we use a multilayer perceptron (MLP)
with an input layer of 5,000 dimensions and one
hidden layer of 500 dimensions as our encoder.
For ZISER17, we instead use a convolutional neu-
ral network (CNN) encoder with a combination of
kernel widths 3 and 5 (Kim, 2014), each with one
hidden layer of size 150, which are then concate-
nated to a 300 dimension representation.6

For the POS tagging encoder, we use a hier-
archical bidirectional LSTM (BiLSTM) network,
which contains a character-level BiLSTM for gen-
erating individual word representations, followed
by a word-level BiLSTM that generates contextu-
alized word representations.

For MMD, we follow Bousmalis et al. (2016)
and use 19 RBF kernels with the standard devia-
tion parameters ranging from 10−6 to 106.7

All the models were trained using Adam with
weight decay. Learning rate is set to 10−4 for
CHEN12 and 10−3 for ZISER17 and POS tagging.
We use mini-batches of 32 samples from each do-
main. We tune the coefficients λ, η for each adap-
tation task. γ is set to 1 for all experiments.

6Note that with a more extensive architecture search, we
are likely to achieve better results. This, however, is not the
main focus of this work.

7Detailed values are presented in the supplementary ma-
terial in Bousmalis et al. (2016).



4700

SETTING
NON-ADVERSARIAL ADVERSARIAL

best-SS uni-MS MoE mSDA† MDAN best-SS-A uni-MS-A MoE-A

D,E,K–B 75.43 78.43 79.42 76.98 78.63 80.07 80.25 80.87
B,E,K–D 81.23 82.49 83.35 78.61 80.65 82.68 83.30 83.99
B,D,K–E 85.51 84.79∗ 86.62 81.98 85.34 86.32 85.96∗ 86.38
B,D,E–K 86.83 87.00 87.96 84.33 86.26 87.05 87.55 88.06

Average 82.25 83.18 84.34 80.48 82.72 84.03 84.27 84.83

Table 1: Multi-Source domain adaptation accuracy on Amazon dataset of CHEN12. ∗ indicates negative transfer,
i.e., the unified multi-source model underperforms the best single-source model. mSDA† is not an adversarial
approach, but utilizes unlabeled data from target domain.

SETTING
NON-ADVERSARIAL ADVERSARIAL

best-SS uni-MS MoE best-SS-A uni-MS-A MoE-A

D,E,K–B 85.35 87.00 87.55 86.85 87.55 87.85
B,E,K–D 85.25 86.80 87.85 86.00 87.40 87.65
B,D,K–E 86.80 88.30 89.20 88.90 89.35 89.50
B,D,E–K 88.90 89.65 90.45 89.95 90.35 90.45

Average 86.58 87.94 88.76 87.93 88.66 88.86

Table 2: Multi-Source domain adaptation accuracy on Amazon dataset of ZISER17.

5 Results

5.1 Sentiment Analysis on Amazon Reviews
We report our results on the Amazon reviews
datasets in Table 1 (CHEN12) and Table 2
(ZISER17). Our approach (MoE) consistently
achieves the best performance across different set-
tings and tasks.

The results clearly demonstrate the value of us-
ing multiple sources. In most cases, even a uni-
fied model performs better than the oracle best sin-
gle source. By smartly combining all the sources,
our model outperforms the unified model signif-
icantly. One exception is the task of “B,D,K-
E” in CHEN12, where the unified multi-source
model doesn’t improve over the best single source
model, constituting a negative transfer scenario.
However, even in this scenario, our approach still
performs significantly better, demonstrating its ro-
bustness in handling negative transfer.

Impact of adversarial adaptation We achieve
consistent improvements over the baseline sys-
tems with the addition of the adversarial loss.
In most cases, MoE also achieves additional im-
provement (e.g., 79.42% vs. 80.87% in “D,E,K-
B”). We notice that in some cases, e.g., “B,D,K-
E” in CHEN12 and “B,E,K-D” in ZISER17, the

adversarial loss doesn’t help MoE. This might be
attributed to the fact that by aligning the target dis-
tribution with the source domains, the representa-
tion space becomes more compact, thus making
it more difficult to capture source domain-specific
characteristics and increasing the difficulty of met-
ric learning in MoE.

Analysis on the metric (α) Figure 2 visualizes
the distribution of α values, learned by our model
in different tasks, across the source domains. The
visualization is based on 200 examples for each
domain randomly sampled from the correspond-
ing test set. From the heatmap we can see that for
a specific target domain, different examples may
have different α distributions. Moreover, for most
examples, the α distribution is skewed, indicating
that our model draws on a few most informative
source domains.

Figure 3 exemplifies the above point. For in-
stance, the first review about “charger” and “bat-
tery” is closer to the Electronics source domain.
This relation is successfully captured by the α dis-
tribution produced by our model.

We further investigate the impact of entropy
regularization over α. Table 3 summarizes the ab-
lation test results of entropy regularization (η = 0)



4701

K

E

D

B

Chen12
   B                D                E                K    

Ziser17
   B                D                E                K    

0.0

0.2

0.4

0.6

0.8

1.0

Figure 2: α distributions across source domains for randomly selected 200 examples in each target domain of
CHEN12 (left) and ZISER17 (right). Columns represent target domains and rows represent sources.

• … i did n't keep it on the charger for 24 hours ( not realizing that this is a problem ) 
and now the battery only works for 10 minutes at a time …

B D E

0.958

0.0230.019

B D E
0.0150.078

0.907

B D E

0.070.129

0.801

• best 2 quart pot in the world . … with the glorious one pot meals cookbook . it has 
wonderful recipies , and the pot works wonderful .

• great kit however the book that comes with the kit needs some work . the photos in 
the book are not accurate with the descriptions . …

Figure 3: Examples of Kitchen (K) reviews in ZISER17 and their α distribution over Books (B), DVDs (D) and
Electronics (E). The manually highlighted words indicate the specific Kitchen products described in the reviews.

SETTING
CHEN12 (w/o Rh) ZISER17 (w/o Rh)

MoE MoE-A MoE MoE-A

D,E,K–B -0.70 -0.51 -0.75 -0.60
B,E,K–D -0.67 -0.41 -0.05 -1.20
B,D,K–E -1.93 -0.44 -0.70 -0.60
B,D,E–K -0.49 -0.09 -0.50 +0.30

Table 3: Ablation test of entropy regularizer on
CHEN12 and ZISER17 (decrease in accuracy).

on CHEN12 and ZISER17. It shows that entropy
regularization benefits our model under both non-
adversarial and adversarial settings.

5.2 Part-of-Speech Tagging
Table 4 summarizes our results on POS tagging.
Again, our approach consistently achieves the best
performance across different settings and tasks.
Adding Twitter as a source leads to a drop in per-
formance for the unified model, as a result of neg-
ative transfer. Our method, however, robustly han-
dles negative transfer and manages to even benefit
from this additional source.

Impact of negative transfer Table 5 presents
the α distribution learned by the metric, on aver-
age for all tokens of the target domain. As we can
see, our model (MoE-A) effectively learns to de-

crease the weights on Twitter, demonstrating again
its ability to alleviate negative transfer.

We further study the impact of this outlier
source by varying the amount of Twitter data used
during training. We gradually increase the number
of Twitter instances by 750. As shown in Table 6,
the increase of the Twitter data does not benefit the
unified multi-source model (uni-MS-A), and even
amplifies negative transfer for the Answers and Re-
views domains. However, the performance of our
MoE (MoE-A) model stays stable, consistently in-
creasing with more Twitter, showing robustness in
handling negative transfer.

6 Conclusion

In this paper, we propose a novel mixture-of-
experts (MoE) approach for unsupervised do-
main adaptation from multiple diverse source do-
mains. We model the domain relations through
a point-to-set distance metric, and introduce a
meta-training mechanism to learn this metric. Ex-
perimental results on sentiment classification and
part-of-speech tagging demonstrate that our ap-
proach consistently outperforms various baselines
and can robustly handle negative transfer. The ef-
fectiveness of our approach suggests its potential
application to a broader range of domain adapta-
tion tasks in NLP and other areas.



4702

TARGET
NON-ADVERSARIAL ADVERSARIAL

best-SS uni-MS uni-MS† MoE best-SS-A uni-MS-A uni-MS-A† MoE-A

Answers 88.16 88.89 89.88 90.26 88.47 89.04 89.99 89.80
Reviews 87.15 87.45 88.91 89.37 87.26 87.90 88.94 89.40
Newsgroup 89.14 89.95 90.70 91.03 89.54 90.20 90.70 91.13

Average 88.15 88.76 89.83 90.22 88.42 89.05 89.88 90.11

Table 4: POS tagging results on SANCL data. Source domains include Web, Emails, Twitter. † indicates the unified
multi-source model trained without Twitter, thus can be considered as the oracle performance (upper-bound) of
uni-MS.

TARGET
SOURCE

Twitter Emails Web

Answers 0.0527 0.5941 0.3531
Reviews 0.0640 0.5250 0.4100
Newsgroup 0.0538 0.4960 0.4490

Table 5: Distribution of the metric values α on average
for all tokens in the SANCL test set.

TARGET
MODEL
(∗-A)

# Twitter instances

750 1,500 2,250

Answers
uni-MS 89.04 89.04 86.93
MoE 89.80 91.22 90.90

Reviews
uni-MS 87.90 87.45 87.68
MoE 89.40 90.23 91.14

Newsgroup
uni-MS 90.20 90.10 90.21
MoE 91.13 91.32 91.82

Table 6: POS tagging accuracy with varying amounts
of Twitter data in training.

Acknowledgments

We thank MIT NLP group and the anonymous re-
viewers for their helpful comments. We also thank
Shiyu Chang and Mo Yu for insightful discussions
on metric learning. This work is supported by the
MIT-IBM Watson AI Lab. Any opinions, find-
ings, conclusions, or recommendations expressed
in this paper are those of the authors, and do not
necessarily reflect the views of the funding orga-
nizations.

References
Shai Ben-David, John Blitzer, Koby Crammer, and Fer-

nando Pereira. 2007. Analysis of representations for

domain adaptation. In Advances in neural informa-
tion processing systems. pages 137–144.

Himanshu Sharad Bhatt, Manjira Sinha, and Shourya
Roy. 2016. Cross-domain text classification with
multiple domains and disparate label sets. In Pro-
ceedings of the 54th ACL. pages 1641–1650.

John Blitzer, Mark Dredze, and Fernando Pereira.
2007. Biographies, bollywood, boom-boxes and
blenders: Domain adaptation for sentiment classi-
fication. In Proceedings of the 45th ACL. Prague,
Czech Republic, pages 440–447.

John Blitzer, Ryan McDonald, and Fernando Pereira.
2006. Domain adaptation with structural correspon-
dence learning. In EMNLP. pages 120–128.

Konstantinos Bousmalis, George Trigeorgis, Nathan
Silberman, Dilip Krishnan, and Dumitru Erhan.
2016. Domain separation networks. In Advances in
Neural Information Processing Systems. pages 343–
351.

Rich Caruana. 1997. Multitask learning. Machine
learning 28(1):41–75.

Minmin Chen, Zhixiang Xu, Kilian Q. Weinberger,
and Fei Sha. 2012. Marginalized denoising autoen-
coders for domain adaptation. In Proceedings of the
29th International Conference on Machine Learn-
ing. Omnipress, USA, pages 1627–1634.

Xilun Chen and Claire Cardie. 2018. Multinomial ad-
versarial networks for multi-domain text classifica-
tion. arXiv preprint arXiv:1802.05694 .

Koby Crammer, Michael Kearns, and Jennifer Wort-
man. 2008. Learning from multiple sources. Jour-
nal of Machine Learning Research 9(Aug):1757–
1774.

Lixin Duan, Ivor W Tsang, Dong Xu, and Tat-Seng
Chua. 2009. Domain adaptation from multiple
sources via auxiliary classifiers. In Proceedings
of the 26th International Conference on Machine
Learning. ACM, pages 289–296.

Yaroslav Ganin, Evgeniya Ustinova, Hana Ajakan,
Pascal Germain, Hugo Larochelle, François Lavi-
olette, Mario Marchand, and Victor Lempitsky.



4703

2016. Domain-adversarial training of neural net-
works. The Journal of Machine Learning Research
17(1):2096–2030.

Xavier Glorot, Antoine Bordes, and Yoshua Bengio.
2011. Domain adaptation for large-scale sentiment
classification: A deep learning approach. In Pro-
ceedings of the 28th international conference on ma-
chine learning. pages 513–520.

Arthur Gretton, Karsten M Borgwardt, Malte J Rasch,
Bernhard Schölkopf, and Alexander Smola. 2012. A
kernel two-sample test. Journal of Machine Learn-
ing Research 13(Mar):723–773.

Robert A Jacobs, Michael I Jordan, and Andrew G
Barto. 1991a. Task decomposition through compe-
tition in a modular connectionist architecture: The
what and where vision tasks. Cognitive science
15(2):219–250.

Robert A Jacobs, Michael I Jordan, Steven J Nowlan,
and Geoffrey E Hinton. 1991b. Adaptive mixtures
of local experts. Neural computation 3(1):79–87.

Yoon Kim. 2014. Convolutional neural networks for
sentence classification. In Proceedings of EMNLP.
Doha, Qatar, pages 1746–1751.

Young-Bum Kim, Karl Stratos, and Dongchan Kim.
2017. Domain attention with an ensemble of ex-
perts. In Proceedings of the 55th ACL. volume 1,
pages 643–653.

Shoushan Li and Chengqing Zong. 2008. Multi-
domain sentiment classification. In Proceedings of
the 46th ACL. pages 257–260.

Yijia Liu, Yi Zhu, Wanxiang Che, Bing Qin, Nathan
Schneider, and Noah A Smith. 2018. Parsing tweets
into universal dependencies. In NAACL.

Ping Luo, Fuzhen Zhuang, Hui Xiong, Yuhong Xiong,
and Qing He. 2008. Transfer learning from multi-
ple source domains via consensus regularization. In
Proceedings of the 17th ACM conference on Infor-
mation and knowledge management. ACM, pages
103–112.

Yishay Mansour, Mehryar Mohri, and Afshin Ros-
tamizadeh. 2009. Domain adaptation with multiple
sources. In Advances in neural information process-
ing systems. pages 1041–1048.

Sinno Jialin Pan, Xiaochuan Ni, Jian-Tao Sun, Qiang
Yang, and Zheng Chen. 2010. Cross-domain senti-
ment classification via spectral feature alignment. In
Proceedings of the 19th international conference on
World wide web. ACM, pages 751–760.

Slav Petrov, Dipanjan Das, and Ryan McDonald. 2012.
A universal part-of-speech tagset. In Proceedings
of the Eighth International Conference on Language
Resources and Evaluation (LREC-2012). Istanbul,
Turkey, pages 2089–2096.

Slav Petrov and Ryan McDonald. 2012. Overview of
the 2012 shared task on parsing the web. In Notes
of the first workshop on syntactic analysis of non-
canonical language (sancl). volume 59.

Michael T Rosenstein, Zvika Marx, Leslie Pack Kael-
bling, and Thomas G Dietterich. 2005. To transfer
or not to transfer. In NIPS 2005 workshop on trans-
fer learning. volume 898, pages 1–4.

Noam Shazeer, Azalia Mirhoseini, Krzysztof Maziarz,
Andy Davis, Quoc Le, Geoffrey Hinton, and Jeff
Dean. 2017. Outrageously large neural networks:
The sparsely-gated mixture-of-experts layer. arXiv
preprint arXiv:1701.06538 .

Jian Shen, Yanru Qu, Weinan Zhang, and Yong Yu.
2018. Wasserstein distance guided representation
learning for domain adaptation. In AAAI.

Jake Snell, Kevin Swersky, and Richard Zemel. 2017.
Prototypical networks for few-shot learning. In Ad-
vances in Neural Information Processing Systems.
pages 4080–4090.

Eric Tzeng, Judy Hoffman, Ning Zhang, Kate Saenko,
and Trevor Darrell. 2014. Deep domain confusion:
Maximizing for domain invariance. arXiv preprint
arXiv:1412.3474 .

Oriol Vinyals, Charles Blundell, Tim Lillicrap, Daan
Wierstra, et al. 2016. Matching networks for one
shot learning. In Advances in Neural Information
Processing Systems. pages 3630–3638.

Kilian Q Weinberger and Lawrence K Saul. 2009. Dis-
tance metric learning for large margin nearest neigh-
bor classification. Journal of Machine Learning Re-
search 10(Feb):207–244.

Jun Yang, Rong Yan, and Alexander G Hauptmann.
2007. Cross-domain video concept detection using
adaptive svms. In Proceedings of the 15th ACM in-
ternational conference on Multimedia. ACM, pages
188–197.

Mo Yu, Xiaoxiao Guo, Jinfeng Yi, Shiyu Chang, Pot-
dar Saloni, Yu Cheng, Gerald Tesauro, Haoyu Wang,
and Bowen Zhou. 2018. Diverse few-shot text clas-
sification with multiple metrics. In NAACL.

Yuan Zhang, Regina Barzilay, and Tommi Jaakkola.
2017. Aspect-augmented adversarial networks for
domain adaptation. Transactions of the Association
for Computational Linguistics 5:515–528.

Han Zhao, Shanghang Zhang, Guanhang Wu, Geof-
frey J Gordon, et al. 2018. Multiple source domain
adaptation with adversarial learning. ICLR Work-
shop .

Yftah Ziser and Roi Reichart. 2017. Neural structural
correspondence learning for domain adaptation. In
Proceedings of the 21st Conference on Computa-
tional Natural Language Learning (CoNLL 2017).
Vancouver, Canada, pages 400–410.


