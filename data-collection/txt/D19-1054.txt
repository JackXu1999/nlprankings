



















































Select and Attend: Towards Controllable Content Selection in Text Generation


Proceedings of the 2019 Conference on Empirical Methods in Natural Language Processing
and the 9th International Joint Conference on Natural Language Processing, pages 579–590,
Hong Kong, China, November 3–7, 2019. c©2019 Association for Computational Linguistics

579

Select and Attend: Towards Controllable Content Selection in Text
Generation

Xiaoyu Shen1,2∗, Jun Suzuki3,4, Kentaro Inui3,4, Hui Su5
Dietrich Klakow1 and Satoshi Sekine4

1Spoken Language Systems (LSV), Saarland University, Germany
2Max Planck Institute for Informatics, Saarland Informatics Campus, Germany

3Tohoku University 4RIKEN AIP, Japan
5Pattern Recognition Center, Wechat AI, Tencent Inc, China

Abstract

Many text generation tasks naturally contain
two steps: content selection and surface real-
ization. Current neural encoder-decoder mod-
els conflate both steps into a black-box archi-
tecture. As a result, the content to be de-
scribed in the text cannot be explicitly con-
trolled. This paper tackles this problem by de-
coupling content selection from the decoder.
The decoupled content selection is human in-
terpretable, whose value can be manually ma-
nipulated to control the content of generated
text. The model can be trained end-to-end
without human annotations by maximizing a
lower bound of the marginal likelihood. We
further propose an effective way to trade-off
between performance and controllability with
a single adjustable hyperparameter. In both
data-to-text and headline generation tasks, our
model achieves promising results, paving the
way for controllable content selection in text
generation.1

1 Introduction

Many text generation tasks, e.g., data-to-text, sum-
marization and image captioning, can be naturally
divided into two steps: content selection and sur-
face realization. The generations are supposed to
have two levels of diversity: (1) content-level di-
versity reflecting multiple possibilities of content
selection (what to say) and (2) surface-level di-
versity reflecting the linguistic variations of ver-
balizing the selected contents (how to say) (Re-
iter and Dale, 2000; Nema et al., 2017). Recent
neural network models handle these tasks with the
encoder-decoder (Enc-Dec) framework (Sutskever
et al., 2014; Bahdanau et al., 2015), which simul-
taneously performs selecting and verbalizing in a

∗Work mostly done while at RIKEN AIP. Correspon-
dence to xshen@mpi-inf.mpg.de

1The source code is available on https://github.
com/chin-gyou/controllable-selection

Source Sentence: The sri lankan government on Wednes-
day announced the closure of government schools with im-
mediate effect as a military campaign against tamil sepa-
ratists escalated in the north of the country.

Selected : sri lankan, closure, schools
Text: sri lanka closes schools .
Selected : sri lankan, Wednesday, closure, schools
Text: sri lanka closes schools on Wednesday.

Selected : sri lankan, closure, schools, military campaign
Text: sri lanka shuts down schools amid war fears.

Selected : sri lankan, announced, closure, schools
Text: sri lanka declares closure of schools.

Table 1: Headline generation examples from our
model. We can generate text describing various con-
tents by sampling different content selections. The se-
lected source word and its corresponding realizations
in the text are highlighted with the same color.

black-box way. Therefore, both levels of diver-
sity are entangled within the generation. This en-
tanglement, however, sacrifices the controllability
and interpretability, making it diffifcult to specify
the content to be conveyed in the generated text
(Qin et al., 2018; Wiseman et al., 2018).

With this in mind, this paper proposes decou-
pling content selection from the Enc-Dec frame-
work to allow finer-grained control over the gen-
eration. Table 1 shows an example. We can easily
modify the content selection to generate text with
various focuses, or sample multiple paraphrases
by fixing the content selection.

Though there has been much work dealing with
content selection for the Enc-Dec, none of them is
able to address the above concerns properly. Cur-
rent methods can be categorized into the following
three classes and have different limits:

1. Bottom-up: Train a separate content selec-
tor to constrain the attention to source to-
kens (Gehrmann et al., 2018), but the separate
training of selector/generator might lead to

https://github.com/chin-gyou/controllable-selection
https://github.com/chin-gyou/controllable-selection


580

discrepancy when integrating them together.

2. Soft-select: Learn a soft mask to filter use-
less information (Mei et al., 2016; Zhou et al.,
2017). However, the mask is deterministic
without any probabilistic variations, making
it hard to model the content-level diversity.

3. Reinforce-select: Train the selector with
reinforcement learning (Chen and Bansal,
2018), which has high training variance and
low diversity on content selection.

In this paper, we treat the content selection as la-
tent variables and train with amortized variational
inference (Kingma and Welling, 2014; Mnih and
Gregor, 2014). This provides a lower training vari-
ance than Reinforce-select. The selector and gen-
erator are co-trained within the same objective, the
generations are thus more faithful to the selected
contents than Bottom-up methods. Our model
is task-agnostic, end-to-end trainable and can be
seamlessly inserted into any encoder-decoder ar-
chitecture. On both the data-to-text and head-
line generation task, we show our model outper-
forms others regarding content-level diversity and
controllability while maintaining comparable per-
formance. The performance/controllability trade-
off can be effectively adjusted by adjusting a sin-
gle hyperparameter in the training stage, which
constrains an upper bound of the conditional mu-
tual information (CMI) between the selector and
generated text (Alemi et al., 2018; Zhao et al.,
2018). A higher CMI leads to stronger control-
lability with a bit more risk of text disfluency.

In summary, our contributions are (1) systemat-
ically studying the problem of controllable content
selection for Enc-Dec text generation, (2) propos-
ing a task-agnostic training framework achieving
promising results and (3) introducing an effective
way to achieve the trade-off between performance
and controllability.

2 Background and Notation

Let X,Y denote a source-target pair. X is a se-
quence of x1, x2, . . . , xn and can be either some
structured data or unstructured text/image depend-
ing on the task. Y corresponds to y1, y2, . . . , ym
which is a text description of X . The goal of text
generation is to learn a distribution p(Y |X) to au-
tomatically generate proper text.

The Enc-Dec architecture handles this task with
an encode-attend-decode process (Bahdanau et al.,

2015; Xu et al., 2015). The encoder first encodes
each xi into a vector hi. At each time step, the
decoder pays attentions to some source embed-
dings and outputs the probability of the next token
by p(yt|y1:t−1, Ct). Ct is a weighted average of
source embeddings:

Ct =
∑
i

αt,ihi

αt,i =
ef(hi,dt)∑
j e

f(hj ,dt)

(1)

dt is the hidden state of the decoder at time step
t. f is a score function to compute the similarity
between hi and dt (Luong et al., 2015).

3 Content Selection

Our goal is to decouple the content selection
from the decoder by introducing an extra con-
tent selector. We hope the content-level diversity
can be fully captured by the content selector for
a more interpretable and controllable generation
process. Following Gehrmann et al. (2018); Yu
et al. (2018), we define content selection as a se-
quence labeling task. Let β1, β2, . . . , βn denote a
sequence of binary selection masks. βi = 1 if hi
is selected and 0 otherwise. βi is assumed to be
independent from each other and is sampled from
a bernoulli distribution B(γi)2. γi is the bernoulli
parameter, which we estimate using a two-layer
feedforward network on top of the source encoder.
Text are generated by first sampling β from B(γ)
to decide which content to cover, then decode with
the conditional distribution pθ(Y |X,β). The text
is expected to faithfully convey all selected con-
tents and drop unselected ones. Fig. 1 depicts
this generation process. Note that the selection
is based on the token-level context-aware embed-
dings h and will maintain information from the
surrounding contexts. It encourages the decoder
to stay faithful to the original information instead
of simply fabricating random sentences by con-
necting the selected tokens. For each source-target
pair, the ground-truth selection mask is unknown,
so training is challenging. In the following ses-
sion, we discuss several training possibilities and
introduce the proposed model in detail.

2Devlin et al. (2019) have shown that excellent perfor-
mance can be obtained by assuming such conditionally inde-
pendence given a sufficiently expressive representation of x,
though modelling a richer inter-label dependency is for sure
beneficial (Lei et al., 2016; Nallapati et al., 2017).



581

Figure 1: Model will select contents based on B(γ),
then decode with pθ(Y |X,β). Source-text pairs are
available for training, but the ground-truth content se-
lection for each pair is unknown.

3.1 Bottom-up

The most intuitive way is training the content se-
lector to target some heuristically extracted con-
tents. For example, we can train the selector to se-
lect overlapped words between the source and tar-
get (Gehrmann et al., 2018), sentences with higher
tf-idf scores (Li et al., 2018) or identified image
objects that appear in the caption (Wang et al.,
2017). A standard encoder-decoder model is in-
dependently trained. In the testing stage, the pre-
diction of the content selector is used to hard-mask
the attention vector to guide the text generation in
a bottom-up way. Though easy to train, Bottom-
up generation has the following two problems:
(1) The heuristically extracted contents might be
coarse and cannot reflect the variety of human lan-
guages and (2) The selector and decoder are inde-
pendently trained towards different objectives thus
might not adapt to each other well.
β as Latent Variable: Another way is to treat

β as a latent variable and co-train selector and gen-
erator by maximizing the marginal data likelihood.
By doing so, the selector has the potential to auto-
matically explore optimal selecting strategies best
fit for the corresponding generator component.

With this in mind. We design pθ(Y |X,β) by
changing the original decoder in the following
way: (1) We initialize hidden states of the decoder
from a mean pooling over selected contents to in-
form the decoder which contents to cover and (2)
Unselected contents will be prohibited from being
attended to:

d0 = MLP

 1
n

 n∑
i

βihi




αt,i =
ef(hi,dt)βi∑
j e

f(hj ,dt)βj

(2)

d0 is the initial decoder hidden state and MLP de-
notes multi-layer-perceptron.

Since computing the exact marginal likeli-
hood logEβ∼B(γ)pθ(Y |X,β) requires enumerat-
ing over all possible combinations of β (complex-
ity O(2n)), we need some way to efficiently esti-
mate the likelihood.

3.2 Soft-Select
Soft-select falls back on a deterministic network to
output the likelihood function’s first-order Taylor
series approximation expanded at Eβ∼B(γ)β:

logEβ∼B(γ)pθ(Y |X,β)
≈ log[pθ(Y |X, γ) + Eβ∼B(γ)(β − γ)p′θ(Y |X, γ)]
= log pθ(Y |X, γ)

By moving the expectation into the decoding func-
tion, we can deterministically compute the like-
lihood by setting βi = γi, reducing complex-
ity to O(1). Each attention weight will first be
“soft-masked” by γ before being passed to the
decoder. soft-select is fully differentiable and
can be easily trained by gradient descent. How-
ever, this soft-approximation is normally inaccu-
rate, especially when B(γ) has a high entropy,
which is common in one-to-many text generation
tasks. The gap between logEβ∼B(γ)pθ(Y |X,β)
and log pθ(Y |X,Eβ∼B(γ)) will be large (Ma et al.,
2017; Deng et al., 2018). In practice, this would
lead to unrealistic generations when sampling β
from the deterministically trained distribution.

3.3 Reinforce-Select
Reinforce-select (RS) (Ling and Rush, 2017; Chen
and Bansal, 2018) utilizes reinforcement learning
to approximate the marginal likelihood. Specifi-
cally, it is trained to maximize a lower bound of
the likelihood by applying the Jensen inequalily:

logEβ∼B(γ)pθ(Y |X,β) ≥ Eβ∼B(γ) log pθ(Y |X,β)

The gradient to γ is approximated with Monte-
Carlo sampling by applying the REINFORCE al-
gorithm (Williams, 1992; Glynn, 1990). To speed
up convergence, we pre-train the selector by some
distant supervision, which is a common practice in
reinforcement learning. REINFORCE is unbiased
but has a high variance. Many research have pro-
posed sophisticated techniques for variance reduc-
tion (Mnih and Gregor, 2014; Tucker et al., 2017;
Grathwohl et al., 2018). In text generation, the
high-variance problem is aggravated because there
exists multiple valid selections. Accurately esti-
mating the likelihood becomes difficult. Another



582

issue is its tendency to avoid stochasticity (Raiko
et al., 2015), which we will show in Sec 5.2 that it
results in low content-level diversity.

3.4 Variational Reinforce-Select
We propose Variational Reinforce-Select (VRS)
which applies variational inference (Kingma and
Welling, 2014) for variance reduction. Instead
of directly integrating over B(γ), it imposes a
proposal distribution qφ for importance sampling.
The marginal likelihood is lower bounded by:

logEβ∼B(γ)pθ(Y |X,β)

= logEβ∼qφ
pθ(Y, β|X)
qφ(β)

≥ Eβ∼qφ log
pθ(Y, β|X)
qφ(β)

= Eβ∼qφ log pθ(Y |X,β)−KL(qφ||B(γ))

(3)

By choosing a proper qφ, the bound will be im-
proved and the variance can be largely reduced
compared with REINFORCE. If qφ equals the
posterior distribution pθ(β|X,Y ), the bound is
tight and the variance would be zero (Mnih and
Rezende, 2016). We define qφ(β|X,Y ) as a mean-
field distribution parameterized by a set of global
parameters φ to approach the true posterior distri-
bution. φ, θ and γ are simultaneously trained by
minimizing the last tine of Eq. 3. qφ(β|X,Y ) also
allows us to further perform posterior inference:
Given an arbitrary text Y for a source X , we can
infer which source contents are included in Y (An
example is given in Appendix C).

In Eq.3, the KL divergence term can be com-
puted analytically. As for the independence as-
sumption, it can be summed over each individual
βi. The likelihood term is differentiable to θ but
not to φ, we estimate the gradient to φ in Eq 3 by
applying the REINFORCE estimator:

∇φEβ∼qφ log pθ(Y |X,β) =
Eβ∼qφ∇φ log qφ(β|X,Y )(log pθ(Y |X,β)−B)

B is the control variate (Williams, 1992). The op-
timal B would be (Weaver and Tao, 2001):

B∗ = Eβ∼qφ log pθ(Y |X,β)

which we set as a soft-select approximation:

B = log pθ(Y |X,Eβ∼qφβ)

We estimate Eq. 3.4 with a single sample from qφ
for efficiency. Though multiple-sample could po-
tentially further tighten the bound and reduce the

variance (Burda et al., 2016; Lawson et al., 2018;
Tucker et al., 2019), it brings significant computa-
tional overhead, especially in text generation tasks
where the whole sentence needs to be decoded.

3.5 Degree of Controllability
In practice, when treating content selection as la-
tent variables, the model tends to end up with a
trivial solution of always selecting all source to-
kens (Shen et al., 2018a; Ke et al., 2018). This be-
havior is understandable since Eq. 2 strictly masks
unselected tokens. Wrongly unselecting one to-
ken will largely deteriorate the likelihood. Un-
der the maximum likelihood (MLE) objective, this
high risk pushes the selector to take a conserva-
tive strategy of always keeping all tokens, then the
whole model degenerates to the standard Enc-Dec
and the selection mask loses effects on the gener-
ation. Usually people apply a penalty term to the
selecting ratio when optimizing the likelihood:

L+ λ
∣∣(γ̄ − α)∣∣ (4)

L is the MLE loss function, γ̄ is the mean of γ
and α is the target selecting ratio. This forces the
selector to select the most important α tokens for
each source input instead of keeping all of them.

In our VRS model, we can easily adjust the de-
gree of controllability by limiting an upper bound
of the conditional mutual information (CMI)
I(β, Y |X) (Zhao et al., 2018). Specifically, we
can change our objective into:

max
φ,θ,γ

Eβ∼qφ log pθ(Y |X,β)

−λ
∣∣KL(qφ||B(γ))− �)∣∣ (5)

λ is a fixed lagrangian multiplier. Eq. 5 can be
proved equal to maximum likelihood with the con-
straint I(β, Y |X) = � given proper λ (Alemi
et al., 2018). A higher � indicates β has more in-
fluences to Y (higher controllability) while always
safely selecting all tokens will lead I(β, Y |X) =
0.3 It is preferred over Eq. 4 because (a) CMI di-
rectly considers the dependency between the se-
lection and multiple-possible text while limiting
the ratio aims at finding the single most salient
parts for each source. (b) Unlike CMI, limiting the
ratio is coarse. It considers only the total selected
size and ignores its internal distribution.

3We also tried adding a coverage constraint to ensure
the decoder covers all the selected tokens (Wen et al., 2015;
Wang et al., 2019), but we find it brings no tangible help since
a higher CMI can already discourage including redundant to-
kens into the selection.



583

Algorithm 1 Variational Reinforce-Select (VRS)
Parameters: θ, φ, γ
pretrain← TRUE
repeat

Sample X,Y from the corpus;
Encode X into (h1, h2, . . . , hn);
if pretrain then

Update φ with distant supervision;
Update θ, γ by∇θ,γEq. 3;

else
Update θ, γ, φ by∇θ,γ,φEq. 5;

end if
pretrain← FALSE if Eq. 3 degrades

until convergence and pretrain is False

In practice, we can set � to adjust the degree
of controllability we want. Later we will show it
leads to a trade-off with performance. The final
algorithm is detailed in Algorithm 1. To keep fair-
ness, we trian RS and VRS with the same control
variate and pre-training strategy.4

4 Related Work

Most content selection models train the selector
with heuristic rules (Hsu et al., 2018; Li et al.,
2018; Yu et al., 2018; Gehrmann et al., 2018; Yao
et al., 2019; Moryossef et al., 2019), which fail
to fully capture the relation between selection and
generation. Mei et al. (2016); Zhou et al. (2017);
Lin et al. (2018); Li et al. (2018) “soft-select”
word or sentence embeddings based on a gating
function. The output score from the gate is a de-
terministic vector without any probabilistic varia-
tions, so controlling the selection to generate di-
verse text is impossible. Very few works explic-
itly define a bernoulli distribution for the selector,
then train with the REINFORCE algorithm (Ling
and Rush, 2017; Chen and Bansal, 2018), but the
selection targets at a high recall regardless of the
low precision, so the controllability over generated
text is weak. Fan et al. (2018) control the gen-
eration by manually concatenating entity embed-
dings, while our model is much more flexible by
explicitly defining the selection probability over
all source tokens.

Our work is closely related with learning
discrete representations with variational infer-

4The only extra parameter of VRS is φ which is a sim-
ple MLP structure. The actual training complexity is similar
to RS because they both use the REINFORCE algorithm for
gradient estimation.

ence (Wen et al., 2017; van den Oord et al., 2017;
Kaiser et al., 2018; Lawson et al., 2018), where
we treat content selection as the latent represen-
tation. Limiting the KL-term is a common tech-
nique to deal with the “posterior collapse” prob-
lem (Kingma et al., 2016; Yang et al., 2017; Shen
et al., 2018b). We adopt a similar approach and
use it to further control the selecting strategy.

5 Experiments

For the experiments, we focus on compar-
ing (1) Bottom-up generation (Bo.Up.), (2)
soft-select (SS), (3) Reinforce-select (RS) and
(4) Variational-Reinforce-select (VRS) regarding
their performance on content selection. SS and
RS are trained with the selecting ratio constraint
in Eq. 4. For the SS model, we further add a reg-
ularization term to encourage the maximum value
of γ to be close to 1 as in Mei et al. (2016). We first
briefly introduce the tasks and important setup,
then present the evaluation results.

5.1 Tasks and Setup

We test content-selection models on the headline
and data-to-text generation task. Both tasks share
the same framework with the only difference of
source-side encoders.

Headline Generation: We use English Giga-
word preprocessed by Rush et al. (2015), which
pairs first sentences of news articles with their
headlines. We keep most settings same as in Zhou
et al. (2017), but use a vocabulary built by byte-
pair-encoding (Sennrich et al., 2016). We find it
speeds up training with superior performance.

Data-to-Text Generation: We use the Wik-
ibio dataset (Lebret et al., 2016). The source is a
Wikipedia infobox and the target is a one-sentence
biography description. Most settings are the same
as in Liu et al. (2018), but we use a bi-LSTM en-
coder for better performance.

Heuristically extracted content: This is used
to train the selector for bottom up models and pre-
train the RS and VRS model. For wikibio, we sim-
ply extract overlapped words between the source
and target. In Gigaword, as the headline is more
abstractive, we select the closest source word for
each target word in the embedding space. Stop
words and punctuations are prohibited from being
selected.

Choice of α/�: As seen in Sec 3.5, we need
to set the hyperparameter α for RS/SS and � for



584

Gigaword
Oracle upper bound of % unique % unique % Effect of Entropy of

ROUGE-1 ROUGE-2 ROUGE-L Generation Mask Selector Selector
Bo.Up. 42.61 22.32 38.37 84.28 95.87 87.91 0.360
SS 33.15 14.63 30.68 82.06 96.23 85.27 0.392
RS 36.62 18.34 34.60 3.01 6.23 48.31 0.018
VRS 54.73 33.28 51.62 89.23 92.51 96.45 0.288
Wikibio ROUGE-4 BLEU-4 NIST Generation Mask Selector Selector
Bo.Up. 47.28 49.95 11.06 31.57 77.42 40.78 0.177
SS 41.73 43.94 9.82 63.09 89.42 70.55 0.355
RS 44.07 46.89 10.31 4.55 43.83 10.38 0.105
VRS 52.41 55.03 11.89 57.62 77.83 74.03 0.181

Table 2: Diversity of content selection. The % effect of selector is defined as the ratio of unique generation and
mask, which reflects the rate that changing the selector will lead to corresponding changes of the generated text.

VRS. α corresponds to the selecting ratio. We set
them as α = 0.35 for Wikibio and 0.25 for Gi-
gaword. The value is decided by running a human
evaluation to get the empirical estimation. To keep
comparison fairness, we tune � to make VRS select
similar amount of tokens with RS. The values we
get are � = 0.15n for Wikibio and � = 0.25n for
Gigaword. n is the number of source tokens. 5

5.2 Results and Analysis
Ideally we would expect the learned content selec-
tor to (1) have reasonable diversity so that text with
various contents can be easily sampled, (2) prop-
erly control the contents described in the generated
text and (3) not hurt performance. The following
section will evaluate these three points in order.

Diversity: We first look into the diversity of
content selection learned by different models. For
each test data, 50 selection masks are randomly
sampled from the model’s learned distribution.
Greedy decoding is run to generate the text for
each mask. We measure the entropy of the se-
lector, proportion of unique selection masks and
generated text in the 50 samples. We further de-
fine the “effect” of the selector as the ratio of sam-
pled unique text and mask. This indicates how
often changing the selection mask will also lead
to a change in the generated text. The results
are averaged over all test data. Following Rush
et al. (2015) and Lebret et al. (2016), we measure
the quality of generated text with ROUGE-1, 2,
L F-score for Gigaword and ROUGE-4, BLEU-
4, NIST for Wikibio. As there is only one ref-
erence text for each source, we report an oracle

5� corresponds to the KL divergence of the selection
mask, which scales linearly with the number of source to-
kens, so we set it proportinally w.r.t. n.

upper bound of these scores by assuming an “or-
acle” that can choose the best text among all the
candidates (Mao et al., 2015; Wang et al., 2017).
Namely, out of each 50 sampled text, we pick the
one with the maximum metric score. The final
metric score is evaluated on these “oracle” picked
samples. The intuition is that if the content selec-
tor is properly trained, at least one out of the 50
samples should describe similar contents with the
reference text, the metric score between it and the
reference text should be high. Table 2 lists the re-
sults. We can have the following observations:

• RS model completely fails to capture the
content-level diversity. Its selector is largely
deterministic, with a lowest entropy value
among all models. In contrast, the selector
from SS, VRS and Bo.Up. have reasonable
diversity, with over 90% and 75% unique se-
lection masks for Gigaword and Wikibio re-
spectively.

• The selector from VRS has the strongest ef-
fect to the generator, especially on the Giga-
word data where modifying the content selec-
tion changes the corresponding text in more
than 95% of the cases. RS has the lowest ef-
fect value, which indicates that even with the
selecting ratio constraint, its generator still
ignores the selection mask to a large extent.

• The oracle metric score of VRS is much
higher than the other two. This is beneficial
when people want to apply the model to gen-
erate a few candidate text then hand-pick the
suitable one. VRS has more potential than
the other three to contain the expected text.
SS performs worst. The gap between the



585

soft approximation and the real distribution,
as mentioned before, indeed results in a large
drop of performance.

In short, compared with others, the content selec-
tor of VRS is (1) diverse, (2) has stronger effect on
the text generation and (3) with a larger potential
of producing an expected text.

Controllability: We have shown the content se-
lector of VRS is diverse and has strong effect on
the text generation. This section aims at examin-
ing whether such effect is desirable, i.e., whether
the selector is able to properly control the contents
described in the text. We measure it based on the
self-bleu metric and a human evaluation.

The self-bleu metric measures the controllabil-
ity by evaluating the “intra-selection” similarity
of generated text. Intuitively, by fixing the selec-
tion mask, multiple text sampled from the decoder
are expected to describe the same contents and
thereby should be highly similar to each other. The
decoder should only model surface-level diversity
without further modifying the selected contents.
With this in mind, for each test data, we randomly
sample a selection mask from the selector’s dis-
tribution, then fix the mask and run the decoder
to sample 10 different text. The self-BLEU-1
score (Zhu et al., 2018) on the sampled text is re-
ported, which is the average BLEU score between
each text pair. A higher self-BLEU score indi-
cates the sampled text are more similar with each
other. The results are shown in Table 3. We can
see generations from VRS have a clearly higher
intra-selection similarity. SS performs even worse
than RS, despite having a high effect score in Ta-
ble 2. The selector from SS affects the generation
in an undesirable way, which also explain why SS
has a lowest oracle metric score though with a high
score on content diversity and effect.

Method Bo.Up. SS RS VRS

Gigaword 46.58 37.20 48.13 61.14
Wikibio 38.30 13.92 25.99 43.81

Table 3: Self-Bleu score by fixing selection mask.
Higher means better controllability of content selection

We further run a human evaluation to mea-
sure the text-content consistency among differ-
ent models. 100 source text are randomly sam-
pled from the human-written DUC 2004 data for
task 1&2 (Over et al., 2007). Bo.Up, SS, RS

Method Fluency intra-consistency inter-diversity

Reference 0.96 - -
Enc-Dec 0.83 - -
Bo.Up. 0.46 0.48 0.61

SS 0.27 0.41 0.54
RS 0.78 0.39 0.47

VRS 0.74 0.72 0.87

Table 4: Human evaluation on fluency, intra-
consistency and inter-diversity of content selection on
DUC 2004.

and VRS are applied to generate the target text
by first sampling a selection mask, then run beam
search decoding with beam size 10. We are inter-
ested in seeing (1) if multiple generations from the
same selection mask are paraphrases to each other
(intra-consistent) and (2) if generations from dif-
ferent selection masks do differ in the content they
described (inter-diverse). The results in Table 4
show that VRS significantly outperforms the other
two in both intra-consistency and inter-diversity.
RS has the lowest score on both because the se-
lector has very weak effects on the generation as
measured in the last section. Bo.Up and SS lay
between them. Overall VRS is able to maintain
the highest content-text consistency among them.

Method R-1 R-2 R-L %Word

Zhou et al. (2017) 36.15 17.54 33.63 100
Enc-Dec 35.92 17.43 33.42 100
SS 20.35 4.78 16.53 24.82
Bo.Up 28.17 10.32 26.68 24.54
RS 35.45 16.38 32.71 25.12
VRS(� = 0)-pri 36.42 17.81 33.86 78.63
VRS(� = 0.25)-pri 34.26 15.11 31.69 24.36
VRS(� = 0)-post 37.14 18.03 34.26 78.66
VRS(� = 0.25)-post 56.72 33.24 51.88 24.53

Table 5: Gigaword best-select results. Larger � leads
to more controllable selector with a bit degrade of per-
formance. (-post) means selecting from the posterior
qφ(β|X,Y ), (-pri) is from the prior B(γi).

Performance & Trade-off: To see if the selec-
tor affects performance, we also ask human anno-
tators to judge the text fluency. The fluency score
is computed as the average number of text being
judged as fluent. We include generations from
the standard Enc-Dec model. Table 4 shows the
best fluency is achieved for Enc-Dec. Imposing



586

Method R-4 B-4 NIST %Word

Liu et al. (2018) 41.65 44.71 100
Enc-Dec 42.07 44.80 9.82 100
SS 5.10 5.73 0.24 35.12
Bo.Up 8.07 9.52 0.42 38.79
RS 42.64 45.08 10.01 34.53
VRS(� = 0)-pri 43.01 46.01 10.24 84.56
VRS(� = 0.15)-pri 42.13 44.51 9.84 34.04
VRS(� = 0)-post 43.84 46.60 10.27 85.34
VRS(� = 0.15)-post 49.68 52.26 11.48 34.57

Table 6: Wikibio best-select results.

a content selector always affects the fluency a bit.
The main reason is that when the controllability is
strong, the change of selection will directly affect
the text realization so that a tiny error of content
selection might lead to unrealistic text. If the se-
lector is not perfectly trained, the fluency will in-
evitably be influenced. When the controllability
is weaker, like in RS, the fluency is more stable
because it will not be affected much by the selec-
tion mask. For SS and Bo.Up, the drop of fluency
is significant because of the gap of soft approx-
imation and the independent training procedure.
In general, VRS does properly decouple content
selection from the enc-dec architecture, with only
tiny degrade on the fluency.

Table 5/6 further measure the metric scores on
Gigaword/Wikibio by decoding text from the best
selection mask based on the selector’s distribution
(set βi = 1 if B(γi) > 0.5 and 0 otherwise).
We include results from VRS model with � = 0,
which puts no constraint on the mutual informa-
tion. We further report the score by generating the
best selection mask from the learned posterior dis-
tribution qφ(β|X,Y ) for VRS model. Two cur-
rent SOTA results from Zhou et al. (2017) and Liu
et al. (2018) and the proportion of selected source
words for each model are also included. We have
the following observations:

• As the value of � decreases, the performance
of VRS improves, but the selector loses more
controllability because the model tends to
over-select contents (over 75% source words
selected). The text-content consistency will
become low.

• Increasing � sacrifices a bit performance, but
still comparable with SOTA. Especially on

Wikibio where the performance drop is mi-
nor. The reason should be that Wikibio is
relatively easier to predict the selection but
Gigaword has more uncertainty.

• Increasing � improves the accuracy of the
posterior selection. This would be useful
when we want to perform posterior inference
for some source-target pair.

• Setting � = 0 can actually outperform SOTA
seq2seq which keeps all tokens, suggesting it
is still beneficial to use the VRS model even
if we do not care about the controllability.

Figure 2: Negative log likelihood (NLL), selection
entropy and self-BLEU as � changes. NLL and
self-bleu on Wikibio are added by 1 for better vi-
sualization. Lower NLL suggests higher perfor-
mance. Higher entropy/self-BLEU means higher di-
versity/controllability.

Figure 2 visualizes how changing the value of �
affects the negative log likelihood (NLL), entropy
of the selector and self-bleu score, which roughly
correlates with performance, diversity and con-
trollability. NLL is evaluated based on the lower
bound in Eq 3 (Sohn et al., 2015). We can see as
� increases, the performance decreases gradually
but the content selection gains more diversity and
controllability. In practice we can tune the � value
to achieve a trade-off.

Generation Example: Figure 3 shows some
examples from Gigaword. As can be seen, de-
codings from the VRS model are largely consis-
tent with each other, in most cases only replacing
one or two words with corresponding synonyms.
Samples are able to faithfully convey all selected
contents. In contrast, generations from SS. Bo.Up.
and RS are unpreditable, differing in both selected



587

Source: indian prime minister p.v. narasimha rao ’s
promise of more autonomy for troubled kashmir and his
plea for early state elections has sparked a violent reaction
from provincial moslem and opposition parties .
Samples from SS:
t1: indian indian calls for end to violence in kashmir .
t2: indian pm calls for end to violence in afghanistan .
t3: indian pm calls for boycott of pakistan ’s ruling party .
Samples from Bo.Up:
t1: india promises more autonomous more autonomy .
t2: indian pm promises autonomy for kashmir autonomy .
t3: indian pm ’s promise sparks violent reaction .
Samples from RS:
t1: indian pm ’s kashmir promises sparks violent reaction.
t2: indian pm ’s promise sparks violent reaction .
t3: kashmir parties blast pm ’s promise .
Samples from VRS:
t1: indian pm ’s promise on kashmir sparks uproar .
t2: indian pm ’s promise on kashmir sparks protests .
t3: indian pm ’s promise for kashmir sparks controversy .

Source: factory orders for manufactured goods rose #.#
percent in september , the commerce department said here
thursday .
Samples from SS:
t1: u.s. consumer confidence down in january in january.
t2: u.s. wholesale prices up #.# percent in october .
t3: u.s. jobless rate rises to #.# percent in march .
Samples from Bo.Up.:
t1: september u.s. factory orders up #.# percent .
t2: september u.s. factory orders increase .
t3: factory orders up in september .
Samples from RS:
t1: u.s. factory orders up #.# percent in september .
t2: factory orders for manufactured goods rise .
t3: factory orders up in september from the year .
Samples from VRS:
t1: september factory orders up #.# percent .
t2: september factory orders rise #.# percent .
t3: september factory orders increase #.# pct .

Figure 3: Text generation examples from Gigaword.
Highlighted words are selected. t1-3 are sampled from
the decoder based on the selected content. Generations
from VRS are more faithful to selected contents.

contents and also the way of saying. SS and Bo.Up
also suffer more from the text disfluency. The gen-
erations from them are largely uncertain.

6 Conclusion

In this paper, we tackle the unaddressed problem
of controllable content selection in text genera-
tion. We propose a general framework based on
variational inference that can be potentiall applied
to arbitrary tasks. On both the headline genera-
tion and data-to-text tasks, our model outperforms
state-of-the-art models regarding the diversity and
controllability of content selection. We further
introduce an effective way to achieve a perfor-
mance/controllability trade-off, which can be eas-
ily tuned to meet specific requirement.

Acknowledgments

We thank anonymous reviewers for valuable com-
ments, thank Aditya Mogadala, Shun Kiyono,
Thomas Mclachlan and other members of the
LIAT team at RIKEN AIP for useful discussions.
Xiaoyu Shen is supported by IMPRS-CS fellow-
ship. The work of J. Suzuki was partly supported
by JSPS KAKENHI Grant Number JP19104418
and AIRPF Grant Number 30AI036-8. This work
is also partially funded by DFG collaborative re-
search center SFB 1102.

References
Alexander Alemi, Ben Poole, Ian Fischer, Joshua Dil-

lon, Rif A. Saurous, and Kevin Murphy. 2018. Fix-
ing a broken ELBO. In Proceedings of the 35th In-
ternational Conference on Machine Learning, vol-
ume 80 of Proceedings of Machine Learning Re-
search, pages 159–168, Stockholmsmssan, Stock-
holm Sweden. PMLR.

Dzmitry Bahdanau, Kyunghyun Cho, and Yoshua Ben-
gio. 2015. Neural machine translation by jointly
learning to align and translate. In International Con-
ference on Learning Representations.

Yuri Burda, Roger Grosse, and Ruslan Salakhutdinov.
2016. Importance weighted autoencoders. In Inter-
national Conference on Learning Representations.

Yen-Chun Chen and Mohit Bansal. 2018. Fast abstrac-
tive summarization with reinforce-selected sentence
rewriting. In Proceedings of the 56th Annual Meet-
ing of the Association for Computational Linguistics
(Volume 1: Long Papers), pages 675–686. Associa-
tion for Computational Linguistics.

Marcella Cornia, Lorenzo Baraldi, and Rita Cucchiara.
2018. Show, control and tell: A framework for gen-
erating controllable and grounded captions. arXiv
preprint arXiv:1811.10652.

Yuntian Deng, Yoon Kim, Justin Chiu, Demi Guo, and
Alexander M Rush. 2018. Latent alignment and
variational attention. Nips.

Jacob Devlin, Ming-Wei Chang, Kenton Lee, and
Kristina Toutanova. 2019. Bert: Pre-training of deep
bidirectional transformers for language understand-
ing. NAACL.

Angela Fan, David Grangier, and Michael Auli. 2018.
Controllable abstractive summarization. In Pro-
ceedings of the 2nd Workshop on Neural Machine
Translation and Generation, pages 45–54. Associa-
tion for Computational Linguistics.

Sebastian Gehrmann, Yuntian Deng, and Alexander M
Rush. 2018. Bottom-up abstractive summarization.
EMNLP.



588

Peter W. Glynn. 1990. Likelihood ratio gradient es-
timation for stochastic systems. Commun. ACM,
33(10):75–84.

Will Grathwohl, Dami Choi, Yuhuai Wu, Geoff
Roeder, and David Duvenaud. 2018. Backpropaga-
tion through the void: Optimizing control variates
for black-box gradient estimation. In International
Conference on Learning Representations.

Anne-Claire Haury, Pierre Gestraud, and Jean-Philippe
Vert. 2011. The influence of feature selection meth-
ods on accuracy, stability and interpretability of
molecular signatures. PloS one, 6(12):e28210.

Wan-Ting Hsu, Chieh-Kai Lin, Ming-Ying Lee, Kerui
Min, Jing Tang, and Min Sun. 2018. A unified
model for extractive and abstractive summarization
using inconsistency loss. In Proceedings of the 56th
Annual Meeting of the Association for Computa-
tional Linguistics (Volume 1: Long Papers), pages
132–141. Association for Computational Linguis-
tics.

Peter Jackson. 1998. Introduction to expert systems.
Addison-Wesley Longman Publishing Co., Inc.

Lukasz Kaiser, Samy Bengio, Aurko Roy, Ashish
Vaswani, Niki Parmar, Jakob Uszkoreit, and Noam
Shazeer. 2018. Fast decoding in sequence models
using discrete latent variables. In Proceedings of the
35th International Conference on Machine Learn-
ing, volume 80 of Proceedings of Machine Learn-
ing Research, pages 2390–2399, Stockholmsmssan,
Stockholm Sweden. PMLR.

Nan Rosemary Ke, Konrad Żołna, Alessandro Sor-
doni, Zhouhan Lin, Adam Trischler, Yoshua Ben-
gio, Joelle Pineau, Laurent Charlin, and Christopher
Pal. 2018. Focused hierarchical RNNs for condi-
tional sequence processing. In Proceedings of the
35th International Conference on Machine Learn-
ing, volume 80 of Proceedings of Machine Learn-
ing Research, pages 2554–2563, Stockholmsmssan,
Stockholm Sweden. PMLR.

Diederik P Kingma, Tim Salimans, Rafal Jozefowicz,
Xi Chen, Ilya Sutskever, and Max Welling. 2016.
Improved variational inference with inverse autore-
gressive flow. In Advances in Neural Information
Processing Systems, pages 4743–4751.

Diederik P Kingma and Max Welling. 2014. Auto-
encoding variational bayes. In International Con-
ference on Learning Representations.

Dieterich Lawson, Chung-Cheng Chiu, George Tucker,
Colin Raffel, Kevin Swersky, and Navdeep Jaitly.
2018. Learning hard alignments with variational in-
ference. In 2018 IEEE International Conference on
Acoustics, Speech and Signal Processing (ICASSP),
pages 5799–5803. IEEE.

Rémi Lebret, David Grangier, and Michael Auli. 2016.
Neural text generation from structured data with ap-
plication to the biography domain. In Proceed-
ings of the 2016 Conference on Empirical Methods

in Natural Language Processing, pages 1203–1213.
Association for Computational Linguistics.

Tao Lei, Regina Barzilay, and Tommi Jaakkola. 2016.
Rationalizing neural predictions. In Proceedings of
the 2016 Conference on Empirical Methods in Nat-
ural Language Processing, pages 107–117.

Wei Li, Xinyan Xiao, Yajuan Lyu, and Yuanzhuo
Wang. 2018. Improving neural abstractive docu-
ment summarization with explicit information selec-
tion modeling. EMNLP.

Junyang Lin, Xu SUN, Shuming Ma, and Qi Su.
2018. Global encoding for abstractive summariza-
tion. In Proceedings of the 56th Annual Meeting of
the Association for Computational Linguistics (Vol-
ume 2: Short Papers), pages 163–169. Association
for Computational Linguistics.

Jeffrey Ling and Alexander Rush. 2017. Coarse-to-fine
attention models for document summarization. In
Proceedings of the Workshop on New Frontiers in
Summarization, pages 33–42.

Tianyu Liu, Kexiang Wang, Lei Sha, Baobao Chang,
and Zhifang Sui. 2018. Building end-to-end di-
alogue systems using generative hierarchical neu-
ral network models. In Proceedings of the Thirty-
Second AAAI Conference on Artificial Intelligence,
pages 4881–4888. AAAI Press.

Thang Luong, Hieu Pham, and Christopher D. Man-
ning. 2015. Effective approaches to attention-based
neural machine translation. In Proceedings of the
2015 Conference on Empirical Methods in Natural
Language Processing, pages 1412–1421. Associa-
tion for Computational Linguistics.

Xuezhe Ma, Yingkai Gao, Zhiting Hu, Yaoliang Yu,
Yuntian Deng, and Eduard Hovy. 2017. Dropout
with expectation-linear regularization. In Interna-
tional Conference on Learning Representations.

Junhua Mao, Wei Xu, Yi Yang, Jiang Wang, Zhiheng
Huang, and Alan Yuille. 2015. Deep captioning
with multimodal recurrent neural networks (m-rnn).
ICLR.

Hongyuan Mei, TTI UChicago, Mohit Bansal, and
Matthew R Walter. 2016. What to talk about and
how? selective generation using lstms with coarse-
to-fine alignment. In Proceedings of NAACL-HLT,
pages 720–730.

Andriy Mnih and Karol Gregor. 2014. Neural vari-
ational inference and learning in belief networks.
In Proceedings of the 31st International Conference
on International Conference on Machine Learn-
ing - Volume 32, ICML’14, pages II–1791–II–1799.
JMLR.org.

Andriy Mnih and Danilo J. Rezende. 2016. Variational
inference for monte carlo objectives. In Proceed-
ings of the 33rd International Conference on Inter-
national Conference on Machine Learning - Volume
48, ICML’16, pages 2188–2196. JMLR.org.



589

Amit Moryossef, Yoav Goldberg, and Ido Dagan. 2019.
Step-by-step: Separating planning from realization
in neural data-to-text generation. NAACL.

Ramesh Nallapati, Feifei Zhai, and Bowen Zhou. 2017.
Summarunner: A recurrent neural network based se-
quence model for extractive summarization of docu-
ments. In AAAI.

Preksha Nema, Mitesh M Khapra, Anirban Laha, and
Balaraman Ravindran. 2017. Diversity driven atten-
tion model for query-based abstractive summariza-
tion. In Proceedings of the 55th Annual Meeting of
the Association for Computational Linguistics (Vol-
ume 1: Long Papers), volume 1, pages 1063–1072.

Aaron van den Oord, Oriol Vinyals, and koray
kavukcuoglu. 2017. Neural discrete representation
learning. In I. Guyon, U. V. Luxburg, S. Bengio,
H. Wallach, R. Fergus, S. Vishwanathan, and R. Gar-
nett, editors, Advances in Neural Information Pro-
cessing Systems 30, pages 6306–6315. Curran As-
sociates, Inc.

Paul Over, Hoa Dang, and Donna Harman. 2007. Duc
in context. Information Processing & Management,
43(6):1506–1520.

Jeffrey Pennington, Richard Socher, and Christopher
Manning. 2014. Glove: Global vectors for word
representation. In Proceedings of the 2014 confer-
ence on empirical methods in natural language pro-
cessing (EMNLP), pages 1532–1543.

Shrimai Prabhumoye, Chris Quirk, and Michel Galley.
2019. Towards content transfer through grounded
text generation. NAACL.

Guanghui Qin, Jin-Ge Yao, Xuening Wang, Jinpeng
Wang, and Chin-Yew Lin. 2018. Learning latent se-
mantic annotations for grounding natural language
to structured data. In Proceedings of the 2018 Con-
ference on Empirical Methods in Natural Language
Processing, pages 3761–3771.

Tapani Raiko, Mathias Berglund, Guillaume Alain, and
Laurent Dinh. 2015. Techniques for learning binary
stochastic feedforward neural networks. ICLR.

Ehud Reiter and Robert Dale. 2000. Building natural
language generation systems. Cambridge university
press.

Alexander M. Rush, Sumit Chopra, and Jason Weston.
2015. A neural attention model for abstractive sen-
tence summarization. In Proceedings of the 2015
Conference on Empirical Methods in Natural Lan-
guage Processing, pages 379–389. Association for
Computational Linguistics.

Rico Sennrich, Barry Haddow, and Alexandra Birch.
2016. Neural machine translation of rare words with
subword units. In Proceedings of the 54th Annual
Meeting of the Association for Computational Lin-
guistics (Volume 1: Long Papers), volume 1, pages
1715–1725.

Tao Shen, Tianyi Zhou, Guodong Long, Jing Jiang, Sen
Wang, and Chengqi Zhang. 2018a. Reinforced self-
attention network: a hybrid of hard and soft atten-
tion for sequence modeling. In Proceedings of the
Twenty-Seventh International Joint Conference on
Artificial Intelligence, IJCAI-18, pages 4345–4352.
International Joint Conferences on Artificial Intelli-
gence Organization.

Xiaoyu Shen, Hui Su, Shuzi Niu, and Vera Demberg.
2018b. Improving variational encoder-decoders in
dialogue generation. In Thirty-Second AAAI Con-
ference on Artificial Intelligence.

Kihyuk Sohn, Honglak Lee, and Xinchen Yan. 2015.
Learning structured output representation using
deep conditional generative models. In Advances in
neural information processing systems, pages 3483–
3491.

Amanda Stent, Rashmi Prasad, and Marilyn Walker.
2004. Trainable sentence planning for complex in-
formation presentation in spoken dialog systems. In
Proceedings of the 42nd annual meeting on associa-
tion for computational linguistics, page 79. Associ-
ation for Computational Linguistics.

Ilya Sutskever, Oriol Vinyals, and Quoc V Le. 2014.
Sequence to sequence learning with neural net-
works. In Z. Ghahramani, M. Welling, C. Cortes,
N. D. Lawrence, and K. Q. Weinberger, editors, Ad-
vances in Neural Information Processing Systems
27, pages 3104–3112. Curran Associates, Inc.

George Tucker, Dieterich Lawson, Shixiang Gu, and
Chris J Maddison. 2019. Doubly reparameterized
gradient estimators for monte carlo objectives. In
International Conference on Learning Representa-
tions.

George Tucker, Andriy Mnih, Chris J Maddison, John
Lawson, and Jascha Sohl-Dickstein. 2017. Rebar:
Low-variance, unbiased gradient estimates for dis-
crete latent variable models. In I. Guyon, U. V.
Luxburg, S. Bengio, H. Wallach, R. Fergus, S. Vish-
wanathan, and R. Garnett, editors, Advances in Neu-
ral Information Processing Systems 30, pages 2627–
2636. Curran Associates, Inc.

Liwei Wang, Alexander Schwing, and Svetlana Lazeb-
nik. 2017. Diverse and accurate image description
using a variational auto-encoder with an additive
gaussian encoding space. In Advances in Neural In-
formation Processing Systems, pages 5756–5766.

Wentao Wang, Zhiting Hu, Zichao Yang, Haoran Shi,
Frank Xu, and Eric Xing. 2019. Toward unsu-
pervised text content manipulation. arXiv preprint
arXiv:1901.09501.

Lex Weaver and Nigel Tao. 2001. The optimal reward
baseline for gradient-based reinforcement learning.
In Proceedings of the Seventeenth Conference on
Uncertainty in Artificial Intelligence, UAI’01, pages
538–545, San Francisco, CA, USA. Morgan Kauf-
mann Publishers Inc.



590

Tsung-Hsien Wen, Milica Gasic, Nikola Mrkšić, Pei-
Hao Su, David Vandyke, and Steve Young. 2015.
Semantically conditioned lstm-based natural lan-
guage generation for spoken dialogue systems. In
Proceedings of the 2015 Conference on Empirical
Methods in Natural Language Processing, pages
1711–1721.

Tsung-Hsien Wen, Yishu Miao, Phil Blunsom, and
Steve Young. 2017. Latent intention dialogue
models. In Proceedings of the 34th International
Conference on Machine Learning, volume 70 of
Proceedings of Machine Learning Research, pages
3732–3741, International Convention Centre, Syd-
ney, Australia. PMLR.

Ronald J. Williams. 1992. Simple statistical gradient-
following algorithms for connectionist reinforce-
ment learning. Machine Learning, 8(3):229–256.

Sam Wiseman, Stuart M Shieber, and Alexander M
Rush. 2018. Learning neural templates for text gen-
eration. EMNLP.

Kelvin Xu, Jimmy Ba, Ryan Kiros, Kyunghyun Cho,
Aaron Courville, Ruslan Salakhudinov, Rich Zemel,
and Yoshua Bengio. 2015. Show, attend and tell:
Neural image caption generation with visual atten-
tion. In International conference on machine learn-
ing, pages 2048–2057.

Zichao Yang, Zhiting Hu, Ruslan Salakhutdinov, and
Taylor Berg-Kirkpatrick. 2017. Improved varia-
tional autoencoders for text modeling using dilated
convolutions. ICML.

Lili Yao, Nanyun Peng, Weischedel Ralph, Kevin
Knight, Dongyan Zhao, and Rui Yan. 2019. Plan-
and-write: Towards better automatic storytelling.
AAAI.

Naitong Yu, Jie Zhang, Minlie Huang, and Xiaoyan
Zhu. 2018. An operation network for abstractive
sentence compression. In Proceedings of the 27th
International Conference on Computational Lin-
guistics, pages 1065–1076. Association for Compu-
tational Linguistics.

Shengjia Zhao, Jiaming Song, and Stefano Ermon.
2018. The information autoencoding family: A la-
grangian perspective on latent variable generative
models. UAI.

Qingyu Zhou, Nan Yang, Furu Wei, and Ming Zhou.
2017. Selective encoding for abstractive sentence
summarization. In Proceedings of the 55th An-
nual Meeting of the Association for Computational
Linguistics (Volume 1: Long Papers), pages 1095–
1104. Association for Computational Linguistics.

Yaoming Zhu, Sidi Lu, Lei Zheng, Jiaxian Guo,
Weinan Zhang, Jun Wang, and Yong Yu. 2018.
Texygen: a benchmarking platform for text gener-
ation models. In The 41st International ACM SIGIR
Conference on Research & Development in Informa-
tion Retrieval, pages 1097–1100. ACM.


