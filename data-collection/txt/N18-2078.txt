



















































Exploiting Semantics in Neural Machine Translation with Graph Convolutional Networks


Proceedings of NAACL-HLT 2018, pages 486–492
New Orleans, Louisiana, June 1 - 6, 2018. c©2018 Association for Computational Linguistics

Exploiting Semantics in Neural Machine Translation with
Graph Convolutional Networks

Diego Marcheggiani1,2 Joost Bastings2 Ivan Titov1,2
1ILCC, School of Informatics, University of Edinburgh

2ILLC, University of Amsterdam
marcheggiani@uva.nl bastings@uva.nl ititov@inf.ed.ac.uk

Abstract

Semantic representations have long been ar-
gued as potentially useful for enforcing mean-
ing preservation and improving generalization
performance of machine translation methods.
In this work, we are the first to incorporate in-
formation about predicate-argument structure
of source sentences (namely, semantic-role
representations) into neural machine transla-
tion. We use Graph Convolutional Networks
(GCNs) to inject a semantic bias into sentence
encoders and achieve improvements in BLEU
scores over the linguistic-agnostic and syntax-
aware versions on the English–German lan-
guage pair.

1 Introduction

It has long been argued that semantic represen-
tations may provide a useful linguistic bias to
machine translation systems (Weaver, 1955; Bar-
Hillel, 1960). Semantic representations provide
an abstraction which can generalize over differ-
ent surface realizations of the same underlying
‘meaning’. Providing this information to a ma-
chine translation system, can, in principle, im-
prove meaning preservation and boost generaliza-
tion performance.

Though incorporation of semantic information
into traditional statistical machine translation has
been an active research topic (e.g., (Baker et al.,
2012; Liu and Gildea, 2010; Wu and Fung, 2009;
Bazrafshan and Gildea, 2013; Aziz et al., 2011;
Jones et al., 2012)), we are not aware of any previ-
ous work considering semantic structures in neu-
ral machine translation (NMT). In this work, we
aim to fill this gap by showing how information
about predicate-argument structure of source sen-
tences can be integrated into standard attention-
based NMT models (Bahdanau et al., 2015).

We consider PropBank-style (Palmer et al.,
2005) semantic role structures, or more specifi-

John      gave      his      wonderful      wife      a      nice      present .

A0

A1

A2

Figure 1: An example sentence annotated with a
semantic-role representation.

cally their dependency versions (Surdeanu et al.,
2008). The semantic-role representations mark
semantic arguments of predicates in a sentence
and categorize them according to their seman-
tic roles. Consider Figure 1, the predicate gave
has three arguments:1 John (semantic role A0,
‘the giver’), wife (A2, ‘an entity given to’) and
present (A1, ‘the thing given’). Semantic roles
capture commonalities between different realiza-
tions of the same underlying predicate-argument
structures. For example, present will still be A1 in
sentence “John gave a nice present to his won-
derful wife”, despite different surface forms of
the two sentences. We hypothesize that seman-
tic roles can be especially beneficial in NMT, as
‘argument switching’ (flipping arguments corre-
sponding to different roles) is one of frequent and
severe mistakes made by NMT systems (Isabelle
et al., 2017).

There is a limited amount of work on incor-
porating graph structures into neural sequence
models. Though, unlike semantics in NMT,
syntactically-aware NMT has been a relatively
hot topic recently, with a number of approaches
claiming improvements from using treebank syn-
tax (Sennrich and Haddow, 2016; Eriguchi et al.,
2016; Nadejde et al., 2017; Bastings et al., 2017;
Aharoni and Goldberg, 2017), our graphs are dif-
ferent from syntactic structures. Unlike syntac-
tic dependency graphs, they are not trees and thus

1We slightly abuse the terminology: formally these are
syntactic heads of arguments rather than arguments.

486



cannot be processed in a bottom-up fashion as in
Eriguchi et al. (2016) or easily linearized as in
Aharoni and Goldberg (2017). Luckily, the mod-
eling approach of Bastings et al. (2017) does not
make any assumptions about the graph structure,
and thus we build on their method.

Bastings et al. (2017) used Graph Convolu-
tional Networks (GCNs) to encode syntactic struc-
ture. GCNs were originally proposed by Kipf
and Welling (2016) and modified to handle la-
beled and automatically predicted (hence noisy)
syntactic dependency graphs by Marcheggiani
and Titov (2017). Representations of nodes (i.e.
words in a sentence) in GCNs are directly influ-
enced by representations of their neighbors in the
graph. The form of influence (e.g., transition ma-
trices and parameters of gates) are learned in such
a way as to benefit the end task (i.e. transla-
tion). These linguistically-aware word represen-
tations are used within a neural encoder. Although
recent research has shown that neural architectures
are able to learn some linguistic phenomena with-
out explicit linguistic supervision (Linzen et al.,
2016; Vaswani et al., 2017), informing word rep-
resentations with linguistic structures can provide
a useful inductive bias.

We apply GCNs to the semantic dependency
graphs and experiment on the English–German
language pair (WMT16). We observe an im-
provement over the semantics-agnostic baseline (a
BiRNN encoder; 23.3 vs 24.5 BLEU). As we use
exactly the same modeling approach as in the syn-
tactic method of Bastings et al. (2017), we can
easily compare the influence of the types of lin-
guistic structures (i.e., syntax vs. semantics). We
observe that when using full WMT data we ob-
tain better results with semantics than with syntax
(23.9 BLEU for syntactic GCN). Using syntactic
and semantic GCNs together, we obtain a further
gain (24.9 BLEU) which suggests the complemen-
tarity of information encoded by the syntactic and
semantic representations.

2 Model

2.1 Encoder-decoder Models

We use a standard attention-based encoder-
decoder model (Bahdanau et al., 2015) as a start-
ing point for constructing our model. In encoder-
decoder models, the encoder takes as input the
source sentence x and calculates a representa-
tion of each word xt in x. The decoder outputs

a translation y relying on the representations of
the source sentence. Traditionally, the encoder
is parametrized as a Recurrent Neural Network
(RNN), but other architectures have also been suc-
cessful, such as Convolutional Neural Networks
(CNN) (Gehring et al., 2017) and hierarchical self-
attention models (Vaswani et al., 2017), among
others. In this paper we experiment with RNN and
CNN encoders. We explore the benefits of incor-
porating information about semantic-role struc-
tures into such encoders.

More formally, RNNs (Elman, 1990) can be
defined as a function RNN(x1:t) that calculates
the hidden representation ht of a word xt based
on its left context. Bidirectional RNNs use two
RNNs: one runs in the forward direction and an-
other one in the backward direction. The forward
RNN(x1:t) represents the left context of word xt,
whereas the backward RNN(xn:t) computes a rep-
resentation of the right context. The two represen-
tations are concatenated in order to incorporate in-
formation about the entire sentence:

BiRNN(x, t) = RNN(x1:t) � RNN(xn:t).

In contrast to BiRNNs, CNNs (LeCun et al., 2001)
calculate a representation of a word xt by consid-
ering a window of words w around xt, such as

CNN(x, t, w) = f(xt�bw/2c, .., xt, .., xt+bw/2c),

where f is usually an affine transformation fol-
lowed by a nonlinear function.

Once the sentence has been encoded, the de-
coder takes as input the induced sentence repre-
sentation and generates the target sentence y. The
target sentence y is predicted word by word us-
ing an RNN decoder. At each step, the decoder
calculates the probability of generating a word yt
conditioning on a context vector ct and the previ-
ous state of the RNN decoder. The context vector
ct is calculated based on the representation of the
source sentence computed by the encoder, using
an attention mechanism (Bahdanau et al., 2015).
Such a model is trained end-to-end on a parallel
corpus to maximize the conditional likelihood of
the target sentences.

2.2 Graph Convolutional Networks
Graph neural networks are a family of neural ar-
chitectures (Scarselli et al., 2009; Gilmer et al.,
2017) specifically devised to induce representa-
tion of nodes in a graph relying on its graph struc-

487



John    gave    his    wonderful    wife    a    nice    present

WA0

WA1
WA2

WA0’ WA2’

WA1’
W

se
lf

W
se

lf

W
se

lf

W
se

lf

W
se

lf

W
se

lf

W
se

lf

W
se

lf

BiRNN/
CNN

Semantic 
GCN

Semantic 
GCN WA0

WA1
WA2

WA0’ WA2’

WA1’

W
se

lf

W
se

lf

W
se

lf

W
se

lf

W
se

lf

W
se

lf

W
se

lf

W
se

lf

Figure 2: Two layers of semantic GCN on top of a (not
shown) BiRNN or CNN encoder.

BiRNN CNN

Baseline (Bastings et al., 2017) 14.9 12.6
+Sem 15.6 13.4
+Syn (Bastings et al., 2017) 16.1 13.7
+Syn + Sem 15.8 14.3

Table 1: Test BLEU, En–De, News Commentary.

ture. Graph convolutional networks (GCNs) be-
long to this family. While GCNs were introduced
for modeling undirected unlabeled graphs (Kipf
and Welling, 2016), in this paper we use a formu-
lation of GCNs for labeled directed graphs, where
the direction and the label of an edge are incor-
porated. In particular, we follow the formulation
of Marcheggiani and Titov (2017) and Bastings
et al. (2017) for syntactic graphs and apply it to
dependency-based semantic-role structures (Hajic
et al., 2009) (as in Figure 1).

More formally, consider a directed graph G =
(V, E), where V is a set of nodes, and E is a set of
edges. Each node v 2 V is represented by a fea-
ture vector xv 2 Rd, where d is the latent space
dimensionality. The GCN induces a new repre-
sentation h0v 2 Rd of a node v while relying on
representations hu of its neighbors:

h0v=⇢
⇣ X

u2N (v)
gu,v

�
Wdir(u,v) hu + blab(u,v)

�⌘
,

where N (v) is the set of neighbors of v,
Wdir(u,v) 2 Rd⇥d is a direction-specific param-
eter matrix. There are three possible directions
(dir(u, v) 2 {in, out, loop}): self-loop edges
were added in order to ensure that the initial repre-
sentation of node hv directly affects its new repre-
sentation h0v. The vector blab(u,v) 2 Rd is an em-
bedding of a semantic role label of the edge (u, v)
(e.g., A0). The functions gu,v are scalar gates
which weight the importance of each edge. Gates

BiRNN

Baseline (Bastings et al., 2017) 23.3
+Sem 24.5
+Syn (Bastings et al., 2017) 23.9
+Syn + Sem 24.9

Table 2: Test BLEU, En–De, full WMT16.

are particularly useful when the graph is predicted
and thus may contain errors, i.e., wrong edges. In
this scenario gates can down weight the influence
of potentially unreliable edges. The function ⇢ is
a non-linearity (ReLU).2

As with CNNs, GCN layers can be stacked in
order to incorporate higher order neighborhoods.
In our experiments, we used GCNs on top of
a standard BiRNN encoder and a CNN encoder
(Figure 2). In other words, the initial represen-
tations of words fed into GCN were either RNN
states or CNN representations.

3 Experiments

We experimented with the English-to-German
WMT16 dataset (⇠4.5 million sentence pairs for
training). We use its subset, News Commen-
tary v11, for development and additional ex-
periments (⇠226.000 sentence pairs). For all
these experiments, we use newstest2015 and
newstest2016 as a validation and test set, re-
spectively.

We parsed the English partitions of these
datasets with a syntactic dependency parser (An-
dor et al., 2016) and dependency-based seman-
tic role labeler (Marcheggiani et al., 2017). We
constructed the English vocabulary by taking all
words with frequency higher than three, while for
German we used byte-pair encodings (BPE) (Sen-
nrich et al., 2016). All hyperparameter selection
was performed on the validation set (see Appendix
A). We measured the performance of the models
with (cased) BLEU scores (Papineni et al., 2002).
The settings and the framework (Neural Monkey
(Helcl and Libovický, 2017)) used for experiments
are the ones used in Bastings et al. (2017), which
we use as baselines. As RNNs, we use GRUs (Cho
et al., 2014).

We now discuss the impact that different ar-
chitectures and linguistic information have on the
translation quality.

2Refer to Marcheggiani and Titov (2017) and Bastings
et al. (2017) for further details.

488



3.1 Results and Discussion

First, we start with experiments with the smaller
News Commentary training set (see Table 1). As
in Bastings et al. (2017), we used the standard
attention-based encoder-decoder model as a base-
line.

We tested the impact of semantic GCNs when
used on top of CNN and BiRNN encoders. As
expected, BiRNN results are stronger than CNN
ones. In general, for both encoders we observe
the same trend: using semantic GCNs leads to an
improvement over the baseline model. The im-
provements is 0.7 BLEU for BiRNN and 0.8 for
CNN. This is slightly surprising as the potentially
non-local semantic information should in principle
be more beneficial within a less powerful and lo-
cal CNN encoder. The syntactic GCNs (Bastings
et al., 2017) appear stronger than semantic GCNs.
As exactly the same model and optimization are
used for both GCNs, the differences should be
due to the type of linguistic representations used.3

Since syntax and semantic structures seem to be
individually beneficial and, though related, cap-
ture different linguistic phenomena, it is natural to
try combining them. When syntactic and semantic
GCNs are stacked, we observe a further improve-
ment with respect to the semantic GCN model, and
a substantial improvement with respect to the syn-
tactic GCN model with a CNN encoder.

Now we turn to the full WMT experiments.
Though we expected the linguistic bias to be more
valuable in the resource-poor setting, the improve-
ment from using semantic-role structures is larger
here (+1.2 BLEU). It is surprising but perhaps
more data is beneficial for accurately modeling in-
fluence of semantics on the translation task. Inter-
estingly, the semantic GCN now outperforms the
syntactic one by 0.6 BLEU. Again, it is hard to
pinpoint exact reasons for this. One may speculate
though that, given enough data, RNNs were able
to capture syntactic dependency and thus reducing
the benefits from using treebank syntax, whereas
(often less local and harder) semantic dependen-
cies were more complementary. Finally, when the
semantic GCN is stacked over the syntactic GCN,
we obtain a further improvement reaching 24.9
BLEU. These results suggest that syntactic and se-

3Note that the SRL system we use (Marcheggiani et al.,
2017) does not use syntax and is faster than the syntactic
parser of Andor et al. (2016), so semantic GCNs may still
be preferable from the engineering perspective even in this
setting.

BiRNN CNN

Baseline (Bastings et al., 2017) 14.1 12.1

+Sem (1L) 14.3 12.5
+Sem (2L) 14.4 12.6
+Sem (3L) 14.4 12.7
+Syn (2L) (Bastings et al., 2017) 14.8 13.1

+SelfLoop (1L) 14.1 12.1
+SelfLoop (2L) 14.2 11.5

+SemSyn (1L) 14.1 12.7
+Syn (1L) + Sem (1L) 14.7 12.7
+Syn (1L) + Sem (2L) 14.6 12.8
+Syn (2L) + Sem (1L) 14.9 13.0
+Syn (2L) + Sem (2L) 14.9 13.5

Table 3: Validation BLEU, News commentary only

mantic dependency structures are complementary
information when it comes to translation.

3.2 Ablations and Syntax-Semantics GCNs

We used the validation set to perform extra exper-
iments, as well as to select hyper parameters (e.g.,
the number of GCN layers) for the experiments
presented above. Table 3 presents the results. The
annotation 1L, 2L and 3L refers to the number of
GCN layers used.

First, we tested whether the gain we observed
is an effect of an extra layer of non-linearity
or an effect of the linguistic structures encoded
with GCNs. In order to do so, we used the
GCN layer without any structural information.
In this way, only the self-loop edge is used
within the GCN node updates. These results
(e.g., BiRNN+SelfLoop) show that the linguistic-
agnostic GCNs perform on par with the baseline,
and thus using linguistic structure is genuinely
beneficial in translation.

We compared stacking a semantic GCN on top
of syntactic one (as done in section 3.1) against
combining syntax and semantic in the same GCN
layer (SemSyn).4 With SemSyn we do not ob-
serve any improvement with respect to having se-
mantic and syntactic information alone. We argue
that the reason for this is that the two linguistic
representations do not interact much as much as
needed when encoded into the same GCN layer
with a simple aggregation function. The stacking
approach allows for more complex interaction and
more successful. However, on this smaller dataset,

4We used distinct matrices W for syntax and semantics.

489



John     sold     the     car     to     Mark     .

A0 A1 A2

BiRNN John verkaufte das Auto nach Mark .
Sem John verkaufte das Auto an Mark .

The   boy   walking   down   the   dusty   road   is   drinking   a   beer  .

A0 AM-DIR A0 A1

BiRNN Der Junge zu Fuß die staubige Straße ist ein Bier trinken .
Sem Der Junge , der die staubige Straße hinunter geht , trinkt ein Bier .

The   boy   sitting   on   a   bench   in   the   park   plays   chess   .

A1 A2 A0 A1AM-LOC

BiRNN Der Junge auf einer Bank im Park spielt Schach .
Sem Der Junge sitzt auf einer Bank im Park Schach .

Table 4: Qualitative analysis. The first two sentences are translations where the semantic structure helps. For the
last sentence both translations are problematic but the BiRNN one is grammatical.

unlike full WMT (Table 1), we obtain smaller im-
provements over the single-representation models.

3.3 Qualitative Analysis

We analyzed the behavior of the BiRNN baseline
and the semantic GCN model trained on the full
WMT16 training set. In Table 4 we show three
examples where there is a clear difference between
translations produced by the two models. Besides
the two translations, we show the dependency SRL
structure predicted by the labeler and exploited by
our GCN model.

In the first sentence, the only difference is in the
choice of the preposition for the argument Mark.
Note that the argument is correctly assigned to role
A2 (‘Buyer’) by the semantic role labeler. The
BiRNN model translates to with nach, which
in German expresses directionality and would be
a correct translation should the argument refer to
a location. In contrast, semantic GCN correctly
translates to as an. We hypothesize that the se-
mantic structure, namely the assignment of the ar-
gument to A2 rather than AM-DIR (‘Directional-
ity’), helps the model to choose the right preposi-
tion. In the second sentence, the BiRNN’s trans-
lation is ungrammatical, whereas semantic GCN
is able to correctly translate the source sentence.
Again, the arguments, correctly identified by se-
mantic role labeler, may have been useful in trans-
lating this somewhat tricky sentence. Finally, in

the third case, we can observe that both trans-
lations are problematic. BiRNN and Semantic
GCN ignored verbs sit and play, respectively.
However, BiRNN’s translation for this sentence is
preferable, as it is grammatically correct, even if
not fluent or particularly precise.

4 Conclusions

In this work we propose injecting information
about predicate-argument structures of sentences
in NMT models. We observe that the semantic
structures are beneficial for the English–German
language pair. So far we evaluated the model
performance in terms of BLEU only. It would
be interesting in future work to both understand
when semantics appears beneficial, and also to see
which components of semantic structures play a
role. Experiments on other language pairs are also
left for future work.

Acknowledgments

We thank Stella Frank and Wilker Aziz for their
suggestions and comments. The project was sup-
ported by the European Research Council (ERC
StG BroadSem 678254), and the Dutch National
Science Foundation (NWO VIDI 639.022.518).
We thank NVIDIA for donating GPUs used for
this research.

490



References
Roee Aharoni and Yoav Goldberg. 2017. Towards

string-to-tree neural machine translation. In Pro-
ceedings of the 55th Annual Meeting of the Asso-
ciation for Computational Linguistics, ACL. pages
132–140. https://doi.org/10.18653/
v1/P17-2021.

Daniel Andor, Chris Alberti, David Weiss, Aliaksei
Severyn, Alessandro Presta, Kuzman Ganchev, Slav
Petrov, and Michael Collins. 2016. Globally nor-
malized transition-based neural networks. In Pro-
ceedings of the 54th Annual Meeting of the Asso-
ciation for Computational Linguistics, ACL. pages
2442–2452. https://doi.org/10.18653/
v1/P16-1231.

Wilker Aziz, Miguel Rios, and Lucia Specia. 2011.
Shallow semantic trees for SMT. In Proceedings of
the Sixth Workshop on Statistical Machine Transla-
tion, WMT@EMNLP. pages 316–322. http://
aclanthology.info/papers/W11-2136/
shallow-semantic-trees-for-smt.

Dzmitry Bahdanau, Kyunghyun Cho, and Yoshua Ben-
gio. 2015. Neural Machine Translation by Jointly
Learning to Align and Translate. In Proceedings
of the International Conference on Learning Rep-
resentations, ICLR. http://arxiv.org/abs/
1409.0473.

Kathrin Baker, Michael Bloodgood, Bonnie J. Dorr,
Chris Callison-Burch, Nathaniel Wesley Filardo,
Christine D. Piatko, Lori S. Levin, and Scott Miller.
2012. Modality and negation in SIMT use of modal-
ity and negation in semantically-informed syntac-
tic MT. Computational Linguistics 38(2):411–
438. https://doi.org/10.1162/COLI_a_
00099.

Yehoshua Bar-Hillel. 1960. The present status of au-
tomatic translation of languages. Advances in Com-
puters 1:91–163.

Joost Bastings, Ivan Titov, Wilker Aziz, Diego
Marcheggiani, and Khalil Simaan. 2017. Graph
convolutional encoders for syntax-aware neu-
ral machine translation. In Proceedings of
the 2017 Conference on Empirical Methods in
Natural Language Processing, EMNLP. pages
1957–1967. https://www.aclweb.org/
anthology/D17-1209.

Marzieh Bazrafshan and Daniel Gildea. 2013. Se-
mantic roles for string to tree machine transla-
tion. In Proceedings of the 51st Annual Meeting
of the Association for Computational Linguistics,
ACL. pages 419–423. http://aclweb.org/
anthology/P/P13/P13-2074.pdf.

Kyunghyun Cho, Bart van Merrienboer, Caglar Gul-
cehre, Dzmitry Bahdanau, Fethi Bougares, Hol-
ger Schwenk, and Yoshua Bengio. 2014. Learn-
ing Phrase Representations using RNN Encoder–
Decoder for Statistical Machine Translation. In

Proceedings of the 2014 Conference on Empirical
Methods in Natural Language Processing, EMNLP.
pages 1724–1734. http://www.aclweb.org/
anthology/D14-1179.

Jeffrey L Elman. 1990. Finding structure in time. Cog-
nitive science 14(2):179–211.

Akiko Eriguchi, Kazuma Hashimoto, and Yoshimasa
Tsuruoka. 2016. Tree-to-sequence attentional neu-
ral machine translation. In Proceedings of the 54th
Annual Meeting of the Association for Computa-
tional Linguistics, ACL. pages 823–833. http://
www.aclweb.org/anthology/P16-1078.

Jonas Gehring, Michael Auli, David Grangier, and
Yann Dauphin. 2017. A convolutional encoder
model for neural machine translation. In Proceed-
ings of the 55th Annual Meeting of the Associ-
ation for Computational Linguistics, ACL. pages
123–135. https://doi.org/10.18653/
v1/P17-1012.

Justin Gilmer, Samuel S. Schoenholz, Patrick F. Ri-
ley, Oriol Vinyals, and George E. Dahl. 2017.
Neural message passing for quantum chemistry.
In Proceedings of the 34th International Confer-
ence on Machine Learning, ICML. pages 1263–
1272. http://proceedings.mlr.press/
v70/gilmer17a.html.

Jan Hajic, Massimiliano Ciaramita, Richard Johans-
son, Daisuke Kawahara, Maria Antònia Martı́, Lluı́s
Màrquez, Adam Meyers, Joakim Nivre, Sebastian
Padó, Jan Stepánek, Pavel Stranák, Mihai Surdeanu,
Nianwen Xue, and Yi Zhang. 2009. The conll-
2009 shared task: Syntactic and semantic depen-
dencies in multiple languages. In Proceedings of
the Thirteenth Conference on Computational Natu-
ral Language Learning: Shared Task, CoNLL. pages
1–18. http://aclweb.org/anthology/W/
W09/W09-1201.pdf.

Kaiming He, Xiangyu Zhang, Shaoqing Ren, and
Jian Sun. 2016. Deep residual learning for im-
age recognition. In Proceedings of the IEEE Con-
ference on Computer Vision and Pattern Recog-
nition, CVPR. pages 770–778. https://doi.
org/10.1109/CVPR.2016.90.

Jindřich Helcl and Jindřich Libovický. 2017. Neural
monkey: An open-source tool for sequence learn-
ing. The Prague Bulletin of Mathematical Lin-
guistics (107):5–17. https://doi.org/10.
1515/pralin-2017-0001.

Pierre Isabelle, Colin Cherry, and George F. Fos-
ter. 2017. A challenge set approach to eval-
uating machine translation. In Proceedings of
the 2017 Conference on Empirical Methods in
Natural Language Processing, EMNLP. pages
2486–2496. https://aclanthology.info/
papers/D17-1263/d17-1263.

491



Bevan Jones, Jacob Andreas, Daniel Bauer,
Karl Moritz Hermann, and Kevin Knight. 2012.
Semantics-based machine translation with hyper-
edge replacement grammars. In Proceedings of
the 24th International Conference on Computa-
tional Linguistics, COLING. pages 1359–1376.
http://aclweb.org/anthology/C/C12/
C12-1083.pdf.

Diederik P. Kingma and Jimmy Ba. 2015. Adam: A
method for stochastic optimization. In Proceedings
of the International Conference on Learning Rep-
resentations, ICLR. http://arxiv.org/abs/
1412.6980.

Thomas N. Kipf and Max Welling. 2016. Semi-
supervised classification with graph convolutional
networks. In Proceedings of the International Con-
ference on Learning Representations, ICLR. http:
//arxiv.org/abs/1609.02907.

Yann LeCun, Leon Bottou, Yoshua Bengio, and Patrick
Haffner. 2001. Gradient-based learning applied to
document recognition. In Proceedings of Intelligent
Signal Processing.

Tal Linzen, Emmanuel Dupoux, and Yoav Goldberg.
2016. Assessing the ability of lstms to learn
syntax-sensitive dependencies. Transactions of the
Association for Computational Linguistics 4:521–
535. https://www.transacl.org/ojs/
index.php/tacl/article/view/972.

Ding Liu and Daniel Gildea. 2010. Semantic role fea-
tures for machine translation. In Proceedings of
the23rd International Conference on Computational
Linguistics, COLING. pages 716–724. http://
aclweb.org/anthology/C10-1081.

Diego Marcheggiani, Anton Frolov, and Ivan Titov.
2017. A simple and accurate syntax-agnostic
neural model for dependency-based semantic role
labeling. In Proceedings of the 21st Confer-
ence on Computational Natural Language Learning,
CoNLL. pages 411–420. https://doi.org/
10.18653/v1/K17-1041.

Diego Marcheggiani and Ivan Titov. 2017. En-
coding sentences with graph convolutional net-
works for semantic role labeling. In Proceed-
ings of the 2017 Conference on Empirical Methods
in Natural Language Processing, EMNLP. pages
1506–1515. https://aclanthology.info/
papers/D17-1159/d17-1159.

Maria Nadejde, Siva Reddy, Rico Sennrich, Tomasz
Dwojak, Marcin Junczys-Dowmunt, Philipp Koehn,
and Alexandra Birch. 2017. Predicting target lan-
guage CCG supertags improves neural machine
translation. In Proceedings of the Second Con-
ference on Machine Translation, WMT . pages 68–
79. http://aclanthology.info/papers/
W17-4707/w17-4707.

Martha Palmer, Paul Kingsbury, and Daniel Gildea.
2005. The proposition bank: An annotated cor-
pus of semantic roles. Computational Linguistics
31(1):71–106. https://doi.org/10.1162/
0891201053630264.

Kishore Papineni, Salim Roukos, Todd Ward, and
Wei-Jing Zhu. 2002. Bleu: a method for au-
tomatic evaluation of machine translation. In
Proceedings of the 40th Annual Meeting of the
Association for Computational Linguistics, ACL.
pages 311–318. http://www.aclweb.org/
anthology/P02-1040.pdf.

Franco Scarselli, Marco Gori, Ah Chung Tsoi, Markus
Hagenbuchner, and Gabriele Monfardini. 2009. The
graph neural network model. IEEE Trans. Neu-
ral Networks 20(1):61–80. https://doi.org/
10.1109/TNN.2008.2005605.

Rico Sennrich and Barry Haddow. 2016. Linguistic In-
put Features Improve Neural Machine Translation.
In Proceedings of the First Conference on Machine
Translation, WMT . pages 83–91. http://www.
aclweb.org/anthology/W16-2209.

Rico Sennrich, Barry Haddow, and Alexandra Birch.
2016. Neural machine translation of rare words with
subword units. In Proceedings of the 54th Annual
Meeting of the Association for Computational Lin-
guistics, ACL. pages 1715–1725. http://www.
aclweb.org/anthology/P16-1162.

Mihai Surdeanu, Richard Johansson, Adam Meyers,
Lluı́s Màrquez, and Joakim Nivre. 2008. The
CoNLL 2008 shared task on joint parsing of syn-
tactic and semantic dependencies. In Proceed-
ings of the Twelfth Conference on Computational
Natural Language Learning, CoNLL. pages 159–
177. http://aclweb.org/anthology/W/
W08/W08-2121.pdf.

Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob
Uszkoreit, Llion Jones, Aidan N. Gomez, Lukasz
Kaiser, and Illia Polosukhin. 2017. Attention is all
you need. In Advances in Neural Information Pro-
cessing Systems 30: Annual Conference on Neural
Information Processing Systems, NIPS. pages 6000–
6010. http://papers.nips.cc/paper/
7181-attention-is-all-you-need.

Warren Weaver. 1955. Translation. Machine transla-
tion of languages 14:15–23.

Dekai Wu and Pascale Fung. 2009. Semantic roles for
SMT: A hybrid two-pass model. In Proceedings
of the Human Language Technologies: Conference
of the North American Chapter of the Association
of Computational Linguistics, NAACL. pages 13–
16. http://www.aclweb.org/anthology/
N09-2004.

492


