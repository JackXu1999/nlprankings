



















































Course Concept Expansion in MOOCs with External Knowledge and Interactive Game


Proceedings of the 57th Annual Meeting of the Association for Computational Linguistics, pages 4292–4302
Florence, Italy, July 28 - August 2, 2019. c©2019 Association for Computational Linguistics

4292

Course Concept Expansion in MOOCs with External Knowledge and
Interactive Game

Jifan Yu1,2, Chenyu Wang3, Gan Luo1,2 ,Lei Hou1,2∗, Juanzi Li1,2, Zhiyuan Liu1,2, Jie Tang1,2
1Dept. of Computer SCi.& Tech., Tsinghua University, China 100084

2KIRC, Institute for Artificial Intelligence, Tsinghua University, China 100084
3Shenyuan Honors College, Beihang University, China 100083
{yujf18@mails.,luog18@mails.}tsinghua.edu.cn

{houlei@,lijuanzi@,liuzy@,jietang@}tsinghua.edu.cn
wangchenyu@buaa.edu.cn

Abstract

As Massive Open Online Courses (MOOCs)
become increasingly popular, it is promising to
automatically provide extracurricular knowl-
edge for MOOC users. Suffering from se-
mantic drifts and lack of knowledge guidance,
existing methods can not effectively expand
course concepts in complex MOOC environ-
ments. In this paper, we first build a novel
boundary during searching for new concepts
via external knowledge base and then uti-
lize heterogeneous features to verify the high-
quality results. In addition, to involve human
efforts in our model, we design an interac-
tive optimization mechanism based on a game.
Our experiments on the four datasets from
Coursera1 and XuetangX2 show that the pro-
posed method achieves significant improve-
ments(+0.19 by MAP) over existing methods.
The source code3 and datasets4 have been pub-
lished.

1 Introduction

Self-determination theory was first formally pro-
posed by Deci and Ryan in (Deci et al., 1991),
suggesting that educators should support students
in autonomously discovering and learning course-
related knowledge. In fact, in addition to the con-
cepts taught in course, many related concepts are
also worthy of learning. Figure 1 shows a real
example from Coursera in Data Structure course.
When the concept Binary Search Tree is taught,
some other concepts, including its similar struc-
tures (Heap), applications (Sorting and Priority
Queue) and advanced researches (Tango Tree5)

∗corresponding author
1https://www.coursera.org/
2http://www.xuetangx.com/
3Source Codes: https://github.com/thukg/

concept-expansion-kg
4Datasets: http://moocdata.cn
5It is an online binary search tree that achieves an

O(log logn) competitive ratio. (Demaine et al., 2007)

also benefit students for further course understand-
ing. However, these concepts are not available
without specifical mention, especially in the era
of Massive Open Online Courses (MOOCs). In

Figure 1: An example of “out-of-teaching” concepts in
the course “Data Structure and Algorithm”.

MOOCs, teachers need to keep a moderate length
of the course to face with thousands of students
with various backgrounds (Jordan, 2015), mak-
ing it infeasible to manually pick out these helpful
concepts. Therefore, there is a clear need to auto-
matically identify course-related concepts, so that
the students can easily acquire additional knowl-
edge and achieve better educational outcomes.

Although much work concerned with extract-
ing course concepts from teaching materials (Kay
and Holden, 2002) or course subtitles (Pan et al.,
2017b) has been done, the research in finding the
concepts absent in course materials, which we call
Course Concept Expansion, has not been ex-
plored. Despite abundant work on related top-
ics, including concept expansion or set expan-
sion (Wang and Cohen, 2007; Wang et al., 2015;
Adrian and Manna, 2018), it is far from sufficient
to directly apply these methods in the MOOC en-
vironments due to the following challenges.

First, unlike the set expansion for a clear general
category (e.g., country), course concepts are often
the combinations of multiple categories, which is
easy to cause semantic drift (Curran et al., 2007)
during exploring in different domains (such as
Structures: Heap, Binary Tree and Algorithms:
Divide and Conquer, Greedy Algorithm). Second,
the features for manifesting course-related con-
cepts are heterogeneous. As shown in Figure 1,

https://www.coursera.org/
http://www.xuetangx.com/
https://github.com/thukg/concept-expansion-kg
https://github.com/thukg/concept-expansion-kg
http://moocdata.cn


4293

we regard Heap as a course concept due to its sim-
ilar structure while Binary Search Tree is a prereq-
uisite concept of Tango Tree. Thus mere context
information is not enough for effective expansion.
Third, as an application-oriented task, it is benefi-
cial to involve human interactions. How to prop-
erly leverage the feedback from MOOC users to
obtain a better performance for concept expansion
remains a challenging issue.

To address the above problems, we propose a
three-stage course concept expansion model. In-
spired by the idea of concept space (Hori, 1997),
we first build an accurate boundary for a given
course to alleviate the semantic drift during can-
didate concept generation from an external knowl-
edge base. Then we transform the expansion into a
binary classification problem as previous positive
unlabeled learning methods for set expansion (Li
et al., 2010; Wang et al., 2017). Three types of fea-
tures are proposed to incorporate heterogeneous
information into classifier to identify high-quality
concepts among candidates. Finally, we design a
lightweight but attractive top-student game to sub-
tly collect MOOC users’ feedback and iteratively
optimize the expansion results. For evaluation, we
compare the proposed method with 4 representa-
tive set expansion methods on real courses from
Coursera and XuetangX, and further conduct on-
line evaluation in the game mechanism.

Contributions. Our contributions include: a)
the first attempt, to the best of our knowledge, sys-
tematically investigate the problem of course con-
cept expansion in MOOCs; b) proposal of an ef-
fective three-stage model for course concept ex-
pansion using an external knowledge base and in-
teractive game; c) four benchmark datasets using
real courses from Coursera and XuetangX.

2 Problem Formulation

In this section, we first give some necessary defi-
nitions and then formulate the problem of course
concept expansion.

A Course corpus is composed by n courses in
the same subject area, denoted as D = {Cj}nj=1,
where Cj is one course. We assume that course
Cj = {vij}

mj
i=1 consists of mj course videos,

where vij stands for the i-th video. Following
(Pan et al., 2017b), we define Course Concepts
are the subjects taught in the course denoted as
M = {ci}|M|i=1 .

Existing work can extract course concepts M

from course corpusD, butD could inevitably miss
some important course concepts (as illustrated in
Figure 1). Therefore, there is a clear need to ex-
pand the course concepts beyondM using exter-
nal resources. In this paper, we focus on the ex-
pansion using external knowledge bases.

Knowledge Base is formally defined as KB =
(E,R), where E = {ei}|E|i=1 represents all con-
cepts, R = {ri}|R|i=1 represents the relationships
between concepts, and (ei, rj , ek) is a triple inKB
meaning ei has relationship rj with ek.

Course Concept Expansion Using Knowl-
edge Base in MOOCs is formally defined as fol-
lows. Given the course concepts M and knowl-
edge base KB, Course Concept Expansion returns
a ranked list of expanded concepts Ec ⊂ E, and
outputs si for ei ∈ Ec to indicate its likelihood to
be an expanded concept of D.

3 Method

To appropriately expand course concepts in
MOOCs, we need to address three crucial prob-
lems. 1. How to alleviate semantic drift? 2. How
to employ heterogeneous information to identify
high-quality expanded concepts? 3. How to prop-
erly involve human efforts to optimize the expan-
sion result? In this section, we introduce our novel
course concept expansion model in three stages.

Figure 2: Framework of course concept expansion.

(1)Candidate Generation: To reduce semantic
drift, a dynamic boundary is set during our search-
ing for new concepts in KB. We only admit the
concepts within the boundary as candidates.

(2)Concept Classification: To leverage hetero-
geneous information in expansion, we propose
three types of novel features to build a classifier,
identifying the high-quality expansion concepts
among candidates and rerank the result list.

(3)Game-based Optimization: To involve hu-
man efforts, we creatively design an interactive
online game named top-student game which has
been applied in a real MOOC platform to collect



4294

Figure 3: The concept space boundary is fitted in process of searching candidates.

user feedback and cyclically optimize the expan-
sion process at multiple levels.

3.1 Candidate Generation
In this section, we present an unsupervised em-
bedding based algorithm that iteratively gener-
ates ranked concept candidates from an external
knowledge base KB. In particular, we build a
boundary to avoid semantic drift based on the fol-
lowing concept space assumption.
Assumption 3.1 A course is a concept space
which contains one or more concept clusters.

The idea of concept space was proposed and ap-
plied in digital teaching and ontology engineering
(Hori, 1997; Cassidy et al., 2006). We extend the
assumption by considering concepts’ polycentric
clustering pattern (e.g., Data Structure course’s
concepts mainly gather in several clusters, such as
graph algorithms, binary trees, etc.). As shown in
Figure 3, we initialize the course concepts in one
loose cluster and separate the gathering ones into
new clusters during candidate generation. An ex-
plicit boundary of course is dynamically formed
by its clusters to avoid semantic drift.

Given the course corpus D and knowledge base
KB = (E,R), we first utilize the method in (Pan
et al., 2017b,a) to extract course concepts M.
Note that we remove the extracted results which
do not exist inE, i.e.,M⊂ E, to facilitate follow-
ing candidate generation. We use bold-face let-
ters to denote the embeddings of the correspond-
ing terms (i.e., ci is the embedding of ci).

Before introducing the algorithm details, we
first define the concept cluster as follows.
Definition 3.1 A concept cluster H is formed
by several semantically related course concepts
{ci}i=1,...,|H|, and is formally represented as a hy-
persphere (o, γ) with o and γ denoting its center
and radius respectively. Mathematically,

o =
∑

ci∈H
ci/|H|

γ = maxci∈H edis(o, ci)

where edis(·, ·) returns the Euclidean distance be-
tween the input vectors.

Note that the center o may be a “virtual” concept,
i.e., it does not correspond to any known concept
in M or E. To facilitate the generation process,
we introduce a special subset SH ⊂ H that in-
cludes a fixed size τ (τ is experimentally set to 8)
of representative concepts as seeds. We always se-
lect the “actual” concepts nearest to the center o,
which means that SH might change dynamically
during the generation process. The candidate gen-
eration algorithm contains two phases: initializa-
tion and searching.
Initialization: We initialize a concept cluster H0
with all the concepts inM (as shown in Figure 3),
calculate its center oH0 and radius γH0 , and select
the representative subset SH0 . Then following a
predefined order6, we adapt the single-pass online
clustering (Guha et al., 2003) to group the con-
cepts into potential clusters. The clustering algo-
rithm sequentially processes the concepts, one at
a time, and grows clusters incrementally. A con-
cept ci is absorbed by a previously-generated clus-
ter Hi if its Euclidean distance to a concept in Hi
is below a predefined threshold7; otherwise, the
concept is treated a new potential cluster. Finally,
we successfully partition the course concepts M
into L potential clusters H1, H2, . . . ,HL.
Searching: For each concept cij in a potential
cluster Hi, we search its directly-connected con-
cepts in knowledge base KB, e.g., (cij , r, e) with
e ∈ E and r ∈ R, and use the distance between e
and cij to determine whether to merge it into Hi.
Similar to the single-pass clustering, and merge it
into Hi if edis(e, cij) < minc∈SHi edis(oHi , c).

6The course concepts are extracted with the method pro-
posed in Pan et al. (2017b), which also assigns a confidence
score for each concept. Here we sort the extracted concepts
by the confidence score in descending order.

7In experiment, it is set to the minimal distance be-
tween representative concepts and the center of H0, i.e.,
minc∈SH0 edis(oH0 , c)



4295

During the process, we separate a cluster from H0
whenever its size reaches τ (i.e., it is big enough to
select representative concepts), updateH0 (includ-
ing oH0 , γH0 and SH0) and calculate its own pa-
rameters. For those potential clusters whose size
are less than τ , we use oH0 and and SH0 to make
the above decision. When e is merged into Hi, we
define the following confidence score se to mea-
sure its likelihood to be a course concept,
se = cos(e, cij) +

∑
cik∈Hi

cos(cik, cij)× cos(e, cik) (1)

where cos(·, ·) returns the cosine similarity of the
input vectors.

After the expansion for all concepts in M, we
obtain the expanded concept setE1c ∈ E. Then we
sort E1c by se in descending order and iteratively
repeat the search phase for E1c to obtain E

2
c . The

algorithm stops when no concepts in E could be
merged. Finally, we achieve Ec =

⋃
iE

i
c and sort

it by se in descending order as candidate set.
It’s worth noting that each final candidate e ∈

Ec is directly or indirectly related to a course con-
cept c ∈ M. e and c are connected by a search
path c → r1 → e1 → . . . → e, where ei ∈ E
and ri ∈ R are concept and relation in KB, and
we record such path (denoted as path(e)) to hold
more semantics. The whole process is summa-
rized in Algorithm 1. Specifically, due to the huge
number of operations for finding nearest concepts,
we use K-D Tree8 to store concept vectors, which
greatly improves the time efficiency.

3.2 Concept Classification
To integrate heterogeneous information in ex-
pansion, we propose three features from various
sources and rerank the candidates after classifica-
tion. As a binary classification problem, all exist-
ing classifiers can be applied, and we experimen-
tally select XGboost (Chen and Guestrin, 2016).
In this section, we introduce the three types of fea-
tures and how we partially rerank the candidates.
Confidence Score. In accordance to our assump-
tion, the confidence score se represents the de-
gree of remoteness between the candidate concept
e and the concept cluster H to which it belongs.
Thus we select it as the first feature to capture a
candidate’s basic relevance to the course.
Search Path Encoding. During candidate gener-
ation, the search paths insinuate the semantic re-
lations between course concepts. Taking “Floyd

8K-D tree is a useful data structure for nearest neighbor
searches (Wikipedia).

Algorithm 1: Candidate Generation
Input:M, KB = (E,R), τ
Output: Ec

1 SortM, initialize H0 and further partition into
H1, H2, . . . , HL

2 t = 0;E0c =M
3 do
4 Et+1c = ∅
5 for cij ∈ Hi ⊂ Etc has related concept e ∈ E do
6 if edis(e, cij) < minc∈SHi edis(oHi , c)

then
7 Et+1c = E

t+1
c ∪ {e}

8 Merge e into Hi, calculate se, record
path(e) and update Hi

9 if |Hi| ≥ τ then
10 Separate Hi from H0 and update H0
11 end
12 end
13 Ec = Ec ∪ Et+1c
14 end
15 Sort Et+1c by se and t+ = 1
16 while Etc 6= ∅;
17 Sort Ec by se

Algorithm” as an example, its search path, “BFS
→ InstanceOf → Graph Algorithms → Instance
→ Floyd Algorithm”, indicates that “Floyd Algo-
rithm is a sibling of course concept “BFS”. To
make effective use of this semantic information,
we employ an RNN encoder-decoder neural net-
work (Cho et al., 2014) to encode path(e) for can-
didate e. Specifically, we train the neural network
to take path(e) as input and output the same se-
quence. Thus, we can obtain a fixed-length vec-
tor representation of path(e) from the final hidden
state of the RNN encoder.
Prerequisite Features. The course concepts also
have an unique relationship called Prerequisite
(Margolis and Laurence, 1999). Prerequisite con-
cept pair (A,B) means if someone wants to study
A, he/she is better to understand B in advance
(e.g., Binary Tree is a prerequisite concept to
Black-Red Tree), which indicates how concepts
in the course are connected. There are a few
previous efforts to extract prerequisite relations
from Wikipedia (Talukdar and Cohen, 2012; Liang
et al., 2015), textbooks (Yosef et al., 2011; Wang
et al., 2016) and MOOCs (Pan et al., 2017a).
In this paper, we select five features from (Pan
et al., 2017a) that only rely on the course text,
and Pv(a, b) is the combination of these five fea-
tures reflecting the prerequisite likelihood of a to
b. Since these features can only measure the rela-
tionship between the two concepts that exist in the
course, we calculate the prerequisite feature of e



4296

using its search root phrase ci as follows:

Pf(e) =
cos 〈e, ci〉 ∗

∑
cj∈M Pv(ci, cj)

|M|
(2)

Partial Reranking. After feature extraction and
classification, each candidate is labeled with a tag
P (positive) or N (negative). Then we partially ad-
just the rankings in low-confidence interval to im-
prove the recall. We define a threshold α ∈ [0, 1]
to control the reranking range and adjust rankings
after α ∗ |Ec|. Specifically, we sort positive and
negative results separately according to their con-
fidence score s and then place the positive results
before negative ones. Eventually a reranked ex-
pansion list is achieved.

3.3 Game-based Optimization
As an application-oriented task, it is beneficial to
properly introduce human efforts to monitor and
optimize our expansion model. However, the de-
sign of this human-model interaction faces several
challenges. For human, we need to ensure the
quality and sufficiency of their feedback. For the
model, we need to effectively and fully utilize the
provided data in model optimization.

Thanks to the multimedia and web platform of
MOOCs (Volery and Lord, 2000), we are able to
attractively collect feedback from students with di-
verse backgrounds using an online game, which
far exceeds traditional modes in amount. In this
section, we introduce the game design and how the
collected feedback optimize our model.
Game Design. We design our feedback collector,
a game named “Top-Student” by considering its
attractiveness and the quality of collected data.

To make game attractive, we place the game
under each video vij of course D, whose basic
idea is that the player gains the score and com-
petes with other students of the course by deleting
low-quality expanded concepts. It allows users to
quickly start with a simple click-to-delete opera-
tion. Further, we only show expansion results that
are most relevant to the concepts in the video vij ,
which increases the affinity of the users who just
finished the video. Those design facilitates a wider
collection of feedback.

Figure 4 is the game layout in the course of “In-
troduction to Psychology”. The blue concept “IQ”
is a course concept c in video, while the orange
concepts are its relevant expanded concepts Ec.
Users delete low-quality concepts among orange
ones and gain different scores while we always
record the total deletion times of each expanded

concept ei’s (denoted as del(ei)).

Figure 4: Top-Student Game in course ”Introduction to
Psychology”

To ensure data quality, we avoid users’ irrespon-
sible deletion by employing a group-vote scoring
mechanism. Specifically, when a user deletes the
expanded concept ei, he/she gets a score Q =
del(ei)/maxej∈Ec del(ej)− 12 , i.e., every user op-
eration corresponds to a score9 S ∈

[
−12 ,

1
2

]
based

on all existing deletion data, which means that ir-
responsible operations subject to a penalty.

We set up the game by calculating and storing
the expanded concept e ∈ Ec with highest cosine
similarity for each ci as inputs. Finally we get to-
tal deletion del(e) of each e as outputs. The Top-
Student Game has been applied in several courses
at one of largest Chinese MOOC websites, Xue-
tangX and collected over 10,000 records as of this
writing.
Multi-level Optimization. The user feedback af-
fects both candidate generation in Section 3.1 and
concept classification in Section 3.2 to perform a
multi-level optimization.

We first define and calculate the dele-
tion ratio of a candidate ei as Dr(ei) =
del(ei)/maxej∈Ec(del(ej)). The value reflects
the acceptance of ei comparing with the other ex-
pansion results. Then we present the optimization
at two levels.

Candidate Generation: The confidence score
se in Equation 1 is updated, reducing the likeli-
hood from its directly related concept according
to its deletion ratio Dr(e).

se =cos(e, cij)× (1−Dr(e))

+
∑

cik∈Hi

cos(cik, cij)× cos(e, cik) (3)

Concept Classification: We regard deletion ra-
tio dr(e) as a new feature to incorporate user in-
sights into our classifier.

In this way, user feedback is applied to each pro-
cess of the model, and new results generated after

9In real application, the value is enlarged to [−5, 5]



4297

optimization are also periodically entered into the
game to collect feedback again. Finally it iterates
over and gets high-quality expansion results.

4 Experimental Evaluation

4.1 Datasets

Since there is no publicly available dataset for
course concept expansion in MOOCs, we use two
different domains of Chinese and English courses:
“Data Structure and Algorithm” and “Introduc-
tion to Psychology” to construct four datasets10

through a three-stage process.
First, for each domain, we select its most rele-

vant English courses from Coursera and Chinese
courses from XuetangX, e.g., for EN-DSA, we se-
lect 3 courses11 of 3 universities and obtain a total
of 449 videos. Then, we use the method of Pan
(2017b) to extract the course concepts and manu-
ally select the high-quality ones as the course con-
cepts M. Finally, we take XLORE (Jin et al.,
2018) as KB to search for related course concepts
and manually labeled the reasonable expansion re-
sults. For each domain, we collect 100,000 related
concepts and record their search path to train the
encoder in Section 3.2. But the large amount re-
quires arduous human labeling work, thus we only
pick 800 expanded concepts with the highest av-
erage cosine similarity to the course concepts to
label. For each concept, two human annotators
majoring in the corresponding domain are asked
to label them as “0: Not related” or “1: Related ”
based on their own knowledge. Thus, each dataset
is doubly annotated, and pearson correlation co-
efficient is applied to assess inter-annotator agree-
ment. A candidate is labeled as a related concept
only if the two annotators are in agreement. For
each dataset, we split it into training (400), valida-
tion (200) and test set (200).

Table 1 presents the detailed statistics, where
#courses, #videos, |M|, 1-Label and 0-Label are
the number of courses, videos, course concepts,
positive and negative labels. We can only obtain
#deletions from game for Chinese datasets.

4.2 Experiment Settings

Basic Setting. We choose GloVe (Pennington
et al., 2014) as our English word embedding, (Li
et al., 2018) as our Chinese word embedding. We

10The datasets will be publicly available later.
11The three courses: Algorithms (Princeton), Algorithms

(Stanford), Data Structure and Algorithm (UC San Diego).

DSA PSY
ZH EN ZH EN

#courses 1 3 1 1
#videos 490 465 57 478
|M| 305 201 575 470

1-Label 398 232 237 246
0-Label 402 568 563 554

correlation 0.696 0.734 0.712 0.681
#deletions 6939 - 4920 -

Table 1: Datasets Statistics

follow the same process of (Cho et al., 2014) to
train the path encoder and (Pan et al., 2017a) to get
prerequisite features for classifier in Section 3.2.

Baseline Methods. We compare our models
(simple candidate generation results denoted as
MOOC) with four typical methods which employ
different similarity metrics. MOOC-C means our
model with Classification and MOOC-CG means
the whole model added game optimization.

• PR Graph based method: We build the candi-
dates and course concepts into a graph. When the
similarity between two concepts exceeds a thresh-
old τPR, there is a link between them. The PageR-
ank score of each candidate is finally used for sort-
ing. A most famous method employing pagerank
is SEAL (Wang and Cohen, 2007).

• SEISA SEISA(He and Xin, 2011) is an entity
set expansion system developed by Microsoft af-
ter SEAL and outperforms traditional graph-based
methods by an original unsupervised similarity
metric. We implement its Dynamic Thresholding
algorithm to sort expanded concepts.

• EBM Embedding based method mainly utilizes
context information to examine the similarity be-
tween expanded concepts and seeds like (Mamou
et al., 2018). For each expanded concept e, we cal-
culate the pairwise cosine similarity with course
concepts M in word2vec and use the average as
golden standard to rank the expanded concept list.

• PUL PU learning is a semi-supervised learning
model regarding set expansion as a binary classifi-
cation task. We employ the same setting as (Wang
et al., 2017) to classify and sort concepts.

Evaluation Metrics. Our objective is to generate
a ranked list of expanded concepts. Thus, to eval-
uate the ranking result, we use the Mean Average
Precision(MAP) as our evaluation metric, which
is the preferred metric in information retrieval for
evaluating ranked lists.



4298

ZH-PSY ZH-DSA ZH-Avg EN-PSY EN-DSA EN-Avg
PR 0.849 0.519 0.684 0.833 0.822 0.827

SEISA 0.877 0.448 0.663 0.814 0.890 0.852
EBM 0.875 0.421 0.648 0.777 0.858 0.817
PUL 0.855 0.680 0.768 0.734 0.795 0.765

MOOC 0.894 0.785 0.839 0.781 0.933 0.857
MOOC-C 0.939 0.804 0.872 0.922 0.976 0.949

MOOC-CG 0.954 0.819 0.886 - - -

Table 2: MAP of different methods on datasets. (SH = 8, α = 0.4).

4.3 Overall Evaluation
Table 2 summarizes the comparing results of dif-
ferent methods on all datasets, and -avg means the
average MAP of datasets in same language. We
find that our method outperforms existing meth-
ods across all 4 datasets12. For example, our
whole model surpasses PageRank based method
and SEISA by about 0.10 on the average of En-
glish courses. Further, we observe the perfor-
mance in following aspects:
For different datasets, our methods stably per-
form at a competitive level while existing meth-
ods fluctuate fiercely. All methods maintain a bet-
ter result in English than Chinese. Especially in
ZH-DSA, existing methods meet a sharp decline at
over 0.17. To find out the reason, we calculate the
average pairwise similarity between the extracted
concepts M in each dataset. Results show that
ZH-DSA contains the most scattered course con-
cepts at a pairwise distance of 0.60 (ZH-PSY, EN-
PSY, EN-DSA at 0.49, 0.50, 0.36). But our ex-
pansion achieves a fine result in ZH-DSA at 0.785,
indicating it effectively relieves the semantic drift
after candidate generation.
For different components of our methods. The
pure candidate generation (MOOC) mainly im-
proves the performance by obvious promotion in
ZH-DSA. The governing improvement exists af-
ter classification (at an average over 0.90), verify-
ing the effectiveness of heterogeneous features we
proposed. Moreover, the game-based optimization
further improves the performance (+0.14), which
proves the power of human efforts and our feed-
back optimization.

4.4 Result Analysis
The size of seed set τ . The seed set size τ con-
trols how many concepts of Ec andM should be

12The improvements are all statistically significant tested
with bootstrap re-sampling with 95% confidence.

(a) The MAP Curve of τ
(when α = 0.4)

(b) The MAP Curve of α
(when τ = 8)

Figure 5: Parameter analysis.

employed to calculate confidence score. We ad-
just τ from 1 to 10 and explore the influence of
τ on Candidate Generation. Figure 5(a) shows the
MAP transmutation. Despite different setting of τ ,
our model maintain a preeminent competitive per-
formance at an average MAP of 0.85 for English
courses and 0.81 for Chinese courses.

Feature Contribution Analysis. To evaluate
the features proposed in Section 3.2 and 3.3,with
highest average F1-score at 0.94 as our classi-
fier and run our approach 4 times on the 2 Chi-
nese datasets, with one different feature deleted in
each test. Table 3 records the changes of P , R
and F1 for each setting. According to the decre-
ment of F1-scores, we find that all the proposed
features are indispensable in classification. Es-
pecially, we observe that search path encode Pe
plays the most important role, decreasing most F1-
score by 7.96%. Besides, user deletion Dr from
game also outstandingly increases the precision of
classifier by 8.21%.

The ranking threshold α. The ranking thresh-
old α is the parameter controls how much ratio of
results in Section 3.1 should be adjusted by classi-
fication. As we increase α, less candidates will be
adjusted, which weakens the role of the classifier.
In Figure 5(b), we set α from 0 to 1 and find that
the performance reaches a peak at an average 0.3



4299

Ignored Feature P R F1
se -2.65% -1.73% -1.83%
Pe -3.97% -10.6% -7.96%
Pf -7.39% -1.55% -3.78%
Dr -8.21% -3.10% -4.93%

Table 3: Contribution analysis of different features. se,
Pe, Pf, Dr are respectively confidence score, search
path encoding, prerequisite features and deletion ratio.

Cr@10 Cr@50 Cr@100
PR 0.034 0.202 0.452

SEISA 0.028 0.210 0.486
EBM 0.043 0.219 0.446
PUL 0.026 0.181 0.424

MOOC 0.028 0.166 0.437
MOOC-C 0.028 0.162 0.412

MOOC-CG 0.028 0.160 0.386

Table 4: Online evaluation results.

of α. The results demonstrate extra information
provided by classifier effectively lifts the recall in
low-confidence area (latter 70% in average).

4.5 Online Evaluation

In particular, our model uses a gamified form to
build a human interface. This interactive design
not only optimizes the model, but can also be used
to evaluate the effectiveness of the model in prac-
tical teaching applications.

By collecting deletion data of the expanded con-
cepts, we can peep whether our expansion results
are really helpful to the MOOC users. In or-
der to quantitatively observe the user’s feedback
on the model, we propose Average Correction
Rate(Cr) as a game-to-model evaluation metric.
This metric is the ratio of the number of times
the user deletes the top n concepts to the to-
tal deletions, and is formally denoted as Cr =∑n

i=1 del(ei)/
∑|Ec|

j=1 del(ej). We set n to 10, 50,
100, and theCr of each methods are listed in Table
4. Higher Cr indicates less users think the expan-
sion results are helpful. From this perspective, our
method is the most helpful to them. For Cr@10,
PUL performs a slight advantage at 0.002. How-
ever, once the range of observation is broadened
to 50 or 100, our method shows an obvious ascen-
dancy. Besides, after adding classifier and game,
user satisfaction further increases, reducing the Cr
by 0.004 and 0.049 at Cr@50 and Cr@100, reit-
erating the improvement of these components.

5 Related Works

Our work is based on phrase extraction in MOOCs
(Pan et al., 2017b) and is relevant to the set expan-
sion problem, which takes a set of seed entities as
input to expand a single category.

Google Sets was an early set expansion system.
It spawned quite a few set expansion techniques,
such as Bayesian Sets (Ghahramani and Heller,
2006), SEAL (Wang and Cohen, 2007), SEISA
(He and Xin, 2011) and others (Sarmento et al.,
2007; Wang and Cohen, 2008; Wang et al., 2015).
They mainly leverage the similarity between en-
tities measured by their co-occurrences in web
texts, wrappers and lists. For example, SEISA em-
ploys iterative similarity aggregation and SEAL
employs PageRank. Recently, SetExpan (Shen
et al., 2017) extend previous works by selecting
context features and (Mamou et al., 2018) skill-
fully employ five different type of context infor-
mation and gain a very competitive result.

Distinctively, PU-Learning methods (Li et al.,
2010; Wang et al., 2017) transform set expansion
into a two-class classification problem. A seed set
is regarded as a set P of positive examples and
candidate set is a set U containing hidden posi-
tive and negative cases. The task of filtering the
candidate set turns to building a classifier to test if
each candidate member is positive or not and this
inspires our classification work.

Our approach also benefits from theories of ped-
agogy. Concept space was first proposed to ben-
efit knowledge comprehension in education(Hori,
1997), and was gradually employed in domain on-
tology representation; Online games were already
used in (Kiili, 2005; Threatt, 2014) education and
were also applied for crowdsourcing information
collection(Yang et al., 2018). Both of them signif-
icantly affected our design of model.

6 Conclusions and Future Work

We conducted a new investigation on automati-
cally course concept expansion in MOOCs. We
precisely define the problem and propose an ac-
tive model to search external knowledge base for
candidate concepts and detect high-quality ones
with a classifier. Moreover, we design a game-
based mechanism to subtly involve human efforts
in model optimization. Experimental results on
online courses with different domains validate the
effectiveness of the proposed method. Promis-
ing future directions would be to investigate how



4300

to utilize user interaction in MOOCs more ade-
quately, as well as how attributes of course con-
cepts can help expanding.

Acknowledgments
The work is supported by NSFC key project
(U1736204, 61533018, 61661146007), Ministry
of Education and China Mobile Joint Fund
(MCM20170301), and THUNUS NExT Co-Lab.

Zhiyuan Liu is supported by the National Key
Research and Development Program of China
(No. 2018YFB1004503).

References
Weronika T. Adrian and Marco Manna. 2018. Nav-

igating online semantic resources forentity set ex-
pansion. In Practical Aspects of Declarative Lan-
guages, pages 170–185, Cham. Springer Interna-
tional Publishing.

Kathryn Cassidy, John Walsh, Brian Coghlan, and De-
clan Dagger. 2006. Using hyperbolic geometry
for visualisation of concept spaces for adaptive e-
learning. In A3H: 1st Inter. Workshop on Authoring
of Adaptive &amp; Adaptable Hypermedia.

Tianqi Chen and Carlos Guestrin. 2016. Xgboost: A
scalable tree boosting system. In Proceedings of the
22nd acm sigkdd international conference on knowl-
edge discovery and data mining, pages 785–794.
ACM.

Kyunghyun Cho, Bart Van Merriënboer, Caglar Gul-
cehre, Dzmitry Bahdanau, Fethi Bougares, Holger
Schwenk, and Yoshua Bengio. 2014. Learning
phrase representations using rnn encoder-decoder
for statistical machine translation. arXiv preprint
arXiv:1406.1078.

James R Curran, Tara Murphy, and Bernhard Scholz.
2007. Minimising semantic drift with mutual exclu-
sion bootstrapping. In Proceedings of the 10th Con-
ference of the Pacific Association for Computational
Linguistics, volume 6, pages 172–180. Citeseer.

Edward L Deci, Robert J Vallerand, Luc G Pelletier,
and Richard M Ryan. 1991. Motivation and edu-
cation: The self-determination perspective. Educa-
tional psychologist, 26(3-4):325–346.

Erik D Demaine, Dion Harmon, John Iacono, and Mi-
hai P a traşcu. 2007. Dynamic optimalityalmost.
SIAM Journal on Computing, 37(1):240–251.

Zoubin Ghahramani and Katherine A Heller. 2006.
Bayesian sets. In Advances in neural information
processing systems, pages 435–442.

Sudipto Guha, Adam Meyerson, Nina Mishra, Rajeev
Motwani, and Liadan O’Callaghan. 2003. Clus-
tering data streams: Theory and practice. IEEE

transactions on knowledge and data engineering,
15(3):515–528.

Yeye He and Dong Xin. 2011. Seisa: set expansion
by iterative similarity aggregation. In Proceedings
of the 20th international conference on World wide
web, pages 427–436. ACM.

Koichi Hori. 1997. Concept space connected to
knowledge processing for supporting creative de-
sign. Knowledge-Based Systems, 10(1):29–35.

Hailong Jin, Chengjiang Li, Jing Zhang, Lei Hou,
Juanzi Li, and Peng Zhang. 2018. Xlore2: Large-
scale cross-lingual knowledge graph construction
and application. Data Intelligence, 1(1):77–98.

Katy Jordan. 2015. Massive open online course com-
pletion rates revisited: Assessment, length and attri-
tion. The International Review of Research in Open
and Distributed Learning, 16(3).

Judy Kay and Sam Holden. 2002. Automatic extrac-
tion of ontologies from teaching document meta-
data. In International Conference on Computers in
Education, 2002. Proceedings., pages 1555–1556.
IEEE.

Kristian Kiili. 2005. Digital game-based learning: To-
wards an experiential gaming model. The Internet
and higher education, 8(1):13–24.

Shen Li, Zhe Zhao, Renfen Hu, Wensi Li, Tao Liu, and
Xiaoyong Du. 2018. Analogical reasoning on chi-
nese morphological and semantic relations. arXiv
preprint arXiv:1805.06504.

Xiao-Li Li, Lei Zhang, Bing Liu, and See-Kiong Ng.
2010. Distributional similarity vs. pu learning for
entity set expansion. In Proceedings of the ACL
2010 Conference Short Papers, pages 359–364. As-
sociation for Computational Linguistics.

Chen Liang, Zhaohui Wu, Wenyi Huang, and C Lee
Giles. 2015. Measuring prerequisite relations
among concepts. In Proceedings of the 2015 Con-
ference on Empirical Methods in Natural Language
Processing, pages 1668–1674.

Jonathan Mamou, Oren Pereg, Moshe Wasserblat,
Alon Eirew, Yael Green, Shira Guskin, Peter Izsak,
and Daniel Korat. 2018. Term set expansion
based nlp architect by intel ai lab. arXiv preprint
arXiv:1808.08953.

Eric Margolis and Stephen Laurence. 1999. Concepts:
core readings. Mit Press.

Liangming Pan, Chengjiang Li, Juanzi Li, and Jie Tang.
2017a. Prerequisite relation learning for concepts
in moocs. In Proceedings of the 55th Annual Meet-
ing of the Association for Computational Linguistics
(Volume 1: Long Papers), volume 1, pages 1447–
1456.



4301

Liangming Pan, Xiaochen Wang, Chengjiang Li,
Juanzi Li, and Jie Tang. 2017b. Course concept ex-
traction in moocs via embedding-based graph prop-
agation. In Proceedings of the Eighth International
Joint Conference on Natural Language Processing
(Volume 1: Long Papers), volume 1, pages 875–884.

Jeffrey Pennington, Richard Socher, and Christo-
pher D. Manning. 2014. Glove: Global vectors for
word representation. In Empirical Methods in Nat-
ural Language Processing (EMNLP), pages 1532–
1543.

Luis Sarmento, Valentin Jijkuon, Maarten De Rijke,
and Eugenio Oliveira. 2007. More like these: grow-
ing entity classes from seeds. In Proceedings of
the sixteenth ACM conference on Conference on in-
formation and knowledge management, pages 959–
962. ACM.

Jiaming Shen, Zeqiu Wu, Dongming Lei, Jingbo
Shang, Xiang Ren, and Jiawei Han. 2017. Setexpan:
Corpus-based set expansion via context feature se-
lection and rank ensemble. In Joint European Con-
ference on Machine Learning and Knowledge Dis-
covery in Databases, pages 288–304. Springer.

Partha Pratim Talukdar and William W Cohen. 2012.
Crowdsourced comprehension: predicting prerequi-
site structure in wikipedia. In Proceedings of the
Seventh Workshop on Building Educational Appli-
cations Using NLP, pages 307–315. Association for
Computational Linguistics.

Monique Threatt. 2014. 7 things you should know
about games and learning.

Thierry Volery and Deborah Lord. 2000. Critical suc-
cess factors in online education. International jour-
nal of educational management, 14(5):216–223.

Chi Wang, Kaushik Chakrabarti, Yeye He, Kris Gan-
jam, Zhimin Chen, and Philip A Bernstein. 2015.
Concept expansion using web tables. In Proceed-
ings of the 24th International Conference on World
Wide Web, pages 1198–1208. International World
Wide Web Conferences Steering Committee.

Richard C Wang and William W Cohen. 2007.
Language-independent set expansion of named en-
tities using the web. In Seventh IEEE international
conference on data mining (ICDM 2007), pages
342–350. IEEE.

Richard C Wang and William W Cohen. 2008. Iterative
set expansion of named entities using the web. In
2008 eighth IEEE international conference on data
mining, pages 1091–1096. IEEE.

Shuting Wang, Alexander Ororbia, Zhaohui Wu, Kyle
Williams, Chen Liang, Bart Pursel, and C Lee
Giles. 2016. Using prerequisites to extract concept
maps fromtextbooks. In Proceedings of the 25th
acm international on conference on information and
knowledge management, pages 317–326. ACM.

Yasheng Wang, Yang Zhang, and Bing Liu. 2017. Sen-
timent lexicon expansion based on neural pu learn-
ing, double dictionary lookup, and polarity associ-
ation. In Proceedings of the 2017 Conference on
Empirical Methods in Natural Language Process-
ing, pages 553–563.

Jingru Yang, Ju Fan, Zhewei Wei, Guoliang Li, Tongyu
Liu, and Xiaoyong Du. 2018. Cost-effective data
annotation using game-based crowdsourcing. Pro-
ceedings of the VLDB Endowment, 12(1):57–70.

Mohamed Amir Yosef, Johannes Hoffart, Ilaria Bor-
dino, Marc Spaniol, and Gerhard Weikum. 2011.
Aida: An online tool for accurate disambiguation of
named entities in text and tables. Proceedings of the
VLDB Endowment, 4(12):1450–1453.

A Probe into the different performance
across datasets

In our overall evaluation part, methods’ perfor-
mance in different datasets is undulating: 1) En-
glish datasets are tend to provide better perfor-
mance. 2) ZH-DSA is a roadblock of methods,
i.e., each method meet a decline in ZH-DSA. To
explore the cause of these phenomenons, we take
a further observation on the situation of datasets in
two aspects.
Looseness of Course concepts.

We calculate the average pairwise similarity of
each dataset, which reflect the alienation of course
concepts. The results are shown in Figure 6. Ob-
viously the datasets in Chinses contains a more
loose M than English datasets. Thus, when ex-
panding concepts in Chinese courses, the new
found concepts are easier to be admitted, for the
radius of cluster may be too large to intercept
low-quality concepts. In another word, semantic
drift is more prone to happen in the two Chinese
datasets. Therefore, it is necessary to avoid seman-
tic drifts in real concept expansion of MOOCs.

Figure 6: Average pairwise similarity of different
datasets.

Specificity of Samples in test set.

http://www.aclweb.org/anthology/D14-1162
http://www.aclweb.org/anthology/D14-1162


4302

(a) Sample distribution of ZH-DSA.

(b) Sample distribution of ZH-PSY.

Figure 7: The sample distribution of two Chinese
datasets. TP, FP, TN, FN are respectively True Positive,
False Positive, True Negative, False Negative samples.

Despite above observation, we still cannot ex-
plain the performance decline in ZH-DSA, for
ZH-PSY also provide a competitive result. A
deeper investigation is formed by finding out the
sample distribution of two Chinese classification
results. We reduce the feature of all test con-
cepts to a 2-Dimension vector and differentiate
their colors according to actual classification re-
sults. When comparing the samples in the two test
sets, we can obtain two main observations. For
one thing ZH-PSY contains more positive sam-
ples. For another thing, the positive and negative
samples are more blended in ZH-DSA. The fun-
damental cause of these characteristics may be the
nature of the courses. The course of Data Struc-
ture and Algorithm in Chinese is interdisciplinary
of Computer Science and Mathematics while ‘In-
trduction to Psychology’ in Chinese is much more
‘pure’, only containing one domain. Thus, hetero-
geneous information is indispensable to some ex-
tent, for it can effectively utilize different features
to query proper expanded concepts.


