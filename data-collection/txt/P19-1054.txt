



















































Classification and Clustering of Arguments with Contextualized Word Embeddings


Proceedings of the 57th Annual Meeting of the Association for Computational Linguistics, pages 567–578
Florence, Italy, July 28 - August 2, 2019. c©2019 Association for Computational Linguistics

567

Classification and Clustering of Arguments with
Contextualized Word Embeddings

Nils Reimers, Benjamin Schiller, Tilman Beck,
Johannes Daxenberger, Christian Stab, Iryna Gurevych

Ubiquitous Knowledge Processing Lab (UKP-TUDA)
Department of Computer Science, Technische Universität Darmstadt

www.ukp.tu-darmstadt.de

Abstract

We experiment with two recent contextual-
ized word embedding methods (ELMo and
BERT) in the context of open-domain argu-
ment search. For the first time, we show
how to leverage the power of contextual-
ized word embeddings to classify and cluster
topic-dependent arguments, achieving impres-
sive results on both tasks and across multiple
datasets. For argument classification, we im-
prove the state-of-the-art for the UKP Senten-
tial Argument Mining Corpus by 20.8 percent-
age points and for the IBM Debater - Evidence
Sentences dataset by 7.4 percentage points.
For the understudied task of argument clus-
tering, we propose a pre-training step which
improves by 7.8 percentage points over strong
baselines on a novel dataset, and by 12.3 per-
centage points for the Argument Facet Simi-
larity (AFS) Corpus.1

1 Introduction

Argument mining methods have been applied to
different tasks such as identifying reasoning struc-
tures (Stab and Gurevych, 2014), assessing the
quality of arguments (Wachsmuth et al., 2017),
or linking arguments from different documents
(Cabrio and Villata, 2012). Broadly speaking, ex-
isting methods either approach argument mining
from the discourse-level perspective (aiming to an-
alyze local argumentation structures), or from an
information-seeking perspective (aiming to detect
arguments relevant to a predefined topic). While
discourse-level approaches mostly focus on the
analysis of single documents or document col-
lections (Eger et al., 2017), information-seeking
approaches need to be capable of dealing with
heterogeneous sources and topics (Shnarch et al.,
2018) and also face the problem of redundancy, as

1Code and models available: https://github.com/UKPLab/
acl2019-BERT-argument-classification-and-clustering

arguments might be repeated across sources. As a
result, this perspective naturally calls for a subse-
quent clustering step, which is able to identify and
aggregate similar arguments for the same topic. In
this work, we focus on the latter perspective, re-
ferring to it as open-domain argument search, and
show how contextualized word embeddings can be
leveraged to overcome some of the challenges in-
volved in topic-dependent argument classification
and clustering.

Identifying arguments for unseen topics is a
challenging task for machine learning systems.
The lexical appearance for two topics, e.g. “net
neutrality” and “school uniforms”, is vastly dif-
ferent. Hence, in order to perform well, systems
must develop a deep semantic understanding of
both the topic as well as the sources to search for
arguments. Even more so, clustering similar argu-
ments is a demanding task, as fine-grained seman-
tic nuances may determine whether two arguments
(talking about the same topic) are similar. Figure
1 gives an example of arguments on the topic “net
neutrality”. Both arguments center around the as-
pect of “equal access for every Internet user” but
are differently phrased.

A1 The ultimate goal is fast, affordable, open In-
ternet access for everyone, everywhere.
A2 If this does not happen, we will create an In-
ternet where only users able to pay for privileged
access enjoy the network’s full capabilities.

Figure 1: Similar pro arguments for the topic “net neu-
trality”.

Contextualized word embeddings, especially
ELMo (Peters et al., 2018) and BERT (Devlin
et al., 2018) could offer a viable solution to this
problem. In contrast to traditional word embed-
dings like word2vec (Mikolov et al., 2013) or

www.ukp.tu-darmstadt.de
https://github.com/UKPLab/acl2019-BERT-argument-classification-and-clustering
https://github.com/UKPLab/acl2019-BERT-argument-classification-and-clustering


568

GloVe (Pennington et al., 2014), these methods
compute the embeddings for a sentence on the fly
by taking the context of a target word into account.
This yields word representations that better match
the specific sense of the word in a sentence. In
cross-topic scenarios, with which we are dealing
in open-domain argument search, contextualized
representations need to be able to adapt to new,
unseen textual topics. We thus analyze ELMo and
BERT in a cross-topic scenario for the tasks of ar-
gument classification and clustering on four differ-
ent datasets. For argument classification, we use
the UKP Sentential Argument Mining Corpus by
Stab et al. (2018b) and the IBM Debater R©: Evi-
dence Sentences corpus by Shnarch et al. (2018).
For argument clustering, we introduce a novel
corpus on aspect-based argument clustering and
evaluate the proposed methods on this corpus as
well as on the Argument Facet Similarity Corpus
(Misra et al., 2016).

The contributions in this publications are:
(1) We frame the problem of open-domain argu-
ment search as a combination of topic-dependent
argument classification and clustering and dis-
cuss how contextualized word embeddings can
help to improve these tasks across four different
datasets. (2) We show that our suggested methods
improve the state-of-the-art for argument classifi-
cation when fine-tuning the models, thus signif-
icantly reducing the gap to human performance.
(3) We introduce a novel corpus on aspect-based
argument similarity and demonstrate how contex-
tualized word embeddings help to improve cluster-
ing similar arguments in a supervised fashion with
little training data.

We present the four different datasets used in
this work in Section 3, before we discuss our ex-
periments and results on argument classification
and clustering in Sections 4 and 5. We conclude
our findings for open-domain argument search in
Section 6.

2 Related Work

In the following, we concentrate on the funda-
mental tasks involved in open-domain argument
search. First, we discuss work that experiments
with sentence-level argument classification. Sec-
ond, we review work that provides us with the nec-
essary tools to cluster extracted arguments by their
similarity. Third, we take a deeper look into con-
textualized word embeddings.

Argument Classification, as viewed in this
work, aims to identify topic-related, sentence-
level arguments from (heterogeneous) documents.
Levy et al. (2014) identify context-dependent
claims (CDCs) by splitting the problem into
smaller sub-problems. Rinott et al. (2015) extend
this work with a pipeline of feature-based mod-
els that find and rank supporting evidence from
Wikipedia for the CDCs. However, neither of
these approaches leverage the potential of word
embeddings in capturing semantic relations be-
tween words.

Shnarch et al. (2018) aim to identify topic-
dependent evidence sentences by blending large
automatically generated training sets with man-
ually annotated data as initialization step. They
use a BiLSTM with GloVe embeddings and inte-
grate the topic via attention. For topic-dependent
argument detection, Stab et al. (2018b) deploy a
modified LSTM-cell that is able to directly in-
tegrate topic information. They show the im-
portance of topic information by outperforming a
BiLSTM baseline by around 4.5pp. Yet, their best
model only shows mediocre recall for arguments,
while showing an even lower precision when com-
pared to their baseline. As argument classification
is the first logical step in open-domain argument
search, a low performance would eventually prop-
agate further down to the clustering of similar ar-
guments. Hence, in this work, we aim to tackle
this problem by leveraging superior contextualized
language models to improve on precision and re-
call of argumentative sentences.

Argument Clustering aims to identify sim-
ilar arguments. Previous research in this area
mainly used feature-based approaches in com-
bination with traditional word embeddings like
word2vec or GloVe. Boltužić and Šnajder (2015)
applied hierarchical clustering on semantic simi-
larities between users’ posts from a two-side on-
line debate forum using word2vec. Wachsmuth
et al. (2018) experimented with different word em-
beddings techniques for (counter)argument simi-
larity. Misra et al. (2016) presented a new cor-
pus on argument similarity on three topics. They
trained a Support Vector Regression model us-
ing different hand-engineered features including
custom trained word2vec. Trabelsi and Zaı̈ane
(2015) used an augmented LDA to automatically
extract coherent words and phrases describing ar-
guing expressions and apply constrained cluster-



569

ing to group similar viewpoints of topics.
In contrast to previous work, we apply argu-

ment clustering on a dataset containing both rel-
evant and non-relevant arguments for a large num-
ber of different topics which is closer to a more
realistic setup.

Contextualized word embeddings compute a
representation for a target word based on the spe-
cific context the word is used within a sentence.
In contrast, traditional word embedding methods,
like word2vec or GloVe, words are always mapped
to the same vector. Contextualized word embed-
dings tackle the issue that words can have differ-
ent senses based on the context. Two approaches
that became especially popular are ELMo (Peters
et al., 2018) and BERT (Devlin et al., 2018).

ELMo (Embeddings from Language Models)
representations are derived from a bidirectional
language model, that is trained on a large corpus.
Peters et al. combine a character-based CNN with
two bidirectional LSTM layers. The ELMo repre-
sentation is then derived from all three layers.

BERT (Bidirectional Encoder Representations
from Transformers) uses a deep transformer net-
work (Vaswani et al., 2017) with 12 or 24 lay-
ers to derive word representations. Devlin et al.
presented two new pre-training objectives: the
“masked language model” and the “next sentence
prediction” objectives. They demonstrate that
the pre-trained BERT models can be fine-tuned
for various tasks, including sentence classification
and sentence-pair classification.

ELMo and BERT were primarily evaluated on
datasets where the test and training sets have com-
parable distributions. In cross-topic setups, how-
ever, the distributions for training and testing are
vastly different. It is unclear, whether ELMo and
BERT will be able to adapt to this additional chal-
lenge for cross-topic argument mining.

3 Datasets

No dataset is available that allows evaluating
open-domain argument search end-to-end. Hence,
we analyze and evaluate the involved steps (argu-
ment classification and clustering) independently.

3.1 Argument Classification

To our knowledge, to date there are only two suit-
able corpora for the task of topic-dependent argu-
ment classification.

UKP Corpus. The UKP Sentential Argument

Mining Corpus by Stab et al. (2018b) (hence-
forth: UKP corpus) annotated 400 documents
with 25,492 sentences on eight controversial top-
ics with the labels: pro/con/no argument.

IBM Corpus. The IBM Debater R©: Evidence
Sentences by Shnarch et al. (2018) (henceforth:
IBM corpus) contains 118 topics drawn from dif-
ferent debate portals. For each topic, Shnarch
et al. (2018) extracted sentences from Wikidata
that were in turn annotated by crowd-workers (10
for each topic-sentence pair) with one of the two
labels: evidence or no evidence in regard to the
topic.

3.2 Argument Clustering

Topic-dependent argument clustering is an under-
studied problem with few resources available. Ar-
guments on controversial topics usually address
a limited set of aspects, for example, many ar-
guments on “nuclear energy” address safety con-
cerns. Argument pairs addressing the same aspect
should be assigned a high similarity score, and ar-
guments on different aspects a low score. To date,
the only available resource of that kind we are
aware of, is the Argument Facet Similarity (AFS)
Corpus (Misra et al., 2016).

AFS Corpus. The AFS corpus annotates simi-
larities of arguments pairwise. Misra et al. (2016)
aimed to create automatic summaries for contro-
versial topics. As an intermediate step, they ex-
tracted 6,000 sentential argument pairs from cu-
rated online debating platforms for three topics
and annotated them on a scale from 0 (“different
topic”) to 5 (“completely equivalent”). A draw-
back of this corpus is that the arguments are cu-
rated, i.e., the dataset does not include noise or
non-relevant arguments. Furthermore, the corpus
covers only three different topics.

UKP ASPECT Corpus. To remedy these
shortcomings, we create a new corpus with anno-
tations on similar and dissimilar sentence-level ar-
guments (Stab et al., 2018b), referred to as the Ar-
gument Aspect Similarity (UKP ASPECT) Corpus
in the following.2 The UKP ASPECT corpus con-
sists of sentences which have been identified as ar-
guments for given topics using the ArgumenText
system (Stab et al., 2018a). The ArgumenText
system expects as input an arbitrary topic (query)
and searches a large web crawl for relevant docu-

2The dataset is available at http://www.ukp.tu-
darmstadt.de/data

http://www.ukp.tu-darmstadt.de/data
http://www.ukp.tu-darmstadt.de/data


570

ments. Finally, it classifies all sentences contained
in the most relevant documents for a given query
into pro, con or non-arguments (with regard to the
given topic).

We picked 28 topics related to currently dis-
cussed issues from technology and society. To bal-
ance the selection of argument pairs with regard
to their similarity, we applied a weak supervision
approach. For each of our 28 topics, we applied
a sampling strategy that picks randomly two pro
or con argument sentences at random, calculates
their similarity using the system by Misra et al.
(2016), and keeps pairs with a probability aim-
ing to balance diversity across the entire similarity
scale. This was repeated until we reached 3,595
arguments pairs, about 130 pairs for each topic.

The argument pairs were annotated on a range
of three degrees of similarity (no, some, and high
similarity) with the help of crowd workers on
the Amazon Mechanical Turk platform. To ac-
count for unrelated pairs due to the sampling pro-
cess, crowd workers could choose a fourth op-
tion.3 We collected seven assignments per pair
and used Multi-Annotator Competence Estimation
(MACE) with a threshold of 1.0 (Hovy et al.,
2013) to consolidate votes into a gold standard.
About 48% of the gold standard pairs are labeled
with no similarity, whereas about 23% resp. 13%
are labeled with some resp. high similarity. Fur-
thermore, 16% of the pairs were labeled as con-
taining invalid argument(s) (e.g. irrelevant to the
topic at hand).

We asked six experts (graduate research staff fa-
miliar with argument mining) to annotate a ran-
dom subset of 50 pairs from 10 topics. The result-
ing agreement among experts was Krippendorff’s
α = 0.43 (binary distance) resp. 0.47 (weighted
distance4), reflecting the high difficulty of the task.
Krippendorff’s α agreement between experts and
the gold standard from crowd workers was deter-
mined as 0.54 (binary) resp. 0.55 (weighted dis-
tance).

4 Argument Classification

As a first task in our pipeline of open-domain
argument search, we focus on topic-dependent,
sentence-level argument classification. To prevent

3The exact layout of the Human Intelligence Task (HIT)
guidelines, as well as agreement statistics can be seen in the
appendix.

4Reduced distance of 0.5 between high and some similar-
ity, otherwise 1.

the propagation of errors to the subsequent task
of argument clustering, it is paramount to reach a
high performance in this step.

4.1 Experimental Setup
For the UKP Corpus, we use the proposed evalua-
tion scheme by Stab et al. (2018b): The models are
trained on the train split (70% of the data) of seven
topics, tuned on the dev split (10%) of these seven
topics, and then evaluated on the test split (20%)
of the eighth topic. A macro F1-score is computed
for the 3-label classes and scores are averaged over
all topics and over ten random seeds. For the IBM
Corpus, we use the setup by Shnarch et al. (2018):
Training on 83 topics (4,066 sentences) and test-
ing on 35 topics (1,719 sentences). We train for
five different random seeds and report the average
accuracy over all runs.

4.2 Methods
We experiment with a number of different models
and distinguish between models which use topic
information and ones that do not.

bilstm. This model was presented as a baseline
by Stab et al. (2018b). It trains a bi-directional
LSTM network on the sentence, followed by a
softmax classifier and has no information about
the topic. As input, pre-trained word2vec embed-
dings (Google News dataset) were used.

biclstm. Stab et al. (2018b) presented the con-
textualized LSTM (clstm), which adds topic infor-
mation to the i- and c-cells of the LSTM. The topic
information is represented by using pre-trained
word2vec embeddings.

IBM. Shnarch et al. (2018) blend large automat-
ically generated training sets with manually anno-
tated data in the initialization step. They use an
LSTM with 300-d GloVe embeddings and inte-
grate the topic via attention. We re-implemented
their system, as no official code is available.

We experiment with these three models by re-
placing the word2vec / GloVe embeddings with
ELMo and BERT embeddings. The ELMo em-
beddings are obtained by averaging the output of
the three layers from the pre-trained 5.5B ELMo
model. For each token in a sentence, we gener-
ate a BERT embedding with the pre-trained BERT-
large-uncased model.

Further, we evaluate fine-tuning the transformer
network from BERT for our datasets:

BERT. We add a softmax layer to the output of
the first token from BERT and fine-tune the net-



571

work for three epochs with a batch size of 16 and
a learning rate of 2e-5. We only present the sen-
tence to the BERT model.

BERTtopic. We add topic information to the
BERT network by changing the input to the net-
work. We concatenate the topic and the sentence
(separated by a special [SEP]-token) and fine-
tune the network as mentioned before.

4.3 Results and Analysis

In the following, we present and analyze the re-
sults.

UKP Corpus. Replacing traditional embed-
dings in the bilstm by contextualized word em-
beddings improves the model’s performance by
around 6pp and 8pp in F1 for ELMo and BERT
(see Table 1). The fine-tuned BERT-large im-
proves by even 12pp over the baseline bilstm and
by this also outperforms bilstmBERT by around
4pp. Hence, using an intermediary BiLSTM layer
for the BERT model even hurts the performance.

Using ELMo and BERT embeddings in the
topic-integrating biclstm model significantly de-
creases the performance, as compared to their per-
formance in the bilstm. The contextualized word
embedding for a topic is different to the one of a
topic appearing in a sentence and the biclstm fails
to learn a connection between them.

Including the topic into the fine-tuned BERT
models increases the F1 score by approx. 14.5pp
and 13pp for BERT-base and BERT-large. This is
due to a vast increase in recall for both models;
while changes in precision are mostly small, re-
call for positive and negative arguments increases
by at least 21pp for both models. As such, BERT-
largetopic also beats the biclstm by almost 21pp in
F1 score and represents a new state-of-the-art on
this dataset.

While the gap to human performance remains
at around 18pp in F1, our proposed approach de-
creases this gap significantly as compared to the
previous state-of-the-art. Based on preliminary
experimental results, we suspect that this gap can
be further reduced by adding more topics to the
training data.

The results show that (1) the BERT-[base/large]
models largely improve F1 and precision for argu-
ments and (2) leveraging topic-information yields
another strong improvement on the recall of ar-
gumentative sentences. The usefulness of topic-
information has already been shown by Stab et al.

(2018b) through their biclstm and stems from
a much higher recall of arguments while losing
some of the precision when compared to their bil-
stm. Yet, their approach cannot hold to BERT’s
superior architecture; the topic-integrating BERT
models BERT-basetopic and BERT-largetopic not
only compensate for the biclstm’s drop in preci-
sion, but also increase the recall for pro and con
arguments by at least 18pp and 15pp. We ac-
count this performance increase to BERT’s multi-
head attention between all word pairs, where every
word in a sentence has an attention value with the
topic (words).

IBM corpus. As a baseline for models that
do not use any topic information, we train three
simple BiLSTMs with ELMo, BERT, and 300-d
GloVe embeddings and compare them to the fine-
tuned base and large BERT models. As Table
1 shows, BERT and ELMo embeddings perform
around 2.7 and 3.7pp better in accuracy than the
GloVe embeddings. BERT-base yields even 7pp
higher accuracy, while its difference to the large
model is only +1pp.

Both BERT-base and BERT-large outperform
the baseline IBM set by Shnarch et al. (2018) al-
ready by more than 6pp in accuracy5. The topic in-
tegrating models IBMELMo and IBMBERT do not
improve much over their BiLSTM counterparts,
which do not use any topic information. Simi-
lar to the conclusion for the UKP corpus, we at-
tribute this to the different embedding vectors we
retrieve for a topic as compared to the vectors for
a topic mention within a sentence. BERT-basetopic
and BERT-largetopic show the largest improvement
with 8pp over the baseline and represent a new
state-of-the-art on this dataset. The fine-tuned
BERT models show vast improvements over the
baseline, which is on par with the findings for the
UKP corpus.

Yet, in contrast to the results on the UKP cor-
pus, adding topic information to the fine-tuned
BERT models has only a small effect on the score.
This can be explained with the different composi-
tion of both corpora: while sentences in the UKP
corpus may only be implicitly connected to their
related topic (only 20% of all sentences contain
their related topic), sentences in IBM’s corpus all
contain their related topic and are thus explicitly

5Please note that we refer to our reproduced baseline.
Also, the original baseline’s performance by Shnarch et al.
(2018) can only be guessed, since the numbers are drawn
from a figure and do not appear in the text.



572

Model UKP Corpus IBM
F1 Parg+ Parg- Rarg+ Rarg- Accuracy

Without topic information
bilstm (Stab et al., 2018b) .3796 .3484 .4710 .0963 .2181 .7201
bilstmELMo .4382 .4639 .5088 .1840 .2778 .7574
bilstmBERT .4631 .5051 .5079 .2074 .3076 .7476
BERT-base .4680 .5521 .5397 .2352 .2800 .7928
BERT-large .5019 .5844 .5818 .2917 .3154 .8021
With topic information
outer-att (Stab et al., 2018b) .3873 .3651 .4696 .1042 .2381 -
biclstm (Stab et al., 2018b) .4242 .2675 .3887 .2817 .4028 -
biclstmELMo .3924 .2372 .4381 .0317 .3955 -
biclstmBERT .4243 .3431 .4397 .1060 .4275 -
IBM (Shnarch et al., 2018) - - - - - ∼ .74
IBM (reproduced) - - - - - .7288
IBMELMo - - - - - .7651
IBMBERT - - - - - .7480
BERT-basetopic .6128 .5048 .5313 .4698 .5795 .8137
BERT-largetopic .6325 .5535 .5843 .5051 .5594 .8131
Human Performance .8100 - - - - -

Table 1: Results of each model for sentence-level argument classification using cross-topic evaluation on the UKP
Sentential Argument Mining Corpus and on the IBM Debater R© - Evidence Sentences dataset. Blank fields result
from dataset-specific models. P: precision, R: recall, arg+: pro-arguments, arg-: con-arguments.

connected to it (although topics are masked with
a placeholder). Hence, in the IBM corpus, there
is much less need for the additional topic infor-
mation in order to recognize the relatedness to a
sentence.

5 Argument Clustering

Having identified a large amount of argumentative
text for a topic, we next aim at grouping the argu-
ments talking about the same aspects.

For any clustering algorithm, a meaningful
similarity between argument pairs is crucial and
needs to account for the challenges regarding ar-
gument aspects, e.g., different aspect granular-
ities, context-dependency or aspect multiplicity.
Another requirement is the robustness for topic-
dependent differences.

Therefore, in this section, we study how
sentence-level argument similarity and clustering
can be improved by using contextualized word
embeddings. We evaluate our methods on the
UKP ASPECT and the AFS corpus (see Sec-
tion 3.2).

5.1 Clustering Method

We use agglomerative hierarchical clustering (Day
and Edelsbrunner, 1984) to cluster arguments.

We use the average linkage criterion to com-
pute the similarity between two cluster A and B:

1
|A||B|

∑
a∈A

∑
b∈B d(a, b), for a given similarity

metric d. As it is a priori unknown how many dif-

ferent aspects are discussed for a topic (number of
clusters), we apply a stopping threshold which is
determined on the train set.

We also tested the k-means and the DBSCAN
clustering algorithms, but we found that agglom-
erative clustering generally yielded better perfor-
mances in preliminary experiments.

Agglomerative clustering uses a pairwise sim-
ilarity metric d between arguments. We propose
and evaluate various similarity metrics in two se-
tups: (1) Without performing a clustering, i.e. the
quality of the metric is directly evaluated (without
clustering setup), and (2) in combination with the
described agglomerative clustering method (with
clustering setup).

5.2 Experimental Setup
We differentiate between unsupervised and super-
vised methods. Our unsupervised methods include
no pre-training whereas the supervised methods
use some data for fine-tuning the model. For the
UKP ASPECT corpus, we binarize the four labels
to only indicate similar and dissimilar argument
pairs. Pairs labeled with some and high similarity
were labeled as similar, pairs with no similarity
and different topic as dissimilar.

We evaluate methods in a 4-fold cross-
validation setup: seven topics are used for testing
and 21 topics are used for fine-tuning. Final eval-
uation results are the average over the four folds.
In case of supervised clustering methods, we use
17 topics for training and four topics for tuning. In



573

Without Clustering With Clustering
Model Fmean Fsim Fdissim Fmean Fsim Fdissim
Human Performance .7834 .7474 .8194 .7070 .6188 .7951
Random predictions .4801 .3431 .6171 .4253 .3162 .5344
Unsupervised Methods
Tf-Idf .6118 .5230 .7007 .5800 .4892 .6708
InferSent - fastText .6621 .5866 .7376 .6344 .5443 .7584
InferSent - GloVe .6494 .5472 .7517 .6149 .4587 .7711
GloVe Embeddings .6468 .5632 .7304 .5926 .4605 .7246
ELMo Embeddings .6447 .5355 .7538 .6366 .5347 .7384
BERT Embeddings .6539 .5232 .7848 .6070 .4818 .7323
Supervised Methods: Cross-Topic Evaluation
BERT-base .7401 .6695 .8107 .7007 .6269 .7746
BERT-large .7244 .6297 .8191 .7135 .6125 .8146

Table 2: F1 scores on the UKP ASPECT Corpus.

their experiments on the AFS corpus, Misra et al.
(2016) only performed a within-topic evaluation
by using 10-fold cross-validation. As we are pri-
marily interested in cross-topic performances, we
evaluate our methods also cross-topic: we train on
two topics, and evaluate on the third.

5.3 Evaluation

For the UKP ASPECT dataset we compute the
marco-average Fmean for the F1-scores for the
similar-label (Fsim) and for the dissimilar-
label (Fdissim).

In the without clustering setup, we compute the
similarity metric (d(a, b)) for an argument pair di-
rectly, and assign the label similar if it exceeds
a threshold, otherwise dissimilar. The thresh-
old is determined on the train set of a fold for un-
supervised methods. For supervised methods, we
use a held-out dev set.

In the with clustering setup, we use the simi-
larity metric to perform agglomerative clustering.
This assigns each argument exactly one cluster ID.
Arguments pairs in the same cluster are assigned
the label similar, and argument pairs in differ-
ent clusters are assigned the label dissimilar.
We use these labels to compute Fsim and Fdissim
given our gold label annotations.

For the AFS dataset, Misra et al. (2016) com-
puted the correlation between the predicted simi-
larity and the annotated similarity score. They do
not mention which correlation method they used.
In our evaluation, we show Pearson correlation (r)
and Spearman’s rank correlation coefficient (ρ).

5.4 Similarity Metrics

We experiment with the following methods to
compute the similarity between two arguments.

Tf-Idf. We computed the most common words

(without stop-words) in our training corpus and
compute the cosine similarity between the Tf-Idf
vectors of a sentence.

InferSent. We compute the cosine-similarity
between the sentence embeddings returned by In-
ferSent (Conneau et al., 2017).

Average Word Embeddings. We compute the
cosine-similarity between the average word em-
beddings for GloVe, ELMo and BERT.

BERT. We fine-tune the BERT-uncased model
to predict the similarity between two given argu-
ments. We add a sigmoid layer to the special
[CLS] token and trained it on some of the top-
ics. We fine-tuned for three epochs, with a learn-
ing rate of 2e-5 and a batch-size of 32.

Human Performance. We approximated the
human upper bound on the UKP ASPECT cor-
pus in the following way: we randomly split the
seven pair-wise annotations in two groups, com-
puted their corresponding MACE (Hovy et al.,
2013) scores and calculated Fsim, Fdissim and Fmean.
We repeated this process ten times and averaged
over all runs (without clustering setup). For the
with clustering setup, we applied agglomerative
hierarchical clustering on the MACE scores of one
of both groups and computed the evaluation met-
rics using the other group as the gold label. For
the AFS dataset, Misra et al. (2016) computed the
correlation between the three human annotators.

5.5 Results and Analysis

Unsupervised Methods. Table 2 shows the per-
formance on the novel UKP ASPECT Corpus.
When evaluating the argument similarity met-
rics directly (without clustering setup), we notice
no large differences between averaging GloVe,
ELMo or BERT embeddings. These three setups
perform worse than applying InferSent with fast-



574

Average
r ρ

Human Performance .6767 -
Unsupervised Methods
Tf-Idf .4677 .4298
InferSent - fastText .2519 .2423
InferSent - GloVe .2708 .2663
GloVe Embeddings .3240 .3400
ELMo Embeddings .2827 .2675
BERT Embeddings .3539 .3507
Supervised Methods: Within-Topic Evaluation
SVR (Misra et al., 2016) .6333 -
BERT-base .7475 .7318
BERT-large .7256 .6959
Supervised Methods: Cross-Topic Evaluation
BERT-base .5849 .5723
BERT-large .6202 .6034

Table 3: Pearson correlation r and Spearman’s rank
correlation ρ on the AFS dataset (Misra et al., 2016)
averaged over the three topics.

Text embeddings. Tf-Idf shows the worst perfor-
mance. In Table 3, we show the performances for
the AFS corpus (detailed results in the appendix,
Table 5). In contrast to the ASPECT Corpus, the
Tf-Idf method achieves the best performance and
InferSent - fastText embeddings achieved the worst
performance. As for the ASPECT Corpus, ELMo
and BERT embeddings do not lead to an improve-
ment compared to averaged GloVe embeddings.

Unsupervised methods compute some type of
similarity between sentence pairs. However, as
our experiments shows, this similarity notion is
not necessarily the notion needed for the task.

Supervised Methods. We fine-tune the BERT
model for some of the topics and study the per-
formance on unseen topics. For the ASPECT
Corpus, we observe a performance increase of
7.8pp. Identifying dissimilar arguments (Fdissim)
is on-par with the human performance, and iden-
tifying similar arguments achieves an F-score of
.67, compared to .75 for human annotators. For
the AFS dataset, we observe that fine-tuning the
BERT model significantly improves the perfor-
mance by 11pp compared to the previous state-of-
the-art from Misra et al. (2016).

In a cross-topic evaluation setup on the AFS
dataset, we observe that the performance drops to
.57 Spearman correlation. This is still significantly
larger than the best unsupervised method.

We evaluated the effect of the training set size
on the performance of the BERT model for the
ASPECT Corpus. A certain number of topics were
randomly sampled and the performance was eval-
uated on distinct topics. This process was repeated

10 times with different random seeds (Reimers
and Gurevych, 2018). Table 4 shows the averaged
results.

By allowing fine-tuning on five topics we are
able to improve the Fmean-score to .71 compared to
.65 when using BERT without fine-tuning (without
clustering setup). Adding more topics then slowly
increases the performance.

w/o Clustering With Clustering
#Topics Fmean Fmean

1 0.6244 0.5943
3 0.6817 0.6322
5 0.7134 0.6563
7 0.7164 0.6703
9 0.7151 0.6697
11 0.7305 0.6988
13 0.7350 0.6964
15 0.7370 0.7010
17 0.7401 0.7034

Table 4: F1 scores on the UKP ASPECT Corpus with
increasing training set sizes (BERT model).

With Clustering. We studied how the perfor-
mance changes on the ASPECT corpus if we com-
bine the similarity metric with agglomerative clus-
tering (Table 2). We notice that the performances
drop by up to 7.64pp. Agglomerative clustering
is a strict partitioning algorithm, i.e., each object
belongs to exactly one cluster. However, an argu-
ment can address more than one aspect of a topic,
therefore, arguments could belong to more than
one cluster. Hence, strict partitioning clustering
methods introduce a new source of errors.

We can estimate this source of error by evaluat-
ing the transitivity in our dataset. For a strict par-
titioning setup, if argument A ∼ B, and B ∼ C are
similar, then A ∼ C are similar. This transitivity
property is violated in 376 out of 1,714 (21.9%)
cases, indicating that strict partitioning is a sub-
optimal setup for the ASPECT dataset. This also
explains why the human performance in the with
clustering setup is significantly lower than in the
without clustering setup. As Table 2 shows, a bet-
ter similarity metric must not necessarily lead to a
better clustering performance with agglomerative
clustering. Humans are better than the proposed
BERT-model at estimating the pairwise similarity
of arguments. However, when combined with a
clustering method, the performances are on-par.

6 Conclusion

Open-domain argument search, i.e. identifying
and aggregating arguments for unseen topics, is



575

a challenging research problem. The first chal-
lenge is to identify suitable arguments. Previ-
ous methods achieved low F1-scores in a cross-
topic scenario, e.g., Stab et al. (2018b) achieved
an F1-score of .27 for identifying pro-arguments.
We could significantly improve this performance
to .53 by using contextualized word embeddings.
The main performance gain came from integrating
topic information into the transformer network of
BERT, which added 13pp compared to the setup
without topic information.

The second challenge we addressed is to decide
whether two arguments on the same topic are sim-
ilar. Previous datasets on argument similarity used
curated lists of arguments, which eliminates noise
from the argument classification step. In this pub-
lication, we annotated similar argument pairs that
came from an argument search engine. As the
annotation showed, about 16% of the pairs were
noisy and did not address the target topic.

Unsupervised methods on argument similarity
showed rather low performance scores, confirm-
ing that fine-grained semantic nuances and not the
lexical overlap determines the similarity between
arguments. We were able to train a supervised
similarity function based on the BERT transformer
network that, even with little training data, signif-
icantly improved over unsupervised methods.

While these results are very encouraging and
stress the feasibility of open-domain argument
search, our work also points to some weaknesses
of the current methods and datasets. A good ar-
gument similarity function is only the first step to-
wards argument clustering. We evaluated the ag-
glomerative clustering algorithm in combination
with our similarity function and identified it as a
new source of errors. Arguments can address mul-
tiple aspects and therefore belong to multiple clus-
ters, something that is not possible to model using
partitional algorithms. Future work should thus
study the overlapping nature of argument cluster-
ing. Further, more realistic datasets, that allow
end-to-end evaluation, are required.

Acknowledgments

The authors would like to sincerely thank Joy
Mahapatra, who carried out the initial anno-
tation study. This work has been supported
by the German Research Foundation through
the German-Israeli Project Cooperation (DIP,
grant DA 1600/1-1 and grant GU 798/17-1)

and within the project “Open Argument Min-
ing” (GU 798/25-1), associated with the Priority
Program “Robust Argumentation Machines (RA-
TIO)” (SPP-1999). It has been co-funded by the
German Federal Ministry of Education and Re-
search (BMBF) under the promotional references
01UG1816B (CEDIFOR) and 03VP02540 (Argu-
menText).

References
Filip Boltužić and Jan Šnajder. 2015. Identifying

prominent arguments in online debates using seman-
tic textual similarity. In Proceedings of the 2nd
Workshop on Argumentation Mining, pages 110–
115.

Elena Cabrio and Serena Villata. 2012. Natural Lan-
guage Arguments: A Combined Approach. In Pro-
ceedings of the 20th European Conference on Artifi-
cial Intelligence, pages 205–210.

Alexis Conneau, Douwe Kiela, Holger Schwenk, Loı̈c
Barrault, and Antoine Bordes. 2017. Supervised
learning of universal sentence representations from
natural language inference data. In Proceedings of
the 2017 Conference on Empirical Methods in Nat-
ural Language Processing, pages 670–680.

William H. E. Day and Herbert Edelsbrunner. 1984.
Efficient algorithms for agglomerative hierarchi-
cal clustering methods. Journal of Classification,
1(1):7–24.

Jacob Devlin, Ming-Wei Chang, Kenton Lee, and
Kristina Toutanova. 2018. BERT: Pre-training of
deep bidirectional transformers for language under-
standing. arXiv preprint arXiv:1810.04805.

Steffen Eger, Johannes Daxenberger, and Iryna
Gurevych. 2017. Neural end-to-end learning for
computational argumentation mining. In Proceed-
ings of the 55th Annual Meeting of the Association
for Computational Linguistics (Volume 1: Long Pa-
pers), pages 11–22.

Dirk Hovy, Taylor Berg-Kirkpatrick, Ashish Vaswani,
and Eduard Hovy. 2013. Learning whom to trust
with MACE. In Proceedings of the 2013 Confer-
ence of the North American Chapter of the Associ-
ation for Computational Linguistics: Human Lan-
guage Technologies, pages 1120–1130.

Ran Levy, Yonatan Bilu, Daniel Hershcovich, Ehud
Aharoni, and Noam Slonim. 2014. Context depen-
dent claim detection. In Proceedings of COLING
2014, the 25th International Conference on Compu-
tational Linguistics: Technical Papers, pages 1489–
1500.

Tomas Mikolov, Kai Chen, Greg Corrado, and Jef-
frey Dean. 2013. Efficient Estimation of Word
Representations in Vector Space. arXiv preprint
arXiv:1301.3781.

https://www.aclweb.org/anthology/W15-0514
https://www.aclweb.org/anthology/W15-0514
https://www.aclweb.org/anthology/W15-0514
https://www-sop.inria.fr/members/Elena.Cabrio/pdf/CabrioVillataECAI12.pdf
https://www-sop.inria.fr/members/Elena.Cabrio/pdf/CabrioVillataECAI12.pdf
https://www.aclweb.org/anthology/D17-1070
https://www.aclweb.org/anthology/D17-1070
https://www.aclweb.org/anthology/D17-1070
https://doi.org/10.1007/BF01890115
https://doi.org/10.1007/BF01890115
https://arxiv.org/abs/1810.04805
https://arxiv.org/abs/1810.04805
https://arxiv.org/abs/1810.04805
http://aclweb.org/anthology/P17-1002
http://aclweb.org/anthology/P17-1002
https://www.aclweb.org/anthology/N/N13/N13-1132.pdf
https://www.aclweb.org/anthology/N/N13/N13-1132.pdf
http://www.aclweb.org/anthology/C14-1141
http://www.aclweb.org/anthology/C14-1141
https://arxiv.org/abs/1301.3781
https://arxiv.org/abs/1301.3781


576

Amita Misra, Brian Ecker, and Marilyn A. Walker.
2016. Measuring the similarity of sentential ar-
guments in dialogue. In Proceedings of the SIG-
DIAL 2016 Conference, The 17th Annual Meeting
of the Special Interest Group on Discourse and Di-
alogue, 13-15 September 2016, Los Angeles, CA,
USA, pages 276–287.

Jeffrey Pennington, Richard Socher, and Christo-
pher D. Manning. 2014. GloVe: Global Vectors for
Word Representation. In Empirical Methods in Nat-
ural Language Processing (EMNLP), pages 1532–
1543.

Matthew Peters, Mark Neumann, Mohit Iyyer, Matt
Gardner, Christopher Clark, Kenton Lee, and Luke
Zettlemoyer. 2018. Deep contextualized word rep-
resentations. In Proceedings of the 2018 Confer-
ence of the North American Chapter of the Associ-
ation for Computational Linguistics: Human Lan-
guage Technologies, Volume 1 (Long Papers), pages
2227–2237.

Nils Reimers and Iryna Gurevych. 2018. Why com-
paring single performance scores does not allow
to draw conclusions about machine learning ap-
proaches. arXiv preprint arXiv:1803.09578.

Ruty Rinott, Lena Dankin, Carlos Alzate Perez,
Mitesh M. Khapra, Ehud Aharoni, and Noam
Slonim. 2015. Show me your evidence - an auto-
matic method for context dependent evidence detec-
tion. In Proceedings of the 2015 Conference on Em-
pirical Methods in Natural Language Processing,
pages 440–450.

Eyal Shnarch, Carlos Alzate, Lena Dankin, Mar-
tin Gleize, Yufang Hou, Leshem Choshen, Ranit
Aharonov, and Noam Slonim. 2018. Will it Blend?
Blending Weak and Strong Labeled Data in a Neu-
ral Network for Argumentation Mining. In Proceed-
ings of the 56th Annual Meeting of the Association
for Computational Linguistics (Volume 2: Short Pa-
pers), volume 2, pages 599–605.

Christian Stab, Johannes Daxenberger, Chris Stahlhut,
Tristan Miller, Benjamin Schiller, Christopher
Tauchmann, Steffen Eger, and Iryna Gurevych.
2018a. ArgumenText: Searching for Arguments in
Heterogeneous Sources. In Proceedings of the 2018
Conference of the North American Chapter of the
Association for Computational Linguistics: System
Demonstrations, pages 21–25.

Christian Stab and Iryna Gurevych. 2014. Identify-
ing Argumentative Discourse Structures in Persua-
sive Essays. Proceedings of the 2014 Conference on
Empirical Methods in Natural Language Processing
(EMNLP), pages 46–56.

Christian Stab, Tristan Miller, Benjamin Schiller,
Pranav Rai, and Iryna Gurevych. 2018b. Cross-topic
argument mining from heterogeneous sources. In
Proceedings of the 2018 Conference on Empirical
Methods in Natural Language Processing, volume
Long Papers, pages 3664–3674.

Amine Trabelsi and Osmar R Zaı̈ane. 2015. Extraction
and clustering of arguing expressions in contentious
text. Data & Knowledge Engineering, 100:226–
239.

Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob
Uszkoreit, Llion Jones, Aidan N Gomez, Ł ukasz
Kaiser, and Illia Polosukhin. 2017. Attention is all
you need. In I. Guyon, U. V. Luxburg, S. Bengio,
H. Wallach, R. Fergus, S. Vishwanathan, and R. Gar-
nett, editors, Advances in Neural Information Pro-
cessing Systems 30, pages 5998–6008.

Henning Wachsmuth, Nona Naderi, Ivan Habernal,
Yufang Hou, Graeme Hirst, Iryna Gurevych, and
Benno Stein. 2017. Argumentation quality assess-
ment: Theory vs. practice. In Proceedings of the
55th Annual Meeting of the Association for Compu-
tational Linguistics (Volume 2: Short Papers), pages
250–255.

Henning Wachsmuth, Shahbaz Syed, and Benno Stein.
2018. Retrieval of the best counterargument with-
out prior topic knowledge. In Proceedings of the
56th Annual Meeting of the Association for Compu-
tational Linguistics (Volume 1: Long Papers), pages
241–251.

http://aclweb.org/anthology/W/W16/W16-3636.pdf
http://aclweb.org/anthology/W/W16/W16-3636.pdf
https://www.aclweb.org/anthology/D14-1162
https://www.aclweb.org/anthology/D14-1162
https://doi.org/10.18653/v1/N18-1202
https://doi.org/10.18653/v1/N18-1202
http://arxiv.org/abs/1803.09578
http://arxiv.org/abs/1803.09578
http://arxiv.org/abs/1803.09578
http://arxiv.org/abs/1803.09578
http://aclweb.ofrg/anthology/D15-1050
http://aclweb.ofrg/anthology/D15-1050
http://aclweb.ofrg/anthology/D15-1050
https://aclweb.org/anthology/P18-2095
https://aclweb.org/anthology/P18-2095
https://aclweb.org/anthology/P18-2095
http://tubiblio.ulb.tu-darmstadt.de/105466/
http://tubiblio.ulb.tu-darmstadt.de/105466/
http://www.aclweb.org/anthology/D14-1006
http://www.aclweb.org/anthology/D14-1006
http://www.aclweb.org/anthology/D14-1006
http://tubiblio.ulb.tu-darmstadt.de/97912/
http://tubiblio.ulb.tu-darmstadt.de/97912/
https://webdocs.cs.ualberta.ca/~zaiane/postscript/DKE15.pdf
https://webdocs.cs.ualberta.ca/~zaiane/postscript/DKE15.pdf
https://webdocs.cs.ualberta.ca/~zaiane/postscript/DKE15.pdf
http://papers.nips.cc/paper/7181-attention-is-all-you-need.pdf
http://papers.nips.cc/paper/7181-attention-is-all-you-need.pdf
https://doi.org/10.18653/v1/P17-2039
https://doi.org/10.18653/v1/P17-2039
http://aclweb.org/anthology/P18-1023
http://aclweb.org/anthology/P18-1023


577

A Appendices

A.1 UKP ASPECT Corpus: Amazon
Mechanical Turk Guidelines and
Inter-annotator Agreement

The annotations required for the UKP ASPECT
Corpus were acquired via crowdsourcing on the
Amazon Mechanical Turk platform. Workers par-
ticipating in the study had to be located in the US,
with more than 100 HITs approved and an overall
acceptance rate of 90% or higher. We paid them
at the US federal minimum wage of $7.25/hour.
Workers also had to qualify for the study by pass-
ing a qualification test consisting of twelve test
questions with argument pairs. Figure 2 shows the
instructions given to workers.

A.2 AFS Corpus: Detailed Results
Table 5 shows the full results of the (un)supervised
methods for the argument similarity calculation on
the AFS dataset (all topics).



578

Gun Control Gay Marriage Death Penalty Avg.
r ρ r ρ r ρ r ρ

Human Performance .6900 - .6000 - .7400 - .6767 -
Unsupervised Methods
Tf-Idf .6266 .5528 .4107 .3778 .3657 .3589 .4677 .4298
InferSent - fastText .3376 .3283 .1012 .1055 .3168 .2931 .2519 .2423
InferSent - GloVe .3757 .3707 .1413 .1435 .2953 .2847 .2708 .2663
GloVe Embeddings .4344 .4485 .2519 .2741 .2857 .2973 .3240 .3400
ELMo Embeddings .3747 .3654 .1753 .1709 .2982 .2663 .2827 .2675
BERT Embeddings .4575 .4460 .1960 .1999 .4082 .4072 .3539 .3507
Supervised Methods: Within-Topic Evaluation
SVR (Misra et al., 2016) .7300 - .5400 - .6300 - .6333 -
BERT-base .8323 .8076 .6255 .6122 .7847 .7768 .7475 .7318
BERT-large .7982 .7592 .6240 .6137 .7545 .7149 .7256 .6959
Supervised Methods: Cross-Topic Evaluation
BERT-base .6892 .6689 .4307 .4236 .6339 .6245 .5849 .5723
BERT-large .6895 .6749 .5071 .4866 .6641 .6486 .6202 .6034

Table 5: Pearson correlation r and Spearman’s rank correlation ρ on the AFS dataset. Within-Topic Evaluation:
10-fold cross-validation. Cross-Topic Evaluation: System trained on two topics, evaluated on the third.

Read each of the following sentence pairs and indicate whether they argue about the same aspect with respect to the given
topic (given as “Topic Name” on top of the HIT). There are four options, of which one needs to be assigned to each pair of
sentences (arguments). Please read the following for more details.

• Different Topic/Can’t decide: Either one or both of the sentences belong to a topic different than the given one, or
you can’t understand one or both sentences. If you choose this option, you need to very briefly explain, why you
chose it (e.g. “The second sentence is not grammatical”, “The first sentence is from a different topic” etc.). For
example,

Argument A: “I do believe in the death penalty, tit for tat”.

Argument B: “Marriage is already a civil right everyone has, so like anyone you have it too”.

• No Similarity: The two arguments belong to the same topic, but they don’t show any similarity, i.e. they speak about
completely different aspects of the topic. For example,

Argument A: “If murder is wrong then so is the death penalty”.

Argument B: “The death penalty is an inappropriate way to work against criminal activity”.

• Some Similarity: The two arguments belong to the same topic, showing semantic similarity on a few aspects, but the
central message is rather different, or one argument is way less specific than the other. For example,

Argument A: “The death penalty should be applied only in very extreme cases, such as when someone commands
genocide”.

Argument B: “An eye for an eye: He who kills someone else should face capital punishment by the law”.

• High Similarity: The two arguments belong to the same topic, and they speak about the same aspect, e.g. using
different words. For example, Argument A: “An ideal judiciary system would not sentence innocent people”.

Argument B: “The notion that guiltless people may be sentenced is indeed a judicial system problem”.

Your rating should not be affected by whether the sentences attack (e.g. “Animal testing is cruel and inhumane” for the
topic “Animal testing”) or support (e.g. “Animals do not have rights, therefore animal testing is fair” for the topic “Animal
testing”) the topic, but only by the aspect they are using to support or attack the topic.

Figure 2: Amazon Mechanical Turk HIT Guidelines used in the annotation study for the Argument Aspect Simi-
larity Corpus.


