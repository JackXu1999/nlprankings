




































From Partial VP Fronting towards Spinal TT-MCTAG∗

Timm Lichte
Emmy Noether Research Group

Collaborative Research Center 833
University of Tübingen

timm.lichte@uni-tuebingen.de

Abstract

In the face of partial fronting phenomena in
German, we introduce spinal TT-MCTAG, a
new MCTAG variant that integrates features
of LTAG-spinal and TT-MCTAG. Using spinal
TT-MCTAG we arrive at flat syntactic struc-
tures which make available a consistent ac-
count for the data.

1 Introduction

While the examination of coherent constructions
in German has resulted in the design of TAG-
extensions such as V-TAG (Rambow, 1994) and TT-
MCTAG (Lichte, 2007), which can cope with a good
deal of critical data, a remaining desideratum for
both accounts is the analysis of embedded partial
fronting of verbal heads, exemplified in (1).

(1) Zu
to

reparieren
repair

versprochen
promised

hat
has

ihn
it

Peter.
Peter

’Peter has promised to repair it.’

Here, the fronted material zu reparieren versprochen
embeds the non-finite verb zu reparieren, whose re-
mote complement ihn is on the other side of the finite
verb hat.

To see the problem, consider the slightly simpler
instance of partial VP fronting in (2), where no ad-
ditional embedding of a verbal head takes place.

(2) Zu
to

reparieren
repair

versprach
promised

ihn
it

Peter.
Peter

’Peter promised to repair it.’
∗I am indebted to Laura Kallmeyer for helpful comments.

VP

V VP

zu reparieren V VP

versprach NPacc ↓ VP

NPnom ↓ . . .

Figure 1: Right-branching derived tree for (2).

The intended derived tree for (2) would be the one in
Fig. 1. In terms of TT-MCTAG, this would be deriv-
able with the tree tuples in Fig. 2. A tree tuple con-
sists of two components, namely a single elementary
tree, called the head tree, and a set of auxiliary trees,
called the argument trees. The usage of tree tuples
is constrained in the following way: each argument
tree either adjoins directly at the head tree, or indi-
rectly under node sharing, i.e. in the derivation tree
the head tree dominates an auxiliary tree γ and γ
dominates the argument tree through a path of ad-
junctions at the root node.1 Crucially, the tree tuples
in Fig. 2 do not contain lexically anchored heads,
which can be regarded as a downside, since it dis-
solves the encoding of the dependency relation. We
refer to this desirable, yet dismissed property as the
head tree constraint.

The schema of the tree tuples in Fig. 2 is remi-
niscent of the elementary tree sets that are used in
the V-TAG approach in (Rambow, 1994), depicted
in Fig. 3. Note that V-TAG basically is a non-local

1See (Kallmeyer, 2009) for a formal explication.

From Partial VP Fronting towards Spinal TT-MCTAG

85



〈 VP

VP* V

ǫ

,





VP

V VP*

versprach

,
VP

NPnom ↓ VP*





〉

〈 VP

V

ǫ

,





VP

V VP*

zu reparieren

,
VP

NPacc ↓ VP*





〉

Figure 2: Tree tuples for the derived tree in Fig. 1.





VP

VP* V

ǫ

,

VP

V VP*

versprach

,
VP

NPnom ↓ VP*









VP

V

ǫ

,

VP

V VP*

zu reparieren

,
VP

NPacc ↓ VP*





Figure 3: The corresponding V-TAG tree sets of the
tree tuples in Fig. 2. Dominance links are expressed by
dashed arrows.

MCTAG, where locality is recovered by dominance
links (indicated as dashed arrows) and integrity con-
straints, that refer to the derived tree.

Both approaches essentially rely on the existence
of a dominance relation between the elementary
trees of the respective multicomponent structures, be
it in the derivation tree for TT-MCTAG, or in the
derived tree for V-TAG. While such a dominance
relation can be found in Fig. 1, the intended de-
rived structure for (1) essentially is the one in Fig. 4,
which has a complex prefield constituent2 . Here, no
dominance relation of the embedded verbal head zu
reparieren and its argument ihn can be established,
and therefore, this structure cannot be derived in a
linguistically appealing way no matter whether we
choose TT-MCTAG or V-TAG.

2The prefield in German immediately precedes the finite
verb in verb second configurations. In general, it is occupied
by one single constituent.

As mentioned in (Lichte, 2007), the extension
of node sharing to tree sharing could solve this
dilemma in the case of TT-MCTAG. However, the
exact complexity class being unknown, tree shar-
ing seems to extend complexity somewhat in prac-
tice. Moreover, it is unclear, how such an exten-
sion would transfer to V-TAG. Note that, other than
(Gerdes, 2004), we aim at an analysis which restricts
itself immediately through the formalism that de-
rives the syntactic structure.

2 Adapting the derived structures

Our strategy is to adapt the derived syntactic struc-
ture such that we obtain a dominance relation be-
tween the head and its argument both in the deriva-
tion tree and the derived tree. It has been already
mentioned in (Lichte, 2007) that fronting phenom-
ena no more pose a problem if the derived struc-
ture is left branching, such as in in Fig. 5. Both

VP

VP NPnom

VP NPacc

VP V

VP V hat

V versprochen

zu reparieren

Figure 5: Left branching derived tree for (1).

Timm Lichte

86



VP

VP VP

VP V V VP

V versprochen hat NPacc ↓ VP

zu reparieren NPnom ↓ . . .

Figure 4: Left- and right-branching derived structure of the embedded partial VP fronting datum in (1).

the TT-MCTAG approach and the V-TAG approach
then would suffice. This adaptation, however, is not
desirable since, amongst others, the argument trees
would also be required to be left-branching, lead-
ing to massive ambiguity in the lexicon due to the
availability of right-branching and left-branching so-
lutions.

Instead, we propose a flat derived structure for the
complex partial fronting case, as sketched in Fig. 6,
in which the NP-arguments are immediate daughters
of the VP-root. Doing this allows for a unified ac-
count of fronting cases and cases of canonical word
order.

VP

VP V NPacc NPnom

VP V hat

V versprochen

zu reparieren

Figure 6: Flat derived tree for (1).

3 Spinal TT-MCTAG

Aiming at a flat derived structure such as in Fig. 6,
we introduce a new TT-MCTAG variant that ties in
with ideas recently laid out under the name LTAG-
spinal in (Shen, 2006). In place of substitution,
LTAG-spinal uses a rewriting operation called at-
tachment, which is congruent with sister adjunction
(Rambow et al., 1995; Chiang, 2003). Combining
two trees γi and γj via attachment means that in the

resulting tree one inner node vi of γi dominates the
root node vj of γj , such that γj immediately pre-
cedes or follows the subtree dominated by vi in γi.
See Fig. 7 for an example from (Shen, 2006). Both
arguments and modifiers are integrated by attach-
ment, and thus elementary trees receive a “spinal”
shape.

S

XP VP

XP VP XP XP XP

DT NN WDT VBZ VP* JJ TO PRP

a parser which seems new to me

⇓

XP

S

VP

VP XP

XP XP XP

DT NN WDT VBZ JJ TO PRP

a parser which seems new to me

Figure 7: LTAG-spinal derivation example.

Spinal TT-MCTAG with attachment

If we supply TT-MCTAG with attachment analo-
gously to LTAG-spinal, the result provides sufficient

From Partial VP Fronting towards Spinal TT-MCTAG

87



means to account for (1), as shown in Fig. 8. Other
than with regular TT-MCTAG, arguments are real-
ized by auxiliary trees with a single node. Further-
more, attachment takes over the role of substitution
in that it defines islands for argument head disloca-
tions, while node sharing still relies on root node ad-
junction.

Lexical partition of the derived tree:

VP

VP* V NPacc* NPnom*

VP hat

VP* V

VP versprochen

V

zu reparieren

Lexical entries:

〈 VP

VP* V

hat

,
{

NPnom*
}
〉

〈 VP

VP* V

versprochen

, { }
〉

〈 VP

V

zu reparieren

,
{

NPacc*
}
〉

Figure 8: Derivation and lexical entries according to TT-
MCTAG with attachment.

However, spinal TT-MCTAG with attachment is
not without severe drawbacks. Since NPs can get at-
tached to the head tree as unrestrictedly as modifiers,
nothing so far prevents nominative NPs from attach-
ing to the head tree in any number and any order.
The way of licensing of nominal arguments by ad-

joining auxiliary trees from the argument set only re-
quires the existence of proper NPs. One could apply
some kind of downstream semantic filter, but we will
explore a syntactic solution in the second version of
spinal TT-MCTAG. More importantly, while embed-
ded partial VP-fronting can be accounted for now,
new gaps open concerning the coverage of other par-
tial VP-fronting phenomena, such as in (3).

(3) Zu
to

reparieren
repair

hat
has

er
he

ihn
it

versprochen.
promised

’He has promised to repair it.’

〈
VP

VP* VP

V

versprochen

, { }
〉

Figure 9: Tree tuple for versprochen in (3).

Other than in (1) and (2), the verb versprochen and
the head of its verbal argument zu reparieren are
not adjacent, but separated by the finite auxiliary
hat and one argument from each of the full verbs.
Since the tree of versprochen would still have to ad-
join to the tree of zu reparieren in order to allow
for the dislocation of its argument ihn, the tree tuple
for versprochen would look as in Fig. 9, including
an additional lower VP-node. This lower VP-node
would be essential for providing a landing site for
the wrapped material, i.e. hat, er and ihn. The re-
sult would be, however, that the argument tree of zu
reparieren (that adjoins into the tree of ihn) would
not be able to attach at the root node of the tree of
versprochen and the node sharing relation between
zu reparieren and its argument would be lost.

This problem is not at all new, but echos the situa-
tion of the original TT-MCTAG account as described
above. And again, neglecting the head tree con-
straint would help. Alternatively, one could think of
modifying the current version of spinal TT-MCTAG
with attachment (e.g., by reactivating substitution).
But instead of this, I will introduce a second version
of spinal TT-MCTAG, that successfully circumvents
this concession.

Timm Lichte

88



Spinal TT-MCTAG with fusion

Instead of attachment, we make use of a similar but
novel rewriting operation that we refer to as fusion.
The fusion operation is the amalgamation of single
nodes rather than the drawing of a new edge. More
formally spoken: If two nodes vi, vj of trees γi, γj
are fused, in the resulting tree (i) they are replaced
by a node v′, for which it holds that all in-going
edges of vi, vj now point to v′ and (ii) the subtrees
dominated by vi and vj are immediately adjacent
and dominated by v′ in the resulting tree. We restrict
fusion to pairs of nodes, of which at least one node is
the root node of the respective tree, in order to main-
tain the tree shape of the derived tree. Furthermore,
it holds that the categorial labels of the fused nodes
must be identical.

An important split then is between fusion of root
nodes and fusion of a root and a non-root node: the
former one, but not the latter one, is non-embedding
in that the affected trees are equivalent in the deriva-
tion process. In that respect, fusion at inner nodes
bears more similarity to attachement and multiple
adjunction (Schabes and Shieber, 1994). Fusion
in general, however, integrates both arguments and
modifiers. The derived tree in Fig. 6 is then the result
of the derivation and the lexical entries in Fig. 10.
Note that adjunction only applies to the root node
of target trees. The division of labor is the follow-
ing: adjunction extends locality, while fusion at an
inner node parallels substitution and defines islands
of locality. Hence, the argument set of tree tuples
consists of spinal trees that have non-terminal leaves
(i.e. the argument slots) and that either are initial or
auxiliary trees. To give an example, the NP-slots
in the argument sets of the tuples in Fig. 10 con-
stitute islands, whereas the VP-slots do not. The
derivational meaning of tree tuples is then the fol-
lowing: The argument trees are (directly or indi-
rectly) fused with the head tree, otherwise the ar-
gument trees stand in a node sharing relation to the
head tree based on the derivation tree.

Other than the proposal with attachment, it is now
possible to underspecify the relative position of the
head anchor and the verbal complement. The deriva-
tion of the partial fronting case in (3), therefore, does
not require concessions such as the violation against
the head tree constraint. In fact, it does not even

Lexical partition of the derived tree:

VP VP VP VP

VPpart* V NPacc NPnom

VP VP hat

VPinf* V

VP versprochen

V

zu reparieren

Lexical entries:

〈 VP

V

hat

,





VP

NPnom
,

VP

VPpart*





〉

〈 VP

V

versprochen

,





VP

VPinf*





〉

〈 VP

V

zu reparieren

,





VP

NPacc





〉

Figure 10: Derivation and lexical entries according to
spinal TT-MCTAG with fusion.

require further lexical variation such that the tree tu-
ples in Fig. 10 suffice also to this end.

This shift to the fusion operation, however, has
significant effects on the nature of the derivation tree
and thus on the notion of node sharing. Moreover, it
is necessary to define a regulation method for fusion
which differs from usual feature-unification-based
approaches. Both issues are covered separately in
the next two sections.

4 The new face of the derivation tree

Since fusion at the root node is understood as be-
ing inherently non-embedding, it is indicated with

From Partial VP Fronting towards Spinal TT-MCTAG

89



chains as nodes in the derivation tree. Edges are
then used for the representation of fusion to some
non-root node, and for the representation of adjunc-
tion. In other words, edges are dominance rela-
tions, whereas nodes represent precedence relations.
Hence, the derivation in Fig. 10 receives the deriva-
tion tree in Fig. 11. Note that the edge label indi-
cates adjunction (A) or fusion (F) followed by the
tree label of the embedding tree. Fusion labels fur-
thermore contain the Gorn address of the embedding
tree.3 Other than in TAG derivation trees, auxiliary
trees dominate their target since adjunction is only
necessary at the root node.

Such derivation trees can be defined in the fol-
lowing way: A spinal TT-MCTAG derivation tree
is a tuple D = 〈C, V,E〉 with labelling functions
lE : E → LE and lV : V → LV , where V is the set
of nodes, C is the set of chains4 with C = V ×2V×V
and E is the set of edges with E = C × C . It holds
that E is a tree over C. For each v ∈ V there is
exactly one ζ ∈ C with ζ = 〈Vζ , Eζ〉, such that
v ∈ Vζ .

The idea of node sharing is to constrain the path
between the head and its argument in a derivation
tree. Elementary trees, however, now correspond to
nodes of chains. This can be accounted for in the
following way: Given a spinal TT-MCTAG deriva-
tion tree D = 〈C, V,E〉, a path P between nodes
vi, vj in chains ζi, ζj ∈ C is a subset of E, such that
ζi

∗−→P ζj .
Therefore, the path from the argument NPacc to its

head zu reparieren in Fig. 11 is the edge label
sequence A.VPpart, A.VPinf .

5 Adapting the node sharing relation

Having explained paths in such derivation trees, we
can now specify the node sharing relation that is es-
sential for the derivational meaning of tree tuples:
Given two nodes vi, vj ∈ V in a spinal TT-MCTAG
derivation tree D, vi is in the node sharing relation
to vj , iff all edges in the path P from vi to vj ac-
cording to D have the label A.TID, with TID being
a tree label. This excludes edges with label F.TID.p,

3The Gorn address of the root node is ε while the Gorn ad-
dress of the ith daughter of a node with Gorn address p is p · i.

4Chains are trees where the nodes have out-degree and in-
degree of at most 1.

p > 0. A node sharing relation of this kind holds for
the nodes with label NPacc and zu reparieren in
the derivation tree in Fig. 11. Note that, contrary to
the original definition of node sharing, the argument
now dominates the head in the derivation tree.

Finally, we can explicate, what a well-formed
derivation tree for a spinal TT-MCTAG G is: Given
a spinal TT-MCTAG derivation tree D = 〈C, V,E〉,
if v1, . . . , vn ∈ V are pairwise different nodes for
which it holds that lV (vi) = γ for 1 ≤ i ≤ n
with γ being the head tree of a tree tuple 〈γ,A〉 in
G, then for each γ′ ∈ A, there are pairwise differ-
ent nodes u1, . . . , un ∈ V with lV (ui) = γ′ for
1 ≤ i ≤ n. Furthermore, ui and vi are members
of a chain ζ ∈ C , or ui is a member of ζu ∈ C and
vi is a member of ζv ∈ C and ζv → ζu, or ui is in a
node sharing relation to vi.

This also holds for the derivation tree in Fig. 11.

6 The regulation of fusion

Substitution and adjunction is usually regulated by
using some kind of feature unification, also referred
to as top-bottom unification. This has to be adapted
in the case of attachment, since attachment, other
than substitution and adjunction, needs to be reg-
ulated also with respect to the direction of attach-
ment.5 Fusion, on the other side, does not seem
to be compatible with a feature unification account
due to its non-embedding nature. Instead, we pro-
pose and briefly sketch a novel regulation method,
where node labels refer to recursive transition net-
works (RTN,(Woods, 1970)). RTNs are named finite
state automata where transitions may additionally
depend on successful calls of further RTNs. Other
than regular finite state automata, RTNs are weakly
equivalent with CFGs. We use RTNs in the follow-
ing way: a categorial label of a node in a elementary
tree, say VPfin, does not stand for a set of features,
but maps onto an RTN as depicted in Fig. 12, such
that fusion effects state transitions rather than fea-
ture unifications. This implies a strict order on the
application of fusion from the left to the right. While
the non-terminals AP, NP and VP point to respective
RTNs, the POS-labels Vfin and PART(ICLE) can

5C.f. sister adjunction constraints (SAC) from (Rambow et
al., 1995).

Timm Lichte

90



<VPpart,hat,NPacc,NPnom>

<VPinf,versprochen>

A.VPpart

<zu reparieren>

A.VPinf

<den Kühlschrank>

F.NPacc .1

<Peter>

F.NPnom .1

Figure 11: Derivation tree for (1) according to the spinal TT-MCTAG in Fig. 10.

AP|NP|VP Vfin AP|NP|VP PART

PART

AP|NP|VP AP|NP|VP

Figure 12: A recursive transition network for the label VPfin, i.e. a finite clause.

be regarded as terminal symbols. Note that the pro-
vided prototype of a VPfin-RTN straightforwardly
accounts for the prefield conditions for German - the
conditions being that the prefield, i.e. the preverbal
position, must be occupied and there is exactly one
constituent that occupies it.

7 The generative power of spinal
TT-MCTAG

From a linguistic point of view, one central ingre-
dient of mild context-sensitivity certainly is the po-
tential for the analysis of cross-serial dependencies.
While German usually serves as an exemplar of a
center embedding language, it also allows for cross-
serial dependencies (to some degree) due to the flex-
ible order of the nominal arguments. This can be
observed, e.g., in (4).

(4) dass
that

den Kühlschrank
the fridge

ihm
him

Peter
Peter

reparieren
repair

half
helped

’that Peter helped him to repair the fridge’

This kind of cross-serial dependency guided by case
is derivable in both versions of a spinal TT-MCTAG.
The order of the NP sequence and the verbal com-
plex is basically independent. In Dutch, however,

where the mapping of verbs and arguments depends
on their relative order, this does not suffice. The as-
sumed generalization is that the ith noun can be only
the subject of the ith verb, but counting so far is not
supported by spinal TT-MCTAG.

(5) dat
that

Jan
Jan

Piet
Piet

Marie
Marie

zag
saw

helpen
help

swemmen
swim

’that Jan saw Piet helping Marie to swim’

8 Conclusion

Certain partial VP fronting phenomena in German
seem to pose an intractable problem for currently
available MCTAG variants for German, i.e. V-TAG
and TT-MCTAG. This paper therefore proposed to
aim at flatter derived structures and investigated
ways to modify TT-MCTAG, in order to generate
them. Ideas for two novel variants of TT-MCTAG,
spinal TT-MCTAG with attachment and spinal TT-
MCTAG with fusion, were sketched, which both of-
fer means to account for the data in question. It
turned out that spinal TT-MCTAG with fusion per-
forms better, since it is straightforwardly applica-
ble to other phenomena of flexible word order with-
out violating the head tree constraint, contrary to

From Partial VP Fronting towards Spinal TT-MCTAG

91



spinal TT-MCTAG with attachment. Another ma-
jor advantage is that the number of lexical entries
considerably reduces due to the spinal shape of the
head tree. In return, the shape of the derivation tree
had to be modified, replacing atomic node labels by
chains, which correspond to the non-embedding na-
ture of the fusion operation. For the regulation of
fusion, we proposed to use recursive transition net-
works instead of feature unification. These modifi-
cations due to fusion certainly are far-reaching, but
we think that they are far from being mere technical
repairs. RTNs, for example, offer interesting means
to express syntactic generalizations.

Certainly, the current paper does not present a
complete picture of the proposal, and there are many
aspects, e.g. complexity issues and the regulation by
RTNs, that have to be worked out in further research.

References

Manuel Bodirsky, Marco Kuhlmann, and Mathias Möhl.
2005. Well-nested drawings as models of syntactic
structure. In In 10th Conference on Formal Grammar
and 9th Meeting on Mathematics of Language (FG-
MOL05), Edinburgh.

David Chiang. 2003. Statistical parsing with an auto-
matically extracted tree adjoining grammar. In Rens
Bod, Remko Scha, and Khalil Sima’an, editors, Data
Oriented Parsing, pages 299–316. CSLI Publications.

Kim Gerdes. 2004. Tree Unification Grammar. In
Lawrence S. Moss and Richard T. Oehrle, editors,
Electronic Notes in Theoretical Computer Science,
volume 53. Elsevier. Proceedings of the joint meet-
ing of the 6th Conference on Formal Grammar and the
7th Conference on Mathematics of Language.

Laura Kallmeyer. 2009. A declarative characterization
of different types of multicomponent tree adjoining
grammar. Research on Language and Computation,
7:55–99.

Marco Kuhlmann and Mathias Möhl. 2006. Extended
cross-serial dependencies in Tree Adjoining Gram-
mars. In Proceedings of the 8th International Work-
shop on Tree Adjoining Grammar and Related For-
malisms, pages 121–126, Sydney.

Timm Lichte. 2007. An MCTAG with tuples for coher-
ent constructions in German. In Proceedings of the
12th Conference on Formal Grammar. Dublin, Ire-
land, 4-5 August 2007.

Owen Rambow, K. Vijay-Shanker, and David Weir.
1995. D-tree grammars. In Proceedings of the 33rd

Annual Conference of the Association for Computa-
tional Linguistics, Cambridge, MA.

Owen Rambow. 1994. Formal and Computational As-
pects of Natural Language Syntax. Ph.D. thesis, Uni-
versity of Pennsylvania, Philadelphia. IRCS Report
94-08.

Yves Schabes and Stuart Shieber. 1994. An alterna-
tive conception of tree-adjoining derivation. Compu-
tational Linguistic, 20(1):91–124.

Libin Shen. 2006. Statistical LTAG Parsing. Ph.D. the-
sis, University of Pennsylvania.

William A. Woods. 1970. Transition network gram-
mars for natural language analysis. Commun. ACM,
13:591–606, October.

Timm Lichte

92


