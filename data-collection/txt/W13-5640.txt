




















A Grammar Sparrer for Norwegian  
 

 

Lars Hellan1, Tore Bruland2, Elias Aamot3, Mads H. Sandøy4 
 

(1,3,4) Department of Language and Communication Studies, NTNU, N-7491 Trondheim 
(2) Department of Informatics, NTNU, N-7491 Trondheim 

lars.hellan@ntnu.no, torebrul@idi.ntnu.no, eliasaa@stud.ntnu.no, 

mads_h_s@hotmail.com 

 

 

ABSTRACT 

We demonstrate an on-line tool for grammatical error detection for Norwegian with freely chosen 
inputs, and error-messages informing the user about possible mistakes; the system also generates 
grammatically correct alternatives for ill-formed input strings. The system is built as an extension 
to a general-purpose large HPSG grammar of Norwegian, with special ‘mal’-rules identifying a 
set of 40 types of errors. The system is still a prototype. 

  

KEYWORDS:   Computer Assisted Language Learning, HPSG, LKB, error message, mal-rules 

Proceedings of the 19th Nordic Conference of Computational Linguistics (NODALIDA 2013); Linköping Electronic Conference Proceedings #85 [page 435 of 474]



1 Introduction 

The Norwegian Online Grammar Sparrer is an interactive online Grammar Tutor with freely 
chosen written inputs, with error-messages informing the user about possible mistakes, and 
generated grammatically correct alternatives for some ill-formed input strings. The system is 
developed at NTNU, and was first taken into use in 2011. It is built as an extension to a general-
purpose large HPSG grammar of Norwegian (see below). 

2 Functionalities of the system 

The main functionalities can be illustrated as follows. A user writes a putative Norwegian 
sentence into a window, as shown in FIGURE 1;1

 

 if grammatical, the system responds that the 
sentence is grammatical, while if ungrammatical, the system informs the user in what respect the 
string is ungrammatical. FIGURE 1 shows how, for the ungrammatical string “Mannet smiler”, 
one gets the feedback The word “mannet” is of masculine gender, not neuter.  

 

FIGURE 1:   Illustration of Error Information display 

 

In addition to the slot for error message(s), the window provides three buttons: Info takes one to a 
detailed instruction about the tool,2 More description takes one to succinct information about the 
relevant aspect of Norwegian grammar,3

 

 and by pushing Generate, one can get an example of 
how the intended sentence should be written, as illustrated in FIGURE 2 for the same string: 

 

FIGURE 2:   Illustration of Correct Option generation 
                                                           
1  http://regdili.idi.ntnu.no:8080/studentAce/parse 
2  http://typecraft.org/tc2wiki/Classroom:Norwegian_Grammar_Checking 
3  In the relevant case, http://typecraft.org/tc2wiki/The_Noun_Phrase_-_Norwegian. 

Proceedings of the 19th Nordic Conference of Computational Linguistics (NODALIDA 2013); Linköping Electronic Conference Proceedings #85 [page 436 of 474]



 

We call the system ‘grammar sparring’ to highlight the circumstance that the system immediately 
responds to each move by the user. While the interface shown above is for this interaction, a 
more general wiki interface is being hosted at TypeCraft 4 , with instructions and pages 
supplementing those accessed by the buttons Info and More description mentioned above.5

3 The system architecture 

 

The system builds on the computational grammar NorSource of Norwegian, developed at 
NTNU, 6

With Norsource as a so-called ‘bon-grammar’, a 'mal-apparatus' is built onto the 'bon'-grammar, 
with ‘mal-rules’ accommodating a predefined set of grammatical errors. Norsource and the ‘mal-
apparatus together constitute the full system named NorMal, all parts of Norsource thus being 
used in NorMal, while NorMal includes files not used in Norsource. When an illformed string is 
parsed, with an error type which has been assigned a mal-rule, the set of syntactic rules accepting 
the string will include a mal-rule. The strategy enabling generation of recommendations is to let 
mal-rules and mal-lexical entries introduce into the MRS exactly the same EP(s) as their ’bon’-
counterparts generally introduce, whereby generation can produce well-formed strings coming 
very close to the intended form.  

 and is an implemented HPSG grammar (Pollard and Sag 1994) based on the 
development platform LKB (Copestake 2002). LKB grammars are purely declarative, in that 
they define what are possible structures in a language, while the status of ungrammatical for a 
given string resides in its not being included in this set of structures; thus, such a grammar 
contains no negative statements. NorSource uses the architecture of the HPSG Grammar Matrix 
(Bender 2010, 2012), which includes the semantic representation formalism Minimal Recursion 
Semantics (MRS; Copestake et al. 2005); such a representation accompanies any parse produced 
by the grammar, and from it, sentences of the language can be generated (such a grammar is thus 
both ‘analyzing’ and ‘generating’). This generation capacity is crucial in the recommendation 
capacity illustrated in Figure 2, the recommended sentence being generated from the MRS of the 
input string.   

Norsource currently has close to 200 phrasal combinatory rules, and verb- and adjective lexicons 
with approximately 10,000 entries each. A noun lexicon with about 50,000 entries is also 
available, but not used in the Grammar Sparrer, as it induces too much parse ambiguity at the 
present point. The number of MRSs from a parsed sentence generally depends on the strictness of 
the rules of the grammar, but even with the fairly strict format presently used, a given parse – 
especially with mal-rules involved – will be associated with many MRSs. While it is in many 
cases impossible to predict the intended grammatical sentence of the user, a qualified guess is 
still possible. In this regard, it is essential that the relevant MRS can be automatically chosen, and 
for this purpose we use the parse ranker Velldal (2008) implemented with treebanking in 
[tsdb++] (Oepen et al. 1998, 2002), a tool in the LOGON system (Oepen et al. 2004). A number 
of sentences representative of the expected input of our system are treebanked and a ranking 
model is trained, using Rob Malouf's Toolkit for Advanced Discriminative Modeling 
(http://tadm.sourceforge.net/). The model is loaded with the grammar and it sorts the MRSes 
                                                           
4     http://typecraft.org 
5    http://typecraft.org/tc2wiki/Feedback_messages,  

   http://typecraft.org/tc2wiki/Grammar_sparring_phenomena 
6    http://typecraft.org/tc2wiki/Norwegian_HPSG_grammar_NorSource 

Proceedings of the 19th Nordic Conference of Computational Linguistics (NODALIDA 2013); Linköping Electronic Conference Proceedings #85 [page 437 of 474]



according to the ranking model. For the selection of MRS for a given parse, the system will 
choose the first MRS in the list.  

Such selection is particularly important in cases where parses with alternative mal-rules – or sets 
of mal-rules – are produced in a parse. It is similarly essential if one wants to deploy the large 
noun lexicon: in Norwegian, there are very many noun stems homophonous with verb stems, and 
only systematic tree-banking can ‘relegate’ the noun options below the verb option on the parse 
ranking.  

From the outset, parsing in the system has been done in processing system PET7, and generation 
in LKB. During the last year we have taken into use the system ACE 8

4 Pedagogical development and outlook  

, integrated for both 
purposes, thereby increasing speed by a significant factor.      

We originally based our mal-rule development on a corpus of common errors among L2 learners 
of Norwegian at NTNU. The set of phenomena covered in this corpus has proved adequate for 
the system so far, but we will soon face the need for increasing the phenomena range.9

With a running log of sentences processed by the Sparrer, we get continuous feedback on the 
number of use interactions (approximately 3000 per month, currently), and on the behavior of the 
system regarding correct identification of grammatical vs. ungrammatical, and delivery and 
correctness of error messages. The Sparrer is in addition a recommended facility in the 
Norwegian L2 course NoW hosted at NTNU,

  

10

In the general context of Computer Assisted Language Learning, the present system follows a 
type of architecture envisaged in Schneider, D. and K. McCoy (1998), and situated relative to 
LKB systems in Bender et al. (2004). Relative to the overview of CALL systems presented in 
Heift et al. (2007), the system is ‘rule based’ rather than ‘constraint-based’ (despite HPSG as a 
framework being commonly called ‘constraint-based’). Among CALL systems implemented with 
LKB, to our knowledge the only other system in current use is a system based on the English 
grammar ERG (cf. Flickinger 2010), used in primary school teaching, with a more closed 
pedagogical architecture, and with a significantly broader scope.  

 an environment in which more systematic 
pedagogical developments of the tool can be tried out and tested in the future. 

What the present type of system perhaps most interestingly demonstrates is the way in which a 
fully ‘generic’ grammar – i.e., a domain- and purpose-neutral grammar – can be seamlessly 
extended into a working pedagogical system. This aspect is particularly interesting in view of the 
fact that there are currently 8-10 fairly large grammars based on the Grammar Matrix format, and 
thus using the same formalism as Norsource: an architecture made operative for one of them can 
relatively easily be applied to others as well. In addition to the rapid avenue to a multi-lingual 
system of grammar checkers thereby opening, the circumstance that the grammars in all of their 
modules use largely the same formalism opens for the possibility of creating parallel repositories 
of language information, and thereby the build-up of parallel pedagogical resources. 

 

                                                           
7  http://moin.delph-in.net/PetTop  
8  http://moin.delph-in.net/AceTop  
9 See footnote 5 for links to overview of phenomena.   
10  http://www.ntnu.edu/now 

Proceedings of the 19th Nordic Conference of Computational Linguistics (NODALIDA 2013); Linköping Electronic Conference Proceedings #85 [page 438 of 474]



 

 

References  

Bender, E. M., D. Flickinger, S. Oepen and A. Walsh (2004). "Arboretum: Using a precision 
grammar for grammar checking in CALL," in Proceedings of the InSTIL/ICALL Symposium 
2004, Venice, Italy.  

Bender, E.M., Scott Drellishak, Antske Fokkens, Laura Poulson. and S. Saleem. 2010. 
Grammar Customization. In Research on Language & Computation, Volume 8, Number 1, 23-
72. 

Bender, E.M., Sumukh Ghodke, Timothy Baldwin and Rebecca Dridan. 2012.  From Database 
to Treebank: On Enhancing Hypertext Grammars with Grammar Engineering and Treebank 
Search. In Sebastian Nordhoff (ed) Electronic Grammaticography. Pp179-206.  

Copestake, A. (2002). Implementing Typed Feature Structure Grammars. CSLI Publications, 
Stanford.  

Copestake, A., D. Flickinger, C. Pollard, and  I. Sag. (2005). Minimal Recursion Semantics: an 
Introduction. Research on Language and Computation 3(4): 281—332.  

Heift, T., and M. Schulze. (2007). Errors and Intelligence in Computer-Assisted Language 
Learning: Parsers and Pedagogues. Routledge, New York.  

Flickinger, D. (2010). Prescription and Explanation -- Using an HPSG implementation to teach 
writing skills. Invited talk, HPSG Conference 2010. 

Heift, T., and M. Schulze. (2007). Errors and Intelligence in Computer-Assisted Language 
Learning: Parsers and Pedagogues. Routledge, New York.  

Oepen, S. and D. Flickinger (1998). Towards systematic grammar profiling. test suite 
technology ten years after. Journal of Computer Speech and Language 12(4), 411 - 436. 

Oepen, S., K. Toutanova, S. Shieber, C. Manning, D. Flickinger, and T. Brants (2002). The 
lingo redwoods treebank: Motivation and preliminary applications. In Proceedings of the 19th 
international conference on Computational linguistics-Volume 2, pp. 1 - 5. Association for 
Computational Linguistics. 

Oepen, S., H. Dyvik, J. T. Lønning, E. Velldal, D. Beermann, J. Carroll, .n Flickinger, L. 
Hellan, J. B. Johannessen, P. Meurer, T. Nordgård, and V. Rosén (2004). Som å kapp-ete med 
trollet? Towards MRS-based Norwegian-English Machine Translation. In Proceedings of the 
10th International Conference on Theoretical and Methodological Issues in Machine 
Translation, pp. 11 - 20. Baltimore, MD. 

Schneider, D. and K. McCoy (1998). "Recognizing Syntactic Errors in the Writing of Second 
Language Learners," in Proceedings of Coling-ACL, pp. 1198-1204.  Montreal.  

Velldal, E. (2008). Empirical realization ranking. Ph. D. thesis, The University of Oslo. 

 

Proceedings of the 19th Nordic Conference of Computational Linguistics (NODALIDA 2013); Linköping Electronic Conference Proceedings #85 [page 439 of 474]


