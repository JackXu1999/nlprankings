



















































Do Language Models Understand Anything? On the Ability of LSTMs to Understand Negative Polarity Items


Proceedings of the 2018 EMNLP Workshop BlackboxNLP: Analyzing and Interpreting Neural Networks for NLP, pages 222–231
Brussels, Belgium, November 1, 2018. c©2018 Association for Computational Linguistics

222

Do Language Models Understand Anything?
On the Ability of LSTMs to Understand Negative Polarity Items

Jaap Jumelet
University of Amsterdam

jaap.jumelet@student.uva.nl

Dieuwke Hupkes
ILLC, University of Amsterdam

d.hupkes@uva.nl

Abstract

In this paper, we attempt to link the inner
workings of a neural language model to lin-
guistic theory, focusing on a complex phe-
nomenon well discussed in formal linguis-
tics: (negative) polarity items. We briefly dis-
cuss the leading hypotheses about the licens-
ing contexts that allow negative polarity items
and evaluate to what extent a neural language
model has the ability to correctly process a
subset of such constructions. We show that the
model finds a relation between the licensing
context and the negative polarity item and ap-
pears to be aware of the scope of this context,
which we extract from a parse tree of the sen-
tence. With this research, we hope to pave the
way for other studies linking formal linguistics
to deep learning.

1 Introduction

In the past decade, we have seen a surge in the de-
velopment of neural language models (LMs). As
they are more capable of detecting long distance
dependencies than traditional n-gram models, they
serve as a stronger model for natural language.
However, it is unclear what kind of properties of
language these models encode. This does not only
hinder further progress in the development of new
models, but also prevents us from using models
as explanatory models and relating them to formal
linguistic knowledge of natural language, an as-
pect we are particularly interested in in the current
paper.

Recently, there has been an increasing interest
in investigating what kind of linguistic informa-
tion is represented by neural models, (see, e.g.,
Conneau et al., 2018; Linzen et al., 2016; Tran
et al., 2018), with a strong focus on their syntac-
tic abilities. In particular, (Gulordava et al., 2018)
used the ability of neural LMs to detect noun-verb
congruence pairs as a proxy for their awareness of

syntactic structure, yielding promising results. In
this paper, we follow up on this research by study-
ing a phenomenon that has received much atten-
tion by linguists and for which the model requires
– besides knowledge of syntactic structure – also a
semantic understanding of the sentence: negative
polarity items (NPIs).

In short, NPIs are a class of words that bear the
special feature that they need to be licensed by a
specific licensing context (LC) (a more elaborate
linguistic account of NPIs can be found in the next
section). A common example of an NPI and LC
in English are any and not, respectively: The sen-
tence He didn’t buy any books is correct, whereas
He did buy any books is not. To properly process
an NPI construction, a language model must be
able to detect a relationship between a licensing
context and an NPI.

Following Linzen et al. (2016); Gulordava et al.
(2018), we devise several tasks to assess whether
neural LMs (focusing in particular on LSTMs) can
handle NPI constructions, and obtain initial posi-
tive results. Additionally, we use diagnostic clas-
sifiers (Hupkes et al., 2018) to increase our insight
in how NPIs are processed by neural LMs, where
we look in particular at their understanding of the
scope of an LCs, an aspect which is also relevant
for many other natural language related phenom-
ena.

We obtain positive results focusing on a subset
of NPIs that is easily extractable from a parsed cor-
pus but also argue that a more extensive investiga-
tion is needed to get a complete view on how NPIs
– whose distribution is highly diverse – are pro-
cessed by neural LMs. With this research and the
methods presented in this paper, we hope to pave
the way for other studies linking neural language
models to linguistic theory.

In the next section, we will first briefly discuss
NPIs from a linguistic perspective. Then, in Sec-



223

tion 3, we provide the setup of our experiments
and describe how we extracted NPI sentences from
a parsed corpus. In Section 4 we describe the
setup and results of an experiment in which we
compare the grammaticality of NPI sentences with
and without a licensing context, using the prob-
abilities assigned by the LM. Our second experi-
ment is outlined in Section 5, in which we describe
a method for scope detection on the basis of the
intermediate sentence embeddings. We conclude
our findings in Section 6.

2 Negative Polarity Items

NPIs are a complex yet very common linguis-
tic phenomenon, reported to be found in at least
40 different languages (Haspelmath, 1997). The
complexity of NPIs lies mostly in the highly id-
iosyncratic nature of the different types of items
and licensing contexts. Commonly, NPIs occur in
contexts that are related to negation and modali-
ties, but they can also appear in imperatives, ques-
tions and other types of contexts and sentences.
This broad range of context types makes it chal-
lenging to find a common feature of these con-
texts, and no overarching theory that describes
when NPIs can or cannot occur yet exists (Barker,
2018). In this section, we provide a brief overview
of several hypotheses about the different contexts
in which NPIs can occur, as well as examples
that illustrate that none of these theories are com-
plete in their own regard. An extensive description
of these theories can be found in (Giannakidou,
2008), (Hoeksema, 2012), and (Barker, 2018),
from which most of the example sentences were
taken. These sentences are also collected in Table
1.

Entailment A downward entailing context is a
context that licenses entailment to a subset of the
initial clause. For example, Every is downward
entailing, as Every [ student ] left entails that Ev-
ery [ tall student ] left. In (Ladusaw, 1980), it is
hypothesized that NPIs are licensed by downward
entailing contexts. Rewriting the previous exam-
ple to Every [ student with any sense ] left yields
a valid expression, contrary to the same sentence
with the upward entailing context some: Some
[student with any sense ] left. An example of a
non-downward entailing context that is a valid NPI
licensor is most.

Non-veridicality A context is non-veridical
when the truth value of a proposition (veridical-
ity) that occurs inside its scope cannot be inferred.
An example is the word doubt: the sentence Ann
doubts that Bill ate some fish does not entail Bill
ate some fish. (Giannakidou, 1994) hypothesizes
that NPIs are licensed only in non-veridical con-
texts, which correctly predicts that doubt is a valid
licensing context: Ann doubts that Bill ate any
fish. A counterexample to this hypothesis is the
context that is raised by the veridical operator
only: Only Bob ate fish entails Bob ate fish, but
also licenses Only Bob ate any fish (Barker, 2018).

2.1 Related constructions

Two grammatical constructions that are closely re-
lated to NPIs are Free Choice Items (FCIs) and
Positive Polarity Items (PPIs).

Free Choice Items FCIs inhibit a property
called freedom of choice (Vendler, 1967), and are
licensed in contexts of generic or habitual sen-
tences and modal verbs. An example of such a
construction is the generic sentence Any cat hunts
mice, in which any is an FCI. Note that any in this
case is not licensed by negation, modality, or any
of the other licensing contexts for NPIs. English
is one of several languages in which a word can be
both an FCI and NPI, such as the most common
example any. Although this research does not fo-
cus on FCIs, it is important to note that the some-
what similar distributions of NPIs and FCIs can
severely complicate the diagnosis whether we are
dealing with an NPI or an FCI.

Positive Polarity Items PPIs are a class of
words that are thought to bear the property
of scoping above negation (Giannakidou, 2008).
Similar to NPIs their contexts are highly idiosyn-
cratic, and the exact nature of their distribution is
hard to define. PPIs need to be situated in a veridi-
cal (often affirmative) context, and can therefore
be considered a counterpart to the class of NPIs. A
common example of a PPI is some, and the varia-
tions thereon. It is shown in (Giannakidou, 2008)
that there exist multiple interpretations of some,
influenced by its intonation. The emphatic variant
is considered to be a PPI that scopes above nega-
tion, while the non-emphatic some is interpreted
as a regular indefinite article (such as a).



224

Context type
1. Every [ student with any sense ] left Downward entailing
2. Ann doubts that [ Bill ever ate any fish ] Non-veridical
3. I don’t [ have any potatoes ] Downward entailing
4. [ Did you see anybody ] ? Questions

Table 1: Various example sentences containing NPI constructions. The licensing context scope is denoted by
square brackets, the NPI itself in boldface, and the licensing operator is underlined. In our experiments we focus
mostly on sentences that are similar to sentence 3.

3 Experimental Setup

Our experimental setup consists of 2 phases: first
we extract the relevant sentences and NPI con-
structions from a corpus, and then, after passing
the sentences through an LM, we apply several di-
agnostic tasks to them.

3.1 NPI extraction

For extraction we used the parsed Google Books
corpus (Michel et al., 2011).

We focus on the most common NPI pairs, in
which the NPI any (or any variation thereon) is li-
censed by a negative operator (not, n't, never, or
nobody), as they can reliably be extracted from
a parsed corpus. As variations of any we con-
sider anybody, anyone, anymore, anything, any-
time, and anywhere (7 in total including any).

We first identify candidate NPI-LC relations
looking only at the surface form of the sentence,
by selecting sentences that contain the appropriate
lexical items. We use this as a pre-filtering step
for our second method, in which we extract spe-
cific subtrees given the parse tree of the sentence.
We consider 6 different subtrees, that are shown in
Table 2.

An example of such a subtree that licenses an
NPI is the following:

VP

VP

· · · any · · ·

RB

not

VBD

did

which could, for instance, be a subtree of the parse
tree of Bill did not buy any books. In this subtree,
the scope of the licensor not encompasses the VP
of the sentence. We use this scope to pinpoint the
exact range in which an NPI can reside.

Once all NPI constructions have been extracted,
we are able to gain more insight in the distance

Figure 1: Distribution of distances between NPI and
licensing context. Note the log scale on the y-axis.

between the licensing operator and an NPI, which
we plot in Figure 1. Note the use of a log scale
on the y-axis: in the majority of the constructions
(47.2%) the LC and NPI are situated only 2 posi-
tions from each other.

3.2 Model

For all our experiments, we use a pretrained 2-
layer LSTM language model with 650 hidden
units made available by Gulordava et al. (2018).1

For all tests we used an average hidden final state
as initialization, which is computed by passing all
sentences in our corpus to the LM, and averaging
the hidden states that are returned at the end of
each sentence.

We use two different methods to assess the
LSTMs ability to handle NPI constructions, which
we will discuss in the next two sections: one that
is based on the probabilities that are returned by
the LM, and one based on its internal activations.

4 Sentence Grammaticality

In our first series of experiments, we focus on the
probabilities that are assigned by the model to dif-

1github.com/facebookresearch/
colorlessgreenRNNs/tree/master/data

github.com/facebookresearch/colorlessgreenRNNs/tree/master/data
github.com/facebookresearch/colorlessgreenRNNs/tree/master/data


225

Construction # (% / corpus)
All corpus sentences 11.213.916
Containing any variation of any 301.836 (2.69%)
Licensed by negative operator 123.683 (1.10%)
Detected by subtree extractor 112.299 (1.00%)
1. (VP (VP RB [VP])) 70.017
He did n’t [ have any trouble going along ] .
2. (VP (MD RB [VP])) 27.698
I could not [ let anything happen to either of them ] .
3. (VP (VP RB [NP/PP/ADJP])) 8708
”There was n’t [ any doubt in his mind who was preeminent ] .”
4. (VP (NP RB [VP])) 3564
Those words never [ lead to anything good ] .
5. (S (RB [S/SBAR])) 1347
The trick is not [ to process any of the information I encounter ] .
6. (RB [NP/PP ADVP]) 930
There was not [ a trace of water anywhere ] .

Table 2: Various sentence constructions and their counts that were extracted from the corpus. Similar verb POS
tags are grouped under VP, except for modal verbs (MD). LC scope is denoted by square brackets.

ferent sequences. More specifically, we compare
the exponent of the normalized negative log prob-
ability (also referred to as perplexity) of different
sentences. The lower the perplexity score of a sen-
tence is, the better a model was able to predict its
tokens.

4.1 Rewriting sentences

While studying perplexity scores of individual
sentences is not very informative, comparing per-
plexity scores of similar sentences can provide in-
formation about which sentence is preferred by the
model. We exploit this by comparing the negative
polarity sentences in our corpus with an ungram-
matical counterpart, that is created by removing or
rewriting the licensing context.2

To account for the potential effect of rewriting
the sentence, we also consider the sentences that
originate from replacing the NPI in the original
and rewritten sentence with its positive counter-
part. In other words, we replace the variations of
any by those of some: anything becomes some-
thing, anywhere becomes somewhere, etc. We re-
fer to these 4 conditions with the terms NPIneg ,
NPIpos, PPIneg and PPIpos:

2Not and never are removed, nobody is rewritten to every-
body.

NPIneg : Bill did not buy any books
NPIpos: * Bill did buy any books
PPIneg : # Bill did not buy some books
PPIpos: Bill did buy some books

PPIneg would be correct when interpreting some
as indefinite article (non-emphatic some). In our
setup, NPIneg always refers to the original sen-
tence, as we always use a sentence containing an
NPI in a negative context as starting point. Of the
7 any variations, anymore is the only one without a
PPI counterpart, and these sentences are therefore
not considered for this comparison.

4.2 Comparing sentences

For all sentences, we compute the perplexity of the
original sentence, as well as the perplexity of the
3 rewritten versions of it. To discard any influence
that the removal of the licensing operator might
have on its continuation after the occurrence of the
NPI, we compute the perplexity of the sentence
up to and including the position of the NPI. I.e.,
in the example of Bill did not buy any books the
word books would not be taken into account when
computing the perplexity.

In addition to perplexity, we also consider the
conditional probabilities of the PPIs and NPIs,
given the preceding sentence.3 For example, for

3We also considered the SLOR score (Pauls and Klein,



226

NPIneg we would then compute P(any | Bill did
not buy).

4.3 Expectations

We posit the following hypotheses about the out-
come of the experiments.

• PP (NPIneg) < PP (NPIpos): We expect
an NPI construction to have a lower perplex-
ity than the rewritten sentence in which the
licensing operator has been removed.

• PP (PPIpos) < PP (PPIneg): Similarly, we
expect a PPI to be preferred in the positive
counterpart of the sentence, in which no li-
censing operator occurs.

• PP (NPIneg) < PP (PPIneg): We expect
an NPI to be preferred to a PPI inside a nega-
tive context.

• PP (PPIpos) < PP (NPIpos): We expect
the opposite once the licensor for this context
has been removed.

4.4 Results

In Figure 2, we plot the distribution of the perplex-
ity scores for each sentence type. The perplexi-
ties of the original and rewritten sentence without
the NPI are indicated by SENneg and SENpos,
respectively. This figure shows that the original
sentences have the lowest perplexity, whereas the
NPIs in a positive context are deemed most im-
probable by the model.

More insightful we consider Figure 3, in which
we plot the distribution of the relative differences
of the perplexity scores and conditional proba-
bilities for each of the above mentioned compar-
isons, and we report the percentage of sentences
that complied with our hypotheses. The relative
difference between two values a and b, given by
(a − b)/((a + b)/2), neatly maps each value pair
in a window between -2 (a � b) and 2 (a � b),
thereby providing a better insight in the difference
between two arrays of scores. We highlight some
of the previously mentioned comparisons below.

2012), that was shown in (Lau et al., 2017) to have a strong
correlation with human grammaticality judgments. The SLOR
score can be seen as a perplexity score that is normalized by
the average unigram probability of the sentence. It turned
out, however, that this score had such a strong correlation
with the perplexity scores (Spearman’s ρ of -0.66, Kendall’s
τ of -0.54), that we omitted a further analysis of the outcome.

Figure 2: Distribution of perplexity scores for all the
sentences.

PP (NPIneg) < PP (NPIpos) From Figure 3 it
is clear that the model has a very strong prefer-
ence for NPIs to reside inside the negative scope,
an observation that is supported by both the per-
plexity and probability scores. While observable
in both plots, this preference is most clearly vis-
ible when considering conditional probabilities:
the high peak shows that the difference between
the probabilities is the most defined of all compar-
isons that we made.

PP (NPIneg) < PP (PPIneg) The model has a
strong preference for NPIs over PPIs inside neg-
ative scope, although this effect is slightly less
prevalent in the perplexity scores. This might be
partly due to the fact that there exist interpretations
for some inside negative scope that are correct (the
non-emphatic some, as described in Section 2).
When looking solely at the conditional probabili-
ties the preference becomes clearer, showing simi-
lar behavior to the difference betweenNPIneg and
NPIpos.

PP (NPIneg) < PP (PPIpos) The original sen-
tences with NPIs are strongly preferred over the
rewritten sentences with PPIs, which indicates that
the rewriting in general leads to less probable sen-
tences. This finding is confirmed by comparing
the perplexities of the original and rewritten sen-
tence without the NPI or PPI (dotted line in the left
plot in Figure 3): the original sentence containing
the licensing context has a lower perplexity than
the rewritten sentence in 92.7% of the cases. The
profile of the differences between the 2 sentences
is somewhat similar to the other comparisons in
which the negative context is preferred. Given that



227

PERPLEXITY
< NPIpos PPIneg PPIpos

NPIneg 99.2% 88.7% 95.8%
NPIpos - 3.6% 17.3%
PPIneg - - 91.0%

P (w|c)
> NPIpos PPIneg PPIpos

NPIneg 99.3% 94.8% 93.4%
NPIpos - 34.0% 19.1%
PPIneg - - 30.1%

Figure 3: Results of perplexity and conditional probability tests. For perplexity a lower score is better, for proba-
bility a higher score is better. The plots denote the distribution of the relative differences between the scores of the
6 sentence pairs that are considered.

the considered sentences were taken from natural
data, it is not entirely unsurprising that removing
or rewriting a scope operator has a negative im-
pact on the probability of the rest of the sentence.
This observation, however, does urge care when
running experiments like this.

PP (PPIpos) < PP (NPIpos) When comparing
NPIs and PPIs in the rewritten sentences, it turns
out that the model does show a clear preference
that is not entirely due to a less probable rewriting
step. Both the perplexity (17.3%) and probability
(19.1%) show that the NPI did in fact strongly de-
pend on the presence of the licensing operator, and
not on other words that it was surrounded with.
The model is thus able to pick up a signal that
makes it prefer a PPI to an NPI in a positive con-
text, even if that positive context was obtained by
rewriting it from a negative context.

PP (PPIneg) < PP (NPIpos) PPIs in a nega-
tive context are strongly preferred to NPIs in a
faulty positive context: a lower perplexity was as-
signed to NPIpos in only 3.6% of the cases. This
shows that the model is less strict on the allowed
context for PPIs, which might be related to the
non-emphatic variant of some, as mentioned be-
fore.

PP (PPIneg) < PP (PPIpos) A surprising re-
sult is the higher perplexity that is assigned to
PPIs inside the original negative context compared
to PPIs in the rewritten sentence, which is oppo-
site to what we hypothesized. It is especially re-
markable considering the fact that the conditional
probability indicates an opposite result (at only
30.1% preference for the original sentence). Once
more the outcome of the perplexity comparison
might partly be due to the rewriting resulting in
a less probable sentence. When solely looking at
the conditional probability score, however, we can
conclude that the model has a preference for PPIs
to reside in positive contexts.

Long distances As shown in Figure 1, most dis-
tances between the LC and the NPI are rather
short. It might therefore be useful to look at the
performance of the model on sentences that con-
tain longer distance dependencies. In Figure 4 the
outcomes of the conditional probability task are
split out on the distance between the LC and the
NPI.

From this plot it follows that the shorter depen-
dencies were mostly responsible for the outcome
of our hypotheses. The significant differences be-
tween the original sentence and the rewritten sen-



228

Figure 4: Outcomes for the conditional probability task, split out on the distance between licensing context and
NPI. The averages that are reported in Figure 3 are denoted by the dotted lines.

tences NPIpos and PPIneg becomes less defined
when the distance is increased.

This might be partly due to the lower occurrence
of these constructions: 47.2% of the sentences in
our corpus are situated only 2 positions from each
other. Moreover, it would be interesting to see how
this behavior matches with that of human judg-
ments.

Conclusion We conclude that the LM is able
to detect a signal that indicates a strong relation-
ship between an NPI and its licensing context. By
comparing the scores between equivalent sentence
constructions we were able to account for possible
biases of the model, and showed that the output of
the model complied with our own hypotheses in
almost all cases.

5 Scope detection

In the previous section, we assessed the ability of
a neural LM to handle NPI constructions, based on
the probabilities returned by the LM. In the current
section, we focus on the hidden states that the LM
uses to arrive at a probability distribution over the
vocabulary. In particular, we focus on the scope of
the licensing operator, which determines where an
NPI can occur.

Setup
Using the parse tree extraction method described
in Section 3, we annotate all sentences in our
corpus with the scope of the licensing operator.
Following Hupkes et al. (2018), we then train

diagnostic classifiers to predict for each word
in the sentence whether it is inside the licensing
scope. This is done on the basis of the hidden
representation of the LM that is obtained after it
just processed this word. We differentiate between
5 different labels: pre-licensing scope words (1),
the licensing operator (2), words inside the scope
(3), the NPI itself (4), and post-licensing scope
words (5). The sentence The man that died didn’t
have any relatives, but he died peacefully., for
example, is annotated as follows:

The1 man1 that1 died1 did1 n’t2 have3 any4
relatives3 ,5 but5 he5 died5 peacefully5 .5

The main positions of interest are the transi-
tion from within the licensing scope to the post-
scope range, and the actual classification of the
NPI and LC. Of lesser interest are the pre- and
post-licensing scope, as these are both diverse em-
beddings that do not depend directly on the licens-
ing context itself.

We train our model on the intermediate hidden
states of the final layer of the LSTM, using a lo-
gistic regression classifier. The decoder of the LM
computes the probability distribution over the vo-
cabulary by a linear projection layer from the final
hidden state. By using a linear model for classifi-
cation (such as logistic regression) we can investi-
gate the expressiveness of the hidden state: if the
linear model is able to fulfill a classification task,
it could be done by the linear decoding layer too.

As a baseline test, we also train a logistic regres-



229

sion model on representations that were acquired
by an additive model using GloVe word embed-
dings (Pennington et al., 2014). Using these em-
beddings as a baseline we are able to determine
the importance of the language model: if it turns
out that the LM does not outperform a simple ad-
ditive model, this indicates that the LM did not
add much syntactic information to the word em-
beddings themselves (or that no syntactic informa-
tion is required to solve this task). We used 300-
dimensional word embeddings that were trained
on the English Wikipedia corpus (as is our own
LM).

For both tasks (LM and GloVe) we use a subset
of 32k NPI sentences which resulted in a total of
250k data points. We use a split of 90% of the data
for training, and the other 10% for testing classifi-
cation accuracy.

Results
The classifier trained on the hidden states of the
LM achieved an accuracy of 89.7% on the test set.
The model that was trained on the same dataset
using the GloVe baseline scored 72.5%, show-
ing that the information that is encoded by the
LM does in fact contribute significantly to this
task. To provide a more qualitative insight into
the power of this classifier, we provide 3 remark-
able sentences that were classified accurately by
the model. Note the correct transition from licens-
ing scope to post-scope, and the correct classifica-
tion of the NPI and LC in all sentences here.

1. I1 ’d1 never2 seen3 anything4 like3 it3 and5
it5 ...5 was5 ...5 beautiful5 .5

2. “1 I1 do1 n’t2 think3 I3 ’m3 going3 to3 come3
to3 you3 for3 reassurance3 anymore4 ,5 ”5
Sibyl5 grumbled5 .5

3. But1 when1 it1 comes1 to1 you1 ,1 I1 ’m1
not2 taking3 any4 more3 risks3 than3 we3
have3 to3 .5

We ran a small evaluation on a set of 3000 sen-
tences (47020 tokens), of which 56.8% were clas-
sified completely correctly. Using the GloVe clas-
sifier only 22.1% of the sentences are classified
flawlessly. We describe the classification results in
the confusion matrices that are displayed in Figure
5.

Looking at the results on the LSTM embed-
dings, it appears that the post-licensing scope to-
kens (5) were misclassified most frequently: only

75.2% of those data points were classified cor-
rectly. The most common misclassification for
this class is class 3: an item inside the licens-
ing scope. This shows that for some sentences it
is hard to distinguish the actual border of the li-
censing scope, although 90.3% of the first post-
scope embeddings (i.e. the first embedding after
the scope has ended) were classified correctly. The
lower performance of the model on this class is
mostly due to longer sentences in which a large
part of the post-licensing scope was classified in-
correctly. This causes the model to pick up a noisy
signal that trips up the predictions for these tokens.
It is promising, however, that the NPIs (4) and li-
censing operator items (2) themselves are classi-
fied with a very high accuracy, as well as the to-
kens inside the licensing scope (3). When compar-
ing this to the performance on the GloVe embed-
dings, it turns out that that classifier has a strong
bias towards the licensing scope class (3). This
highlights the power of the LSTM embeddings, re-
vealing that is not a trivial task at all to correctly
classify the boundaries of the context scope. We
therefore conclude that the information that is rel-
evant to NPI constructions can be accurately ex-
tracted from the sentence representations, and fur-
thermore that our neural LM has a significant posi-
tive influence on encoding that structural informa-
tion.

6 Conclusion

We ran several diagnostic tasks to investigate the
ability of a neural language model to handle NPIs.
From the results on the perplexity task we con-
clude that the model is capable to detect the re-
lationship between an NPI and the licensing con-
texts that we considered. We showed that the lan-
guage model is able to pick up a distinct signal
that indicates a strong relationship between a neg-
ative polarity item and its licensing context. By
comparing the perplexities of the NPI construc-
tions to those of the equivalent PPIs, it follows that
removing the licensing operator has a remarkably
different effect on the NPIs than on the PPIs. This
effect, however, does seem to vanish when the dis-
tance between the NPI and licensing context is in-
creased. From our scope detection task it followed
that the licensing signal that the LM detects can
in fact be extracted from the hidden representa-
tions, providing further evidence of the ability of
the model in handling NPIs. There are many other



230

LSTM Embeddings
Correct label

Pred. 1 2 3 4 5
1 14891 83 408 2 760
2 203 2870 42 0 59
3 850 42 14555 15 1286
4 13 1 32 3005 44
5 520 11 821 0 6507

Total 16477 3007 15858 3022 8656

GloVe embeddings
Correct label

Pred. 1 2 3 4 5
1 11166 87 1077 0 249
2 178 1847 82 0 0
3 4708 1072 14166 353 4003
4 17 0 84 2669 36
5 408 1 449 0 4368

Total 16477 3007 15858 3022 8656

Figure 5: Confusion matrices for the scope detection task trained on the embeddings of an LSTM and the averages
of GloVe embeddings.

natural language phenomena related to language
scope, and we hope that our methods presented
here can provide an inspiration for future research,
trying to link linguistics theory to neural models.

The setup of our second experiment, for exam-
ple, would translate easily to the detection of the
nuclear scope of quantifiers. In particular, we be-
lieve it would be interesting to look at a wider ty-
pological range of NPI constructions, and inves-
tigate how our diagnostic tasks translate to other
types of such constructions. Furthermore, the find-
ings of our experiments could be compared to
those of human judgments syntactic gap filling
task. These judgments could also provide more in-
sight into the grammaticality of the rewritten sen-
tences.

The hypotheses that are described in Section 2
and several others that are mentioned in the litera-
ture on NPIs are strongly based on a specific kind
of entailment relation that should hold for the con-
texts in which NPIs reside. An interesting follow-
up experiment that would provide a stronger link
with the literature in formal linguistics on the sub-
ject matter, would be based on devising several
entailment tasks that are based on the various hy-
potheses that exists for NPI licensing contexts. It
would be interesting to see whether the model is
able to detect whether a context is downward en-
tailing, for example, or if it has more difficulty
identifying non-veridical contexts. This would
then also create a stronger insight in the seman-
tic information that is stored in the encodings of
the model. Such experiments would, however, re-
quire the creation of a rich artificial dataset, which
would give much more control in determining the
inner workings of the LSTM, and is perhaps a nec-
essary step to gain a thorough insight in the LM
encodings from a linguistic perspective.

Acknowledgements

We thank the reviewers, Samira Abnar, and
Willem Zuidema for their useful and constructive
feedback. DH is funded by the Netherlands Orga-
nization for Scientific Research (NWO), through a
Gravitation Grant 024.001.006 to the Language in
Interaction Consortium.

References
Chris Barker. 2018. Negative polarity as scope mark-

ing. Linguistics and Philosophy, pages 1–28.

Alexis Conneau, German Kruszewski, Guillaume
Lample, Loı̈c Barrault, and Marco Baroni. 2018.
What you can cram into a single vector: Probing
sentence embeddings for linguistic properties. arXiv
preprint arXiv:1805.01070.

Anastasia Giannakidou. 1994. The semantic licensing
of npis and the modern greek subjunctive. Language
and cognition, 4:55–68.

Anastasia Giannakidou. 2008. Negative and posi-
tive polarity items: Variation, licensing, and com-
positionality. In Claudia Maienborn, Klaus von
Heusinger, and Paul Porner, editors, Semantics: An
international handbook of natural language mean-
ing. Berlin: Mouton de Gruyter, pages 1660–1712.

Kristina Gulordava, Piotr Bojanowski, Edouard Grave,
Tal Linzen, and Marco Baroni. 2018. Color-
less green recurrent networks dream hierarchically.
pages 1195–1205.

M. Haspelmath. 1997. Indefinite Pronouns. Oxford
Studies in Typology and. Clarendon Press.

Jack Hoeksema. 2012. On the natural history of nega-
tive polarity items. Linguistic Analysis, 38(1):3.

Dieuwke Hupkes, Sara Veldhoen, and Willem
Zuidema. 2018. Visualisation and ’diagnostic classi-
fiers’ reveal how recurrent and recursive neural net-
works process hierarchical structure. Journal of Ar-
tificial Intelligence Research, 61:907–926.



231

W.A. Ladusaw. 1980. Polarity sensitivity as inherent
scope relations. Outstanding dissertations in lin-
guistics. Garland Pub.

Jey Han Lau, Alexander Clark, and Shalom Lappin.
2017. Grammaticality, acceptability, and probabil-
ity: a probabilistic view of linguistic knowledge.
Cognitive Science, 41(5):1202–1241.

Tal Linzen, Emmanuel Dupoux, and Yoav Goldberg.
2016. Assessing the ability of lstms to learn syntax-
sensitive dependencies. Transactions of the Associ-
ation for Computational Linguistics, 4:521–535.

Jean-Baptiste Michel, Yuan Kui Shen, Aviva Presser
Aiden, Adrian Veres, Matthew K. Gray, , Joseph P.
Pickett, Dale Hoiberg, Dan Clancy, Peter Norvig,
Jon Orwant, Steven Pinker, Martin A. Nowak, and
Erez Lieberman Aiden. 2011. Quantitative analysis
of culture using millions of digitized books. Sci-
ence, 331(6014):176–182.

Adam Pauls and Dan Klein. 2012. Large-scale syntac-
tic language modeling with treelets. In Proceedings
of the 50th Annual Meeting of the Association for
Computational Linguistics: Long Papers-Volume 1,
pages 959–968. Association for Computational Lin-
guistics.

Jeffrey Pennington, Richard Socher, and Christopher
Manning. 2014. Glove: Global vectors for word
representation. In Proceedings of the 2014 confer-
ence on empirical methods in natural language pro-
cessing (EMNLP), pages 1532–1543.

Ke Tran, Arianna Bisazza, and Christof Monz.
2018. The importance of being recurrent for
modeling hierarchical structure. arXiv preprint
arXiv:1803.03585.

Z. Vendler. 1967. Linguistics in philosophy. G - Refer-
ence, Information and Interdisciplinary Subjects Se-
ries. Cornell University Press.


