



















































Halo: Learning Semantics-Aware Representations for Cross-Lingual Information Extraction


Proceedings of the 7th Joint Conference on Lexical and Computational Semantics (*SEM), pages 142–147
New Orleans, June 5-6, 2018. c©2018 Association for Computational Linguistics

Halo: Learning Semantics-Aware Representations for Cross-Lingual
Information Extraction

Hongyuan Mei∗, Sheng Zhang∗, Kevin Duh, Benjamin Van Durme
Center for Language and Speech Processing, Johns Hopkins University
{hmei,s.zhang,kevinduh,vandurme}@cs.jhu.edu

Abstract

Cross-lingual information extraction (CLIE) is
an important and challenging task, especially
in low resource scenarios. To tackle this chal-
lenge, we propose a training method, called
Halo, which enforces the local region of each
hidden state of a neural model to only gener-
ate target tokens with the same semantic struc-
ture tag. This simple but powerful technique
enables a neural model to learn semantics-
aware representations that are robust to noise,
without introducing any extra parameter, thus
yielding better generalization in both high and
low resource settings.

1 Introduction

Cross-lingual information extraction (CLIE) is the
task of distilling and representing factual informa-
tion in a target language from the textual input in
a source language (Sudo et al., 2004; Zhang et al.,
2017b). For example, Fig. 1 illustrates a pair of
input Chinese sentence and its English predicate-
argument information1, where predicate and argu-
ment are well used semantic structure tags.

It is of great importance to solve the task, as to
provide viable solutions to extracting information
from the text of languages that suffer from no or
little existing information extraction tools. Neu-
ral models have empirically proven successful in
this task (Zhang et al., 2017b,c), but still remain
unsatisfactory in low resource (i.e. small number
of training samples) settings. These neural models
learn to summarize a given source sentence and
target prefix into a hidden state, which aims to
generate the correct next target token after being

∗equal contribution
1The predicate-argument information is usually denoted

by relation tuples. In this work, we adopt the tree-structured
representation generated by PredPatt (White et al., 2016;
Zhang et al., 2017d), which was a lightweight tool available
at https://github.com/hltcoe/PredPatt.

Figure 1: Example of cross-lingual information extraction:
Chinese input text (a) and linearized English PredPatt output
(b), where ‘:p’ and blue stand for predicate while ‘:a’ and
purple denote argument.

passed through an output layer. As each member
in the target vocabulary is essentially either pred-
icate or argument, a random perturbation on the
hidden state should still be able to yield a token
with the same semantic structure tag. This induc-
tive bias motivates an extra term in training objec-
tive, as shown in Fig. 2, which enforces the sur-
roundings of any learned hidden state to generate
tokens with the same semantic structure tag (either
predicate or argument) as the centroid. We call
this technique Halo, because the process of each
hidden state taking up its surroundings is analo-
gous to how the halo is formed around the sun.
The method is believed to help the model gen-
eralize better, by learning more semantics-aware
and noise-insensitive hidden states without intro-
ducing extra parameters.

2 The Problem

We are interested in learning a probabilistic model
that directly maps an input sentence {xi}Ii=1 =
x1x2 . . . xI of the source language S into an out-
put sequence {yt}Tt=1 = y1y2 . . . yT of the tar-
get language T , where S can be any human natu-
ral language (e.g. Chinese) and T is the English
PredPatt (White et al., 2016). In the latter vo-
cabulary, each type is tagged as either predicate
or argument—those with “:p” are predicates while
those with “:a” are arguments.

For any distribution P in our proposed fam-
ily, the log-likelihood ` of the model P given any

142



mortars:afiring:pstarted:p ?:p
?:aoutput layer

decoder unit

hidden space

Figure 2: Visualization of Halo method. While a neural
model learns to summarizes the current known information
into a hidden state and predict the next target token, the
surroundings of this hidden state in the same space (two-
dimensional in this example) are supervised to generate to-
kens with the same semantic structure tag. For example, at
the last shown step, the centroid of purple area is the summa-
rized hidden state and learns to predict ‘mortars:a’, while a
randomly sampled neighbor is enforced to generate an argu-
ment, although it may not be ‘mortars’ (thus denoted by ‘?’).
Similar remarks apply to the blue regions.

({yt}Tt=1 | {xi}Ii=1) pair is:

T∑

t=1

logP
(
yt | yt−1, . . . , y0, {xi}Ii=1

)
(1)

where y0 is a special beginning of sequence token.
We denote vectors by bold lowercase Roman

letters such as h, and matrices by bold capital Ro-
man letters such as W throughout the paper. Sub-
scripted bold letters denote distinct vectors or ma-
trices (e.g., pt). Scalar quantities, including vec-
tor and matrix elements such as hd and pt,yt , are
written without bold. Capitalized scalars represent
upper limits on lowercase scalars, e.g., 1 ≤ d ≤
D. Function symbols are notated like their return
type. All R → R functions are extended to apply
elementwise to vectors and matrices.

3 The Method

In this section, we first briefly review how the
baseline neural encoder-decoder models work on
this task, and then introduce our novel and well-
suited training method Halo.

3.1 Baseline Neural Models

Previous neural models on this task (Zhang et al.,
2017b,c) all adopt an encoder-decoder architec-
ture with recurrent neural networks, particularly
LSTMs (Hochreiter and Schmidhuber, 1997). At
each step t in decoding, the models summarize the
input {xi}Ii=1 and output prefix y1, . . . , yt−1 into
a hidden state ht ∈ (−1, 1)D, and then project
it with a transformation matrix W ∈ R|V|×D to
a distribution pt over the target English PredPatt

vocabulary V:

pt = ot/(1
>ot) (2a)

ot = expWht ∈ R|V|+ (2b)

where 1 is a |V|-dimensional one vector such that
pt is a valid distribution.

Suppose that the ground truth target token at this
step is yt, the probability of generating yt under
the current model is pt,yt , obtained by accessing
the yt-th element in the vector pt. Then the log-
likelihood is constructed as ` =

∑T
t=1 log pt,yt ,

and the model is trained by maximizing this ob-
jective over all the training pairs.

3.2 Halo

Our method adopts a property of this task—the vo-
cabulary V is partitioned into P , set of predicates
that end with “:p”, and A, set of arguments that
end with “:a”. As a neural model would summa-
rize everything known up to step t into ht, would
a perturbation h′t around ht still generate the same
token yt? This bias seems too strong, but we can
still reasonably assume that h′t would generate a
token with the same semantic structure tag (i.e.
predicate or argument). That is, the prediction
made by h′t should end with “:p” if yt is a pred-
icate, and with “:a” otherwise.

This inductive bias provides us with another
level of supervision. Suppose that at step t, a
neighboring h′t is randomly sampled around ht,
and is then used to generate a distribution p′t in
the same way as equation (2). Then we can get
a distribution q′t over C = {predicate, argument},
by summing all the probabilities of predicates and
those of arguments:

q′t,predicate =
∑

v∈P
p′t,v (3a)

q′t,argument =
∑

v∈A
p′t,v (3b)

This aggregation is shown in Fig. 3. Then the ex-
tra objective is `′ =

∑T
t=1 log q

′
t,ct , where ct =

predicate if the target token yt ∈ P (i.e. ending
with “:p”) and ct = argument otherwise.

Therefore, we get the joint objective to maxi-
mize by adding ` and `′:

`+ `′ =
T∑

t=1

log pt,yt +

T∑

t=1

log q′t,ct (4)

143



P
v2P pt,v

P
v2A pt,v

pt

qt

| {z } | {z }

V

C

Figure 3: Visualization of how q (distribution over C) is ob-
tained by aggregating p (distribution over V).

which enables the model to learn more semantics-
aware and noise-insensitive hidden states by en-
forcing the hidden states within a region to share
the same semantic structure tag.2

3.2.1 Sampling Neighbors
Sampling a neighbor around ht is essentially
equivalent to adding noise to it. Note that in a
LSTM decoder that previous work used, ht ∈
(−1, 1)D because ht = ot� tanh(ct) where ot ∈
(0, 1)D and tanh(ct) ∈ (−1, 1)D. Therefore, ex-
tra work is needed to ensure h′t ∈ (−1, 1)D. For
this purpose, we follow the recipe3:

• Sample h′′t ∈ (−1, 1)D by independently
sampling each entry from an uniform distri-
bution over (−1, 1);
• Sample a scalar λt ∈ (0, 1) from a Beta dis-

tribution B(α, β) where α and β are hyper-
parameters to be tuned;
• Compute h′t = ht + λt(h′′t − ht) such that
h′t ∈ (−1, 1)D lies on the line segment be-
tween ht and h′′t .

Note that the sampled hidden state h′t is only
used to compute q′t, but not to update the LSTM
hidden state, i.e., ht+1 is independent of h′t.

3.2.2 Roles of Hyperparameters
The Halo technique adds an inductive bias into the
model, and its magnitude is controlled by λt:

• λt ∈ (0, 1) to ensure h′t ∈ (−1, 1)D;
• λt → 0 makes h′t → ht, thus providing no

extra supervision on the model;

2One can also sample multiple, rather than one, neighbors
for one hidden state and then average their log q′t,ct . In our
experimental study, we only try one for computational cost
and found it effective enough.

3Alternatives do exist. For example, one can transform ht
from (−1, 1)D to (−∞,∞)D , add random (e.g. Gaussian)
noise in the latter space and then transform back to (−1, 1)D .
These tricks are valid as long as they find neighbors within the
same space (−1, 1)D as ht is.

• λt → 1 makes h′t uniformly sampled in entire
(−1, 1)D, and causes underfitting just like a
L-2 regularization coefficient goes to infinity.

We sample a valid λt from a Beta distribution
with α > 0 and β > 0, and their magnitude can
be tuned on the development set:

• When α→ 0 and β is finite, or α is finite and
β →∞, we have λt → 0;
• When α → ∞ and β is finite, or α is finite

and β → 0, we have λt → 1;
• Larger α and β yield larger variance of λt,

and setting λt to be a constant is a special
case that α→∞, β →∞ and α/β is fixed.

Besides α and β, the way of partitioning V (i.e.
the definition of C) also serves as a knob for tuning
the bias strength. Although on this task, the pred-
icate and argument tags naturally partition the vo-
cabulary, we are still able to explore other possibil-
ities. For example, an extreme is to partition V into
|V| different singletons, meaning that C = V—
a perturbation around ht should still predict the
same token. But this extreme case does not work
well in our experiments, verifying the importance
of the semantic structure tags on this task.

4 Related Work

Cross-lingual information extraction has drawn
a great deal of attention from researchers.
Some (Sudo et al., 2004; Parton et al., 2009; Ji,
2009; Snover et al., 2011; Ji and Nothman, 2016)
worked in closed domains, i.e. on a predefined
set of events and/or entities, Zhang et al. (2017b)
explored this problem in open domain and their at-
tentional encoder-decoder model significantly out-
performed a baseline system that does translation
and parsing in a pipeline. Zhang et al. (2017c)
further improved the results by inventing a hier-
archical architecture that learns to first predict the
next semantic structure tag and then select a tag-
dependent decoder for token generation. Orthog-
onal to these efforts, Halo aims to help all neural
models on this task, rather than any specific model
architecture.

Halo can be understood as a data augmentation
technique (Chapelle et al., 2001; Van der Maaten
et al., 2013; Srivastava et al., 2014; Szegedy
et al., 2016; Gal and Ghahramani, 2016). Such
tricks have been used in training neural net-
works to achieve better generalization, in appli-
cations like image classification (Simard et al.,

144



DATASET NUMBER OF PAIRS VOCABULARY SIZE TOKEN/TYPE

TRAIN DEV TEST SOURCE TARGET

CHINESE 941040 10000 39626 258364 234832 91.94
UZBEK 31581 1373 1373 69255 37914 12.18
TURKISH 20774 903 903 51248 32009 11.97
SOMALI 10702 465 465 29591 18616 12.78

Table 1: Statistics of each dataset.

METHOD CHINESE UZBEK TURKISH SOMALI

BLEU F1 BLEU F1 BLEU F1 BLEU F1
PRED ARG PRED ARG PRED ARG PRED ARG

MODELZ 22.07 30.06 39.06 10.76 12.46 24.08 7.47 6.49 17.76 13.06 13.91 25.38
MODELP 22.10 30.04 39.83 12.50 18.81 25.93 9.04 12.90 21.13 13.22 16.71 26.83
MODELP-Halo 23.18 30.85 41.23 12.95 19.23 27.63 10.21 12.55 22.57 14.26 17.06 27.73

Table 2: BLEU and F1 scores of different models on all these datasets, where PRED stands for predicate and ARG for argument.
Best numbers are highlighted as bold.

2000; Simonyan and Zisserman, 2015; Arpit et al.,
2017; Zhang et al., 2017a) and speech recogni-
tion (Graves et al., 2013; Amodei et al., 2016).
Halo differs from these methods because 1) it
makes use of the task-specific information—
vocabulary is partitioned by semantic structure
tags; and 2) it makes use of the human belief that
the hidden representations of tokens with the same
semantic structure tag should stay close to each
other. Some

5 Experiments

We evaluate our method on several real-world
CLIE datasets measured by BLEU (Papineni
et al., 2002) and F1, as proposed by Zhang et al.
(2017b). For the generated linearized PredPatt
outputs and their references, the former metric4

measures their n-gram similarity, and the latter
measures their token-level overlap. In fact, F1 is
computed separately for predicate and argument,
as F1 PRED and F1 ARG respectively.

5.1 Datasets

Multiple datasets were used to demonstrate the ef-
fectiveness of our proposed method, where one
sample in each dataset is a source language sen-
tence paired with its linearized English PredPatt
output. These datasets were first introduced as
the DARPA LORELEI Language Packs (Strassel
and Tracey, 2016), and then used for this task by
Zhang et al. (2017b,c). As shown in table 1, the
CHINESE dataset has almost one million training
samples and a high token/type ratio, while the oth-

4The MOSES implementation (Koehn et al., 2007) was
used as in all the previous work on this task.

ers are low resourced, meaning they have much
fewer samples and lower token/type ratios.

5.2 Model Implementation

Before applying our Halo technique, we first im-
proved the current state-of-the-art neural model of
Zhang et al. (2017c) by using residual connec-
tions (He et al., 2016) and multiplicative attention
(Luong et al., 2015), which effectively improved
the model performance. We refer to the model of
Zhang et al. (2017c) and our improved version as
ModelZ and ModelP respectively5.

5.3 Experimental Details

In experiments, instead of using the full vocab-
ularies shown in table 1, we set a minimum
count threshold for each dataset, to replace the
rare words by a special out-of-vocabulary symbol.
These thresholds were tuned on dev sets.

The Beta distribution is very flexible. In gen-
eral, its variance is a decreasing function of α+β,
and when α + β is fixed, the mean is an increas-
ing function of α. In our experiments, we fixed
α + β = 20 and only lightly tuned α on dev sets.
Optimal values of α stay close to 1.

5.4 Results

As shown in Table 2, ModelP outperforms Mod-
elZ on all the datasets measured by all the met-
rics, except for F1 PRED on CHINESE dataset.
Our Halo technique consistently boosts the model
performance of MODELP except for F1 PRED on
TURKISH.

5Z stands for Zhang and P for Plus.

145



Additionally, experiments were also conducted
on two other low resource datasets AMHARIC and
YORUBA that Zhang et al. (2017c) included, and
α = 0 in Halo was found optimal on the dev sets.
In such cases, this regularization was not helpful
so no comparison need be made on the held-out
test sets.

6 Conclusion and Future Work

We present a simple and effective training tech-
nique Halo for the task of cross-lingual informa-
tion extraction. Our method aims to enforce the
local surroundings of each hidden state of a neu-
ral model to only generate tokens with the same
semantic structure tag, thus enabling the learned
hidden states to be more aware of semantics and
robust to random noise. Our method provides
new state-of-the-art results on several benchmark
cross-lingual information extraction datasets, in-
cluding both high and low resource scenarios.

As future work, we plan to extend this technique
to similar tasks such as POS tagging and Semantic
Role Labeling. One straightforward way of work-
ing on these tasks is to define the vocabularies as
set of ‘word-type:POS-tag’ (so ct = POS tag) and
‘word-type:SR’ (so ct = semantic role), such that
our method is directly applicable. It would also be
interesting to apply Halo widely to other tasks as
a general regularization technique.

Acknowledgments

This work was supported in part by the JHU Hu-
man Language Technology Center of Excellence
(HLTCOE), and DARPA LORELEI. The U.S.
Government is authorized to reproduce and dis-
tribute reprints for Governmental purposes. The
views and conclusions contained in this publica-
tion are those of the authors and should not be
interpreted as representing official policies or en-
dorsements of DARPA or the U.S. Government.

References
Dario Amodei, Sundaram Ananthanarayanan, Rishita

Anubhai, Jingliang Bai, Eric Battenberg, Carl Case,
Jared Casper, Bryan Catanzaro, Qiang Cheng, Guo-
liang Chen, et al. 2016. Deep speech 2: End-to-end
speech recognition in english and mandarin. In In-
ternational Conference on Machine Learning. pages
173–182.

Devansh Arpit, Stanislaw Jastrzkebski, Nicolas Bal-
las, David Krueger, Emmanuel Bengio, Maxin-

der S Kanwal, Tegan Maharaj, Asja Fischer, Aaron
Courville, Yoshua Bengio, et al. 2017. A closer look
at memorization in deep networks. In International
Conference on Machine Learning. pages 233–242.

Olivier Chapelle, Jason Weston, Léon Bottou, and
Vladimir Vapnik. 2001. Vicinal risk minimization.
In Advances in neural information processing sys-
tems. pages 416–422.

Yarin Gal and Zoubin Ghahramani. 2016. A theoret-
ically grounded application of dropout in recurrent
neural networks. In Advances in neural information
processing systems. pages 1019–1027.

Alex Graves, Abdel-rahman Mohamed, and Geoffrey
Hinton. 2013. Speech recognition with deep recur-
rent neural networks. In Acoustics, speech and sig-
nal processing (icassp), 2013 ieee international con-
ference on. IEEE, pages 6645–6649.

Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian
Sun. 2016. Deep residual learning for image recog-
nition. In The IEEE Conference on Computer Vision
and Pattern Recognition (CVPR).

Sepp Hochreiter and Jürgen Schmidhuber. 1997.
Long short-term memory. Neural computation
9(8):1735–1780.

Heng Ji. 2009. Cross-lingual predicate cluster acquisi-
tion to improve bilingual event extraction by induc-
tive learning. In Proceedings of the Workshop on
Unsupervised and Minimally Supervised Learning
of Lexical Semantics. Association for Computational
Linguistics, Boulder, Colorado, USA, pages 27–
35. http://www.aclweb.org/anthology/
W09-1704.

Heng Ji and Joel Nothman. 2016. Overview of TAC-
KBP2016 Tri-lingual EDL and its impact on end-
to-end cold-start KBP. In Proceedings of the Text
Analysis Conference (TAC).

Philipp Koehn, Hieu Hoang, Alexandra Birch, Chris
Callison-Burch, Marcello Federico, Nicola Bertoldi,
Brooke Cowan, Wade Shen, Christine Moran,
Richard Zens, et al. 2007. Moses: Open source
toolkit for statistical machine translation. In Pro-
ceedings of the 45th annual meeting of the ACL on
interactive poster and demonstration sessions. As-
sociation for Computational Linguistics, pages 177–
180.

Minh-Thang Luong, Hieu Pham, and Christopher D
Manning. 2015. Effective approaches to attention-
based neural machine translation. In Proceedings of
the 2015 Conference on Empirical Methods in Nat-
ural Language Processing.

Kishore Papineni, Salim Roukos, Todd Ward, and Wei-
Jing Zhu. 2002. Bleu: a method for automatic eval-
uation of machine translation. In Proceedings of
the 40th annual meeting on association for compu-
tational linguistics. Association for Computational
Linguistics, pages 311–318.

146



Kristen Parton, Kathleen R. McKeown, Bob Coyne,
Mona T. Diab, Ralph Grishman, Dilek Hakkani-
Tür, Mary Harper, Heng Ji, Wei Yun Ma, Adam
Meyers, Sara Stolbach, Ang Sun, Gokhan Tur, Wei
Xu, and Sibel Yaman. 2009. Who, what, when,
where, why? comparing multiple approaches to the
cross-lingual 5w task. In Proceedings of the Joint
Conference of the 47th Annual Meeting of the ACL
and the 4th International Joint Conference on Nat-
ural Language Processing of the AFNLP. Associa-
tion for Computational Linguistics, Suntec, Singa-
pore, pages 423–431. http://www.aclweb.
org/anthology/P/P09/P09-1048.

Patrice Y Simard, Yann A Le Cun, John S Denker, and
Bernard Victorri. 2000. Transformation invariance
in pattern recognition: Tangent distance and prop-
agation. International Journal of Imaging Systems
and Technology 11(3):181–197.

Karen Simonyan and Andrew Zisserman. 2015. Very
deep convolutional networks for large-scale image
recognition. In International Conference on Learn-
ing Representations.

Matthew Snover, Xiang Li, Wen-Pin Lin, Zheng Chen,
Suzanne Tamang, Mingmin Ge, Adam Lee, Qi Li,
Hao Li, Sam Anzaroot, and Heng Ji. 2011. Cross-
lingual slot filling from comparable corpora. In
Proceedings of the 4th Workshop on Building and
Using Comparable Corpora: Comparable Corpora
and the Web. Association for Computational Lin-
guistics, Stroudsburg, PA, USA, BUCC ’11, pages
110–119. http://dl.acm.org/citation.
cfm?id=2024236.2024256.

Nitish Srivastava, Geoffrey E Hinton, Alex Krizhevsky,
Ilya Sutskever, and Ruslan Salakhutdinov. 2014.
Dropout: a simple way to prevent neural networks
from overfitting. Journal of Machine Learning Re-
search 15(1):1929–1958.

Stephanie Strassel and Jennifer Tracey. 2016. Lorelei
language packs: Data, tools, and resources for
technology development in low resource languages.
In Nicoletta Calzolari (Conference Chair), Khalid
Choukri, Thierry Declerck, Sara Goggi, Marko Gro-
belnik, Bente Maegaard, Joseph Mariani, Helene
Mazo, Asuncion Moreno, Jan Odijk, and Stelios
Piperidis, editors, Proceedings of the Tenth Interna-
tional Conference on Language Resources and Eval-
uation (LREC 2016). European Language Resources
Association (ELRA), Paris, France.

Kiyoshi Sudo, Satoshi Sekine, and Ralph Grishman.
2004. Cross-lingual information extraction system
evaluation. In Proceedings of the 20th international
Conference on Computational Linguistics. Associa-
tion for Computational Linguistics, page 882.

Christian Szegedy, Vincent Vanhoucke, Sergey Ioffe,
Jon Shlens, and Zbigniew Wojna. 2016. Rethinking
the inception architecture for computer vision. In
Proceedings of the IEEE Conference on Computer
Vision and Pattern Recognition. pages 2818–2826.

Laurens Van der Maaten, Minmin Chen, Stephen
Tyree, and Kilian Weinberger. 2013. Learning with
marginalized corrupted features. In Proceedings
of The 30th International Conference on Machine
Learning.

Aaron Steven White, Drew Reisinger, Keisuke Sak-
aguchi, Tim Vieira, Sheng Zhang, Rachel Rudinger,
Kyle Rawlins, and Benjamin Van Durme. 2016.
Universal Decompositional Semantics on Universal
Dependencies. In Proceedings of the 2016 Con-
ference on Empirical Methods in Natural Language
Processing. Association for Computational Linguis-
tics, Austin, Texas, pages 1713–1723. https:
//aclweb.org/anthology/D16-1177.

Hongyi Zhang, Moustapha Cisse, Yann N Dauphin,
and David Lopez-Paz. 2017a. mixup: Be-
yond empirical risk minimization. arXiv preprint
arXiv:1710.09412 .

Sheng Zhang, Kevin Duh, and Benjamin Van Durme.
2017b. MT/IE: Cross-lingual Open Information Ex-
traction with Neural Sequence-to-Sequence Mod-
els. In Proceedings of the 15th Conference of the
European Chapter of the Association for Compu-
tational Linguistics: Volume 2, Short Papers. As-
sociation for Computational Linguistics, Valencia,
Spain, pages 64–70. http://www.aclweb.
org/anthology/E17-2011.

Sheng Zhang, Kevin Duh, and Benjamin Van Durme.
2017c. Selective Decoding for Cross-lingual Open
Information Extraction. In Proceedings of the
Eighth International Joint Conference on Natural
Language Processing (Volume 1: Long Papers).
Asian Federation of Natural Language Processing,
Taipei, Taiwan, pages 832–842. http://www.
aclweb.org/anthology/I17-1084.

Sheng Zhang, Rachel Rudinger, and Benjamin Van
Durme. 2017d. An Evaluation of PredPatt and Open
IE via Stage 1 Semantic Role Labeling. In IWCS
2017 — 12th International Conference on Com-
putational Semantics — Short papers. http://
aclweb.org/anthology/W17-6944.

147


