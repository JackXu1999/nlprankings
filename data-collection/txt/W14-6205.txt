



















































Semi-supervised Sequence Labeling for Named Entity Extraction based on Tri-Training: Case Study on Chinese Person Name Extraction


Proceedings of Third Workshop on Semantic Web and Information Extraction, pages 33–40,
Dublin, Ireland, 24 August, 2014.

Semi-supervised Sequence Labeling for Named Entity Extraction 

based on Tri-Training: 

Case Study on Chinese Person Name Extraction 

Chien-Lung Chou1 

National Central University, 

Taoyuan, Taiwan 

formatc.chou@gmail.com 

Chia-Hui Chang 

National Central University, 

Taoyuan, Taiwan 

chia@csie.ncu.edu.tw 

Shin-Yi Wu  

Industrial Technology  

Research Institute, Taiwan 

sywu@itri.org.tw 

 

Abstract 

Named entity extraction is a fundamental task for many knowledge engineering applications. 

Existing studies rely on annotated training data, which is quite expensive when used to obtain 

large data sets, limiting the effectiveness of recognition. In this research, we propose an auto-

matic labeling procedure to prepare training data from structured resources which contain known 

named entities. While this automatically labeled training data may contain noise, a self-testing 

procedure may be used as a follow-up to remove low-confidence annotation and increase the 

extraction performance with less training data. In addition to the preparation of labeled training 

data, we also employed semi-supervised learning to utilize large unlabeled training data. By 

modifying tri-training for sequence labeling and deriving the proper initialization, we can further 

improve entity extraction. In the task of Chinese personal name extraction with 364,685 sen-

tences (8,672 news articles) and 54,449 (11,856 distinct) person names, an F-measure of 90.4% 

can be achieved. 

1 Introduction 

Detecting named entities in documents is one of the most important tasks for message understanding. 

For example, the #Microposts 2014 Workshop hosted an “Entity Extraction and Linking Challenge”, 

which aimed to automatically extract entities from English microposts and link them to the correspond-

ing English DBpedia v3.9 resources (if a linkage existed). Like many other types of research, this task 

relies on annotated training examples that require large amounts of manual labeling, leading to a limited 

number of training examples (e.g. 2.3K tweets). While human-labelled training examples (𝐿) have high 
quality, their cost is very high. Thus the major concern in this paper is how to prepare training data for 

entity extraction learning on the Web. 

In practice, sometimes there are existing structured databases of known entities that are valuable to 

improve extraction accuracy. For examples, personal names, school names, and company names can be 

obtained from a Who’s Who website, and accessible government data for registered schools and busi-

nesses, respectively. Meanwhile, there are many unlabeled training examples that can be used for many 

information extraction tasks. If we can automatically label known entities in the unlabeled training ex-

amples, we can obtain large labeled training set. While such training data may contain errors, self-testing 

can be applied to filter unreliable labeling with less confidence. 

On the other hand, the use of unlabeled training examples (𝑈) has also been proved to be a promising 
technique for classification. For example, co-training (Blum and Mitchell, 1998) and tri-training (Zhou 

et al. 2005) are two successful techniques that use examples with high-confidence as predicted by the 

other classifier or examples with consensus answers from the other two classifiers in order to prepare 

new labeled training data for learning. By estimating the error rate of each learned classifier, we can 

calculate the maximum number of new consensus answers for learning to ensure the error rates are 

reduced. 

In this paper, we explore the possibility of extending semi-supervised learning to sequence labeling 

via tri-training so that unlabeled training examples can also be used in the learning phase. The challenge 

here is to obtain a common label sequence as a consensus answer from multiple models. As enumerating 

                                                 
1 This research was partially supported by ITRI, Taiwan under grant B2-101052. 
 

 

33



all possible label sequences will be too time-consuming, we employ a confidence level to control the 

co-labeling answer such that a label sequence with the largest probability is selected. Comparing with a 

common label sequence from multiple models, the most probable label sequence has larger chance to 

obtain a consensus answer for training and testing. 

In addition to the extension of tri-training algorithm to sequence labeling, another key issue with tri-

training is the assumption of the initial error rate (0.5), leading to a limited number of co-labeling ex-

amples for training and early termination for large set training. Therefore, a new estimation method is 

devised for the estimation of initial error rate to alleviate the problem and improve the overall perfor-

mance.  

To validate the proposed method, we conduct experiments on Chinese personal name extraction using 

7,000 known Chinese celebrity names (abbreviated as CCN). We collect news articles containing these 

personal names from Google’s search engine (using these names as keywords) and automatically label 

these articles containing CCN and known reporters’ names. In a test set of 8,672 news articles (364,685 

sentences) containing 54,449 personal names (11,856 distinct names), the basic model built on CRF 

(conditional random field) has a performance of 76.8% F-measure when using 500 celebrity names for 

preparing training data, and is improved to 86.4% F-measure when 7,000 celebrity names are used. With 

self-testing, the performance is improved to 88.9%. Finally, tri-training can further improve the perfor-

mance through unlabeled data to 90.4%. 

2 Related Work 

Entity extraction is the task of recognizing named entities from unstructured text documents, which is 

one of the information tasks to test how well a machine can understand the messages written in natural 

language and automate mundane tasks normally performed by human. The development of machine 

learning research from classification to sequence labeling such as the HMM (Hidden Markov Model) 

(Bikel et al., 1997) and the CRF (Conditional Random Field) (McCallum and Wei, 2003) has been 

widely discussed in recent years. While supervised learning shows an impressive improvement over 

unsupervised learning, it requires large training data to be labeled with answers. Therefore, semi-super-

vised approaches are proposed.  

Semi-supervised learning refers to techniques that also make use of unlabeled data for training. Many 

approaches have been previously proposed for semi-supervised learning, including: generative models, 

self-learning, co-training, graph-based methods (Zhou et al. 2005) and information-theoretic regulariza-

tion (Zheng et al. 2009). In contrast, although a number of semi-supervised classifications have been 

proposed, semi-supervised learning for sequence segmentation has received considerably less attention 

and is designed according to a different philosophy. 

Co-training and tri-training have been mainly discussed for classification tasks with relatively few 

labeled training examples. For example, the original co-training paper by Blum and Mitchell (1998) 

described experiments to classify web pages into two classes using only 12 labeled web pages as exam-

ples. This co-training algorithm requires two views of the training data and learns a separate classifier 

for each view using labeled examples. Nigam and Ghani (2000) demonstrated that co-training performed 

better when the independent feature set assumption is valid. For comparison, they conducted their ex-

periments on the same (WebKB course) data set used by Blum and Mitchell. 

Goldman and Zhou (2000) relaxed the redundant and independent assumption and presented an algo-

rithm that uses two different supervised learning algorithms to learn a separate classifier from the pro-

vided labeled data. Empirical results demonstrated that two standard classifiers can be used to success-

fully label data for each other with 95% confidence interval. 

Tri-training (Zhou, et al. 2005) was an improvement of co-training, which used three classifiers and 

a voting mechanism to solve the confidence issue of co-labeled answers by two classifiers. In each round 

of tri-training, the classifiers ℎ𝑗  and ℎ𝑘  choose some examples in 𝑈  to label for ℎ𝑖  (𝑖, 𝑗, 𝑘{1,2,3},

𝑖𝑗𝑘). Let 𝐿𝑖
𝑡 denote the set of examples that are labeled for ℎ𝑖 in the 𝑡-th round. Then the training set 

for ℎ𝑖 in the 𝑡-th round are 𝐿 ∪ 𝐿𝑖
𝑡. Note that the unlabeled examples labeled in the 𝑡-th round, i.e. 𝐿𝑖

𝑡, 

won’t be put into the original labeled example set, i.e. 𝐿. Instead, in the (𝑡 + 1)-th round all the examples 
in 𝐿𝑖

𝑡 will be regarded as unlabeled and put into 𝑈 again.  
While Tri-training has been used in many classification tasks, the application in sequence labeling 

tasks is limited. Chen et al. (2006) proposed an agreement measure that computed the unit consistency 

34



between two label sequences from two models. Then based on the agreement measure, the idea is to 

choose a sentence, which is correctly labeled by ℎ𝑗 and ℎ𝑘  but is not parsed correctly by the target 

classifier ℎ𝑖, to be a new training sample. A control parameter is used to determine the percentage (30%) 
of examples selected for the next round. The process iterates until no more unlabeled examples are 

available. Thus, Chen et al.’s method does not ensure the PAC learning theory. 

3 System Architecture 

Due to the high cost of labeling, most benchmarks for NER are limited to several thousand sentences. 

For example, the English dataset for the CoNLL 2003 shared task (Tjong et al., 2003) consists of 14,987 

training sentences for four entity categories, PER, LOC, ORG, and MISC. But it is unclear whether 

sufficient data is provided for training or the learning algorithms have reached their capacity. Therefore, 

two intuitive ways are considered in this paper: one is automatic labeling of unlabeled data for preparing 

a large amount of annotated training examples, and the other is semi-supervised learning for making use 

of both labeled and unlabeled data during learning. 

For the former, automatic labeling is sometimes possible, especially for named entities which can be 

obtained from Web resources like DBpedia. For example, suppose we want to train a named entity 

extractor for the Reuters Corpus, we can use the known entities from CoNLL 2003 shared task as queries 

to obtain documents that contain queries from the Reuters Corpus and label the articles automatically. 

While such automatic annotation may involve wrong labeling, we can apply self-testing to filter low-

confidence labels. Overall, the benefit of the large amount of labeled training examples is greater than 

the noise it may cause. 

In this paper, we propose a hybrid model composed of the following modules: automatic labeling, 

feature engineering, and tri-training based algorithm for training and testing. The framework is illus-

trated in Figure 1. 

3.1 Tri-training for Classification 

Let 𝐿 denote the labeled example set with size |𝐿| and 𝑈 denote the unlabeled example set with size |𝑈|. 
In each round, 𝑡, tri-training uses two models, ℎ𝑗 and ℎ𝑘, to label the answer of each instance 𝑥 from 

unlabeled training data 𝑈. If ℎ𝑗 and ℎ𝑘 give the same answer, then we could use 𝑥 and the common an-

swer pair as newly training example, i.e. 𝐿𝑖
𝑡 = {(𝑥, 𝑦): 𝑥 ∈ 𝑈, 𝑦 =  ℎ𝑗

𝑡(𝑥) = ℎ𝑘
𝑡 (𝑥)} ) for model ℎ𝑖 

(𝑖, 𝑗, 𝑘{1,2,3}, 𝑖𝑗𝑘). To ensure that the error rate is reduced through iterations, when training ℎ𝑖, Eq. 
(1) must be satisfied, 

𝑒𝑖
𝑡|𝐿𝑖

𝑡| < 𝑒𝑖
𝑡−1|𝐿𝑖

𝑡−1|  (1) 

where 𝑒𝑖
𝑡 denotes the error rate of model ℎ𝑖 in 𝐿𝑖

𝑡, which is estimated by ℎ𝑗 and ℎ𝑘 in the t-th round using 

the labeled data 𝐿 by dividing the number of labeled examples on which both ℎ𝑗 and ℎ𝑘 make an incor-

rect estimation by the number of labeled examples for which the estimation made by ℎ𝑗 is the same as 

that made by ℎ𝑘, as shown in Eq. (2).
2, 

                                                 
2 Assuming that the unlabeled examples hold the same distribution as that held by the labeled ones. 

 

Figure 1 Semi-Supervised Named Entity Extraction Based on Automatic Labeling and Tri-training 

35



𝑒𝑖
𝑡 =

|{(𝑥,𝑦)∈𝐿, ℎ𝑗
𝑡(𝑥)=ℎ𝑘

𝑡 (𝑥) ≠𝑦}|

|{(𝑥,𝑦)∈𝐿, ℎ𝑗
𝑡(𝑥)=ℎ𝑘

𝑡 (𝑥)}|
  (2) 

If |𝐿𝑖
𝑡| is too large, such that Eq. (1) is violated, it would be necessary to sample maximum 𝑢 examples 

from 𝐿𝑖
𝑡  such that Eq. (1) can be satisfied. 

𝑢 = ⌈
𝑒𝑖
𝑡−1|𝐿𝑖

𝑡−1|

𝑒𝑖
𝑡 − 1⌉  (3) 

𝑆𝑖
𝑡 = {

𝑆𝑢𝑏𝑠𝑎𝑚𝑝𝑙𝑒(𝐿𝑖
𝑡 , 𝑢)        𝑣𝑖𝑜𝑙𝑎𝑡𝑒𝑑 𝐸𝑞. (1)

𝐿𝑖
𝑡                                                  𝑜𝑡ℎ𝑒𝑟𝑤𝑖𝑠𝑒

 (4) 

For the last step in each round, the union of the labeled training examples 𝐿 and 𝑆𝑖
𝑡,  i.e. 𝐿⋃𝑆𝑖

𝑡, is used 

as training data to update classifier ℎ𝑖 for this iteration. 

3.2 Modification for the Initialization  

According to Eq. (1), the product of error rate and new training examples define an upper bound for the 

next iteration. Meanwhile, |𝐿𝑖
t−1| should satisfy Eq. (5) such that |𝐿𝑖

𝑡| after subsampling, i.e., 𝑢, is still 

bigger than |𝐿𝑖
𝑡−1|. 

|𝐿𝑖
𝑡−1| >

𝑒𝑖
𝑡

𝑒𝑖
𝑡−1−𝑒𝑖

𝑡  (5) 

In order to estimate the size of |𝐿𝑖
1|, i.e., the number of new training examples for the first round, we 

need to estimate 𝑒𝑖
0, 𝑒𝑖

1, and |𝐿𝑖
0| first. Zhou et al. assumed a 0.5 error rate for 𝑒𝑖

0, computed 𝑒𝑖
1 by ℎ𝑗 

and ℎ𝑘, and estimated the lower bound for |𝐿𝑖
0| by Eq. (6), thus: 

|𝐿𝑖
0| = ⌊

𝑒𝑖
1

𝑒𝑖
0−𝑒𝑖

1 + 1⌋ = ⌊
𝑒𝑖
1

0.5−𝑒𝑖
1 + 1⌋  (6) 

The problem with this initialization is that, for a larger dataset |𝐿|, such an initialization will have no 
effect on retraining and will lead to an early stop for tri-training. For example, consider the case when 

the error rate 𝑒𝑖
1 is less than 0.4, then the value of |𝐿𝑖

0| will be no more than 5, leading to a small upper 

bound for 𝑒𝑖
1|𝐿𝑖

1| according to Eq. (1). That is to say, we can only sample a small subset |𝑆𝑖
1|  from 𝐿𝑖

1 

for training ℎ𝑖 based on Eq. (4). On the other hand, if 𝑒𝑖
1 is close to 0.5 such that the value of |𝐿𝑖

0| is 
greater than the original dataset |𝐿|, it may completely alter the behavior of ℎ𝑖. 

To avoid this difficulty, we propose a new estimation for the product 𝑒𝑖
0|𝐿𝑖

0|. Let 𝐿𝐶(ℎ𝑗, ℎ𝑘) denote 

the set of labeled examples (from 𝐿) on which the classification made by ℎ𝑗 is the same as that made by 

ℎ𝑘 in the initial round, and 𝐿
𝑊(ℎ𝑗, ℎ𝑘) denote the set of examples from 𝐿

𝐶(ℎ𝑗, ℎ𝑘) on which both ℎ𝑗 and 

ℎ𝑘 make incorrect classification, as shown in Eq. (7) and (8). In addition, we define 𝐿𝑖
𝑊(ℎ𝑗, ℎ𝑘) to be 

the set of examples from 𝐿𝐶(ℎ𝑗, ℎ𝑘) on which ℎ𝑖 makes incorrect classification in the initial round, as 

shown in Eq. (9). The relationship among 𝐿𝐶(ℎ𝑗, ℎ𝑘), 𝐿
𝑊(ℎ𝑗, ℎ𝑘), and 𝐿𝑖

𝑊(ℎ𝑗, ℎ𝑘) is illustrated in Figure 

2. 

𝐿𝐶(ℎ𝑗 , ℎ𝑘) = {(𝑥, 𝑦) ∈ 𝐿: ℎ𝑗(𝑥) = ℎ𝑘(𝑥)} (7) 

𝐿𝑊(ℎ𝑗 , ℎ𝑘) = {(𝑥, 𝑦) ∈ 𝐿
𝐶(ℎ𝑗 , ℎ𝑘): ℎ𝑗(𝑥) ≠ 𝑦} (8) 

𝐿𝑖
𝑊(ℎ𝑗 , ℎ𝑘) = {(𝑥, 𝑦) ∈ 𝐿

𝐶(ℎ𝑗 , ℎ𝑘): ℎ𝑖(𝑥) ≠ 𝑦} (9) 

By replacing 𝑒𝑖
0|𝐿𝑖

0| with 𝐿𝑖
𝑊(ℎ𝑗, ℎ𝑘) and estimation of 𝑒𝑖

1 by |𝐿𝑊(ℎ𝑗, ℎ𝑘)|/|𝐿
𝐶(ℎ𝑗, ℎ𝑘)|), we can es-

timate an upper bound for |𝐿𝑖
0| via Eq. (3). That is to say, we can compute an upper bound for |𝐿𝑖

0| and 

replace Eq. (3) by Eq. (10) to estimate the maximum data size of |𝐿𝑖
1|, in the first round.  

|𝐿𝑖
0| = ⌈

𝑒𝑖
0|𝐿𝑖

0|

𝑒𝑖
1 − 1⌉ = ⌈

𝐿𝑖
𝑊(ℎ𝑗,ℎ𝑘)∗𝐿

𝐶(ℎ𝑗,ℎ𝑘)

𝐿𝑊(ℎ𝑗,ℎ𝑘)
− 1⌉ (10) 

36



 

3.3 Modification for Co-Labeling 

The tri-training algorithm was originally designed for traditional classification. For sequence labeling, 

we need to define what should be the common labels for the input example 𝑥 when two models (training 
time) or three models (testing time) are involved. In Chen et al.’s work, they only consider the most 

probable label sequence from each model; the selection method chooses examples (for ℎ𝑖) with the high-

est-agreement labeled sentences by ℎ𝑗 and ℎ𝑘, and the lowest-agreement labeled sentences by ℎ𝑖 and ℎ𝑗; 

finally, the newly training samples were labeled by ℎ𝑗 (ignoring the label result by ℎ𝑘). 

As the probability for two sequence labelers to output the same label sequence is low (a total of  5|𝑙| 
(BIEOS Tagging) possible label sequences with length 𝑙), we propose a different method to resolve this 
issue. Assume that each model can output the 𝑚 best label sequences with highest probability (m=5). 
Let 𝑃𝑖(𝑦|𝑥) denote the probability that an instance 𝑥 has label 𝑦 estimated by ℎ𝑖. We select the label 
with the largest probability sum by the co-labeling models. In other words, we could use ℎ𝑗 and ℎ𝑘 to 

estimate possible labels, then choose the label 𝑦 with the maximum probability sum, 𝑃𝑗(𝑦|𝑥) + 𝑃𝑘(𝑦|𝑥), 

to re-train ℎ𝑖. Thus, the set of examples, 𝐿𝑖
𝑡, prepared for ℎ𝑖 in the 𝑡-th round is defined as follows: 

𝐿𝑖
𝑡 = {(𝑥, 𝑦): 𝑥𝑈,𝑚𝑎𝑥𝑦

(𝑃𝑗(𝑦|𝑥) + 𝑃𝑘(𝑦|𝑥)) ≧  ∗ 2} (11) 

where  (default 0.5) is a threshold that controls the quality of the training examples provided to ℎ𝑖. 
During testing, the label 𝑦 for an instance 𝑥 is determined by three models ℎ1, ℎ2 and ℎ3. We choose 

the output with the largest probability sum from 3 models with a confidence  ∗ 3 or  ∗ 2. If the label 
with the largest probability sum from 3 models is not greater than  ∗ 3, then we choose the one with 
the largest probability from single model with a maximum probability. That is to say, if the label with 

the largest probability sum from three models is not greater than  ∗ 3, then we choose the one with the 
largest probability sum from two models with a confidence of  ∗ 2. The last selection criterion is the 
label with the maximum probability estimated by the three models as shown in Eq. (12). 

𝑦 = max
𝑦

{
 
 

 
 max𝑦

(𝑃1(𝑦|𝑥) + 𝑃2(𝑦|𝑥) + 𝑃3(𝑦|𝑥)) ≥ 𝜃 ∗ 3         

max
𝑦
(𝑃𝑖(𝑦|𝑥) + 𝑃𝑗(𝑦|𝑥)) ≥ 𝜃 ∗ 2, 𝑖, 𝑗{1,2,3}, 𝑖𝑗

max
𝑦
(𝑃1(𝑦|𝑥), 𝑃2(𝑦|𝑥), 𝑃3(𝑦|𝑥))                               

}
 
 

 
 

 (12) 

4 Experiments 

We apply our proposed approach on Chinese personal name extraction. We use known celebrity names 

to query search engines for news articles from four websites (including Liberty Times, Apple Daily, 

China Times, and United Daily News) and collect the top 10 search results for sentences that contain 

the query keyword and uses these query keyword as extraction target via automatic labeling. Given 

different numbers of personal names, we prepare six datasets by automatically labeling as mentioned in 

the beginning of Section 3 and consider them as labeled training examples. We also crawl these four 

news websites from 2013/01/01 to 2013/03/31 and obtain 20,974 articles for unlabeled and testing data. 

To increase the possibility of containing person names, we select sentences that include some common 

 

Figure 2 The relationship among Eq. (7), (8), and (9). 

37



surname followed by some common first name to obtain 240,994 as unlabeled data (𝑈) (Table 1). For 
testing, we manually labeled 8,672 news articles, yielding a total of 364,685 sentences with 54,449 

person names (11,856 distinct person names).  

For the tagging scheme, we used BIEOS to mark the named entities to be extracted. Fourteen features 

were used in the experiment including, common surnames, first names, job titles, numeric tokens, al-

phabet tokens, punctuation symbol, and common characters in front or behind personal names. The 

predefined dictionaries contain 486 job titles, 224 surnames, 38,261 first names, and 107 symbols as 

well as 223 common words in front of and behind person name. We use CRF++ (Kudo 2004) for the 

following experiment. With a template involving unigram macros and the previous three tokens and 

behind, a total of 195 features are produced. We define precision, recall and F-measure based on the 

number personal names as follows: 

𝑃𝑟𝑒𝑐𝑖𝑠𝑖𝑜𝑛 =  
𝐶𝑜𝑟𝑟𝑒𝑐𝑡𝑙𝑦 𝑖𝑑𝑒𝑛𝑡𝑖𝑓𝑖𝑒𝑑 𝑛𝑎𝑚𝑒𝑠 

𝐼𝑑𝑒𝑛𝑡𝑖𝑓𝑖𝑒𝑑 𝑛𝑎𝑚𝑒𝑠
  (13) 

𝑅𝑒𝑐𝑎𝑙𝑙 =  
𝐶𝑜𝑟𝑟𝑒𝑐𝑡𝑙𝑦 𝑖𝑑𝑒𝑛𝑡𝑖𝑓𝑖𝑒𝑑 𝑛𝑎𝑚𝑒𝑠 

𝑅𝑒𝑎𝑙 𝑛𝑎𝑚𝑒𝑠
  (14) 

𝐹 −𝑀𝑒𝑎𝑠𝑢𝑟𝑒 =  2𝑃𝑅/(𝑃 + 𝑅)  (15) 

4.1 Performance of Automatic Labeling & Self-Testing 

As mentioned above, using the query keyword itself to label the collected news articles (called uni-

labeling) only labels a small part of known person names. Therefore, we also use all celebrity names 

and six report name patterns such as “UDN [reporter name]/Taipei” (聯合報[記者名]/台北報導), to 

label all collected articles (called Full-labelling). While this automatic labelling procedure does not en-

sure perfect training data, it provides acceptable labelled training for semi-supervised learning. As 

shown in Figure 3, the automatic labelling procedure can greatly improve the performance on the testing 

data. 

Based on this basic model, we apply self-testing to filter examples with low confidence and retrain a 

new model with the set of high confidence examples. The idea is to use the trained CRF model to test 

the training data themselves and output the conditional probability for the most possible label sequence. 

By removing examples with low confidence we can retrain a new model with the set of high confidence 

examples. As indicated by black-dashed line (with + symbol) in Figure 4, the F-measures increases as 

the data size increases. The performance of self-testing is improved for all datasets with confidence 

levels from 0.5 to 0.9. An F-measure of 0.815 (Dataset 1) to 0.889 (Dataset 6) can be obtained, depend-

ing on the number of celebrity names we have. The best performance is achieved at confidence level 0.8 

for all data sets except for dataset 3 which has the best performance when T = 0.9. 

4.2 Performance of Tri-Training 

Next, we evaluate the effect of using unlabeled training data based on tri-training. In our initial attempt 

to apply original tri-training, we obtained no improvement for all datasets. As shown in Figure 5, the 

final data size used for training and the performance is similar to those values obtained for the self-

testing results (with confidence level 0.8). This is because we have a very small estimation of |𝐿𝑖
0| by 

Eq. (6) when a 0.5 initial error rate for 𝑒𝑖
0 (i{1,2,3}) is assumed. Therefore, it does not make any im-

provement on retraining. 

Table 1 Labeled dataset (𝐿) and unlabeled dataset (𝑈) for Chinese person name extraction 

  L U 

  Dataset 1 Dataset 2 Dataset 3 Dataset 4 Dataset 5 Dataset 6 -- 

#Names 500 1,000 2,000 3,000 5,000 7,053 -- 

Sentences 5,548 10,928 21,267 30,653 50,738 67,104 240,994 

Words 106,535 208,383 400,111 567,794 913,516 1,188,822 4,251,861 

 

38



 
 

However, with the new initialization by Eq. (10), the number of examples that can be sampled from 

unlabeled dataset |𝐿𝑖
1| is greatly increased. For dataset 1, the unlabeled data selected is five times the 

original data size (an increase from 4,637 to 25,234), leading to an improvement of 2.4% in F-measure 

(from 0.815 to 0.839). For dataset 2, the final data size is twice the original data size (from 8,881 to 

26,173) with an F-measure improvement of 2.7% (from 0.830 to 0.857). For dataset 6, since |𝐿𝑖
1| is too 

large to be loaded for training with 𝐿, we only use 75% for experiment. The improvement in F-measure 
is 1.5%. Overall, an improvement of 1.2% ~ 2.7% can be obtained with this tri-training algorithm.  

 

Figure 3 Performance Comparison of automatic labeling 

 

Figure 4 Performance Comparison of self-testing 

 

Figure 5 Performance of Tri-training with different initialization for |𝐿1| 

Dataset 1 Dataset 2 Dataset 3 Dataset 4 Dataset 5 Dataset 6

Data Size 5,548 10,928 21,267 30,653 50,738 67,104

Full-Labeling 0.7677 0.7974 0.8254 0.8329 0.8544 0.8636

Uni-Labeling 0.1916 0.2750 0.3939 0.4762 0.6249 0.6916

0

10,000

20,000

30,000

40,000

50,000

60,000

70,000

0.10

0.20

0.30

0.40

0.50

0.60

0.70

0.80

0.90

D
a
t
a
 
S
i
z
e

F
-
M
e
a
s
u
r
e

Performance of Automatic Labeling

Dataset 1

Dataset 2

Dataset 3
Dataset 4

Dataset 5
Dataset 6

0.74
0.75
0.76
0.77
0.78
0.79
0.80
0.81
0.82
0.83
0.84
0.85
0.86
0.87
0.88
0.89
0.90

0 10,000 20,000 30,000 40,000 50,000 60,000 70,000

F
-
M
e
a
s
u
r
e

Data Size

F-Measure with Various Filtering Threshold

None T=0.5 T=0.6 T=0.7 T=0.8 T=0.9

The same dataset

39



5 Conclusion 

Named entity extraction has been approached with supervised approaches that require large labeled 

training examples to achieve good performance. This research makes use of automatic labeling based 

on known entity names to create a large corpus of labeled training data. While such data may contain 

noise, the benefit with large labeled training data still is more significant than noise it inherits. In practice, 

we might have a large amount of unlabeled data. Therefore, we applied tri-training to make use of such 

unlabeled data and to modify the co-labeling mechanism for sequence labeling to improve the 

performance. Instead of assuming a constant error rate for the initial error of each classifier, we proposed 

a new way to estimate the number of examples selected from unlabeled data. As shown in the 

experiments, such a semi-supervised approach can further improve the F-measure to 0.904 for dataset 6 

with 7,000 celebrity names. 

Reference 

Rie Kubota Ando and Tong Zhang. 2005. A high-performance semi-supervised learning method for text chunking. 

In Proceedings of the 43rd Annual Meeting on Association for Computational Linguistics (ACL '05). pp.1-9. 

Avrim Blum and Tom Mitchell. 1998. Combining labeled and unlabeled data with co-training. COLT' 98 Proceed-

ings of the eleventh annual conference on Computational learning theory, pp. 92-100. 

Wenliang Chen, Yujie Zhang and Hitoshi Isahara. Chinese Chunking with Tri-training Learning, The 21st Inter-

national Conference on the Computer Processing of Oriental Languages (ICCPOL2006), LNCS, Vol. 4285, 

Springer, pp. 466-473, Singapore, Dec. 2006. 

Sally Goldman and Yan Zhou. 2000. Enhancing supervised learning with unlabeled data. ICML'00 Proceedings 

of the 17th International Conference on Machine Learning, pp. 327-334. 

Feng Jiao, Shaojun Wang, Chi-Hoon Lee, Russell Greiner, and Dale Schuurmans. 2006. Semi-supervised condi-

tional random fields for improved sequence segmentation and labeling. In Proceedings of the 21st International 

Conference on Computational Linguistics and the 44th annual meeting of the Association for Computational 

Linguistics (ACL-44), pp. 209-216. 

Taku Kudo. CRF++: Yet Another CRF toolkit. http://crfpp.googlecode.com/svn/trunk/doc/index.html 

Wei Li, and Andrew McCallum. 2005. Semi-supervised sequence modeling with syntactic topic models. In Pro-

ceedings of the National Conference on Artificial Intelligence - Volume 2 (AAAI '05), pp. 813-818.  

Gideon S. Mann and Andrew McCallum. 2010. Generalized expectation criteria for semi-supervised learning with 

weakly labeled data. Journal of machine learning research, Volume 11, pp.955-984. 

Andrew McCallum and Wei Li. 2003. Early results for named entity recognition with conditional random fields, 

feature induction and web-enhanced lexicons. In Proceedings of the seventh conference on Natural language 

learning at HLT-NAACL 2003 - Volume 4 (CONLL '03), pp. 188-191. 

Kamal Nigam and Rayid Ghani. 2000. Analyzing the effectiveness and applicability of co-training. CIKM '00 

Proceedings of the ninth international conference on Information and knowledge management, pp. 86-93. 

Cícero Nogueira dos Santos, Ruy Luiz Milidiú. 2012. Named entity recognition. Entropy Guided Transformation 

Learning: Algorithms and Applications, Springer, Briefs in Computer Science, pp. 51-58. 

Erik F. Tjong, Kim Sang and Fien De Meulder. 2003. Introduction to the CoNLL-2003 shared task: language-

independent named entity recognition. In Proceedings of the seventh conference on Natural language learning 

at HLT-NAACL 2003 - Volume 4 (CONLL '03), pp. 142-147. 

Lei Zheng, Shaojun Wang, Yan Liu, and Chi-Hoon Lee. 2009. Information theoretic regularization for semi-su-

pervised boosting. In Proceedings of the 15th ACM SIGKDD international conference on Knowledge discovery 

and data mining (KDD '09), pp. 1017-1026. 

Dengyong Zhou, Jiayuan Huang, and Bernhard Schölkopf. 2005. Learning from labeled and unlabeled data on a 

directed graph. In Proceedings of the 22nd international conference on Machine learning (ICML '05), pp. 1036-

1043. 

Zhi-Hua Zhou and Ming Li. 2005. Tri-Training: Exploiting Unlabeled Data Using Three Classifiers. IEEE Trans-

actions on Knowledge and Data Engineering archive, Volume 17 Issue 11, pp. 1529-1541. 

40


