



















































DOER: Dual Cross-Shared RNN for Aspect Term-Polarity Co-Extraction


Proceedings of the 57th Annual Meeting of the Association for Computational Linguistics, pages 591–601
Florence, Italy, July 28 - August 2, 2019. c©2019 Association for Computational Linguistics

591

DOER: Dual Cross-Shared RNN for Aspect Term-Polarity Co-Extraction

Huaishao Luo1, Tianrui Li1∗, Bing Liu2, Junbo Zhang3,4,5
1School of Information Science and Technology, Southwest Jiaotong University, China

huaishaoluo@gmail.com, trli@swjtu.edu.cn
2Department of Computer Science, University of Illinois at Chicago, USA

liub@uic.edu
3JD Intelligent Cities Business Unit & 4JD Intelligent Cities Research, China

5Institute of Artificial Intelligence, Southwest Jiaotong University, China
msjunbozhang@outlook.com

Abstract
This paper focuses on two related subtasks of
aspect-based sentiment analysis, namely as-
pect term extraction and aspect sentiment clas-
sification, which we call aspect term-polarity
co-extraction. The former task is to extract as-
pects of a product or service from an opin-
ion document, and the latter is to identify
the polarity expressed in the document about
these extracted aspects. Most existing algo-
rithms address them as two separate tasks and
solve them one by one, or only perform one
task, which can be complicated for real appli-
cations. In this paper, we treat these two tasks
as two sequence labeling problems and pro-
pose a novel Dual crOss-sharEd RNN frame-
work (DOER) to generate all aspect term-
polarity pairs of the input sentence simultane-
ously. Specifically, DOER involves a dual re-
current neural network to extract the respective
representation of each task, and a cross-shared
unit to consider the relationship between them.
Experimental results demonstrate that the pro-
posed framework outperforms state-of-the-art
baselines on three benchmark datasets.

1 Introduction

Aspect terms extraction (ATE) and aspect senti-
ment classification (ASC) are two fundamental,
fine-grained subtasks of aspect-based sentiment
analysis. Aspect term extraction is the task of ex-
tracting the attributes (or aspects) of an entity upon
which opinions have been expressed, and aspect
sentiment classification is the task of identifying
the polarities expressed on these extracted aspects
in the opinion text (Hu and Liu, 2004). Consider
the example in Figure 1, which contains com-
ments that people expressed about the aspect terms
“operating system”, “preloaded software”, “key-
board”, “bag”, “price”, and “service” labeled with
their polarities, respectively. The polarities contain

∗Tianrui Li is the corresponding author.

I love the [operating system]positive and the [preloaded 
software]positive.

No backlit [keyboard]conflict, but not an issue for me.

You may need to special order a [bag]neutral.

The [price]positive is reasonable although the [service]negative
is poor.

Figure 1: Aspect terms extraction and aspect sentiment
classification.

four classes, e.g., positive (PO), conflict (CF), neu-
tral (NT)1, and negative (NG).

To facilitate practical applications, our goal is
to solve ATE and ASC simultaneously. For easy
description and discussion, these two subtasks are
referred to as aspect term-polarity co-extraction.
Both ATE and ASC have attracted a great of atten-
tion among researchers, but they are rarely solved
together at the same time due to some challenges:

1) ATE and ASC are quite different tasks. ATE is
an extraction or sequence labeling task (Jakob and
Gurevych, 2010; Wang et al., 2016a), while ASC
is a classification task (Jiang et al., 2011; Wagner
et al., 2014; Tang et al., 2016a,b; Tay et al., 2018).
Thus, they are naturally treated as two separate
tasks, and solved one by one in a pipeline manner.
However, this two-stage framework is complicated
and difficult to use in applications because it needs
to train two models separately. There is also the la-
tent error propagation when an aspect term is used
to classify its corresponding polarity. Thus, due to
the different natures of the two tasks, most current
works focus either on extracting aspect terms (Yin
et al., 2016; Luo et al., 2018; Xu et al., 2018) or
on classifying aspect sentiment (Ma et al., 2017;
Wang and Lu, 2018). A possible idea to bridge the
difference between the two tasks is to change ASC
to a sequence labeling task. Then, ATE and ASC

1Neutral means no sentiment is expressed, and we also
regard it as a polarity as in many prior works.



592

have the same formulation.
2) The number of aspect term-polarity pairs

in a sentence is arbitrary. Considering the exam-
ples depicted in Figure 1, we can observe that
some sentences contain two term-polarity pairs
and some sentences contain one pair. Moreover,
each aspect term can consist of any number of
words, which makes the co-extraction task diffi-
cult to solve.

Some existing research has treated ATE and
ASC as two sequence labeling tasks and dealt with
them together. Mitchell et al. (2013) and Zhang
et al. (2015) compared pipelined, joint, and col-
lapsed approaches to extracting named entities and
their sentiments. They found that the joint and col-
lapsed approaches are superior to the pipelined ap-
proach. Li and Lu (2017) proposed a collapsed
CRF model. The difference with the standard CRF
is that they expanded the node type at each word
to capture sentiment scopes. Another interesting
work comes from Li et al. (2019), where the au-
thors proposed a unified model with the collapsed
approach to do aspect term-polarity co-extraction.
We can intuitively explain the pipelined, joint,
and collapsed approaches through Figure 2. The
pipelined approach first labels the given sentence
using aspect term tags, e.g., “B” and “I” (the Be-
ginning and Inside of an aspect term) and then
feeds the aspect terms into a classifier to obtain
their corresponding polarities. The collapsed ap-
proach uses collapsed labels as the tags set, e.g.,
“B-PO” and “I-PO”. Each tag indicates the aspect
term boundary and its polarity. The joint approach
jointly labels each sentence with two different tag
sets: aspect term tags and polarity tags.

We believe that the joint approach is more feasi-
ble than the collapsed approach when integrating
with neural networks because the combined tags
of the latter may easily make the learned represen-
tation confused. As an example in Figure 2, the
“operating system” is an aspect term. Its polarity
“positive” actually comes from the word “love”.
They should be learned separately because the
meanings of these two groups of words are differ-
ent. That means that using “B-PO I-PO” to extract
the meaning of “operating system” and “love” si-
multaneously is difficult in training (this will be
clearer later). In contrast, the joint approach has
separate representations for ATE and ASC and
separate labels. Thus, an extra sentiment lexicon
can improve the representation of ASC individu-

Input I love the operating system and the preloaded software .

Joint
O O O B I O O B I O

O O O PO PO O O PO PO O

Collapsed O O O B-PO I-PO O O B-PO I-PO O

Figure 2: A labeling example of aspect terms and their
polarities.

ally, and the interaction of ATE and ASC can fur-
ther enhance the performance of each other.

In this paper, we propose a novel Dual crOss-
sharEd RNN framework (DOER) to generate all
aspect term-polarity pairs of a given sentence.
DOER mainly contains a dual recurrent neural
network (RNN) and a cross-shared unit (CSU).
The CSU is designed to take advantage of the
interactions between ATE and ASC. Apart from
them, two auxiliary tasks, aspect length enhance-
ment and sentiment enhancement, are integrated
to improve the representation of ATE and ASC.
An extra RNN cell called the Residual Gated Unit
(ReGU) is also proposed to improve the perfor-
mance of aspect term-polarity co-extraction. The
ReGU utilizes a gate to transfer the input to the
output like skip connection (He et al., 2016), and
thus, is capable of training deeper and obtaining
more useful features. In a word, DOER generates
aspect terms and their polarities simultaneously by
an end-to-end method instead of building two sep-
arate models, which saves time and gives a unified
solution to practical applications.

Our contributions are summarized as follows:

• A novel framework DOER is proposed to ad-
dress the aspect term-polarity co-extraction
problem in an end-to-end fashion. A cross-
shared unit (CSU) is designed to leverage the
interaction of the two tasks.

• Two auxiliary tasks are designed to enhance
the labeling of ATE and ASC, and an extra
RNN cell ReGU is proposed to improve the
capability of feature extraction.

2 Methodology

The proposed framework is shown in Figure 3a.
We will first formulate the aspect term-polarity co-
extraction problem and then describe this frame-
work in detail in this section.

2.1 Problem Statement
This paper deals with aspect term-polarity co-
extraction, in which the aspect terms are explicitly



593

1w

2w

nw

Embedding 

C
R

F

RNN Cross-Sharing InterfaceRNN

Auxiliary Aspect Length Enhancement

Auxiliary Sentiment EnhancementReGU

ReGU

ReGU

ReGU

ReGU ReGU

ReGU

ReGU

ReGU

ReGU

ReGU

Max Pool
ReGU

Cross-Shared 
Unit

Max Pool

, PO
···

Joint

Linear + Softmax

(a) Dual cross-shared RNN framework (DOER)

1w

2w

nw

1w

2w

nw

(b) Cross-shared unit (CSU)

Figure 3: An illustration of the proposed DOER framework.

mentioned in the text. We solve it as two sequence
labeling tasks. Formally, given a review sentence
S with n words from a particular domain, denoted
by S = {wi|i = 1, . . . ,n}. For each word wi, the ob-
jective of ATE is to assign it a tag tai ∈ T a, and
likewise, the objective of ASC is to assign a tag
t pi ∈ T p, where T a = {B, I, O} and T p = {PO, NT,
NG, CF, O}. The tags B, I and O in T a stand for the
beginning of an aspect term, the inside of an aspect
term, and other words, respectively. The tags PO,
NT, NG, and CF indicate polarity categories: pos-
itive, neutral, negative, and conflict, respectively.
The tag O in T p means other words like that in
T a. Figure 2 shows a labeling example of the first
sentence in Figure 1.

2.2 Model Overview
We discuss the proposed framework DOER in de-
tail below.

Word Embedding. Instead of adopting stan-
dard techniques to generate the embedding of each
word wi by concatenating word embedding and
char embedding, we use the double embeddings
proposed in (Xu et al., 2018) as the initial word
embeddings. The double embeddings contain two
types: general-purpose embeddings and domain-
specific embeddings, which are distinguished by
whether the embeddings are trained by an in-
domain corpus or not. Formally, each word wi will
be initialized with a feature vector hwi ∈ RdG+dD ,
where dG and dD are the first dimension size of
the general-purpose embeddings G ∈ RdG×|V | and
the domain-specific embeddings D ∈ RdD×|V |, re-
spectively. |V | is the size of the vocabulary. Hence,
hwi is generated by hwi = G(wi)⊕D(wi), where ⊕
means the concatenation operation. hg and hd in
Figure 3a denote G(wi) and D(wi), respectively.

All the out-of-vocabulary words are randomly ini-
tialized, and all sentences are padded (or tailored
when testing) and initialized with zeros to the max
length of the training sentences.

tanh

x

x +

x

+x

ɶ
tanh

1-

1-

Figure 4: Residual gated unit (ReGU).

Stacked Dual RNNs. The main architecture of
DOER is a stacked dual RNNs, one stacked RNN
for ATE, and one stacked RNN for ASC. Each
layer of RNNs is a bidirectional ReGU (BiReGU).
As shown in Figure 4, ReGU has two gates to con-
trol the flow of input and hidden state. Given input
xt at time t and the previous memory cell ct−1, the
new memory cell ct is calculated via the following
equation:

ct = (1− ft)� ct−1 + ft � tanh(Wixt), (1)

and the new hidden state ht is then computed as

ht = (1−ot)� ct +ot � x̃t , (2)

where ft =σ (Wf xt +U f ct−1) is a forget gate, ot =
σ (Woxt +Uoct−1) is a residual gate, and x̃t is xt or
tanh(Wxxt) according to whether the size of xt is
equal to ct or not. ft controls the information flow
from the previous timestamp to the next times-
tamp. ot controls the information flow from the
previous layer to the next layer. σ denotes the lo-
gistic function, tanh means the hyperbolic tangent



594

function, and� is element-wise multiplication. W∗
of size d×dI and U∗ of size d×d are weight ma-
trices, where ∗ ∈ {i, f ,o,x}. The bias vectors are
omitted for simplicity. The size of dI changes with
the dimension of the input. Its value is dG + dD
when it is the first layer of the stacked BiReGU.

BiReGU owns two directional representations
of the input like Bidirectional LSTM (Graves and
Schmidhuber, 2005). We concatenate the hidden
states generated by ReGU in both directions be-
longing to the same input as the output vector,
which is expressed as ht =

−→
h t ⊕

←−
h t , where ⊕

again means concatenation.
−→
h t and

←−
h t have the

same formulation as Eq. (2) but different propa-
gation directions. Thus, the size of ht is 2d, and
the size of dI will also become 2d when stacking
a new BiReGU layer. We refer the outputs of dual
BiReGU as hA and hP separately to differentiate
ATE and ASC.

Cross-Shared Unit. When generating the rep-
resentation after BiReGU, the information of ATE
and ASC is separated from each other. However,
the fact is that the labels of ATE and the labels of
ASC have strong relations. For instance, if the la-
bel of ATE is O, the label for ASC should be O as
well, and if the label of ASC is PO, the label for
ATE should be B or I. Besides, both the labels of
ATE and the labels of ASC have the information
to imply the boundary of each aspect term.

The cross-shared unit (CSU) is used to consider
the interaction of ATE and ASC. We first compute
the composition vector αMi j ∈ RK through the fol-
lowing tensor operator:

αMi j = fm
(
hmi ,h

m
j
)
= tanh

(
(hmi )

>Gmhmj
)
, (3)

where M ∈ {A,P}, m∈ {a, p}, hmi ∈ hM, and Gm ∈
RK×2d×2d are 3-dimensional tensors. K is a hyper-
parameter. A,a and P, p are indexes of ATE and
ASC, respectively, m = p,M = A if m = a, and
m = a,M = P if m = p. Such tensor operators can
be seen as multiple bilinear terms, which have the
capability of modeling more complicated compo-
sitions between two vectors (Socher et al., 2013;
Wang et al., 2017).

After obtaining the composition vectors, the at-
tention score SMi j is calculated as:

SMi j = v
>
mα

M
i j , (4)

where vm ∈ RK is a weight vector used to weight
each value of the composition vector, M ∈ {A,P},

and m ∈ {a, p}. Thus, SMi j is a scalar. All these
scalars SAi j and S

P
i j are gathered in two matrices SA

and SP, respectively. A higher score SAi j indicates
a higher correlation between aspect term i and the
polarity representation captured from j-th word.
Likewise, a higher score SPi j indicates a higher cor-
relation between aspect polarity i and the repre-
sentation of aspect term captured from j-th word.
We use their related representations to enhance the
original ATE and ASC features through:

hM = hM + softmaxr
(
SM

)
hM, (5)

where softmaxr is a row-based softmax function,
M ∈ {A,P}, M = P if M = A, and M = A if M = P.
Such an operation can make ATE and ASC get en-
hanced information from each other. The process
is shown in Figure 3b.

Interface. To generate the final ATE tags and
ASC tags, either a dense layer plus a softmax func-
tion or a Conditional Random Fields (CRF) can
be used. According to the comparison in (Reimers
and Gurevych, 2017), using a CRF instead of a
softmax classifier as the last layer can obtain a
performance increase for tasks with a high depen-
dency between tags. Thus, we use the linear-chain
CRF as our inference layer. Its log-likelihood is
computed as follows:

L(Wc,bc) = ∑
i

log p(y|h;Wc,bc). (6)

where p(y|h;Wc,bc) is the probability function of
CRF, and Wc and bc are the weight and bias, re-
spectively. The Viterbi algorithm is used to gener-
ate the final labels of ATE and ASC.

Joint Output. After generating the labels for
ATE and ASC in the inference layer, the last step is
to obtain the aspect term-polarity pairs. It is conve-
nient to get the aspect terms of the given sentence
according to the meaning of the elements in T a. To
generate the polarity of each aspect term, we use
the aspect term as the boundary of polarity labels,
and then count the number of each polarity cate-
gory within the boundary and adopt the label that
has the maximum number or the first label (if all
the numbers of each polarity category are equal)
as the final polarity. For example, the final polar-
ity of “PO NT” is “PO”, the final polarity of “PO
PO” is also “PO”, and the final polarity of “PO NT
NT” is “NT”. This method is simple and effective
in our experiments.



595

Auxiliary Aspect Term Length Enhancement.
Although CRF is capable of considering the cor-
relation of two adjacent labels, there are gener-
ated discontinuous labels, especially for a long tar-
get aspect term. To alleviate the influence resulted
from the length of the aspect term, we designed
an auxiliary task to predict the average length of
aspect terms in each sentence when training the
model. The computational process of the predic-
tion in ATE is as follows:

zuA = σ
(

W>uA h̃A
)
, (7)

where h̃A ∈ R2d is the result of max-pooling of
hl1A , which is generated by the first RNN layer,
WuA ∈ R2d is a weight parameter. We calculate
the prediction loss through the mean squared er-
ror (MSE):

LuA = ‖zuA− ẑu‖2, (8)

where ẑu is the average length of aspect terms in a
sentence after global normalization on the training
dataset.

ASC has a similar prediction process to ATE af-
ter the first layer of the stacked RNNs, but it has
different weight WuP and hidden feature h̃P than
WuA and h̃A. The prediction loss is denoted by LuP .
Auxiliary Sentiment Lexicon Enhancement.
As previously discussed, the polarity of an as-
pect term is usually inferred from its related opin-
ion words. Thus, we also use a sentiment lexi-
con to guide ASC. Specifically, we train an auxil-
iary word-level classifier on the branch of ASC for
discriminating positive words and negative words
based on the sentiment labels Ŷ Sp . This means that
we use a sentiment lexicon to map each word of a
sentence to a sentiment label in training. For each
feature of ASC hp,l1i generated by the first RNN
layer, we use a linear layer and the softmax func-
tion to get its sentiment label:

zsi = softmax
(

W>s h
p,l1
i

)
, (9)

where Ws ∈ R2d×c is a weight parameter, c = 3
means the sentiment label is one of the three el-
ements in the set {positive, negative, none}. We
use the cross-entropy error to calculate the loss of
each sentence:

Ls =−
1
n

n

∑
i=1

(
I
(
ŷSi
)
(log(zsi ))

>
)
, (10)

where I(ŷSi ) means the one-hot vector of ŷSi ∈ Ŷ Sp .

Datasets Train Dev Test Total

SL

#PO 941 32 340 1,313
#NT 446 4 169 619
#NG 820 17 126 963
#CF 41 1 16 58

SR

#PO 3,262 126 1,490 4,878
#NT 674 13 250 937
#NG 1,205 46 500 1,751
#CF 88 0 14 102

ST
#PO - 698
#NT - 2,254
#NG - 271

Table 1: Datasets from SemEval and Twitter.

2.3 Joint Loss
On the whole, the proposed framework DOER
has two branches: one for ATE labeling and the
other for ASC labeling. Each of them is dif-
ferentiable, and thus can be trained with gradi-
ent descent. We equivalently use the negative of
L(Wc,bc) in Eq. (6) as the error to do minimiza-
tion via back-propagation through time (BPTT)
(Goller and Kuchler, 1996). Thus, the loss is as
follows:

L=−∑
i

log p(y|h;Wc,bc), (11)

Then, the losses from both tasks and the auxiliary
tasks are constructed as the joint loss of the entire
model:

J (Θ)=(La+Lp)+(LuA+LuP+Ls)+
λ
2
‖Θ‖2, (12)

where La and Lp, which have the same formula-
tion as Eq. (11), denote the loss for aspect term
and polarity, respectively. Θ represents the model
parameters containing all weight matrices W , U , v
and bias vectors b. λ is a regularization parameter.

3 Experiments

3.1 Datasets
We conduct experiments on two datasets from
the SemEval challenges and one English Twitter
dataset. The details of these benchmark datasets
are summarized in Table 1. SL comes from Se-
mEval 2014 (Pontiki et al., 2014), which con-
tains laptop reviews, and SR are restaurant reviews
merged from SemEval 2014, SemEval 2015 (Pon-
tiki et al., 2015), and SemEval 2016 (Pontiki et al.,



596

2016). We keep the official data division of these
datasets for the training set, validation set, and
testing set. The reported results of SL and SR are
averaged scores of 10 runs. ST consists of English
tweets. Due to lack of standard train-test split, we
report the ten-fold cross-validation results of ST as
done in (Mitchell et al., 2013; Zhang et al., 2015;
Li et al., 2019). For the auxiliary task of senti-
ment lexicon enhancement, we exploit a sentiment
lexicon 2 to generate the label when training the
model. The evaluation metric is F1 score based on
the exact match of aspect term and its polarity.

3.2 Word Embeddings

To initialize the domain-specific word embed-
dings, we train the word embeddings by CBOW
(Mikolov et al., 2013) using Amazon reviews3

and Yelp reviews4, which are in-domain cor-
pora for laptop and restaurant respectively. Thus,
for SL, we use Amazon embedding, and for
SR, we use Yelp embedding. The Amazon re-
view dataset contains 142.8M reviews, and the
Yelp review dataset contains 2.2M restaurant re-
views. The embeddings from all these datasets
are trained by Gensim5 which contains the im-
plementation of CBOW. The parameter min count
is set to 10 and iter is set to 200. We use Ama-
zon embedding as the domain-specific word em-
beddings of ST as Amazon corpora is large and
comprehensive although not in the same domain.
The general-purpose embeddings are initialized by
Glove.840B.300d embeddings (Pennington et al.,
2014). Its corpus is crawled from the Web.

3.3 Settings

In our experiments, the regularization parameter
λ is empirically set as 0.001, and dG and dD as
300 and 100, respectively. The hidden state size
of d of ReGU is 300. The hyperparameter K is
set to 5. We use Adam (Kingma et al., 2014) as
the optimizer with the learning rate of 0.001 and
the batch size of 16. We also employ dropout (Sri-
vastava et al., 2014) on the outputs of the embed-
ding layer and two BiReGU layers. The dropout
rate is 0.5. To avoid the exploding gradient prob-
lem, we clip the gradient norm within 5. The max-

2http://mpqa.cs.pitt.edu/ (the lexicon of (Hu
and Liu, 2004) https://www.cs.uic.edu/˜liub/
FBS/sentiment-analysis.html can be used as well.

3http://jmcauley.ucsd.edu/data/amazon/
4https://www.yelp.com/academic_dataset
5https://radimrehurek.com/gensim/

imum number of epochs is set to 50. The word em-
beddings are fixed during the training process. We
implemented DOER using the TensorFlow library
(Abadi et al., 2016), and all computations are done
on an NVIDIA Tesla K40 GPU.

3.4 Baseline Methods
To validate the performance of the proposed model
DOER 6 on the aspect term-polarity co-extraction
task, a comparative experiment is conducted with
the following baseline models:

• CRF-{pipelined, joint, collapsed}: They
leverage linguistically informed features with
CRF to perform the sequence labeling task
using the pipelined, joint, or collapsed ap-
proach7 (Mitchell et al., 2013).

• NN+CRF-{pipelined, joint, collapsed}: An
improvement of (Mitchell et al., 2013) that
concatenates target word embedding and
context four-word embeddings besides us-
ing linguistically informed features plus CRF
to finish the sequence labeling task (Zhang
et al., 2015). Instead of using the officially re-
leased code8 due to the outdated library, we
reproduce the results with the original set-
tings.

• Sentiment-Scope: A collapsed CRF model9
(Li and Lu, 2017), which expands the node
types of CRF to capture sentiment scopes.
The discrete features used in this model are
exactly the same as the above two groups of
models.

• DE-CNN+TNet: DE-CNN10 (Xu et al.,
2018) and TNet (Li et al., 2018) are the
current state-of-the-art models for ATE and
ASC, respectively. DE-CNN+TNet combines
them in a pipelined manner. We use the of-
ficial TNet-AS variant11 as our TNet imple-
mentation.

• LSTM+CRF-{LSTMc, CNNc}: They all
use BiLSTM plus CRF for sequence labeling.

6The code of DOER is available at https://github.
com/ArrowLuo/DOER

7http://www.m-mitchell.com/code/
8https://github.com/SUTDNLP/

OpenTargetedSentiment
9https://github.com/leodotnet/

sentimentscope
10https://github.com/howardhsu/DE-CNN
11https://github.com/lixin4ever/TNet

http://mpqa.cs.pitt.edu/
https://www.cs.uic.edu/~liub/FBS/sentiment-analysis.html
https://www.cs.uic.edu/~liub/FBS/sentiment-analysis.html
http://jmcauley.ucsd.edu/data/amazon/
https://www.yelp.com/academic_dataset
https://radimrehurek.com/gensim/
https://github.com/ArrowLuo/DOER
https://github.com/ArrowLuo/DOER
http://www.m-mitchell.com/code/
https://github.com/SUTDNLP/OpenTargetedSentiment
https://github.com/SUTDNLP/OpenTargetedSentiment
https://github.com/leodotnet/sentimentscope
https://github.com/leodotnet/sentimentscope
https://github.com/howardhsu/DE-CNN
https://github.com/lixin4ever/TNet


597

Model SL SR ST

Pipeline Baselines
CRF-pipeline 51.08 54.78 31.91
NN+CRF-pipeline 53.36 60.78 45.08
DE-CNN+TNet 56.47 67.54 48.74

Collapsed Baselines

CRF-collapsed 49.24 59.52 32.00
NN+CRF-collapsed 50.64 61.74 45.52
Sentiment-Scope 50.27 62.01 45.91
LSTM+CRF-LSTMc 54.43 65.93 46.57
LSTM+CRF-CNNc 54.71 66.36 47.35
LM-LSTM-CRF 56.39 67.56 48.46
E2E-TBSA 57.99 69.91 49.13

Joint Baselines CRF-joint 50.73 59.75 32.42
NN+CRF-joint 52.81 60.27 44.69

Ours

S-BiLSTM 56.83 71.22 48.94
S-BiReGU 57.82 71.47 49.11
S-BiReGU+CSU 58.99 72.19 49.89
S-BiReGU+CSU+AuL 59.06 72.32 51.06
S-BiReGU+CSU+AuS 60.11 72.64 51.13
DOER 60.35 72.78 51.37

Table 2: F1 score (%) comparison of all systems for aspect term-polarity pair extraction.

The difference is that LSTM+CRF-LSTMc
(Lample et al., 2016) encodes char embed-
ding by BiLSTM, while LSTM+CRF-CNNc
(Ma and Hovy, 2016) uses CNN.

• LM-LSTM-CRF: It is a language model en-
hanced LSTM-CRF model proposed in (Liu
et al., 2018), which achieved competitive re-
sults on several sequence labeling tasks12.

• E2E-TBSA: It is an end-to-end model of the
collapsed approach proposed to address ATE
and ASC simultaneously13 (Li et al., 2019).

• S-BiLSTM: It is a stacked BiLSTM model
with two layers that adopts the joint ap-
proach and has the same Embeddings, Inter-
face, Joint Output layers as DOER.

• S-BiReGU: It is similar to S-BiLSTM but
uses a ReGU cell instead of an LSTM cell.

We use two abbreviations AuL and AuS for the
ablation study. AuL denotes the auxiliary task of
aspect term length enhancement, and AuS denotes
the auxiliary task of sentiment lexicon enhance-
ment. All baselines have publicly available codes,

12https://github.com/LiyuanLucasLiu/
LM-LSTM-CRF

13https://github.com/lixin4ever/
E2E-TBSA

and we ran these officially released codes to re-
produce the baseline results except the NN+CRF
variants due to the outdated library as discussed in
the bullet point for these baseline systems.

3.5 Results and Analysis
Comparison Results. The comparison results
are shown in Table 2, which are F1 scores of as-
pect term-polarity pairs. As the results show, our
DOER obtains consistent improvement over base-
lines. Compared to the best pipelined model, the
proposed framework outperforms DE-CNN+TNet
by 3.88%, 5.24%, and 2.63% on SL, SR, and
ST, respectively. It indicates that an elaborated
joint model can achieve better performance than
pipeline approaches on aspect term-polarity co-
extraction task. Besides, seven collapsed models
are also introduced to the comparison. Compared
to the best of these collapsed approaches, DOER
improves by 2.36%, 2.87%, and 2.24% over E2E-
TBSA on SL, SR, and ST, respectively. This re-
sult shows the potential of a joint model which
considers the interaction between the two relevant
tasks. Comparing with existing works based on the
joint approach, i.e., CRF-joint and NN+CRF-joint,
DOER makes substantial gains over them as well.
The improvements over DE-CNN+TNet and E2E-
TBSA are statistically significant (p < 0.05).

Ablation Study. To test the effectiveness of

https://github.com/LiyuanLucasLiu/LM-LSTM-CRF
https://github.com/LiyuanLucasLiu/LM-LSTM-CRF
https://github.com/lixin4ever/E2E-TBSA
https://github.com/lixin4ever/E2E-TBSA


598

each component of DOER, we conduct an ab-
lation experiment with results shown in the last
block of Table 2. The fact that S-BiReGU gives
superior performance compared to S-BiLSTM in-
dicates the effectiveness of ReGU in our task. This
residual architecture enables information transfer
to the next layers more effective. With the help
of CSU, S-BiReGU+CSU achieves better perfor-
mance than without it. We believe the interaction
of information between ATE and ASC is essential
to improve each other. Although the samples with
long aspect terms are rare, the auxiliary task of
aspect term length can improve the performance.
Another auxiliary task of sentiment lexicon can
also enhance the representation of the proposed
framework. As a whole of S-BiReGU, CSU, AuL,
and AuS, the proposed DOER achieves superior
performance. It mainly benefits from the enhanced
features by the two auxiliary tasks and the interac-
tion of two separate routes of ATE and ASC.

Results on ATE. Table 3 shows the results of
aspect term extraction only. DE-CNN is the cur-
rent state-of-the-art model on ATE as mentioned
above. Comparing with it, DOER achieves new
state-of-the-art scores. DOER∗ denotes the DOER
without ASC part. As the table shows, DOER
achieves better performance than DOER∗, which
indicates the interaction between ATE and ASC
can yield better performance for ATE than only
conduct a single task.

Model SL SR ST
DE-CNN 81.26 78.98 63.23
DOER∗ 82.11 79.98 68.99
DOER 82.61 81.06 71.35

Table 3: F1 score (%) comparison only for aspect term
extraction.

Case Study. Table 4 shows some examples
of S-BiLSTM, S-BiReGU+CSU, and DOER.
As observed in the first and second rows, S-
BiReGU+CSU and DOER predict the aspect term-
polarity pair correctly but S-BiLSTM does not.
With the constraint of CSU, the error words can
be avoided as shown in the second row. The two
auxiliary tasks work well on the CSU. They can
capture a better sentiment representation, e.g., the
third row, and alleviate the misjudgment on the
long aspect terms, e.g., the last row.
Impact of K. We investigate the impact of hy-

59

60

61

1 2 3 4 5 6 7 8 9 10

F
1

 (
%

)

K

Figure 5: F1 scores on SL with different K.

perparameter K of the CSU on the final perfor-
mance. The experiment is conducted on SL by
varying K from 1 to 10 with the step of 1. As
shown in Figure 5, value 5 is the best choice for
the proposed method to address our task. Due to
the performance demonstrated in the figure, K is
set to 5 cross all experiments for simplicity.
Visualization of Attention Scores in CSU. We
also try to visualize the attention scores SA and SP
to explore the effectiveness of CSU. As shown in
Figure 6, SA and SP have different values, which
indicate that both ATE and ASC indeed interact
with each other. The red dashed rectangle in Fig-
ure 6a shows that the model learns to focus on it-
self when labeling the word “OS” in the ATE task.
Likewise, the red dashed rectangle in Figure 6b
shows that the model learns to focus on the word
“great” instead of itself when labeling the word
“OS” in the ASC task. The fact that the polarity
on the target aspect “OS” is positive, which is in-
ferred from the “great”, verifies that the system is
doing the right job. In summary, we can conclude
that the attention scores learned by CSU benefit
the labeling process.

The OS is great    .

The 0.005 0.031 0.007 0.008 0.005

OS 0.017 0.046 0.014 0.011 0.011

is 0.003 0.039 0.025 0.003 0.004

great 0.003 0.018 0.006 0.026 0.004

. 0.020 0.005 0.013 0.012 0.006

(a) SA

The OS is great     .

The 0.007 0.035 0.008 0.004 0.032

OS 0.013 0.007 0.002 0.013 0.021

is 0.006 0.012 0.008 0.002 0.003

great 0.003 0.020 0.009 0.005 0.004

. 0.004 0.005 0.023 0.005 0.010

(b) SP

Figure 6: Visualization of SA and SP in CSU.

4 Related Work

Our work spans two major topics of aspect-based
sentiment analysis: aspect term extraction and as-
pect sentiment classification. Each of them has



599

Input S-BiLSTM S-BiReGU+CSU DOER
I like the [lighted screen]PO at
night.

None (7) [lighted screen]PO [lighted screen]PO

It is a great [size]PO and amaz-
ing [windows 8]PO included!

[size]PO, [windows 8
included]PO (7)

[size]PO,
[windows 8]PO

[size]PO,
[windows 8]PO

I tried several [monitors]NT and
several [HDMI cables]NT and
this was the case each time.

[HDMI cables]NG
(7)

None (7), [HDMI
cables]NT

[monitors]NT,
[HDMI cables]NT

The [2.9 ghz dual-core i7
chip]PO really out does itself.

[dual-core i7 chip]PO
(7)

[dual-core i7
chip]PO (7)

[2.9 ghz dual-core
i7 chip]PO

Table 4: Case analysis on S-BiLSTM, S-BiReGU+CSU, and DOER. 7 means wrong prediction.

been studied by many researchers. Hu and Liu
(2004) extracted aspect terms using frequent pat-
tern mining. Qiu et al. (2011) and Liu et al. (2015)
proposed to use rule-based approach exploiting ei-
ther hand-crafted or automatically generated rules
about some syntactic relationships. Mei et al.
(2007), He et al. (2011) and Chen et al. (2014)
used topic modeling based on Latent Dirichlet Al-
location (Blei et al., 2003). All of the above meth-
ods are unsupervised. For supervised methods, the
ATE task is usually treated as a sequence labeling
problem solved by CRF. For the ASC task, a large
body of literature has tried to utilize the relation
or position between the aspect terms and the sur-
rounding context words as the relevant informa-
tion or context for prediction (Tang et al., 2016a;
Laddha and Mukherjee, 2016). Convolution neural
networks (CNNs) (Poria et al., 2016; Li and Xue,
2018), attention network (Wang et al., 2016b; Ma
et al., 2017; He et al., 2017), and memory network
(Wang et al., 2018) are also active approaches.

However, the above methods are proposed for
either the ATE or the ASC task. Lakkaraju et al.
(2014) proposed to use hierarchical deep learning
to solve these two subtasks. Wu et al. (2016) uti-
lized cascaded CNN and multi-task CNN to ad-
dress aspect extraction and sentiment classifica-
tion. Their main idea is to directly map each re-
view sentence into pre-defined aspect terms by
using classification and then classifying the cor-
responding polarities. We believe the pre-defined
aspect terms are in general insufficient for most
analysis applications because they will almost cer-
tainly miss many important aspects in review texts.

This paper regards ATE and ASC as two parallel
sequence labeling tasks and solves them simulta-
neously. Comparing with the methods that address
them one by one using two separate models, our

framework is easy to use in practical applications
by outputting all the aspect term-polarity pairs
of input sentences at once. Similar to our work,
Mitchell et al. (2013) and Zhang et al. (2015)
are also about performing two sequence labeling
tasks, but they extract named entities and their sen-
timent classes jointly. We have a different objec-
tive and utilize a different model. Li et al. (2019)
have the same objective as us. The main differ-
ence is that their approach belongs to a collapsed
approach but ours is a joint approach. The model
proposed by (Li and Lu, 2017) is also a collapsed
approach based on CRF. Its performance is heav-
ily dependent on manually crafted features.

5 Conclusion

In this paper, we introduced a co-extraction task
involving aspect term extraction and aspect sen-
timent classification for aspect-based sentiment
analysis and proposed a novel framework DOER
to solve the problem. The framework uses a joint
sequence labeling approach and focuses on the in-
teraction between two separate routes for aspect
term extraction and aspect sentiment classifica-
tion. To enhance the representation of sentiment
and alleviate the difficulty of long aspect terms,
two auxiliary tasks were also introduced in our
framework. Experimental results on three bench-
mark datasets verified the effectiveness of DOER
and showed that it significantly outperforms the
baselines on aspect term-polarity co-extraction.

Acknowledgments

This work is supported by the National Key R&D
Program of China (No. 2017YFB1401401).



600

References
Martı́n Abadi, Ashish Agarwal, Paul Barham, et al.

2016. Tensorflow: Large-scale machine learning on
heterogeneous distributed systems. arXiv preprint
arXiv:1603.04467.

David M Blei, Andrew Y Ng, and Michael I Jordan.
2003. Latent dirichlet allocation. In JMLR, pages
993–1022.

Zhiyuan Chen, Arjun Mukherjee, and Bing Liu. 2014.
Aspect extraction with automated prior knowledge
learning. In ACL, pages 347–358.

Christoph Goller and Andreas Kuchler. 1996. Learning
task-dependent distributed representations by back-
propagation through structure. In ICNN, pages 347–
352.

Alex Graves and Jürgen Schmidhuber. 2005. Frame-
wise phoneme classification with bidirectional
LSTM and other neural network architectures. Neu-
ral Networks, 18(5-6):602–610.

Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian
Sun. 2016. Deep residual learning for image recog-
nition. In CVPR, pages 770–778.

Ruidan He, Wee Sun Lee, Hwee Tou Ng, and Daniel
Dahlmeier. 2017. An unsupervised neural attention
model for aspect extraction. In ACL, pages 388–
397.

Yulan He, Chenghua Lin, and Harith Alani. 2011.
Automatically extracting polarity-bearing topics for
cross-domain sentiment classification. In ACL.

Minqing Hu and Bing Liu. 2004. Mining and summa-
rizing customer reviews. In KDD, pages 168–177.

Niklas Jakob and Iryna Gurevych. 2010. Extracting
opinion targets in a single-and cross-domain setting
with conditional random fields. In EMNLP, pages
1035–1045.

Long Jiang, Mo Yu, Ming Zhou, Xiaohua Liu, and
Tiejun Zhao. 2011. Target-dependent twitter senti-
ment classification. In ACL.

Diederik Kingma, Jimmy Ba, Diederik Kingma, and
Jimmy Ba. 2014. Adam: A method for stochastic
optimization. arXiv preprint arXiv:1412.6980.

Abhishek Laddha and Arjun Mukherjee. 2016. Ex-
tracting aspect specific opinion expressions. In
EMNLP, pages 627–637.

Himabindu Lakkaraju, Richard Socher, and Chris Man-
ning. 2014. Aspect specific sentiment analysis using
hierarchical deep learning. In NIPS Workshop on
Deep Learning and Representation Learning.

Guillaume Lample, Miguel Ballesteros, Sandeep Sub-
ramanian, Kazuya Kawakami, and Chris Dyer. 2016.
Neural architectures for named entity recognition.
arXiv preprint arXiv:1603.01360.

Hao Li and Wei Lu. 2017. Learning latent sentiment
scopes for entity-level sentiment analysis. In AAAI,
pages 3482–3489.

Tao Li and Wei Xue. 2018. Aspect based sentiment
analysis with gated convolutional networks. In ACL,
pages 2514–2523.

Xin Li, Lidong Bing, Wai Lam, and Bei Shi. 2018.
Transformation networks for target-oriented senti-
ment classification. In ACL, pages 946–956.

Xin Li, Lidong Bing, Piji Li, and Wai Lam. 2019. A
unified model for opinion target extraction and target
sentiment prediction. AAAI.

Liyuan Liu, Jingbo Shang, Xiang Ren,
Frank Fangzheng Xu, Huan Gui, Jian Peng,
and Jiawei Han. 2018. Empower sequence labeling
with task-aware neural language model. In AAAI,
pages 5253–5260.

Qian Liu, Zhiqiang Gao, Bing Liu, and Yuanlin Zhang.
2015. Automated rule selection for aspect extraction
in opinion mining. In IJCAI, pages 1291–1297.

Huaishao Luo, Tianrui Li, Bing Liu, Bin Wang, and
Herwig Unger. 2018. Improving aspect term extrac-
tion with bidirectional dependency tree representa-
tion. arXiv preprint arXiv:1805.07889.

Dehong Ma, Sujian Li, Xiaodong Zhang, and Houfeng
Wang. 2017. Interactive attention networks for
aspect-level sentiment classification. In IJCAI,
pages 4068–4074.

Xuezhe Ma and Eduard H. Hovy. 2016. End-to-end se-
quence labeling via bi-directional lstm-cnns-crf. In
ACL, pages 1064–1074.

Qiaozhu Mei, Xu Ling, Matthew Wondra, Hang Su,
and ChengXiang Zhai. 2007. Topic sentiment mix-
ture: modeling facets and opinions in weblogs. In
WWW, pages 171–180.

Tomas Mikolov, Kai Chen, Greg Corrado, and Jef-
frey Dean. 2013. Efficient estimation of word
representations in vector space. arXiv preprint
arXiv:1301.3781.

Margaret Mitchell, Jacqui Aguilar, Theresa Wilson,
and Benjamin Van Durme. 2013. Open domain tar-
geted sentiment. In EMNLP, pages 1643–1654.

Jeffrey Pennington, Richard Socher, and Christo-
pher D. Manning. 2014. Glove: Global vectors for
word representation. In EMNLP, pages 1532–1543.

Maria Pontiki, Dimitris Galanis, Haris Papageorgiou,
Suresh Manandhar, and Ion Androutsopoulos. 2015.
Semeval-2015 task 12: Aspect based sentiment anal-
ysis. In SemEval@NAACL-HLT, pages 486–495.

Maria Pontiki, Dimitris Galanis, Haris Papageorgiou,
et al. 2016. Semeval-2016 task 5: Aspect based sen-
timent analysis. In SemEval@NAACL-HLT, pages
19–30.



601

Maria Pontiki, Dimitris Galanis, John Pavlopoulos,
Harris Papageorgiou, Ion Androutsopoulos, and
Suresh Manandhar. 2014. Semeval-2014 task
4: Aspect based sentiment analysis. In Se-
mEval@COLING, pages 27–35.

Soujanya Poria, Erik Cambria, and Alexander Gelbukh.
2016. Aspect extraction for opinion mining with
a deep convolutional neural network. Knowledge-
Based Systems, 108:42–49.

Guang Qiu, Bing Liu, Jiajun Bu, and Chun Chen.
2011. Opinion word expansion and target extraction
through double propagation. Computational Lin-
guistics, 37(1):9–27.

Nils Reimers and Iryna Gurevych. 2017. Reporting
score distributions makes a difference: Performance
study of lstm-networks for sequence tagging. In
EMNLP, pages 338–348.

Richard Socher, Alex Perelygin, Jean Wu, Jason
Chuang, Christopher D. Manning, Andrew Y. Ng,
and Christopher Potts. 2013. Recursive deep mod-
els for semantic compositionality over a sentiment
treebank. In EMNLP, pages 1631–1642.

Nitish Srivastava, Geoffrey E. Hinton, Alex
Krizhevsky, Ilya Sutskever, and Ruslan Salakhutdi-
nov. 2014. Dropout: a simple way to prevent neural
networks from overfitting. JMLR, 15(1):1929–
1958.

Duyu Tang, Bing Qin, Xiaocheng Feng, and Ting Liu.
2016a. Effective lstms for target-dependent senti-
ment classification. In COLING, pages 3298–3307.

Duyu Tang, Bing Qin, and Ting Liu. 2016b. Aspect
level sentiment classification with deep memory net-
work. In EMNLP, pages 214–224.

Yi Tay, Luu Anh Tuan, and Siu Cheung Hui. 2018.
Learning to attend via word-aspect associative fu-
sion for aspect-based sentiment analysis. In AAAI.

Joachim Wagner, Piyush Arora, Santiago Cortes, Utsab
Barman, Dasha Bogdanova, Jennifer Foster, and
Lamia Tounsi. 2014. Dcu: Aspect-based polarity
classification for semeval task 4. In SemEval.

Bailin Wang and Wei Lu. 2018. Learning latent opin-
ions for aspect-level sentiment classification. In
AAAI.

Shuai Wang, Sahisnu Mazumder, Bing Liu, Mianwei
Zhou, and Yi Chang. 2018. Target-sensitive mem-
ory networks for aspect sentiment classification. In
ACL, pages 957–967.

Wenya Wang, Sinno Jialin Pan, Daniel Dahlmeier, and
Xiaokui Xiao. 2016a. Recursive neural conditional
random fields for aspect-based sentiment analysis.
In EMNLP, pages 616–626.

Wenya Wang, Sinno Jialin Pan, Daniel Dahlmeier, and
Xiaokui Xiao. 2017. Coupled multi-layer attentions
for co-extraction of aspect and opinion terms. In
AAAI, pages 3316–3322.

Yequan Wang, Minlie Huang, Xiaoyan Zhu, and
Li Zhao. 2016b. Attention-based lstm for aspect-
level sentiment classification. In EMNLP.

Haibing Wu, Yiwei Gu, Shangdi Sun, and Xiaodong
Gu. 2016. Aspect-based opinion summarization
with convolutional neural networks. In IJCNN,
pages 3157–3163.

Hu Xu, Bing Liu, Lei Shu, and Philip S. Yu. 2018.
Double embeddings and cnn-based sequence label-
ing for aspect extraction. In ACL, pages 592–598.

Yichun Yin, Furu Wei, Li Dong, Kaimeng Xu, Ming
Zhang, and Ming Zhou. 2016. Unsupervised word
and dependency path embeddings for aspect term
extraction. In IJCAI, pages 2979–2985.

Meishan Zhang, Yue Zhang, and Duy Tin Vo. 2015.
Neural networks for open domain targeted senti-
ment. In EMNLP, pages 612–621.


