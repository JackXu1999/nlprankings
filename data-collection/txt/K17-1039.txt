



















































Optimizing Differentiable Relaxations of Coreference Evaluation Metrics


Proceedings of the 21st Conference on Computational Natural Language Learning (CoNLL 2017), pages 390–399,
Vancouver, Canada, August 3 - August 4, 2017. c©2017 Association for Computational Linguistics

Optimizing Differentiable Relaxations of Coreference Evaluation Metrics

Phong Le1 Ivan Titov1,2
1ILLC, University of Amsterdam

2ILCC, School of Informatics, University of Edinburgh
p.le@uva.nl ititov@inf.ed.ac.uk

Abstract

Coreference evaluation metrics are hard
to optimize directly as they are non-
differentiable functions, not easily decom-
posable into elementary decisions. Con-
sequently, most approaches optimize ob-
jectives only indirectly related to the end
goal, resulting in suboptimal performance.
Instead, we propose a differentiable re-
laxation that lends itself to gradient-based
optimisation, thus bypassing the need for
reinforcement learning or heuristic mod-
ification of cross-entropy. We show that
by modifying the training objective of a
competitive neural coreference system, we
obtain a substantial gain in performance.
This suggests that our approach can be re-
garded as a viable alternative to using rein-
forcement learning or more computation-
ally expensive imitation learning.

1 Introduction

Coreference resolution is the task of identifying all
mentions which refer to the same entity in a docu-
ment. It has been shown beneficial in many natural
language processing (NLP) applications, includ-
ing question answering (Hermann et al., 2015) and
information extraction (Kehler, 1997), and often
regarded as a prerequisite to any text understand-
ing task.

Coreference resolution can be regarded as a
clustering problem: each cluster corresponds to
a single entity and consists of all its mentions in
a given text. Consequently, it is natural to eval-
uate predicted clusters by comparing them with
the ones annotated by human experts, and this
is exactly what the standard metrics (e.g., MUC,
B3, CEAF) do. In contrast, most state-of-the-
art systems are optimized to make individual co-

reference decisions, and such losses are only indi-
rectly related to the metrics.

One way to deal with this challenge is to op-
timize directly the non-differentiable metrics us-
ing reinforcement learning (RL), for example, re-
lying on the REINFORCE policy gradient algo-
rithm (Williams, 1992). However, this approach
has not been very successful, which, as suggested
by Clark and Manning (2016a), is possibly due
to the discrepancy between sampling decisions
at training time and choosing the highest rank-
ing ones at test time. A more successful alter-
native is using a ‘roll-out’ stage to associate cost
with possible decisions, as in Clark and Manning
(2016a), but it is computationally expensive. Imi-
tation learning (Ma et al., 2014b; Clark and Man-
ning, 2015), though also exploiting metrics, re-
quires access to an expert policy, with exact poli-
cies not directly computable for the metrics of in-
terest.

In this work, we aim at combining the best of
both worlds by proposing a simple method that
can turn popular coreference evaluation metrics
into differentiable functions of model parameters.
As we show, this function can be computed re-
cursively using scores of individual local deci-
sions, resulting in a simple and efficient estima-
tion procedure. The key idea is to replace non-
differentiable indicator functions (e.g. the mem-
ber function I(m ∈ S)) with the corresponding
posterior probabilities (p(m ∈ S)) computed by
the model. Consequently, non-differentiable func-
tions used within the metrics (e.g. the set size
function |S| = ∑m I(m ∈ S)) become differ-
entiable (|S|c =

∑
m p(m ∈ S)). Though we

assume that the scores of the underlying statis-
tical model can be used to define a probability
model, we show that this is not a serious limita-
tion. Specifically, as a baseline we use a prob-
abilistic version of the neural mention-ranking

390



model of Wiseman et al. (2015b), which on its own
outperforms the original one and achieves similar
performance to its global version (Wiseman et al.,
2016). Importantly when we use the introduced
differentiable relaxations in training, we observe
a substantial gain in performance over our prob-
abilistic baseline. Interestingly, the absolute im-
provement (+0.52) is higher than the one reported
in Clark and Manning (2016a) using RL (+0.05)
and the one using reward rescaling1 (+0.37). This
suggests that our method provides a viable alter-
native to using RL and reward rescaling.

The outline of our paper is as follows: we intro-
duce our neural resolver baseline and the B3 and
LEA metrics in Section 2. Our method to turn a
mention ranking resolver into an entity-centric re-
solver is presented in Section 3, and the proposed
differentiable relaxations in Section 4. Section 5
shows our experimental results.

2 Background

2.1 Neural mention ranking

In this section we introduce neural mention rank-
ing, the framework which underpins current state-
of-the-art models (Clark and Manning, 2016a).
Specifically, we consider a probabilistic version of
the method proposed by Wiseman et al. (2015b).
In experiments we will use it as our baseline.

Let (m1,m2, ..,mn) be the list of mentions in a
document. For each mentionmi, let ai ∈ {1, ..., i}
be the index of the mention that mi is coreferent
with (if ai = i, mi is the first mention of some
entity appearing in the document). As standard in
coreference resolution literature, we will refer to
mai as an antecedent of mi.

2 Then, in mention
ranking the goal is to score antecedents of a men-
tion higher than any other mentions, i.e., if s is the
scoring function, we require s(ai = j) > s(ai =
k) for all j, k such that mi and mj are coreferent
but mi and mk are not.

Let φa(mi) ∈ Rda and φp(mi,mj) ∈ Rdp be
respectively features of mi and features of pair

1Reward rescaling is a technique that computes error val-
ues for a heuristic loss function based on the reward differ-
ence between the best decision according to the current model
and the decision leading to the highest metric score.

2This slightly deviates from the definition of antecedents
in linguistics (Crystal, 1997).

(mi,mj). The scoring function is defined by:

s(ai = j) =

u
T

[
ha(mi)

hp(mi,mj)

]
+ u0 if j < i

vTha(mi) + v0 if j = i

where

ha(mi) = tanh(Waφa(mi) + ba)
hp(mi,mj) = tanh(Wpφp(mi,mj) + bp)

and u,v,Wa,Wp,ba,bp are real vectors and
matrices with proper dimensions, u0, v0 are real
scalars.

Unlike Wiseman et al. (2015b), where the max-
margin loss is used, we define a probabilistic
model. The probability3 that mi and mj are coref-
erent is given by

p(ai = j) =
exp{s(ai = j)}∑i
j′=1 exp{s(ai = j′)}

(1)

Following Durrett and Klein (2013) we use the fol-
lowing softmax-margin (Gimpel and Smith, 2010)
loss function:

L(Θ) = −
n∑
i=1

log
( ∑
j∈C(mi)

p′(ai = j)
)
+λ||Θ||1,

where Θ are model parameters, C(mi) is the set
of the indices of correct antecedents of mi, and
p′(ai = j) ∝ p(ai = j)e∆(j,C(mi)). ∆ is a
cost function used to manipulate the contribution
of different error types to the loss function:

∆(j, C(mi)) =


α1 if j 6= i ∧ i ∈ C(mi)
α2 if j = i ∧ i /∈ C(mi)
α3 if j 6= i ∧ j /∈ C(mi)
0 otherwise

The error types are “false anaphor”, “false new”,
“wrong link”, and “no mistake”, respectively. In
our experiments, we borrow their values from Dur-
rett and Klein (2013): (α1, α2, α3) = (0.1, 3, 1).
In the subsequent discussion, we refer to the loss
as mention-ranking heuristic cross entropy.

3For the sake of readability, we do not explicitly mark
in our notation that all the probabilities are conditioned on
the document (e.g., the mentions) and dependent on model
parameters.

391



2.2 Evaluation Metrics

We use five most popular metrics4,

• MUC (Vilain et al., 1995),

• B3 (Bagga and Baldwin, 1998),

• CEAFm, CEAFe (Luo, 2005),

• BLANC (Luo et al., 2014),

• LEA (Moosavi and Strube, 2016).

for evaluation. However, because MUC is the least
discriminative metric (Moosavi and Strube, 2016),
whereas CEAF is slow to compute, out of the five
most popular metrics we incorporate into our loss
only B3. In addition, we integrate LEA, as it has
been shown to provide a good balance between
discriminativity and interpretability.

Let G = {G1, G2, ..., GN} and S =
{S1, S2, ..., SM} be the gold-standard entity set
and an entity set given by a resolver. Recall that
an entity is a set of mentions. The recall and pre-
cision of the B3 metric is computed by:

RB3 =

∑N
v=1

∑M
u=1

|Gv∩Su|2
|Gv |∑N

v=1 |Gv|

PB3 =

∑M
u=1

∑N
v=1

|Gv∩Su|2
|Su|∑M

u=1 |Su|

The LEA metric is computed as:

RLEA =

∑N
v=1

(|Gv| ×∑Mu=1 link(Gv∩Su)link(Gv) )∑N
v=1 |Gv|

PLEA =

∑M
u=1

(|Su| ×∑Nv=1 link(Gv∩Su)link(Su) )∑M
u=1 |Su|

where link(E) = |E| × (|E| − 1)/2 is the num-
ber of coreference links in entity E. Fβ , for both
metrics, is defined by:

Fβ = (1 + β2)
P ×R
β2P +R

β = 1 is used in the standard evaluation.

4All are implemented in Pradhan et al.
(2014), https://github.com/conll/
reference-coreference-scorers.

......
m1 mu mimu+1

......

E1 Eu EiEu+1

mention

entity

Figure 1: For each mention mu there is a po-
tential entity Eu so that mu is the first mention
in the chain. Computing p(mi ∈ Eu), u < i
takes into the account all directed paths from mi
to Eu (black arrows). Noting that there is no di-
rected path from any mk, k < u to Eu because
p(mk ∈ Eu) = 0. (See text for more details.)

3 From mention ranking to entity
centricity

Mention-ranking resolvers do not explicitly pro-
vide information about entities/clusters which is
required by B3 and LEA. We therefore propose a
simple solution that can turn a mention-ranking re-
solver into an entity-centric one.

First note that in a document containing n men-
tions, there are n potential entities E1, E2, ..., En
where Ei has mi as the first mention. Let p(mi ∈
Eu) be the probability that mention mi corre-
sponds to entity Eu. We now show that it can be
computed recursively based on p(ai = j) as fol-
lows:

p(mi ∈ Eu) =
∑i−1

j=u p(ai = j)× p(mj ∈ Eu) if u < i
p(ai = i) if u = i
0 if u > i

In other words, if u < i, we consider all possible
mj with which mi can be coreferent, and which
can correspond to entity Eu. If u = i, the link to
be considered is the mi’s self-link. And, if u > i,
the probability is zero, as it is impossible formi to
be assigned to an entity introduced only later. See
Figure 1 for extra information.

We now turn to two crucial questions about this
formula:

• Is p(mi ∈ •) a valid probability distribution?
• Is it possible for a mention mu to be mostly

anaphoric (i.e. p(mu ∈ Eu) is low) but
for the corresponding cluster Eu to be highly

392



probable (i.e. p(mi ∈ Eu) is high for some
i)?

The first question is answered in Proposition 1.
The second question is important because, intu-
itively, when a mention mu is anaphoric, the po-
tential entity Eu does not exist. We will show that
the answer is “No” by proving in Proposition 2
that the probability that mu is anaphoric is always
higher than any probability that mi, i > u refers
to Eu.

Proposition 1. p(mi ∈ •) is a valid probability
distribution, i.e.,

∑n
u=1 p(mi ∈ Eu) = 1, for all

i = 1, ..., n.

Proof. We prove this proposition by induction.
Basis: it is obvious that

∑n
u=1 p(m1 ∈ Eu) =

p(a1 = 1) = 1.
Assume that

∑n
u=1 p(mj ∈ Eu) = 1 for all

j < i. Then,

i−1∑
u=1

p(mi ∈ Eu)

=
i−1∑
u=1

i−1∑
j=u

p(ai = j)× p(mj ∈ Eu)

Because p(mj ∈ Eu) = 0 for all j < u, this
expression is equal to

i−1∑
u=1

i−1∑
j=1

p(ai = j)× p(mj ∈ Eu)

=
i−1∑
j=1

p(ai = j)×
i−1∑
u=1

p(mj ∈ Eu)

=
i−1∑
j=1

p(ai = j)

Therefore,

n∑
u=1

p(mi ∈ Eu) =
i−1∑
j=1

p(ai = j)+p(ai = i) = 1

(according to Equation 1).

Proposition 2. p(mi ∈ Eu) ≤ p(mu ∈ Eu) for
all i > u.

Proof. We prove this proposition by induction.
Basis: for i = u+ 1,

p(mu+1 ∈ Eu) = p(au+1 = u)× p(mu ∈ Eu)
≤ p(mu ∈ Eu)

Assume that p(mj ∈ Eu) ≤ p(mu ∈ Eu) for
all j ≥ u and j < i. Then

p(mi ∈ Eu) =
i−1∑
j=u

p(ai = j)× p(mj ∈ Eu)

≤
i−1∑
j=u

p(ai = j)× p(mu ∈ Eu)

≤ p(mu ∈ Eu)×
i∑

j=1

p(ai = j)

= p(mu ∈ Eu)

3.1 Entity-centric heuristic cross entropy loss

Having p(mi ∈ Eu) computed, we can consider
coreference resolution as a multiclass prediction
problem. An entity-centric heuristic cross entropy
loss is thus given below:

Lec(Θ) = −
n∑
i=1

log p′(mi ∈ Ee(mi)) + λ||Θ||1

where Ee(mi) is the correct entity that mi belongs
to, p′(mi ∈ Eu) ∝ p(mi ∈ Eu)eΓ(u,e(mi)). Sim-
ilar to ∆ in the mention-ranking heuristic loss in
Section 2.1, Γ is a cost function used to manip-
ulate the contribution of the four different error
types (“false anaphor”, “false new”, “wrong link”,
and “no mistake”):

Γ(u, e(mi)) =
γ1 if u 6= i ∧ e(mi) = i
γ2 if u = i ∧ e(mi) 6= i
γ3 if u 6= e(mi) ∧ u 6= i ∧ e(mi) 6= i
0 otherwise

4 From non-differentiable metrics to
differentiable losses

There are two functions used in computing B3

and LEA: the set size function |.| and the
link function link(.). Because both of them
are non-differentiable, the two metrics are non-
differentiable. We thus need to make these two
functions differentiable.

There are two remarks. Firstly, both func-
tions can be computed using the indicator function

393



0 1 2 3 4 5 6
class

0.0

0.2

0.4

0.6

0.8

1.0
p
ro

b
a
b
ili

ty
T= 1

T= 0. 5

T= 0. 3

T→ 0

Figure 2: Softmax exp{πi/T}∑
j exp{πj/T} with different val-

ues of T . The softmax becomes more peaky when
the value of T gets smaller. As T → 0 the softmax
converges to the indicator function that chooses
arg maxi πi.

I(mi ∈ Su):

|Su| =
n∑
i=1

I(mi ∈ Su)

link(Su) =
∑
j<i

I(mi ∈ Su)× I(mj ∈ Su)

Secondly, given πi,u = log p(mi ∈ Su),
the indicator function I(mi ∈ Su∗), u∗ =
arg maxu p(mi ∈ Su) is the converging point of
the following softmax as T → 0 (see Figure 2):

p(mi ∈ Su;T ) = exp{πi,u/T}∑
v exp{πi,v/T}

where T is called temperature (Kirkpatrick et al.,
1983).

Therefore, we propose to represent each Su as a
soft-cluster:

Su = {p(m1 ∈ Eu;T ), ..., p(mn ∈ Eu;T )}
where, as defined in Section 3, Eu is the potential
entity that has mu as the first mention. Replacing
the indicator function I(mi ∈ Su) by the proba-
bility distribution p(mi ∈ Eu;T ), we then have a
differentiable version for the set size function and
the link function:

|Su|d =
n∑
i=1

p(mi ∈ Eu;T )

linkd(Su) =
∑
j<i

p(mi ∈ Eu;T )× p(mj ∈ Eu;T )

|Gv∩Su|d and linkd(Gv∩Su) are computed sim-
ilarly with the constraint that only mentions in
Gv are taken into account. Plugging these func-
tions into precision and recall of B3 and LEA in
Section 2.2, we obtain differentiable F̂β,B3 and
F̂β,LEA, which are then used in two loss functions:

Lβ,B3(Θ;T ) = −F̂β,B3(Θ;T ) + λ||Θ||1
Lβ,LEA(Θ;T ) = −F̂β,LEA(Θ;T ) + λ||Θ||1

where λ is the hyper-parameter of the L1 regular-
ization terms.

It is worth noting that, as T → 0, F̂β,B3 →
Fβ,B3 and F̂β,LEA → Fβ,LEA.5 Therefore, when
training a model with the proposed losses, we can
start at a high temperature (e.g., T = 1) and anneal
to a small but non-zero temperature. However, in
our experiments we fix T = 1. Annealing is left
for future work.

5 Experiments

We now demonstrate how to use the proposed
differentiable B3 and LEA to train a corefer-
ence resolver. The source code and trained mod-
els are available at https://github.com/
lephong/diffmetric_coref.

Setup

We run experiments on the English portion of
CoNLL 2012 data (Pradhan et al., 2012) which
consists of 3,492 documents in various domains
and formats. The split provided in the CoNLL
2012 shared task is used. In all our resolvers,
we use not the original features of Wiseman et al.
(2015b) but their slight modification described in
Wiseman et al. (2016) (section 6.1).6

Resolvers

We build following baseline and three resolvers:

• baseline: the resolver presented in Sec-
tion 2.1. We use the identical configuration
as in Wiseman et al. (2016): Wa ∈ R200×da ,
Wp ∈ R700×dp , λ = 10−6 (where da, dp are
respectively the numbers of mention features
and pair-wise features). We also employ their
pretraining methodology.

5We can easily prove this using the algebraic limit theo-
rem.

6https://github.com/swiseman/nn_coref/

394



• Lec: the resolver using the entity-centric
cross entropy loss introduced in Section 3.1.
We set (γ1, γ2, γ3) = (α1, α2, α3) =
(0.1, 3, 1).

• Lβ,B3 and Lβ,LEA: the resolvers using the
losses proposed in Section 4. β is tuned on
the development set by trying each value in
{√0.8, 1,√1.2,√1.4,√1.6,√1.8, 1.5, 2}.

To train these resolvers we use AdaGrad (Duchi
et al., 2011) to minimize their loss functions with
the learning rate tuned on the development set and
with one-document mini-batches. Note that we
use the baseline as the initialization point to train
the other three resolvers.

5.1 Results

We firstly compare our resolvers against Wiseman
et al. (2015b) and Wiseman et al. (2016). Re-
sults are shown in the first half of Table 1. Our
baseline surpasses Wiseman et al. (2015b). It is
likely due to using features from Wiseman et al.
(2016). Using the entity-centric heuristic cross en-
tropy loss and the relaxations are clearly benefi-
cial: Lec is slightly better than our baseline and
on par with the global model of Wiseman et al.
(2016). Lβ=1,B3 , Lβ=1,LEA outperform the base-
line, the global model of Wiseman et al. (2016),
and Lec. However, the best values of β are

√
1.4,√

1.8 respectively for Lβ,B3 , and Lβ,LEA. Among
these resolvers, Lβ=

√
1.8,LEA achieves the highest

F1 scores across all the metrics except BLANC.
When comparing to Clark and Manning (2016a)

(the second half of Table 1), we can see that
the absolute improvement over the baselines (i.e.
‘heuristic loss’ for them and the heuristic cross
entropy loss for us) is higher than that of reward
rescaling but with much shorter training time:
+0.37 (7 days7) and +0.52 (15 hours) on the
CoNLL metric for Clark and Manning (2016a) and
ours, respectively. It is worth noting that our ab-
solute scores are weaker than these of Clark and
Manning (2016a), as they build on top of a similar
but stronger mention-ranking baseline, which em-
ploys deeper neural networks and requires a much
larger number of epochs to train (300 epochs, in-
cluding pretraining). For the purpose of illustrat-
ing the proposed losses, we started with a simpler
model by Wiseman et al. (2015b) which requires

7As reported in https://github.com/
clarkkev/deep-coref

(a) [...] that 13[the virus] could mutate [...] /.
In fact some health experts say 17[it]13∗17,17 ’s
just a matter of time [...]
(b) Walk a mile in 157[our] shoes that
’s all I have to say because anybody
who works in a nursing home will very
quickly learn that these are very fragile pa-
tients /. 165[We]157165∗,157 did the very best
167[we]165165,165 could in these situations [...]

Figure 3: Example predictions: the subscript be-
fore a mention is its index. The superscript /
subscript after a mention indicates the antecedent
predicted by the baseline / Lβ=1,B3 , Lβ=

√
1.4,B3 .

Mentions with the same color are true coreferents.
“*”s mark incorrect decisions.

a much smaller number of epochs, thus faster, to
train (20 epochs, including pretraining).

5.2 Analysis

Table 2 shows the breakdown of errors made
by the baseline and our resolvers on the de-
velopment set. The proposed resolvers make
fewer “false anaphor” and “wrong link” errors but
more “false new” errors compared to the base-
line. This suggests that loss optimization prevents
over-clustering, driving the precision up: when an-
tecedents are difficult to detect, the self-link (i.e.,
ai = i) is chosen. When β increases, they make
more “false anaphor” and “wrong link” errors but
less “false new” errors.

In Figure 3(a) the baseline, but not Lβ=1,B3
nor Lβ=

√
1.4,B3 , mistakenly links 17[it] with 13[the

virus]. Under-clustering, on the other hand, is a
problem for our resolvers with β = 1: in exam-
ple (b), Lβ=1,B3 missed 165[We]. This behaviour
results in a reduced recall but the recall is not dam-
aged severely, as we still obtain a better F1 score.
We conjecture that this behaviour is a consequence
of using the F1 score in the objective, and, if un-
desirable, Fβ with β > 1 can be used instead. For
instance, also in Figure 3, Lβ=

√
1.4,B3 correctly

detects 17[it] as non-anaphoric and links 165[We]
with 157[our].

Figure 4 shows recall, precision, F1 (average
of MUC, B3, CEAFe), on the development set
when training with Lβ,B3 and Lβ,LEA. As ex-
pected, higher values of β yield lower precisions
but higher recalls. In contrast, F1 increases until

395



MUC B3 CEAFm CEAFe BLANC LEA CoNLL
Wiseman et al. (2015b) 72.60 60.52 - 57.05 - - 63.39
Wiseman et al. (2016) 73.42 61.50 - 57.70 - - 64.21
Our proposals
baseline (heuristic loss) 73.22 61.44 65.12 57.74 62.16 57.52 64.13
Lec 73.2 61.75 65.77 57.8 63.3 57.89 64.25
Lβ=1,B3 73.37 61.94 65.79 58.22 63.19 58.06 64.51
Lβ=

√
1.4,B3 73.48 61.99 65.9 58.36 63.1 58.13 64.61

Lβ=1,LEA 73.3 61.88 65.69 57.99 63.27 58.03 64.39
Lβ=

√
1.8,LEA 73.53 62.04 65.95 58.41 63.09 58.18 64.66

Clark and Manning (2016a)
baseline (heuristic loss) 74.65 63.03 - 58.40 - - 65.36
REINFORCE 74.48 63.09 - 58.67 - - 65.41
Reward Rescaling 74.56 63.40 - 59.23 - - 65.73

Table 1: Results (F1) on CoNLL 2012 test set. CoNLL is the average of MUC, B3, and CEAFe.

Non-Anaphoric (FA) Anaphoric (FN + WL)
Proper Nominal Pronom. Proper Nominal Pronom.

baseline 630 714 1051 374 + 190 821 + 238 347 + 779
Lec 529 609 904 438 + 182 924 + 220 476 + 740
Lβ=1,B3 545 559 883 433 + 172 951 + 192 457 + 761
Lβ=

√
1.4,B3 557 564 926 426 + 178 941 + 194 431 + 766

Lβ=1,LEA 513 547 843 456 + 170 960 + 191 513 + 740
Lβ=

√
1.8,LEA 577 591 1001 416 + 176 919 + 198 358 + 790

Table 2: Number of: “false anaphor” (FA, a non-anaphoric mention marked as anaphoric), “false new”
(FN, an anaphoric mention marked as non-anaphoric), and “wrong link” (WL, an anaphoric mention is
linked to a wrong antecedent) errors on the development set.

reaching the highest point when β =
√

1.4 ≈ 1.18
for Lβ,B3 (β =

√
1.8 ≈ 1.34 for Lβ,LEA), it then

decreases gradually.

5.3 Discussion
Because the resolvers are evaluated on F1 score
metrics, it should be that Lβ,B3 and Lβ,LEA per-
form the best with β = 1. Figure 4 and Table 1
however do not confirm that: β should be set with
values a little bit larger than 1. There are two hy-
potheses. First, the statistical difference between
the training set and the development set leads to
the case that the optimal β on one set can be sub-
optimal on the other set. Second, in our experi-
ments we fix T = 1, meaning that the relaxations
might not be close to the true evaluation metrics
enough. Our future work, to confirm/reject this,
is to use annealing, i.e., gradually decreasing T
down to (but larger than) 0.

Table 1 shows that the difference betweenLβ,B3
and Lβ,LEA in terms of accuracy is not substan-

tial (although the latter is slightly better than the
former). However, one should expect that Lβ,B3
would outperform Lβ,LEA on B3 metric while it
would be the other way around on LEA metric. It
turns out that, B3 and LEA behave quite similarly
in non-extreme cases. We can see that in Figure 2,
4, 5, 6, 7 in Moosavi and Strube (2016).

6 Related work

Mention ranking and entity centricity are two
main streams in the coreference resolution liter-
ature. Mention ranking (Denis and Baldridge,
2007; Durrett and Klein, 2013; Martschat and
Strube, 2015; Wiseman et al., 2015a) considers lo-
cal and independent decisions when choosing a
correct antecedent for a mention. This approach
is computationally efficient and currently domi-
nant with state-of-the-art performance (Wiseman
et al., 2016; Clark and Manning, 2016a). Wise-
man et al. (2015b) propose to use simple neural

396



Figure 4: Recall, precision, F1 (average of MUC, B3, CEAFe), on the development set when training
with Lβ,B3 (left) and Lβ,LEA (right). Higher values of β yield lower precisions but higher recalls.

networks to compute mention ranking scores and
to use a heuristic loss to train the model. Wiseman
et al. (2016) extend this by employing LSTMs to
compute mention-chain representations which are
then used to compute ranking scores. They call
these representations global features. Clark and
Manning (2016a) build a similar resolver as in
Wiseman et al. (2015b) but much stronger thanks
to deeper neural networks and “better mention
detection, more effective, hyperparameters, and
more epochs of training”. Furthermore, using re-
ward rescaling they achieve the best performance
in the literature on the English and Chinese por-
tions of the CoNLL 2012 dataset. Our work is
built upon mention ranking by turning a mention-
ranking model into an entity-centric one. It is
worth noting that although we use the model pro-
posed by Wiseman et al. (2015b), any mention-
ranking models can be employed.

Entity centricity (Wellner and McCallum, 2003;
Poon and Domingos, 2008; Haghighi and Klein,
2010; Ma et al., 2014a; Clark and Manning,
2016b), on the other hand, incorporates entity-
level information to solve the problem. The ap-
proach can be top-down as in Haghighi and Klein
(2010) where they propose a generative model. It
can also be bottom-up by merging smaller clusters
into bigger ones as in Clark and Manning (2016b).
The method proposed by Ma et al. (2014a) greed-
ily and incrementally adds mentions to previously
built clusters using a prune-and-score technique.
Importantly, employing imitation learning these
two methods can optimize the resolvers directly
on evaluation metrics. Our work is similar to Ma
et al. (2014a) in the sense that our resolvers incre-
mentally add mentions to previously built clusters.

However, different from both Ma et al. (2014a);
Clark and Manning (2016b), our resolvers do not
use any discrete decisions (e.g., merge operations).
Instead, they seamlessly compute the probability
that a mention refers to an entity from mention-
ranking probabilities, and are optimized on differ-
entiable relaxations of evaluation metrics.

Using differentiable relaxations of evaluation
metrics as in our work is related to a line of
research in reinforcement learning where a non-
differentiable action-value function is replaced by
a differentiable critic (Sutton et al., 1999; Silver
et al., 2014). The critic is trained so that it is as
close to the true action-value function as possible.
This technique is applied to machine translation
(Gu et al., 2017) where evaluation metrics (e.g.,
BLUE) are non-differentiable. A disadvantage of
using critics is that there is no guarantee that the
critic converges to the true evaluation metric given
finite training data. In contrast, our differentiable
relaxations do not need to train, and the conver-
gence is guaranteed as T → 0.

7 Conclusions

We have proposed

• a method for turning any mention-ranking re-
solver into an entity-centric one by using a
recursive formula to combine scores of indi-
vidual local decisions, and

• differentiable relaxations for two coreference
evaluation metrics, B3 and LEA.

Experimental results show that our approach out-
performs the resolver by Wiseman et al. (2016),
and gains a higher improvement over the baseline

397



than that of Clark and Manning (2016a) but with
much shorter training time.

Acknowledgments

We would like to thank Raquel Fernández, Wilker
Aziz, Nafise Sadat Moosavi, and anonymous
reviewers for their suggestions and comments.
The project was supported by the European Re-
search Council (ERC StG BroadSem 678254),
the Dutch National Science Foundation (NWO
VIDI 639.022.518) and an Amazon Web Services
(AWS) grant.

References

Amit Bagga and Breck Baldwin. 1998. Algorithms
for scoring coreference chains. In The first in-
ternational conference on language resources and
evaluation workshop on linguistics coreference. vol-
ume 1, pages 563–566.

Kevin Clark and Christopher D. Manning. 2016a.
Deep reinforcement learning for mention-ranking
coreference models. In Proceedings of the
2016 Conference on Empirical Methods in Natu-
ral Language Processing. Association for Computa-
tional Linguistics, Austin, Texas, pages 2256–2262.
https://aclweb.org/anthology/D16-1245.

Kevin Clark and Christopher D. Manning. 2016b. Im-
proving coreference resolution by learning entity-
level distributed representations. In Proceed-
ings of the 54th Annual Meeting of the As-
sociation for Computational Linguistics (Volume
1: Long Papers). Association for Computational
Linguistics, Berlin, Germany, pages 643–653.
http://www.aclweb.org/anthology/P16-1061.

Kevin Clark and D. Christopher Manning. 2015.
Entity-centric coreference resolution with model
stacking. In Proceedings of the 53rd Annual Meet-
ing of the Association for Computational Linguistics
and the 7th International Joint Conference on Natu-
ral Language Processing (Volume 1: Long Papers).
Association for Computational Linguistics, pages
1405–1415. https://doi.org/10.3115/v1/P15-1136.

David Crystal. 1997. Dictionary of Linguistics and
Phonetics. Blackwell Publishers, Cambrindge, MA.

Pascal Denis and Jason Baldridge. 2007. A ranking
approach to pronoun resolution. In IJCAI. volume
158821593.

John Duchi, Elad Hazan, and Yoram Singer. 2011.
Adaptive subgradient methods for online learning
and stochastic optimization. Journal of Machine
Learning Research 12(Jul):2121–2159.

Greg Durrett and Dan Klein. 2013. Easy victories and
uphill battles in coreference resolution. In Proceed-
ings of the 2013 Conference on Empirical Meth-
ods in Natural Language Processing. Association
for Computational Linguistics, pages 1971–1982.
http://aclweb.org/anthology/D13-1203.

Kevin Gimpel and Noah A. Smith. 2010. Softmax-
margin crfs: Training log-linear models with cost
functions. In Human Language Technologies:
The 2010 Annual Conference of the North Ameri-
can Chapter of the Association for Computational
Linguistics. Association for Computational Lin-
guistics, Los Angeles, California, pages 733–736.
http://www.aclweb.org/anthology/N10-1112.

Jiatao Gu, Kyunghyun Cho, and Victor OK Li. 2017.
Trainable greedy decoding for neural machine trans-
lation. arXiv preprint arXiv:1702.02429 .

Aria Haghighi and Dan Klein. 2010. Coreference res-
olution in a modular, entity-centered model. In
Human Language Technologies: The 2010 Annual
Conference of the North American Chapter of the
Association for Computational Linguistics. Associ-
ation for Computational Linguistics, pages 385–393.

Karl Moritz Hermann, Tomáš Kočiský, Edward
Grefenstette, Lasse Espeholt, Will Kay, Mustafa
Suleyman, and Phil Blunsom. 2015. Teaching
machines to read and comprehend. In Advances
in Neural Information Processing Systems (NIPS).
http://arxiv.org/abs/1506.03340.

Andrew Kehler. 1997. Second Conference on Empiri-
cal Methods in Natural Language Processing, chap-
ter Probabilistic Coreference in Information Extrac-
tion. http://aclweb.org/anthology/W97-0319.

Scott Kirkpatrick, C Daniel Gelatt, Mario P Vecchi,
et al. 1983. Optimization by simulated annealing.
science 220(4598):671–680.

Xiaoqiang Luo. 2005. On coreference resolution per-
formance metrics. In Proceedings of Human Lan-
guage Technology Conference and Conference on
Empirical Methods in Natural Language Process-
ing. http://aclweb.org/anthology/H05-1004.

Xiaoqiang Luo, Sameer Pradhan, Marta Recasens,
and Eduard Hovy. 2014. An extension of blanc
to system mentions. In Proceedings of the 52nd
Annual Meeting of the Association for Computa-
tional Linguistics (Volume 2: Short Papers). Asso-
ciation for Computational Linguistics, pages 24–29.
https://doi.org/10.3115/v1/P14-2005.

Chao Ma, Janardhan Rao Doppa, J. Walker Orr,
Prashanth Mannem, Xiaoli Fern, Tom Diet-
terich, and Prasad Tadepalli. 2014a. Prune-
and-score: Learning for greedy coreference res-
olution. In Proceedings of the 2014 Confer-
ence on Empirical Methods in Natural Language
Processing (EMNLP). Association for Computa-
tional Linguistics, Doha, Qatar, pages 2115–2126.
http://www.aclweb.org/anthology/D14-1225.

398



Chao Ma, Rao Janardhan Doppa, Walker J. Orr,
Prashanth Mannem, Xiaoli Fern, Tom Dietterich,
and Prasad Tadepalli. 2014b. Prune-and-score:
Learning for greedy coreference resolution. In Pro-
ceedings of the 2014 Conference on Empirical Meth-
ods in Natural Language Processing (EMNLP).
Association for Computational Linguistics, pages
2115–2126. https://doi.org/10.3115/v1/D14-1225.

Sebastian Martschat and Michael Strube. 2015. La-
tent structures for coreference resolution. Transac-
tions of the Association for Computational Linguis-
tics 3:405–418.

Nafise Sadat Moosavi and Michael Strube. 2016.
Which coreference evaluation metric do you trust?
a proposal for a link-based entity aware metric.
In Proceedings of the 54th Annual Meeting of
the Association for Computational Linguistics (Vol-
ume 1: Long Papers). Association for Computa-
tional Linguistics, Berlin, Germany, pages 632–642.
http://www.aclweb.org/anthology/P16-1060.

Hoifung Poon and Pedro Domingos. 2008. Joint unsu-
pervised coreference resolution with markov logic.
In Proceedings of the conference on empirical meth-
ods in natural language processing. Association for
Computational Linguistics, pages 650–659.

Sameer Pradhan, Xiaoqiang Luo, Marta Recasens,
Eduard Hovy, Vincent Ng, and Michael Strube.
2014. Scoring coreference partitions of predicted
mentions: A reference implementation. In Pro-
ceedings of the 52nd Annual Meeting of the As-
sociation for Computational Linguistics (Volume
2: Short Papers). Association for Computational
Linguistics, Baltimore, Maryland, pages 30–35.
http://www.aclweb.org/anthology/P14-2006.

Sameer Pradhan, Alessandro Moschitti, Nianwen Xue,
Olga Uryupina, and Yuchen Zhang. 2012. Joint
Conference on EMNLP and CoNLL - Shared Task,
Association for Computational Linguistics, chapter
CoNLL-2012 Shared Task: Modeling Multilingual
Unrestricted Coreference in OntoNotes, pages 1–40.
http://aclweb.org/anthology/W12-4501.

David Silver, Guy Lever, Nicolas Heess, Thomas
Degris, Daan Wierstra, and Martin A. Riedmiller.
2014. Deterministic policy gradient algorithms.
In Proceedings of the 31th International Con-
ference on Machine Learning, ICML 2014,
Beijing, China, 21-26 June 2014. pages 387–395.
http://jmlr.org/proceedings/papers/v32/silver14.html.

Richard S Sutton, David A McAllester, Satinder P
Singh, Yishay Mansour, et al. 1999. Policy gradient
methods for reinforcement learning with function
approximation. In NIPS. volume 99, pages 1057–
1063.

Marc Vilain, John Burger, John Aberdeen, Den-
nis Connolly, and Lynette Hirschman. 1995. A
model-theoretic coreference scoring scheme.
In Sixth Message Understanding Conference

(MUC-6): Proceedings of a Conference Held
in Columbia, Maryland, November 6-8, 1995.
http://aclweb.org/anthology/M95-1005.

B Wellner and A McCallum. 2003. Towards condi-
tional models of identity uncertainty with applica-
tion to proper noun coreference. In IJCAI Workshop
on Information Integration and the Web.

Ronald J Williams. 1992. Simple statistical gradient-
following algorithms for connectionist reinforce-
ment learning. Machine learning 8(3-4):229–256.

Sam Wiseman, Alexander M Rush, Stuart M Shieber,
and Jason Weston. 2015a. Learning anaphoricity
and antecedent ranking features for coreference res-
olution. In Proceedings of the 53rd Annual Meet-
ing of the Association for Computational Linguis-
tics. Association for Computational Linguistics, vol-
ume 1, pages 92–100.

Sam Wiseman, M. Alexander Rush, and M. Stu-
art Shieber. 2016. Learning global features for
coreference resolution. In Proceedings of the
2016 Conference of the North American Chap-
ter of the Association for Computational Linguis-
tics: Human Language Technologies. Association
for Computational Linguistics, pages 994–1004.
https://doi.org/10.18653/v1/N16-1114.

Sam Wiseman, M. Alexander Rush, Stuart Shieber,
and Jason Weston. 2015b. Learning anaphoricity
and antecedent ranking features for coreference res-
olution. In Proceedings of the 53rd Annual Meet-
ing of the Association for Computational Linguistics
and the 7th International Joint Conference on Natu-
ral Language Processing (Volume 1: Long Papers).
Association for Computational Linguistics, pages
1416–1426. https://doi.org/10.3115/v1/P15-1137.

399


