



















































Towards Controllable and Personalized Review Generation


Proceedings of the 2019 Conference on Empirical Methods in Natural Language Processing
and the 9th International Joint Conference on Natural Language Processing, pages 3237–3245,
Hong Kong, China, November 3–7, 2019. c©2019 Association for Computational Linguistics

3237

Towards Controllable and Personalized Review Generation

Pan Li
New York University

Stern School of Business
44 West 4th Street, NY, NY, 10012

pli2@stern.nyu.edu

Alexander Tuzhilin
New York University

Stern School of Business
44 West 4th Street, NY, NY, 10012
atuzhili@stern.nyu.edu

Abstract

In this paper, we propose a novel model
RevGAN that automatically generates control-
lable and personalized user reviews based on
the arbitrarily given sentimental and stylistic
information. RevGAN utilizes the combina-
tion of three novel components, including self-
attentive recursive autoencoders, conditional
discriminators, and personalized decoders. We
test its performance on the several real-world
datasets, where our model significantly out-
performs state-of-the-art generation models in
terms of sentence quality, coherence, person-
alization and human evaluations. We also em-
pirically show that the generated reviews could
not be easily distinguished from the organi-
cally produced reviews and that they follow
the same statistical linguistics laws.

1 Introduction

With the ever increasing interests in user-
generated reviews on online marketplace websites,
such as Amazon, Yelp and TripAdvisor, it is nec-
essary to provide a range of tools that would en-
courage users to provide feedback in a more effi-
cient and effective manner, as only a small frac-
tion of users really take time to write their own
reviews (Chen and Xie, 2008). Automatic review
generation, for example, takes the product infor-
mation and user behavior as input and generates
user reviews following the arbitrarily given users’
sentiment designation and writing style personal-
ized towards the specific product and user.

Researchers have proposed various types of
product review generation methods (Yao et al.,
2017; Dong et al., 2017; Lipton et al., 2015; Rad-
ford et al., 2017) and achieved great performance.
However, they did not consider the inner hierar-
chical word-sentence-paragraph structure within
user reviews, thus making their generation results
significantly limited in length and coherence. (Li

et al., 2015; Zang and Wan, 2017) did include the
hierarchical connection in their review generation
model, but they did not address the problem of
controllable and personalized review generation
targeted at the specific product and user, which is
essential for the usefulness of generated reviews.
Most importantly, all the aforementioned gener-
ative models did not include production descrip-
tions in the generation process, thus their genera-
tion results lack credibility and diversity.

To address these problems, we propose a novel
model RevGAN that automatically generates high-
quality user reviews given the information of prod-
uct descriptions, sentiment labels and users’ his-
torical reviews. The proposed RevGAN model fol-
lows a three-staged process: In Stage 1, we pro-
pose to use Self-Attentive Recursive Autoencoder
for mapping the discrete user reviews and prod-
uct descriptions into continuous embeddings for
the advantage of capturing the ‘’essence” of tex-
tual information and the convenience for subse-
quent optimization processes. In Stage 2, we uti-
lize a novel Conditional Discriminator structure
to control the sentiment of generated reviews by
conditioning sentiment on the discriminator and
forced the generator to adapt its generation pol-
icy correspondingly. Finally in Stage 3, to improve
the personalization of generated reviews, we use a
new Personalized Decoder method to decode the
generated review embeddings according to users’
writing styles extracted from their history corpus.

We conduct extensive experiments using multi-
ple real-world datasets and show that the proposed
RevGAN model significantly and consistently out-
performs state-of-the-art baseline models and lead
to the automated generation of reviews that are in-
deed very similar in style and content to the set of
original reviews.

In general, this paper makes the following con-
tributions:



3238

a. We propose a novel RevGAN model that auto-
matically generates controllable and personalized
reviews from product information, a set of user
reviews and their writing styles. Especially. we
propose three novel components of the generative
framework: Self-Attentive Recursive Autoenocder
that captures the hierarchical structure and latent
semantic meanings of user reviews, Conditional
Discriminator that generates controllable user re-
views by conditioning the sentimental informa-
tion on the discriminator to improve the genera-
tion performance in terms of sentence quality and
context accuracy, and Personalized Decoder that
takes the personalized writing style into account
by concatenating the users’ vocabulary preference
onto the decoder to improve the personalization
and credibility of the generated results, which is
validated by the empirical human evaluation.

b. We empirically demonstrate that our pro-
posed RevGAN model achieves state-of-the-art re-
view generation performance, statistically and em-
pirically outperforming several important bench-
marks on multiple datasets. We also empirically
show that the reviews generated by our method
are very similar to the organically generated re-
views and that the linguistic features of generated
reviews follow the same statistical linguistics laws
as reviews organically produced by the users.

2 Related Work

In this section, we briefly summarize the related
work following two aspects covering previous
work on automated review generation and GAN
for NLG. We point out the connection and differ-
ence between our proposed model and prior liter-
ature, which leads to significant improvements of
review generation performance.

2.1 Automated Review Generation

Researchers have been utilizing multiple ver-
sions of Seq2Seq(Sutskever et al., 2014) frame-
work to generate online product reviews of good
quality, including Aspect-Aware Representations
(Ni and McAuley, 2018), Gated Contexts to Se-
quences(Tang et al., 2016), RNN(Yao et al., 2017),
Aspect-Sentiment Score(Zang and Wan, 2017),
Generative Concatenative Nets(Lipton et al.,
2015) and Sentiment Units(Radford et al., 2017).
In particular, (Li et al., 2015) proposed a two-stage
LSTM neural network to construct a hierarchical
autoencoder for long-text representation and gen-

eration.
However, these review generative models in-

clude neither product information nor users’ writ-
ing styles into the generation process, thus making
the generated reviews less persuasive. Also, they
are limited in length and lack of coherence for ne-
glecting the hierarchical connections within sen-
tences, which are very important elements towards
the helpfulness of a specific review(Mudambi and
Schuff, 2010). Our RevGAN model, on the other
hand, utilizes the combination of self-attentive hi-
erarchical autoencoder and conditional discrimi-
nator for improved and controllable review gener-
ation, while we concatenate the contextual labels
and users’ history corpus into the personalized de-
coder at the same time. Experimental results sup-
port that our proposed model indeed achieves sig-
nificantly better generation results compared to the
prior literature.

2.2 GAN for NLG

GAN(Goodfellow et al., 2014) has become a
powerful method for reconstruction and genera-
tion in real data space, which leaves great po-
tential to be used for natural language genera-
tion purposes. Various methods have been pro-
posed to get over the major problem of the dis-
continuity of textual information, including Se-
qGAN(Yu et al., 2017), TextGAN(Zhang et al.,
2017), RankGAN(Lin et al., 2017) and Leak-
GAN(Guo et al., 2017). However, regarding long-
text generation tasks, for all the models above, the
computation complexity might be too high, thus
failing to provide satisfying results. Nor do these
models take contextual and personalized informa-
tion into consideration for controllable generation.
Conditional GAN(Mirza and Osindero, 2014; Hu
et al., 2017; Dong et al., 2017) concatenates the
supervised labels into the input of generator and
is able to control the generation of simple sen-
tences. However, considering the high dimension
of latent embedding vectors, concatenating signif-
icantly lower dimensional supervised information
into the input might not be strong enough to force
the generator to update towards the designated di-
rection.

Therefore, to address these problems, we pro-
pose a novel conditional discriminator model
which conditions the sentiment label on the dis-
criminator to artificially change how the discrim-
inator works, and force it backpropagate the loss



3239

function that could make the generator to learn
what the user really want. Experimental results re-
ported in Section 5 show that we outperform all
other GAN-based-NLG models in the generation
performance, and outperform Conditional GAN in
terms of sentiment accuracy as well.

3 Models

In this section, we introduce the proposed RevGAN
model for review generation that includes three
novel components: Self-Attentive Recursive Au-
toEncoder, Conditional Discriminator and Person-
alized Decoder. We first use Self-Attentive Re-
cursive AutoEncoder to map the discontinuous
user reviews and product descriptions into a la-
tent continuous space, and utilize a novel version
of cGAN to generate review embeddings for sub-
sequent personalized decoding and review genera-
tion. Experimental results show that the combina-
tion of all three novel components achieves state-
of-the-art review generation performance.

The product does exactly as it should Buy this product !.

+

The product does exactly as it should

…

Buy this product !.

+

Word 
Index

Self-
Attention

Encode-
Sentence

Recursive Encode/Decode-
Paragraph

Decode-
Sentence

Word 
Sampling

Self-
Attention

Figure 1: A Brief Overview of Self-Attentive Recursive
AutoEncoder

3.1 Self-Attentive Recursive AutoEncoder

The proposed Self-Attentive Recursive AutoEn-
coder is illustrated in Figure 1. We implement a
bidirectional Gated Recurrent Unit (GRU) (Cho
et al., 2014) neural network as the encoder and
the decoder in the model respectively. Compared
with classical models like RNN or LSTM, GRU is
computationally more efficient and better captures
latent semantic meanings. We split each user re-
view or product description into single sentences,
and then map each sentence to their corresponding
word indexes in the pre-defined dictionary. The in-

dex sequences constitute the input of our proposed
model.

We use R to represent a certain review consist-
ing of NR sentences as R = {s1, s2, · · · , sNR}.
Each sentence s consists of N s words as s =
{w1, w2, · · · , wNs}, where wi represents the in-
dex of certain word in the vocabulary with size V .
We denote [W z,W r, U z, U r] as the weight matri-
ces for update gates and reset gates, zt, rt as the
status for the update gate and reset gate, and xt, ht
as the input and output vector at time t respec-
tively. GRU learns the hidden representations us-
ing the following equations, while the hidden state
ht at the end of the sequence constitutes latent sen-
tence embeddings.

zt = σg(Wzxt + Uzht−1 + bz)

rt = σg(Wrxt + Urht−1 + br)

ht = (1−zt)ht−1+ztσh(Whxt+Uh(rtht−1)+bh)

Besides, to capture the relative position repre-
sentations. we incorporate self-attentive mecha-
nism (Shaw et al., 2018) during encoding process.
Typically, each output element hi is computed as
weighted sum of a linearly transformed input ele-
ments

hi =

n∑
j=1

αij(xjW
V )

Each weight coefficient αij is computed using a
softmax function

αij =
expeij∑n
k=1 expeik

And eij is computed using a compatibility func-
tion that compares two input elements correspond-
ingly. We visualize the self-attention mechanism
with an example in Figure 2.

Figure 2: Visualization of Self-Attentive Mechanism

After getting the sentence-level embeddings
within each review, we merge those sentence em-
beddings in a recursive way to obtain paragraph
embeddings via a binary tree structure. We denote
the embedding for sentence s as es, and during the



3240

encoding process the first parent node y2 is com-
puted from the first two children node (e1, e2) by
the standard neural network layer:

y2 = f(We(e1 : e2) + b)

where (e1 : e2) is the natural concatenation of
these two embedding vectors, We is the weight
matrix with twice the size of the embedding vec-
tors. The second parent node y3 will be computed
from the concatenation of the first parent node y2
and the following embedding vector e3:

y3 = f(We(y2 : e3) + b)

We obtain the representation of the rest nodes sim-
ilarly. The embedding for root node constitutes the
entire review embeddings. The training process of
We follows a standard MLP network, where we
optimize the reconstruction loss over every layer
of the binary tree.

To unfold the recursive autoencoder, we’ll start
from the root node yNR of the binary tree. By uti-
lizing another MLP network, we expand the para-
graph embedding vector to two vectors: the leaf
node and the lower level parent node, where the
parent node would go through the same procedure
until all of the leaf nodes in the binary tree are de-
ciphered.

(yNR−1 : eNR) = f
′(W ′eyNR + b)

Finally, we assemble the paragraph from the bot-
tom leaf node to the top one such that R =
{e1, e2, · · · , eNR} to complete the review recon-
struction process.

3.2 Conditional Discriminator
To generate meaningful reviews from the product
information, we construct a cGAN model to trans-
fer product descriptions into user reviews given
specific sentiment labels. However, unlike the tra-
ditional conditional GAN methods (Mirza and
Osindero, 2014; Hu et al., 2017), we do not con-
catenate the sentiment label directly into latent
codes; considering the relatively high dimensions
of latent embeddings, concatenating the sentiment
scalar into the input might not be powerful enough
to force the generator to update itself to match
with the designated sentiment. Thus, we condi-
tion the sentiment labels on the discriminator to
artificially change the rules that the discriminator
works, and force it backpropagate loss functions

that update generator policy correspondingly. The
generated reviews and original reviews with the
opposite sentiment are judged as negative exam-
ples, while only the original reviews that matches
with the given sentiment are judged as positive
examples by the conditional discriminator, as we
propose the novel conditional discriminator D (for
positive sentiment):

D(x|c) =

{
1,organic positive reviews

0,others

For generator, the model is optimized to min-
imize the reconstruction error between gener-
ated reviews and original reviews, L(θG) =
KL(preal(x)||pG(x; θ)) where KL stands for
Kullback-Leibler divergence. The loss func-
tion of discriminator D is: L(θD, θG) =
−12Ex∼datalogD(x)−

1
2Exlog(1−D(G(z))) Un-

der ideal circumstances when generator and dis-
criminator both reach their equilibrium, we could
get that D(x) = D(G(x)) = 12 and that the gen-
erated reviews are indeed indistinguishable from
the original reviews from the discriminator point
of view.

The core idea lies in that, by artificially forcing
the discriminator to take certain type of reviews
as real samples, generator should learn the con-
ditioned information and then transform the gen-
erated data distribution. This unique structure of
GANs makes possible the controllable review gen-
eration process, and experimental results support
the strength of our model over classical cGAN
models.

3.3 Personalized Decoder
To personalize the generation process, apart from
the conditioning of sentiment labels, we also take
the users’ specific writing styles into account. We
provide the definition of writing style according to
(Zheng et al., 2006) :
Writing Style refers to the user’s distinctive vo-
cabulary choices and style of expression in his re-
view creations.
Assuming that the historical reviews written by
user i contain [Ri1, Ri2, · · · , RiNi ], we calculate
the usage frequency of each word from the cor-
pus, which is denoted as a V-dimensional writ-
ing style vector Wstyle. The intuition is that, dur-
ing the decoding process, instead of generating
each word right from the calculated word distribu-
tion via GRU network, we concatenate the writing



3241

style vector onto the distribution and sample the
generated word afterwards, which would be deter-
mined by both the writing style vector Wstyle and
the distribution vector W :

W ′ = W ∗Wstyle

Note that, to deal with the cold start problem when
the user has no historical reviews, we could sim-
ply set the writing style vector as identity matrix
Wstyle = I and generate the reviews under normal
settings. Experimental results show that the in-
volvement of personalized information (sentiment
information and writing style) indeed improve the
generation results and the helpfulness score from
the empirical study as well.

4 Experimental Results

4.1 Dataset

To empirically validate our proposed model, we
implemented RevGAN on three subsets of the
Amazon Review Dataset(He and McAuley, 2016;
McAuley et al., 2015)1, namely Musical Instru-
ment, Automotive and Patio which include 44,006
reviews written by 3,697 users on 6.039 items.

4.2 Experiment Settings

The self-attentive recursive autoencoder is imple-
mented by bidirectional GRUs with embedding
dimension 300. GRU parameters and word em-
beddings are initialized from a uniform distribu-
tion between [-0.1,0.1]. The initial learning rate is
1e-3, which will be halved every 50 epochs un-
til convergence. Batch size is set to 128 (128 sen-
tences across review documents) for batch nor-
malization(Ioffe and Szegedy, 2015). Sentences
would be padded to the maximum length within
each batch. Gradient clipping(Gulrajani et al.,
2017) is adopted by scaling the gradients when
the norm exceeds the threshold 1. For the re-
cursive structure, the parameter settings are the
same with sentence-level autoencoder only ex-
cept that the size of the weight matrix is 600 ×
300. The beam size for beam searching(Wiseman
and Rush, 2016) would be fixed as 3. To vali-
date the emotion label for each review, we im-
plemented the state-of-the-art sentiment classi-
fier VADER(Gilbert, 2014)2 to label the senti-
ment score for each review. The baseline Seq-

1http://jmcauley.ucsd.edu/data/amazon/
2https://github.com/cjhutto/vaderSentiment

GAN, RankGAN and LeakGAN models are im-
plemented through the Texygen(Zhu et al., 2018)3

toolkit. The generator and the conditional discrim-
inator of GANs are both set as Multilayer Percep-
tron(Rumelhart et al., 1985) (MLP) with 300 hid-
den layers. Their parameters are initialized from
the normal distribution N(0,0.02). The learning
rates for generator and conditional discriminator
are fixed at 5e-5 and 1e-5 respectively. During
each epoch, generator G would iterate 5 times
while discriminator D would only iterate 1 time.
The model updates 30,000 times in total. We im-
plemented our model on a Tesla K80 GPU within
PyTorch4 environment, where the whole training
takes about 12 hours.

4.3 Evaluation Metrics
To demonstrate that our purposed model indeed
achieves the state-of-the-art review generation per-
formance, we implement various evaluation met-
rics, including distribution-based Log-Likelihood
and Perplexity, coherence-based Word Mover Dis-
tance (WMD) (Kusner et al., 2015), ngram-based
BLEU (Papineni et al., 2002) and ROUGE (Lin,
2004), contextual label accuracy and human eval-
uation to measure the performance of review gen-
eration. Specifically, following the same metric as
(Dong et al., 2017), we use sentiment accuracy,
the ratio of the reviews whose sentiment matches
with the given label, as an important indication of
the personalization ability of the generator. The
higher sentiment accuracy is, the better it could
provide supervised generated results. Besides, we
conduct the human evaluation to assess the quality
and helpfulness of generated results by randomly
selecting the same number of reviews from the
original dataset, the generation of RevGAN and
the generation of other baseline models and asking
the participants to analyze which ones are gener-
ated by the machine and which ones are really cre-
ated by humans, where significance test shows that
our generated reviews are indeed indistinguishable
from the original data.

4.4 Baseline Models
To demonstrate that our purposed model indeed
achieves the state-of-the-art review generation per-
formance, we compare our model across various
evaluation metrics with several important bench-
marks, including charRNN (Yao et al., 2017),

3https://github.com/geek-ai/Texygen
4https://pytorch.org/



3242

MLE (Bahl et al., 1990), SeqGAN (Yu et al.,
2017), LeakGAN (Guo et al., 2017), RankGAN
(Lin et al., 2017) and Attr2Seq (Dong et al., 2017).
Besides, to verify the effectiveness of combin-
ing three novel components into the RevGAN
model, we also compare the performance be-
tween RevGAN+CD (Conditional Discrimina-
tor), RevGAN+CD+SA (Self-Attentive Autoen-
coder) and RevGAN+CD+SA+PD (Personalized
Decoder). The results show that our model indeed
outperforms all the selected benchmark models
significantly and consistently.

4.5 Significance Testing
We conduct significance tests to identify whether
the difference between two review generation al-
gorithms could indicate a difference in true sys-
tem quality. Typically, following(Koehn, 2004),
we use bootstrap re-sampling methods to get the
asymptotic standard error of the estimated value
of the evaluation metrics. Then the paired two-
sample t-test could be used to test the significance
whether their population means differ statistically.

In terms of the indistinguishableness of the gen-
erated results, we conduct a chi-square test for in-
dependence to test whether there is a significant
association between the human assessment and the
actual value. As the results of statistical test are in-
significant, we could then claim that our generated
reviews are indistinguishable from original ones in
the sense that human can’t separate them apart.

4.6 Evaluation of review generation
To illustrate the superiority and generalizability
of our RevGAN model, we implement our model
on three different domains of the Amazon Re-
view Dataset including musical instruments, auto-
motive and patio products. The summary of our
experiment results is reported in Table 1, from
which we could clearly observe that, compared
with the baseline text-generation models, our pro-
posed RevGAN model performs significantly bet-
ter in sentence quality and coherence performance.
On average, we could witness a 5% increase in
Word Mover Distance (WMD), 80% improvement
in BLEU and 10% rising in ROUGE. Besides,
the comparison between different variations of
RevGAN model verifies that indeed the combina-
tion of all three novel components gives the best
generation performance. By deploying bootstrap
re-sampling techniques introduced in the previous
section, we conduct hypothesis tests where all the

tests confirm the significant improvement of our
RevGAN model. In that sense, we claim that our
model achieved the state-of-the-art results on re-
view generation. We also showcase some gener-
ated reviews at the end of this section.

4.7 Evaluation of controllable generation
In this part, we evaluate the controllable gen-
eration performance of our purposed model by
pre-setting the contextual labels. We fixed the
sentiment label as ’positive’ and ’negative’ re-
spectively conditioned on the discriminator, and
then evaluate the sentiment accuracy of the gen-
erated reviews. The results are reported in Table
2, where our model beats the state-of-the-art algo-
rithm Attr2Seq(Dong et al., 2017) and the classi-
cal model Conditional GAN where we condition
the same sentiment on these two models as well.

4.8 Evaluation of Personalized Generation
Besides the statistical and semantical metrics, we
also design an empirical study to test the per-
sonalized performance of our generated reviews.
We randomly select 15 reviews to include in each
questionnaire, 5 from the original dataset, 5 from
RevGAN generated results with personalization
and 5 from RevGAN generated results without
personalization, and ask participants to analyze
which ones are generated by the machine and
which ones are really created by humans. Be-
sides, they are also asked to assess the helpfulness
of each review by choosing the helpfulness score
scale 1-5 for each review. We sent out 100 ques-
tionnaires in total, and get 36 responses, the confu-
sion matrix of which is reported in Table 3. To test
that whether the RevGAN generated reviews are
indeed statistically indistinguishable from original
ones, we run chi-test for significance testing:

χ2 = 0.012 < χ10.95

which shows that, under 95% confident interval,
we could claim that there’s no statistical difference
between our machine-generated reviews and those
actually written by humans.

Besides, the results indicate that our generated
reviews have no statistical difference in terms
of the helpfulness scores from those written by
consumers towards certain products, with aver-
age helpfulness scores 3.10 and 3.03 for machine-
generated and real-world reviews respectively.
Thus, based on the t-test, we accept the hypoth-
esis that there’s no statistical difference between



3243

Models Log-Likelihood WMD PPL BLEU-4(%) ROUGE-L(%)
SeqGAN -86699 1.869 22.60 15.06 38.30
LeakGAN -108581 2.324 24.09 14.98 37.73
RankGAN -73309 1.862 22.45 14.92 37.72
charRNN -100430 1.976 22.07 11.46 33.60

MLE -54338 2.106 17.15 9.62 31.89
Attr2Seq -56298 2.077 21.00 11.48 32.22

RevGAN+CD -80386 2.097 19.71 21.32 39.47
RevGAN+CD+SA -51549 2.030 17.45 24.44 41.32

RevGAN+CD+SA+PD -34305** 1.762** 17.00* 27.16** 44.63**

Table 1: Comparison of Experimental Results on Amazon Review Dataset (** stands for significance under 99%
confidence, * stands for 95% confidence)

Metrics RevGAN+CD Attr2Seq cGAN

Accuracy 0.842* 0.762 0.665

Table 2: Controllable Generation Accuracy

those two groups in terms of helpfulness as well.

t =
X̄1 − X̄2
sp

√
2
n

= 0.77 < t0.95

And finally, we would conduct t-test over the per-
formance of personalized and non-personalized
generated results with helpfulness score 3.10 and
2.91, which indicates the significant improvement
in helpfulness by the involvement of users’ writing
style.

t =
X̄1 − X̄2
sp

√
2
n

= 2.09 > t0.95

Actual Value
Empirical Test Human-Written RevGAN+PD

Human 119 61
Machine 118 62

Actual Value
Empirical Test Human-Written RevGAN

Human 119 61
Machine 102 78

Table 3: Confusion Matrix of Empirical Test

4.9 Showcase
We present several showcases of our generated re-
sults with different contextual labels and domains
as shown in Table 4. Additionally, we showcase
the modification process in Table 5, where the
personalized generated reviews tend to use more
words from the user’s history corpus.

Besides, we check if reviews generated by
RevGAN would have the same linguistic features

by testing two major statistical laws of linguis-
tics(Altmann and Gerlach, 2016): Zipf Law(Zipf,
1935) and Heap Law(Herdan, 1964). The former
states that if words are ranked according to their
frequency of appearance r = 1, 2, · · · , V , the fre-
quency f(r) of the r-th word scales with the rank
as f(r) = βZrαZ , while the latter states that the
number of different words V scales with database
size N measured in the total number of words as
V ∼ NαH . As shown in Figure 3 and 4, both
the original reviews and the generated ones satisfy
those two linguistic laws.

Figure 3: Verification of Heap’s Law

Figure 4: Verification of Zipf’s Law

5 Conclusion

In this paper, we proposed RevGAN that automati-
cally generates personalized product reviews from
product embeddings as opposed to labels, which
could output results targeting on specific prod-
ucts and users. To do this, we incorporate three
novel components: self-attentive recursive autoen-



3244

Domain Sentiment Generated Reviews
Musical Positive These chords got me to play my guitar better in less than one day. An excellent overdrive

and an incredible value. I’ll use them all the time.
Musical Negative These pedals are not budget friendly. If you are looking for classic rock sounds, you won’t

love these expensive hardware.
Automotive Positive I bought two sets of seat covers and this roll kit. Both fit well and look good. They were

much easier to slide over the leather seats.
Automotive Positive These seat covers look good and seem to be made of a good quality material. For the

price, these are a great buy.
Patio Negative It is not recommended. The cover is a little tight and hard to open and close.
Patio Positive These traps have caught more mice than ever give. You only need a little peanut butter for

the bait and tomcat would caught so many mice in one night. Will order again if needed .

Table 4: Selected Personalized Generation Examples

User History Reviews RevGAN RevGAN+PD
1.They play well and hold up well(never had one break) They
are my second favorite pick. But this pick is better in some
songs than my favorite.
2.I ordered 5 different kind of picks and these were my favorite
picks. They have a very comfortable feel and great sound!

The guitar has always
made a quality and you
would really love that
life from it!

The guitar has always
made better quality and
you would really love
that comfortable feel
from it!

Table 5: Personalized Review Generation Examples

coder, conditional discriminator and personalized
decoder. Experimental results show that RevGAN
performs significantly better than other baseline
models and that our generated reviews are very
similar to organically generated user reviews, as
shown in Section 5.2 and Table 3.

As a part of the future work, we would like to
improve the review generation process in a way
that could receive several key words from users as
input and generate reviews based on these prior
information. Another direction of the future re-
search, however, lies in developing novel methods
that distinguish the type of reviews described in
the paper and organic reviews.

References
Eduardo G Altmann and Martin Gerlach. 2016. Statis-

tical laws in linguistics. In Creativity and Univer-
sality in Language, pages 7–26. Springer.

Lalit R Bahl, Frederick Jelinek, and Robert L Mer-
cer. 1990. A maximum likelihood approach to con-
tinuous speech recognition. In Readings in speech
recognition, pages 308–319. Elsevier.

Yubo Chen and Jinhong Xie. 2008. Online consumer
review: Word-of-mouth as a new element of mar-
keting communication mix. Management science,
54(3):477–491.

Kyunghyun Cho, Bart Van Merriënboer, Caglar Gul-
cehre, Dzmitry Bahdanau, Fethi Bougares, Holger
Schwenk, and Yoshua Bengio. 2014. Learning
phrase representations using rnn encoder-decoder
for statistical machine translation. arXiv preprint
arXiv:1406.1078.

Li Dong, Shaohan Huang, Furu Wei, Mirella Lapata,
Ming Zhou, and Ke Xu. 2017. Learning to generate
product reviews from attributes. In Proceedings of
the 15th Conference of the European Chapter of the
Association for Computational Linguistics: Volume
1, Long Papers, volume 1, pages 623–632.

CJ Hutto Eric Gilbert. 2014. Vader: A parsimo-
nious rule-based model for sentiment analysis of so-
cial media text. In Eighth International Confer-
ence on Weblogs and Social Media (ICWSM-14).
Available at (20/04/16) http://comp. social. gatech.
edu/papers/icwsm14. vader. hutto. pdf.

Ian Goodfellow, Jean Pouget-Abadie, Mehdi Mirza,
Bing Xu, David Warde-Farley, Sherjil Ozair, Aaron
Courville, and Yoshua Bengio. 2014. Generative ad-
versarial nets. In Advances in neural information
processing systems, pages 2672–2680.

Ishaan Gulrajani, Faruk Ahmed, Martin Arjovsky, Vin-
cent Dumoulin, and Aaron C Courville. 2017. Im-
proved training of wasserstein gans. In Advances
in Neural Information Processing Systems, pages
5769–5779.

Jiaxian Guo, Sidi Lu, Han Cai, Weinan Zhang, Yong
Yu, and Jun Wang. 2017. Long text generation via
adversarial training with leaked information. arXiv
preprint arXiv:1709.08624.

Ruining He and Julian McAuley. 2016. Ups and
downs: Modeling the visual evolution of fashion
trends with one-class collaborative filtering. In
proceedings of the 25th international conference
on world wide web, pages 507–517. International
World Wide Web Conferences Steering Committee.

Gustav Herdan. 1964. Quantitative linguistics.



3245

Zhiting Hu, Zichao Yang, Xiaodan Liang, Ruslan
Salakhutdinov, and Eric P Xing. 2017. Toward con-
trolled generation of text. In International Confer-
ence on Machine Learning, pages 1587–1596.

Sergey Ioffe and Christian Szegedy. 2015. Batch nor-
malization: Accelerating deep network training by
reducing internal covariate shift. In International
conference on machine learning, pages 448–456.

Philipp Koehn. 2004. Statistical significance tests for
machine translation evaluation. In Proceedings of
the 2004 conference on empirical methods in natural
language processing.

Matt Kusner, Yu Sun, Nicholas Kolkin, and Kilian
Weinberger. 2015. From word embeddings to docu-
ment distances. In International Conference on Ma-
chine Learning, pages 957–966.

Jiwei Li, Minh-Thang Luong, and Dan Jurafsky. 2015.
A hierarchical neural autoencoder for paragraphs
and documents. arXiv preprint arXiv:1506.01057.

Chin-Yew Lin. 2004. Rouge: A package for auto-
matic evaluation of summaries. Text Summarization
Branches Out.

Kevin Lin, Dianqi Li, Xiaodong He, Zhengyou Zhang,
and Ming-Ting Sun. 2017. Adversarial ranking for
language generation. In Advances in Neural Infor-
mation Processing Systems, pages 3155–3165.

Zachary C Lipton, Sharad Vikram, and Julian
McAuley. 2015. Generative concatenative nets
jointly learn to write and classify reviews. arXiv
preprint arXiv:1511.03683.

Julian McAuley, Christopher Targett, Qinfeng Shi, and
Anton Van Den Hengel. 2015. Image-based recom-
mendations on styles and substitutes. In Proceed-
ings of the 38th International ACM SIGIR Confer-
ence on Research and Development in Information
Retrieval, pages 43–52. ACM.

Mehdi Mirza and Simon Osindero. 2014. Condi-
tional generative adversarial nets. arXiv preprint
arXiv:1411.1784.

Susan M Mudambi and David Schuff. 2010. Research
note: What makes a helpful online review? a study of
customer reviews on amazon. com. MIS quarterly,
pages 185–200.

Jianmo Ni and Julian McAuley. 2018. Personalized re-
view generation by expanding phrases and attend-
ing on aspect-aware representations. In Proceed-
ings of the 56th Annual Meeting of the Association
for Computational Linguistics (Volume 2: Short Pa-
pers), volume 2, pages 706–711.

Kishore Papineni, Salim Roukos, Todd Ward, and Wei-
Jing Zhu. 2002. Bleu: a method for automatic eval-
uation of machine translation. In Proceedings of
the 40th annual meeting on association for compu-
tational linguistics, pages 311–318. Association for
Computational Linguistics.

Alec Radford, Rafal Jozefowicz, and Ilya Sutskever.
2017. Learning to generate reviews and discovering
sentiment. arXiv preprint arXiv:1704.01444.

David E Rumelhart, Geoffrey E Hinton, and Ronald J
Williams. 1985. Learning internal representations
by error propagation. Technical report, California
Univ San Diego La Jolla Inst for Cognitive Science.

Peter Shaw, Jakob Uszkoreit, and Ashish Vaswani.
2018. Self-attention with relative position represen-
tations. arXiv preprint arXiv:1803.02155.

Ilya Sutskever, Oriol Vinyals, and Quoc V Le. 2014.
Sequence to sequence learning with neural net-
works. In Advances in neural information process-
ing systems, pages 3104–3112.

Jian Tang, Yifan Yang, Sam Carton, Ming Zhang, and
Qiaozhu Mei. 2016. Context-aware natural lan-
guage generation with recurrent neural networks.
arXiv preprint arXiv:1611.09900.

Sam Wiseman and Alexander M Rush. 2016.
Sequence-to-sequence learning as beam-search op-
timization. arXiv preprint arXiv:1606.02960.

Yuanshun Yao, Bimal Viswanath, Jenna Cryan, Haitao
Zheng, and Ben Y Zhao. 2017. Automated crowd-
turfing attacks and defenses in online review sys-
tems. In Proceedings of the 2017 ACM SIGSAC
Conference on Computer and Communications Se-
curity, pages 1143–1158. ACM.

Lantao Yu, Weinan Zhang, Jun Wang, and Yong Yu.
2017. Seqgan: Sequence generative adversarial nets
with policy gradient. In AAAI, pages 2852–2858.

Hongyu Zang and Xiaojun Wan. 2017. Towards au-
tomatic generation of product reviews from aspect-
sentiment scores. In Proceedings of the 10th Inter-
national Conference on Natural Language Genera-
tion, pages 168–177.

Yizhe Zhang, Zhe Gan, Kai Fan, Zhi Chen, Ricardo
Henao, Dinghan Shen, and Lawrence Carin. 2017.
Adversarial feature matching for text generation.
arXiv preprint arXiv:1706.03850.

Rong Zheng, Jiexun Li, Hsinchun Chen, and Zan
Huang. 2006. A framework for authorship identi-
fication of online messages: Writing-style features
and classification techniques. Journal of the Ameri-
can society for information science and technology,
57(3):378–393.

Yaoming Zhu, Sidi Lu, Lei Zheng, Jiaxian Guo,
Weinan Zhang, Jun Wang, and Yong Yu. 2018.
Texygen: A benchmarking platform for text gener-
ation models. arXiv preprint arXiv:1802.01886.

George Kingsley Zipf. 1935. The psycho-biology of
language.


