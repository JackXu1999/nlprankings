



















































Edinburgh's Statistical Machine Translation Systems for WMT16


Proceedings of the First Conference on Machine Translation, Volume 2: Shared Task Papers, pages 399–410,
Berlin, Germany, August 11-12, 2016. c©2016 Association for Computational Linguistics

Edinburgh’s Statistical Machine Translation Systems for WMT16

Philip Williams1, Rico Sennrich1, Maria Nădejde1,
Matthias Huck2, Barry Haddow1, Ondřej Bojar3

1School of Informatics, University of Edinburgh
2Center for Information and Language Processing, LMU Munich

3Institute of Formal and Applied Linguistics, Charles University in Prague
pwillia4@inf.ed.ac.uk rico.sennrich@ed.ac.uk M.Nadejde@sms.ed.ac.uk

mhuck@cis.lmu.de bhaddow@inf.ed.ac.uk bojar@ufal.mff.cuni.cz

Abstract

This paper describes the University of Ed-
inburgh’s phrase-based and syntax-based
submissions to the shared translation tasks
of the ACL 2016 First Conference on Ma-
chine Translation (WMT16). We sub-
mitted five phrase-based and five syntax-
based systems for the news task, plus one
phrase-based system for the biomedical
task.

1 Introduction

Edinburgh’s submissions to the WMT 2016 news
translation task fall into two distinct groups: neu-
ral translation systems and statistical translation
systems. In this paper, we describe the statisti-
cal systems, which includes a mix of phrase-based
and syntax-based approaches. We also include a
brief description of our phrase-based submission
to the WMT16 biomedical translation task. Our
neural systems are described separately in Sen-
nrich et al. (2016a).

In most cases, our statistical systems build on
last year’s, incorporating recent modelling refine-
ments and adding this year’s new training data.
For Romanian—a new language this year—we
paid particular attention to language-specific pro-
cessing of diacritics. For English→Czech, we ex-
perimented with a string-to-tree system, first using
Treex1 (formerly TectoMT; Popel and Žabokrt-
ský, 2010) to produce Czech dependency parses,
then converting them to constituency representa-
tion and extracting GHKM rules.

In the next two sections, we describe the phrase-
based systems, first describing the core setup in
Section 2 and then describing system-specific ex-
tensions and experimental results for each individ-
ual language pair in Section 3. We describe the

1http://ufal.mff.cuni.cz/treex

core syntax-based setup and experiments in Sec-
tions 4 and 5.

2 Phrase-based System Overview

2.1 Preprocessing

The training data was preprocessed us-
ing scripts from the Moses toolkit.
We first normalized the data using the
normalize-punctuation.perl script,
then performed tokenization (using the -a op-
tion), and then truecasing. We did not perform
any corpus filtering other than the standard Moses
method, which removes sentence pairs with
extreme length ratios, and sentences longer than
80 tokens.

2.2 Word Alignment

For word alignment we used fast_align
(Dyer et al., 2013)—except for German↔English,
where we used MGIZA++ (Gao and Vo-
gel, 2008)—followed by the standard
grow-diag-final-and symmetrization
heuristic.

2.3 Language Models

Our default approach to language modelling was
to train individual models on each monolingual
corpus (except CommonCrawl) and then linearly-
interpolate them to produce a single model. For
some systems, we added separate neural or Com-
monCrawl LMs. Here we outline the various ap-
proaches and then in Section 3 we describe the
combination used for each language pair.

Interpolated LMs For individual monolingual
corpora, we first used lmplz (Heafield et al., 2013)
to train count-based 5-gram language models with
modified Kneser-Ney smoothing (Chen and Good-
man, 1998). We then used the SRILM toolkit
(Stolcke, 2002) to linearly interpolate the models

399



using weights tuned to minimize perplexity on the
development set.

CommonCrawl LMs Our CommonCrawl lan-
guage models were trained in the same way as the
individual corpus-specific standard models, but
were not linearly-interpolated with other LMs. In-
stead, the log probabilities of CommonCrawl LMs
were added as separate features of the systems’
linear models.

Neural LMs For some of our phrase-based sys-
tems we experimented with feed-forward neural
network language models, both trained on target
n-grams only, and on “joint” or “bilingual” n-
grams (Devlin et al., 2014; Le et al., 2012). For
training these models we used the NPLM toolkit
(Vaswani et al., 2013), for which we have now im-
plemented gradient clipping to address numerical
issues often encountered during training.

2.4 Baseline Features
We follow the standard approach to SMT of scor-
ing translation hypotheses using a weighted lin-
ear combination of features. The core features
of our model are a 5-gram LM score (i.e. log
probability), phrase translation and lexical trans-
lation scores, word and phrase penalties, and a lin-
ear distortion score. The phrase translation prob-
abilities are smoothed with Good-Turing smooth-
ing (Foster et al., 2006). We used the hierarchi-
cal lexicalized reordering model (Galley and Man-
ning, 2008) with 4 possible orientations (mono-
tone, swap, discontinuous left and discontinuous
right) in both left-to-right and right-to-left direc-
tion. We also used the operation sequence model
(OSM) (Durrani et al., 2013) with 4 count based
supportive features. We further employed domain
indicator features (marking which training cor-
pus each phrase pair was found in), binary phrase
count indicator features, sparse phrase length fea-
tures, and sparse source word deletion, target word
insertion, and word translation features (limited to
the top K words in each language, typically with
K = 50).

2.5 Tuning
Since our feature set (generally around 500 to
1000 features) was too large for MERT, we used
k-best batch MIRA for tuning (Cherry and Fos-
ter, 2012). To speed up tuning we applied thresh-
old pruning to the phrase table, based on the direct
translation model probability.

2.6 Decoding
In decoding we applied cube pruning (Huang and
Chiang, 2007) with a stack size of 5000 (reduced
to 1000 for tuning), Minimum Bayes Risk de-
coding (Kumar and Byrne, 2004), a maximum
phrase length of 5, a distortion limit of 6, 100-
best translation options and the no-reordering-
over-punctuation heuristic (Koehn and Haddow,
2009).

3 Phrase-based Experiments

3.1 Finnish→English
Similar to last year (Haddow et al., 2015), we built
an unconstrained system for Finnish→English us-
ing data extracted from OPUS (Tiedemann, 2012).
Our parallel training set was the same as we used
previously, but the language model training set
was extended with the addition of the news2015
monolingual corpus and the large WMT16 En-
glish CommonCrawl corpus. We used news-
dev2015 for tuning, and newsdev2015 for testing
during system development.

One clear problem that we noted with our sub-
mission from last year was the large number of
OOVs, which were then copied directly into the
English output. This is undoubtedly due to the ag-
glutinative nature of Finnish, and probably was the
cause of our system being poorly judged by human
evaluators, despite having a high BLEU score. To
address this, we split the Finnish input into sub-
word units at both train and test time. In particular,
we applied byte pair encoding (BPE) to split the
Finnish source into smaller units, greatly reduc-
ing the vocabulary size. BPE is a technique which
has been recently used to good effect in neural ma-
chine translation (Sennrich et al., 2016b), where
the models cannot handle large vocbaularies. It is
actually a merging algorithm, originally designed
for compression, and works by starting with a
maximally split version of the training corpus (i.e.
split to characters) and iteratively merging com-
mon clusters. The merging continues for a speci-
fied number of iterations, and the merges are col-
lected up to form the BPE model. At test time,
the recorded merges are applied to the test corpus,
with the result that there are no OOVs in the test
data. For the experiments here, we used 100,000
BPE merges to create the model.

Applying BPE to Finnish→English was clearly
effective at addressing the unknown word prob-
lem, and in many cases the resulting translations

400



are quite understandable, e.g.
source yös Intian on sanottu olevan kiinnostunut

puolustusyhteistyösopimuksesta Japanin
kanssa.

base India is also said to be interested in puolus-
tusyhteistyösopimuksesta with Japan.

bpe India is also said to be interested in defence
cooperation agreement with Japan.

reference India is also reportedly hoping for a
deal on defence collaboration between the
two nations.

However applying BPE to Finnish can also re-
sult in some rather odd translations when it over-
zealously splits:
source Balotelli oli vielä kaukana huippu-

vireestään.
base Balotelli was still far from huippuvireestään.
bpe Baloo, Hotel was still far from the peak of its

vitality.
reference Balotelli is still far from his top tune.

We built four language models: an interpolated
count-based 5-gram language model with all cor-
pora, apart from the WMT16 CommonCrawl; sep-
arate count-based language models with WMT16
CommonCrawl and news2015; and a neural LM
on news2015. A performance comparison across
different language model combinations, and with
and without BPE is shown in Table 1.

system BLEU
fi-en ro-en

only interpolated LM 22.9 34.2
+ CommonCrawl LM 23.2 35.0
+ CC LM & news2015 (count) 23.4 34.9
+ CC LM & news2015 (neural) 23.4 35.2
+ all 23.4 35.0
without BPE 22.2 –
without diacritic removal – 32.2

Table 1: Comparison of different language model
combinations and preprocessing regimes for
Finnish→English and for Romanian→English.
The submitted system is shown in bold. The pre-
processing variant uses the same language model
combination as the submitted system. Cased
BLEU scores are on newstest2016.

3.2 Romanian→English
We trained our Romanian→English system using
all data available for the constrained task. For sys-
tem development, we split the newsdev2016 set

into two parts randomly (so as to balance the “born
English” and “born Romanian” portions), using
one for tuning and one for testing. For building the
final system, and for the contrastive experiments,
we used the whole of newsdev2016 for tuning, and
newstest2016 for testing.

In early experiments we noted that both the
training and the development data were inconsis-
tent in their use of diacritics leading to problems
with OOVs and sparse statistics. To address this
we stripped off all diacritics from the Romanian
texts and the result was a significant increase in
performance in our development setup. We also
experimented with different language model com-
binations during development, with our submit-
ted system using three different language model
features: a neural LM trained on just news2015
monolingual, an n-gram language model trained
on the WMT16 English CommonCrawl corpus,
and a linear interpolation of language models
trained on all other WMT16 English corpora.

In Table 1 we show how system performance
varies under different language model combina-
tion and preprocessing conditions.

3.3 English→Romanian

For English→Romanian, we used all the data
in the constrained track, including the Com-
monCrawl language model data, and as with
the Romanian→English system, we used news-
dev2016 for the final tuning run.

The inconsistent use of diacritics in Romana-
nian text also affected the English→Romanian
system, however removing altogether would be
problematic as we would then need a method for
restoring them for the final system. So the only
extra preprocessing we performed on the Roma-
nian was to ensure that “t-comma” and “s-comma”
were written correctly, with a comma rather than a
cedilla.

Our final system used two different count-
based 5-gram language models (one trained on all
data, including the WMT16 Romanian Common-
Crawl corpus, without pruning, and one trained on
news2015 monolingual only), a neural language
model trained on news2015 monolingual, and a
bilingual language model trained on the parallel
data, with source window of 15 and target window
of 1. In Table 2 we show ablation experiments
where we remove each of these language models.

401



system BLEU
submitted 26.8
+ prune all 26.2
- all 25.6
- news2015 26.4
- neural LM 26.6
- bilingual LM 26.5

Table 2: Effect of each of the language models
used in the English→Romanian system. The ex-
periments are not cumulative, so we first try prun-
ing the “all” language model, then go back to the
unpruned version and remove each LM in turn, ob-
serving the effect. The submitted system used all
four LMs, and the scores shown are uncased BLEU
scores on newstest2016.

3.4 English→German
For the English→German phrase-based system,
we exploited several translation factors in addi-
tion to word surface forms, in particular: Och
clusters (with 50 classes) and part-of-speech tags
(Ratnaparkhi, 1996) on the English side, as
well as Och clusters (50 classes), morphologi-
cal tags, and part-of-speech tags on the German
side (Schmid, 2000). Recent experiments for our
IWSLT 2015 phrase-based system have recon-
firmed that English→German translation quality
can benefit from these factors when supplemen-
tary models over factored representations are used
(Huck and Birch, 2015). For WMT16, we utilized
the factors in the translation model, in operation
sequence models, and in language models (for lin-
early interpolated 7-gram LMs over Och clusters
and morphological tags).

Sparse source word deletion, target word in-
sertion, and word translation features were inte-
grated over the top 200 word surface forms and
over selected factors (source and target Och clus-
ters, source part-of-speech tags and target mor-
phological tags). An unpruned 5-gram LM over
words that was trained on all German data except
the CommonCrawl monolingual corpus was sup-
plemented by a separate pruned LM trained on the
CommonCrawl data that had been provided as per-
missible data for the “constrained” track. Rather
than applying a simple linear distortion score, we
opted for sparse distortion features as described
by Green et al. (2010), which we reimplemented
in Moses. We activated sparse distortion features
with a feature template based on jump distance,
source part-of-speech tags, and target morpholog-

ical tags.
The feature weights for our final system were

tuned with hypergraph MIRA (i.e. batch MIRA
over lattices representing the decoding search
space) on a concatenation of newssyscomb2009
and newstest2008–2012.

3.5 German→English
For phrase-based translation from German, we ap-
plied syntactic pre-reordering (Collins et al., 2005)
and compound splitting (Koehn and Knight, 2003)
in a preprocessing step on the source side. The op-
eration sequence model for the German→English
phrase-based system was unpruned. We integrated
three language models: an unpruned LM over all
English data except the CommonCrawl monolin-
gual corpus; a pruned LM over CommonCrawl;
and a pruned LM over the monolingual News
Crawl 2015 corpus. In addition to lexical smooth-
ing with the standard lexicon models, we utilized a
source-to-target IBM Model 1 (Brown et al., 1993)
for sentence-level lexical scoring in a similar man-
ner as described by Huck et al. (2011) for hierar-
chical systems. We tuned on the concatenation of
newssyscomb2009 and newstest2008–2012.

Unlike last year’s system (Haddow et al.,
2015)—and different from the inverse translation
direction (English→German)—we refrained from
using any factors and instead set up a system that
operates over surface form word representations
only. In relation to last year’s system, we were
able to maintain high translation quality as mea-
sured in BLEU despite the abandonment of fac-
tors. However, we suspect that human judgment
scores may suffer a bit from the abandonment of
a factored model. We decided to drop the factored
representations in favour of gains in decoding ef-
ficiency.

We furthermore did not employ any sparse fea-
tures (sparse phrase length, source word deletion,
target word insertion, or word translation features)
in the German→English system since we did not
observe any clear gains in preliminary experi-
ments, and sparse features slow down tuning and
decoding.

English→German and German→English trans-
lation results with our phrase-based systems are
given in Table 3.

3.6 Spanish→English Biomedical
For our submission to the Spanish→English
biomedical task, we created a parallel corpus using

402



system de-en en-de
2013 2014 2015 2016 2013 2014 2015 2016

last year’s phrase-based 27.2 28.8 29.3 33.8 20.8 21.1 22.8 28.3
this year’s phrase-based 27.8 30.0 29.9 35.1 21.5 21.9 23.7 28.4

Table 3: Experimental results with phrase-based systems for German→English and English→German.
We report case-sensitive BLEU scores on each of the newstest2013–2016 test sets.

all relevant data from WMT13, as well as the extra
biomedical data provided by the task organisers,
and the EMEA corpus from OPUS (Tiedemann,
2012). In total we had around 16M sentences
of parallel data. Our monolingual corpus was
made up of three parts: all the English monolin-
gual medical data from WMT14 medical, WMT16
biomedical and EMEA (11M sentences); all the
English LDC GigaWord data (180M sentences);
and all the English general domain data from
WMT16 (240M sentences). We used the monolin-
gual data to build three different language models
which were then linearly interpolated. System tun-
ing was with the SCIELO development data pro-
vided for the biomedical task.

4 Syntax-based System Overview

For all syntax-based systems, we used a string-to-
tree model based on a synchronous context-free
grammar (SCFG) with linguistically-motivated la-
bels on the target side.

4.1 Preprocessing

Except for English-Czech, which we describe sep-
arately in Section 5.1, preprocessing was similar to
the phrase-based systems (Section 2.3). To parse
the target-side of the training data, we used the
Berkeley parser (Petrov et al., 2006; Petrov and
Klein, 2007) for English, and the ParZu depen-
dency parser (Sennrich et al., 2013) for German.
Except where stated otherwise, we right-binarized
the trees after parsing to increase rule coverage.

4.2 Word Alignment

As in the phrase-based models, we used
fast_align for word alignment and the
grow-diag-final-and heuristic for sym-
metrization.

4.3 Language Models

As in the phrase-based systems (Section 2.3),
we used linearly-interpolated language models as
standard, with some systems adding Common-

Crawl and neural LMs. We detail the system-
specific combinations in Section 5.

4.4 Rule Extraction
SCFG rules were extracted from the word-aligned
parallel data using the Moses implementation
(Williams and Koehn, 2012) of the GHKM algo-
rithm (Galley et al., 2004, 2006).

Minimal GHKM rules were composed into
larger rules subject to restrictions on the size of
the resulting tree fragment. We used the settings
shown in Table 4, which were chosen empirically
during the development of 2013’s systems (Nade-
jde et al., 2013).

parameter unbinarized binarized
rule depth 5 7
node count 20 30
rule size 5 7

Table 4: Parameter settings for rule composition.
The parameters were relaxed for systems that used
binarization to allow for the increase in tree node
density.

Further to the restrictions on rule composition,
fully non-lexical unary rules were eliminated us-
ing the method described in Chung et al. (2011)
and rules with scope greater than 3 (Hopkins and
Langmead, 2010) were pruned from the trans-
lation grammar. Scope pruning makes parsing
tractable without the need for grammar binariza-
tion.

4.5 Baseline Features
Our core set of string-to-tree feature functions is
unchanged from previous years. It includes the n-
gram language model’s log probability for the tar-
get string, the target word count, the rule count,
and several pre-computed rule-specific scores.
The rule-specific scores were: the direct and in-
direct translation probabilities; the direct and in-
direct lexical weights (Koehn et al., 2003); the
monolingual PCFG probability of the tree frag-
ment from which the rule was extracted; and a rule

403



rareness penalty.

4.6 Decoding

Decoding for the string-to-tree models is based on
Sennrich’s (2014) recursive variant of the CYK+
parsing algorithm combined with LM integration
via cube pruning (Chiang, 2007).

4.7 Tuning

The feature weights for the English→Czech and
Finnish→English systems were tuned using the
Moses implementation of MERT (Och, 2003).
For the remaining systems we used k-best MIRA
(Cherry and Foster, 2012) due to the use of sparse
features.

We used randomly-chosen subsets of the previ-
ous years’ test data to speed up decoding.

5 Syntax-based Experiments

5.1 English→Czech
For English→Czech, we used Treex to prepro-
cess and parse the Czech-side of the training data.
Treex uses the MST parser (McDonald et al.,
2005), which produces dependency graphs with
non-projective arcs. In order to extract SCFG
rules, we first applied the following conversion
process: i) the dependency graphs were projec-
tivized using the Malt Parser, which implements
the method described in Nivre and Nilsson (2005)
(we used the ‘Head’ encoding scheme); ii) the pro-
jective dependency graphs were converted to CFG
trees. In addition, we reduced the complex posi-
tional tags to simple POS tags by discarding the
morphological attributes. The CFG trees were not
binarized.

We also experimented with unification-
based agreement and case government con-
straints (Williams and Koehn, 2011; Williams,
2014). Specifically, our constraints were designed
to enforce: i) case, gender, and number agreement
between nouns and pre-nominal adjectival modi-
fiers; ii) number and person agreement between
subjects and verbs; iii) case agreement between
prepositions and nouns; iv) use of nominative case
for subject nouns. For every Czech word in the
training data, we obtained a set of morphological
analyses using MorphoDiTa (Straková et al.,
2014). From these analyses, we constructed
a lexicon of feature structures. For constraint
extraction, we used handwritten rules along the
lines of those described in Williams (2014).

In preliminary experiments we used a smaller
training set, comprising 2 million sentence pairs
sampled from OPUS and monolingual data from
last year’s WMT translation task. We used two
test sets from the HimL project and the Khresmoi
test set. Results with and without constraints are
shown in Table 5. We used hard constraints and re-
used the baseline weights (re-tuning did not appear
to give additional gains).

system BLEU
HimL1 HimL2 Khresmoi

baseline 23.3 18.6 20.4
+ constraints 23.6 18.8 20.7

Table 5: Translation results on the development
system for English→Czech with unification-based
constraints. Cased BLEU scores are shown. They
are averaged over three tuning runs (note that base-
line weights are reused in the experiments with
constraints).

Although the gains in BLEU were small, previ-
ous analysis for German showed that BLEU lacks
sensitivity to grammatical improvements when
compared to human evaluators (Williams, 2014).

We trained the final system on all of the pro-
vided training and monolingual data. In addition
to the interpolated LM, we used a model trained
on the CommonCrawl data. Results are shown in
Table 6.

system BLEU
2015 2016

baseline 17.3 20.1
+ constraints 17.5 20.2
+ CC LM 17.9 20.9

Table 6: Translation results on the final system
for English→Czech with unification-based con-
straints. Cased BLEU scores are shown. Note
that baseline weights are reused in the experiments
with constraints.

5.1.1 Manual Analysis

We carried out a small manual analysis of the sub-
mitted system with and without unification-based
constraints (the CC LM was used in both cases).
In order to remove the effect of tuning variance,
we used the same model weights in both cases
(the weights were learned on the version without

404



constraints). The BLEU scores of the two sys-
tems were 20.9 (with constraints) and 20.7 (with-
out constraints). A large majority of the outputs
(81% of the 2999 sentences in the newstest2016)
are identical.

Looking at a sample of 100 sentences with some
differences, we classified differring areas to see in
what aspects the outputs of the two systems differ.
In total, there were 104 such areas (some sentences
had more than one area of interest).

Table 7 summarizes the overall evaluation of
these areas (the annotation was not blind, we knew
which system was which). The majority of the ar-
eas were of an equal quality, in fact equally bad
overall, so neither of the compared systems deliv-
ered an acceptable translation.

Much Crazy
Better Better Equal Worse Reordering

4 41 44 12 3

Table 7: Manual evaluation of translations as pro-
posed by the English→Czech system with unifica-
tion constraints vs. the same system without con-
straints.

In 4 cases, the system with constraints delivered
much better translation, and three of those were
overall improvement of the sentence structure.

In 41 cases, the area was better for various rea-
sons. Most frequently (16 cases), this was in-
deed the agreement within noun and prepositional
phrases (adjective matching in case the preposition
etc.). In 9 additional cases, the NP or PP was better
translated but in other aspects than morphological
case, number of gender. For instance the baseline
system translated the phrase “between the depart-
ments of individual hospitals” as “between the in-
dividual departments of the hospitals” (in morpho-
logically well-formed Czech). Beyond better NPs
and PPs, the constraints have also helped over-
all sentence or clause structure (5 cases), lexical
choice (4 cases) and verbs and their belongings (2
cases).

In 15 cases, the constraints forced the system
to select a worse translation, damaging sentence
structure, lexical choice, spuriously introducing
negation etc. We highlight 3 of these cases, where
the system with constraints accidentally moved
words far away from their correct location (“Crazy
Reordering” in Table 7). This suggests that due to
sparse data, the application of constraints should

system BLEU
dev test

last year’s system 24.0 29.3
+particle verb restructuring 24.4 30.2
+News 2015 training data 24.5 30.6

Table 8: Translation results of English→German
string-to-tree translation system on dev (news-
test2015) and test (newstest2016).

be better balanced with respect to other parts of the
model. In constrast to German, targetting Czech
usually does not need long-distance reordering
and doing it risks more serious translation errors
than sticking to the English word order.

Since the hard unification constraints effectively
only avoid some of the possible translations (i.e.
reduce the search space), we conclude that having
to obey mere agreement constraints helps to select
a hypothesis better in a surprisingly larger span of
words, improving overall sentence structure on av-
erage.

5.2 English→German

This year’s string-to-tree submission for
English→German is similar to last year’s
system (Williams et al., 2015). In addition to the
baseline feature functions, it contains count-based
5-gram Neural Network language model (NPLM)
(Vaswani et al., 2013), a relational dependency
language model (RDLM) (Sennrich, 2015), and
soft source-syntactic constraints (Huck et al.,
2014). The parameters of the model are tuned
towards the linear interpolation of BLEU and the
syntactic metric HWCM (Liu and Gildea, 2005;
Sennrich, 2015). Trees are transformed through
binarization and a hierarchical representation of
morphologically complex words (Sennrich and
Haddow, 2015).

For the soft source-syntactic constraints, we an-
notate the source text with the Stanford Neural
Network dependency parser (Chen and Manning,
2014), along with heuristic projectivization (Nivre
and Nilsson, 2005).

Results are shown in Table 8. We report results
of last year’s system (Williams et al., 2015), which
was ranked (joint) first at WMT 15. Our improve-
ments this year stem from particle verb restructur-
ing (Sennrich and Haddow, 2015), and the use of
the new monolingual News Crawl 2015 corpus for

405



the Kneser-Ney language model.2

5.3 Finnish→English
Our Finnish→English syntax-based system was
similar to last year’s (Williams et al., 2015). The
main difference from the basic setup of Section 4
is that we preprocessed the Finnish data to seg-
ment words into morphemes. We also added a
CommonCrawl language model in addition to the
interpolated LM.

For segmentation, we used Morfessor 2.0 with
default settings, first training a segmentation
model, then using it to segment all words in the
source-side training and test data. Morfessor takes
a set of word types as input and we found that
it was important for translation quality to use a
large training vocabulary. Table 9 gives mean
BLEU scores for this setup, averaged over three
MERT runs. Our baseline is the standard string-
to-tree setup (i.e. without segmentation and with-
out the CommonCrawl LM). For segmentation,
we experimented with varying amounts of training
data, initially using the Finnish side of the pro-
vided parallel corpora, then adding the monolin-
gual Finnish data (apart from CommonCrawl), and
finally adding 10% of the CommonCrawl vocabu-
lary (we extracted the full vocabulary from Com-
monCrawl and then randomly sampled 10%). We
found that using larger amounts of training data
was prohibitively slow.

system BLEU
2015 2016

baseline 16.0 18.2
+ Morfessor (all parallel) 16.8 19.1
+ Morfessor (non-CC mono) 17.6 20.1
+ Morfessor (10% CC) 17.9 20.1
+ CC LM 18.0 20.3

Table 9: Comparison of different preprocessing
and language model regimes for Finnish→English
(syntax-based). Cased BLEU scores are given for
the newstest2015 and newstest2016 test sets, aver-
aged over three tuning runs.

5.4 German→English
For German→English we built a string-to-tree
system with a similar setup to last year’s (Williams
et al., 2015). In addition we used sparse fea-
tures to determine the non-terminal labels for un-

2The neural language models were trained on last year’s
training data.

system BLEU
dev test

baseline (phrase-structure) 28.6 33.5
+ NER before split 28.8 33.8
+ CommonCrawl LM* 29.4 34.4
contrastive (dependency)
+ NER before split 28.1 33.0

Table 10: Translation results of German→English
string-to-tree translation system on dev (news-
test2015) and test (newstest2016). *submitted sys-
tem.

known words similar to the English→German sys-
tems described by Williams et al. (2014) and Sen-
nrich et al. (2015). We also tagged named entities
to avoid over-splitting of compounds. For exam-
ple the script provided with Moses for compound
splitting will split Florstadt nach Bad Salzhausen
into flor Stadt nach Bad Salz hausen. This is
then wrongly translated by the baseline system as
Flor after bath salt station. We applied a 3–class
named entity tagger (Finkel et al., 2005; Faruqui
and Padó, 2010) on the German side of the cor-
pus prior to splitting and removed the annotations
afterwards. We also trained a contrastive system
with target–side dependency relations instead of
PTB–style phrase-structures. The English side of
the parallel corpora was annotated with the Stan-
ford Neural Network dependency parser (Chen
and Manning, 2014), along with heuristic pro-
jectivization (Nivre and Nilsson, 2005) and head-
binarization (Sennrich and Haddow, 2015). We re-
port the cased BLEU scores for different setups of
our system in Table 10.

5.5 Romanian→English
For Romanian→English we built a string-to-tree
system similar to the German→English system.
However we did not use compound splitting and
we allowed glue rules. Similar to the phrase-based
setup we used half of the newsdev2016 for tuning
and the other half as development set. We normal-
ized the corpora by removing all diacritics from
the Romanian side. We report the cased BLEU
scores for different setups of our system in Ta-
ble 11.

6 Conclusion

The Edinburgh team built a total of 11 phrase-
based and syntax-based translation systems us-

406



system BLEU
dev test

baseline (phrase-structure) 33.9 32.9
+ UNK NT labels 34.2 33.0
+ CommonCrawl LM* 35.2 33.6
contrastive (dependency)
+ UNK NT labels 33.7 32.3

Table 11: Translation results of
Romanian→English string-to-tree translation
system on dev (half of newsdev2016) and test
(newstest2016). *submitted system.

ing the open source Moses toolkit. Our
Finnish→English and Romanian→English sys-
tems ranked first according to cased BLEU on the
newstest2016 evaluation set.3

Acknowledgments

We are grateful to Martin Popel for assistance with
Treex. This project has received funding from
the European Union’s Horizon 2020 research and
innovation programme under grant agreements
645452 (QT21), 644333 (TraMOOC) and 644402
(HimL).

References

Peter F. Brown, Stephen A. Della Pietra, Vincent J.
Della Pietra, and Robert L. Mercer. 1993. The
Mathematics of Statistical Machine Translation:
Parameter Estimation. Computational Linguis-
tics 19(2):263–311.

Danqi Chen and Christopher Manning. 2014. A
Fast and Accurate Dependency Parser using
Neural Networks. In Proceedings of the 2014
Conference on Empirical Methods in Natural
Language Processing (EMNLP). Association
for Computational Linguistics, Doha, Qatar,
pages 740–750.

Stanley F. Chen and Joshua Goodman. 1998. An
empirical study of smoothing techniques for
language modeling. Technical report, Harvard
University.

Colin Cherry and George Foster. 2012. Batch Tun-
ing Strategies for Statistical Machine Transla-
tion. In Proceedings of the 2012 Conference of
the North American Chapter of the Association

3http://matrix.statmt.org/?mode=all&
test_set[id]=23

for Computational Linguistics: Human Lan-
guage Technologies. Montréal, Canada, pages
427–436.

David Chiang. 2007. Hierarchical phrase-based
translation. Comput. Linguist. 33(2):201–228.

Tagyoung Chung, Licheng Fang, and Daniel
Gildea. 2011. Issues Concerning Decoding with
Synchronous Context-free Grammar. In Pro-
ceedings of the 49th Annual Meeting of the As-
sociation for Computational Linguistics: Hu-
man Language Technologies. Portland, Oregon,
USA, pages 413–417.

Michael Collins, Philipp Koehn, and Ivona
Kucerova. 2005. Clause Restructuring for Sta-
tistical Machine Translation. In Proceedings of
the 43rd Annual Meeting of the Association for
Computational Linguistics (ACL’05). Ann Ar-
bor, MI, USA, pages 531–540.

Jacob Devlin, Rabih Zbib, Zhongqiang Huang,
Thomas Lamar, Richard Schwartz, and John
Makhoul. 2014. Fast and Robust Neural
Network Joint Models for Statistical Machine
Translation. In Proceedings of the 52nd An-
nual Meeting of the Association for Compu-
tational Linguistics (Volume 1: Long Papers).
Baltimore, MD, USA, pages 1370–1380.

Nadir Durrani, Alexander Fraser, Helmut Schmid,
Hieu Hoang, and Philipp Koehn. 2013. Can
Markov Models Over Minimal Translation
Units Help Phrase-Based SMT? In Proceedings
of the 51st Annual Meeting of the Association
for Computational Linguistics (Volume 2: Short
Papers). Sofia, Bulgaria, pages 399–405.

Chris Dyer, Victor Chahuneau, and Noah A.
Smith. 2013. A Simple, Fast, and Effective
Reparameterization of IBM Model 2. In Pro-
ceedings of the 2013 Conference of the North
American Chapter of the Association for Com-
putational Linguistics: Human Language Tech-
nologies. Atlanta, GA, USA, pages 644–648.

Manaal Faruqui and Sebastian Padó. 2010. Train-
ing and evaluating a german named entity rec-
ognizer with semantic generalization. In Pro-
ceedings of KONVENS 2010. Saarbrücken, Ger-
many.

Jenny Rose Finkel, Trond Grenager, and Christo-
pher Manning. 2005. Incorporating non-local
information into information extraction systems
by gibbs sampling. In Proceedings of the 43rd

407



Annual Meeting on Association for Computa-
tional Linguistics. pages 363–370.

George Foster, Roland Kuhn, and Howard John-
son. 2006. Phrasetable Smoothing for Statisti-
cal Machine Translation. In Proceedings of the
Conference on Empirical Methods for Natural
Language Processing (EMNLP). Sydney, Aus-
tralia, pages 53–61.

Michel Galley, Jonathan Graehl, Kevin Knight,
Daniel Marcu, Steve DeNeefe, Wei Wang, and
Ignacio Thayer. 2006. Scalable inference and
training of context-rich syntactic translation
models. In ACL-44: Proceedings of the 21st In-
ternational Conference on Computational Lin-
guistics and the 44th annual meeting of the As-
sociation for Computational Linguistics. Mor-
ristown, NJ, USA, pages 961–968.

Michel Galley, Mark Hopkins, Kevin Knight, and
Daniel Marcu. 2004. What’s in a Translation
Rule? In HLT-NAACL ’04.

Michel Galley and Christopher D. Manning. 2008.
A Simple and Effective Hierarchical Phrase Re-
ordering Model. In Proceedings of the 2008
Conference on Empirical Methods in Natu-
ral Language Processing. Honolulu, HI, USA,
pages 848–856.

Qin Gao and Stephan Vogel. 2008. Parallel imple-
mentations of word alignment tool. In Software
Engineering, Testing, and Quality Assurance
for Natural Language Processing. Stroudsburg,
PA, USA, SETQA-NLP ’08, pages 49–57.

Spence Green, Michel Galley, and Christopher D.
Manning. 2010. Improved Models of Distortion
Cost for Statistical Machine Translation. In Hu-
man Language Technologies: The 2010 Annual
Conference of the North American Chapter of
the Association for Computational Linguistics.
Los Angeles, California, pages 867–875.

Barry Haddow, Matthias Huck, Alexandra Birch,
Nikolay Bogoychev, and Philipp Koehn. 2015.
The Edinburgh/JHU Phrase-based Machine
Translation Systems for WMT 2015. In Pro-
ceedings of the Tenth Workshop on Statistical
Machine Translation. Association for Computa-
tional Linguistics, Lisbon, Portugal, pages 126–
133.

Kenneth Heafield, Ivan Pouzyrevsky, Jonathan H.
Clark, and Philipp Koehn. 2013. Scalable mod-
ified Kneser-Ney language model estimation.

In Proceedings of the 51st Annual Meeting of
the Association for Computational Linguistics.
Sofia, Bulgaria, pages 690–696.

Mark Hopkins and Greg Langmead. 2010. SCFG
decoding without binarization. In Proceedings
of the 2010 Conference on Empirical Methods
in Natural Language Processing. Cambridge,
MA, pages 646–655.

Liang Huang and David Chiang. 2007. For-
est Rescoring: Faster Decoding with Integrated
Language Models. In Proceedings of the 45th
Annual Meeting of the Association of Compu-
tational Linguistics. Prague, Czech Republic,
pages 144–151.

Matthias Huck and Alexandra Birch. 2015. The
Edinburgh Machine Translation Systems for
IWSLT 2015. In Proceedings of the Interna-
tional Workshop on Spoken Language Transla-
tion. Da Nang, Vietnam, pages 31–38.

Matthias Huck, Hieu Hoang, and Philipp Koehn.
2014. Preference Grammars and Soft Syntac-
tic Constraints for GHKM Syntax-based Sta-
tistical Machine Translation. In Proceedings
of SSST-8, Eighth Workshop on Syntax, Seman-
tics and Structure in Statistical Translation. As-
sociation for Computational Linguistics, Doha,
Qatar, pages 148–156.

Matthias Huck, Saab Mansour, Simon Wiesler,
and Hermann Ney. 2011. Lexicon Models
for Hierarchical Phrase-Based Machine Trans-
lation. In Proceedings of the International
Workshop on Spoken Language Translation.
San Francisco, CA, USA, pages 191–198.

Philipp Koehn and Barry Haddow. 2009. Edin-
burgh’s Submission to all Tracks of the WMT
2009 Shared Task with Reordering and Speed
Improvements to Moses. In Proceedings of the
Fourth Workshop on Statistical Machine Trans-
lation. Athens, Greece, pages 160–164.

Philipp Koehn and Kevin Knight. 2003. Empiri-
cal Methods for Compound Splitting. In Pro-
ceedings of the 10th Conference of the Euro-
pean Chapter of the Association for Computa-
tional Linguistics (EACL). Budapest, Hungary,
pages 187–194.

Philipp Koehn, Franz Josef Och, and Daniel
Marcu. 2003. Statistical phrase-based transla-
tion. In NAACL ’03: Proceedings of the 2003
Conference of the North American Chapter of

408



the Association for Computational Linguistics
on Human Language Technology. Morristown,
NJ, USA, pages 48–54.

Shankar Kumar and William Byrne. 2004. Mini-
mum Bayes-Risk Decoding for Statistical Ma-
chine Translation. In HLT-NAACL 2004: Main
Proceedings. Boston, MA, USA, pages 169–
176.

Hai Son Le, Alexandre Allauzen, and François
Yvon. 2012. Continuous Space Translation
Models with Neural Networks. In Human Lan-
guage Technologies: Conference of the North
American Chapter of the Association of Com-
putational Linguistics, Proceedings, June 3-8,
2012, Montréal, Canada. pages 39–48.

Ding Liu and Daniel Gildea. 2005. Syntactic Fea-
tures for Evaluation of Machine Translation. In
Proceedings of the ACL Workshop on Intrinsic
and Extrinsic Evaluation Measures for Machine
Translation and/or Summarization. Ann Arbor,
Michigan, pages 25–32.

Ryan McDonald, Fernando Pereira, Kiril Ribarov,
and Jan Hajic. 2005. Non-projective depen-
dency parsing using spanning tree algorithms.
In Proceedings of Human Language Technol-
ogy Conference and Conference on Empirical
Methods in Natural Language Processing.

Maria Nadejde, Philip Williams, and Philipp
Koehn. 2013. Edinburgh’s Syntax-Based Ma-
chine Translation Systems. In Proceedings of
the Eighth Workshop on Statistical Machine
Translation. Sofia, Bulgaria, pages 170–176.

Joakim Nivre and Jens Nilsson. 2005. Pseudo-
Projective Dependency Parsing. In Proceedings
of the 43rd Annual Meeting of the Association
for Computational Linguistics (ACL’05). Asso-
ciation for Computational Linguistics, Ann Ar-
bor, Michigan, pages 99–106.

Franz Josef Och. 2003. Minimum error rate train-
ing in statistical machine translation. In Pro-
ceedings of the 41st Annual Meeting on Asso-
ciation for Computational Linguistics - Volume
1. Morristown, NJ, USA, ACL ’03, pages 160–
167.

Slav Petrov, Leon Barrett, Romain Thibaux, and
Dan Klein. 2006. Learning accurate, compact,
and interpretable tree annotation. In Proceed-
ings of the 21st International Conference on
Computational Linguistics and the 44th annual

meeting of the Association for Computational
Linguistics. ACL-44, pages 433–440.

Slav Petrov and Dan Klein. 2007. Improved In-
ference for Unlexicalized Parsing. In Human
Language Technologies 2007: The Conference
of the North American Chapter of the Associ-
ation for Computational Linguistics; Proceed-
ings of the Main Conference. Rochester, New
York, pages 404–411.

Martin Popel and Zdeněk Žabokrtský. 2010. Tec-
toMT: Modular NLP framework. In Hrafn
Loftsson, Eirikur Rögnvaldsson, and Sigrun
Helgadottir, editors, Lecture Notes in Artificial
Intelligence, Proceedings of the 7th Interna-
tional Conference on Advances in Natural Lan-
guage Processing (IceTAL 2010). Iceland Cen-
tre for Language Technology (ICLT), Springer,
Berlin / Heidelberg, volume 6233 of Lecture
Notes in Computer Science, pages 293–304.

Adwait Ratnaparkhi. 1996. A Maximum Entropy
Part-Of-Speech Tagger. In Proceedings of the
Conference on Empirical Methods in Natural
Language Processing. Philadelphia, PA, USA.

Helmut Schmid. 2000. LoPar: Design and Im-
plementation. Bericht des Sonderforschungs-
bereiches “Sprachtheoretische Grundlagen für
die Computerlinguistik” 149, Institute for Com-
putational Linguistics, University of Stuttgart.

Rico Sennrich. 2014. A CYK+ Variant for SCFG
Decoding Without a Dot Chart. In Proceed-
ings of SSST-8, Eighth Workshop on Syntax, Se-
mantics and Structure in Statistical Translation.
Doha, Qatar, pages 94–102.

Rico Sennrich. 2015. Modelling and Optimizing
on Syntactic N-Grams for Statistical Machine
Translation. Transactions of the Association for
Computational Linguistics 3:169–182.

Rico Sennrich and Barry Haddow. 2015. A Joint
Dependency Model of Morphological and Syn-
tactic Structure for Statistical Machine Trans-
lation. In Proceedings of the 2015 Conference
on Empirical Methods in Natural Language
Processing. Association for Computational Lin-
guistics, Lisbon, Portugal, pages 2081–2087.

Rico Sennrich, Barry Haddow, and Alexandra
Birch. 2016a. Edinburgh Neural Machine
Translation Systems for WMT 16. In Proceed-
ings of the First Conference on Machine Trans-
lation (WMT16). Berlin, Germany.

409



Rico Sennrich, Barry Haddow, and Alexandra
Birch. 2016b. Neural Machine Translation of
Rare Words with Subword Units. In Proceed-
ings of the 54th Annual Meeting of the Associa-
tion for Computational Linguistics (ACL 2016).
Berlin, Germany.

Rico Sennrich, Martin Volk, and Gerold Schnei-
der. 2013. Exploiting Synergies Between Open
Resources for German Dependency Parsing,
POS-tagging, and Morphological Analysis. In
Proceedings of the International Conference
Recent Advances in Natural Language Process-
ing 2013. Hissar, Bulgaria, pages 601–609.

Rico Sennrich, Philip Williams, and Matthias
Huck. 2015. A tree does not make a well-
formed sentence: Improving syntactic string-
to-tree statistical machine translation with more
linguistic knowledge. Computer Speech & Lan-
guage 32(1):27–45.

Andreas Stolcke. 2002. SRILM – an Extensible
Language Modeling Toolkit. In Proc. of the Int.
Conf. on Spoken Language Processing (ICSLP).
Denver, CO, USA, volume 3.

Jana Straková, Milan Straka, and Jan Hajič. 2014.
Open-Source Tools for Morphology, Lemmati-
zation, POS Tagging and Named Entity Recog-
nition. In Proceedings of 52nd Annual Meeting
of the Association for Computational Linguis-
tics: System Demonstrations. Association for
Computational Linguistics, pages 13–18.

Jörg Tiedemann. 2012. Parallel Data, Tools
and Interfaces in OPUS. In Nicoletta Cal-
zolari (Conference Chair), Khalid Choukri,
Thierry Declerck, Mehmet Ugur Dogan, Bente
Maegaard, Joseph Mariani, Jan Odijk, and
Stelios Piperidis, editors, Proceedings of the
Eight International Conference on Language
Resources and Evaluation (LREC’12). Euro-
pean Language Resources Association (ELRA),
Istanbul, Turkey.

Ashish Vaswani, Yinggong Zhao, Victoria Fos-
sum, and David Chiang. 2013. Decoding
with Large-Scale Neural Language Models Im-
proves Translation. In Proceedings of the 2013
Conference on Empirical Methods in Natural
Language Processing, EMNLP 2013. Seattle,
Washington, USA, pages 1387–1392.

Philip Williams. 2014. Unification-based Con-
straints for Statistical Machine Translation.
Ph.D. thesis, University of Edinburgh.

Philip Williams and Philipp Koehn. 2011. Agree-
ment constraints for statistical machine transla-
tion into german. In Proceedings of the Sixth
Workshop on Statistical Machine Translation.
Association for Computational Linguistics, Ed-
inburgh, Scotland, pages 217–226.

Philip Williams and Philipp Koehn. 2012. GHKM
Rule Extraction and Scope-3 Parsing in Moses.
In Proceedings of the Seventh Workshop on Sta-
tistical Machine Translation. Montréal, Canada,
pages 388–394.

Philip Williams, Rico Sennrich, Maria Nadejde,
Matthias Huck, Eva Hasler, and Philipp Koehn.
2014. Edinburgh’s Syntax-Based Systems at
WMT 2014. In Proceedings of the Ninth Work-
shop on Statistical Machine Translation. Balti-
more, Maryland, USA, pages 207–214.

Philip Williams, Rico Sennrich, Maria Nadejde,
Matthias Huck, and Philipp Koehn. 2015. Edin-
burgh’s Syntax-Based Systems at WMT 2015.
In Proceedings of the Tenth Workshop on Sta-
tistical Machine Translation. Association for
Computational Linguistics, Lisbon, Portugal,
pages 199–209.

410


