



















































Relation Embedding with Dihedral Group in Knowledge Graph


Proceedings of the 57th Annual Meeting of the Association for Computational Linguistics, pages 263–272
Florence, Italy, July 28 - August 2, 2019. c©2019 Association for Computational Linguistics

263

Relation Embedding with Dihedral Group in Knowledge Graph

Canran Xu ∗

eBay Inc.
canxu@ebay.com

Ruijiang Li ∗

eBay Inc.
ruijili@ebay.com

Abstract

Link prediction is critical for the application
of incomplete knowledge graph (KG) in the
downstream tasks. As a family of effective
approaches for link predictions, embedding
methods try to learn low-rank representations
for both entities and relations such that the bi-
linear form defined therein is a well-behaved
scoring function. Despite of their success-
ful performances, existing bilinear forms over-
look the modeling of relation compositions,
resulting in lacks of interpretability for reason-
ing on KG. To fulfill this gap, we propose a
new model called DihEdral, named after dihe-
dral symmetry group. This new model learns
knowledge graph embeddings that can capture
relation compositions by nature. Furthermore,
our approach models the relation embeddings
parametrized by discrete values, thereby de-
crease the solution space drastically. Our ex-
periments show that DihEdral is able to cap-
ture all desired properties such as (skew-) sym-
metry, inversion and (non-) Abelian compo-
sition, and outperforms existing bilinear form
based approach and is comparable to or bet-
ter than deep learning models such as ConvE
(Dettmers et al., 2018).

1 Introduction

Large-scale knowledge graph (KG) plays a criti-
cal role in the downstream tasks such as semantic
search (Berant et al., 2013), dialogue management
(He et al., 2017) and question answering (Bordes
et al., 2014). In most cases, despite of its large
scale, KG is not complete due to the difficulty
to enumerate all facts in the real world. The ca-
pability of predicting the missing links based on
existing dataset is one of the most important re-
search topics for years. A common representa-
tion of KG is a set of triples (head, relation, tail),
and the problem of link prediction can be viewed
as predicting new triples from the existing set. A

∗Equal contribution.

popular approach is KG embeddings, which maps
both entities and relations in the KG to a vec-
tor space such that the scoring function of enti-
ties and relations for ground truth distinguishes
from false facts (Socher et al., 2013; Bordes et al.,
2013; Yang et al., 2015). Another family of ap-
proaches explicitly models the reasoning process
on KG by synthesizing information from paths
(Guu et al., 2015). More recently, researchers are
applying deep learning methods to KG embed-
dings so that non-linear interaction between enti-
ties and relations are enabled (Schlichtkrull et al.,
2018; Dettmers et al., 2018).

The standard task for link prediction is to an-
swer queries (h, r, ?) or (? r, t). In this context,
recent works on KG embedding focusing on bilin-
ear form methods (Trouillon et al., 2016; Nickel
et al., 2016; Liu et al., 2017; Kazemi and Poole,
2018) are known to perform reasonably well. The
success of this pack of models resides in the fact
they are able to model relation (skew-) symme-
tries. Furthermore, when serving for downstream
tasks such as learning first-order logic rule and
reasoning over the KG, the learned relation rep-
resentation is expected to discover relation com-
position by itself. One key property of relation
composition is that in many cases it can be non-
commutative. For example, exchanging the order
between parent_of and spouse_of will re-
sult in completely different relation (parent_of
as opposed to parent_in_law_of). We argue
that, in order to learn relation composition within
the link prediction task, this non-commutative
property should be explicitly modeled.

In this paper, we proposed DihEdral to model
the relation in KG with the representation of dihe-
dral group. The elements in a dihedral group are
constructed by rotation and reflection operations
over a 2D symmetric polygon. As the matrix rep-
resentations of dihedral group can be symmetric
or skew-symmetric, and the multiplication of the



264

group elements can be Abelian or non-Abelian, it
is a good candidate to model the relations with all
the corresponding properties desired.

To the best of our knowledge, this is the first at-
tempt to employ finite non-Abelian group in KG
embedding to account for relation compositions.
Besides, another merit of using dihedral group is
that even the parameters are quantized or even bi-
narized, the performance in link prediction tasks
can be improved over state-of-the-arts methods in
bilinear form due to the implicit regularization im-
posed by quantization.

The rest of paper is organized as follows: in
(§2) we present the mathematical framework of bi-
linear form modeling for link prediction task, fol-
lowed by an introduction to group theory and di-
hedral group. In (§3) we formalize a novel model
DihEdral to represent relations with fully expres-
siveness. In (§4, §5) we develop two efficient ways
to parametrize DihEdral and reveal that both ap-
proaches outperform existing bilinear form meth-
ods. In (§6) we carried out extensive case stud-
ies to demonstrate the enhanced interpretability
of relation embedding space by showing that the
desired properties of (skew-) symmetry, inversion
and relation composition are coherent with the re-
lation embeddings learned from DihEdral.

2 Preliminaries

2.1 Bilinear From for KB Link Prediction

Let E and R be the set of entities and relations. A
triple (h, r, t), where {h, t} ∈ E are the head and
tail entities, and r ∈ R is a relation corresponding
to an edge in the KG.

In a bilinear form, the entities h, t are repre-
sented by vectors h, t ∈ RM where M ∈ Z+, and
relation r is represented by a matrix R ∈ RM×M .
The score for the triple is defined as φ(h, r, t) =
h>Rt. A good representation of the entities and
relations are learned such that the scores are high
for positive triples and low for negative triples.

2.2 Group and Dihedral Group

Let gi, gj be two elements in a set G, and � be
a binary operation between any two elements in
G . The set G forms a group when the following
axioms are satisfied:

Closure For any two element gi, gj ∈ G, gk =
gi � gj is also an element in G.

Associativity For any gi, gj , gk ∈ G, (gi � gj) �
gk = gi � (gj � gk).

Identity There exists an identity element e in G
such that, for every element g in G, the equation
e� g = g � e = g holds.

Inverse For each element g, there is its inverse el-
ement g−1 such that g � g−1 = g−1 � g = e.

If the number of group elements is finite, the group
is called a finite group. If the group operation is
commutative, i.e. gi � gj = gj � gi for all gi
and gj , the group is called Abelian; otherwise the
group is non-Abelian.

Moreover, if the group elements can be repre-
sented by a matrix, with group operations defined
as matrix multiplications, the identity element is
represented by the identity matrix and the inverse
element is represented as matrix inverse. In the
following, we will not distinguish between group
element and its corresponding matrix representa-
tion when no confusion exists.

A dihedral group is a finite group that supports
symmetric operations of a regular polygon in two
dimensional space. Here the symmetric operations
refer to the operator preserving the polygon. For a
K-side (K ∈ Z+) polygon, the corresponding di-
hedral group is denoted as DK that consists of 2K
elements, within which there are K rotation oper-
ators and K reflection operators. A rotation oper-
ator Ok rotates the polygon anti-clockwise around
the center by a degree of (2πm/K), and a reflec-
tion operator Fk mirrors the rotation Ok vertically.

Figure 1: Elements in D4. Each subplot represents re-
sult after applying the corresponding operator to the
square of ‘ACL’ on the upper left corner (on top of
O

(0)
4 ). The top row corresponds to the rotation oper-

ators and the bottom row corresponds to the reflection
operators.

The element in the dihedral group DK can be



265

represented as 2D orthogonal matrices1:

O
(m)
K =

[
cos
(

2πm
K

)
− sin

(
2πm
K

)
sin
(

2πm
K

)
cos
(

2πm
K

) ]

F
(m)
K =

[
cos
(

2πm
K

)
sin
(

2πm
K

)
sin
(

2πm
K

)
− cos

(
2πm
K

) ] (1)

where m ∈ {0, 1, · · · ,K}. Correspondingly, the
group operation of dihedral group can be repre-
sented as multiplication of the representation ma-
trices. Note that when K is evenly divided by 4,
rotation matrices O(K/4)K and O

(3K/4)
K are skew-

symmetric, and all the reflection matrices F (m)K
and rotation matrices O(0)K , O

(K/2)
K are symmet-

ric. The representation of D4 is shown in Figure
1.

3 Relation Modeling with Dihedral
Group and Expressiveness

We propose to model the relations by the group
elements in DK . Like ComplEx (Trouillon
et al., 2016), we assume an even number of la-
tent dimensions 2L. More specifically, the re-
lation matrix takes a block diagonal form R =
diag

[
R(1),R(2), · · · ,R(L)

]
where R(l) ∈ DK

for l ∈ {1, 2, · · · , L}. The corresponding em-
bedding vectors h ∈ R2L and t ∈ R2L take
the form of

[
h(1), · · · ,h(L)

]
and

[
t(1), · · · , t(L)

]
where h(l), t(l) ∈ R2 respectively. As a result, the
score for a triple (h, r, t) in bilinear form can be
written as a sum of these L components h>Rt =∑L

l=1 h
(l)>R(l)t(l), We name the model DihEdral

because each component R(l) is a representation
matrix of a dihedral group element.

Lemma 1. The relation matrix R of DihEdral is
orthogonal, i.e. RR> = R>R = I .

Lemma 2. The score of (h, r, t) satisfies h>Rt =
−12
(∥∥R>h− t∥∥2

2
− h>h− t>t

)
, consequently

maximizing score w.r.t. R is equivalent to mini-
mizing

∥∥R>h− t∥∥2
2
.

Theorem 1. The relations matrices in DihEdral
form a group under matrix multiplication.

Though its relation embedding takes discrete
values, DihEdral is fully expressive as it is able
to model relations with desired properties for each
component Rl by the corresponding matrices in

1There are more than one 2D representations for the di-
hedral group DK , and we use the orthogonal representation
throughout the paper. Check Steinberg 2012 for details.

DK . The properties are summarized in Table 1,
with comparison to DistMult (Yang et al., 2015),
ComplEx (Trouillon et al., 2016), ANALOGY
(Liu et al., 2017) and SimplE (Kazemi and Poole,
2018). 2 The details of expressiveness are de-
scribed as follows. For notation convenience, we
denote T + all the possible true triples, and T − all
the possible false triples.

Symmetric A relation r is symmetric iff
(h, r, t) ∈ T + ⇔ (t, r, h) ∈ T +. Symmetric
relations in the real world include synonym,
similar_to.

Note that with DihEdral, the component Rl can
be a reflection matrix which is symmetric and off-
diagonal. This is in contrast to DistMult and Com-
plEx where the relation matrix has to be diagonal
when it is symmetric at the same time.

Skew-Symmetric A relation r is skew-symmetric
iff (h, r, t) ∈ T + ⇔ (t, r, h) ∈ T −. Skew-
symmetric relations in the real world include
father_of, member_of.

When K is a multiple of 4, pure skew-symmetric
matrices in D4 can be chosen. As a result, the rela-
tion is guaranteed to be skew-symmetric satisfying
φ(h, r, t) = −φ(t, r, h).

Inversion r2 is the inverse of r1 iff (h, r1, t) ∈
T + ⇔ (t, r2, h) ∈ T +. As a real world example,
parent_of is the inversion of child_of.

The inverse of the relation r is represented by
R−1 in an ideal situation: For two positive triples
(h, r1, t) and (t, r2, h), we have R>1 h ≈ t and
R>2 t ≈ h in an ideal situation (cf. Lemma 2),
With enough occurrences of pair {h, t} we have
R2 = R

−1
1 .

Composition r3 is composition of r1 and r2,
denoted as r3 = r1 � r2 iff (h, r1,m) ∈
T + ∧ (m, r2, t) ∈ T + ⇔ (h, r3, t) ∈ T +.
Example of composition in the real world in-
cludes nationality = born_in_city �
city_belong_to_nation. Depending on
the commutative property, there are two cases of
relation compositions:

• Abelian r1 and r2 are Abelian if
(h, r1 � r2, t) ∈ T + ⇔ (h, r2 � r1, t) ∈
T +. Real world example includes

2Note that the condition listed in the table is sufficient but
not necessary for the desired property.



266

Component Symmetric Skew-Symmetric
Composition

Abelian Non-Abelian

DistMult ri ∈ R X ?∗ X NA†

ComplEx
[

ai −bi
bi ai

]
bi = 0 ai = 0 X NA†

ANALOGY
[

ai −bi
bi ai

]
∪ {cj} bi = 0 ai, cj = 0 X NA†

SimplE
[

0 ai
bi 0

]
ai = bi ai = −bi NA†

DihEdral DK F (m)K ∪O
(0,K/2)
K O

(K/4,3K/4)
K both in O

(m)
K either in F

(m)
K

Table 1: Comparison on expressiveness for bilinear KB models. ‘NA’ stands for ‘not available’, and ‘X’ stands for
‘always’. ∗ DistMult has no skew-symmetric relation representations but it performs well in benchmark datasets
because the entity type of head and tails are different. † The contents in column ‘Composition’ are subject to
the assumption that relation composition corresponds the multiplication of the relation representation. We are not
certain if there are other composition rules with which these properties are satisfied.

opposite_gender � profession
= profession � opposite_gender.
• Non-Abelian r1 and r2 are non-Abelian

if (h, r1 � r2, t) ∈ T + < (h, r2 �
r1, t) ∈ T +. Real world example
include parent_of � spouse_of 6=
spouse_of � parent_of.

In DihEdral, the relation composition operator
� corresponds to the matrix multiplication of
the corresponding representations, i.e. R3 ≈
R1R2. Consider three positive triples (h, r1,m),
(m, r2, t) and (h, r3, t). In the ideal situation,
we have R>1 h ≈ m, R>2 m ≈ t, R>3 h ≈ t
(cf. Lemma 2), and further R>2 R

>
1 h ≈ t. With

enough occurrences of such {h, t} pairs in the
training dataset, we have R3 ≈ R1R2.

Note that although all the rotation matrices form
a subgroup to dihedral group, and hence alge-
braically closedthe rotation subgroup could not
model non-Abelian relations. To model non-
Abelian relation compositions at least one reflec-
tion matrix should be involved.

4 Training

In the standard traing framework for KG embed-
ding models, parameters Θ = ΘE ∪ ΘR, i.e.
the union of entity and relation embeddings, are
learnt by stochastic optimization methods. For
each minibatch of positive triples, a small number
of negative triples are sampled by corrupting head
or tail for each positive triple, then related param-
eters in the model are updated by minimizing the
binary negative log-likelihood such that positive
triples will get higher scores than negative triples.

Specifically, the loss function is written as follows,

min
Θ

∑
(h,r,t)∈T +∪T −

− log σ (yφ(h, r, t))+λ||ΘE ||2,

(2)
where λ ∈ R is the L2 regularization coefficient
for entity embeddings only, T + and T − are the
sets of positive and sampled negative triples in a
minibatch, and y equals to 1 if (h, r, t) ∈ T +
otherwise −1. σ is a sigmoid function defined as
σ(x) = 1/(1 + exp(−x)).

Special treatments of the relation representa-
tions R are required as they takes discrete val-
ues. In the next subsections we describe a
reparametrization method for general K, followed
by a simple approach whenK takes small integers
values. With these treatments, DihEdral could be
trained within the standard framework.

4.1 Gumbel-Softmax Approach

Each relation component R(l) can be parametrized
with a one-hot variable c(l) ∈ {0, 1}2K encod-
ing 2K choices of matrices in DK : R(l) =∑2K

k=1 c
(l)
k Dk where {Dk, k ∈ {1, · · · , 2K}}

enumerates DK . The number of parameters for
each relation is 2LK in this approach.

One-hot variable c(l) is further parametrized by
s(l) ∈ R2K by Gumbel trick (Jang et al., 2017)
with the following steps: 1) take i.i.d. samples
q1, q2, . . . , q2K from a Gumbel distribution: qi =
− log(− log ui), where ui ∼ U(0, 1) are samples
from a uniform distribution; 2) use log-softmax



267

form of s(l) to parametrize c(l) ∈ {0, 1}2K :

c
(l)
k =

exp
[
(s

(l)
k + qk)/τ

]
∑2K

k=1 exp
[
(s

(l)
k + qk)/τ

] (3)
where τ is the tunable temperature. During train-
ing, we start with high temperature, e.g. τ0 =
3, to drive the system out of pool local mini-
mums, and gradually cool the system with τ =
max(0.5, τ0 exp(−0.001t)) where t is the number
of epochs elapsed.

4.2 Reparametrization with Binary Variables

Another parametrization technique for DK where
K ∈ {4, 6} is to parametrize each element in the
matrix R(l) directly. Specifically we have

R(l) =

[
λ −αγ
γ αλ

]
,

where λ = cos(2πk/K), γ = sin(2πk/K), k ∈
{0, 1, · · · , 2K − 1} and α ∈ {−1, 1} is the reflec-
tion indicator . Both λ and γ can be parametrized
by the same set of binary variables {x, y, z}:

λ =

{
(x+ y)/2 K = 4

y(3− x)/4 K = 6
,

γ =

{
(x− y)/2 K = 4
z(x+ 1)

√
3/4 K = 6

.

In the forward pass, each binary variable b ∈
{x, y, z} is parametrized by taking a element-wise
sign function of a real number: b = sign(breal)
where breal ∈ R.

In the backward pass, since the original gradient
of sign function is almost zero everywhere such
that breal will not be activated, the gradient of loss
with respect to the real variable is estimated with
the straight-through estimator (STE) (Yin et al.,
2019). The functional form for STE is not unique
and worth profound theoretical study. In our ex-
periments, we used identity STE (Bengio et al.,
2013):

∂loss

∂breal
=
∂loss

∂b
1,

where 1 stands for element-wise identity.
For these two approaches, we name the model

as DK-Gumbel for Gumbel-Softmax approach
and DK-STE for reparametrization using binary
variable approach.

5 Experimental Result

This section presents our experiments and results.
We first introduce the benchmark datasets used in
our experiments, after that we evaluate our ap-
proach in the link prediction task.

5.1 Datasets
Introduced in Bordes et al. (2013), WN18 and
FB15K are popular benchmarks for link prediction
tasks. WN18 is a subset of the famous WordNet
database that describes relations between words.
In WN18 the most frequent types of relations form
reversible pairs (e.g., hypernym to hyponym,
part_of to has_part). FB15K is a sub-
sampling of Freebase limited to 15k entities, in-
troduced in Bordes et al. (2013). It contains
triples with different characteristics (e.g., one to-
one relations such as capital_of to many-to-
many such as actor_in_film). YAGO3-10
(Dettmers et al., 2018) is a subset of YAGO3
(Suchanek et al., 2007) with each entity contains
at least 10 relations.

As noted in Toutanova et al. (2015); Dettmers
et al. (2018), in the original WN18 and FB15k
datasets there are a large amount of test triples
appear as reciprocal form of the training sam-
ples, due to the reversible relation pairs. There-
fore, these authors eliminated the inverse relations
and constructed corresponding subsets: WN18RR
with 11 relations and FB15K-237 with 237 rela-
tions, both of which are free from test data leak.
All datasets statistics are shown in Table 2.

Dataset |E| |R| Train Valid Test
WN18 41k 18 141k 5k 5k
WN18RR 41k 11 87k 3k 3k
FB15K 15k 1.3k 483k 50k 59k
FB15K-237 15k 237 273k 18k 20k
YAGO3-10 123k 37 1M 5k 5k

Table 2: Statistics of Datasets.

5.2 Evaluation Metric
We use the popular metrics filtered HITS@1, 3, 10
and mean reciprocal rank (MRR) as our evaluation
metrics as in Bordes et al. (2013).

5.3 Model Selection and Hyper-parameters
We implemented DihEdral in PyTorch (Paszke
et al., 2017). In all our experiments, we selected
the hyperparameters of our model in a grid search
setting for the best MRR in the validation set. We



268

WN18 FB15K
HITS@N

MRR
HITS@N

MRR
1 3 10 1 3 10

TransE† (Bordes et al., 2013) 8.9 82.3 93.4 45.4 23.1 47.2 64.1 22.1
DistMult† (Yang et al., 2015) 72.8 91.4 93.6 82.2 54.6 73.3 82.4 65.4
ComplEx† (Trouillon et al., 2016) 93.6 94.5 94.7 94.1 59.9 75.9 84.0 69.2
HolE (Nickel et al., 2016) 93.0 94.5 94.7 93.8 40.2 61.3 73.9 52.4
ANALOGY (Liu et al., 2017) 93.9 94.4 94.7 94.2 64.6 78.5 85.4 72.5
Single DistMult (Kadlec et al., 2017) — — 94.6 79.7 — — 89.3 79.8
SimplE (Kazemi and Poole, 2018) 93.9 94.4 94.7 94.2 66.0 77.3 83.8 72.7
R-GCN (Schlichtkrull et al., 2018) 69.7 92.9 96.4 81.9 60.1 76.0 84.2 69.6
ConvE (Dettmers et al., 2018) 93.5 94.6 95.6 94.3 55.8 72.3 83.1 65.7
D4-STE 94.2 94.8 95.2 94.6 64.1 80.3 87.7 73.3
D4-Gumbel 94.2 94.9 95.4 94.6 64.8 78.2 86.4 72.8

Table 3: Link prediction results on WN18 and FB15K datasets. Results marked by ‘†’ are taken from (Trouillon
et al., 2016), and the rest of the results are taken from original literatures.

trained DK-Gumbel for K ∈ {4, 6, 8} and DK-
STE for K ∈ {4, 6} with AdaGrad optimizer
(Duchi et al., 2011), and we didn’t notice signif-
icant difference in terms of the evaluation metrics
when varying K. In the following we only report
the result for K = 4.

For D4-Gumbel, we performed grid
search for the L2 regularization coefficient λ
∈ [10−5, 10−4, 10−3] and learning rate ∈ [0.5, 1].
For D4-STE, hyperparamter ranges for the grid
search were as follows: λ ∈ [0.001, 0.01, 0.1,
0.2], learning rate ∈ [0.01, 0.02, 0.03, 0.05, 0.1].
For both settings we performed grid search with
batch sizes ∈ [512, 1024, 2048] and negative
sample ratio ∈ [1, 6, 10]. We used embedding
dimension 2L = 1500 for FB15K, 2L = 600
for both FB15K-237 and YAGO3-10, 2L = 200
for WN18 and WN18RR. We used the standard
train/valid/test splits provided with these datasets.

The results of link predictions are shown in Ta-
ble 3 and 4, where the results for the baselines
are directly taken from original literature. Di-
hEdral outperforms almost all models in bilinear
form, and even ConvE in FB15K, WN18RR and
YAGO3-10. The result demonstrates that even Di-
hEdral takes discretized value in relation represen-
tations, proper modeling the underlying structure
of relations using DK is essential.

6 Case Studies

The learned representation from DihEdral is not
only able to reach the state-of-the-art performance
in link prediction tasks, but also provides insights
with its special properties. In this section, we
present the detailed case studies on these proper-
ties. In order to achieve better resolutions, we in-
creased the embedding dimension to 2L = 600 for
WN18 datasets.

−1.0 −0.5 0.0 0.5 1.00

200

400

_part_of
_has_part

percage of 1s: 0.93

−1.0 −0.5 0.0 0.5 1.00

200

400

_member_of_domain_usage
_synset_domain_usage_of

percage of 1s: 0.68

−1.0 −0.5 0.0 0.5 1.00

500

1000

act_in_film
starring

percage of 1s: 0.91

−1.0 −0.5 0.0 0.5 1.00

500

1000

people_born_here
place_of_birth
percage of 1s: 0.86

Figure 2: Relation inversion in WN18 (top) and FB15K
(bottom). Each subplot shows the histogram of diago-
nal elements in R1R2 where r1 is inverse relation of
r2. The name of the two relations and the percentage
of the 1s in the diagonal are shown in the first, second
and third row of the subplot title, respectively.

6.1 Inversion

We show the multiplication of some pairs of inver-
sion relations on WN18 and FB15K in Figure 2,



269

WN18RR FB15K-237 YAGO3-10
HITS@N

MRR
HITS@N

MRR
HITS@N

MRR
1 3 10 1 3 10 1 3 10

DistMult† 39.0 44.0 49.0 43.0 15.5 26.3 41.9 24.1 24.0 38.0 54.0 34.0
ComplEx† 41.0 46.0 51.0 44.0 15.8 27.5 42.8 24.7 26.0 40.0 55.0 36.0
R-GCN — — — — 15.1 26.4 41.7 24.8 — — — —
ConvE† 40.0 44.0 52.0 43.0 23.7 35.6 50.1 32.5 35.0 49.0 62.0 44.0
MINERVA∗ 41.3 45.6 51.3 44.8 21.7 32.9 45.6 29.3 — — — —
D4-STE 45.2 49.1 53.6 48.0 23.0 35.3 50.2 32.0 38.1 52.3 64.3 47.2
D4-Gumbel 44.2 50.5 55.7 48.6 20.4 33.2 49.6 30.0 29.4 43.6 57.3 38.8

Table 4: Link prediction results on WN18RR and FB15K-237 datasets. Results marked by ‘†’ are taken from
(Dettmers et al., 2018), and result marked by ‘∗’ is taken from (Das et al., 2018).

and the result is close to an identity matrix. For the
relation pair {_member_of_domain_usage,
_synset_domain_usage_of}, the multipli-
cation deviates from ideal identity matrix as the
performance for these two relations are poorer
compared to the others. We also repeat the same
case study for other bilinear embedding methods,
however their multiplications are not identity, but
close to diagonal matrices with different elements.

O
(0)
4 O

(1)
4 O

(2)
4 O

(3)
4 F

(0)
4 F

(1)
4 F

(2)
4 F

(3)
4

0

25

50

_verb_group

O
(0)
4 O

(1)
4 O

(2)
4 O

(3)
4 F

(0)
4 F

(1)
4 F

(2)
4 F

(3)
4

0

25

50

_similar_to

Symmetric Relations

O
(0)
4 O

(1)
4 O

(2)
4 O

(3)
4 F

(0)
4 F

(1)
4 F

(2)
4 F

(3)
4

0

50

100

_hyponym

O
(0)
4 O

(1)
4 O

(2)
4 O

(3)
4 F

(0)
4 F

(1)
4 F

(2)
4 F

(3)
4

0

25

50

75

100

_instance_hypernym

O
(0)
4 O

(1)
4 O

(2)
4 O

(3)
4 F

(0)
4 F

(1)
4 F

(2)
4 F

(3)
4

0

20

40

60

80

_synset_domain_region_of

O
(0)
4 O

(1)
4 O

(2)
4 O

(3)
4 F

(0)
4 F

(1)
4 F

(2)
4 F

(3)
4

0

20

40

_synset_domain_topic_of

Skew-Symmetric Relations

Figure 3: Historgram of each component of D4 for
WN18. The top and bottom row corresponds to
symmetric and skew-symmetric relations, respectively.
Note that O(1,3)4 are skew-symmetric components and
others are symmetric.

6.2 Symmetry and Skew-Symmetry

Since the KB datasets do not contain negative
triples explicitly, there is no penalty to model
skew-symmetric relations with symmetric matri-

ces. This is perhaps the reason why DistMult per-
forms well on FB15K dataset in which a lot of re-
lations are skew-symmetric.

To resolve this ambiguity, for each positive
triple (h, r, t) with a definite skew-symmetric re-
lation r, a negative triple (t, r, h) is sampled with
probability 0.5. After adding this new negative
sampling scheme in D4-Gumbel, the symmet-
ric and skew-symmetric relations can be distin-
guished on WN18 dataset without reducing per-
formance on link prediction tasks. Figure 3 shows
that both symmetric and skew-symmetric rela-
tions favor corresponding components in D4 as
expected. Again, due to imperfect performance
of _synset_domain_topic_of, its corre-
sponding representation is imperfect as well. We
also conduct the same experiment without adding
this sampling scheme, the histogram for the sym-
metric relations are similar, but there is no strong
preference for skew-symmetric relations.

6.3 Relation Composition

In FB15K-237 dataset the majority of patterns is
relation composition. However, these composi-
tions are Abelian only because all the inverse re-
lations are filtered out on purpose. To justify if
non-Abelian relation compositions can be discov-
ered by DihEdral in an ideal situation, we gen-
erate a synthetic dataset called FAMILY. Specifi-
cally, we first generated two generations of peo-
ple with equal number of male and females in
each generation, and randomly assigned spouse
edges within each generation and child and
parent edges between the two generations, af-
ter which the sibling, parent_in_law and



270

−1.0 −0.5 0.0 0.5 1.00

200

400

people_is_nominated_award
award_is_nominated_to_work

people_winning_work
percage of 1s: 0.96

−1.0 −0.5 0.0 0.5 1.00

100

200

300

film_directed_by_director
director_direct_film

film_is_prequel_of_film
percage of 1s: 0.94

−1.0 −0.5 0.0 0.5 1.00

50

100

150

m_ishusband_f
f_hasdaughter_f
m_hasdaughter_f
percage of 1s: 0.86

−1.0 −0.5 0.0 0.5 1.00

50

100

150

f_motherlaw_f
f_hasson_m
f_iswife_m

percage of 1s: 0.90

−1.0 −0.5 0.0 0.5 1.00

50

100

f_hasdaughter_f
m_ishusband_f

m_hasdaughter_f
percage of 1s: 0.54

−1.0 −0.5 0.0 0.5 1.00

50

100

f_hasson_m
f_motherlaw_f
f_iswife_m

percage of 1s: 0.58

Figure 4: Relation composition on FB15K-237 and
FAMILY. Each subplot shows the histogram of diag-
onal elements in R1R2R−13 where r3 is treated as the
composition of r1 and r2. The name of the three rela-
tions and the percentage of the 1s in the diagonal are
shown in the 1st, 2nd, 3rd and 4th line of subplot title.
The two subplots in the first rows shows composition
for FB15K-237, and subplots on the second and third
row are used to check composition and non-Abelian on
FAMILY.

child_in_law edges are connected based on
commonsense logic.

We trained D4-Gumbel on FAMILY with latent
dimension 2L = 400. In addition to the loss in
Eq. 2, we add the following regularization term to
encourage the score of positive triple to be higher
than that of negative triple for each component in-
dependently.

−
L∑
l=1

log σ
(
h(l)>R(l)t(l) − h∗(l)>R(l)t∗(l)

)
.

where (h, r, t) ∈ T +, and the corresponding neg-
ative triple (h∗, r, t∗) ∈ T −.

For each composition r3 = r1�r2, we compute
the histogram of R1R2R−13 . The result for rela-
tion compositions in FB15K-237 and FAMILY is
shown in Figure 4, from which we could see good
composition as matrix multiplication. We also re-
veal the non-Abelian property in FAMILY by ex-
changing the order of r1 and r2.

7 Related Works

In this section we discuss the related works and
their connections to our approach.

TransE (Bordes et al., 2013) takes relations as
a translating operator between head and tail enti-
ties. More complicated distance functions (Wang
et al., 2014; Lin et al., 2015b,a) are also proposed
as extensions to TransE. TorusE (Ebisu and Ichise,
2018) proposed a novel distance function defined
over a torus by transform the vector space by an
Abelian group onto a n-dimensional torus. ProjE
(Shi and Weninger, 2017) designs a neural net-
work with a combination layer and a projection
layer. R-GCN (Schlichtkrull et al., 2018) employs
convolution over multiple entities to capture spec-
trum of the knowledge graph. ConvE (Dettmers
et al., 2018) performs 2D convolution on the con-
catenation of entity and relation embeddings, thus
by nature introduces non-linearity to enhance ex-
pressiveness.

In RESCAL (Nickel et al., 2011) each relation is
represented by a full-rank matrix. As a downside,
there is a huge number of parameters in RESCAL
making the model prone to overfitting. A totally
symmetric DistMult (Yang et al., 2015) model
simplifies RESCAL by representing each relation
with a diagonal matrix. To parametrize skew-
symmetric relations, ComplEx (Trouillon et al.,
2016) extends DistMult by using complex-valued
instead of real-valued vectors for entities and rela-
tions. The representation matrix of ComplEx sup-
ports both symmetric and skew-symmetric rela-
tions while being closed under matrix multiplica-
tion. HolE (Nickel et al., 2016) models the skew-
symmetry with circular correlation between entity
embeddings, thus ensures shifts in covariance be-
tween embeddings at different dimensions. It was
recently showed that HolE is isomophic to Com-
plEx (Hayashi and Shimbo, 2017). ANALOGY
(Liu et al., 2017) and SimplE (Kazemi and Poole,
2018) both reformulate the tensor decomposition
approach in light of analogical and reversible rela-
tions.

Though embedding based approach achieves
state-of-the-art performance on link prediction
task, symbolic relation composition is not explic-
itly modeled. In contrast, the latter goal is cur-
rently popularized by directly modeling the rea-
soning paths (Neelakantan et al., 2015; Xiong
et al., 2017; Das et al., 2018; Lin et al., 2018; Guo
et al., 2019). As paths are consistent with rea-



271

soning logic structure, non-Abelian composition is
supported by nature.

DihEdral is more expressive when compared
to other bilinear form based embedding methods
such as DistMult, ComplEX and ANALOGY. As
the relation matrix is restricted to be orthogonal,
DihEdral could bridge translation based and bi-
linear form based approaches as the training ob-
jective w.r.t. the relation matrix is similar (cf
Lemma 2). Besides, DihEdral is the first embed-
ding method to incorporate non-Abelian relation
compositions in terms of matrix multiplications
(cf. Theorem 1).

8 Conclusion

This paper proposed DihEdral for KG relation em-
bedding. By leveraging the desired properties of
dihedral group, relation (skew-) symmetry, inver-
sion, and (non-) Abelian compositions are all sup-
ported. Our experimental results on benchmark
KGs showed that DihEdral outperforms existing
bilinear form models and even deep learning meth-
ods. Finally, we demonstrated that the above g
properties can be learned from DihEdral by exten-
sive case studies, yielding a substantial increase in
interpretability from existing models.

Acknowledgments

The authors would like to thank Vivian Tian, Hua
Yang, Steven Li and Xiaoyuan Wu for their sup-
ports, and anonymous reviewers for their helpful
comments.

References
Yoshua Bengio, Nicholas Léonard, and Aaron C.

Courville. 2013. Estimating or propagating gradi-
ents through stochastic neurons for conditional com-
putation. arXiv preprint arXiv:1308.3432.

Jonathan Berant, Andrew Chou, Roy Frostig, and Percy
Liang. 2013. Semantic parsing on Freebase from
question-answer pairs. In Proceedings of EMNLP.

Antoine Bordes, Sumit Chopra, and Jason Weston.
2014. Question answering with subgraph embed-
dings. In Proceedings of EMNLP.

Antoine Bordes, Nicolas Usunier, Alberto Garcia-
Duran, Jason Weston, and Oksana Yakhnenko.
2013. Translating embeddings for modeling multi-
relational data. In Proceedings of NeurIPs.

Rajarshi Das, Shehzaad Dhuliawala, Manzil Zaheer,
Luke Vilnis, Ishan Durugkar, Akshay Krishna-
murthy, Alex Smola, and Andrew McCallum. 2018.

Go for a walk and arrive at the answer: Reasoning
over paths in knowledge bases using reinforcement
learning. In Proceedings in ICLR.

Tim Dettmers, Pasquale Minervini, Pontus Stenetorp,
and Sebastian Riedel. 2018. Convolutional 2d
knowledge graph embeddings. In Proceedings of
AAAI.

John Duchi, Elad Hazan, and Yoram Singer. 2011.
Adaptive subgradient methods for online learning
and stochastic optimization. J. Mach. Learn. Res.,
12:2121–2159.

Takuma Ebisu and Ryutaro Ichise. 2018. TorusE:
Knowledge graph embedding on a lie group. In Pro-
ceedings of AAAI.

Lingbing Guo, Zequn Sun, and Wei Hu. 2019. Learn-
ing to exploit long-term relational dependencies in
knowledge graphs. In Proceedings of ICML.

Kelvin Guu, John Miller, and Percy Liang. 2015.
Traversing knowledge graphs in vector space. In
Proceedings of EMNLP.

Katsuhiko Hayashi and Masashi Shimbo. 2017. On
the equivalence of holographic and complex embed-
dings for link prediction. In Proceedings of ACL.

He He, Anusha Balakrishnan, Mihail Eric, and Percy
Liang. 2017. Learning symmetric collaborative di-
alogue agents with dynamic knowledge graph em-
beddings. In Proceedings of ACL.

Eric Jang, Shixiang Gu, and Ben Poole. 2017. Cate-
gorical reparameterization with gumbel-softmax. In
Proceedings of ICLR.

Rudolf Kadlec, Ondrej Bajgar, and Jan Kleindienst.
2017. Knowledge base completion: Baselines strike
back. In Proceedings of the 2nd Workshop on Rep-
resentation Learning for NLP.

Seyed Mehran Kazemi and David Poole. 2018. SimplE
embedding for link prediction in knowledge graphs.
In Proceedings of NeurIPs.

Xi Victoria Lin, Richard Socher, and Caiming Xiong.
2018. Multi-hop knowledge graph reasoning with
reward shaping. In Proceedings in EMNLP.

Yankai Lin, Zhiyuan Liu, Huan-Bo Luan, Maosong
Sun, Siwei Rao, and Song Liu. 2015a. Modeling
relation paths for representation learning of knowl-
edge bases. In Proceedings of EMNLP.

Yankai Lin, Zhiyuan Liu, Maosong Sun, Yang Liu, and
Xuan Zhu. 2015b. Learning entity and relation em-
beddings for knowledge graph completion. In Pro-
ceedings of AAAI.

Hanxiao Liu, Yuexin Wu, and Yiming Yang. 2017.
Analogical inference for multi-relational embed-
dings. In Proceedings of ICML.

https://arxiv.org/abs/1308.3432
https://arxiv.org/abs/1308.3432
https://arxiv.org/abs/1308.3432
https://www.aclweb.org/anthology/D13-1160
https://www.aclweb.org/anthology/D13-1160
https://www.aclweb.org/anthology/D14-1067
https://www.aclweb.org/anthology/D14-1067
https://papers.nips.cc/paper/5071-translating-embeddings-for-modeling-multi-relational-data.pdf
https://papers.nips.cc/paper/5071-translating-embeddings-for-modeling-multi-relational-data.pdf
https://openreview.net/forum?id=Syg-YfWCW
https://openreview.net/forum?id=Syg-YfWCW
https://openreview.net/forum?id=Syg-YfWCW
https://aaai.org/ocs/index.php/AAAI/AAAI18/paper/view/17366
https://aaai.org/ocs/index.php/AAAI/AAAI18/paper/view/17366
http://www.jmlr.org/papers/volume12/duchi11a/duchi11a.pdf
http://www.jmlr.org/papers/volume12/duchi11a/duchi11a.pdf
https://aaai.org/ocs/index.php/AAAI/AAAI18/paper/view/16227
https://aaai.org/ocs/index.php/AAAI/AAAI18/paper/view/16227
https://arxiv.org/abs/1905.04914
https://arxiv.org/abs/1905.04914
https://arxiv.org/abs/1905.04914
https://www.aclweb.org/anthology/D15-1038
https://www.aclweb.org/anthology/P17-2088
https://www.aclweb.org/anthology/P17-2088
https://www.aclweb.org/anthology/P17-2088
https://www.aclweb.org/anthology/P17-1162
https://www.aclweb.org/anthology/P17-1162
https://www.aclweb.org/anthology/P17-1162
https://openreview.net/pdf?id=rkE3y85ee
https://openreview.net/pdf?id=rkE3y85ee
https://www.aclweb.org/anthology/W17-2609
https://www.aclweb.org/anthology/W17-2609
https://papers.nips.cc/paper/7682-simple-embedding-for-link-prediction-in-knowledge-graphs.pdf
https://papers.nips.cc/paper/7682-simple-embedding-for-link-prediction-in-knowledge-graphs.pdf
https://www.aclweb.org/anthology/D18-1362
https://www.aclweb.org/anthology/D18-1362
https://aclweb.org/anthology/D15-1082
https://aclweb.org/anthology/D15-1082
https://aclweb.org/anthology/D15-1082
https://www.aaai.org/ocs/index.php/AAAI/AAAI15/paper/view/9571
https://www.aaai.org/ocs/index.php/AAAI/AAAI15/paper/view/9571
http://proceedings.mlr.press/v70/liu17d/liu17d.pdf
http://proceedings.mlr.press/v70/liu17d/liu17d.pdf


272

Arvind Neelakantan, Benjamin Roth, and Andrew Mc-
Callum. 2015. Compositional vector space models
for knowledge base completion. In Proceedings of
ACL.

Maximilian Nickel, Lorenzo Rosasco, and Tomaso
Poggio. 2016. Holographic embeddings of knowl-
edge graphs. In Proceedings of AAAI.

Maximilian Nickel, Volker Tresp, and Hans-Peter
Kriegel. 2011. A three-way model for collective
learning on multi-relational data. In Proceedings of
ICML.

Adam Paszke, Sam Gross, Soumith Chintala, Gre-
gory Chanan, Edward Yang, Zachary DeVito, Zem-
ing Lin, Alban Desmaison, Luca Antiga, and Adam
Lerer. 2017. Automatic differentiation in PyTorch.
In Proceedings of NIPS Autodiff Workshop.

Michael Sejr Schlichtkrull, Thomas N. Kipf, Peter
Bloem, Rianne van den Berg, Ivan Titov, and
Max Welling. 2018. Modeling relational data
with graph convolutional networks. arXiv preprint
arXiv:1703.06103.

Baoxu Shi and Tim Weninger. 2017. ProjE: Embed-
ding projection for knowledge graph completion. In
Proceedings of AAAI.

Richard Socher, Danqi Chen, Christopher D. Manning,
and Andrew Y. Ng. 2013. Reasoning with neural
tensor networks for knowledge base completion. In
Proceedings of NeurIPs.

Benjamin Steinberg. 2012. Representation Theory of
Finite Groups. Springer-Verlag New York.

Fabian M. Suchanek, Gjergji Kasneci, and Gerhard
Weikum. 2007. YAGO: A core of semantic knowl-
edge. In Proceedings of WWW.

Kristina Toutanova, Danqi Chen, Patrick Pantel, Hoi-
fung Poon, Pallavi Choudhury, and Michael Gamon.
2015. Representing text for joint embedding of text
and knowledge bases. In Proceedings of EMNLP.

Théo Trouillon, Johannes Welbl, Sebastian Riedel, Éric
Gaussier, and Guillaume Bouchard. 2016. Complex
embeddings for simple link prediction. In Proceed-
ings of ICML.

Zhen Wang, Jianwen Zhang, Jianlin Feng, and Zheng
Chen. 2014. Knowledge graph embedding by trans-
lating on hyperplanes. In Proceedings of AAAI.

Wenhan Xiong, Thien Hoang, and William Yang
Wang. 2017. DeepPath: A reinforcement learning
method for knowledge graph reasoning. In Proceed-
ings in EMNLP.

Bishan Yang, Wen-tau Yih, Xiaodong He, Jianfeng
Gao, and Li Deng. 2015. Embedding entities and
relations for learning and inference in knowledge
bases. In Proceedings of ICLR.

Penghang Yin, Jiancheng Lyu, Shuai Zhang, Stanley J.
Osher, Yingyong Qi, and Jack Xin. 2019. Under-
standing straight-through estimator in training ac-
tivation quantized neural nets. In Proceedings of
ICLR.

https://www.aclweb.org/anthology/P15-1016
https://www.aclweb.org/anthology/P15-1016
https://www.aaai.org/ocs/index.php/AAAI/AAAI16/paper/view/12484
https://www.aaai.org/ocs/index.php/AAAI/AAAI16/paper/view/12484
http://www.icml-2011.org/papers/438_icmlpaper.pdf
http://www.icml-2011.org/papers/438_icmlpaper.pdf
https://openreview.net/pdf?id=BJJsrmfCZ
https://arxiv.org/abs/1703.06103
https://arxiv.org/abs/1703.06103
https://www.aaai.org/ocs/index.php/AAAI/AAAI17/paper/view/14279
https://www.aaai.org/ocs/index.php/AAAI/AAAI17/paper/view/14279
https://papers.nips.cc/paper/5028-reasoning-with-neural-tensor-networks-for-knowledge-base-completion.pdf
https://papers.nips.cc/paper/5028-reasoning-with-neural-tensor-networks-for-knowledge-base-completion.pdf
https://www.springer.com/us/book/9781461407751
https://www.springer.com/us/book/9781461407751
https://www2007.org/papers/paper391.pdf
https://www2007.org/papers/paper391.pdf
https://www.aclweb.org/anthology/D15-1174
https://www.aclweb.org/anthology/D15-1174
http://proceedings.mlr.press/v48/trouillon16.pdf
http://proceedings.mlr.press/v48/trouillon16.pdf
https://www.aaai.org/ocs/index.php/AAAI/AAAI14/paper/view/8531
https://www.aaai.org/ocs/index.php/AAAI/AAAI14/paper/view/8531
https://www.aclweb.org/anthology/D17-1060
https://www.aclweb.org/anthology/D17-1060
https://arxiv.org/abs/1412.6575
https://arxiv.org/abs/1412.6575
https://arxiv.org/abs/1412.6575
https://openreview.net/pdf?id=Skh4jRcKQ
https://openreview.net/pdf?id=Skh4jRcKQ
https://openreview.net/pdf?id=Skh4jRcKQ

