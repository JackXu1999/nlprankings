



















































Improving Reliability of Word Similarity Evaluation by Redesigning Annotation Task and Performance Measure


Proceedings of the 1st Workshop on Evaluating Vector Space Representations for NLP, pages 106–110,
Berlin, Germany, August 12, 2016. c©2016 Association for Computational Linguistics

Improving Reliability of Word Similarity Evaluation
by Redesigning Annotation Task and Performance Measure

Oded Avraham and Yoav Goldberg
Computer Science Department

Bar-Ilan University
Ramat-Gan, Israel

{oavraham1,yoav.goldberg}@gmail.com

Abstract

We suggest a new method for creating and
using gold-standard datasets for word sim-
ilarity evaluation. Our goal is to improve
the reliability of the evaluation, and we do
this by redesigning the annotation task to
achieve higher inter-rater agreement, and
by defining a performance measure which
takes the reliability of each annotation de-
cision in the dataset into account.

1 Introduction

Computing similarity between words is a fun-
damental challenge in natural language process-
ing. Given a pair of words, a similarity
model sim(w1, w2) should assign a score that re-
flects the level of similarity between them, e.g.:
sim(singer,musician) = 0.83. While many
methods for computing sim exist (e.g., taking
the cosine between vector embeddings derived by
word2vec (Mikolov et al., 2013)), there are cur-
rently no reliable measures of quality for such
models. In the past few years, word similarity
models show a consistent improvement in per-
formance when evaluated using the conventional
evaluation methods and datasets. But are these
evaluation measures really reliable indicators of
the model quality? Lately, Hill et al (2015)
claimed that the answer is no. They identified sev-
eral problems with the existing datasets, and cre-
ated a new dataset – SimLex-999 – which does not
suffer from them. However, we argue that there
are inherent problems with conventional datasets
and the method of using them that were not ad-
dressed in SimLex-999. We list these problems,
and suggest a new and more reliable way of evalu-
ating similarity models. We then report initial ex-
periments on a dataset of Hebrew nouns similarity
that we created according to our proposed method.

2 Existing Methods and Datasets for
Word Similarity Evaluation

Over the years, several datasets have been used
for evaluating word similarity models. Popular
ones include RG (Rubenstein and Goodenough,
1965), WordSim-353 (Finkelstein et al., 2001),
WS-Sim (Agirre et al., 2009) and MEN (Bruni et
al., 2012). Each of these datasets is a collection of
word pairs together with their similarity scores as
assigned by human annotators. A model is eval-
uated by assigning a similarity score to each pair,
sorting the pairs according to their similarity, and
calculating the correlation (Spearman’s ρ) with the
human ranking. Hill et al (2015) had made a com-
prehensive review of these datasets, and pointed
out some common shortcomings they have. The
main shortcoming discussed by Hill et al is the
handling of associated but dissimilar words, e.g.
(singer, microphone): in datasets which contain
such pairs (WordSim and MEN) they are usually
ranked high, sometimes even above pairs of simi-
lar words. This causes an undesirable penalization
of models that apply the correct behavior (i.e., al-
ways prefer similar pairs over associated dissim-
ilar ones). Other datasets (WS-Sim and RG) do
not contain pairs of associated words pairs at all.
Their absence makes these datasets unable to eval-
uate the models’ ability to distinct between as-
sociated and similar words. Another shortcom-
ing mentioned by Hill et al (2015) is low inter-
rater agreement over the human assigned similar-
ity scores, which might have been caused by un-
clear instructions for the annotation task. As a re-
sult, state-of-the-art models reach the agreement
ceiling for most of the datasets, while a simple
manual evaluation will suggest that these models
are still inferior to humans. In order to solve these
shortcomings, Hill et al (2015) developed a new
dataset – Simlex-999 – in which the instructions

106



presented to the annotators emphasized the differ-
ence between the terms associated and similar, and
managed to solve the discussed problems.

While SimLex-999 was definitely a step in the
right direction, we argue that there are more fun-
damental problems which all conventional meth-
ods, including SimLex-999, suffer from. In what
follows, we describe each one of these problems.

3 Problems with the Existing Datasets

Before diving in, we define some terms we are
about to use. Hill et al (2015) used the terms
similar and associated but dissimilar, which they
didn’t formally connected to fine-grained seman-
tic relations. However, by inspecting the average
score per relation, they found a clear preference
for hyponym-hypernym pairs (e.g. the scores of
the pairs (cat, pet) and (winter, season) are much
higher than those of the cohyponyms pair (cat,
dog) and the antonyms pair (winter, summer)). Re-
ferring hyponym-hypernym pairs as similar may
imply that a good similarity model should prefer
hyponym-hypernym pairs over pairs of other re-
lations, which is not always true since the desir-
able behavior is task-dependent. Therefore, we
will use a different terminology: we use the term
preferred-relation to denote the relation which the
model should prefer, and unpreferred-relation to
denote any other relation.

The first problem is the use of rating scales.
Since the level of similarity is a relative measure,
we would expect the annotation task to ask the an-
notator for a ranking. But in most of the exist-
ing datasets, the annotators were asked to assign
a numeric score to each pair (e.g. 0-7 in SimLex-
999), and a ranking was derived based on these
scores. This choice is probably due to the fact
that a ranking of hundreds of pairs is an exhaust-
ing task for humans. However, using rating scales
makes the annotations vulnerable to a variety of
biases (Friedman and Amoo, 1999). Bruni et al
(2012) addressed this problem by asking the an-
notators to rank each pair in comparison to 50 ran-
domly selected pairs. This is a reasonable com-
promise, but it still results in a daunting annotation
task, and makes the quality of the dataset depend
on a random selection of comparisons.

The second problem is rating different rela-
tions on the same scale. In Simlex-999, the an-
notators were instructed to assign low scores to
unpreferred-relation pairs, but the decision of how

low was still up to the annotator. While some of
these pairs were assigned very low scores (e.g.
sim(smart, dumb) = 0.55), others got significantly
higher ones (e.g. sim(winter, summer) = 2.38). A
difference of 1.8 similarity scores should not be
underestimated – in other cases it testifies to a true
superiority of one pair over another, e.g.: sim(cab,
taxi) = 9.2, sim(cab, car) = 7.42. The situation
where an arbitrary decision of the annotators af-
fects the model score, impairs the reliability of
the evaluation: a model shouldn’t be punished for
preferring (smart, dumb) over (winter, summer) or
vice versa, since this comparison is just ill-defined.

The third problem is rating different target-
words on the same scale. Even within preferred-
relation pairs, there are ill-defined comparisons,
e.g.: (cat, pet) vs. (winter, season). It’s quite un-
natural to compare between pairs that have differ-
ent target-words, in contrast to pairs which share
the target word, like (cat, pet) vs. cat, animal).
Penalizing a model for preferring (cat, pet) over
(winter, season) or vice versa impairs the evalua-
tion reliability.

The fourth problem is that the evaluation mea-
sure does not consider annotation decisions reli-
ability. The conventional method measures the
model score by calculating Spearman correlation
between the model ranking and the annotators av-
erage ranking. This method ignores an important
information source: the reliability of each anno-
tation decision, which can be determined by the
agreement of the annotators on this decision. For
example, consider a dataset containing the pairs
(singer, person), (singer, performer) and (singer,
musician). Now let’s assume that in the average
annotator ranking, (singer, performer) is ranked
above (singer, person) after 90% of the annota-
tors assigned it with a higher score, and (singer,
musician) is ranked above (singer, performer) af-
ter 51% percent of the annotators assigned it with
a higher score. Considering this, we would like
the evaluation measure to severely punish a model
which prefers (singer, person) over (singer, per-
former), but be almost indifferent to the model’s
decision over (singer, performer) vs. (singer, mu-
sician) because it seems that even humans cannot
reliably tell which one is more similar. In the con-
ventional datasets, no information on reliability of
ratings is supplied except for the overall agree-
ment, and each average rank has the same weight
in the evaluation measure. The problem of relia-

107



bility is addressed by Luong et al (2013) which in-
cluded many rare words in their dataset, and thus
allowed an annotator to indicate “Don’t know” for
a pair if they does not know one of the words. The
problem with applying this approach as a more
general reliability indicator is that the annotator
confidence level is subjective and not absolute.

4 Proposed Improvements

We suggest the following four improvements for
handling these problems.
(1) The annotation task will be an explicit ranking
task. Similarly to Bruni et al (2012), each pair will
be directly compared with a subset of the other
pairs. Unlike Bruni et al, each pair will be com-
pared with only a few carefully selected pairs, fol-
lowing the principles in (2) and (3).
(2) A dataset will be focused on a single preferred-
relation type (we can create other datasets for tasks
in which the preferred-relation is different), and
only preferred-relation pairs will be presented to
the annotators. We suggest to spare the annotators
the effort of considering the type of the similarity
between words, in order to let them concentrate
on the strength of the similarity. Word pairs fol-
lowing unpreferred-relations will not be included
in the annotation task but will still be a part of
the dataset – we always add them to the bottom
of the ranking. For example, an annotator will be
asked to rate (cab, car) and (cab, taxi), but not
(cab, driver) – which will be ranked last since it’s
an unpreferred-relation pair.
(3) Any pair will be compared only with pairs
sharing the same target word. We suggest to make
the pairs ranking more reliable by splitting it into
multiple target-based rankings, e.g.: (cat, pet) will
be compared with (cat, animal), but not with (win-
ter, season) which belongs to another ranking.
(4) The dataset will include a reliability indicator
for each annotators decision, based on the agree-
ment between annotators. The reliability indicator
will be used in the evaluation measure: a model
will be penalized more for making wrong predic-
tions on reliable rankings than on unreliable ones.

4.1 A Concrete Dataset

In this section we describe the structure of a
dataset which applies the above improvements.
First, we need to define the preferred-relation (to
apply improvement (2)). In what follows we use
the hyponym-hypernym relation. The dataset is

wt w1 w2 R>(w1, w2; wt)
P singer person musician 0.1
P singer artist person 0.8
P singer musician performer 0.6
D singer musician song 1.0
R singer musician laptop 1.0

Table 1: Binary Comparisons for the target word singer. P:
positive pair; D: distractor pair; R: random pair.

based on target words. For each target word we
create a group of complement words, which we re-
fer to as the target-group. Each complement word
belongs to one of three categories: positives (re-
lated to the target, and the type of the relation is
the preferred one), distractors (related to the tar-
get, but the type of the relation is not the preferred
one), and randoms (not related to the target at all).
For example, for the target word singer, the tar-
get group may include musician, performer, per-
son and artist as positives, dancer and song as
distractors, and laptop as random. For each tar-
get word, the human annotators will be asked to
rank the positive complements by their similarity
to the target word (improvements (1) & (3)). For
example, a possible ranking may be: musician >
performer > artist > person. The annotators re-
sponses allow us to create the actual dataset, which
consists of a collection of binary comparisons. A
binary comparison is a value R>(w1, w2;wt) in-
dicating how likely it is to rank the pair (wt, w1)
higher than (wt, w2), where wt is a target word
and w1, w2 are two complement words. By defi-
nition, R>(w1, w2;wt) = 1 - R>(w2, w1;wt). For
each target-group, the dataset will contain a binary
comparison for any possible combination of two
positive complements wp1 and wp2, as well as for
positive complementswp and negative ones (either
distractor or random) wn. When comparing pos-
itive complements, R>(w1, w2;wt) is the portion
of annotators who ranked (wt, w1) over (wt, w2).
When comparing to negative complements, the
value of R>(wp, wn;wt) is 1. This reflects the
intuition that a good model should always rank
preferred-relation pairs above other pairs. Notice
that R>(w1, w2;wt) is the reliability indicator for
each of the dataset key answers, which will be
used to apply improvement (4). For some example
comparisons, see Table 1.

4.2 Scoring Function

Given a similarity function between words
sim(x, y) and a triplet (wt, w1, w2) let δ = 1 if

108



sim(wt, w1) > sim(wt, w2) and δ = −1 oth-
erwise. The score s(wt, w1, w2) of the triplet is
then: s(wt, w1, w2) = δ(2R>(w1, w2;wt) − 1).
This score ranges between −1 and 1, is positive
if the model ranking agrees with more than 50%
of the annotators, and is 1 if it agrees with all of
them. The score of the entire dataset C is then:∑

wt,w1,w2∈C max(s(wt, w1, w2), 0)∑
wt,w1,w2∈C |s(wt, w1, w2)|

The model score will be 0 if it makes the wrong
decision (i.e. assign a higher score to w1 while
the majority of the annotators ranked w2 higher,
or vice versa) in every comparison. If it always
makes the right decision, its score will be 1. No-
tice that the size of the majority also plays a role.
When the model takes the wrong decision in a
comparison, nothing is being added to the numer-
ator. When it takes the right decision, the numer-
ator increase will be larger as reliable as the key
answer is, and so is the general score (the denom-
inator does not depend on the model decisions).

It worth mentioning that a score can also be
computed over a subset of C, as comparisons of
specific type (positive-positive, positive-distractor,
positive-random). This allows the user of the
dataset to make a finer-grained analysis of the
evaluation results: it can get the quality of the
model in specific tasks (preferring similar words
over less similar, over words from unpreferred-
relation, and over random words) rather than just
the general quality.

5 Experiments

We created two datasets following the proposal
discussed above: one preferring the hyponym-
hypernym relation, and the other the cohyponym
relation. The datasets contain Hebrew nouns, but
such datasets can be created for different lan-
guages and parts of speech – providing that the
language has basic lexical resources. For our
dataset, we used a dictionary, an encyclopedia
and a thesaurus to create the hyponym-hypernym
pairs, and databases of word association norms
(Rubinsten et al., 2005) and categories norms
(Henik and Kaplan, 1988) to create the distractors
pairs and the cohyponyms pairs, respectively. The
hyponym-hypernym dataset is based on 75 target-
groups, each contains 3-6 positive pairs, 2 distrac-
tor pairs and one random pair, which sums up to
476 pairs. The cohyponym dataset is based on 30

target-groups, each contains 4 positive pairs, 1-2
distractor pairs and one random pair, which sums
up to 207 pairs. We used the target groups to cre-
ate 4 questionnaires: 3 for the hyponym-hypernym
relation (each contains 25 target-groups), and one
for the cohyponyms relation. We asked human an-
notators to order the positive pairs of each target-
group by the similarity between their words. In
order to prevent the annotators from confusing
between the different aspects of similarity, each
annotator was requested to answer only one of
the questionnaires, and the instructions for each
questionnaire included an example question which
demonstrates what the term “similarity” means in
that questionnaire (as shown in Figure 1).

Each target-group was ranked by 18-20 annota-
tors. We measured the average pairwise inter-rater
agreement, and as done in (Hill et al., 2015) – we
excluded any annotator which its agreement with
the other was more than one standard deviation be-
low that average (17.8 percent of the annotators
were excluded). The agreement was quite high
(0.646 and 0.659 for hyponym-hypernym and co-
hyponyms target-groups, respectively), especially
considering that in contrast to other datasets –
our annotation task did not include pairs that are
“trivial” to rank (e.g. random pairs). Finally,
we used the remaining annotators responses to
create the binary comparisons collection. The
hyponym-hypernym dataset includes 1063 com-
parisons, while the cohyponym dataset includes
538 comparisons. To measure the gap between a
human and a model performance on the dataset,
we trained a word2vec (Mikolov et al., 2013)
model 1 on the Hebrew Wikipedia. We used two
methods of measuring: the first is the conventional
way (Spearman correlation), and the second is the
scoring method we described in the previous sec-
tion, which we used to measure general and per-
comparison-type scores. The results are presented
in Table 2.

6 Conclusions

We presented a new method for creating and us-
ing datasets for word similarity, which improves
evaluation reliability by redesigning the annota-
tion task and the performance measure. We cre-
ated two datasets for Hebrew and showed a high
inter-rater agreement. Finally, we showed that the

1We used code.google.com/p/word2vec implementation,
with window size of 2 and dimensionality of 200.

109



Figure 1: The example rankings we supplied to the annotators as a part of the questionnaires instructions
(translated from Hebrew). Example (A) appeared in the hyponym-hypernym questionnaires, while (B)
appeared in the cohyponyms questionnaire.

Hyp. Cohyp.
Inter-rater agreement 0.646 0.659
w2v correlation 0.451 0.587
w2v score (all) 0.718 0.864
w2v score (positive) 0.763 0.822
w2v score (distractor) 0.625 0.833
w2v score (random) 0.864 0.967

Table 2: The hyponym-hypernym dataset agreement
(0.646) compares favorably with the agreement for nouns
pairs reported by Hill et al (2015) (0.612), and it is much
higher than the correlation score of the word2vec model.
Notice that useful insights can be gained from the per-
comparison-type analysis, like the model’s difficulty to dis-
tinguish hyponym-hypernym pairs from other relations.

dataset can be used for a finer-grained analysis of
the model quality. A future work can be applying
this method to other languages and relation types.

Acknowledgements

The work was supported by the Israeli Science
Foundation (grant number 1555/15). We thank
Omer Levy for useful discussions.

References
Eneko Agirre, Enrique Alfonseca, Keith Hall, Jana

Kravalova, Marius Paşca, and Aitor Soroa. 2009.
A study on similarity and relatedness using distribu-
tional and wordnet-based approaches. In Proceed-
ings of Human Language Technologies: The 2009
Annual Conference of the North American Chap-
ter of the Association for Computational Linguistics,
pages 19–27. Association for Computational Lin-
guistics.

Elia Bruni, Gemma Boleda, Marco Baroni, and Nam-
Khanh Tran. 2012. Distributional semantics in tech-
nicolor. In Proceedings of the 50th Annual Meet-
ing of the Association for Computational Linguis-
tics: Long Papers-Volume 1, pages 136–145. Asso-
ciation for Computational Linguistics.

Lev Finkelstein, Evgeniy Gabrilovich, Yossi Matias,

Ehud Rivlin, Zach Solan, Gadi Wolfman, and Ey-
tan Ruppin. 2001. Placing search in context: The
concept revisited. In Proceedings of the 10th inter-
national conference on World Wide Web, pages 406–
414. ACM.

Hershey H Friedman and Taiwo Amoo. 1999. Rating
the rating scales. Friedman, Hershey H. and Amoo,
Taiwo (1999).” Rating the Rating Scales.” Journal of
Marketing Management, Winter, pages 114–123.

Avishai Henik and Limor Kaplan. 1988. Category
content: Findings for categories in hebrew and a
comparison to findings in the us. Psychologia: Is-
rael Journal of Psychology.

Felix Hill, Roi Reichart, and Anna Korhonen. 2015.
Simlex-999: Evaluating semantic models with (gen-
uine) similarity estimation. Computational Linguis-
tics.

Thang Luong, Richard Socher, and Christopher D
Manning. 2013. Better word representations
with recursive neural networks for morphology. In
CoNLL, pages 104–113. Citeseer.

Tomas Mikolov, Kai Chen, Greg Corrado, and Jef-
frey Dean. 2013. Efficient estimation of word
representations in vector space. arXiv preprint
arXiv:1301.3781.

Herbert Rubenstein and John B Goodenough. 1965.
Contextual correlates of synonymy. Communica-
tions of the ACM, 8(10):627–633.

O Rubinsten, D Anaki, A Henik, S Drori, and Y Faran.
2005. Free association norms in the hebrew lan-
guage. Word norms in Hebrew, pages 17–34.

110


