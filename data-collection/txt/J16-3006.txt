




































COI00257.dvi


Squib

Expressive Power of Abstract Meaning
Representations

Johan Bos∗
University of Groningen

The syntax of abstract meaning representations (AMRs) can be defined recursively, and a
systematic translation to first-order logic (FOL) can be specified, including a proper treatment of
negation. AMRs without recurrent variables are in the decidable two-variable fragment of FOL.
The current definition of AMRs has limited expressive power for universal quantification (up to
one universal quantifier per sentence). A simple extension of the AMR syntax and translation
to FOL provides the means to represent projection and scope phenomena.

1. Introduction

There is a new kid on the semantics block: AMR. Abstract meaning representation,
based on the PENMAN notation and introduced in Langkilde and Knight (1998), has
suddenly gained in popularity in computational linguistics (Artzi, Lee, and Zettlemoyer
2015; Chen 2015; Peng, Song, and Gildea 2015; Pust et al. 2015; Sawai, Shindo, and
Matsumoto 2015; Wang, Xue, and Pradhan 2015; Werling, Angeli, and Manning 2015).
There are several reasons for this trend. First of all, the simple tree structure of AMRs,
showing the connections between concepts and events, make them easy to read. Second,
because AMRs can simply be expressed as directed acyclic graphs, machine-generated
output can be evaluated in a standard way by computing precision and recall on
triples of gold-standard AMRs (Cai and Knight 2013). And, third, AMRs are arguably
easier to produce manually than traditional formal meaning representations, and, as
a result, there are now corpora with gold-standard AMRs available (Banarescu et al.
2015).

AMRs do not resemble classical meaning representations and seem substantially
different from well-understood formalisms such as discourse representation structures
(DRSs) (Kamp and Reyle 1993) or minimal recursion structures (MRSs) (Copestake
et al. 2005). AMR has an unorthodox way of expressing negation, no explicit means
to deal with universal quantification, and no model theory. This raises the question:
What do they actually mean? This is an important question, because the ultimate goal
of producing meaning representations is to be able to use them for inference tasks and

∗ University of Groningen, the Netherlands. E-mail: johan.bos@rug.nl.

Submission received: 9 October 2015; accepted for publication: 9 December 2015.

doi:10.1162/COLI a 00257

© 2016 Association for Computational Linguistics



Computational Linguistics Volume 42, Number 3

build upon automated deduction methods (Blackburn and Bos 2005). Hence, the goal
of this squib is to find answers to the following questions:

1. Are AMRs any different from traditional meaning representations?
2. Can we provide a model-theoretic semantics for AMRs?
3. Is there a systematic translation to first-order logic?
4. Is universal quantification expressible in AMRs?
5. Does the AMR language need to be extended?

To answer these questions, we will formulate a systematic translation function from
AMR into classical logic. First, we will consider the simplest of AMRs. Then, we will
add negation and investigate the role of recurrent variables. Finally, an extension to
AMR to cover scope phenomena will be proposed. Throughout, some basic knowledge
of first-order logic (FOL) and the λ-calculus is assumed.

2. Basic AMRs

In this section we will take a closer look at AMRs without polarity and recurrent
variables. We will provide a definition of its syntax, discuss viewing AMRs as triples, its
unique ability to display information structure by inversing roles, and finally provide a
model-theoretic definition. Figure 1 shows example AMRs represented as trees (tense is
ignored in the AMR analyses throughout this article).

Every AMR has a unique root, displayed as the top node in the tree. What we further
see here are variables (e, x, y, etc.), events and concepts (moan-01, child, etc.), constants
(“Ms Ribble”), and roles (ARG0, etc.). The slash indicates an instance: x/child means
that x is an instance of the concept child. The colon is a punctuation symbol to display
roles. The brackets indicate which role belongs to which concept, and, as line breaks
are optional, AMRs can also be given in linear format, for example, (e/read-01 :ARG0
(x/girl) :ARG1 (y/book)) for a girl read a book.

A remarkable property of AMRs is the ability to invert roles. Role inversion swaps
the arguments of a relation: R(x,y) ≡ R-of(y,x). Role inversion will lead (for polarity-free
AMRs) to AMRs that are semantically equivalent, but are structured differently. For the
given example we can apply role inversion in two ways, as Figure 2 shows.

The first AMR in Figure 2 puts the focus on girl, paraphrased as a girl read a book.
In the second AMR we have placed book in the foreground, corresponding to a book that
was read by a girl. Role inversion has its limitations: we cannot “pull out” both book and
girl, because we would be left with an ill-formed AMR equipped with two roots.

Although AMRs are usually visualized as tree structures, they can also be viewed as
directed acyclic graphs with a unique root (with vertices denoting variables and edges
denoting roles and instances). As a consequence, AMRs can be transformed into sets of
triples, which is convenient for evaluation purposes (Cai and Knight 2013). For semantic

(e / moan-01 (e / give-01
:ARG0 (x / child)) :ARG0 (x / person :named "Ms Ribble")

:ARG2 (y / child)
:ARG1 (z / envelope))

Figure 1
AMRs for The children moaned (left) and Ms Ribble handed out envelopes to the children (right).

528



Johan Bos Expressive Power of Abstract Meaning Representations

(x / girl (y / book
:ARG0-of (e / read-01 :ARG1-of (e / read-01

:ARG1 (y / book))) :ARG0 (x / girl)

Figure 2
AMR’s feature to display information structure by role inversion.

interpretation, the tree structure is handier, because for operators like negation we need
to be able to assign scope.

In order to give a semantic, model-theoretic interpretation, we could do this in a
fairly straightforward way by converting concepts and events to one-place predicates,
the roles to two-place predicates, and by existentially quantifying over all variables
introduced by concepts and events. But this would not allow us to include scopal
operators, such as negation, quantification, and projection in a systematic way.

What we will do instead is provide a formal definition of the syntax of AMRs and
then define a recursive translation function from AMR to FOL. This function bears
strong similarities with the conversion from AMR to λ-calculus presented in Artzi, Lee,
and Zettlemoyer (2015). We will use the following notational conventions: Ai to denote
AMRs, x for variables, c for constants, P for properties, and R for roles.

Definition 1 (Syntax of Basic AMRs)
A ::= c | (x/P) | (x/P :R1A1 . . . :RnAn)

This definition says that constants, instance assignments, and instance assignments
decorated with “out-going” roles are all AMRs. This is perhaps slightly counter-
intuitive, because semantic objects of different types are placed in the same equation.
The translation function that we will define next will clarify this issue, because it will
translate all AMR-constructs into something of a propositional type. The best way to
conceive this is by viewing an AMR c as the proposition “there exists an entity denoted
by the constant c” and an AMR (x/P) as “there exists an x with property P,” and so on.

To deal with correct assignment of scope (relevant when we introduce polarity in
AMRs), we delay the translation of roles by converting them first into λ-expressions
abstracting over role players. For instance, if the already-translated x is connected to the
not-yet-translated AMR A via a role R, we get the expression λy.R(x,y). The resulting
recursive translation function maps an AMR paired with a λ-expression for roles to an
FOL formula (φ denotes a λ-expression for roles):

Definition 2 (Semantics of Basic AMRs)
‖c,φ‖ = φ(c)
‖(x/P),φ‖ = ∃x(P(x)∧φ(x))
‖(x/P :R1A1 . . . :RnAn),φ‖ = ∃x(P(x) ∧ ‖A1,λy.R1(x,y)‖ ∧ . . .∧ ‖An,λy.Rn(x,y)‖ ∧ φ(x))

When translating a concept that is related to other concepts, we do not know what
semantic material these concepts will introduce, to which we can bind the roles that
connect them. The translation function deals with this by postponing this decision with
the help of λ-bound formulas representing roles. However, when we start translating a
fresh AMR, we start with the root node. The root is not connected to other concepts by
out-going roles, so we need to give it a “dummy” formula: λx.�. Here � stands for a

529



Computational Linguistics Volume 42, Number 3

formula that is always true (so for any formula φ, (φ ∧ �) is logically equivalent to φ).
Figure 3 shows an example derivation.

The resulting structure is a closed formula (all its variables are bound), since the
translation ensures that no free occurrences of variables can appear. Interestingly, basic
AMRs are equivalent to the controlled DRT-fragment introduced by Bos (2010). As the
latter are in the two-variable fragment of FOL, so are basic AMRs. Recall that first-
order logic is undecidable. The two-variable fragment, however, is a decidable first-
order language where formulas have maximally two differently named variables, no
function symbols, but possibly do have equality. It has the finite model property, which
means that if a formula of this fragment is satisfiable, it is satisfiable in a finite model
(Mortimer 1975).

3. AMRs with Polarity

Negation is expressed in AMRs with a polarity relation. The relation is between the
concept that is negated and the constant “–”. Needless to say this is a special kind of
relation: It cannot be inverted, and it needs a distinctive treatment during semantic
interpretation, because it is propositions that are negated, not concepts. One could see
the polarity relation as a flag, indicating that an AMR is negated.

In order to accommodate polarity in AMR, we first need to extend its syntax,
and then add a clause in the translation function. This is done in the following two
definitions (from here on we abbreviate :R1A1 . . . :RnAn as :RiAi for convenience):

Definition 3 (Syntax of AMRs with Polarity)
A ::= c | (x/P) | (x/P :RiAi) | (x/P :RiAi :polarity–)

Definition 4 (Semantics of AMRs with Polarity)
‖c,φ‖ = φ(c)
‖(x/P),φ‖ = ∃x(P(x)∧φ(x))
‖(x/P :RiAi),φ‖ = ∃x(P(x)∧ ‖Ai,λy.Ri(x,y)‖ ∧φ(x))
‖(x/P :RiAi :polarity–),φ‖ = ¬∃x(P(x)∧ ‖Ai,λy.Ri(x,y)‖ ∧φ(x))

This translation function maps the polar AMR given in Figure 4 to the follow-
ing formula: ¬∃e(giggle-01(e)∧∃x(boy(x)∧ ARG0(e,x))). As can be seen here, negation
outscopes all other existential quantifiers because the polarity is assigned to the root
concept of the AMR. If we assign the negative polarity to x instead, the AMR would
be translated as ∃e(giggle-01(e)∧¬∃x(boy(x)∧ARG0(e,x))). This formula could be true
in a situation where there was someone giggling, but not a boy: It was not a boy who
was giggling. As we observed in the previous section, promoting concepts by inversing

‖(e / shout-01 :ARG0 (x / teacher)), λu.�‖ = [2.c]
∃e(shout-01(e)∧‖(x/teacher), λy.ARG0(e,y)‖∧λu.�(e)) = [2.b]

∃e(shout-01(e)∧ ∃x(teacher(x)∧ λy.ARG0(e,y)(x))∧λu.�(e)) = [β-conv]
∃e(shout-01(e)∧∃x(teacher(x)∧ ARG0(e,x))∧�) = [�-elim]

∃e(shout-01(e)∧∃x(teacher(x)∧ ARG0(e,x)))
Figure 3
Derivation for the teacher shouted.

530



Johan Bos Expressive Power of Abstract Meaning Representations

(e / giggle-01 (x / language
: polarity - :domain-of (a / appropriate
: ARG0 (x / boy)) : polarity - ))

Figure 4
AMRs for the boy didn’t giggle, and the language was inappropriate, expressing negation.

roles has no impact on the meaning of basic AMRs. However, pulling out concepts has
potential meaning-changing consequences for AMRs with polarity.

4. AMRs with Recurrent Variables and Projection Phenomena

Recurrent variables in AMRs serve to cope with co-reference phenomena such as bound
pronouns and control constructions. Two examples are shown in Figure 5.

The translation provided in the previous section yields unwanted results: In both
cases free variables appear, whereas they ought to be bound by the existential quantifier
introduced by Mr Krupp and George. This is caused by the scope of the quantifiers,
which are restricted to the branch in the AMR tree in which they are introduced. Hence,
if the recurrent variable appears on a sister branch, it cannot be bound by its quantifier.
To deal with this problem, we propose a “projection mechanism” that gives wide scope
to linguistic phenomena that require scope.

Projection phenomena, such as proper names, appositive expressions, definite de-
scriptions, and possessive constructions, are known to project out of negation and take
wide scope (Van der Sandt 1992; Kamp and Reyle 1993; Potts 2005). Projective material
needs to be distinguished from meaning that is introduced in situ. We therefore extend
the syntax of AMR with a new construction: (x\P), that signals that instance x of concept
P belongs to the class of projection phenomena.

Definition 5 (AMR with Polarity and Projection)
A ::= c | x | (x/P) | (x/P :RiAi) | (x/P :RiAi :polarity–)

| (x\P) | (x\P :RiAi) | (x\P :RiAi :polarity–)

We note in passing that we have now officially left the two-variable fragment, because
it is possible to construct an AMR that requires three differently named variables.
Although we are still working in a fragment of first-order logic, it is unclear whether
this fragment has any interesting complexity properties.

We split the semantic interpretation procedure in two parts: a translation function
for assertive semantics ‖.,.‖↓ and one for projective semantics ‖.‖↑. The projective se-
mantics builds a function that is then applied to the result of the assertive semantics:

Definition 6 (Semantics of AMRs with Polarity and Projection)
‖A‖ = ‖A‖↑(‖A,λx.�‖↓)

(e / dry-01 (w / want-01
:ARG0 (x / person :ARG0 (g / person :named "George")

:named "Mr Krupp") :ARG1 (p / play-01
:ARG1 x) : ARG0 g))

Figure 5
AMRs with recurrent variables, Mr Krupp dried himself (left) and George wanted to play (right).

531



Computational Linguistics Volume 42, Number 3

The assertive semantics is essentially the same as given in Definition 3, but now it
includes the new constructs for projection phenomena. As can be seen from Definition 7,
all concepts that need to be projected are ignored in the translation function for the
assertive semantics of an AMR:

Definition 7 (Assertive Semantics of AMRs)
‖c,φ‖↓ = φ(c)
‖x,φ‖↓ = φ(x)
‖(x/P),φ‖↓ = ∃x(P(x)∧φ(x))
‖(x/P :RiAi),φ‖↓ = ∃x(P(x) ∧ ‖Ai,λy.Ri(x,y)‖↓ ∧φ(x))
‖(x/P :R1A1 :polarity–),φ‖↓ = ¬∃x(P(x)∧ ‖Ai,λy.Ri(x,y)‖↓∧φ(x))
‖(x\P),φ‖↓ = φ(x)
‖(x\P :RiAi),φ‖↓ = φ(x)
‖(x\P :RiAi :polarity–),φ‖↓ = φ(x)

The definition of the projective semantics is presented as a function from AMRs to
λ-expressions of type 〈t, t〉. It ignores all assertive material in an AMR, but when it is
given a projective concept, it calls upon the assertive translation function.

Definition 8 (Projective Semantics of AMRs)
‖c‖↑ = λp.p
‖x‖↑ = λp.p
‖(x/P)‖↑ = λp.p
‖(x/P :RiAi)‖↑ = λp.‖A1‖↑(‖A2‖↑( . . .‖An‖↑(p)))
‖(x/P :RiAi :polarity–)‖↑ = λp.‖A1‖↑(‖A2‖↑( . . .‖An‖↑(p)))
‖(x\P)‖↑ = λp.‖(x/P),λx.p‖↓
‖(x\P :RiAi)‖↑ = λp.‖(x/P :RiAi),λx.p‖↓
‖(x\P :RiAi :polarity–)‖↑ = λp.‖(x/P :RiAi :polarity–),λx.p‖↓

We will now illustrate the translation by giving it the example AMR for Mr Krupp
dried himself. We first need to compute the assertive semantics with the help of ‖.,.‖↓,
as shown in Figure 6. We then compute the projective material with the aid of ‖.‖↑,
as Figure 7 illustrates. Finally, we put together the projective and assertive semantics, a
process that binds the free variables introduced by the assertive semantics by quantifiers
generated by the projective semantics (Figure 8).

Because this technique works well for projection phenomena, a natural question to
ask is how universal quantifiers would fit in this picture. In the next section, therefore,
we will investigate the possibilities of universal quantification in AMRs.

‖A,λu.�‖↓=‖(e/dry-01 :ARG0 (x\person :named ”Mr Krupp”) :ARG1 x), λu.�‖↓ = [7.4]
∃e(dry-01(e)∧‖(x\person :named ”Mr Krupp”),λy.ARG0(e,y)‖↓∧‖x,λy.ARG1(e,y)‖↓λu.�) = [7.6]

∃e(dry-01(e)∧λy.ARG0(e,y)(x)∧‖x.λy.ARG1(e,y)‖↓∧λ.u.�) = [7.2]
∃e(dry-01(e)∧λy.ARG0(e,y)(x)∧λy.ARG1(e,y)(x)∧λu.�) = [β-conv]

∃e(dry-01(e)∧ARG0(e,x)∧ARG1(e,x)∧�) = [�-elim]
∃e(dry-01(e)∧ARG0(e,x)∧ARG1(e,x))

Figure 6
Derivation of the assertive semantics for Mr Krupp dried himself.

532



Johan Bos Expressive Power of Abstract Meaning Representations

‖A‖↑=‖(e/dry-01 :ARG0 (x\person :named ”Mr Krupp”) :ARG1 x)‖↑ = [8.4]
λp.‖(x\person :named ”Mr Krupp”)‖↑(‖x‖↑(p)) = [8.6]

λp.λp’.‖(x/person :named ”Mr Krupp”), λx.p’‖↓(‖x‖↑(p)) = [8.2]
λp.λp’.‖(x/person :named ”Mr Krupp”), λx.p’‖↓(λp”.p”(p)) = [7.4]

λp.λp’.∃x(person(x)∧‖”Mr Krupp”,λy.named(x,y)‖↓∧λx.p’(x))(λp”.p”(p)) = [β-conv]
λp.λp’.∃x(person(x)∧‖”Mr Krupp”,λy.named(x,y)‖↓∧λx.p’(x))(p) = [β-conv]

λp.λp’.∃x(person(x)∧λy.named(x,y)(”Mr Krupp”)∧p’)(p) = [β-conv]
λp.∃x(person(x)∧named(x,”Mr Krupp”)∧p)

Figure 7
Derivation of the projective semantics for Mr Krupp dried himself.

5. Universal Quantification in AMRs

According to Banarescu et al. (2015), AMRs cannot express universal quantification.
This is not exactly true. The technique of pulling out concepts in combination with
multiple use of the polarity flag enables one to correctly represent universally quantified
sentences such as every boy whistled. This can be seen on the left in Figure 9. The
basic AMR shown here translates to ¬∃x(boy(x)∧¬∃e(whistle-01(e)∧ARG0(e,x))), and
this is logically equivalent to ∀x(boy(x)→ ∃e(whistle-01(e)∧ARG0(e,x))), resembling the
classic FOL formula for every boy whistled.

It is important to point out the limitations given to us by the one-rooted nature of
AMRs: Not more than one universal quantifier can be handled in this way. Therefore, it
is impossible to provide a proper AMR representing a sentence with a transitive verb and
two universally quantified noun phrases, as in every dog chased every cat (unless logical
conjunction is applied in the root of the AMR). A general solution to this limitation
is to extend the AMR language to cope with universal quantification. A proposal
can be seen on the right-hand side in Figure 9. The quantification relation flags the
variable to which it connects so that it needs a universal quantifier. Definition 7 can
then be extended with clauses like ‖(x/P :quant ∀),φ‖↓ = ∀x(P(x)→ φ(x)). In this way,
quantifier scope ambiguities are underspecified and different readings can be obtained
by changing the order of applications in Clauses 4 and 5 of Definition 8.

6. Conclusion

Are AMRs any different from traditional meaning representations? Yes. What AMRs
have in common with DRSs and MRSs is that logical conjunction is implicit (apart from
those cases where it is triggered by coordination phenomena). The expressive power of
AMRs is also lower (Bender et al. 2015). Scope is not explicitly present in AMRs, and
therefore the way negation is represented in AMRs is substantially different from the
ways this is done in DRSs or MRSs. Unlike DRSs or MRSs, AMRs have the capacity to
display some aspects of information structure (the process of role inversion can change
the scope of concepts), although, as soon as negation is present, this can lead to changes
in meaning.

‖A‖ = ‖A‖↑(‖A,λu.�‖↓) = [6]
λp.∃x(person(x)∧named(x,”Mr Krupp”)∧p)(∃e(dry(e)∧ARG0(e,x)∧ARG1(e,x))) = [β-conv]

∃x(person(x)∧named(x,”Mr Krupp”)∧∃e(dry(e)∧ARG0(e,x)∧ARG1(e,x)))
Figure 8
Combining projective and assertive semantics for Mr Krupp dried himself.

533



Computational Linguistics Volume 42, Number 3

(x / boy :polarity - (e / whistle-01

:ARG0-of (e /whistle-01 :ARG0 (x \ boy

:polarity - )) :quant A)

Figure 9
Basic AMR with universal quantification (left) and extended AMR (right) for every boy whistled.

Can we give a model-theoretic semantics for AMRs, and is there a systematic
translation to first-order logic? Yes and yes. We have shown that basic AMRs can be
systematically translated into first-order logic, and this gives the AMR language an
indirect model-theoretic interpretation. As a matter of fact, AMRs without recurrent
variables can be translated into a decidable fragment of first-order logic. This includes
the polarity flag used in AMRs to express negation. The translation that we provided is
purely declarative and can be easily implemented, for example as a Prolog program.

Is universal quantification expressible in AMRs? Yes. Universal quantification can
be represented in AMRs, by multiple use of the polarity relation. However, at most one
(wide-scope) universal quantifier can be used in standard AMRs.

Does the AMR language need to be extended? Yes. In order to deal with projection
phenomena and quantifier scope the AMR language needs to be extended. We have
sketched an initial proposal of how this extension might look. There is still work to be
done though. Hence, an appropriate way to finish this article is to use this quote from
the AMR manual (Banarescu et al. 2015): “AMR 1.2 looks forward to AMR 2.0!”

Acknowledgments
I would like to thank Martha Palmer and
Nathan Schneider, as well as the editor
Pierre Isabelle and three anonymous
reviewers, for their helpful comments
on earlier versions of this article.

References
Artzi, Yoav, Kenton Lee, and Luke

Zettlemoyer. 2015. Broad-coverage CCG
semantic parsing with AMR. In Proceedings
of the 2015 Conference on Empirical
Methods in Natural Language Processing,
pages 1699–1710, Lisbon.

Banarescu, Laura, Claire Bonial, Shu Cai,
Madalina Georgescu, Kira Griffitt, Ulf
Hermjakob, Kevin Knight, Philipp Koehn,
Martha Palmer, and Nathan Schneider.
2015. Abstract Meaning Representation
(AMR) 1.2.2 Specification. github.com/
amrisi/amr-guidelines/blob/master/
amr.md.

Bender, Emily M., Dan Flickinger, Stephan
Oepen, Woodley Packard, and Ann
Copestake. 2015. Layers of interpretation:
On grammar and compositionality. In
Proceedings of the 11th International
Conference on Computational Semantics,
pages 239–249, London.

Blackburn, Patrick and Johan Bos. 2005.
Representation and Inference for Natural
Language. A First Course in Computational
Semantics. CSLI, Stanford, CA.

Bos, Johan. 2010. Economical discourse
representation theory. In CNL 2009
Workshop, pages 121–134, Marettimo
Island.

Cai, Shu and Kevin Knight. 2013. Smatch:
An evaluation metric for semantic feature
structures. In Proceedings of the 51st Annual
Meeting of the Association for Computational
Linguistics (Volume 2: Short Papers), pages
748–752, Sofia.

Chen, Wei-Te. 2015. Learning to map
dependency parses to abstract meaning
representations. In Proceedings of the
ACL-IJCNLP 2015 Student Research
Workshop, pages 41–46, Beijing.

Copestake, Ann, Dan Flickinger, Ivan Sag,
and Carl Pollard. 2005. Minimal recursion
semantics: An introduction. Journal of
Research on Language and Computation,
3(2–3):281–332.

Kamp, Hans and Uwe Reyle. 1993. From
Discourse to Logic; An Introduction to
Modeltheoretic Semantics of Natural
Language, Formal Logic and DRT. Kluwer,
Dordrecht.

Langkilde, Irene and Kevin Knight. 1998.
Generation that exploits corpus-based

534

http://www.mitpressjournals.org/action/showLinks?crossref=10.1007%2Fs11168-006-6327-9
http://www.mitpressjournals.org/action/showLinks?crossref=10.1007%2Fs11168-006-6327-9


Johan Bos Expressive Power of Abstract Meaning Representations

statistical knowledge. In Proceedings of the
36th Annual Meeting of the ACL and 17th
International Conference on Computational
Linguistics, pages 704–710, Montreal.

Mortimer, Michael. 1975. On languages with
two variables. Mathematical Logic Quarterly,
21(1):135–140.

Peng, Xiaochang, Linfeng Song, and Daniel
Gildea. 2015. A synchronous hyperedge
replacement grammar based approach for
AMR parsing. In Proceedings of the
Nineteenth Conference on Computational
Natural Language Learning, pages 32–41,
Beijing.

Potts, Christopher. 2005. The Logic of
Conventional Implicatures. Oxford Studies
in Theoretical Linguistics. Oxford
University Press, Oxford.

Pust, Michael, Ulf Hermjakob, Kevin Knight,
Daniel Marcu, and Jonathan May. 2015.
Parsing English into abstract meaning
representation using syntax-based
machine translation. In Proceedings of the
EMNLP 2015, pages 1143–1154, Lisbon.

Sawai, Yuichiro, Hiroyuki Shindo, and
Yuji Matsumoto. 2015. Semantic structure
analysis of noun phrases using abstract
meaning representation. In Proceedings
of the 53rd Annual Meeting of the ACL
(Volume 2: Short Papers), pages 851–856,
Beijing.

Van der Sandt, Rob A. 1992. Presupposition
projection as anaphora resolution. Journal
of Semantics, 9:333–377.

Wang, Chuan, Nianwen Xue, and
Sameer Pradhan. 2015. Boosting
transition-based AMR parsing with
refined actions and auxiliary analyzers.
In Proceedings of the 53rd Annual Meeting of
the ACL (Volume 2: Short Papers),
pages 857–862, Beijing.

Werling, Keenon, Gabor Angeli, and
Christopher D. Manning. 2015. Robust
subgraph generation improves abstract
meaning representation parsing.
In Proceedings of the 53rd Annual
Meeting of the ACL (Volume 1: Long Papers),
pages 982–991, Beijing.

535

http://www.mitpressjournals.org/action/showLinks?crossref=10.1093%2Fjos%2F9.4.333
http://www.mitpressjournals.org/action/showLinks?crossref=10.1093%2Fjos%2F9.4.333
http://www.mitpressjournals.org/action/showLinks?crossref=10.1002%2Fmalq.19750210118















<<
  /ASCII85EncodePages false
  /AllowTransparency false
  /AutoPositionEPSFiles true
  /AutoRotatePages /All
  /Binding /Left
  /CalGrayProfile (Dot Gain 20%)
  /CalRGBProfile (sRGB IEC61966-2.1)
  /CalCMYKProfile (U.S. Web Coated \050SWOP\051 v2)
  /sRGBProfile (sRGB IEC61966-2.1)
  /CannotEmbedFontPolicy /Warning
  /CompatibilityLevel 1.4
  /CompressObjects /Tags
  /CompressPages true
  /ConvertImagesToIndexed true
  /PassThroughJPEGImages true
  /CreateJDFFile false
  /CreateJobTicket false
  /DefaultRenderingIntent /Default
  /DetectBlends true
  /DetectCurves 0.0000
  /ColorConversionStrategy /LeaveColorUnchanged
  /DoThumbnails false
  /EmbedAllFonts true
  /EmbedOpenType false
  /ParseICCProfilesInComments true
  /EmbedJobOptions true
  /DSCReportingLevel 0
  /EmitDSCWarnings false
  /EndPage -1
  /ImageMemory 1048576
  /LockDistillerParams false
  /MaxSubsetPct 100
  /Optimize true
  /OPM 1
  /ParseDSCComments true
  /ParseDSCCommentsForDocInfo true
  /PreserveCopyPage true
  /PreserveDICMYKValues true
  /PreserveEPSInfo true
  /PreserveFlatness true
  /PreserveHalftoneInfo false
  /PreserveOPIComments false
  /PreserveOverprintSettings true
  /StartPage 1
  /SubsetFonts true
  /TransferFunctionInfo /Apply
  /UCRandBGInfo /Preserve
  /UsePrologue false
  /ColorSettingsFile ()
  /AlwaysEmbed [ true
  ]
  /NeverEmbed [ true
  ]
  /AntiAliasColorImages false
  /CropColorImages true
  /ColorImageMinResolution 300
  /ColorImageMinResolutionPolicy /OK
  /DownsampleColorImages true
  /ColorImageDownsampleType /Bicubic
  /ColorImageResolution 300
  /ColorImageDepth -1
  /ColorImageMinDownsampleDepth 1
  /ColorImageDownsampleThreshold 1.50000
  /EncodeColorImages true
  /ColorImageFilter /DCTEncode
  /AutoFilterColorImages true
  /ColorImageAutoFilterStrategy /JPEG
  /ColorACSImageDict <<
    /QFactor 0.15
    /HSamples [1 1 1 1] /VSamples [1 1 1 1]
  >>
  /ColorImageDict <<
    /QFactor 0.15
    /HSamples [1 1 1 1] /VSamples [1 1 1 1]
  >>
  /JPEG2000ColorACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 30
  >>
  /JPEG2000ColorImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 30
  >>
  /AntiAliasGrayImages false
  /CropGrayImages true
  /GrayImageMinResolution 300
  /GrayImageMinResolutionPolicy /OK
  /DownsampleGrayImages true
  /GrayImageDownsampleType /Bicubic
  /GrayImageResolution 300
  /GrayImageDepth -1
  /GrayImageMinDownsampleDepth 2
  /GrayImageDownsampleThreshold 1.50000
  /EncodeGrayImages true
  /GrayImageFilter /DCTEncode
  /AutoFilterGrayImages true
  /GrayImageAutoFilterStrategy /JPEG
  /GrayACSImageDict <<
    /QFactor 0.15
    /HSamples [1 1 1 1] /VSamples [1 1 1 1]
  >>
  /GrayImageDict <<
    /QFactor 0.15
    /HSamples [1 1 1 1] /VSamples [1 1 1 1]
  >>
  /JPEG2000GrayACSImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 30
  >>
  /JPEG2000GrayImageDict <<
    /TileWidth 256
    /TileHeight 256
    /Quality 30
  >>
  /AntiAliasMonoImages false
  /CropMonoImages true
  /MonoImageMinResolution 1200
  /MonoImageMinResolutionPolicy /OK
  /DownsampleMonoImages true
  /MonoImageDownsampleType /Bicubic
  /MonoImageResolution 1200
  /MonoImageDepth -1
  /MonoImageDownsampleThreshold 1.50000
  /EncodeMonoImages true
  /MonoImageFilter /CCITTFaxEncode
  /MonoImageDict <<
    /K -1
  >>
  /AllowPSXObjects false
  /CheckCompliance [
    /None
  ]
  /PDFX1aCheck false
  /PDFX3Check false
  /PDFXCompliantPDFOnly false
  /PDFXNoTrimBoxError true
  /PDFXTrimBoxToMediaBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXSetBleedBoxToMediaBox true
  /PDFXBleedBoxToTrimBoxOffset [
    0.00000
    0.00000
    0.00000
    0.00000
  ]
  /PDFXOutputIntentProfile ()
  /PDFXOutputConditionIdentifier ()
  /PDFXOutputCondition ()
  /PDFXRegistryName ()
  /PDFXTrapped /False

  /Description <<
    /CHS <FEFF4f7f75288fd94e9b8bbe5b9a521b5efa7684002000500044004600206587686353ef901a8fc7684c976262535370673a548c002000700072006f006f00660065007200208fdb884c9ad88d2891cf62535370300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c676562535f00521b5efa768400200050004400460020658768633002>
    /CHT <FEFF4f7f752890194e9b8a2d7f6e5efa7acb7684002000410064006f006200650020005000440046002065874ef653ef5728684c9762537088686a5f548c002000700072006f006f00660065007200204e0a73725f979ad854c18cea7684521753706548679c300260a853ef4ee54f7f75280020004100630072006f0062006100740020548c002000410064006f00620065002000520065006100640065007200200035002e003000204ee553ca66f49ad87248672c4f86958b555f5df25efa7acb76840020005000440046002065874ef63002>
    /DAN <FEFF004200720075006700200069006e0064007300740069006c006c0069006e006700650072006e0065002000740069006c0020006100740020006f007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e007400650072002000740069006c0020006b00760061006c00690074006500740073007500640073006b007200690076006e0069006e006700200065006c006c006500720020006b006f007200720065006b007400750072006c00e60073006e0069006e0067002e0020004400650020006f007000720065007400740065006400650020005000440046002d0064006f006b0075006d0065006e0074006500720020006b0061006e002000e50062006e00650073002000690020004100630072006f00620061007400200065006c006c006500720020004100630072006f006200610074002000520065006100640065007200200035002e00300020006f00670020006e0079006500720065002e>
    /DEU <FEFF00560065007200770065006e00640065006e0020005300690065002000640069006500730065002000450069006e007300740065006c006c0075006e00670065006e0020007a0075006d002000450072007300740065006c006c0065006e00200076006f006e002000410064006f006200650020005000440046002d0044006f006b0075006d0065006e00740065006e002c00200076006f006e002000640065006e0065006e002000530069006500200068006f00630068007700650072007400690067006500200044007200750063006b006500200061007500660020004400650073006b0074006f0070002d0044007200750063006b00650072006e00200075006e0064002000500072006f006f0066002d00470065007200e400740065006e002000650072007a0065007500670065006e0020006d00f60063006800740065006e002e002000450072007300740065006c006c007400650020005000440046002d0044006f006b0075006d0065006e007400650020006b00f6006e006e0065006e0020006d006900740020004100630072006f00620061007400200075006e0064002000410064006f00620065002000520065006100640065007200200035002e00300020006f0064006500720020006800f600680065007200200067006500f600660066006e00650074002000770065007200640065006e002e>
    /ESP <FEFF005500740069006c0069006300650020006500730074006100200063006f006e0066006900670075007200610063006900f3006e0020007000610072006100200063007200650061007200200064006f00630075006d0065006e0074006f0073002000640065002000410064006f0062006500200050004400460020007000610072006100200063006f006e00730065006700750069007200200069006d0070007200650073006900f3006e002000640065002000630061006c006900640061006400200065006e00200069006d0070007200650073006f0072006100730020006400650020006500730063007200690074006f00720069006f00200079002000680065007200720061006d00690065006e00740061007300200064006500200063006f00720072006500630063006900f3006e002e002000530065002000700075006500640065006e00200061006200720069007200200064006f00630075006d0065006e0074006f00730020005000440046002000630072006500610064006f007300200063006f006e0020004100630072006f006200610074002c002000410064006f00620065002000520065006100640065007200200035002e003000200079002000760065007200730069006f006e0065007300200070006f00730074006500720069006f007200650073002e>
    /FRA <FEFF005500740069006c006900730065007a00200063006500730020006f007000740069006f006e00730020006100660069006e00200064006500200063007200e900650072002000640065007300200064006f00630075006d0065006e00740073002000410064006f00620065002000500044004600200070006f007500720020006400650073002000e90070007200650075007600650073002000650074002000640065007300200069006d007000720065007300730069006f006e00730020006400650020006800610075007400650020007100750061006c0069007400e90020007300750072002000640065007300200069006d007000720069006d0061006e0074006500730020006400650020006200750072006500610075002e0020004c0065007300200064006f00630075006d0065006e00740073002000500044004600200063007200e900e90073002000700065007500760065006e0074002000ea0074007200650020006f007500760065007200740073002000640061006e00730020004100630072006f006200610074002c002000610069006e00730069002000710075002700410064006f00620065002000520065006100640065007200200035002e0030002000650074002000760065007200730069006f006e007300200075006c007400e90072006900650075007200650073002e>
    /ITA <FEFF005500740069006c0069007a007a006100720065002000710075006500730074006500200069006d0070006f007300740061007a0069006f006e00690020007000650072002000630072006500610072006500200064006f00630075006d0065006e00740069002000410064006f006200650020005000440046002000700065007200200075006e00610020007300740061006d007000610020006400690020007100750061006c0069007400e00020007300750020007300740061006d00700061006e0074006900200065002000700072006f006f0066006500720020006400650073006b0074006f0070002e0020004900200064006f00630075006d0065006e007400690020005000440046002000630072006500610074006900200070006f00730073006f006e006f0020006500730073006500720065002000610070006500720074006900200063006f006e0020004100630072006f00620061007400200065002000410064006f00620065002000520065006100640065007200200035002e003000200065002000760065007200730069006f006e006900200073007500630063006500730073006900760065002e>
    /JPN <FEFF9ad854c18cea51fa529b7528002000410064006f0062006500200050004400460020658766f8306e4f5c6210306b4f7f75283057307e30593002537052376642306e753b8cea3092670059279650306b4fdd306430533068304c3067304d307e3059300230c730b930af30c830c330d730d730ea30f330bf3067306e53705237307e305f306f30d730eb30fc30d57528306b9069305730663044307e305930023053306e8a2d5b9a30674f5c62103055308c305f0020005000440046002030d530a130a430eb306f3001004100630072006f0062006100740020304a30883073002000410064006f00620065002000520065006100640065007200200035002e003000204ee5964d3067958b304f30533068304c3067304d307e30593002>
    /KOR <FEFFc7740020c124c815c7440020c0acc6a9d558c5ec0020b370c2a4d06cd0d10020d504b9b0d1300020bc0f0020ad50c815ae30c5d0c11c0020ace0d488c9c8b85c0020c778c1c4d560002000410064006f0062006500200050004400460020bb38c11cb97c0020c791c131d569b2c8b2e4002e0020c774b807ac8c0020c791c131b41c00200050004400460020bb38c11cb2940020004100630072006f0062006100740020bc0f002000410064006f00620065002000520065006100640065007200200035002e00300020c774c0c1c5d0c11c0020c5f40020c2180020c788c2b5b2c8b2e4002e>
    /NLD (Gebruik deze instellingen om Adobe PDF-documenten te maken voor kwaliteitsafdrukken op desktopprinters en proofers. De gemaakte PDF-documenten kunnen worden geopend met Acrobat en Adobe Reader 5.0 en hoger.)
    /NOR <FEFF004200720075006b00200064006900730073006500200069006e006e007300740069006c006c0069006e00670065006e0065002000740069006c002000e50020006f0070007000720065007400740065002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e00740065007200200066006f00720020007500740073006b00720069006600740020006100760020006800f800790020006b00760061006c00690074006500740020007000e500200062006f007200640073006b0072006900760065007200200065006c006c00650072002000700072006f006f006600650072002e0020005000440046002d0064006f006b0075006d0065006e00740065006e00650020006b0061006e002000e50070006e00650073002000690020004100630072006f00620061007400200065006c006c00650072002000410064006f00620065002000520065006100640065007200200035002e003000200065006c006c00650072002000730065006e006500720065002e>
    /PTB <FEFF005500740069006c0069007a006500200065007300730061007300200063006f006e00660069006700750072006100e700f50065007300200064006500200066006f0072006d00610020006100200063007200690061007200200064006f00630075006d0065006e0074006f0073002000410064006f0062006500200050004400460020007000610072006100200069006d0070007200650073007300f5006500730020006400650020007100750061006c0069006400610064006500200065006d00200069006d00700072006500730073006f0072006100730020006400650073006b0074006f00700020006500200064006900730070006f00730069007400690076006f0073002000640065002000700072006f00760061002e0020004f007300200064006f00630075006d0065006e0074006f00730020005000440046002000630072006900610064006f007300200070006f00640065006d0020007300650072002000610062006500720074006f007300200063006f006d0020006f0020004100630072006f006200610074002000650020006f002000410064006f00620065002000520065006100640065007200200035002e0030002000650020007600650072007300f50065007300200070006f00730074006500720069006f007200650073002e>
    /SUO <FEFF004b00e40079007400e40020006e00e40069007400e4002000610073006500740075006b007300690061002c0020006b0075006e0020006c0075006f0074002000410064006f0062006500200050004400460020002d0064006f006b0075006d0065006e007400740065006a00610020006c0061006100640075006b006100730074006100200074007900f6007000f60079007400e400740075006c006f0073007400750073007400610020006a00610020007600650064006f007300740075007300740061002000760061007200740065006e002e00200020004c0075006f0064007500740020005000440046002d0064006f006b0075006d0065006e00740069007400200076006f0069006400610061006e0020006100760061007400610020004100630072006f0062006100740069006c006c00610020006a0061002000410064006f00620065002000520065006100640065007200200035002e0030003a006c006c00610020006a006100200075007500640065006d006d0069006c006c0061002e>
    /SVE <FEFF0041006e007600e4006e00640020006400650020006800e4007200200069006e0073007400e4006c006c006e0069006e006700610072006e00610020006f006d002000640075002000760069006c006c00200073006b006100700061002000410064006f006200650020005000440046002d0064006f006b0075006d0065006e00740020006600f600720020006b00760061006c00690074006500740073007500740073006b0072006900660074006500720020007000e5002000760061006e006c00690067006100200073006b0072006900760061007200650020006f006300680020006600f600720020006b006f007200720065006b007400750072002e002000200053006b006100700061006400650020005000440046002d0064006f006b0075006d0065006e00740020006b0061006e002000f600700070006e00610073002000690020004100630072006f0062006100740020006f00630068002000410064006f00620065002000520065006100640065007200200035002e00300020006f00630068002000730065006e006100720065002e>
    /ENU (Use these settings to create Adobe PDF documents for quality printing on desktop printers and proofers.  Created PDF documents can be opened with Acrobat and Adobe Reader 5.0 and later.)
  >>
  /Namespace [
    (Adobe)
    (Common)
    (1.0)
  ]
  /OtherNamespaces [
    <<
      /AsReaderSpreads false
      /CropImagesToFrames true
      /ErrorControl /WarnAndContinue
      /FlattenerIgnoreSpreadOverrides false
      /IncludeGuidesGrids false
      /IncludeNonPrinting false
      /IncludeSlug false
      /Namespace [
        (Adobe)
        (InDesign)
        (4.0)
      ]
      /OmitPlacedBitmaps false
      /OmitPlacedEPS false
      /OmitPlacedPDF false
      /SimulateOverprint /Legacy
    >>
    <<
      /AddBleedMarks false
      /AddColorBars false
      /AddCropMarks false
      /AddPageInfo false
      /AddRegMarks false
      /ConvertColors /NoConversion
      /DestinationProfileName ()
      /DestinationProfileSelector /NA
      /Downsample16BitImages true
      /FlattenerPreset <<
        /PresetSelector /MediumResolution
      >>
      /FormElements false
      /GenerateStructure true
      /IncludeBookmarks false
      /IncludeHyperlinks false
      /IncludeInteractive false
      /IncludeLayers false
      /IncludeProfiles true
      /MultimediaHandling /UseObjectSettings
      /Namespace [
        (Adobe)
        (CreativeSuite)
        (2.0)
      ]
      /PDFXOutputIntentProfileSelector /NA
      /PreserveEditing true
      /UntaggedCMYKHandling /LeaveUntagged
      /UntaggedRGBHandling /LeaveUntagged
      /UseDocumentBleed false
    >>
  ]
>> setdistillerparams
<<
  /HWResolution [2400 2400]
  /PageSize [612.000 792.000]
>> setpagedevice

