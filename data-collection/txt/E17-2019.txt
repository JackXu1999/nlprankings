



















































Context-Aware Prediction of Derivational Word-forms


Proceedings of the 15th Conference of the European Chapter of the Association for Computational Linguistics: Volume 2, Short Papers, pages 118–124,
Valencia, Spain, April 3-7, 2017. c©2017 Association for Computational Linguistics

Context-Aware Prediction of Derivational Word-forms

Ekaterina Vylomova1, Ryan Cotterell2, Timothy Baldwin1 and Trevor Cohn1

1Department of Computing and Information Systems, The University of Melbourne
2Center for Language and Speech Processing, Johns Hopkins University

{evylomova,ryan.cotterell}@gmail.com
{tbaldwin,tcohn}@unimelb.edu.au

Abstract

Derivational morphology is a fundamen-
tal and complex characteristic of language.
In this paper we propose the new task of
predicting the derivational form of a given
base-form lemma that is appropriate for
a given context. We present an encoder–
decoder style neural network to produce a
derived form character-by-character, based
on its corresponding character-level repre-
sentation of the base form and the context.
We demonstrate that our model is able to
generate valid context-sensitive derivations
from known base forms, but is less accurate
under a lexicon agnostic setting.

1 Introduction

Understanding how new words are formed is a
fundamental task in linguistics and language mod-
elling, with significant implications for tasks with
a generation component, such as abstractive sum-
marisation and machine translation. In this paper
we focus on modelling derivational morphology, to
learn, e.g., that the appropriate derivational form of
the verb succeed is succession given the context As
third in the line of . . . , but is success in The
play was a great .

English is broadly considered to be a morpho-
logically impoverished language, and there are cer-
tainly many regularities in morphological patterns,
e.g., the common usage of -able to transform a verb
into an adjective, or -ly to form an adverb from an
adjective. However there is considerable subtlety
in English derivational morphology, in the form
of: (a) idiosyncratic derivations; e.g. picturesque
vs. beautiful vs. splendid as adjectival forms of
the nouns picture, beauty and splendour, respec-
tively; (b) derivational generation in context, which
requires the automatic determination of the part-

of-speech (POS) of the stem and the likely POS
of the word in context, and POS-specific deriva-
tional rules; and (c) multiple derivational forms
often exist for a given stem, and these must be se-
lected between based on the context (e.g. success
and succession as nominal forms of success, as
seen above). As such, there are many aspects that
affect the choice of derivational transformation, in-
cluding morphotactics, phonology, semantics or
even etymological characteristics. Earlier works
(Thorndike, 1941) analysed ambiguity of deriva-
tional suffixes themselves when the same suffix
might present different semantics depending on the
base form it is attached to (cf. beautiful vs. cup-
ful). Furthermore, as Richardson (1977) previously
noted, even words with quite similar semantics and
orthography such as horror and terror might have
non-overlapping patterns: although we observe reg-
ularity in some common forms, for example, hor-
rify and terrify, and horrible and terrible, nothing
tells us why we observe terrorize and no instances
of horrorize, or horrid, but not terrid.

In this paper, we propose the new task of pre-
dicting a derived form from its context and a base
form. Our motivation in this research is primarily
linguistic, i.e. we measure the degree to which it
is possible to predict particular derivation forms
from context. A similar task has been proposed in
the context of studying how children master deriva-
tions (Singson et al., 2000). In their work, children
were asked to complete a sentence by choosing
one of four possible derivations. Each derivation
corresponded either to a noun, verb, adjective, or
adverbial form. Singson et al. (2000) showed that
childrens’ ability to recognize the correct form cor-
relates with their reading ability. This observation
confirms an earlier idea that orthographical regular-
ities provide a clearer clues to morphological trans-
formations comparing to phonological rules (Tem-
pleton, 1980; Moskowitz, 1973), especially in lan-

118



guages such as English where grapheme-phoneme
correspondences are opaque. For this reason we
consider orthographic rather than phonological rep-
resentations.

In our approach, we test how well models in-
corporating distributional semantics can capture
derivational transformations. Deep learning mod-
els capable of learning real-valued word embed-
dings have been shown to perform well on a range
of tasks, from language modelling (Mikolov et al.,
2013a) to parsing (Dyer et al., 2015) and machine
translation (Bahdanau et al., 2015). Recently, these
models have also been successfully applied to mor-
phological reinflection tasks (Kann and Schütze,
2016; Cotterell et al., 2016a).

2 Derivational Morphology

Morphology, the linguistic study of the internal
structure of words, has two main goals: (1) to de-
scribe the relation between different words in the
lexicon; and (2) to decompose words into mor-
phemes, the smallest linguistic units bearing mean-
ing. Morphology can be divided into two types:
inflectional and derivational. Inflectional morphol-
ogy is the set of processes through which the word
form outwardly displays syntactic information, e.g.,
verb tense. It follows that an inflectional affix typi-
cally neither changes the part-of-speech (POS) nor
the semantics of the word. For example, the En-
glish verb to run takes various forms: run, runs
and ran, all of which convey the concept “mov-
ing by foot quickly”, but appear in complementary
syntactic contexts.

Derivation, on the other hand, deals with the
formation of new words that have semantic shifts
in meaning (often including POS) and is tightly
intertwined with lexical semantics (Light, 1996).
Consider the example of the English noun discon-
tentedness, which is derived from the adjective
discontented. It is true that both words share a
close semantic relationship, but the transformation
is clearly more than a simple inflectional marking
of syntax. Indeed, we can go one step further and
define a chain of words content 7→ contented 7→
discontented 7→ discontentedness.

In this work, we deal with the formation of dever-
bal nouns, i.e., nouns that are formed from verbs.
Common examples of this in English include agen-
tives (e.g., explain 7→ explainer), gerunds (e.g.,
explain 7→ explaining), as well as other nominal-
isations (e.g., explain 7→ explanation). Nominal-

<s> 
environmental

{ 
d 
e 
v 
a 
s 
t  
a 
t 
e 
} 

is 
best 

exemplified 
by 
...

</s> 

d
e
v
a
s
t
a
t
e
}

d
e
v
a
s
t
a
t
i
o
n
}

}
}

...le
m
m
a

co
nt
ex

t L
co

nt
ex

t R

encoding

output
generation

Figure 1: The encoder–decoder model, showing the stem
devastate in context producing the form devastation. Coloured
arrows indicate shared parameters

isations have varyingly different meanings from
their base verbs, and a key focus of this study is
the prediction of which form is most appropriate
depending on the context, in terms of syntactic and
semantic concordance. Our model is highly flex-
ible and easily applicable to other related lexical
problems.

3 Related Work

Although in the last few years many neural mor-
phological models have been proposed, most of
them have focused on inflectional morphology (e.g.,
see Cotterell et al. (2016a)). Focusing on deriva-
tional processes, there are three main directions
of research. The first deals with the evaluation of
word embeddings either using a word analogy task
(Gladkova et al., 2016) or binary relation type clas-
sification (Vylomova et al., 2016). In this context,
it has been shown that, unlike inflectional mor-
phology, most derivational relations cannot be as
easily captured using distributional methods. Re-
searchers working on the second type of task at-
tempt to predict derived forms using the embedding
of its corresponding base form and a vector encod-
ing a “derivational” shift. Guevara (2011) notes
that derivational affixes can be modelled as a geo-
metrical function over the vectors of the base forms.
On the other hand, Lazaridou et al. (2013) and Cot-
terell and Schütze (2017) represent derivational
affixes as vectors and investigate various functions
to combine them with base forms. Kisselew et al.

119



(2015) and Padó et al. (2016) extend this line of
research to model derivational morphology in Ger-
man. This work demonstrates that various factors
such as part of speech, semantic regularity and ar-
gument structure (Grimshaw, 1990) influence the
predictability of a derived word. The third area of
research focuses on the analysis of derivationally
complex forms, which differs from this study in
that we focus on generation. The goal of this line
of work is to produce a canonicalised segmenta-
tion of an input word into its constituent morphs,
e.g., unhappiness7→un+happy+ness (Cotterell et
al., 2015; Cotterell et al., 2016b). Note that the
orthographic change y7→i has been reversed.

4 Dataset

As the starting point for the construction of our
dataset, we used the CELEX English dataset
(Baayen et al., 1993). We extracted verb–noun
lemma pairs from CELEX, covering 24 differ-
ent nominalisational suffixes and 1,456 base lem-
mas. Suffixes only occurring in 5 or fewer lemma
pairs mainly corresponded to loan words and con-
sequently were filtered out. We augmented this
dataset with verb–verb pairs, one for each verb
present in the verb–noun pairs, to capture the case
of a verbal form being appropriate for the given
context.1 For each noun and verb lemma, we gener-
ated all their inflections, and searched for sentential
contexts of each inflected token in a pre-tokenised
dump of English Wikipedia.2 To dampen the effect
of high-frequency words, we applied a heuristic log
function threshold which is basically a weighted
logarithm of the number of the contexts. The final
dataset contains 3,079 unique lemma pairs repre-
sented in 107,041 contextual instances.3

5 Experiments

In this paper we model derivational morphology
as a prediction task, formulated as follows. We
take sentences containing a derivational form of a
given lemma, then obscure the derivational form by
replacing it with its base form lemma. The system
must then predict the original (derivational) form,
which may make use of the sentential context. Sys-
tem predictions are judged correct if they exactly

1We also experimented without verb–verb pairs and didn’t
observe much difference in the results.

2Based on a 2008/03/12 dump. Sentences shorter than 3
words or longer than 50 words were removed from the dataset.

3The code and the dataset are available at https://
github.com/ivri/dmorph

match the original derived form.

5.1 Baseline
As a baseline we considered a trigram model with
modified Kneser-Ney smoothing, trained on the
training dataset. Each sentence in the testing data
was augmented with a set of confabulated sen-
tences, where we replaced a target word with other
its derivations or a base form. Unlike the general
task, where we generate word forms as character
sequences, here we use a set of known inflected
forms for each lemma (from the training data). We
then use the language model to score the collections
of test sentences, and selected the variant with the
highest language model score, and evaluate accu-
racy of selecting the original word form.

5.2 Encoder–Decoder Model
We propose an encoder–decoder model. The en-
coder combines the left and the right contexts as
well as a character-level base form representation:

t = max(0, H · [h→left; h←left; h→right; h←right;
h→base; h

←
base] + bh),

where h→left, h
←
left, h

→
right, h

←
right, h

→
base,h

←
base corre-

spond to the last hidden states of an LSTM (Hochre-
iter and Schmidhuber, 1997) over left and right
contexts and the character-level representation of
the base form (in each case, applied forwards and
backwards), respectively; H ∈ R[h×l×1.5,h×l×6] is
a weight matrix, and bh ∈ R[h×l×1.5] is a bias term.
[; ] denotes a vector concatenation operation, h is
the hidden state dimensionality, and l is the number
of layers.

Next we add an extra affine transformation, o =
T · t + bo, where T ∈ R[h×l×1.5,h×l] and bo ∈
R[h×l], then o is then fed into the decoder:

g(cj+1|cj , o, lj+1) =
softmax(R · cj + max (B · o, S · lj+1) + bd),

where cj is an embedding of the j-th character of
the derivation, lj+1 is an embedding of the corre-
sponding base character, B, S, R are weight matri-
ces, and bd is a bias term.

We now elaborate on the design choices behind
the model architecture which have been tailored to
our task. We supply the model with the lj+1 char-
acter prefix of the base word to enable a copying
mechanism, to bias the model to generate a derived
form that is morphologically-related to the base

120



Shared Split

baseline 0.63 —
biLSTM+BS 0.58 0.36
biLSTM+CTX 0.80 0.45
biLSTM+CTX+BS 0.83 0.52
biLSTM+CTX+BS+POS 0.89 0.63
LSTM+CTX+BS+POS 0.90 0.66

Table 1: Accuracy for predicted lemmas (bases and deriva-
tions) on shared and split lexicons

verb. In most cases, the derived form is longer than
its stem, and accordingly, when we reach the end of
the base form, we continue to input an end-of-word
symbol. We provide the model with the context
vector o at each decoding step. It has been previ-
ously shown (Hoang et al., 2016) that this yields
better results than other means of incorporation.4

Finally, we use max pooling to enable the model to
switch between copying of a stem or producing a
new character.

5.3 Settings

We used a 3-layer bidirectional LSTM network,
with hidden dimensionality h for both context
and base-form stem states of 100, and charac-
ter embedding cj of 100.5 We used pre-trained
300-dimensional Google News word embeddings
(Mikolov et al., 2013a; Mikolov et al., 2013b). Dur-
ing the training of the model, we keep the word em-
beddings fixed, for greater applicability to unseen
test instances. All tokens that didn’t appear in this
set were replaced with UNK sentinel tokens. The
network was trained using SGD with momentum
until convergence.

5.4 Results

With the encoder–decoder model, we experimented
with the encoder–decoder as described in Sec-
tion 5.2 ( “biLSTM+CTX+BS”), as well as several
variations, namely: excluding context information
(“biLSTM+BS”), and excluding the bidirectional
stem (“biLSTM+CTX”). We also investigated how
much improvement we can get from knowing the
POS tag of the derived form, by presenting it ex-
plicitly to the model as extra conditioning context
(“biLSTM+CTX+BS+POS”). The main motiva-
tion for this relates to gerunds, where without the

4We tried to feed the context information at the initial step
only, and this led to worse prediction in terms of context-aware
suffixes.

5We also experimented with 15 dimensions, but found this
model to perform worse.

Figure 2: An example of t-SNE projection (Maaten and Hin-
ton, 2008) of context representations for simulate

POS, the model often overgenerates nominalisa-
tions. We then tried a single-directional context
representation, by using only the last hidden states,
i.e., h→left and h

←
right, corresponding to the words to

the immediate left and right of the wordform to be
predicted (“LSTM+CTX+BS+POS”).

We ran two experiments: first, a shared lexicon
experiment, where every stem in the test data was
present in the training data; and second, using a
split lexicon, where every stem in the test data was
unseen in the training data. The results are pre-
sented in Table 1, and show that: (1) context has a
strong impact on results, particularly in the shared
lexicon case; (2) there is strong complementarity
between the context and character representations,
particularly in the split lexicon case; and (3) POS
information is particularly helpful in the split lexi-
con case. Note that most of the models significantly
outperform our baseline under shared lexicon set-
ting. The baseline model doesn’t support the split
lexicon setting (as the derivational forms of interest,
by definition, don’t occur in the training data), so
we cannot generate results in this setting.

5.5 Error Analysis

We carried out error analysis over the produced
forms of the LSTM+CTX+BS+POS model. First,
the model sometimes struggles to differentiate be-
tween nominal suffixes: in some cases it puts an
agentive suffix (-er or -or) in contexts where a non-
agentive nominalisation (e.g. -ation or -ment) is
appropriate. As an illustration of this, Figure 2 is a
t-SNE projection of the context representations for
simulate vs. simulator vs. simulation, showing that
the different nominal forms have strong overlap.
Secondly, although the model learns whether to

121



copy or produce a new symbol well, some forms
are spelled incorrectly. Examples of this are studint,
studion or even studyant rather than student as the
agentive nominalisation of study. Here, the issue
is opaqueness in the etymology, with student be-
ing borrowed from the Old French estudiant. For
transformations which are native to English, for
example, -ate 7→ -ation, the model is much more
accurate. Table 2 shows recall values achieved for
various suffix types. We do not present precision
since it could not be reliably estimated without
extensive manual analysis.

In the split lexicon setting, the model sometimes
misses double consonants at the end of words, pro-
ducing wraper and winer and is biased towards
generating mostly productive suffixes. An exam-
ple of the last case might be stoption in place of
stoppage. We also studied how much the training
size affects the model’s accuracy by reducing the
data from 1,000 to 60,000 instances (maintaining
a balance over lemmas). Interestingly, we didn’t
observe a significant reduction in accuracy. Finally,
note that under the split lexicon setting, the model
is agnostic of existing derivations, sometimes over-
generating possible forms. A nice illustration of
that is trailation, trailment and trailer all being pro-
duced in the contexts of trailer. In other cases, the
model might miss some of the derivations, for in-
stance, predicting only government in the contexts
of governance and government. We hypothesize
that it is either due to very subtle differences in
their contexts, or the higher productivity of -ment.

Finally, we experimented with some nonsense
stems, overwriting sentential instances of tran-
scribe to generate context-sensitive derivational
forms. Table 3 presents the nonsense stems, the
correct form of transcribe for a given context, and
the predicted derivational form of the nonsense
word. Note that the base form is used correctly
(top row) for three of the four nonsense words, and
that despite the wide variety of output forms, they
resemble plausible words in English. By looking at
a larger slice of the data, we observed some regu-
larities. For instance, fapery was mainly produced
in the contexts of transcript whereas fapication
was more related to transcription. Table 3 also
shows that some of the stems appear to be more
productive than others.

Affix R Affix R Affix R Affix R
-age .93 -al .95 -ance .75 -ant .65
-ation .93 -ator .77 -ee .52 -ence .82
-ent .65 -er .87 -ery .84 -ion .93
-ist .80 -ition .89 -ment .90 -or .64
-th .95 -ure .77 -y .83 NULL .98

Table 2: Recall for various suffix types. Here “NULL” corre-
sponds to verb–verb cases

Original Target Lemma

transcribe laptify fape crimmle beteive

transcribe laptify fape crimmle beterve
transcription laptification fapery crimmler betention
transcription laptification fapication crimmler beteption
transcription laptification fapionment crimmler betention
transcription laptification fapist crimmler betention
transcription laptification fapist crimmler beteption
transcript laptification fapery crimmler betention
transcript laptification fapist crimmler beteption

Table 3: An experiment with nonsense “target” base forms
generated in sentence contexts of the “original” word tran-
scribe

6 Conclusions and Future Work

We investigated the novel task of context-sensitive
derivation prediction for English, and proposed
an encoder–decoder model to generate nominalisa-
tions. Our best model achieved an accuracy of 90%
on a shared lexicon, and 66% on a split lexicon.
This suggests that there is regularity in derivational
processes and, indeed, in many cases the context
is indicative. As we mentioned earlier, there are
still many open questions which we leave for future
work. Further, we plan to scale to other languages
and augment our dataset with Wiktionary data, to
realise much greater coverage and variety of deriva-
tional forms.

7 Acknowledgments

We would like to thank all reviewers for their valu-
able comments and suggestions. The second author
was supported by a DAAD Long-Term Research
Grant and an NDSEG fellowship. This research
was supported in part by the Australian Research
Council.

References
Harald R. Baayen, Richard Piepenbrock, and H. van

Rijn. 1993. The CELEX lexical data base on CD-
ROM.

Dzmitry Bahdanau, Kyunghyun Cho, and Yoshua Ben-
gio. 2015. Neural machine translation by jointly

122



learning to align and translate. In Proceedings of
the 3rd International Conference on Learning Rep-
resentations (ICLR 2015), volume abs/1409.0473.

Ryan Cotterell and Hinrich Schütze. 2017. Joint se-
mantic synthesis and morphological analysis of the
derived word. CoRR, abs/1701.00946.

Ryan Cotterell, Thomas Müller, Alexander Fraser, and
Hinrich Schütze. 2015. Labeled morphological seg-
mentation with semi-markov models. In Proceed-
ings of the 19th Conference on Computational Nat-
ural Language Learning (CoNLL 2015), pages 164–
174.

Ryan Cotterell, Christo Kirov, John Sylak-Glassman,
David Yarowsky, Jason Eisner, and Mans Hulden.
2016a. The SIGMORPHON 2016 shared task mor-
phological reinflection. In Proceedings of the 14th
SIGMORPHON Workshop on Computational Re-
search in Phonetics, Phonology, and Morphology,
pages 10–22.

Ryan Cotterell, Tim Vieira, and Hinrich Schütze.
2016b. A joint model of orthography and morpho-
logical segmentation. In Proceedings of the 2016
Conference of the North American Chapter of the
Association for Computational Linguistics: Human
Language Technologies (NAACL HLT 2016), pages
664–669.

Chris Dyer, Miguel Ballesteros, Wang Ling, Austin
Matthews, and Noah A. Smith. 2015. Transition-
based dependency parsing with stack long short-
term memory. In Proceedings of the 53rd Annual
Meeting of the Association for Computational Lin-
guistics (ACL 2015). abs/1505.08075.

Anna Gladkova, Aleksandr Drozd, and Satoshi Mat-
suoka. 2016. Analogy-based detection of mor-
phological and semantic relations with word embed-
dings: what works and what doesn’t. In Proceed-
ings of the 15th Annual Conference of the North
American Chapter of the Association for Computa-
tional Linguistics: Human Language Technologies
(NAACL HLT 2016), pages 8–15.

Jane Grimshaw. 1990. Argument structure. The MIT
Press, Cambridge, MA, US.

Emiliano Guevara. 2011. Computing semantic compo-
sitionality in distributional semantics. In Proceed-
ings of the 9th International Conference on Compu-
tational Semantics, pages 135–144. Association for
Computational Linguistics.

Cong Duy Vu Hoang, Trevor Cohn, and Gholamreza
Haffari. 2016. Incorporating side information into
recurrent neural network language models. In Pro-
ceedings of the 15th Annual Conference of the North
American Chapter of the Association for Computa-
tional Linguistics: Human Language Technologies
(NAACL HLT 2016), pages 1250–1255.

Sepp Hochreiter and Jürgen Schmidhuber. 1997.
Long short-term memory. Neural computation,
9(8):1735–1780.

Katharina Kann and Hinrich Schütze. 2016. Single-
model encoder-decoder with explicit morphological
representation for reinflection. In Proceedings of the
54st Annual Meeting of the Association for Compu-
tational Linguistics (ACL 2016).

Max Kisselew, Sebastian Padó, Alexis Palmer, and
Jan Šnajder. 2015. Obtaining a better understand-
ing of distributional models of german derivational
morphology. In Proceedings of the 11th Inter-
national Conference on Computational Semantics
(IWCS 2015), pages 58–63.

Angeliki Lazaridou, Marco Marelli, Roberto Zampar-
elli, and Marco Baroni. 2013. Compositionally
derived representations of morphologically complex
words in distributional semantics. In Proceedings
of the 51st Annual Meeting of the Association for
Computational Linguistics (ACL 2013), pages 1517–
1526.

Marc Light. 1996. Morphological cues for lexical se-
mantics. In Proceedings of the 34st Annual Meet-
ing of the Association for Computational Linguistics
(ACL 1996), pages 25–31.

Laurens van der Maaten and Geoffrey Hinton. 2008.
Visualizing data using t-SNE. Journal of Machine
Learning Research, 9(Nov):2579–2605.

Tomas Mikolov, Kai Chen, Greg Corrado, and Jeffrey
Dean. 2013a. Efficient estimation of word repre-
sentations in vector space. In Proceedings of the
Workshop at the International Conference on Learn-
ing Representations, 2013.

Tomas Mikolov, Ilya Sutskever, Kai Chen, Greg Cor-
rado, and Jeffrey Dean. 2013b. Distributed repre-
sentations of words and phrases and their compo-
sitionality. In Proceedings of Neural Information
Processing Systems Conference (NIPS 2013), pages
3111–3119.

Arlene Moskowitz. 1973. On the status of vowel shift
in English. In Timothy E. Moore, editor, Cognitive
Development and the Acquisition of Language. Aca-
demic Press.

Sebastian Padó, Aurélie Herbelot, Max Kisselew, and
Jan Šnajder. 2016. Predictability of distributional
semantics in derivational word formation. In Pro-
ceedings of the 26th International Conference on
Computational Linguistics (COLING 2016), pages
1285–1297.

John T.E. Richardson. 1977. Lexical derivation. Jour-
nal of Psycholinguistic Research, 6(4):319–336.

Maria Singson, Diana Mahony, and Virginia Mann.
2000. The relation between reading ability and mor-
phological skills: Evidence from derivational suf-
fixes. Reading and writing, 12(3):219–252.

Shane Templeton. 1980. Spelling, phonology, and the
older student. Developmental and cognitive aspects
of learning to spell: A reflection of word knowledge,
pages 85–96.

123



Edward Lee Thorndike. 1941. The teaching of English
suffixes, volume 847. Teachers College, Columbia
University.

Ekaterina Vylomova, Laura Rimmel, Trevor Cohn, and
Timothy Baldwin. 2016. Take and took, gaggle
and goose, book and read: evaluating the utility of
vector differences for lexical relation learning. In
Proceedings of the 54th Annual Meeting of the Asso-
ciation for Computational Linguistics (ACL 2016),
pages 1671–1682.

124


