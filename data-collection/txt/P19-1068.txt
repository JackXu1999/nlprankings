



















































MOROCO: The Moldavian and Romanian Dialectal Corpus


Proceedings of the 57th Annual Meeting of the Association for Computational Linguistics, pages 688–698
Florence, Italy, July 28 - August 2, 2019. c©2019 Association for Computational Linguistics

688

MOROCO: The Moldavian and Romanian Dialectal Corpus

Andrei M. Butnaru and Radu Tudor Ionescu
Department of Computer Science, University of Bucharest

14 Academiei, Bucharest, Romania
butnaruandreimadalin@gmail.com

raducu.ionescu@gmail.com

Abstract

In this work, we introduce the Moldavian
and Romanian Dialectal Corpus (MOROCO),
which is freely available for download at
https://github.com/butnaruandrei/MOROCO.
The corpus contains 33564 samples of text
(with over 10 million tokens) collected from
the news domain. The samples belong to one
of the following six topics: culture, finance,
politics, science, sports and tech. The data
set is divided into 21719 samples for training,
5921 samples for validation and another 5924
samples for testing. For each sample, we
provide corresponding dialectal and category
labels. This allows us to perform empirical
studies on several classification tasks such as
(i) binary discrimination of Moldavian versus
Romanian text samples, (ii) intra-dialect
multi-class categorization by topic and (iii)
cross-dialect multi-class categorization by
topic. We perform experiments using a
shallow approach based on string kernels,
as well as a novel deep approach based on
character-level convolutional neural networks
containing Squeeze-and-Excitation blocks.
We also present and analyze the most discrim-
inative features of our best performing model,
before and after named entity removal.

1 Introduction
The high number of evaluation campaigns on spo-
ken or written dialect identification conducted in
recent years (Ali et al., 2017; Malmasi et al.,
2016; Rangel et al., 2017; Zampieri et al., 2017,
2018) prove that dialect identification is an inter-
esting and challenging natural language process-
ing (NLP) task, actively studied by researchers in
nowadays. Due to the recent interest in dialect
identification, we introduce the Moldavian and
Romanian Dialectal Corpus (MOROCO), which
is composed of 33564 samples of text collected
from the news domain.

Figure 1: Map of Romania and the Republic of
Moldova.

Romanian is part of the Balkan-Romance group
that evolved from several dialects of Vulgar
Latin, which separated from the Western Ro-
mance branch of languages from the fifth cen-
tury (Coteanu et al., 1969). In order to dis-
tinguish Romanian within the Balkan-Romance
group in comparative linguistics, it is referred to
as Daco-Romanian. Along with Daco-Romanian,
which is currently spoken in Romania, there
are three other dialects in the Balkan-Romance
branch, namely Aromanian, Istro-Romanian, and
Megleno-Romanian. Moldavian is a subdialect of
Daco-Romanian, that is spoken in the Republic of
Moldova and in northeastern Romania. The delim-
itation of the Moldavian dialect, as with all other
Romanian dialects, is made primarily by analyz-
ing its phonetic features and only marginally by
morphological, syntactical, and lexical character-
istics. Although the spoken dialects in Romania
and the Republic of Moldova are different, the two
countries share the same literary standard (Mina-
han, 2013). Some linguists (Pavel, 2008) consider
that the border between Romania and the Repub-
lic of Moldova (see Figure 1) does not correspond
to any significant isoglosses to justify a dialectal
division. One question that arises in this context



689

is whether we can train a machine to accurately
distinguish literary text samples written by peo-
ple in Romania from literary text samples writ-
ten by people in the Republic of Moldova. If
we can construct such a machine, then what are
the discriminative features employed by this ma-
chine? Our corpus formed of text samples col-
lected from Romanian and Moldavian news web-
sites, enables us to answer these questions. Fur-
thermore, MOROCO provides a benchmark for
the evaluation of dialect identification methods.
To this end, we consider two state-of-the-art meth-
ods, string kernels (Butnaru and Ionescu, 2018;
Ionescu and Butnaru, 2017; Ionescu et al., 2014)
and character-level convolutional neural networks
(CNNs) (Ali, 2018; Belinkov and Glass, 2016;
Zhang et al., 2015), which obtained the first two
places (Ali, 2018; Butnaru and Ionescu, 2018) in
the Arabic Dialect Identification Shared Task of
the 2018 VarDial Evaluation Campaign (Zampieri
et al., 2018). We also experiment with a novel
CNN architecture inspired the recently introduced
Squeeze-and-Excitation (SE) networks (Hu et al.,
2018), which exhibit state-of-the-art performance
in object recognition from images. To our knowl-
edge, we are the first to introduce Squeeze-and-
Excitation networks in the text domain.

As we provide category labels for the collected
text samples, we can perform additional exper-
iments on various text categorization by topic
tasks. One type of task is intra-dialect multi-class
categorization by topic, i.e. the task is to clas-
sify the samples written either in the Moldavian
dialect or in the Romanian dialect into one of the
following six topics: culture, finance, politics, sci-
ence, sports and tech. Another type of task is
cross-dialect multi-class categorization by topic,
i.e. the task is to classify the samples written in
one dialect, e.g. Romanian, into six topics, using
a model trained on samples written in the other
dialect, e.g. Moldavian. These experiments are
aimed at showing if the considered text categoriza-
tion methods are robust to the dialect shift between
training and testing.

In summary, our contribution is threefold:
• We introduce a novel large corpus containing

33564 text samples written in the Moldavian
and the Romanian dialects.
• We introduce Squeeze-and-Excitation net-

works to the text domain.
• We analyze the discriminative features that

help the best performing method, string ker-

nels, in (i) distinguishing the Moldavian and
the Romanian dialects and in (ii) categoriz-
ing the text samples by topic.

We organize the remainder of this paper as fol-
lows. We discuss related work in Section 2. We
describe the MOROCO data set in Section 3. We
present the chosen classification methods in Sec-
tion 4. We show empirical results in Section 5,
and we provide a discussion on the discriminative
features in Section 6. Finally, we draw our conclu-
sion in Section 7.

2 Related Work
There are several corpora available for dialect
identification (Ali et al., 2016; Alsarsour et al.,
2018; Bouamor et al., 2018; Francom et al., 2014;
Johannessen et al., 2009; Kumar et al., 2018;
Samardžić et al., 2016; Tan et al., 2014; Zaidan
and Callison-Burch, 2011). Most of these cor-
pora have been proposed for languages that are
widely spread across the globe, e.g. Arabic (Ali
et al., 2016; Alsarsour et al., 2018; Bouamor et al.,
2018), Spanish (Francom et al., 2014), Indian (Ku-
mar et al., 2018) or German (Samardžić et al.,
2016). Among these, Arabic is the most popu-
lar, with a number of four data sets (Ali et al.,
2016; Alsarsour et al., 2018; Bouamor et al., 2018;
Zaidan and Callison-Burch, 2011), if not even
more.
Arabic. The Arabic Online news Commentary
(AOC) (Zaidan and Callison-Burch, 2011) is the
first available dialectal Arabic data set. Although
AOC contains 3.1 million comments gathered
from Egyptian, Gulf and Levantine news websites,
the authors labeled only around 0.05% of the data
set through the Amazon Mechanical Turk crowd-
sourcing platform. Ali et al. (2016) constructed
a data set of audio recordings, Automatic Speech
Recognition transcripts and phonetic transcripts of
Arabic speech collected from the Broadcast News
domain. The data set was used in the 2016, 2017
and 2018 VarDial Evaluation Campaigns (Mal-
masi et al., 2016; Zampieri et al., 2017, 2018).
Alsarsour et al. (2018) collected the Dialectal
ARabic Tweets (DART) data set, which contains
around 25K manually-annotated tweets. The data
set is well-balanced over five main groups of Ara-
bic dialects: Egyptian, Maghrebi, Levantine, Gulf
and Iraqi. Bouamor et al. (2018) presented a large
parallel corpus of 25 Arabic city dialects, which
was created by translating selected sentences from
the travel domain.



690

Other languages. The Nordic Dialect Corpus
(Johannessen et al., 2009) contains about 466K
spoken words from Denmark, Faroe Islands, Ice-
land, Norway and Sweden. The authors tran-
scribed each dialect by the standard official or-
thography of the corresponding country. Francom
et al. (2014) introduced the ACTIV-ES corpus,
which represents a cross-dialectal record of the
informal language use of Spanish speakers from
Argentina, Mexico and Spain. The data set is
composed of 430 TV or movie subtitle files. The
DSL corpus collection (Tan et al., 2014) comprises
news data from various corpora to emulate the
diverse news content across different languages.
The collection is comprised of six language vari-
ety groups. For each language, the collection con-
tains 18K training sentences, 2K validation sen-
tences and 1K test sentences. The ArchiMob cor-
pus (Samardžić et al., 2016) contains manually-
annotated transcripts of Swiss German speech col-
lected from four different regions: Basel, Bern,
Lucerne and Zurich. The data set was used in
the 2017 and 2018 VarDial Evaluation Campaigns
(Zampieri et al., 2017, 2018). Kumar et al. (2018)
constructed a corpus of five Indian dialects con-
sisting of 307K sentences. The samples were col-
lected by scanning, passing through an OCR en-
gine and proofreading printed stories, novels and
essays from books, magazines or newspapers.
Romanian. To our knowledge, the only em-
pirical study on Romanian dialect identification
was conducted by Ciobanu and Dinu (2016). In
their work, Ciobanu and Dinu (2016) used only a
short list of 108 parallel words in a binary clas-
sification task in order to discriminate between
Daco-Romanian words versus Aromanian, Istro-
Romanian and Megleno-Romanian words. Differ-
ent from Ciobanu and Dinu (2016), we conduct a
large scale study on 33K documents that contain a
total of about 10 million tokens.

3 MOROCO
In order to build MOROCO, we collected text
samples from the top five most popular news web-
sites in Romania and the Republic of Moldova, re-
spectively. Since news websites in the two coun-
tries belong to different Internet domains, the text
samples can be automatically labeled with the cor-
responding dialect. We selected news from six dif-
ferent topics, for which we found at least 2000 text
samples in both dialects. For each dialect, we il-
lustrate the distribution of text samples per topic

Figure 2: The distribution of text samples per topic for
the Moldavian and the Romanian dialects, respectively.
Best viewed in color.

in Figure 2. In both countries, we notice that the
most popular topics are finance and politics, while
the least popular topics are culture and science.
The distribution of topics for the two dialects is
mostly similar, but not very well-balanced. For in-
stance, the number of Moldavian politics samples
(5154) is about six times higher than the number
of Moldavian science samples (877). However,
MOROCO is well-balanced when it comes to the
distribution of samples per dialect, since we were
able to collect 15403 Moldavian text samples and
18161 Romanian text samples.

It is important to note that, in order to obtain the
text samples, we removed all HTML tags and re-
placed consecutive space characters with a single
space character. We further processed the sam-
ples in order to eliminate named entities. Previ-
ous research (Abu-Jbara et al., 2013; Nicolai and
Kondrak, 2014) found that named entities such as
country names or cities can provide clues about
the native language of English learners. We de-
cided to remove named entities in order to prevent
classifiers from taking the decision based on fea-
tures that are not truly indicative of the dialects or
the topics. For example, named entities represent-
ing city names in Romania or Moldova can pro-
vide clues about the dialect, while named entities
representing politicians or football players names
can provide clues about the topic. The identified
named entities are replaced with the token $NE$.
In the experiments, we present results before and
after named entity removal, in order to illustrate
the effect of named entities.

In order to allow proper comparison in future
research, we divided MOROCO into a training, a
validation and a test set. We used stratified sam-
pling in order to produce a split that preserves the
distribution of dialects and topics across all sub-
sets. Table 1 shows some statistics of the number



691

Set #samples #tokens

Training 21,719 6,705,334
Validation 5,921 1,826,818
Test 5,924 1,850,977
Total 33,564 10,383,129

Table 1: The number of samples (#samples) and the
number of tokens (#tokens) contained in the training,
validation and test sets included in our corpus.

of samples as well as the number of tokens in each
subset. We note that the entire corpus contains
33564 samples with more than 10 million tokens
in total. On average, there are about 309 tokens
per sample.

Since we provide both dialectal and category la-
bels for each sample, we can perform several tasks
on MOROCO:
• Binary classification by dialect – the task is to

discriminate between the Moldavian and the
Romanian dialects.
• Moldavian (MD) intra-dialect multi-class

categorization by topic – the task is to clas-
sify the samples written in the Moldavian di-
alect into six topics.
• Romanian (RO) intra-dialect multi-class cat-

egorization by topic – the task is to classify
the samples written in the Romanian dialect
into six topics.
• MD→RO cross-dialect multi-class catego-

rization by topic – the task is to classify the
samples written in the Romanian dialect into
six topics, using a model trained on samples
written in the Moldavian dialect.
• RO→MD cross-dialect multi-class catego-

rization by topic – the task is to classify the
samples written in the Moldavian dialect into
six topics, using a model trained on samples
written in the Romanian dialect.

4 Methods
String kernels. Kernel functions (Shawe-Taylor
and Cristianini, 2004) capture the intuitive no-
tion of similarity between objects in a specific do-
main. For example, in text mining, string ker-
nels can be used to measure the pairwise sim-
ilarity between text samples, simply based on
character n-grams. Various string kernel func-
tions have been proposed to date (Ionescu et al.,
2014; Lodhi et al., 2002; Shawe-Taylor and Cris-
tianini, 2004). Recently, the presence bits string
kernel and the histogram intersection kernel ob-
tained state-of-the-art results in a broad range of

text classification tasks such as dialect identifi-
cation (Butnaru and Ionescu, 2018; Ionescu and
Butnaru, 2017; Ionescu and Popescu, 2016), na-
tive language identification (Ionescu et al., 2016;
Ionescu and Popescu, 2017), sentiment analysis
(Giménez-Pérez et al., 2017; Ionescu and Butnaru,
2018; Popescu et al., 2017) and automatic essay
scoring (Cozma et al., 2018). In this paper, we
opt for the presence bits string kernel, which al-
lows us to derive the primal weights and analyze
the most discriminative features, as explained by
Ionescu et al. (2016). For two strings over an al-
phabet Σ, x, y ∈ Σ∗, the presence bits string ker-
nel is formally defined as:

k0/1n (x, y) =
∑
s∈Σn

ins(x) · ins(y),

where ins(x) is 1 if string s occurs as a substring
in x, and 0 otherwise. In our empirical study, we
experiment with character n-grams in a range, and
employ the Kernel Ridge Regression (KRR) bi-
nary classifier. During training, KRR finds the
vector of weights that has both small empirical
error and small norm in the Reproducing Kernel
Hilbert Space generated by the kernel function.
The ratio between the empirical error and the norm
of the weight vector is controlled through the reg-
ularization parameter λ.

Character-level CNN. Convolutional networks
(LeCun et al., 1998; Krizhevsky et al., 2012) have
been employed for solving many NLP tasks such
as part-of-speech tagging (Santos and Zadrozny,
2014), text categorization (Johnson and Zhang,
2015; Kim, 2014; Zhang et al., 2015), dialect iden-
tification (Ali, 2018; Belinkov and Glass, 2016),
machine translation (Gehring et al., 2017) and lan-
guage modeling (Dauphin et al., 2017; Kim et al.,
2016). Many CNN-based methods rely on words,
the primary reason for this being the aid given by
word embeddings (Mikolov et al., 2013; Penning-
ton et al., 2014) and their ability to learn seman-
tic and syntactic latent features. Trying to elim-
inate the pre-trained word embeddings from the
pipeline, some researchers have decided to build
end-to-end models using characters as input, in or-
der to solve text classification (Zhang et al., 2015;
Belinkov and Glass, 2016) or language modeling
tasks (Kim et al., 2016). At the character-level, the
model can learn unusual character sequences such
as misspellings or take advantage of unseen words
during test time. This appears to be particularly
helpful in dialect identification, since some state-



692

Input

Embedding Layer

Convolution Block

Convolution Block 

Convolution Block 

Fully-Connected Block

Fully-Connected Block

Fully-Connected Layer

Output

SE Block 

SE Block 

SE Block 

Input

Embedding Layer

Convolution Block 

Convolution Block 

Convolution Block 

Fully-Connected Block

Fully-Connected Block

Fully-Connected Layer

Output

Figure 3: Left: The architecture of the base-
line character-level CNN composed of seven blocks.
Right: The modified CNN architecture, which in-
cludes a Squeeze-and-Excitation block after each con-
volutional block.

of-the-art dialect identification methods (Butnaru
and Ionescu, 2018; Ionescu and Butnaru, 2017)
use character n-grams as features.

In this paper, we draw our inspiration from
Zhang et al. (2015) in order to design a lightweight
character-level CNN architecture for dialect iden-
tification. One way proposed by Zhang et al.
(2015) to represent characters in a character-level
CNN is to map every character from an alphabet of
size t to a discrete value using a 1-of-t encoding.
For example, having the alphabet Σ = {a, b, c},
the encoding for the character a is 1, for b is 2,
and for c is 3. Each character from the input text
is encoded, and only a fixed size l of the input is
kept. In our case, we keep the first l = 5000 char-
acters, zero-padding the documents that are under
length. We compose an alphabet of 105 characters
that includes uppercase and lowercase characters,
Moldavian and Romanian diacritics (such as ă, â,
ı̂, ş and ţ), digits, and 33 other symbol characters.
Characters that do not appear in the alphabet are
encoded as a blank character.

As illustrated in the left-hand side of Figure

3, our architecture is seven blocks deep, contain-
ing one embedding layer, three convolutional and
max-pooling blocks, and three fully-connected
blocks. The first two convolutional layers are
based on one-dimensional filters of size 7, the third
one being based on one-dimensional filters of size
3. A thresholded Rectified Linear Units (ReLU)
activation function (Nair and Hinton, 2010) fol-
lows each convolutional layer. The max-pooling
layers are based on one-dimensional filters of size
3 with stride 3. After the third convolutional
block, the activation maps pass through two fully-
connected blocks having thresholded ReLU acti-
vations. Each of these two fully-connected blocks
is followed by a dropout layer with the dropout
rate of 0.5. The last fully-connected layer is fol-
lowed by softmax, which provides the final output.
All convolutional layers have 128 filters, and the
threshold used for the thresholded ReLU is 10−6.
The network is trained with the Adam optimizer
(Kingma and Ba, 2015) using categorical cross-
entropy as loss function.

Squeeze-and-Excitation Networks. Hu et al.
(2018) argued that the convolutional filters close to
the input layer are not aware of the global appear-
ance of the objects in the input image, as they op-
erate at the local level. To alleviate this problem,
Hu et al. (2018) proposed to insert Squeeze-and-
Excitation blocks after each convolutional block
that is closer to the network’s input. The SE
blocks are formed of two layers, squeeze and ex-
citation. The activation maps of a given convolu-
tional block are first passed through the squeeze
layer, which aggregates the activation maps across
the spatial dimension in order to produce a chan-
nel descriptor. This layer can be implemented
through a global average pooling operation. In
our case, the size of the output after the squeeze
operation is 1 × 128, since our convolutional lay-
ers are one-dimensional and each layer contains
d = 128 filters. The resulting channel descrip-
tor enables information from the global receptive
field of the network to be leveraged by the lay-
ers near the network’s input. The squeeze layer
is followed by an excitation layer based on a self-
gating mechanism, which aims to capture channel-
wise dependencies. The self-gating mechanism is
implemented through two fully-connected layers,
the first being followed by ReLU activations and
the second being followed by sigmoid activations,
respectively. The first fully-connected layer acts



693

Figure 4: Dialect classification results on the validation set provided by the KRR classifier based on the presence
bits string kernel with n-grams in the range 5-8. Results are reported for various λ values from 10−3 to 10−6. Best
viewed in color.

as a bottleneck layer, reducing the input dimen-
sion (given by the number of filters d) with a re-
duction ratio r. This is achieved by assigning d/r
units to the bottleneck layer. The second fully-
connected layer increases the size of the output
back to 1×128. Finally, the activation maps of the
preceding convolutional block are then reweighted
(using the 1 × 128 outputs provided by the exci-
tation layer as weights) to generate the output of
the SE block, which can then be fed directly into
subsequent layers. Thus, SE blocks are just alter-
native pathways designed to recalibrate channel-
wise feature responses by explicitly modeling in-
terdependencies between channels. We insert SE
blocks after each convolutional block, as illus-
trated in the right-hand side of Figure 3.

5 Experiments

Parameter tuning. In order to tune the parame-
ters of each model, we used the MOROCO valida-
tion set. We first carried out a set of preliminary
dialect classification experiments to determine the
optimal choice of n-grams length for the presence
bits string kernel and the regularization parame-
ter λ of the KRR classifier. We present results for
these preliminary experiments in Figure 4. We
notice that both λ = 10−4 and λ = 10−5 are
good regularization choices, with λ = 10−5 be-
ing slightly better for all n-grams lengths between
5 and 8. Although 6-grams, 7-grams and 8-grams
attain almost equally good results, the best choice
according to the validation results is to use 6-
grams. Therefore, in the subsequent experiments,
we employ the presence bits string kernel based on
n-grams of length 6 and KRR with λ = 10−5.

For the baseline CNN, we set the learning rate
to 5 · 10−4 and use mini-batches of 128 samples

during training. We use the same parameters for
the SE network. Both deep networks are trained
for 50 epochs. For the SE blocks, we set the re-
duction ratio to r = 64, which results in a bottle-
neck layer with two neurons. We also tried lower
reduction ratios, e.g. 32 and 16, but we obtained
lower performance for these values.

Results. In Table 2 we present the accuracy, the
weighted F1-scores and the macro-averaged F1-
scores obtained by the three classification models
(string kernels, CNN and SE networks) for all the
classification tasks, on the validation set as well as
the test set. Regarding the binary classification by
dialect task, we notice that all models attain good
results, above 90%. SE blocks bring only minor
improvements over the baseline CNN. Our deep
models, CNN and CNN+SE, attain results around
93%, while the string kernels obtain results above
94%. We thus conclude that written text samples
from the Moldavian and the Romanian dialects
can be accurately discriminated by both shallow
and deep learning models. This answers our first
question from Section 1.

Regarding the Moldavian intra-dialect 6-way
categorization (by topic) task, we notice that string
kernels perform quite well in comparison with
the CNN and the CNN+SE models. In terms of
the macro-averaged F1 scores, SE blocks bring
improvements higher than 1% over the baseline
CNN. In the MD→RO cross-dialect 6-way cate-
gorization task, our models attain the lowest per-
formance on the Romanian test set. We would
like to note that in both cross-dialect settings, we
use the validation set from the same dialect as the
training set, in order to prevent any use of infor-
mation about the test dialect during training. In
other words, the settings are intra-dialect with re-



694

Task Method Validation Test
accuracy weighted F1 macro F1 accuracy weighted F1 macro F1

Binary KRR + k0/16 94.21 94.20 94.15 94.13 94.11 94.06
classification CNN 93.00 93.00 92.95 92.75 92.76 92.71

by dialect CNN + SE 93.02 93.01 92.95 92.99 92.98 92.93
MD KRR + k0/16 92.49 92.46 90.45 92.68 92.63 90.57

categorization CNN 85.42 85.25 79.28 83.92 83.73 76.82
(by topic) CNN + SE 86.23 85.97 80.51 84.39 84.01 77.85
MD→RO KRR + k0/16 92.49 92.46 90.45 68.21 67.59 67.59

categorization CNN 85.42 85.25 79.28 55.04 56.27 53.67
(by topic) CNN + SE 86.23 85.97 80.51 56.31 57.01 53.85

RO KRR + k0/16 74.38 74.49 77.68 74.98 75.11 78.76
categorization CNN 68.04 67.10 63.84 68.14 67.43 64.98

(by topic) CNN + SE 68.76 68.67 67.74 69.04 69.07 68.77
RO→MD KRR + k0/16 74.38 74.49 77.68 82.31 82.17 75.47

categorization CNN 68.04 67.10 63.84 72.49 71.60 62.70
(by topic) CNN + SE 68.76 68.67 67.74 74.84 74.87 67.42

Table 2: Accuracy rates, weighted F1 scores and macro-averaged F1-scores (in %) for the five evaluation tasks:
binary classification by dialect, Moldavian intra-dialect 6-way categorization (by topic), MD→RO cross-dialect 6-
way categorization, Romanian (RO) intra-dialect 6-way categorization, and RO→MD cross-dialect 6-way catego-
rization. Results are reported for three baseline models: KRR based on the presence bits string kernel (KRR+k0/16 ),
convolutional neural networks (CNN), and Squeeze-and-Excitation convolutional neural networks (CNN+SE).

spect to the validation set and cross-dialect with
respect to the test set. The Romanian intra-dialect
6-way categorization task seems to be much more
difficult than the Moldavian intra-dialect catego-
rization task, since all models obtain scores that
are roughly 20% lower. In terms of the macro-
averaged F1 scores, SE blocks bring improve-
ments of around 4% over the baseline CNN. How-
ever, the results of CNN+SE are still much un-
der those of the presence bits string kernel. Re-
garding the RO→MD cross-dialect 6-way cate-
gorization task, we find that the models learned
on the Romanian training set obtain better results
on the Moldavian (cross-dialect) test set than on
the Romanian (intra-dialect) test set. Once again,
this provides additional evidence that the 6-way
categorization by topic task is more difficult for
Romanian than for Moldavian. In all the intra-
dialect or cross-dialect 6-way categorization tasks,
we observe a high performance gap between deep
and shallow models. These results are consis-
tent with the recent reports of the VarDial evalu-
ation campaigns (Malmasi et al., 2016; Zampieri
et al., 2017, 2018), which point out that shallow
approaches such as string kernels (Butnaru and
Ionescu, 2018; Ionescu and Butnaru, 2017) sur-
pass deep models in dialect and similar language
discrimination tasks. Although deep models ob-
tain generally lower results, our proposal of in-
tegrating Squeeze-and-Excitation blocks seems to
be a steady step towards improving CNN models

Task NER Test
accuracy weighted F1 macro F1

Classification No 95.61 95.60 95.56
by dialect Yes 94.13 94.11 94.06

MD No 93.23 93.19 91.36
categorization Yes 92.68 92.63 90.57

MD→RO No 68.80 68.23 68.49
categorization Yes 68.21 67.59 67.59

RO No 76.07 76.19 80.10
categorization Yes 74.98 75.11 78.76

RO→MD No 82.57 82.46 76.00
categorization Yes 82.31 82.17 75.47

Table 3: Accuracy rates, weighted F1 scores and
macro-averaged F1-scores (in %) of the KRR based on
the presence bits string kernel for the five evaluation
tasks, before and after named entity removal (NER).

for language identification, as SE blocks improve
performance across all the experiments presented
in Table 2, and, in some cases, the performance
gains are considerable.

6 Discussion

Named entity removal. In Table 3, we presents
comparative results before and after named entity
removal (NER). We selected only the KRR based
on the presence bits string kernel for this compar-
ative study, since it provides the best performance
among the considered baselines. The experiment
reveals that named entities can artificially raise
the performance by more than 1% in some cases,
which is consistent with observations in previous
works (Abu-Jbara et al., 2013; Nicolai and Kon-



695

NER Top 6-grams for culture Top 6-grams for finance Top 6-grams for politics
original translation original translation original translation
[teatru] theater [econom]ie economy [. PSD ] Social-Democrat Party
[ scenă] scene [achita]t payed [parlam]ent parliament

No [Eurovi]sion Eurovision contest [tranza]cţie transaction Liviu D[ragnea] ex-leader of PSD
[scriit]or writer di[n Mold]ova of Moldova Igor[ Dodon] president of Moldova

Euro[vision] Eurovision contest Un[iCredi]t UniCredit Bank Dacian [Cioloş] ex-prime minster of Romania
[muzică] music [ bănci] banks [politi]ca the politics
[ piesă] piece [monede] currencies [preşed]inte president

Yes [artist] artist [afacer]i business [primar] mayor
[actoru]l the actor [export]uri exports p[artidu]l the party

s[pectac]ol show p[roduse] products [democr]aţie democracy
Top 6-grams for science Top 6-grams for sports Top 6-grams for tech

[studiu] study [Simona] Halep a tennis player [Intern]et Internet
ş[tiinţă] science [campio]n champion Fac[cebook] Facebook

No [ NASA ] NASA Simona[ Halep] a tennis player Mol[dtelec]om telecom operator in Moldova
Max [Planck] Max Planck o[limpic] Olympic com[unicaţ]ii communications

[Pămı̂nt] Earth [echipe] teams [ telev]iziune television
[cercet]are research [fotbal] football [maşini] cars

[astron]omie astronomy [meciul] the match [utiliz]ator user
Yes [planet]a the planet [jucăto]r player t[elefon] telephone

[univer]sitatea the university [antren]orul the coach [ compa]nie company
[teorie] theory [clubul] the club [tehnol]ogie technology

Table 5: Examples of n-grams from the six different categories in MOROCO, that are weighted as more discrim-
inative by the KRR based on the presence bits string kernel, before and after named entity removal (NER). The
n-grams are placed between squared brackets and highlighted in bold. The n-grams are posed inside words and
translated to English.

NER Top 6-grams for MD Top 6-grams for RO
original translation original translation

[Pămı̂nt] Earth [Români]a Romania
[Moldov]a Moldova n[ews.ro] a website

No [cı̂teva] some [Pământ] Earth
M[oldova] Moldova Nicu[lescu ] family name
cuv[ı̂ntul ] the word [Bucure]şti Bucharest

[ sı̂nt ] am / are [ român]esc Romanian
[ cı̂nd ] when [ judeţ] county

Yes [decı̂t ] than [ când ] when
t[enisme]n tennis player [ firme] companies

[ pı̂nă ] until [ vorbi] talk

Table 4: Examples of n-grams from the Moldavian
and the Romanian dialects, that are weighted as more
discriminative by the KRR based on the presence bits
string kernel, before and after named entity removal
(NER). The n-grams are placed between squared brack-
ets and highlighted in bold. The n-grams are posed in-
side words and translated to English.

drak, 2014).
Discriminative features. In order to understand
why the KRR based on the presence bits string ker-
nel works so well in discriminating the Moldavian
and the Romanian dialects, we conduct an analy-
sis of some of the most discriminative features (n-
grams), which are listed in Table 4. When named
entities are left in place, the classifier chooses the
country names (Moldova and Romania) or the cap-
ital city of Romania (Bucharest) as discriminative
features. When named entities are removed, it

seems that Moldavian words that contain the letter
‘ı̂’ inside, e.g. ‘cı̂nd’, are discriminative, since in
Romanian, the letter ‘ı̂’ is only used at the begin-
ning of a word (inside Romanian words, the same
sound is denoted by ‘â’, e.g. ‘când’). While Mol-
davian writers prefer to use ‘tenismen’ to denote
‘tennis player’, Romanians prefer to use ‘jucător
de tenis’ for the same concept. Although both
terms, ‘tenismen’ and ‘jucător de tenis’, are under-
stood in Romania and the Republic of Moldova,
our analysis reveals that preference for one term
or the other is not the same.

In a similar manner, we look at examples of
features weighted as discriminative by the KRR
based on the presence bits string kernel for cat-
egorization by topic. Table 5 lists discrimina-
tive n-grams for all the six categories inside MO-
ROCO, before and after NER. When named en-
tities are left in place, we notice that the KRR
classifier selects some interesting named entities
as discriminative. For example, news in the poli-
tics domain make a lot of references to politicians
such as Liviu Dragnea (the ex-leader of the Social-
Democrat Party in Romania), Igor Dodon (the cur-
rent president of Moldova) or Dacian Cioloş (an
ex-prime minster of Romania). News that men-
tion NASA (the National Aeronautics and Space
Administration) or the Max Planck institute are



696

Corpus #dialects #tokens Accuracy
per sample

Romanian (ours) 2 309.3 94.13
Arabic 5 22.6 76.27

German 4 7.9 66.36

Table 6: Accuracy rates (in %) of the KRR based on
string kernels for Romanian dialect identification ver-
sus Arabic (Ali et al., 2016) and German (Samardžić
et al., 2016) dialect identification, respectively. The re-
sults for the Arabic and German dialect identification
tasks are taken from our previous work (Ionescu and
Butnaru, 2017). For each corpus, we include the num-
ber of dialects (#dialects) and the average number of
tokens in each sample (#tokens per sample).

likely to be classified in the science domain by
KRR+k0/16 . After Simona Halep reached the first
place in the Women’s Tennis Association (WTA)
ranking, a lot of sports news that report on her per-
formances started to appear, which determines the
classifier to choose ‘Simona’ or ‘ Halep’ as dis-
criminative n-grams. References to the Internet or
the Facebook social network indicate that the re-
spective news are from the tech domain, accord-
ing to our classifier. When named entities are re-
moved, KRR seems to choose plausible words for
each category. For instance, it relies on n-grams
such as ‘muzică’ or ‘artist’ to classify a news sam-
ple into the culture domain, or on n-grams such
as ‘campion’ or ‘fotbal’ to classify a news sample
into the sports domain.
Difficulty with respect to other dialects. In our
previous work (Ionescu and Butnaru, 2017), we
have applied the KRR based on string kernels
for Arabic dialect identification and German di-
alect identification. In the case of Arabic, we
have reached performance levels of around 76%
for discriminating between five dialects. In the
same time, we have reached performance levels
of around 66% for discriminating between four
German dialects. As shown in Table 6, it seems
to be much easier to discriminate between Roma-
nian dialects, as the accuracy is near 94%. How-
ever, there are some important differences be-
tween these tasks. First of all, the random chance
baseline is much high for our binary classification
task, as we only have to choose between two di-
alects: Moldavian or Romanian. Second of all,
the number of tokens per sample is much higher
for the samples in our corpus compared to the sam-
ples provided in the Arabic (Ali et al., 2016) or the
German (Samardžić et al., 2016) corpora. Before

drawing the conclusion that Romanian dialects are
easier to discriminate than other dialects, we have
to make sure that the experiments are conducted
in similar conditions. We leave this discussion for
future work.

7 Conclusion
In this paper, we presented a novel and large cor-
pus of Moldavian and Romanian dialects. We
also introduced Squeeze-and-Excitation networks
to the NLP domain, performing comparative ex-
periments using shallow and deep state-of-the-art
baselines. We would like to stress out that the
methods presented in this paper are only provided
as baselines in order to enable comparisons in fu-
ture work. Our intention was not that of providing
top accuracy rates on the MOROCO corpus. In
this context, we acknowledge that better accuracy
rates can be obtained by combining string ker-
nels using a range of n-grams, as we have already
shown for other dialects and tasks in our previous
works (Butnaru and Ionescu, 2018; Cozma et al.,
2018; Ionescu and Butnaru, 2017, 2018). Another
option for improving performance is to combine
string kernels and neural networks into an ensem-
ble model. We leave these ideas for future explo-
ration.

Although Romanian and Moldavian are sup-
posed to be hard to discriminate, since Romania
and the Republic of Moldova share the same lit-
erary standard (Minahan, 2013), the empirical re-
sults seem to point in the other direction, to our
surprise. However, we should note that the high
accuracy rates attained by the proposed classifiers
can be explained through a combination of two
factors. First of all, the text samples are formed of
309 tokens on average, being at least an order of
magnitude longer than samples in typical dialectal
corpora (Ali et al., 2016; Samardžić et al., 2016).
Second of all, the text samples can be discrimi-
nated in large part due to different word choices,
as shown in the analysis of the most discrimina-
tive features provided in Section 5. Word prefer-
ence seems to become easily distinguishable when
news samples of around 309 tokens (multiple sen-
tences) are used. In future work, we aim to deter-
mine if the same level of accuracy can be obtained
when single sentences will be used as samples for
training and testing.

Acknowledgments

We thank reviewers for their useful comments.



697

References
Amjad Abu-Jbara, Rahul Jha, Eric Morley, and

Dragomir Radev. 2013. Experimental Results on the
Native Language Identification Shared Task. In Pro-
ceedings of BEA-8, pages 82–88.

Ahmed Ali, Najim Dehak, Patrick Cardinal, Sameer
Khurana, Sree Harsha Yella, James Glass, Peter
Bell, and Steve Renals. 2016. Automatic Dialect
Detection in Arabic Broadcast Speech. In Proceed-
ings of INTERSPEECH, pages 2934–2938.

Ahmed Ali, Stephan Vogel, and Steve Renals. 2017.
Speech Recognition Challenge in the Wild: Arabic
MGB-3. In Proceedings of ASRU, pages 316–322.

Mohamed Ali. 2018. Character level convolutional
neural network for arabic dialect identification. In
Proceedings of VarDial, pages 122–127.

Israa Alsarsour, Esraa Mohamed, Reem Suwaileh, and
Tamer Elsayed. 2018. DART: A Large Dataset of
Dialectal Arabic Tweets. In Proceedings of LREC,
pages 3666–3670.

Yonatan Belinkov and James Glass. 2016. A
Character-level Convolutional Neural Network for
Distinguishing Similar Languages and Dialects. In
Proceedings of VarDial, pages 145–152.

Houda Bouamor, Nizar Habash, Mohammad Salameh,
Wajdi Zaghouani, Owen Rambow, Dana Abdul-
rahim, Ossama Obeid, Salam Khalifa, Fadhl Eryani,
Alexander Erdmann, and Kemal Oflazer. 2018. The
MADAR Arabic Dialect Corpus and Lexicon. In
Proceedings of LREC, pages 3387–3396.

Andrei M. Butnaru and Radu Tudor Ionescu. 2018.
UnibucKernel Reloaded: First Place in Arabic Di-
alect Identification for the Second Year in a Row. In
Proceedings of VarDial, pages 77–87.

Alina Maria Ciobanu and Liviu P. Dinu. 2016. A Com-
putational Perspective on the Romanian Dialects. In
Proceedings of LREC, pages 3281–3286.

Ion Coteanu, Gheorghe Bolocan, and Matilda Caragiu
Marioţeanu. 1969. Istoria Limbii Române (History
of the Romanian Language), volume II. Romanian
Academy, Bucharest, Romania.

Mădălina Cozma, Andrei M. Butnaru, and Radu Tudor
Ionescu. 2018. Automated essay scoring with string
kernels and word embeddings. In Proceedings of
ACL, pages 503–509.

Yann Dauphin, Angela Fan, Michael Auli, and David
Grangier. 2017. Language Modeling with Gated
Convolutional Networks. In Proceedings of ICML,
pages 933–941.

Jerid Francom, Mans Hulden, Adam Ussishkin, Juli-
eta Fumagalli, Mikel Santesteban, and Julio Serrano.
2014. ACTIV-ES: A comparable, cross-dialect cor-
pus of ’everyday’ Spanish from Argentina, Mexico,
and Spain. In Proceedings of LREC, pages 1733–
1737.

Jonas Gehring, Michael Auli, David Grangier, and
Yann Dauphin. 2017. A Convolutional Encoder
Model for Neural Machine Translation. In Proceed-
ings of ACL, pages 123–135.

Rosa M. Giménez-Pérez, Marc Franco-Salvador, and
Paolo Rosso. 2017. Single and Cross-domain Polar-
ity Classification using String Kernels. In Proceed-
ings of EACL, pages 558–563.

Jie Hu, Li Shen, and Gang Sun. 2018. Squeeze-
and-Excitation Networks. In Proceedings of CVPR,
pages 7132–7141.

Radu Tudor Ionescu and Andrei M. Butnaru. 2017.
Learning to Identify Arabic and German Dialects us-
ing Multiple Kernels. In Proceedings of VarDial,
pages 200–209.

Radu Tudor Ionescu and Andrei M. Butnaru. 2018.
Improving the results of string kernels in sentiment
analysis and Arabic dialect identification by adapt-
ing them to your test set. In Proceedings of EMNLP,
pages 1084–1090.

Radu Tudor Ionescu and Marius Popescu. 2016.
UnibucKernel: An Approach for Arabic Dialect
Identification based on Multiple String Kernels. In
Proceedings of VarDial, pages 135–144.

Radu Tudor Ionescu and Marius Popescu. 2017. Can
string kernels pass the test of time in native language
identification? In Proceedings of BEA-12, pages
224–234.

Radu Tudor Ionescu, Marius Popescu, and Aoife
Cahill. 2014. Can characters reveal your native lan-
guage? A language-independent approach to native
language identification. In Proceedings of EMNLP,
pages 1363–1373.

Radu Tudor Ionescu, Marius Popescu, and Aoife
Cahill. 2016. String kernels for native language
identification: Insights from behind the curtains.
Computational Linguistics, 42(3):491–525.

Janne Bondi Johannessen, Joel James Priestley, Kristin
Hagen, Tor Anders Åfarli, and Øystein Alexander
Vangsnes. 2009. The Nordic Dialect Corpus–an ad-
vanced research tool. In Proceedings of NODAL-
IDA, pages 73–80.

Rie Johnson and Tong Zhang. 2015. Effective Use of
Word Order for Text Categorization with Convolu-
tional Neural Networks. In Proceedings of NAACL,
pages 103–112.

Yoon Kim. 2014. Convolutional Neural Networks for
Sentence Classification. In Proceedings of EMNLP,
pages 1746–1751.

Yoon Kim, Yacine Jernite, David Sontag, and Alexan-
der M. Rush. 2016. Character-Aware Neural Lan-
guage Models. In Proceedings of AAAI, pages
2741–2749.



698

Diederik P. Kingma and Jimmy Ba. 2015. Adam: A
method for stochastic optimization. In Proceedings
of ICLR.

Alex Krizhevsky, Ilya Sutskever, and Geoffrey E. Hin-
ton. 2012. ImageNet Classification with Deep Con-
volutional Neural Networks. In Proceedings of
NIPS, pages 1106–1114.

Ritesh Kumar, Bornini Lahiri, Deepak Alok, Atul Kr.
Ojha, Mayank Jain, Abdul Basit, and Yogesh Dawar.
2018. Automatic Identification of Closely-related
Indian Languages: Resources and Experiments. In
Proceedings of LREC.

Yann LeCun, Leon Bottou, Yoshua Bengio, and Pat-
trick Haffner. 1998. Gradient-based learning ap-
plied to document recognition. Proceedings of the
IEEE, 86(11):2278–2324.

Huma Lodhi, Craig Saunders, John Shawe-Taylor,
Nello Cristianini, and Christopher J. C. H. Watkins.
2002. Text classification using string kernels. Jour-
nal of Machine Learning Research, 2:419–444.

Shervin Malmasi, Marcos Zampieri, Nikola Ljubešić,
Preslav Nakov, Ahmed Ali, and Jörg Tiedemann.
2016. Discriminating between Similar Languages
and Arabic Dialect Identification: A Report on the
Third DSL Shared Task. In Proceedings of VarDial,
pages 1–14.

Tomas Mikolov, Ilya Sutskever, Kai Chen, Gregory S.
Corrado, and Jeffrey Dean. 2013. Distributed Rep-
resentations of Words and Phrases and their Com-
positionality. In Proceedings of NIPS, pages 3111–
3119.

James Minahan. 2013. Miniature Empires: A His-
torical Dictionary of the Newly Independent States.
Routledge.

Vinod Nair and Geoffrey E. Hinton. 2010. Rectified
Linear Units Improve Restricted Boltzmann Ma-
chines. In Proceedings of ICML, pages 807–814.

Garrett Nicolai and Grzegorz Kondrak. 2014. Does the
Phonology of L1 Show Up in L2 Texts? In Proceed-
ings of ACL, pages 854–859.

Vasile Pavel. 2008. Limba română – unitate ı̂n diver-
sitate (Romanian language – there is unity in diver-
sity). Romanian Laguage Journal, XVIII(9–10).

Jeffrey Pennington, Richard Socher, and Christo-
pher D. Manning. 2014. GloVe: Global Vectors for
Word Representation. In Proceedings of EMNLP,
pages 1532–1543.

Marius Popescu, Cristian Grozea, and Radu Tudor
Ionescu. 2017. HASKER: An efficient algorithm for
string kernels. Application to polarity classification
in various languages. In Proceedings of KES, pages
1755–1763.

Francisco Rangel, Paolo Rosso, Martin Potthast, and
Benno Stein. 2017. Overview of the 5th author pro-
filing task at PAN 2017: Gender and language vari-
ety identification in twitter. In Working Notes Papers
of the CLEF.

Tanja Samardžić, Yves Scherrer, and Elvira Glaser.
2016. ArchiMob–A corpus of spoken Swiss Ger-
man. In Proceedings of LREC, pages 4061–4066.

Cicero D. Santos and Bianca Zadrozny. 2014. Learning
character-level representations for part-of-speech
tagging. In Proceedings of ICML, pages 1818–1826.

John Shawe-Taylor and Nello Cristianini. 2004. Ker-
nel Methods for Pattern Analysis. Cambridge Uni-
versity Press.

Liling Tan, Marcos Zampieri, Nikola Ljubešic, and
Jörg Tiedemann. 2014. Merging Comparable Data
Sources for the Discrimination of Similar Lan-
guages: The DSL Corpus Collection. In Proceed-
ings of BUCC, pages 11–15.

Omar F. Zaidan and Chris Callison-Burch. 2011. The
Arabic Online Commentary Dataset: An Annotated
Dataset of Informal Arabic with High Dialectal Con-
tent. In Proceedings of ACL: HLT, volume 2, pages
37–41.

Marcos Zampieri, Shervin Malmasi, Nikola Ljubešić,
Preslav Nakov, Ahmed Ali, Jörg Tiedemann, Yves
Scherrer, and Noëmi Aepli. 2017. Findings of the
VarDial Evaluation Campaign 2017. In Proceedings
of VarDial, pages 1–15.

Marcos Zampieri, Shervin Malmasi, Preslav Nakov,
Ahmed Ali, Suwon Shon, James Glass, Yves Scher-
rer, Tanja Samardžić, Nikola Ljubešić, Jörg Tiede-
mann, Chris van der Lee, Stefan Grondelaers,
Nelleke Oostdijk, Antal van den Bosch, Ritesh Ku-
mar, Bornini Lahiri, and Mayank Jain. 2018. Lan-
guage Identification and Morphosyntactic Tagging:
The Second VarDial Evaluation Campaign. In Pro-
ceedings of VarDial, pages 1–17.

Xiang Zhang, Junbo Zhao, and Yann LeCun. 2015.
Character-level Convolutional Networks for Text
Classification. In Proceedings of NIPS, pages 649–
657.


