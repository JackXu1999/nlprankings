




































Connecting Language and Knowledge with Heterogeneous Representations for Neural Relation Extraction


Proceedings of NAACL-HLT 2019, pages 3201–3206
Minneapolis, Minnesota, June 2 - June 7, 2019. c©2019 Association for Computational Linguistics

3201

Connecting Language and Knowledge with Heterogeneous
Representations for Neural Relation Extraction

Peng Xu
Department of Computing Science

University of Alberta
Edmonton, Canada

pxu4@ualberta.ca

Denilson Barbosa
Department of Computing Science

University of Alberta
Edmonton, Canada

denilson@ualberta.ca

Abstract

Knowledge Bases (KBs) require constant up-
dating to reflect changes to the world they rep-
resent. For general purpose KBs, this is of-
ten done through Relation Extraction (RE), the
task of predicting KB relations expressed in
text mentioning entities known to the KB. One
way to improve RE is to use KB Embeddings
(KBE) for link prediction. However, despite
clear connections between RE and KBE, lit-
tle has been done toward properly unifying
these models systematically. We help close the
gap with a framework that unifies the learning
of RE and KBE models leading to significant
improvements over the state-of-the-art in RE.
The code is available at https://github.
com/billy-inn/HRERE.

1 Introduction

Knowledge Bases (KBs) contain structured infor-
mation about the world and are used in support
of many natural language processing applications
such as semantic search and question answering.
Building KBs is a never-ending challenge because,
as the world changes, new knowledge needs to
be harvested while old knowledge needs to be re-
vised. This motivates the work on the Relation Ex-
traction (RE) task, whose goal is to assign a KB
relation to a phrase connecting a pair of entities,
which in turn can be used for updating the KB.
The state-of-the-art in RE builds on neural mod-
els using distant (a.k.a. weak) supervision (Mintz
et al., 2009) on large-scale corpora for training.

A task related to RE is that of Knowledge Base
Embedding (KBE), which is concerned with rep-
resenting KB entities and relations in a vector
space for predicting missing links in the graph.
Aiming to leverage the similarities between these
tasks, Weston et al. (2013) were the first to show
that combining predictions from RE and KBE
models was beneficial for RE. However, the way

in which they combine RE and KBE predictions
is rather naive (namely, by adding those scores).
To the best of our knowledge, there have been no
systematic attempts to further unify RE and KBE,
particularly during model training.

We seek to close this gap with HRERE (Het-
erogeneous REpresentations for neural Relation
Extraction), a novel neural RE framework that
learns language and knowledge representations
jointly. Figure 1 gives an overview. HRERE’s
backbone is a bi-directional long short term mem-
ory (LSTM) network with multiple levels of atten-
tion to learn representations of text expressing re-
lations. The knowledge representation machinery,
borrowed from ComplEx (Trouillon et al., 2016),
nudges the language model to agree with facts in
the KB. Joint learning is guided by three loss func-
tions: one for the language representation, another
for the knowledge representation, and a third one
to ensure these representations do not diverge. In
effect, this contributes to HRERE’s generalization
power by preventing over-fitting by either model.

We build on state-of-the-art methods for learn-
ing the separate RE and KBE representations and
on learning tools that allow us to scale to a mod-
erately large training corpus. (We use a subset of
Freebase with 3M entities as our KB.) We vali-
date our approach on an established benchmark
against state-of-the-art methods for RE, observ-
ing not only that our base model significantly
outperforms previous methods, but also the fact
that jointly learning the heterogeneous representa-
tions consistently brings in improvements. To the
best of our knowledge, ours is the first principled
framework to combine and jointly learn hetero-
geneous representations from both language and
knowledge for the RE task.

Contributions. This paper describes and evalu-
ates a novel neural framework for jointly learning



3202

Figure 1: Workflow of the proposed framework.

representations for RE and KBE tasks that uses a
cross-entropy loss function to ensure both repre-
sentations are learned together, resulting in signif-
icant improvements over the current state-of-the-
art for the RE task.

2 Related Work

Recent neural models have been shown superior
to approaches using hand-crafted features for the
RE task. Among the pioneers, Zeng et al. (2015)
proposed a piecewise convolutional network with
multi-instance learning to handle weakly labeled
text mentions. Recurrent neural networks (RNN)
are another popular architecture (Wu et al., 2017).
Similar fast progress has been seen for the KBE
task for representing entities and relations in KBs
with vectors or matrices. Bordes et al. (2013) in-
troduced the influential translation-based embed-
dings (TransE), while Yang et al. (2014) lever-
aged latent matrix factorization in their DistMult
method. We build on ComplEx (Trouillon et al.,
2016), which extends DistMult into the complex
space and has been shown significantly better on
several benchmarks.

Weston et al. (2013) were the first to connect
RE and KBE models for the RE task. Their sim-
ple idea was to train the two models independently
and only combine them at inference time. While
they showed that combining the two models is bet-
ter than using the RE model alone, newer and bet-
ter models since then have obviated the net gains
of such a simple strategy (Xu and Barbosa, 2018).
We propose a much tighter integration of RE and
KBE models: we not only use them for predic-
tion, but also train them together, thus mutually
reinforcing one another.

Recently, many methods have been proposed to
use information from KBs to facilitate relation ex-
traction. Sorokin and Gurevych (2017) consid-

ered other relations in the sentential context while
predicting the target relation. Vashishth et al.
(2018) utilized additional side information from
KBs for improved RE. However, these methods
didn’t leverage KBE method to unify RE and KBE
in a principled way. Han et al. (2018) used a mu-
tual attention between KBs and text to perform
better on both RE and KBE, but their method was
still based on TransE (Bordes et al., 2013) which
can not fully exploit the advantage of the informa-
tion from KBs.

3 Background and Problem

The goal in the task of Relation Extraction is to
predict a KB relation that holds for a pair of enti-
ties given a set of sentences mentioning them (or
NA if no such relation exists). The input is a KB
Ψ with relation set RΨ, a set of relations of in-
terest R, R ⊆ RΨ, and an automatically la-
belled training dataset D obtained via distant su-
pervision. Given a sentence mentioning entities
h, t, the output is a relation r ∈ R that holds for
h, t or the catch-all relation NA if no such r exists.

Knowledge Base and Distant Supervision. As
customary, we denote a KB Ψ with relation
scheme RΨ as a set of triples TΨ = {(h, r, t) ∈
EΨ × RΨ × EΨ}, where EΨ is the set of enti-
ties of interest. Distant supervision exploits the
KB to automatically annotate sentences in a cor-
pus containing mentions of entities with the re-
lations they participate in. Formally, a labeled
dataset for relation extraction consists of fact
triples {(hi, ri, ti)}Ni=1 and a multi-set of extracted
sentences for each triple {Si}Ni=1, such that each
sentence s ∈ Si mentions both the head entity hi
and the tail entity ti.

Problem Statement. Given an entity pair (h, t)
and a set of sentences S mentioning them, the RE



3203

task is to estimate the probability of each relation
in R ∪ {NA}. Formally, for each relation r, we
want to predict P (r | h, t,S).

In practice, the input set of sentences S can have
arbitrary size. For the sake of computational effi-
ciency, we normalize the set size to a fixed number
T by splitting large sets and oversampling small
ones. We also restrict the length of each sentence
in the set by a constant L by truncating long sen-
tences and padding short ones.

4 Methodology

We now go over the details of our framework out-
lined in Figure 1 for unifying the learning of the
language and the knowledge representations used
for relation extraction. In a nutshell, we use LSTM
with attention mechanisms for language represen-
tation and we follow the approach of Trouillon
et al. (2016) for KB embedding.

4.1 Language Representation

Input Representation. For each word token, we
use pretrained word embeddings and randomly
initialized position embeddings (Zeng et al., 2014)
to project it into (dw + dp)-dimensional space,
where dw is the size of word embedding and dp
is the size of position embedding.
Sentence Encoder. For each sentence si, we ap-
ply a non-linear transformation to the vector rep-
resentation of si to derive a feature vector zi =
f(si; θ) given a set of parameters θ. In this paper,
we adopt bidirectional LSTM with ds hidden units
as f(si; θ) (Zhou et al., 2016).
Multi-level Attention Mechanisms. We em-
ploy attention mechanisms at both word-level and
sentence-level to allow the model to softly select
the most informative words and sentences dur-
ing training (Zhou et al., 2016; Lin et al., 2016).
With the learned language representation sL, the
conditional probability p(r|S; Θ(L)) is computed
through a softmax layer, where Θ(L) is the parame-
ters of the model to learn language representation.

4.2 Knowledge Representation

Following the score function φ and training pro-
cedure of Trouillon et al. (2016), we can get
the knowledge representations eh, wr, et ∈ Cdk .
With the knowledge representations and the scor-
ing function, we can obtain the conditional proba-

bility p(r|(h, t); Θ(G)) for each relation r:

p(r|(h, t); Θ(G)) = e
φ(eh,wr,et)∑

r′∈R∪{NA} e
φ(eh,wr′ ,et)

where Θ(G) corresponds to the knowledge repre-
sentations eh, wr, et ∈ Cdk . Since NA /∈ RΨ, we
use a randomized complex vector as wNA.

4.3 Connecting the Pieces
As stated, this paper seeks an elegant way of con-
necting language and knowledge representations
for the RE task. In order to achieve that, we use
separate loss functions (recall Figure 1) to guide
the language and knowledge representation learn-
ing and a third loss function that ties the predic-
tions of these models thus nudging the parameters
towards agreement.

The cross-entropy losses based on the language
and knowledge representations are defined as:

JL = −
1

N

N∑
i=1

log p(ri|Si; Θ(L)) (1)

JG = −
1

N

N∑
i=1

log p(ri|(hi, ti); Θ(G)) (2)

where N denotes the size of the training set. Fi-
nally, we use a cross-entropy loss to measure the
dissimilarity between two distributions, thus con-
necting them, and formulate model learning as
minimizing JD:

JD = −
1

N

N∑
i=1

log p(r∗i |Si; Θ(L)) (3)

where r∗i = arg maxr∈R∪{NA} p(r|(hi, ti); Θ(G)).

4.4 Model Learning
Based on Eq. 1, 2, 3, we form the joint optimiza-
tion problem for model parameters as

min
Θ
J = JL + JG + JD + λ‖Θ‖22 (4)

where Θ = Θ(L) ∪ Θ(G). The knowledge rep-
resentations are first trained on the whole KB in-
dependently and then used as the initialization for
the joint learning. We adopt the stochastic gradi-
ent descent with mini-batches and Adam (Kingma
and Ba, 2014) to update Θ, employing different
learning rates lr1 and lr2 on Θ(L) and Θ(G) re-
spectively



3204

4.5 Relation Inference
In order to get the conditional probability
p(r|(h, t),S; Θ), we use the weighed average to
combine the two distribution p(r|S; Θ(L)) and
p(r|(h, t); Θ(G)):

p(r|(h, t),S; Θ) = α ∗ p(r|S; Θ(L))
+(1− α) ∗ p(r|(h, t); Θ(G)).

(5)

where α is the combining weight of the weighted
average. Then, the predicted relation r̂ is

r̂ = argmax
r∈R∪{NA}

p(r|(h, t),S; Θ). (6)

5 Experiments

Datasets. We evaluate our model on the widely
used NYT dataset (Riedel et al., 2010) by align-
ing Freebase relations mentioned in the New York
Times Corpus. Articles from years 2005-2006 are
used for training while articles from 2007 are used
for testing. As our KB, we used a Freebase sub-
set with the 3M entities with highest degree (i.e.,
participating in most relations). Moreover, to pre-
vent the knowledge representation from memoriz-
ing the true relations for entity pairs in the test set,
we removed all entity pairs present in the NYT.
Evaluation Protocol: Following previous work
(Mintz et al., 2009), we evaluate our model us-
ing held-out evaluation which approximately mea-
sures the precision without time-consuming man-
ual evaluation. We report both Precision/Recall
curves and Precision@N (P@N) in our experi-
ments, ignoring the probability predicted for the
NA relation. Moreover, to evaluate each sentence
in the test set as in previous methods, we append
T copies of each sentence into S for each testing
sample.
Word Embeddings: In this paper, we used
the freely available 300-dimensional pre-trained
word embeddings distributed by Pennington et al.
(2014) to help the model generalize to words not
appearing in the training set.
Hyperparameter Settings: For hyperparameter
tuning, we randonly sampled 10% of the training
set as a development set. All the hyperparameters
were obtained by evaluating the model on the de-
velopment set. With the well-tuned hyperparam-
eter setting, we run each model five times on the
whole training set and report the average P@N.
For Precision/Recall curves, we just select the re-
sults from the first run of each model. For training,

learning rate on Θ(L) lr1 5 × 10−4
learning rate on Θ(K) lr2 1 × 10−5
size of word position embedding dp 25
state size for LSTM layers ds 320
input dropout keep probability pi 0.9
output dropout keep probability po 0.7
L2 regularization parameter λ 0.0003
combining weight parameter α 0.6

Table 1: Hyperparameter setting

we set the iteration number over all the training
data as 30. Values of the hyperparameters used in
the experiments can be found in Table 1.

Figure 2: The Precision/Recall curves of previous
state-of-the-art methods and our proposed framework.

P@N(%) 10% 30% 50%
Weston 79.3 68.6 60.9
HRERE-base 81.8 70.1 60.7
HRERE-naive 83.6 74.4 65.7
HRERE-full 86.1 76.6 68.1

Table 2: P@N of Weston and variants of our proposed
framework.

Methods Evaluated. We study three variants of
our framework: (1) HRERE-base: basic neural
model with local loss JL only; (2) HRERE-naive:
neural model with both local loss JL and global
loss JG but without the dissimilarities JD; (3)
HRERE-full: neural model with both local and
global loss along with their dissimilarities. We
compare against two previous state-of-the-art neu-
ral models, CNN+ATT and PCNN+ATT (Lin
et al., 2016). We also implement a baseline We-
ston based on the strategy following Weston et al.
(2013), namely to combine the scores computed



3205

Relation Textual Mention base naive full
contains Much of the middle east tension stems from the sense that shiite

power is growing, led by Iran.
0.311 0.864 0.884

place of birth Sometimes I rattle off the names of movie stars from Omaha:
Fred Astaire, Henry Fonda, Nick Nolte . . .

0.109 0.605 0.646

country Spokesmen for Germany and Italy in Washington said yester-
day that they would reserve comment until the report is formally
released at a news conference in Berlin today.

0.237 0.200 0.880

Table 3: Some examples in NYT corpus and the predicted probabilities of the true relations.

with the methods stated in this paper directly with-
out joint learning.

Analysis. Figure 2 shows the Precision/Recall
curves for all the above methods. As one can
see, HRERE-base significantly outperforms pre-
vious state-of-the-art neural models and Weston
over the entire range of recall. However, HRERE-
base performs worst compared to all other vari-
ants, while HRERE-full always performs best as
shown in Figure 2 and Table 2. This suggests that
introducing knowledge representation consistently
results in improvements, which validates our mo-
tivating hypothesis. HRERE-naive simply opti-
mizes both local and global loss at the same time
without attempting to connect them. We can see
that HRERE-full is not only consistently superior
but also more stable than HRERE-naive when the
recall is less than 0.1. One possible reason for
the instability is that the results may be dominated
by one of the representations and biased toward
it. This suggests that (1) jointly learning the het-
erogeneous representations bring mutual benefits
which are out of reach of previous methods that
learn each independently; (2) connecting hetero-
geneous representations can increase the robust-
ness of the framework.

Case Study. Table 3 shows two examples in the
testing data. For each example, we show the re-
lation, the sentence along with entity mentions
and the corresponding probabilities predicted by
HRERE-base and HRERE-full. The entity pairs in
the sentence are highlighted with bold formatting.

From the table, we have the following observa-
tions: (1) The predicted probabilities of three vari-
ants of our model in the table match the observa-
tions and corroborate our analysis. (2) From the
text of the two sentences, we can easily infer that
middle east contains Iran and Henry Fonda was
born in Omaha. However, HRERE-base fails to
detect these relations, suggesting that it is hard for
models based on language representations alone

to detect implicit relations, which is reasonable to
expect. With the help of KBE, the model can ef-
fectively identify implicit relations present in the
text. (3) It may happen that the relation cannot be
inferred by the text as shown in the last example.
It’s a common wrong labeled case caused by dis-
tant supervision. It is a case of an incorrectly la-
beled instance, a typical occurrence in distant su-
pervision. However, the fact is obviously true in
the KBs. As a result, HRERE-full gives the un-
derlying relation according to the KBs. This ob-
servation may point to one direction of de-noising
weakly labeled textual mentions generated by dis-
tant supervision.

6 Conclusion

This paper describes an elegant neural framework
for jointly learning heterogeneous representations
from text and from facts in an existing knowledge
base. Contrary to previous work that learn the two
disparate representations independently and use
simple schemes to integrate predictions from each
model, we introduce a novel framework using an
elegant loss function that allows the proper con-
nection between the the heterogeneous represen-
tations to be learned seamlessly during training.
Experimental results demonstrate that the pro-
posed framework outperforms previous strategies
to combine heterogeneous representations and the
state-of-the-art for the RE task. A closer inspec-
tion of our results show that our framework en-
ables both independent models to enhance each
other.

Acknowledgments

This work was supported in part by grants from the
Natural Sciences and Engineering Research Coun-
cil of Canada and a gift from Diffbot Inc.



3206

References

Antoine Bordes, Nicolas Usunier, Alberto Garcia-
Duran, Jason Weston, and Oksana Yakhnenko.
2013. Translating embeddings for modeling multi-
relational data. In Advances in neural information
processing systems, pages 2787–2795.

Xu Han, Zhiyuan Liu, and Maosong Sun. 2018. Neural
knowledge acquisition via mutual attention between
knowledge graph and text. In Thirty-Second AAAI
Conference on Artificial Intelligence.

Diederik Kingma and Jimmy Ba. 2014. Adam: A
method for stochastic optimization. arXiv preprint
arXiv:1412.6980.

Yankai Lin, Shiqi Shen, Zhiyuan Liu, Huanbo Luan,
and Maosong Sun. 2016. Neural relation extraction
with selective attention over instances. In ACL.

Mike Mintz, Steven Bills, Rion Snow, and Dan Juraf-
sky. 2009. Distant supervision for relation extrac-
tion without labeled data. In Proceedings of the
Joint Conference of the 47th Annual Meeting of the
ACL and the 4th International Joint Conference on
Natural Language Processing of the AFNLP: Vol-
ume 2-Volume 2, pages 1003–1011. Association for
Computational Linguistics.

Jeffrey Pennington, Richard Socher, and Christopher
Manning. 2014. Glove: Global vectors for word
representation. In Proceedings of the 2014 confer-
ence on empirical methods in natural language pro-
cessing (EMNLP), pages 1532–1543.

Sebastian Riedel, Limin Yao, and Andrew McCallum.
2010. Modeling relations and their mentions with-
out labeled text. Machine learning and knowledge
discovery in databases, pages 148–163.

Daniil Sorokin and Iryna Gurevych. 2017. Context-
aware representations for knowledge base relation
extraction. In Proceedings of the 2017 Conference
on Empirical Methods in Natural Language Pro-
cessing, pages 1784–1789.

Théo Trouillon, Johannes Welbl, Sebastian Riedel, Éric
Gaussier, and Guillaume Bouchard. 2016. Com-
plex embeddings for simple link prediction. In In-
ternational Conference on Machine Learning, pages
2071–2080.

Shikhar Vashishth, Rishabh Joshi, Sai Suman Prayaga,
Chiranjib Bhattacharyya, and Partha Talukdar. 2018.
Reside: Improving distantly-supervised neural re-
lation extraction using side information. arXiv
preprint arXiv:1812.04361.

Jason Weston, Antoine Bordes, Oksana Yakhnenko,
and Nicolas Usunier. 2013. Connecting language
and knowledge bases with embedding models for re-
lation extraction. arXiv preprint arXiv:1307.7973.

Yi Wu, David Bamman, and Stuart Russell. 2017. Ad-
versarial training for relation extraction. In Proceed-
ings of the 2017 Conference on Empirical Methods
in Natural Language Processing, pages 1779–1784.

Peng Xu and Denilson Barbosa. 2018. Investi-
gations on knowledge base embedding for rela-
tion prediction and extraction. arXiv preprint
arXiv:1802.02114.

Bishan Yang, Wen-tau Yih, Xiaodong He, Jianfeng
Gao, and Li Deng. 2014. Embedding entities and
relations for learning and inference in knowledge
bases. arXiv preprint arXiv:1412.6575.

Daojian Zeng, Kang Liu, Yubo Chen, and Jun Zhao.
2015. Distant supervision for relation extraction via
piecewise convolutional neural networks. In Emnlp,
pages 1753–1762.

Daojian Zeng, Kang Liu, Siwei Lai, Guangyou Zhou,
Jun Zhao, et al. 2014. Relation classification via
convolutional deep neural network. In COLING,
pages 2335–2344.

Peng Zhou, Wei Shi, Jun Tian, Zhenyu Qi, Bingchen
Li, Hongwei Hao, and Bo Xu. 2016. Attention-
based bidirectional long short-term memory net-
works for relation classification. In Proceedings of
the 54th Annual Meeting of the Association for Com-
putational Linguistics (Volume 2: Short Papers),
volume 2, pages 207–212.


