



















































Learning to Ask Unanswerable Questions for Machine Reading Comprehension


Proceedings of the 57th Annual Meeting of the Association for Computational Linguistics, pages 4238–4248
Florence, Italy, July 28 - August 2, 2019. c©2019 Association for Computational Linguistics

4238

Learning to Ask Unanswerable Questions
for Machine Reading Comprehension

Haichao Zhu†∗, Li Dong‡, Furu Wei‡, Wenhui Wang‡, Bing Qin†\, Ting Liu†\
†Harbin Institute of Technology, Harbin, China

‡Microsoft Research, Beijing, China
\Peng Cheng Laboratory, Shenzhen, China
{hczhu,qinb,tliu}@ir.hit.edu.cn

{lidong1,fuwei,wenwan}@microsoft.com

Abstract

Machine reading comprehension with unan-
swerable questions is a challenging task. In
this work, we propose a data augmentation
technique by automatically generating relevant
unanswerable questions according to an an-
swerable question paired with its correspond-
ing paragraph that contains the answer. We
introduce a pair-to-sequence model for unan-
swerable question generation, which effec-
tively captures the interactions between the
question and the paragraph. We also present
a way to construct training data for our ques-
tion generation models by leveraging the ex-
isting reading comprehension dataset. Exper-
imental results show that the pair-to-sequence
model performs consistently better compared
with the sequence-to-sequence baseline. We
further use the automatically generated unan-
swerable questions as a means of data aug-
mentation on the SQuAD 2.0 dataset, yielding
1.9 absolute F1 improvement with BERT-base
model and 1.7 absolute F1 improvement with
BERT-large model.

1 Introduction

Extractive reading comprehension (Hermann
et al., 2015; Rajpurkar et al., 2016) obtains great
attentions from both research and industry in
recent years. End-to-end neural models (Seo
et al., 2017; Wang et al., 2017; Yu et al., 2018)
have achieved remarkable performance on the
task if answers are assumed to be in the given
paragraph. Nonetheless, the current systems are
still not good at deciding whether no answer
is presented in the context (Rajpurkar et al.,
2018). For unanswerable questions, the systems
are supposed to abstain from answering rather
than making unreliable guesses, which is an
embodiment of language understanding ability.

∗ Contribution during internship at Microsoft Research
Asia.

Title: Victoria (Australia)
Paragraph: . . . Public schools, also known as state or
government schools, are funded and run directly by the
Victoria Department of Education . Students do not pay
tuition fees, but some extra costs are levied. Private fee-
paying schools include parish schools . . .

Ans. Question: What organization runs the public
schools in Victoria?
UnAns. Question: What organization runs the waste
management in Victoria?

(Plausible) Answer: Victoria Department of Education

Figure 1: An example taken from the SQuAD 2.0
dataset. The annotated (plausible) answer span in the
paragraph is used as a pivot to align the pair of answer-
able and unanswerable questions.

We attack the problem by automatically gener-
ating unanswerable questions for data augmenta-
tion to improve question answering models. The
generated unanswerable questions should not be
too easy for the question answering model so that
data augmentation can better help the model. For
example, a simple baseline method is randomly
choosing a question asked for another paragraph,
and using it as an unanswerable question. How-
ever, it would be trivial to determine whether the
retrieved question is answerable by using word-
overlap heuristics, because the question is irrele-
vant to the context (Yih et al., 2013). In this work,
we propose to generate unanswerable questions by
editing an answerable question and conditioning
on the corresponding paragraph that contains the
answer. So the generated unanswerable questions
are more lexically similar and relevant to the con-
text. Moreover, by using the answerable question
as a prototype and its answer span as a plausible
answer, the generated examples can provide more
discriminative training signal to the question an-
swering model.



4239

To create training data for unanswerable ques-
tion generation, we use (plausible) answer spans
in paragraphs as pivots to align pairs of answer-
able questions and unanswerable questions. As
shown in Figure 1, the answerable and unanswer-
able questions of a paragraph are aligned through
the text span “Victoria Department of Education”
for being both the answer and plausible answer.
These two questions are lexically similar and both
asked with the same answer type in mind. In this
way, we obtain the data with which the models
can learn to ask unanswerable questions by editing
answerable ones with word exchanges, negations,
etc. Consequently, we can generate a mass of
unanswerable questions with existing large-scale
machine reading comprehension datasets.

Inspired by the neural reading comprehension
models (Xiong et al., 2017; Huang et al., 2018),
we introduce a pair-to-sequence model to bet-
ter capture the interactions between questions and
paragraphs. The proposed model first encodes in-
put question and paragraph separately, and then
conducts attention-based matching to make them
aware of each other. Finally, the context-aware
representations are used to generate outputs. To
facilitate the use of context words during the
generation process, we also incorporate the copy
mechanism (Gu et al., 2016; See et al., 2017).

Experimental results on the unanswerable ques-
tion generation task shows that the pair-to-
sequence model generates consistently better re-
sults over the sequence-to-sequence baseline and
performs better with long paragraphs than with
short answer sentences. Further experimental re-
sults show that the generated unanswerable ques-
tions can improve multiple machine reading com-
prehension models. Even using BERT fine-tuning
as a strong reading comprehension model, we can
still obtain a 1.9% absolute improvement of F1
score with BERT-base model and 1.7% absolute
F1 improvement with BERT-large model.

2 Related Work

Machine Reading Comprehension (MRC) Var-
ious large-scale datasets (Hermann et al., 2015;
Rajpurkar et al., 2016; Nguyen et al., 2016;
Joshi et al., 2017; Rajpurkar et al., 2018; Ko-
cisky et al., 2018) have spurred rapid progress on
machine reading comprehension in recent years.
SQuAD (Rajpurkar et al., 2016) is an extractive
benchmark whose questions and answers spans

are annotated by humans. Neural reading com-
prehension systems (Wang and Jiang, 2017; Seo
et al., 2017; Wang et al., 2017; Hu et al., 2018;
Huang et al., 2018; Liu et al., 2018; Yu et al.,
2018; Wang et al., 2018) have outperformed hu-
mans on this task in terms of automatic metrics.
The SQuAD 2.0 dataset (Rajpurkar et al., 2018)
extends SQuAD with more than 50, 000 crowd-
sourced unanswerable questions. So far, neural
reading comprehension models still fall behind
humans on SQuAD 2.0. Abstaining from answer-
ing when no answer can be inferred from the given
document does require more understanding than
barely extracting an answer.

Question Generation for MRC In recent
years, there has been an increasing interest in
generating questions for reading comprehension.
Du et al. (2017) show that neural models based
on the encoder-decoder framework can generate
significantly better questions than rule-based sys-
tems (Heilman and Smith, 2010). To generate
answer-focused questions, one can simply indicate
the answer positions in the context with extra fea-
tures (Yuan et al., 2017; Zhou et al., 2018; Du
and Cardie, 2018; Sun et al., 2018; Dong et al.,
2019). Song et al. (2018) and Kim et al. (2019)
separate answer representations for further match-
ing. Yao et al. (2018) introduce a latent variable
for capturing variability and an observed variable
for controlling question types. In summary, the
above mentioned systems aim to generate answer-
able questions with certain context. On the con-
trary, our goal is to generate unanswerable ques-
tions.

Adversarial Examples for MRC To evaluate
the language understanding ability of pre-trained
systems, Jia and Liang (2017) construct adversar-
ial examples by adding distractor sentences that do
not contradict question answering for humans to
the paragraph. Clark and Gardner (2018) and Tan
et al. (2018) use questions to retrieve paragraphs
that do not contain the answer as adversarial exam-
ples. Rajpurkar et al. (2018) create unanswerable
questions through rigid rules, which swap entities,
numbers and antonyms of answerable questions.
It has been shown that adversarial examples gen-
erated by rule-based systems are much easier to
detect than ones in the SQuAD 2.0 dataset.

Data Augmentation for MRC Several at-
tempts have been made to augment training data
for machine reading comprehension. We catego-



4240

Decoder

Interac+on

Output

Encoder

Interac+on

Encoder

P

W
C

P

W
C

P

W
C

A

W
C

P

W
C… …

Q

W
C

Q

W
C

Q

W
C

Q

W
C…

Paragraph Ques+on

Decoder

Encoder

Output

P

W
C

Q

W
C

P

W
C

A

W
C

Q

W
C… …

Paragraph	+	Ques+on

SEQ2SEQ PAIR2SEQ Unanswerable
Ques+on

Unanswerable
Ques+on

Figure 2: Diagram of the proposed pair-to-sequence
model and sequence-to-sequence model. The input em-
beddings is the sum of the word embeddings, the char-
acter embeddings and the token type embeddings. The
input questions are all answerable.

rize these work according to the type of the aug-
mentation data: external data source, paragraphs
or questions. Devlin et al. (2019) fine-tune BERT
on the SQuAD dataset jointly with another dataset
TriviaQA (Joshi et al., 2017). Yu et al. (2018)
paraphrase paragraphs with backtranslation. An-
other line of work adheres to generate answerable
questions. Yang et al. (2017) propose to gener-
ate questions based on the unlabeled text for semi-
supervised question answering. Sun et al. (2019)
propose a rule-based system to generate multiple-
choice questions with candidate options upon the
paragraphs. We aim at generating unanswerable
questions as a means of data augmentation.

3 Problem Formulation

Given an answerable question q and its corre-
sponding paragraph p that contains the answer a,
we aim to generate unanswerable questions q̃ that
fulfills certain requirements. First, it cannot be an-
swered by paragraph p. Second, it must be rele-
vant to both answerable question q and paragraph
p, which refrains from producing irrelevant ques-
tions. Third, it should ask for something of the
same type as answer a.

As shown in Figure 2, we investigate two simple
neural models built upon encoder-decoder archi-
tecture (Cho et al., 2014; Bahdanau et al., 2015) to
generate unanswerable questions. A sequence-to-
sequence model takes the concatenated paragraph
and question as input, and encodes the input in a
sequential manner. A pair-to-sequence model is
further introduced to capture the interactions be-

tween inputs. The decoder of two models gener-
ates unanswerable questions sequentially. We fac-
torize the probability of generating the unanswer-
able question P (q̃|q, p, a) as:

P (q̃|q, p, a) =
|q̃|∏
t=1

P (q̃t|q̃<t, q, p, a) (1)

where q̃<t = q̃1 . . . q̃t−1.

3.1 Sequence-to-Sequence Model
In the sequence-to-sequence model, paragraph and
question pairs are packed into an ordered sequence
x with a special separator in between. To indi-
cate answers in paragraphs, we introduce token
type embeddings which can also be used to dis-
tinguish questions from paragraphs in sequence-
to-sequence model. As we can see in Figure 2,
the token type can be answer (A), paragraph (P),
or question (Q). For a given token, we construct
the input representation ei by summing the cor-
responding word embeddings, character embed-
dings and token type embeddings. Here characters
are embedded by an embedding matrix followed
by a max pooling layer.

We apply a single-layer bi-directional recur-
rent neural networks with long short-term mem-
ory units (LSTM; Hochreiter and Schmidhuber,
1997) to produce encoder hidden states hi =
fBiLSTM(hi−1, ei). On each decoding step t, the
hidden states of decoder (a single-layer unidirec-
tional LSTM network) are computed by st =
fLSTM(st−1, [yt−1; ct−1]), where yt−1 is the word
embedding of previously predicted token and ct−1
is the encoder context vector of previous step. Be-
sides, we use an attention mechanism to summa-
rize the encoder-side information into ct for cur-
rent step. The attention distribution γt over source
words is computed as in Luong et al. (2015):

score(hi, st) = h
T
i Wγst (2)

γi,t = exp(score(hi, st))/Zt (3)

ct =

|x|∑
i

γi,thi (4)

where Zt =
∑|x|

k exp(score(hk, st)), Wγ in
score function is a learnable parameter.

Next, st is concatenated with ct to produce the
vocabulary distribution Pv:

Pv = softmax(Wv[st; ct] + bv) (5)



4241

where Wv and bv are learnable parameters. Copy
mechanism (See et al., 2017) is incorporated to di-
rectly copy words from inputs, because words in
paragraphs or source questions are of great value
for unanswerable question generation. Specifi-
cally, we use st and ct to produce a gating proba-
bility gt:

gt = sigmoid(Wg[st; ct] + bg) (6)

where Wg and bg are learnable parameters. The
gate gt determines whether generating a word
from the vocabulary or copying a word from in-
puts. Finally, we obtain the probability of generat-
ing q̃t by:

P (q̃t|q̃<t, q, p, a) = gtPv(q̃t) + (1− gt)
∑
i∈ζq̃t

γ̂i,t

where ζq̃t denotes all the occurrence of q̃t in in-
puts, and the copying score γ̂t is computed in the
same way as attention scores γt (see Equation (3))
while using different parameters.

3.2 Pair-to-Sequence Model

Paragraph and question interactions play a vitally
important role in machine reading comprehension.
The interactions make the paragraph and question
aware of each other and help to predict the an-
swer more precisely. Therefore we propose a pair-
to-sequence model, conducting attention based in-
teractions in encoder and subsequently decoding
with two series of representations.

In pair-to-sequence model, the paragraph
and question are embedded as in sequence-
to-sequence model, but encoded separately by
weight-shared bi-directional LSTM networks,
yielding hpi = fBiLSTM(h

p
i−1, e

p
i−1) as paragraph

encodings and hqi = fBiLSTM(h
q
i−1, e

q
i−1) as ques-

tion encodings. The same attention mechanism
as in sequence-to-sequence model is used in the
following interaction layer to produce question-
aware paragraph representations h̃pi :

αi,j = exp(score(h
p
i ,h

q
j))/Zi (7)

ĥpi =

|q|∑
j=1

αi,jh
q
j (8)

h̃pi = tanh(Wp[h
p
i ; ĥ

p
i ] + bp) (9)

where Zi =
∑|q|

k=1 exp(score(h
p
i ,h

q
k)) ,Wp

and bp are learnable parameters. Similarly, the

paragraph-aware question representations h̃qi are
produced by:

βi,j = exp(score(h
p
i ,h

q
j))/Zj (10)

ĥqi =

|p|∑
i=1

βi,jh
p
i (11)

h̃qj = tanh(Wq[h
q
j ; ĥ

q
j ] + bq) (12)

where Zj =
∑|p|

k=1 exp(score(h
p
k,h

q
j)), Wq and

bq are learnable parameters.
Accordingly, the decoder now takes paragraph

context cpt−1 and question context c
q
t−1 as en-

coder context, computed as ct (see Equation (4))
in sequence-to-sequence model, to update decoder
hidden states st = fLSTM(st−1, [yt−1; c

p
t−1; c

q
t−1])

and predict tokens. Copy mechanism is also
adopted as described before, and copying words
from both the paragraph and question is viable.

3.3 Training and Inference
The training objective is to minimize the negative
likelihood of the aligned unanswerable question
q̃ given the answerable question q and its corre-
sponding paragraph p that contains the answer a:

L = −
∑

(q̃,q,p,a)∈D

logP (q̃|q, p, a; θ) (13)

where D is the training corpus and θ denotes all
the parameters. Sequence-to-sequence and pair-
to-sequence models are trained with the same ob-
jective.

During inference, the unanswerable question
for question answering pair (q, p, a) is obtained
via argmaxq′P (q

′|q, p, a), where q′ represents
candidate outputs. Beam search is used to avoid
iterating over all possible outputs.

4 Experiments

We conduct experiments on the SQuAD 2.0
dataset (Rajpurkar et al., 2018). The extrac-
tive machine reading benchmark contains about
100, 000 answerable questions and over 50, 000
crowdsourced unanswerable questions towards
Wikipedia paragraphs. Crowdworkers are re-
quested to craft unanswerable questions that are
relevant to the given paragraph. Moreover, for
each unanswerable question, a plausible answer
span is annotated, which indicates the incorrect
answer obtained by only relying on type-matching
heuristics. Both answers and plausible answers are
text spans in the paragraphs.



4242

4.1 Unanswerable Question Generation
4.1.1 Training Data Construction
We use (plausible) answer spans in paragraphs as
pivots to align pairs of answerable questions and
unanswerable questions. An aligned pair is shown
in Figure 1. As to the spans that correspond to
multiple answerable and unanswerable questions,
we sort the pairs by Levenshtein distance (Leven-
shtein, 1966) and keep the pair with the minimum
distance, and make sure that each question is only
paired once.

We obtain 20, 220 aligned pairs from the
SQuAD 2.0 dataset in total. The Levenshtein dis-
tance between the answerable and unanswerable
questions in pairs is 3.5 on average. Specifically,
the 17, 475 pairs extracted from the SQuAD 2.0
training set are used to train generation models.
Since the SQuAD 2.0 test set is hidden, we ran-
domly sample 46 articles from the SQuAD 2.0
training set with 1, 805 (∼10%) pairs as holdout
set and evaluate generation models with 2, 745
pairs extracted the SQuAD 2.0 development set.

4.1.2 Settings
We implement generation models upon Open-
NMT (Klein et al., 2017). We preprocess the cor-
pus with the spaCy toolkit for tokenization and
sentence segmentation. We lowercase tokens and
build the vocabulary on SQuAD 2.0 training set
with word frequency threshold of 9 to remove
most noisy tokens introduced in data collection
and tokenization. We set word, character and
token type embeddings dimension to 300. We
use the glove.840B.300d pre-trained embed-
dings (Pennington et al., 2014) to initialize word
embeddings, and do further updates during train-
ing. Both encoder and decoder share the same vo-
cabulary and word embeddings. The hidden state
size of LSTM network is 150. Dropout probabil-
ity is set to 0.2. The data are shuffled and split into
mini-batches of size 32 for training. The model is
optimized with Adagrad (Duchi et al., 2011) with
an initial learning rate of 0.15. During inference,
the beam size is 5. We prohibit producing un-
known words by setting the score of <unk> token
to -inf. We filter the beam outputs that make no
differences to the input question.

4.1.3 Evaluation Metrics
The generation quality is evaluated using three au-
tomatic evaluation metrics: BLEU (Papineni et al.,
2002), ROUGE (Lin, 2004) and GLEU (Napoles

et al., 2015). BLEU1 is a commonly used
metric in machine translation that computes n-
gram precisions over references. Recall-oriented
ROUGE2 metric is widely adopted in summariza-
tion, and ROUGE-L measures longest common
subsequence between system outputs and refer-
ences. GLEU3 is a variant of BLEU with the
modification that penalizes system output n-grams
that present in input but absent from the reference.
This makes GLEU a preferable metric for tasks
with subtle but critical differences in a monolin-
gual setting as in our unanswerable question gen-
eration task.

We also conduct human evaluation on 100 sam-
ples in three criteria: (1) unanswerability, which
indicates whether the question is unanswerable or
not; (2) relatedness, which measures semantic re-
latedness between the generated question and in-
put question answering pair; (3) readability, which
indicates the grammaticality and fluency. We
ask three raters to score the generated questions
in terms of relatedness and readability on a 1-3
scale (3 for the best) and determine the answer-
ability in binary (1 for unanswerable). The raters
are not aware of the question generation methods
in advance.

4.1.4 Results
Results of the automatic evaluation are shown
in Table 1. We find that the proposed pair-to-
sequence model that captures interactions between
paragraph and question performs consistently bet-
ter than sequence-to-sequence model. Moreover,
replacing the input paragraph with the answer sen-
tence hurts model performance, which indicates
that using the whole paragraph as context provides
more helpful information to unanswerable ques-
tion generation. We also try to generate unan-
swerable questions by only relying on answer-
able questions (see “-Paragraph”), or the para-
graph (see “-Question”). Unsurprisingly, both ab-
lation models obtain worse performance compared
with the full model. These two ablation results
also demonstrate that the input answerable ques-
tion helps more to improve performance compared
with the input paragraph. We argue that the orig-
inal answerable question provides more direct in-
formation due to the fact that the average edit dis-
tance between the example pairs is 3.5. At last,

1github.com/moses-smt/mosesdecoder
2pypi.org/project/pyrouge
3github.com/cnap/gec-ranking

github.com/moses-smt/mosesdecoder
pypi.org/project/pyrouge
github.com/cnap/gec-ranking


4243

Model GLEU-3 GLEU-4 BLEU-3 BLEU-4 ROUGE-2 ROUGE-3 ROUGE-L

SEQ2SEQ 33.13 27.39 36.80 27.84 46.54 32.98 64.28
PAIR2SEQ 35.06 29.43 37.67 29.17 47.46 34.18 65.24

- Paragraph (+AS) 34.42 28.43 37.35 28.44 47.13 33.29 65.02
- Paragraph 33.58 27.54 35.89 26.99 46.14 31.45 64.78
- Question 9.40 6.21 6.7 3.1 12.64 5.63 32.26
- Copy 25.06 19.80 36.06 22.84 33.40 20.45 52.76

Table 1: Automatic evaluation results. Higher score is better and the best performance for each evaluation metric
is highlighted in boldface. “- Paragraph (+AS)” represents replacing paragraphs with answer sentences.

EM / F1 4

BNA 59.7/62.7 -
+ UNANSQ 61.0/63.5 +1.3/+0.8

DocQA 61.9/64.5 -
+ UNANSQ 62.4/65.3 +0.5/+0.8

BERTBase 74.3/77.4 -
+ UNANSQ 76.4/79.3 +2.1/+1.9

BERTLarge 78.2/81.3 -
+ UNANSQ 80.0/83.0 +1.8/+1.7

Table 2: Experimental results of applying data augmen-
tation to reading comprehension models on the SQuAD
2.0 dataset. “4” indicates absolute improvement.

we remove the copy mechanism that restrains pre-
diction tokens to the vocabulary. The results indi-
cate the necessity of copying tokens from answer-
able questions and paragraphs to outputs, which
relieves the out-of-vocabulary problem.

Table 3 shows the human evaluation results of
generated unanswerable questions. We compare
with the baseline method TFIDF, which uses the
input answerable question to retrieve similar ques-
tions towards other articles as outputs. The re-
trieved questions are mostly unanswerable and
readable, but they are not quite relevant to the
question answering pair. Notice that being rele-
vant is demonstrated to be important for data aug-
mentation in further experiments on machine read-
ing comprehension. Here pair-to-sequence model
still outperforms sequence-to-sequence model in
terms of all three metrics. But the differences in
human evaluation are not as notable as in the au-
tomatic metrics.

As shown in Table 4, we further randomly
sample 100 system outputs to analyze the types
of generated unanswerable questions. We bor-
row the types defined in Rajpurkar et al. (2018)

UNANS RELA READ

TFIDF 0.96 1.52 2.98
SEQ2SEQ 0.62 2.88 2.39
PAIR2SEQ 0.65 2.95 2.61

Human 0.95 2.96 3

Table 3: Human evaluation results. Unanswerability
(UNANS): 1 for unanswerable, 0 otherwise. Related-
ness (RELA): 3 for relevant to both answerable ques-
tion and paragraph, 2 for relevant to only one, 1 for ir-
relevant. Readability (READ): 3 for fluent, 2 for minor
grammatical errors, 1 for incomprehensible.

Type S2S P2S Human

Negation 42% 54% 32%
Antonym 4% 5% 9%
Entity Swap 17% 20% 20%
Mutual Exclusion 2% 0% 12%
Impossible Condition 8% 12% 25%
Other 27% 8% 2%

Table 4: Types of unanswerable questions generated
by models and humans, we refer the reader to (Ra-
jpurkar et al., 2018) for detail definition of each type.
“S2S” represents the sequence-to-sequence baseline
and “P2S” is our proposed pair-to-sequence model.

for SQuAD 2.0. We categorize the outputs
with grammatical errors that make them hard
to understand into Other. Samples that fall
into Impossible Condition are mainly pro-
duced by non-entity substitution. We can see
that models tend to generate unanswerable ques-
tions by inserting negation and swapping entities.
These two types are also most commonly used
when crowdworkers pose unanswerable questions
according to answerable ones. We also find that
the current models still have difficulties in utilizing
antonyms and exclusion conditions, which could



4244

Title: Victoria (Australia)
Paragraph: Victorian schools are either publicly or privately funded. Public schools, also known as state or government
schools, are funded and run directly by the Victoria Department of Education . Students do not pay tuition fees, but
some extra costs are levied. Private fee-paying schools include parish schools run by the Roman Catholic Church and
independent schools similar to British public schools. Independent schools are usually affiliated with Protestant churches.
Victoria also has several private Jewish and Islamic primary and secondary schools. Private schools also receive some ...

Question: What organization runs the public schools in Victoria?
Human: What organization runs the waste management in Victoria?
SEQ2SEQ: what organization runs the public schools in texas ?
PAIR2SEQ: what organization never runs the public schools in victoria ?
(Plausible) Answer: Victoria Department of Education

Question: What church runs some private schools in Victoria?
Human: What church runs public schoolsin Victoria?
SEQ2SEQ: what church runs some private schools ?
PAIR2SEQ: what church no longer runs some private schools in victoria ?
(Plausible) Answer: Roman Catholic Church

Question: Since students do not pay tuition, what do they have to pay for schooling in Victoria?
Human: What is covered by the state in addition to tuition?
SEQ2SEQ: since students do not pay to pay schooling in victoria ?
PAIR2SEQ: since students do n’t pay tuition , what do they have to pay for schooling in victoria ?
(Plausible) Answer: some extra costs

Question: What are public schools in Victoria?
Human: What are public banks in Victoria?
SEQ2SEQ: what are n’t public schools in victoria ?
PAIR2SEQ: what are public schools not in victoria ?
(Plausible) Answer: state or government schools

Figure 3: Sample output generated by human, sequence-to-sequence model, and pair-to-sequence model. The
(plausible) answer span of questions are marked in colors and main difference of model outputs are underlined.

be improved by incorporating external resources.
In Figure 3, we present a sample paragraph and

its corresponding answerable questions and gen-
erated unanswerable questions. In the first ex-
ample, two models generate unanswerable ques-
tions by swapping the location entity “Victoria”
with “texas” and inserting negation word “never”,
respectively. In the second example, sequence-
to-sequence model omits the condition “in Victo-
ria” and yields an answerable question. Pair-to-
sequence model inserts the negation “no longer”
properly, which is not mentioned in the para-
graph. In the third example, grammatical errors
are found in the output of SEQ2SEQ. The last ex-
ample shows that inserting negation words in dif-
ferent positions (“n’t public” versus “not in victo-
ria”) can express different meanings. Such cases
are critical for generated questions’ answerability,
which is hard to handle in a rule-based system.

4.2 Data Augmentation for Machine Reading
Comprehension

4.2.1 Question Answering Models
We apply our automatically generated unanswer-
able questions as augmentation data to the follow-

ing reading comprehension models:

BiDAF-No-Answer (BNA) BiDAF (Seo et al.,
2017) is a benchmark model on extractive ma-
chine reading comprehension. Based on BiDAF,
Levy et al. (2017) propose the BiDAF-No-Answer
model to predict the distribution of answer candi-
dates and the probability of a question being unan-
swerable at the same time.

DocQA Clark and Gardner (2018) propose the
DocQA model to address document-level reading
comprehension. The no-answer probability is also
predicted jointly.

BERT Fine-Tuning It is the state-of-the-art
model on unanswerable machine reading com-
prehension. We adopt the uncased version of
BERT (Devlin et al., 2019) for fine-tuning. The
batch sizes of BERT-base and BERT-large are set
to 12 and 24 respectively. The rest hyperparame-
ters are kept untouched as in the official instruc-
tions of fine-tuning BERT-Large on SQuAD 2.0.

4.2.2 Data Augmentation Setup
We first generate unanswerable questions using
the trained generation model. Specifically, we use



4245

EM / F1 4

BERTBase 74.3/77.4 -
+ TFIDF 75.0/77.8 +0.7/+0.4
+ RULE 75.6/78.5 +1.3/+1.1
+ SEQ2SEQ 75.5/78.2 +1.2/+0.8
+ PAIR2SEQ 76.4/79.3 +2.1/+1.9

Table 5: Results using different generation methods for
data augmentation. “4” indicates absolute improve-
ment.

the answerable questions in the SQuAD 2.0 train-
ing set, besides ones aligned before, to generate
unanswerable questions. Then we use the para-
graph and answers of answerable questions along
with the generated questions to construct training
examples. At last, we have an augmentation data
containing 69, 090 unanswerable examples.

We train question answering models with aug-
mentation data in two separate phases. In the first
phase, we train the models by combining the aug-
mentation data and all 86, 821 SQuAD 2.0 answer-
able examples. Subsequently, we use the original
SQuAD 2.0 training data alone to further fine-tune
model parameters.

4.2.3 Results
Exact Match (EM) and F1 are two metrics used
to evaluate model performance. EM measures the
percentage of predictions that match ground truth
answers exactly. F1 measures the word overlap
between the prediction and ground truth answers.
We use pair-to-sequence model with answerable
questions and paragraphs for data augmentation
by default.

Table 2 shows the exact match and F1 scores of
multiple reading comprehension models with and
without data augmentation. We can see that the
generated unanswerable questions can improve
both specifically designed reading comprehen-
sion models and strong BERT fine-tuning models,
yielding 1.9 absolute F1 improvement with BERT-
base model and 1.7 absolute F1 improvement with
BERT-large model. Our submitted model obtains
an EM score of 80.75 and an F1 score of 83.85 on
the hidden test set.

As shown in Table 5, pair-to-sequence model
proves to be a better option for generating aug-
mentation data than other three methods. Besides
the sequence-to-sequence model, we use answer-
able questions to retrieve questions from other ar-

EM / F1 4

BERTBase 74.3/77.4 -
+ UNANSQ×1 76.4/79.3 +2.1/+1.9
+ UNANSQ×2 76.4/79.4 +2.1/+2.0
+ UNANSQ×3 76.6/79.6 +2.3/+2.2

BERTLarge 78.2/81.3 -
+ UNANSQ×1 80.0/83.0 +1.8/+1.7
+ UNANSQ×2 80.0/82.9 +1.8/+1.6
+ UNANSQ×3 80.1/83.1 +1.9/+1.8

Table 6: Ablation over the size of data augmentation.
“× N” means the original size is enhanced N times.
“4” indicates absolute improvement.

ticles with TFIDF. The retrieved questions are
of little help to improve the model, because they
are less relevant to the paragraph as shown in Ta-
ble 3. We refer to the rule-based method (Jia
and Liang, 2017) that swaps entities and replaces
words with antonyms as RULE. In comparison
to the above methods, pair-to-sequence model can
yield the largest improvement.

Results in Table 6 show that enlarging the
size of augmentation data can further improve
model performance, especially with the BERT-
base model. We conduct experiments using two
and three times the size of the base augmentation
data (i.e., 69, 090 unanswerable questions). We
generate multiple unanswerable questions for each
answerable question by using beam search. Be-
cause we only generate unanswerable questions,
the data imbalance problem could mitigate the
improvement of incorporating more augmentation
data.

5 Conclusions

In this paper, we propose to generate unanswer-
able questions as a means of data augmentation
for machine reading comprehension. We produce
relevant unanswerable questions by editing an-
swerable questions and conditioning on the cor-
responding paragraph. A pair-to-sequence model
is introduced in order to capture the interactions
between question and paragraph. We also present
a way to construct training data for unanswer-
able question generation models. Both automatic
and human evaluations show that the proposed
model consistently outperforms the sequence-to-
sequence baseline. The results on the SQuAD
2.0 dataset show that our generated unanswer-



4246

able questions can help to improve multiple read-
ing comprehension models. As for future work,
we would like to enhance the ability to utilize
antonyms for unanswerable question generation
by leveraging external resources.

Acknowledgments

We thank anonymous reviewers for their help-
ful comments. Qin and Liu were supported by
National Natural Science Foundation of China
(NSFC) via grants 61632011 and 61772156.

References
Dzmitry Bahdanau, Kyunghyun Cho, and Yoshua Ben-

gio. 2015. Neural machine translation by jointly
learning to align and translate. In Proceedings of
the 3rd International Conference on Learning Rep-
resentations.

Kyunghyun Cho, Bart van Merrienboer, Caglar Gul-
cehre, Dzmitry Bahdanau, Fethi Bougares, Holger
Schwenk, and Yoshua Bengio. 2014. Learning
phrase representations using RNN encoder–decoder
for statistical machine translation. In Proceedings of
the 2014 Conference on Empirical Methods in Nat-
ural Language Processing (EMNLP), pages 1724–
1734. Association for Computational Linguistics.

Christopher Clark and Matt Gardner. 2018. Simple
and effective multi-paragraph reading comprehen-
sion. In Proceedings of the 56th Annual Meeting of
the Association for Computational Linguistics (Vol-
ume 1: Long Papers), pages 845–855. Association
for Computational Linguistics.

Jacob Devlin, Ming-Wei Chang, Kenton Lee, and
Kristina Toutanova. 2019. BERT: Pre-training of
deep bidirectional transformers for language under-
standing. In Proceedings of the 2019 Conference of
the North American Chapter of the Association for
Computational Linguistics: Human Language Tech-
nologies, Volume 1 (Long Papers). Association for
Computational Linguistics.

Li Dong, Nan Yang, Wenhui Wang, Furu Wei, Xi-
aodong Liu, Yu Wang, Jianfeng Gao, Ming Zhou,
and Hsiao-Wuen Hon. 2019. Unified language
model pre-training for natural language understand-
ing and generation. Computing Research Reposi-
tory, arXiv:1905.03197. Version 1.

Xinya Du and Claire Cardie. 2018. Harvest-
ing paragraph-level question-answer pairs from
wikipedia. In Proceedings of the 56th Annual Meet-
ing of the Association for Computational Linguistics
(Volume 1: Long Papers), pages 1907–1917. Asso-
ciation for Computational Linguistics.

Xinya Du, Junru Shao, and Claire Cardie. 2017. Learn-
ing to ask: Neural question generation for reading

comprehension. In Proceedings of the 55th An-
nual Meeting of the Association for Computational
Linguistics (Volume 1: Long Papers), pages 1342–
1352. Association for Computational Linguistics.

John Duchi, Elad Hazan, and Yoram Singer. 2011.
Adaptive subgradient methods for online learning
and stochastic optimization. Journal of Machine
Learning Research, 12(Jul):2121–2159.

Jiatao Gu, Zhengdong Lu, Hang Li, and Victor O.K.
Li. 2016. Incorporating copying mechanism in
sequence-to-sequence learning. In Proceedings of
the 54th Annual Meeting of the Association for Com-
putational Linguistics (Volume 1: Long Papers),
pages 1631–1640. Association for Computational
Linguistics.

Michael Heilman and Noah A. Smith. 2010. Good
Question! Statistical ranking for question genera-
tion. In Human Language Technologies: The 2010
Annual Conference of the North American Chap-
ter of the Association for Computational Linguistics,
pages 609–617. Association for Computational Lin-
guistics.

Karl Moritz Hermann, Tomas Kocisky, Edward
Grefenstette, Lasse Espeholt, Will Kay, Mustafa Su-
leyman, and Phil Blunsom. 2015. Teaching ma-
chines to read and comprehend. In C. Cortes, N. D.
Lawrence, D. D. Lee, M. Sugiyama, and R. Garnett,
editors, Advances in Neural Information Processing
Systems 28, pages 1693–1701. Curran Associates,
Inc.

Sepp Hochreiter and Jürgen Schmidhuber. 1997.
Long short-term memory. Neural Computation,
9(8):1735–1780.

Minghao Hu, Yuxing Peng, Zhen Huang, Xipeng Qiu,
Furu Wei, and Ming Zhou. 2018. Reinforced
mnemonic reader for machine reading comprehen-
sion. In Proceedings of the Twenty-Seventh In-
ternational Joint Conference on Artificial Intelli-
gence, IJCAI-18, pages 4099–4106. International
Joint Conferences on Artificial Intelligence Organi-
zation.

Hsin-Yuan Huang, Chenguang Zhu, Yelong Shen, and
Weizhu Chen. 2018. FusionNet: Fusing via fully-
aware attention with application to machine compre-
hension. In International Conference on Learning
Representations.

Robin Jia and Percy Liang. 2017. Adversarial exam-
ples for evaluating reading comprehension systems.
In Proceedings of the 2017 Conference on Empiri-
cal Methods in Natural Language Processing, pages
2021–2031. Association for Computational Linguis-
tics.

Mandar Joshi, Eunsol Choi, Daniel Weld, and Luke
Zettlemoyer. 2017. TriviaQA: A large scale dis-
tantly supervised challenge dataset for reading com-
prehension. In Proceedings of the 55th Annual

https://doi.org/10.3115/v1/D14-1179
https://doi.org/10.3115/v1/D14-1179
https://doi.org/10.3115/v1/D14-1179
http://aclweb.org/anthology/P18-1078
http://aclweb.org/anthology/P18-1078
http://aclweb.org/anthology/P18-1078
https://arxiv.org/abs/1905.03197
https://arxiv.org/abs/1905.03197
https://arxiv.org/abs/1905.03197
http://aclweb.org/anthology/P18-1177
http://aclweb.org/anthology/P18-1177
http://aclweb.org/anthology/P18-1177
https://doi.org/10.18653/v1/P17-1123
https://doi.org/10.18653/v1/P17-1123
https://doi.org/10.18653/v1/P17-1123
https://doi.org/10.18653/v1/P16-1154
https://doi.org/10.18653/v1/P16-1154
http://aclweb.org/anthology/N10-1086
http://aclweb.org/anthology/N10-1086
http://aclweb.org/anthology/N10-1086
http://papers.nips.cc/paper/5945-teaching-machines-to-read-and-comprehend.pdf
http://papers.nips.cc/paper/5945-teaching-machines-to-read-and-comprehend.pdf
https://doi.org/10.1162/neco.1997.9.8.1735
https://doi.org/10.24963/ijcai.2018/570
https://doi.org/10.24963/ijcai.2018/570
https://doi.org/10.24963/ijcai.2018/570
https://openreview.net/forum?id=BJIgi_eCZ
https://openreview.net/forum?id=BJIgi_eCZ
https://openreview.net/forum?id=BJIgi_eCZ
https://doi.org/10.18653/v1/D17-1215
https://doi.org/10.18653/v1/D17-1215
https://doi.org/10.18653/v1/P17-1147
https://doi.org/10.18653/v1/P17-1147
https://doi.org/10.18653/v1/P17-1147


4247

Meeting of the Association for Computational Lin-
guistics (Volume 1: Long Papers), pages 1601–
1611. Association for Computational Linguistics.

Yanghoon Kim, Hwanhee Lee, Joongbo Shin, and Ky-
omin Jung. 2019. Improving neural question gener-
ation using answer separation. In AAAI Conference
on Artificial Intelligence.

Guillaume Klein, Yoon Kim, Yuntian Deng, Jean
Senellart, and Alexander Rush. 2017. OpenNMT:
Open-source toolkit for neural machine translation.
In Proceedings of ACL 2017, System Demonstra-
tions, pages 67–72. Association for Computational
Linguistics.

Tomas Kocisky, Jonathan Schwarz, Phil Blunsom,
Chris Dyer, Karl Moritz Hermann, Gabor Melis, and
Edward Grefenstette. 2018. The NarrativeQA read-
ing comprehension challenge. Transactions of the
Association for Computational Linguistics, 6:317–
328.

Vladimir I Levenshtein. 1966. Binary codes capable of
correcting deletions, insertions, and reversals. So-
viet Physics Doklady, 10(8):707–710.

Omer Levy, Minjoon Seo, Eunsol Choi, and Luke
Zettlemoyer. 2017. Zero-shot relation extraction
via reading comprehension. In Proceedings of the
21st Conference on Computational Natural Lan-
guage Learning (CoNLL 2017), pages 333–342. As-
sociation for Computational Linguistics.

Chin-Yew Lin. 2004. ROUGE: A package for auto-
matic evaluation of summaries. In Text Summariza-
tion Branches Out.

Xiaodong Liu, Yelong Shen, Kevin Duh, and Jianfeng
Gao. 2018. Stochastic answer networks for ma-
chine reading comprehension. In Proceedings of the
56th Annual Meeting of the Association for Compu-
tational Linguistics (Volume 1: Long Papers), pages
1694–1704. Association for Computational Linguis-
tics.

Thang Luong, Hieu Pham, and Christopher D. Man-
ning. 2015. Effective approaches to attention-based
neural machine translation. In Proceedings of the
2015 Conference on Empirical Methods in Natural
Language Processing, pages 1412–1421. Associa-
tion for Computational Linguistics.

Courtney Napoles, Keisuke Sakaguchi, Matt Post, and
Joel Tetreault. 2015. Ground truth for grammati-
cal error correction metrics. In Proceedings of the
53rd Annual Meeting of the Association for Compu-
tational Linguistics and the 7th International Joint
Conference on Natural Language Processing (Vol-
ume 2: Short Papers), pages 588–593. Association
for Computational Linguistics.

Tri Nguyen, Mir Rosenberg, Xia Song, Jianfeng Gao,
Saurabh Tiwary, Rangan Majumder, and Li Deng.
2016. MS MARCO: A human generated machine
reading comprehension dataset. Computing Re-
search Repository, arXiv:1611.09268. Version 3.

Kishore Papineni, Salim Roukos, Todd Ward, and Wei-
Jing Zhu. 2002. Bleu: a method for automatic eval-
uation of machine translation. In Proceedings of the
40th Annual Meeting of the Association for Compu-
tational Linguistics.

Jeffrey Pennington, Richard Socher, and Christopher
Manning. 2014. Glove: Global vectors for word
representation. In Proceedings of the 2014 Con-
ference on Empirical Methods in Natural Language
Processing (EMNLP), pages 1532–1543. Associa-
tion for Computational Linguistics.

Pranav Rajpurkar, Robin Jia, and Percy Liang. 2018.
Know what you don’t know: Unanswerable ques-
tions for SQuAD. In Proceedings of the 56th Annual
Meeting of the Association for Computational Lin-
guistics (Volume 2: Short Papers), pages 784–789.
Association for Computational Linguistics.

Pranav Rajpurkar, Jian Zhang, Konstantin Lopyrev, and
Percy Liang. 2016. SQuAD: 100,000+ questions for
machine comprehension of text. In Proceedings of
the 2016 Conference on Empirical Methods in Nat-
ural Language Processing, pages 2383–2392. Asso-
ciation for Computational Linguistics.

Abigail See, Peter J. Liu, and Christopher D. Manning.
2017. Get to the point: Summarization with pointer-
generator networks. In Proceedings of the 55th An-
nual Meeting of the Association for Computational
Linguistics (Volume 1: Long Papers), pages 1073–
1083. Association for Computational Linguistics.

Minjoon Seo, Aniruddha Kembhavi, Ali Farhadi, and
Hannaneh Hajishirzi. 2017. Bidirectional attention
flow for machine comprehension. In International
Conference on Learning Representations.

Linfeng Song, Zhiguo Wang, Wael Hamza, Yue Zhang,
and Daniel Gildea. 2018. Leveraging context infor-
mation for natural question generation. In Proceed-
ings of the 2018 Conference of the North American
Chapter of the Association for Computational Lin-
guistics: Human Language Technologies, Volume
2 (Short Papers), pages 569–574. Association for
Computational Linguistics.

Kai Sun, Dian Yu, Dong Yu, and Claire Cardie. 2019.
Improving machine reading comprehension with
general reading strategies. In Proceedings of the
2019 Conference of the North American Chapter of
the Association for Computational Linguistics: Hu-
man Language Technologies, Volume 1 (Long Pa-
pers). Association for Computational Linguistics.

Xingwu Sun, Jing Liu, Yajuan Lyu, Wei He, Yan-
jun Ma, and Shi Wang. 2018. Answer-focused and
position-aware neural question generation. In Pro-
ceedings of the 2018 Conference on Empirical Meth-
ods in Natural Language Processing, pages 3930–
3939. Association for Computational Linguistics.

Chuanqi Tan, Furu Wei, Qingyu Zhou, Nan Yang,
Weifeng Lv, and Ming Zhou. 2018. I know there

http://aclweb.org/anthology/P17-4012
http://aclweb.org/anthology/P17-4012
http://aclweb.org/anthology/Q18-1023
http://aclweb.org/anthology/Q18-1023
https://doi.org/10.18653/v1/K17-1034
https://doi.org/10.18653/v1/K17-1034
http://aclweb.org/anthology/W04-1013
http://aclweb.org/anthology/W04-1013
http://aclweb.org/anthology/P18-1157
http://aclweb.org/anthology/P18-1157
https://doi.org/10.18653/v1/D15-1166
https://doi.org/10.18653/v1/D15-1166
https://doi.org/10.3115/v1/P15-2097
https://doi.org/10.3115/v1/P15-2097
https://arxiv.org/abs/1611.09268
https://arxiv.org/abs/1611.09268
http://aclweb.org/anthology/P02-1040
http://aclweb.org/anthology/P02-1040
https://doi.org/10.3115/v1/D14-1162
https://doi.org/10.3115/v1/D14-1162
http://aclweb.org/anthology/P18-2124
http://aclweb.org/anthology/P18-2124
https://doi.org/10.18653/v1/D16-1264
https://doi.org/10.18653/v1/D16-1264
https://doi.org/10.18653/v1/P17-1099
https://doi.org/10.18653/v1/P17-1099
https://openreview.net/forum?id=HJ0UKP9ge
https://openreview.net/forum?id=HJ0UKP9ge
https://doi.org/10.18653/v1/N18-2090
https://doi.org/10.18653/v1/N18-2090
http://aclweb.org/anthology/D18-1427
http://aclweb.org/anthology/D18-1427


4248

is no answer: Modeling answer validation for ma-
chine reading comprehension. In Natural Language
Processing and Chinese Computing, pages 85–97,
Cham. Springer International Publishing.

Shuohang Wang and Jing Jiang. 2017. Machine com-
prehension using Match-LSTM and answer pointer.
In International Conference on Learning Represen-
tations.

Wei Wang, Ming Yan, and Chen Wu. 2018. Multi-
granularity hierarchical attention fusion networks
for reading comprehension and question answering.
In Proceedings of the 56th Annual Meeting of the
Association for Computational Linguistics (Volume
1: Long Papers), pages 1705–1714. Association for
Computational Linguistics.

Wenhui Wang, Nan Yang, Furu Wei, Baobao Chang,
and Ming Zhou. 2017. Gated self-matching net-
works for reading comprehension and question an-
swering. In Proceedings of the 55th Annual Meet-
ing of the Association for Computational Linguistics
(Volume 1: Long Papers), pages 189–198. Associa-
tion for Computational Linguistics.

Caiming Xiong, Victor Zhong, and Richard Sochern.
2017. Dynamic coattention networks for question
answering. In International Conference on Learn-
ing Representations.

Zhilin Yang, Junjie Hu, Ruslan Salakhutdinov, and
William Cohen. 2017. Semi-supervised QA with
generative domain-adaptive nets. In Proceedings
of the 55th Annual Meeting of the Association for
Computational Linguistics (Volume 1: Long Pa-
pers), pages 1040–1050. Association for Computa-
tional Linguistics.

Kaichun Yao, Libo Zhang, Tiejian Luo, Lili Tao, and
Yanjun Wu. 2018. Teaching machines to ask ques-
tions. In Proceedings of the Twenty-Seventh In-
ternational Joint Conference on Artificial Intelli-
gence, IJCAI-18, pages 4546–4552. International
Joint Conferences on Artificial Intelligence Organi-
zation.

Wen-tau Yih, Ming-Wei Chang, Christopher Meek, and
Andrzej Pastusiak. 2013. Question answering us-
ing enhanced lexical semantic models. In Proceed-
ings of the 51st Annual Meeting of the Association
for Computational Linguistics (Volume 1: Long Pa-
pers), pages 1744–1753. Association for Computa-
tional Linguistics.

Adams Wei Yu, David Dohan, Quoc Le, Thang Luong,
Rui Zhao, and Kai Chen. 2018. Fast and accurate
reading comprehension by combining self-attention
and convolution. In International Conference on
Learning Representations.

Xingdi Yuan, Tong Wang, Caglar Gulcehre, Alessan-
dro Sordoni, Philip Bachman, Saizheng Zhang,
Sandeep Subramanian, and Adam Trischler. 2017.
Machine comprehension by text-to-text neural ques-
tion generation. In Proceedings of the 2nd Workshop

on Representation Learning for NLP, pages 15–25.
Association for Computational Linguistics.

Qingyu Zhou, Nan Yang, Furu Wei, Chuanqi Tan,
Hangbo Bao, and Ming Zhou. 2018. Neural ques-
tion generation from text: A preliminary study. In
Natural Language Processing and Chinese Comput-
ing, pages 662–671, Cham. Springer International
Publishing.

https://openreview.net/forum?id=B1-q5Pqxl
https://openreview.net/forum?id=B1-q5Pqxl
http://aclweb.org/anthology/P18-1158
http://aclweb.org/anthology/P18-1158
http://aclweb.org/anthology/P18-1158
https://doi.org/10.18653/v1/P17-1018
https://doi.org/10.18653/v1/P17-1018
https://doi.org/10.18653/v1/P17-1018
https://openreview.net/forum?id=rJeKjwvclx&noteId=rJeKjwvclx
https://openreview.net/forum?id=rJeKjwvclx&noteId=rJeKjwvclx
https://doi.org/10.18653/v1/P17-1096
https://doi.org/10.18653/v1/P17-1096
https://doi.org/10.24963/ijcai.2018/632
https://doi.org/10.24963/ijcai.2018/632
http://aclweb.org/anthology/P13-1171
http://aclweb.org/anthology/P13-1171
https://openreview.net/forum?id=B14TlG-RW
https://openreview.net/forum?id=B14TlG-RW
https://openreview.net/forum?id=B14TlG-RW
https://doi.org/10.18653/v1/W17-2603
https://doi.org/10.18653/v1/W17-2603

