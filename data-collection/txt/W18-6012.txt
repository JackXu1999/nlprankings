















































Enhancing Universal Dependency Treebanks: A Case Study


Proceedings of the Second Workshop on Universal Dependencies (UDW 2018), pages 102–107
Brussels, Belgium, November 1, 2018. c©2018 Association for Computational Linguistics

102

Enhancing Universal Dependency Treebanks: A Case Study

Joakim Nivre∗ Paola Marongiu† Filip Ginter‡ Jenna Kanerva‡

Simonetta Montemagni� Sebastian Schuster? Maria Simi•

∗Uppsala University, Department of Linguistics and Philology
†University of Pavia, Department of Linguistics

‡University of Turku, Department of Future Technologies
�Institute for Computational Linguistics «A. Zampolli» – CNR, Italy

?Stanford University, Department of Linguistics
•University of Pisa, Department of Computer Science

Abstract

We evaluate two cross-lingual techniques for
adding enhanced dependencies to existing
treebanks in Universal Dependencies. We ap-
ply a rule-based system developed for English
and a data-driven system trained on Finnish to
Swedish and Italian. We find that both systems
are accurate enough to bootstrap enhanced de-
pendencies in existing UD treebanks. In the
case of Italian, results are even on par with
those of a prototype language-specific system.

1 Introduction

Universal Dependencies (UD) is a framework for
cross-linguistically consistent treebank annotation
(Nivre et al., 2016). Its syntactic annotation layer
exists in two versions: a basic representation,
where words are connected by syntactic relations
into a dependency tree, and an enhanced repre-
sentation, which is a richer graph structure that
adds external subject relations, shared dependents
in coordination, and predicate-argument relations
in elliptical constructions, among other things.

Despite the usefulness of enhanced representa-
tions (see e.g., Reddy et al. 2017; Schuster et al.
2017), most UD treebanks still contain only ba-
sic dependencies1 and therefore cannot be used to
train or evaluate systems that output enhanced UD
graphs. In this paper, we explore cross-lingual
methods for predicting enhanced dependencies
given a basic dependencies treebank. If these pre-
dictions are accurate enough, they can be used as
a first approximation of enhanced representations
for the nearly 100 UD treebanks that lack them,

1Out of 102 treebanks in UD release v2.1, only 5 contain
enhanced dependencies.

and as input to manual validation. Further, en-
hanced UD graphs are in many respects very sim-
ilar to semantic dependency representations that
encode predicate-argument structures (e.g., Böh-
mová et al. 2003; Miyao and Tsujii 2004; Oepen
and Lønning 2006). While the latter exist only for
a small number of languages and are typically ei-
ther produced by complex hand-written grammars
or by manual annotation, basic UD treebanks cur-
rently exist for more than 60 languages. Hence,
automatic methods capable of predicting enhanced
dependencies from UD treebanks, have the poten-
tial to drastically increase the availability of se-
mantic dependency treebanks.

In this paper, we evaluate a rule-based system
developed for English and a data-driven system
trained on de-lexicalized Finnish data, for predict-
ing enhanced dependencies on a sample of 1,000
sentences in two new languages, namely Swedish
and Italian. For Italian, we also compare to a rule-
based system developed specifically for that lan-
guage using language-specific information. The
results show that both cross-lingual methods give
high precision, often on par with the language-
specific system, and that recall can be improved
by exploiting their complementary strengths.

2 Basic and Enhanced Dependencies

Basic dependencies are strict surface syntax trees
that connect content words with argument and
modifier relations, and attach function words to
the content word they modify (Figure 1). En-
hanced dependencies restructure trees and add re-
lations that have been shown useful for semantic
downstream applications. Although the enhanced
representation is in most cases a monotonic exten-



103

(a)
Sam persuaded Kim to fix dinner

nsubj obj mark

xcomp

obj

nsubj

(b)

Sam bought and fixed dinner

nsubj
conj

cc

obj

nsubj obj

(c) Sam fixedi lunch and Kim ei dinner

nsubj obj

conj

cc
orphan

cc
conj

nsubj obj

Figure 1: UD basic (top) and enhanced (bottom) dependencies: (a) control, (b) coordination, (c) gapping. For
clarity, we show only those enhanced dependencies that are not shared with the basic layer.

sion of the basic one, this does not hold in general
(as shown by the treatment of ellipsis below). The
current UD guidelines define five enhancements:

1. Added subject relations in control and raising
2. Null nodes for elided predicates (gapping)
3. Shared heads and dependents in coordination
4. Co-reference in relative clause constructions
5. Modifier relations typed by case markers

The last two enhancements can in most cases be
predicted deterministically from the basic repre-
sentation and are mainly a practical convenience.
We therefore limit our attention to the first three
types, illustrated in Figure 1 (a–c).

Added subject relations Basic dependencies do
not specify whether the implicit subject of fix in (a)
is controlled by Sam (subject) or Kim (object), but
enhanced dependencies do. Similar relations are
added also in raising constructions.

Shared heads and dependents in coordination
In coordinated structures, incoming and outgoing
relations are connected only to the first conjunct in
basic dependencies. Enhanced dependencies add
explicit links from all conjuncts to shared depen-
dents, like the subject Sam and the object dinner in
(b), as well as from the shared head (not shown).

Null nodes for elided predicates Basic depen-
dencies cannot represent predicate-argument rela-
tions in gapping constructions like (c), because of
the missing verb, and therefore connect arguments
and modifiers using a special orphan relation. By
adding a null node with lexical information copied
from the verb in the first clause, enhanced depen-
dencies can assign the real argument relations to
the subject Kim and the object dinner.

3 Adding Enhanced Dependencies

We describe three systems for predicting enhanced
dependencies from basic dependencies. The first
two systems have been adapted for cross-lingual
use, while the third one uses language-specific in-
formation and will be used only for comparison in

the evaluation in the next section. Other language-
specific systems have been developed, such as the
one by Candito et al. (2017) for French, but this is
the first attempt to predict enhanced dependencies
in a language-independent way.

3.1 The Rule-Based English System

The system is an adaptation of the work by Schus-
ter and Manning (2016), developed for English.
It relies on Semgrex (Chambers et al., 2007) pat-
terns to find dependency structures that should be
enhanced and applies heuristics-based processing
steps corresponding to the five types of enhance-
ment described in Section 2. We briefly discuss
the three steps that are relevant to our study.

Added subject relations For any node attached
to a higher predicate with an xcomp relation, the
system adds a subject relation to the object of the
higher predicate if an object is present (object con-
trol) or to the subject of the higher predicate if no
object is present (subject control or raising). This
heuristic gives the right result in Figure 1 (a).

Shared heads and dependents in coordination
For conjoined clauses and verb phrases, the sys-
tem adds explicit dependencies to shared core ar-
guments (i.e., (i)obj, n/csubj, x/ccomp).
Thus, in Figure 1(b), the system adds the nsubj
and obj relations from fixed to Sam and dinner,
respectively. For other types of coordination, it
only adds dependencies from the shared head.

Null nodes Following Schuster et al. (2018),
the system aligns arguments and modifiers in the
gapped clause to the full clause. This align-
ment determines main clause predicates for which
an empty node should be inserted. Finally, the
gapped clause arguments and modifiers are re-
attached to the empty node, obtaining a structure
such as the one in Figure 1 (c). This method
uses word embeddings for the alignment of argu-
ments; here we use the embeddings from the 2017
CoNLL Shared Task (Zeman et al., 2017).



104

Subjects Coordination Null
Swe Ita Swe Ita Swe Ita

RBE DDF RBE DDF LSI RBE DDF RBE DDF LSI RBE RBE
Count 127 36 115 43 88 559 981 421 653 660 112 162
Precision 0.87 0.83 0.80 0.95 0.91 0.94 0.91 0.89 0.82 0.85 0.85 0.76
Recall (pooled) 0.98 0.27 0.79 0.35 0.69 0.55 0.97 0.64 0.91 0.78
Basic errors 12 1 14 0 2 25 28 12 32 19 15 0
Enhanced errors 4 5 9 2 6 9 69 34 86 65 2 35

Table 1: Evaluation of predicted enhanced dependencies for Italian and Swedish (RBE = rule-based English sys-
tem, DDF = data-driven Finnish system, LSI = language-specific Italian system).

3.2 The Data-Driven Finnish System
This data-driven approach is adapted from the su-
pervised method of Nyblom et al. (2013) origi-
nally developed for Finnish. First, patterns iden-
tify candidate relations, which are subsequently
classified with a linear SVM, trained on gold stan-
dard annotation. The original method does not
predict null nodes, and therefore we only discuss
added subject relations and coordination below.

Added subject relations A binary classifier is
used to decide whether an nsubj relation should
be added from an xcomp dependent to the subject
of its governor, accounting for subject control or
raising (in the positive case). Object control is not
handled by the original system, and we chose not
to extend it for this initial case study.

Shared heads and dependents in coordination
Candidate relations are created for all possible
shared heads (incoming relation to the first con-
junct) and dependents (outgoing relations from the
first conjunct), striving for high recall. A classifier
then predicts the relation type, or negative.

Feature representation To enable transfer from
models trained on Finnish to other languages, we
remove lexical and morphological features ex-
cept universal POS tags and morphological cate-
gories that we expect to generalize well: Number,
Mood, Tense, VerbForm, Voice. Language-
specific dependency type features are generalized
to universal types (e.g., from nmod:tmod to
nmod).

3.3 The Language-Specific Italian System
The language-specific Italian system builds on
the rule-based enhancer developed for the Italian
Stanford Dependencies Treebank (Bosco et al.,
2013, 2014). It has been adapted to predict en-
hanced dependencies according to the UD guide-

lines but does not yet handle null nodes. It pro-
vides an interesting point of comparison for the
cross-lingual systems but cannot really be evalu-
ated on the same conditions since it has been de-
veloped using data from the Italian treebank.

Added subject relations For any infinitive verb
attached to a higher predicate with an xcomp rela-
tion, the system adds a subject relation to a core or
(dative) oblique dependent of the governing verb.
In contrast to the other systems, this system uses
external language-specific resources that specify
the control/raising properties of Italian verbs.

Shared heads and dependents in coordination
For coordination, the system works similarly to
the English rule-based system but includes addi-
tional heuristics for different types of coordination
(clausal, verbal, nominal, etc.) to prevent the addi-
tion of multiple dependents of the same type (e.g.,
multiple subjects) if this leads to incorrect graphs.

4 Evaluation

Systems were evaluated on the Italian and Swedish
UD treebanks. Since these lack enhanced depen-
dencies annotation, the output is manually evalu-
ated by native speakers with extensive experience
with the UD guidelines. This allows us to report
precision, while recall can only be measured rela-
tive to the union of correct predictions. The data-
driven system was trained on the training set of the
UD Finnish-TDT treebank.

We evaluate added subjects and coordination
in a sample of 1,000 sentences from the training
set of each treebank; the evaluation of null nodes
for elided predicates, which occur more rarely, is
based on the entire training sets. The results are
shown in Table 1, with errors categorized as basic
errors caused by errors in the basic dependencies,
and enhanced errors attributed to the systems.



105

(1)

Om du ... låter pengarna stå kvar till 1971 års slut .

nsubj obj
xcomp

nsubj
nsubj

“If you ... let the money remain [in the account] until the end of 1971.”

(2)

E le autorità di Zagabria hanno proibito ai giornalisti di andare a Petrinja ...

nsubj obl
xcomp

nsubj
nsubj

“And the Zagreb authorities have forbidden journalists to go to Petrinja ...”

(3)
För fysiska personer , dödsbon och familjestiftelser slopas rätten att göra avdrag ...

amod conj
conj

amod

“For natural persons, estates and family foundations, the right to make deductions is canceled ...”

(4)

Nel distretto di Berat sono state arrestatei 150 persone , altre 70 ei nella regione di Valona ...
obl nsubj

obl nsubj
nsubj obl

“In the district of Berat 150 persons have been arrested, 70 others in the region of Valona ...”

Figure 2: Error examples: added subjects (1–2), coordination (3), null nodes (4). Basic dependencies above,
enhanced dependencies below; dotted red = incorrect; solid green = correct.

Added subject relations For Swedish, the rule-
based English system (RBE) performs better than
the data-driven Finnish system (DDF), especially
on recall. The advantage in precision comes from
object control, as illustrated in (1) in Figure 2
where DDF predicts subject control despite the
presence of a direct object. The lower recall for
DDF comes from only considering added sub-
jects of infinitives (as opposed to all xcomp pred-
icates). For Italian, the precision results are re-
versed, which is in part due to non-core arguments
occurring more frequently as controllers in Italian.
In this case, RBE will always predict a core argu-
ment (subject or object) as controller while DDF
can abstain from predicting a dependency. The
language-specific Italian system (LSI) correctly
predicts most of the non-core controllers, thanks
to lexical information, leading to higher preci-
sion than RBE. This is exemplified in (2) in Fig-
ure 2, where RBE predicts subject control while
LSI finds the oblique controller and DDF makes
no prediction at all. The lower recall for LSI is
again caused by its restriction to infinitives.2

Shared heads and dependents in coordination
The results for coordination are indicative of the
different adopted strategies. RBE achieves high

2It is worth noting that the recall of both DDF and LSI
could easily be improved by lifting the restriction to infini-
tives, since the non-infinitive cases are rarely ambiguous.

precision (0.94 for Swedish, 0.89 for Italian) by
limiting shared dependent predictions to core ar-
guments. DDF instead opts for high recall (0.97
for Swedish, 0.91 for Italian) by considering all
dependents of the first conjunct as potential shared
dependents. As a result, both systems outperform
the language-specific system on one metric, but
lose out on the other. The most common type
of error, especially for the high-recall systems, is
to treat a left-dependent of the first conjunct as
shared by all conjuncts. This is exemplified by (3)
in Figure 2, where DDF incorrectly predicts that
the adjectival modifier in fysiska personer (natural
persons) also applies to dödsbon (estates).

Null nodes for elided predicates The method
developed to resolve gapping in English seems
to generalize very well to Swedish, where almost
all the observed errors are in fact due to errors
in the basic annotation (mostly incorrect uses of
the orphan relation). The results are somewhat
lower for Italian, which allows word order varia-
tions that cannot be captured by the algorithm of
Schuster et al. (2018). A case in point is (4) in
Figure 2, where the order of the remnants in the
gapped clause (nsubj-obl) is inverted compared
to the complete clause (obl-nsubj).



106

5 Conclusion

Our main conclusion is that both the rule-based
English and the data-driven Finnish systems are
accurate enough to be useful for enhancing tree-
banks in other languages. Precision is often above
0.9 (and never below 0.8) and recall is comple-
mentary, with the English system giving better
coverage on added subjects and the Finnish one
on coordination. The error analysis furthermore
shows how both systems can be further improved.
The results are especially encouraging given that
one of the “source languages”, Finnish, is typo-
logically quite different from the others, which in-
dicates that UD does generalize across languages.

For future research, it would be interesting to
investigate how much language-specific training
data would be needed for the data-driven system
to exceed the cross-lingual results reported here.
In addition, the same techniques can of course be
used not only for treebank enhancement but also to
post-process basic dependencies in parsing, which
would potentially be useful for many downstream
applications. An interesting question there is how
much results would deteriorate because of parsing
errors in the basic dependencies.

Acknowledgments

We are grateful to two reviewers for constructive
comments on the first version of the paper. This
work was supported in part by a gift from Google,
Inc.

References
Alena Böhmová, Jan Hajič, Eva Hajičová, and Barbora

Hladká. 2003. The Prague dependency treebank. In
Treebanks, Springer, pages 103–127.

Cristina Bosco, Felice DellâĂŹOrletta, Simonetta
Montemagni, Manuela Sanguinetti, and Maria Simi.
2014. The evalita 2014 dependency parsing task.
In Proceedings of the First Italian Conference on
Computational Linguistics CLiC-it 2014 and of the
Fourth International Workshop EVALITA 2014. Pisa
University Press, volume II, pages 1–8.

Cristina Bosco, Simonetta Montemagni, and Maria
Simi. 2013. Converting italian treebanks: Towards
an italian stanford dependency treebank. In Pro-
ceedings of the 7th ACL Linguistic Annotation Work-
shop and Interoperability with Discourse. pages 61–
69.

Marie Candito, Bruno Guillaume, Guy Perrie, and
Djamé Seddah. 2017. Enhanced UD dependencies

with neutralized diathesis alternation. In Proceed-
ings of the Fourth International Conference on De-
pendency Linguistics (Depling 2017). pages 42–53.

Nathanael Chambers, Daniel Cer, Trond Grenager,
David Hall, Chloe Kiddon, Bill MacCartney, Marie-
Catherine de Marneffe, Daniel Ramage, Eric Yeh,
and Christopher D. Manning. 2007. Learning align-
ments and leveraging natural logic. In Proceedings
of the Workshop on Textual Entailment and Para-
phrasing. pages 165–170.

Yusuke Miyao and Jun’ichi Tsujii. 2004. Deep lin-
guistic analysis for the accurate identification of
predicate-argument relations. In Proceedings of
the 20th International Conference on Computational
Linguistics (COLING 2004). pages 1392–1397.

Joakim Nivre, Marie-Catherine de Marneffe, Filip Gin-
ter, Yoav Goldberg, Jan Hajič, Christopher D. Man-
ning, Ryan McDonald, Slav Petrov, Sampo Pyysalo,
Natalia Silveira, Reut Tsarfaty, and Dan Zeman.
2016. Universal Dependencies v1: A multilingual
treebank collection. In Proceedings of the 10th In-
ternational Conference on Language Resources and
Evaluation (LREC).

Jenna Nyblom, Samuel Kohonen, Katri Haverinen,
Tapio Salakoski, and Filip Ginter. 2013. Predict-
ing conjunct propagation and other extended stan-
ford dependencies. In Proceedings of the Second In-
ternational Conference on Dependency Linguistics
(DepLing 2013). pages 252–261.

Stephan Oepen and Jan Tore Lønning. 2006.
Discriminant-based MRS banking. In Proceedings
of the Fifth International Conference on Language
Resources and Evaluation (LREC 2006).

Siva Reddy, Oscar Täckström, Slav Petrov, Mark
Steedman, and Mirella Lapata. 2017. Universal se-
mantic parsing. In Proceedings of the 2017 Con-
ference on Empirical Methods in Natural Language
Processing (EMNLP 2017). pages 89–101.

Sebastian Schuster and Christopher D. Manning. 2016.
Enhanced english universal dependencies: An im-
proved representation for natural language under-
standing tasks. In Proceedings of the 10th Interna-
tional Conference on Language Resources and Eval-
uation (LREC).

Sebastian Schuster, Joakim Nivre, and Christopher D.
Manning. 2018. Sentences with gapping: Parsing
and reconstructing elided predicates. In Proceed-
ings of the 16th Annual Conference of the North
American Chapter of the Association for Computa-
tional Linguistics: Human Language Technologies
(NAACL 2018).

Sebastian Schuster, Éric Villemonte de la Clergerie,
Marie Candito, Benoît Sagot, Christopher D. Man-
ning, and Djamé Seddah. 2017. Paris and Stan-
ford at EPE 2017: Downstream evaluation of graph-
based dependency representations. In Proceedings



107

of the 2017 Shared Task on Extrinsic Parser Evalu-
ation (EPE 2017).

Daniel Zeman, Martin Popel, Milan Straka, Jan Ha-
jic, Joakim Nivre, Filip Ginter, Juhani Luotolahti,
Sampo Pyysalo, Slav Petrov, Martin Potthast, Fran-
cis Tyers, Elena Badmaeva, Memduh Gokirmak,
Anna Nedoluzhko, Silvie Cinkova, Jan Hajic jr.,
Jaroslava Hlavacova, Václava Kettnerová, Zdenka
Uresova, Jenna Kanerva, Stina Ojala, Anna Mis-
silä, Christopher D. Manning, Sebastian Schuster,
Siva Reddy, Dima Taji, Nizar Habash, Herman Le-
ung, Marie-Catherine de Marneffe, Manuela San-
guinetti, Maria Simi, Hiroshi Kanayama, Valeria de-
Paiva, Kira Droganova, Héctor Martínez Alonso,
ÇağrÄś Çöltekin, Umut Sulubacak, Hans Uszko-
reit, Vivien Macketanz, Aljoscha Burchardt, Kim
Harris, Katrin Marheinecke, Georg Rehm, Tolga
Kayadelen, Mohammed Attia, Ali Elkahky, Zhuoran
Yu, Emily Pitler, Saran Lertpradit, Michael Mandl,
Jesse Kirchner, Hector Fernandez Alcalde, Jana Str-
nadová, Esha Banerjee, Ruli Manurung, Antonio
Stella, Atsuko Shimada, Sookyoung Kwak, Gustavo
Mendonca, Tatiana Lando, Rattima Nitisaroj, and
Josie Li. 2017. Conll 2017 shared task: Multilingual
parsing from raw text to universal dependencies. In
Proceedings of the CoNLL 2017 Shared Task: Mul-
tilingual Parsing from Raw Text to Universal Depen-
dencies. pages 1–19.


