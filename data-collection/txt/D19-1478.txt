



















































Adaptive Ensembling: Unsupervised Domain Adaptation for Political Document Analysis


Proceedings of the 2019 Conference on Empirical Methods in Natural Language Processing
and the 9th International Joint Conference on Natural Language Processing, pages 4718–4730,
Hong Kong, China, November 3–7, 2019. c©2019 Association for Computational Linguistics

4718

Adaptive Ensembling: Unsupervised Domain Adaptation for Political
Document Analysis

Shrey Desai1, Barea Sinno2, Alex Rosenfeld3, and Junyi Jessy Li3

1Department of Computer Science
2Department of Government, Department of Statistics & Data Science

3Department of Linguistics
The University of Texas at Austin

shreydesai@utexas.edu, barea.sinno@utexas.edu
alexbrosenfeld@gmail.com, jessy@austin.utexas.edu

Abstract
Insightful findings in political science often re-
quire researchers to analyze documents of a
certain subject or type, yet these documents
are usually contained in large corpora that
do not distinguish between pertinent and non-
pertinent documents. In contrast, we can find
corpora that label relevant documents but have
limitations (e.g., from a single source or era),
preventing their use for political science re-
search. To bridge this gap, we present adaptive
ensembling, an unsupervised domain adapta-
tion framework, equipped with a novel text
classification model and time-aware training to
ensure our methods work well with diachronic
corpora. Experiments on an expert-annotated
dataset show that our framework outperforms
strong benchmarks. Further analysis indicates
that our methods are more stable, learn bet-
ter representations, and extract cleaner corpora
for fine-grained analysis.

1 Introduction

Recent progress in natural language processing
and computational social science have pushed po-
litical science research into new frontiers. For
example, scholars have studied language use in
presidential elections (Acree et al., 2018), legisla-
tive text in Congress (de Marchi et al., 2018), and
similarities in national constitutions (Elkins and
Shaffer, 2019). However, datasets used by polit-
ical scientists are mostly homogeneous in terms
of subject (e.g., immigration) or document type
(e.g., constitutions). Labeled corpora with perti-
nent documents usually only stem from a single
source; this makes it difficult to generalize con-
clusions derived from them to other sources. On
the other hand, corpora spanning multiple decades
and sources tend to be unlabeled. These cor-
pora are largely untouched by political scientists;
to illustrate some problems that arise with study-
ing such data, Table 1 shows a sample of topics

Topic 1 like, day, would, a.m., center
Topic 2 two, samour, family, veronica, son
Topic 3 would, hospital, also, car, hyundai
Topic 4 said, people, one, years, think
Topic 5 city, 6-4, last, wine, york

Table 1: Randomly sampled topics and top keywords
derived from a 50-topic LDA model trained on a sam-
ple of COHA documents. Topic modeling results on a
political subset of COHA are presented in Table 5. Ad-
ditionally, topic model hyperparameters are detailed in
Appendix A.

generated by Latent Dirichlet Allocation (LDA)
(Blei et al., 2003), a popular topic model in so-
cial science, trained on 60,000 documents sampled
from the Corpus of Historical American English
(COHA) (Davies, 2008). The generated topics are
extremely vague and not specific to politics.

This paper bridges the gap between labeled
and unlabeled corpora by framing the problem
as one of domain adaptation. We develop adap-
tive ensembling, an unsupervised domain adapta-
tion framework that learns from a single-source,
labeled corpus (the source domain) and utilizes
these representations effectively to obtain labels
for a multi-source, unlabeled corpus (the tar-
get domain). Our method draws upon consis-
tency regularization, a popular technique that sta-
bilizes model predictions under input or weight
perturbations (Athiwaratkun et al., 2019). At
the framework-level, we introduce an adaptive,
feature-specific approach to optimization; at the
model-level, we develop a novel text classification
model that works well with our framework. To
better handle the diachronic nature of our corpora,
we also incorporate time-aware training and rep-
resentations.

Our experiments use the New York Times An-
notated Corpus (NYT) (Sandhaus, 2008) as our
source domain corpus and COHA as our target do-



4719

main corpus. Concretely, we construct two classi-
fication tasks: a binary task to determine whether
a document is political or non-political; and a
multi-label task to categorize a document under
three major areas of political science in the US:
American Government, Political Economy, and In-
ternational Relations (Goodin, 2009). We subse-
quently introduce an expert-labeled test set from
COHA to evaluate our methods.

Our framework, equipped with our best model,
significantly outperforms existing domain adap-
tation algorithms on our tasks. In particu-
lar, adaptive ensembling achieves gains of 11.4
and 10.1 macro-averaged F1 on the binary
and multi-label tasks, respectively. Qualita-
tively, adaptive ensembling conditions the opti-
mization process, learns smoother latent repre-
sentations, and yields precise but diverse top-
ics as demonstrated by LDA on an extracted
political subcorpus of COHA. We release our
code and datasets at http://github.com/
shreydesai/adaptive-ensembling.

2 Motivation from Political Science

Quantitative studies of American public opinion
over time have mostly been restricted to surveys
such as the American National Election Survey
(Baldassarri and Gelman, 2008; Campbell et al.,
1980). However, surveys often do not pose well-
formed questions, reflect true voter opinion, or
capture mass public opinion (Zaller et al., 1992;
Bishop, 2004). Therefore, researchers often seek
to compare survey findings with those of mass me-
dia as the relationship between public opinion and
the media has been widely established (Baum and
Potter, 2008; McCombs, 2018). Press media, one
form of mass media, manifests itself in large, di-
achronic collections of newspaper articles; such
corpora provide a promising avenue for study-
ing public opinion and testing theories, provided
scholars can be confident that the measures they
obtain over time are substantively invariant (Davi-
dov et al., 2014). However, as alluded to earlier,
such diachronic corpora are often unlabeled; polit-
ical scientists cannot draw conclusions from these
corpora in their raw form as they are unable to dis-
tinguish between political and non-political arti-
cles. We frame this problem as an exchange be-
tween two domains: a source, labeled corpus with
modern articles (NYT) and a target, unlabeled cor-
pus with decades of articles originating from a

multitude of news sources (COHA). Using domain
adaptation methods, we can extract a political sub-
corpus from COHA that would be amenable for
the study of public opinion research over time.

3 Unsupervised Domain Adaptation

In this section, we detail the core concepts behind
our unsupervised domain adaptation framework.
We describe the problem setup (§3.1), an overview
of self-ensembling and consistency regularization
(§3.2-§3.4), and our novel contributions to this
framework (§3.5-§3.6).

3.1 Problem Setup

Let X and Y denote the input and output spaces,
respectively. We have access to labeled samples
{x(i)L , y

(i)
L }Ni=1 from a source domain DS and un-

labeled samples {x(i)U }Mi=1 from a target domain
DT . The goal of unsupervised domain adaptation
is to learn a function f : X → Y that maximizes
the likelihood of the target domain samples by
only leveraging supervision from the source do-
main samples. We also assume the existence of a
small amount of labeled target domain samples in
order to create a development set, following exist-
ing work in unsupervised domain adaptation (Glo-
rot et al., 2011; Chen et al., 2012; French et al.,
2018; Zhang et al., 2017).

3.2 Self-Ensembling

Our unsupervised domain adaptation framework
builds on top of self-ensembling (Laine and Aila,
2017), a semi-supervised learning algorithm based
on consistency regularization, whereby models
are trained to be robust against injected noise
(Athiwaratkun et al., 2019).

Self-ensembling is an interplay between two
neural networks: a student network f(x; θ) and a
teacher network f(x;φ). The inputs to both net-
works are perturbed separately, and the objective
is to measure the consistency of the student net-
work’s predictions against the teacher’s. Both net-
works share the same base model architecture and
initial parameter values, but follow different train-
ing paradigms (Laine and Aila, 2017). In particu-
lar, the student network is updated via backpropa-
gation, then the teacher network is updated with
an exponential average of the student network’s
parameters (Tarvainen and Valpola, 2017). The
networks are trained in an alternating fashion un-
til they converge. During test time, the teacher

http://github.com/shreydesai/adaptive-ensembling
http://github.com/shreydesai/adaptive-ensembling


4720

Figure 1: Visualization of the self-ensembling training
procedure. Descriptions of individual components are
detailed in §3.2-§3.4.

network is used to infer the labels for target do-
main samples. Figure 1 visualizes the overall
training procedure. Further intuition behind self-
ensembling is available in Appendix B.

Next, we discuss the training process for the stu-
dent network (§3.3), the original fixed ensembling
method in Tarvainen and Valpola (2017) (§3.4),
and our proposed adaptive ensembling method
(§3.5).

3.3 Student Training
The student network uses labeled samples from
the source domain and unlabeled samples from the
target domain to learn domain-invariant features.
This is realized by using multiple loss functions,
each with its own objective. The supervised loss
is simply the cross-entropy loss of the student net-
work outputs given source domain samples:

LCE(θ) =
∑

(x,y)∈DS

log p(y|x′)

However, the supervised loss alone prevents the
student network from learning anything useful
about the target domain. To address this, Laine
and Aila (2017) introduce an unsupervised loss
to ensure that the student and teacher networks
have similar predictions for target domain sam-
ples. French et al. (2018) only enforce the consis-
tency constraint for target domain samples, but we
propose using both source and target domain sam-
ples with separately perturbed inputs x′ and x′′;
this provides a balanced source of supervision to
train our adaptive constants, discussed in §3.5:

LMSE(θ, φ) =
∑

x∈DS∪DT

||f(x′; θ)− f(x′′;φ)||2

The overall objective is a combination of the
two loss functions:

L(θ, φ) = LCE + LMSE
3.4 Fixed Ensembling
The teacher network’s parameters form an ensem-
ble of the student network’s parameters over the
course of training:

φ(t+1) ← αφ(t) + (1− α)θ(t)

where α is a smoothing factor that controls the
magnitude of the parameter updates. Since the la-
bels for the target domain samples are inherently
unknown, ensembling parameters in the presence
of noise helps the teacher network’s predictions
converge to the true label (Tarvainen and Valpola,
2017).

Limitations Empirically, we find that the highly
unstable loss surface presented by textual datasets
causes large instabilities in the optimization pro-
cess. One of the key insights of this paper is that
these instabilities are due to the dynamics of the
unsupervised loss. Because the unsupervised loss
effectively regularizes the source domain repre-
sentations to work well in the target domain (Laine
and Aila, 2017), performance degrades rapidly if
this loss fails to converge. This is a strong in-
dicator that self-ensembling fails to learn useful,
shared representations for knowledge transfer be-
tween textual domains. Qualitative evidence of
the unsupervised loss’ instability is shown in Fig-
ure 6a and further discussed in §7.

3.5 Adaptive Ensembling
We hypothesize that smoothing with a fixed hy-
perparameter α is responsible for said instabili-
ties. For any given weight matrix (or bias vec-
tor), each hidden unit can be conceptualized as
controlling one highly specific feature or attribute
(Bau et al., 2019). These units may need to be up-
dated with varying degrees throughout the course
of training; therefore, smoothing each unit with a
fixed constant severely overlooks dynamics at the
parameter-level. We propose modifying fixed en-
sembling by introducing trainable smoothing con-
stants for each unit—hereafter termed adaptive
constants—as opposed to using a fixed smoothing
constant:

φ(t+1) ← C(t) � φ(t) + (1−C(t))� θ(t)

where a matrix of adaptive constants C is applied
element-wise to φ and θ at each step.



4721

Figure 2: Vocabulary overlap between COHA and
NYT, by decade. We collect COHA documents in each
decade, create a decade vocabulary, and calculate the
percentage overlap between each decade’s vocabulary
and the overall NYT vocabulary.

Example Assume we are training an arbitrary
weight matrix W ∈ Rm×n in the kth layer of
a fixed network architecture. Both the student
and teacher network have their own copy of W,
denoted as WSTU and WTEA, respectively. To
ensure each parameter Wij has a corresponding
adaptive constant αij , C shares the same dimen-
sionality as WSTU and WTEA. The previous equa-
tion can then be written as:

W
(t+1)
TEA ← C

(t) �W(t)TEA + (1−C
(t))�W(t)STU

Supervision Because the adaptive constants are
designed to stabilize training, it is a natural fit to
train them using the unsupervised loss:

C(t+1) ← C(t) − �∇CLMSE

This forms a crucial difference between self-
ensembling and adaptive ensembling: in the for-
mer method, the teacher network has no say in
how its parameters are modified. Adaptive ensem-
bling equips the teacher network with fine-grained
control over gradient updates, making it far easier
to align activations under a noisy setting.

3.6 Temporal Curriculum

Diachronic datasets important in political science
can be difficult to adapt to given the minimal vo-
cabulary overlap between the source and target do-
main documents. Source and target articles men-
tion named entities and events that, for the most
part, do not appear across both datasets. To ease
the difficulty of domain adaptation, we exploit the
temporal information in our datasets to introduce
a curriculum (Bengio et al., 2009).

In particular, each article comes with metadata
that includes the year in which the article was pub-
lished. Figure 2 shows that COHA articles written
closer to the time of NYT articles have a larger

vocabulary overlap than those written in the dis-
tant past. Intuitively, it is easier to learn features
from target domain samples that are more like the
source domain samples. Hence, we sort the target
domain mini-batches by year; the learning task be-
comes progressively harder as opposed to confus-
ing the models during the early stages of training.

4 Model

In this section, we introduce a new convolutional
neural network (CNN) as the plug-in model for
our unsupervised domain adaptation framework.
We motivate the use of CNNs (§4.1), formalize
the model input (§4.2), and introduce several novel
components for our task (§4.3).

4.1 Motivation
CNNs have emerged as strong baselines for text
classification in NLP (Kim, 2014). CNNs are de-
sirable candidates for our framework as they ex-
hibit a high degree of parameter sharing, signifi-
cantly reducing the number of parameters to train.
In addition, they can be designed to solely opti-
mize the log-likelihood of the training data. Ex-
perimentally, we find that models that optimize
other distributions (e.g., attention distributions in
Transformers (Vaswani et al., 2017) or Hierarchi-
cal Attention Networks (Yang et al., 2016)) do not
work well with this framework.

4.2 Model Input
Given a discrete input x = [w1, · · · , wn] and vo-
cabulary V , an embedding matrix E ∈ R|V |×d
replaces each word wi with its respective d-
dimensional embedding. The resulting embed-
dings are stacked row-wise to obtain an input ma-
trix X ∈ Rn×d. Following the notion of input
perturbation used in consistency regularization al-
gorithms (Athiwaratkun et al., 2019), we design
several methods to inject noise into the input layer.
Each input is perturbed with additive, isotropic
Gaussian noise: X̃ = X + N (0, I). Then, we
apply dropout on the perturbed inputs to eliminate
dependencies on any one word: X′ = X̃ �M
where M ∈ Rn×d is a Bernoulli mask applied
element-wise to the input matrix.

4.3 Model Architecture
Background: 1D Convolutions CNNs for text
classification generally use 2D convolutions over
the input matrix (Kim, 2014), but architectures us-
ing 1D convolutions have also been explored in



4722

Figure 3: Example three-layer CNN architecture with
sequence squeezing, state connections, and time em-
beddings. Detailed information about individual com-
ponents is available in §4.3. FC represents a fully-
connected layer; POOL represents a pooling layer.
Best viewed in color.

other contexts, e.g., sequence modeling (Bai et al.,
2018), machine translation (Kalchbrenner et al.,
2016), and text generation (Yang et al., 2017). Our
model draws upon the latter approach for political
document classification. CNNs utilizing 1D con-
volutions are typically autoregressive in nature;
that is, each output yt only depends on the inputs
x<t to avoid information leakage into the future.
Two approaches have been proposed to achieve
this: history-padding (Bai et al., 2018, 2019) and
masked convolutions (Kalchbrenner et al., 2016).
Further, each successive convolution uses an ex-
ponentially increasing dilation factor, reducing the
depth of the network significantly. Below, we
elaborate on the components of our model:

Sequence Squeezing Given a model with ` lay-
ers, previous approaches (Bai et al., 2018, 2019)
history-pad the input with

∑`
i=1 d

(i−1)(f − 1) ze-
ros to obtain an output of length n, where d is
the dilation factor and f is the filter size. How-
ever, we propose history-padding the input with
(
∑`

i=1 d
(i−1)(f − 1))− n+ 1 zeros to ensure the

convolutions compress the sequence down to one
output unit. Formally, this produces an output fea-
ture map of dimension B × C × 1 where B is the
batch size and C is the number of channels; one
can use a simple squeeze() operation to obtain
the compact feature matrix B × C. Though this
is a subtle difference, our approach yields much
richer representations for classification.

State Connections In each layer `i, a kernel Wi
convolves across an intermediate sequence, induc-
ing a feature map Ai. Because the input is pre-

sented as a sequence, the application of Wi along
a one-dimensional axis encourages Ai to encode
temporal features, similar to how the hidden state
is formed by applying shared weights across a
sequence in recurrent architectures. Further, be-
cause the receptive field grows exponentially, the
convolutions build hierarchical representations of
the input, implying Ai+1 builds a more abstract
representation of the input than Ai. We exploit
this stateful information by pooling each activa-
tion map Ai into a vector and concatenating them
row-wise to create a state matrix:

S = Concat(Pool(A1), · · · ,Pool(A`−1))

To the best of our knowledge, our paper is the first
to explicitly use the temporal state embedded in
causal 1D convolution activations as representa-
tions for an end task.

Time Embedding To make our model time
aware, we learn representations for the years of the
documents (available as metadata in COHA). Such
time representations allow the model to reason
about content as it appears in different decades.
Given a year y (e.g. 1954), we normalize it to the
closed unit interval [0, 1] and linearly transform it
into a low-dimensional embedding e:

e = We

[
y −maxy

maxy −miny

]
+ be

where maxy and miny represent the maximum and
minimum observed years in the training dataset,
respectively.

Overall Architecture We concatenate the vari-
ous components of our model [X′;S; e] to create a
collective representation for classification. We use
a 1D convolution (f = 1 and d = 1) to project this
representation to k classes:

y = Conv1D([X′;S; e];Wk)

We did not observe any performance advantages
from using a fully-connected layer to perform the
projection, so we opt to use a fully-convolutional
architecture to minimize the number of parameters
(Long et al., 2015). Finally, we apply softmax to
the output vector y ∈ Rk to obtain a valid proba-
bility distribution over the classes. An example of
our model architecture is depicted in Figure 3.



4723

5 Datasets

We present a dataset for identifying political doc-
uments with manual annotation from political sci-
ence graduate students. The dataset is constructed
for binary and multi-label tasks: (1) identifying
whether a document is political (i.e. containing
notable political content) and (2) if so, the area(s)
among three major political science subfields in
the US: American Government, Political Econ-
omy, and International Relations (Goodin, 2009).

Source We use NYT as the source dataset as
it contains fine-grained descriptors of article con-
tent. We sample 4,800 articles with the descrip-
tor US POLITICS & GOVERNMENT. To obtain
non-political articles, we sample 4,800 documents
whose descriptors do not overlap with an exhaus-
tive list of political descriptors identified by a po-
litical science graduate student. For our multi-
label task, the annotator grouped descriptors in
NYT that belong to each area label we consider1.

Target Our target data are historical documents
from COHA, which contains a large collection
of news articles since the 1800s. To ensure
our dataset is useful for diachronic analysis (e.g.,
public opinion over time), we sample only from
news sources that consistently appear across the
decades. Further, we ensure there are at least 8,000
total documents in each decade group; this nar-
rows down our time span to 1922–1986. From
this subset, we sample∼250 documents from each
decade for annotation. Two political science grad-
uate students each annotated a subset of the data.

To train our unsupervised domain adaptation
framework, we use 9,600 unlabeled target exam-
ples (same number as NYT). The expert-annotated
dataset is divided into three subsets: a training set
of 984 documents (only for training the In-Domain
classifier discussed in §6.2), development set of
246 documents, and test set of 350 documents (50
per decade)2.

6 Experiments

6.1 Settings

Our CNN has 8 layers, each with 256 channels,
f = 3, d = 2i (for the ith layer), and ReLU acti-
vation. We enforce a maximum sequence length

1These descriptors are available in Appendix C.
2The news sources used and label distributions for the

expert-annotated dataset are available in Appendix D.

Binary Task Multi-Label Task

Method Mi-F Ma-F Ma-P Ma-R Ma-F

Source Only 55.7 46.2 28.8 70.0 39.6
mSDA 57.4 49.7 41.0 63.7 48.1
DANN 68.2 65.8 50.8 36.3 42.2
SE 64.0 59.5 42.7 64.1 51.0

+ curriculum 66.4 62.3 44.4 71.7 54.5
AE (ours) 75.1 74.5 46.1 75.3 57.2

+ curriculum 77.4 77.1 48.2 83.5 61.1

In-Domain 81.7 81.6 86.5 83.5 84.8

Table 2: Framework results for the binary label task
(left) and multi-label task (right). For the binary task,
we show micro- and macro-averaged F1 scores. For
the multi-label task, we show macro-averaged preci-
sion, recall, and F1 scores.

of 200 and minimum word count from [1, 2, 3]
to build the vocabulary. The embedding matrix
uses 300-D GloVe embeddings (Pennington et al.,
2014) with a dropout rate of 0.5 (Srivastava et al.,
2014). We history-pad our input with a zero vec-
tor, the state connections are obtained using av-
erage pooling, and the time embedding has a di-
mensionality of 10. The model is optimized with
Adam (Kingma and Ba, 2015), learning rate from
[10−4, 5 · 10−5, 10−5], and mini-batch size from
[16, 32]. Hyperparameters were discovered using
a grid search on the held-out development set.

6.2 Framework Results

Using our best model, we benchmark our unsuper-
vised domain adaptation framework against estab-
lished methods: (1) Marginalized Stacked De-
noising Autoencoders (mSDA): Denoising au-
toencoders that marginalize out noise, enabling
learning on infinitely many corrupted training sam-
ples (Chen et al., 2012). (2) Self-Ensembling
(SE): A consistency regularization framework that
stabilizes student and teacher network predic-
tions under injected noise (discussed in detail
in §3.2-§3.4) (Laine and Aila, 2017; Tarvainen
and Valpola, 2017; French et al., 2018). (3)
Domain-Adversarial Neural Network (DANN):
Multi-component framework that learns domain-
invariant representations through adversarial train-
ing (Ganin et al., 2016). We also benchmark
against Source Only (classifier trained on the
source domain only) and In-Domain (classifier
trained on the target domain only) to establish
lower and upper performance bounds, respectively
(Zhang et al., 2017).

Framework results are presented in Table 2. Our



4724

Binary Task Multi-Label Task

Model Mi-F Ma-F Ma-P Ma-R Ma-F

LR 63.7 60.9 53.3 67.3 31.9
BiLSTM 64.8 63.1 36.2 65.0 46.3
CNN (2D) 73.1 72.1 49.0 73.8 58.9
CNN (ours) 75.4 75.3 36.9 91.4 52.5
+ seq squeeze 75.1 74.6 45.8 79.6 58.2

+ state conn 80.2 76.3 45.3 85.5 59.2
+ time emb 77.4 77.1 48.2 83.5 61.1

Table 3: Model results with adaptive ensembling for
the binary label task (left) and multi-label task (right).
For the binary task, we show micro- and macro-
averaged F1 scores. For the multi-label task, we show
macro-averaged precision, recall, and F1 scores.

method achieves the highest F1 scores for both
tasks. The temporal curriculum further improves
our results by a large margin, validating its effec-
tiveness for domain adaptation on diachronic cor-
pora. Although DANN achieves higher precision
on the multi-label task, its recall largely suffers.

6.3 Model Results
Next, we ablate the various components of our
model and evaluate several other strong text clas-
sification baselines under our framework: (1) Lo-
gistic Regression (LR): We average the word em-
beddings of each token in the sequence, then use
these to train a logistic regression classifier. (2)
Bidirectional LSTM (BiLSTM): A bidirectional
LSTM obtains forwards and backwards input rep-
resentations [

−→
ht;
←−
ht] (Hochreiter and Schmidhu-

ber, 1997); they are concatenated and passed
through a fully-connected layer. (3) CNN (2D):
A CNN using 2D kernels 3 × 300, 4 × 300,
and 5 × 300 obtains representations (Kim, 2014).
They are max-pooled, concatenated row-wise, and
passed through a fully-connected layer.

Model ablations and results are presented in Ta-
ble 3. Our full model achieves the highest F1
scores on both the binary and multi-label tasks,
and each component consistently contributes to
the overall F1 score. The 2D CNN also has de-
cent F1 scores, showing that our framework works
with standard CNN models. Further, the time em-
bedding significantly improves both F1 scores, in-
dicating the model effectively utilizes the unique
temporal information present in our corpora.

7 Analysis

In this section, we pose and qualitatively answer
numerous probing questions to further understand

Figure 4: Trajectories of five randomly sampled adap-
tive constants from our CNN over the course of train-
ing. Best viewed in color.

the strong performance of adaptive ensembling.
We analyze several characteristics of the over-
all framework (§7.1), then qualitatively inspect its
performance on our datasets (§7.2).

7.1 Framework
Are the adaptive constants different across hid-
den units? We randomly sample five adaptive
constants and track their value trajectories over
the course of training. Figure 4 shows all of
them sharply converge to and bounce around the
same general neighboorhood. This is strong evi-
dence that we cannot use a fixed hyperparameter
α to smooth each parameter, rather we need per-
parameter smoothing constants to account for the
functionality and behavior of each unit.

How do the adaptive constants change by
layer? Figure 5 shows the distribution of weight
and bias parameters of adaptive constants for a top,
middle, and bottom layer of our CNN. For the
weight parameters, the teacher relies heavily on
the student (α is skewed towards smaller smooth-
ing rates) in the top layer, but gradually reduces
its dependence by learning target domain features
in the lower layers (α is skewed towards larger
smoothing rates). For the bias parameters, the
teacher prominently shifts the student features to
work for the target domain in the top layer, but re-
duces its dependence on the student in the lower
layers. This shows why using a fixed hyperparam-
eter α does not account for layer-wise dynamics,
i.e. each layer requires a specific distribution of α
values to achieve strong performance.

Do adaptive constants benefit training and la-
tent representations? Figure 6a depicts the un-
supervised loss trajectories for self-ensembling



4725

Figure 5: Distribution of teacher network adaptive con-
stants for a top, middle, and bottom layer. We dis-
play adaptive constants for both weight (top) and bias
(bottom) parameters. The x-axis is shared for both the
weight and bias distributions.

(SE) and adaptive ensembling (AE). Compared
to SE, the adaptive constants significantly stabi-
lize the unsupervised loss. Next, Figure 6b shows
the general training curves for AE and domain-
adversarial neural networks (DANN). The DANN
loss oscillates uncontrollably as the adversarial
weight increases, but increasing the unsupervised
loss weight for AE does not result in as much in-
stability. We also compare the latent representa-
tions learned by SE and AE in Figure 7. While SE
shows evidence of feature alignment, AE learns a
much smoother manifold where source and target
domain representations are intertwined.

7.2 Datasets

Does adaptive ensembling yield better topics?
In Table 1, we showed that applying LDA di-
rectly on COHA yields noisy, unrecognizable top-
ics. Here, we use the SOURCE ONLY model and
the adaptive ensembling framework to obtain la-
bels for the unlabeled pool of COHA documents.
We extract the political documents, run a topic
model on the political subcorpus, and randomly
sample topics. The SOURCE ONLY results are
shown in Table 4 and the adaptive ensembling re-
sults are shown in Table 5. The SOURCE ONLY
model has poor recall, as most of the topics are
extracted are vague and not inherently political in
nature. In contrast, our framework is able to ex-
tract a wide range of clean, identifiable political
topics. For example, the first topic reflects doc-
uments related to the Vietnam conflict while the
third topic reflects documents related to important
court proceedings.

(a) Loss curves for self-ensembling (SE) and adaptive ensem-
bling (AE) over the course of training.

(b) Loss curves for domain-adversarial neural networks
(DANN) and adaptive ensembling (AE). The adversarial loss
weight and unsupervised loss weight are annealed for both
methods. For fair comparison, we employ the adversarial
weight annealing schedule outlined in Ganin et al. (2016).

Topic 1 dr, women, week, medical, doctors
Topic 2 city, police, street, car, avenue
Topic 3 trial, years, police, prison, court
Topic 4 union, strike, workers, lewis, service
Topic 5 like, man, years, little, week

Table 4: Randomly sampled topics and top keywords
derived from a 50-topic LDA model trained on 28K
COHA articles identified as political using the SOURCE
ONLY model.

Does adaptive ensembling preserve the in-
tegrity of the original corpus? In order for
political scientists to effectively study latent
variables—such as political polarization—over
time, the extracted political subcorpus must con-
tain a similar integrity as the original corpus. That
is, the subcorpus’ distribution of documents across
years and sources must relatively match that of the
original corpus. First, we analyze the document
counts for each decade bin, shown in Figure 8.
The political subcorpus shows a relatively consis-
tent count across the deacdes, notably also cap-
turing salient peaks from the 1920-1930s. Next,
we analyze the document counts for each news
source. Once again, the political subcorpus fea-
tures documents from all sources that appear in



4726

Figure 7: PCA performed on the latent representations
of the teacher network in self-ensembling (left) and
adaptive ensembling (right). We show representations
for both source domain samples (green) and target do-
main samples (blue). Best viewed in color.

Topic 1 vietnam, hanoi, atomic, bombing, south
Topic 2 germany, britain, france, europe, soviet
Topic 3 court, justice, commission, law, attorney
Topic 4 tax, oil, prices, petroleum, industry
Topic 5 coal, union, strike, workers, miners

Table 5: Randomly sampled topics and top keywords
derived from a 50-topic LDA model trained on 28K
COHA articles identified as political using ADAPTIVE
ENSEMBLING.

the original corpus. In addition, the varied distri-
bution across sources is also captured; Time Mag-
azine (TM) has the most documents whereas Wall
Street Journal (WSJ) has the least documents. To-
gether, these results show that the resulting subcor-
pus is amenable for political science research as it
exhibits important characteristics derived from the
original COHA corpus.

8 Related Work

Early approaches for unsupervised domain adap-
tation use shared autoencoders to create cross-
domain representations (Glorot et al., 2011; Chen
et al., 2012). More recently, Ganin et al. (2016)
introduce a new paradigm that create domain-
invariant representations through adversarial train-
ing. This has gained popularity in NLP (Zhang
et al., 2017; Fu et al., 2017; Chen et al., 2018),
however the difficulties of adversarial training are
well-established (Salimans et al., 2016; Arjovsky
and Bottou, 2017). Consistency regularization
methods (e.g., self-ensembling) outperform adver-
sarial methods on visual semi-supervised and do-
main adaptation tasks (Athiwaratkun et al., 2019),
but have rarely been applied to textual data (Ko
et al., 2019). Finally, Huang and Paul (2018)
establish the feasibility of using domain adapta-
tion to label documents from discrete time periods.

Figure 8: Document counts per decade for the original
COHA corpus (top) and the extracted political subcor-
pus (bottom).

Figure 9: Document counts per news source for the
original COHA corpus (left) and the extracted po-
litical subcorpus (right). The sources displayed in-
clude Chicago Tribute (CT), Christian Science Moni-
tor (CSM), New York Times (NYT), Time Magazine
(TM), and Wall Street Journal (WSJ).

Our work departs from previous work by propos-
ing an adaptive, time-aware approach to consis-
tency regularization provisioned with causal con-
volutional networks.

9 Conclusion

We present adaptive ensembling, an unsupervised
domain adaptation framework capable of identi-
fying political texts for a multi-source, diachronic
corpus by only leveraging supervision from a
single-source, modern corpus. Our methods out-
perform strong benchmarks on both binary and
multi-label classification tasks. We release our
system, as well as an expert-annotated set of po-
litical articles from COHA, to facilitate domain
adaptation research in NLP and political science
research on public opinion over time.

Acknowledgments

The authors acknowledge the Texas Advanced
Computing Center (TACC) at The University of
Texas at Austin for providing HPC resources used
to conduct this research. Thanks as well to Greg
Durrett, Katrin Erk, and the anonymous reviewers
for their helpful comments. This work was par-
tially supported by the NSF Grant IIS-1850153.



4727

References
Brice DL Acree, Justin H Gross, Noah A Smith,

Yanchuan Sim, and Amber E Boydstun. 2018. Etch-
a-sketching: Evaluating the post-primary rhetorical
moderation hypothesis. American Politics Research.

Martin Arjovsky and Léon Bottou. 2017. Towards
principled methods for training generative adversar-
ial networks. In International Conference on Learn-
ing Representations.

Ben Athiwaratkun, Marc Finzi, Pavel Izmailov, and
Andrew Gordon Wilson. 2019. There are many con-
sistent explanations of unlabeled data: Why you
should average. In International Conference on
Learning Representations.

Shaojie Bai, J Zico Kolter, and Vladlen Koltun.
2018. An empirical evaluation of generic convolu-
tional and recurrent networks for sequence model-
ing. arXiv preprint arXiv:1803.01271.

Shaojie Bai, J. Zico Kolter, and Vladlen Koltun. 2019.
Trellis networks for sequence modeling. In Interna-
tional Conference on Learning Representations.

Delia Baldassarri and Andrew Gelman. 2008. Partisans
without constraint: Political polarization and trends
in american public opinion. American Journal of
Sociology, 114(2):408–446.

Anthony Bau, Yonatan Belinkov, Hassan Sajjad, Nadir
Durrani, Fahim Dalvi, and James Glass. 2019. Iden-
tifying and controlling important neurons in neural
machine translation. In International Conference on
Learning Representations.

Matthew A Baum and Philip BK Potter. 2008. The re-
lationships between mass media, public opinion, and
foreign policy: Toward a theoretical synthesis. An-
nual Review of Political Science, 11:39–65.

Yoshua Bengio, Jérôme Louradour, Ronan Collobert,
and Jason Weston. 2009. Curriculum learning. In
Proceedings of the 26th Annual International Con-
ference on Machine Learning, pages 41–48.

George F Bishop. 2004. The illusion of public opinion:
Fact and artifact in American public opinion polls.
Rowman & Littlefield Publishers.

David M Blei, Andrew Y Ng, and Michael I Jordan.
2003. Latent dirichlet allocation. Journal of Ma-
chine Learning Research, 3(Jan):993–1022.

Angus Campbell, Philip E Converse, Warren E Miller,
and Donald E Stokes. 1980. The American Voter.
University of Chicago Press.

Minmin Chen, Zhixiang Xu, Kilian Q. Weinberger,
and Fei Sha. 2012. Marginalized denoising au-
toencoders for domain adaptation. In Proceed-
ings of the 29th International Conference on Inter-
national Conference on Machine Learning, pages
1627–1634.

Xilun Chen, Yu Sun, Ben Athiwaratkun, Claire Cardie,
and Kilian Weinberger. 2018. Adversarial deep av-
eraging networks for cross-lingual sentiment classi-
fication. Transactions of the Association for Com-
putational Linguistics, 6:557–570.

Jacob Cohen. 1960. A coefficient of agreement for
nominal scales. Educational and psychological
measurement, 20(1):37–46.

Eldad Davidov, Bart Meuleman, Jan Cieciuch, Pe-
ter Schmidt, and Jaak Billiet. 2014. Measurement
equivalence in cross-national research. Annual re-
view of sociology, 40:55–75.

Mark Davies. 2008. The corpus of contemporary amer-
ican english: 450 million words, 1990-present.

Zachary Elkins and Robert Shaffer. 2019. On measur-
ing textual similarity. Work in progress.

Geoff French, Michal Mackiewicz, and Mark Fisher.
2018. Self-ensembling for visual domain adapta-
tion. In International Conference on Learning Rep-
resentations.

Lisheng Fu, Thien Huu Nguyen, Bonan Min, and
Ralph Grishman. 2017. Domain adaptation for re-
lation extraction with domain adversarial neural net-
work. In Proceedings of the Eighth International
Joint Conference on Natural Language Processing
(Volume 2: Short Papers), pages 425–429.

Yaroslav Ganin, Evgeniya Ustinova, Hana Ajakan,
Pascal Germain, Hugo Larochelle, François Lavi-
olette, Mario Marchand, and Victor Lempitsky.
2016. Domain-adversarial training of neural net-
works. The Journal of Machine Learning Research,
17(1):2096–2030.

Xavier Glorot, Antoine Bordes, and Yoshua Bengio.
2011. Domain adaptation for large-scale sentiment
classification: A deep learning approach. In Pro-
ceedings of the 28th International Conference on
Machine Learning, pages 513–520.

Robert E Goodin. 2009. The Oxford handbook of po-
litical science, volume 11. Oxford University Press.

Sepp Hochreiter and Jürgen Schmidhuber. 1997.
Long short-term memory. Neural computation,
9(8):1735–1780.

Xiaolei Huang and Michael J Paul. 2018. Examining
temporality in document classification. In Proceed-
ings of the 56th Annual Meeting of the Association
for Computational Linguistics (Volume 2: Short Pa-
pers), pages 694–699.

Nal Kalchbrenner, Lasse Espeholt, Karen Simonyan,
Aaron van den Oord, Alex Graves, and Koray
Kavukcuoglu. 2016. Neural machine translation in
linear time. arXiv preprint arXiv:1610.10099.



4728

Yoon Kim. 2014. Convolutional neural networks for
sentence classification. In Proceedings of the 2014
Conference on Empirical Methods in Natural Lan-
guage Processing, pages 1746–1751.

Diederik P Kingma and Jimmy Ba. 2015. Adam: A
method for stochastic optimization. In International
Conference for Learning Representations.

Wei-Jen Ko, Greg Durrett, and Junyi Jessy Li. 2019.
Domain agnostic real-valued specificity prediction.
In Proceedings of the AAAI Conference on Artificial
Intelligence.

Samuli Laine and Timo Aila. 2017. Temporal ensem-
bling for semi-supervised learning. In International
Conference for Learning Representations.

Jonathan Long, Evan Shelhamer, and Trevor Darrell.
2015. Fully convolutional networks for semantic
segmentation. In Proceedings of the IEEE Confer-
ence on Computer Vision and Pattern Recognition,
pages 3431–3440.

Scott de Marchi, Spencer Dorsey, and Michael J Ens-
ley. 2018. Policy and the structure of roll call voting
in the us house. Available at SSRN 3262316.

Maxwell McCombs. 2018. Setting the agenda: Mass
media and public opinion. John Wiley & Sons.

Jeffrey Pennington, Richard Socher, and Christopher
Manning. 2014. Glove: Global vectors for word
representation. In Proceedings of the 2014 Con-
ference on Empirical Methods in Natural Language
Processing, pages 1532–1543.

Tim Salimans, Ian Goodfellow, Wojciech Zaremba,
Vicki Cheung, Alec Radford, and Xi Chen. 2016.
Improved techniques for training GANs. In Ad-
vances in Neural Information Processing Systems
29, pages 2234–2242.

Evan Sandhaus. 2008. The New York Times annotated
corpus. Linguistic Data Consortium, Philadelphia,
6(12):e26752.

Nitish Srivastava, Geoffrey Hinton, Alex Krizhevsky,
Ilya Sutskever, and Ruslan Salakhutdinov. 2014.
Dropout: a simple way to prevent neural networks
from overfitting. The Journal of Machine Learning
Research, 15(1):1929–1958.

Antti Tarvainen and Harri Valpola. 2017. Mean teach-
ers are better role models: Weight-averaged consis-
tency targets improve semi-supervised deep learning
results. In Advances in Neural Information Process-
ing Systems 30, pages 1195–1204.

Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob
Uszkoreit, Llion Jones, Aidan N Gomez, Łukasz
Kaiser, and Illia Polosukhin. 2017. Attention is all
you need. In Advances in Neural Information Pro-
cessing Systems 30, pages 5998–6008.

Zichao Yang, Zhiting Hu, Ruslan Salakhutdinov, and
Taylor Berg-Kirkpatrick. 2017. Improved varia-
tional autoencoders for text modeling using dilated
convolutions. In Proceedings of the 34th Inter-
national Conference on Machine Learning, pages
3881–3890.

Zichao Yang, Diyi Yang, Chris Dyer, Xiaodong He,
Alex Smola, and Eduard Hovy. 2016. Hierarchi-
cal attention networks for document classification.
In Proceedings of the 2016 Conference of the North
American Chapter of the Association for Computa-
tional Linguistics: Human Language Technologies,
pages 1480–1489.

John R Zaller et al. 1992. The nature and origins of
mass opinion. Cambridge University Press.

Yuan Zhang, Regina Barzilay, and Tommi Jaakkola.
2017. Aspect-augmented adversarial networks for
domain adaptation. Transactions of the Association
for Computational Linguistics, 5:515–528.



4729

A LDA Topic Model

We experimented with a range of hyperparameters
to ensure the Latent Dirichlet Allocation (LDA)
model was best optimized for our datasets, lever-
aging the Gensim3 library. In particular, we re-
moved all stopwords, extremely rare words (tail
10-20% from a unigram distribution), and set the
number of topics to 50.

B Self-Ensembling

The core intuition behind consistency regulariza-
tion is that ensembled predictions are more likely
to be correct than single predictions (Laine and
Aila, 2017; Tarvainen and Valpola, 2017). To this
end, Laine and Aila (2017) introduce a student
and teacher network that yield single predictions
and ensembled predictions, respectively.

After learning from labeled samples, the stu-
dent may produce varying, dissimilar predictions
for unlabeled samples due to the stochastic na-
ture of optimization. One potential solution is to
ensemble predictions across time to converge at
the most likely prediction (Laine and Aila, 2017).
Tarvainen and Valpola (2017) improve upon this
method by showing that ensembling parameters
(as opposed to predictions) results in better pre-
dictions. Because the teacher’s parameters are
smoothed with the student’s learned parameters at
each iteration, the teacher effectively becomes an
ensemble of the student across time.

Further, to ensure that the features learned from
the labeled samples are compatible with the unla-
beled samples, Laine and Aila (2017); Tarvainen
and Valpola (2017); French et al. (2018) motivate
a consistency-enforcing approach to bring the stu-
dent and teacher’s predictions closer together. In
essence, if a feature learned from samples in the
labeled domain is incompatible with samples in
the unlabeled domain, the consistency (unsuper-
vised) loss penalizes its incompatibility. There-
fore, the interplay between these two networks
creates a robust, domain-invariant feature space
that characterizes both labeled and unlabeled sam-
ples (French et al., 2018). A detailed visualization
of the training procedure is presented in Figure 1
in the main body of this paper.

3https://radimrehurek.com/gensim/

Political Non-Political

AG PE IR

Train 333 8 156 497
Dev 82 1 33 116
Test 125 8 47 208

Table 6: Distribution of train (In-Domain benchmark
only), dev, test documents in our expert-annotated
COHA subcorpus. For political documents, we
break down the distribution into American Government
(AG), Political Economy (PE), and International Rela-
tions (IR).

C NYT Descriptors

We build a list of “political” descriptors in NYT to
determine (a) which labels we can or cannot sam-
ple non-political documents from; and (b) which
descriptors fall under the three areas of politi-
cal science we consider for our multi-label task
(American Government, Political Economy, and
International Relations).

Because documents can be tagged with multiple
descriptors, we build a list of descriptors whose
documents have significant overlap with US POL-
ITICS & GOVERNMENT. The second author, a po-
litical science graduate student, filtered this list to
57 descriptors that are political in nature.

For (a), we sample 4,600 non-political docu-
ments whose descriptors do not overlap with the
57 political descriptors described above. For (b),
the same political science graduate student assigns
each descriptor with one or more area labels. We
use this label information to build an NYT dataset
for our tasks. The 57 political descriptors and their
corresponding area labels are tabulated in Table 7.

D Expert-Annotated Dataset

To create an initial COHA subcorpus of 56,000
documents (8,000 per decade), we sample from
the following news sources that consistently ap-
pear in across decades: Chicago Tribune, Chris-
tian Science Monitor, New York Times, Time
Magazine, and Wall Street Journal. Note that these
NYT articles (up to year 1986) do not appear in the
NYT annotated corpus (Sandhaus, 2008) (starting
from year 1987), which we used as our source,
training dataset.

From this subcorpus, we perform additional
steps to create an expert-annotated dataset (§5).
Label distributions for our dataset are presented
in Table 6. Although political economy (PE) is



4730

severely underrepresented, we experimentally find
that these documents have salient features and are
not as difficult to classify. In addition, we employ
class imbalance penalties to prevent our model
from ignoring these documents.

The source dataset (NYT) was already anno-
tated; to ensure label agreement with our tar-
get dataset (COHA), we sampled documents from
the source dataset and had our political science
graduate students label them to compare against
the original label. There were minimal prob-
lems here—because NYT has fine-grained labels
for their documents, the politically-labeled articles
were clearly political and vice-versa.

The target datatset (COHA) was divided into
halves and each political science graduate student
annotated a half. Prior to annotation, they agreed
upon a set of rules to minimize bias in the anno-
tation process. In addition, both of them worked
side-by-side during all annotation periods, so they
were able to ask each other’s opinion in case there
was confusion. We also took measures to ensure
label correctness after annotation was completed.
Each political science graduate student sampled a
batch of their political and non-political annota-
tions and sent it to the other to evaluate. Again,
there was not much disagreement here as the rules
decided upon in the beginning were sufficient to
cover most edge cases. Quantitatively, Cohen’s
κ = 0.95 as calculated on a mutually annotated
subset (Cohen, 1960).

Area Label
Topic AG PE IR
International Relations X
Presidents and Presidency (US) X
Presidential Elections (US) X
War and Revolution X
Presidential Election of 2000 X
Presidential Election of 2004 X
Law and Legislation X
Civil War and Guerrilla Warfare X
International Trade and World Market X
Presidential Election of 1996 X
Public Opinion
Economic Conditions and Trends X
Bombs and Explosives X
Arms Sales Abroad X
United States Economy X
Missiles and Missile Defense Systems X
Oil (Petroleum) and Gasoline X
Appointments and Executive Changes X
Foreign Service X
Prisoners of War X
War Crimes, Genocide and Crimes
Against Humanity

X

Vice Presidents and Vice Presidency
(US)

X

Arms Control and Limitation and Dis-
armament

X

Military Bases and Installations X
Presidential Election of 2008 X
Whitewater Case X
Vietnam War X X
Governors (US) X
Energy and Power X
Stocks and Bonds X
State of the Union Message (US) X
Wages and Salaries X
Church-State Relations X
Shiite Muslims X
Special Prosecutors (Independent
Counsel)

X

White House (Washington, DC) X
Federal Taxes (US) X
Illegal Aliens X
Social Security (US) X
Political Prisoners X X
Watergate Affair X
Government Employees X
Sunni Muslims X
Third World and Developing Countries X
Customs (Tariff) X
Welfare (US) X
Gun Control X
Global Warming X
Interest Rates X
Vetoes (US) X
Futures and Options Trading X
Attorneys General X
Layoffs and Job Reductions X
Nazi Policies Toward Jews and Minori-
ties

X

Government Bonds X
Police Brutality and Misconduct X
Executive Privilege, Doctrine of X

Table 7: Political descriptors in NYT. Each descriptor
is categorized under one or more political science ar-
eas: American Government (AG), Political Economy
(PE), and International Relations (IR).


