



















































Paraphrase to Explicate: Revealing Implicit Noun-Compound Relations


Proceedings of the 56th Annual Meeting of the Association for Computational Linguistics (Long Papers), pages 1200–1211
Melbourne, Australia, July 15 - 20, 2018. c©2018 Association for Computational Linguistics

1200

Paraphrase to Explicate:
Revealing Implicit Noun-Compound Relations

Vered Shwartz Ido Dagan
Computer Science Department, Bar-Ilan University, Ramat-Gan, Israel
vered1986@gmail.com dagan@cs.biu.ac.il

Abstract

Revealing the implicit semantic rela-
tion between the constituents of a noun-
compound is important for many NLP ap-
plications. It has been addressed in the
literature either as a classification task to
a set of pre-defined relations or by pro-
ducing free text paraphrases explicating
the relations. Most existing paraphras-
ing methods lack the ability to generalize,
and have a hard time interpreting infre-
quent or new noun-compounds. We pro-
pose a neural model that generalizes better
by representing paraphrases in a contin-
uous space, generalizing for both unseen
noun-compounds and rare paraphrases.
Our model helps improving performance
on both the noun-compound paraphrasing
and classification tasks.

1 Introduction

Noun-compounds hold an implicit semantic rela-
tion between their constituents. For example, a
‘birthday cake’ is a cake eaten on a birthday, while
‘apple cake’ is a cake made of apples. Interpreting
noun-compounds by explicating the relationship is
beneficial for many natural language understand-
ing tasks, especially given the prevalence of noun-
compounds in English (Nakov, 2013).

The interpretation of noun-compounds has been
addressed in the literature either by classifying
them to a fixed inventory of ontological relation-
ships (e.g. Nastase and Szpakowicz, 2003) or by
generating various free text paraphrases that de-
scribe the relation in a more expressive manner
(e.g. Hendrickx et al., 2013).

Methods dedicated to paraphrasing noun-
compounds usually rely on corpus co-occurrences
of the compound’s constituents as a source of ex-
plicit relation paraphrases (e.g. Wubben, 2010;
Versley, 2013). Such methods are unable to gen-
eralize for unseen noun-compounds. Yet, most
noun-compounds are very infrequent in text (Kim
and Baldwin, 2007), and humans easily interpret
the meaning of a new noun-compound by general-
izing existing knowledge. For example, consider
interpreting parsley cake as a cake made of pars-
ley vs. resignation cake as a cake eaten to cele-
brate quitting an unpleasant job.

We follow the paraphrasing approach and pro-
pose a semi-supervised model for paraphras-
ing noun-compounds. Differently from previ-
ous methods, we train the model to predict ei-
ther a paraphrase expressing the semantic rela-
tion of a noun-compound (predicting ‘[w2] made
of [w1]’ given ‘apple cake’), or a missing con-
stituent given a combination of paraphrase and
noun-compound (predicting ‘apple’ given ‘cake
made of [w1]’). Constituents and paraphrase tem-
plates are represented as continuous vectors, and
semantically-similar paraphrase templates are em-
bedded in proximity, enabling better generaliza-
tion. Interpreting ‘parsley cake’ effectively re-
duces to identifying paraphrase templates whose
“selectional preferences” (Pantel et al., 2007) on
each constituent fit ‘parsley’ and ‘cake’.

A qualitative analysis of the model shows that
the top ranked paraphrases retrieved for each
noun-compound are plausible even when the con-
stituents never co-occur (Section 4). We evalu-
ate our model on both the paraphrasing and the
classification tasks (Section 5). On both tasks,
the model’s ability to generalize leads to improved
performance in challenging evaluation settings.1

1The code is available at github.com/vered1986/panic

github.com/vered1986/panic


1201

2 Background

2.1 Noun-compound Classification
Noun-compound classification is the task con-
cerned with automatically determining the seman-
tic relation that holds between the constituents of
a noun-compound, taken from a set of pre-defined
relations.

Early work on the task leveraged information
derived from lexical resources and corpora (e.g.
Girju, 2007; Ó Séaghdha and Copestake, 2009;
Tratz and Hovy, 2010). More recent work broke
the task into two steps: in the first step, a noun-
compound representation is learned from the dis-
tributional representation of the constituent words
(e.g. Mitchell and Lapata, 2010; Zanzotto et al.,
2010; Socher et al., 2012). In the second step, the
noun-compound representations are used as fea-
ture vectors for classification (e.g. Dima and Hin-
richs, 2015; Dima, 2016).

The datasets for this task differ in size, num-
ber of relations and granularity level (e.g. Nastase
and Szpakowicz, 2003; Kim and Baldwin, 2007;
Tratz and Hovy, 2010). The decision on the re-
lation inventory is somewhat arbitrary, and sub-
sequently, the inter-annotator agreement is rela-
tively low (Kim and Baldwin, 2007). Specifi-
cally, a noun-compound may fit into more than
one relation: for instance, in Tratz (2011), busi-
ness zone is labeled as CONTAINED (zone con-
tains business), although it could also be labeled
as PURPOSE (zone whose purpose is business).

2.2 Noun-compound Paraphrasing
As an alternative to the strict classification to pre-
defined relation classes, Nakov and Hearst (2006)
suggested that the semantics of a noun-compound
could be expressed with multiple prepositional
and verbal paraphrases. For example, apple cake
is a cake from, made of, or which contains apples.

The suggestion was embraced and resulted
in two SemEval tasks. SemEval 2010 task 9
(Butnariu et al., 2009) provided a list of plau-
sible human-written paraphrases for each noun-
compound, and systems had to rank them with the
goal of high correlation with human judgments.
In SemEval 2013 task 4 (Hendrickx et al., 2013),
systems were expected to provide a ranked list of
paraphrases extracted from free text.

Various approaches were proposed for this task.
Most approaches start with a pre-processing step
of extracting joint occurrences of the constituents

from a corpus to generate a list of candidate para-
phrases. Unsupervised methods apply information
extraction techniques to find and rank the most
meaningful paraphrases (Kim and Nakov, 2011;
Xavier and Lima, 2014; Pasca, 2015; Pavlick
and Pasca, 2017), while supervised approaches
learn to rank paraphrases using various features
such as co-occurrence counts (Wubben, 2010; Li
et al., 2010; Surtani et al., 2013; Versley, 2013)
or the distributional representations of the noun-
compounds (Van de Cruys et al., 2013).

One of the challenges of this approach is the
ability to generalize. If one assumes that suffi-
cient paraphrases for all noun-compounds appear
in the corpus, the problem reduces to ranking the
existing paraphrases. It is more likely, however,
that some noun-compounds do not have any para-
phrases in the corpus or have just a few. The ap-
proach of Van de Cruys et al. (2013) somewhat
generalizes for unseen noun-compounds. They
represented each noun-compound using a compo-
sitional distributional vector (Mitchell and Lap-
ata, 2010) and used it to predict paraphrases from
the corpus. Similar noun-compounds are expected
to have similar distributional representations and
therefore yield the same paraphrases. For exam-
ple, if the corpus does not contain paraphrases for
plastic spoon, the model may predict the para-
phrases of a similar compound such as steel knife.

In terms of sharing information between
semantically-similar paraphrases, Nulty and
Costello (2010) and Surtani et al. (2013) learned
“is-a” relations between paraphrases from the
co-occurrences of various paraphrases with each
other. For example, the specific ‘[w2] extracted
from [w1]’ template (e.g. in the context of olive
oil) generalizes to ‘[w2] made from [w1]’. One of
the drawbacks of these systems is that they favor
more frequent paraphrases, which may co-occur
with a wide variety of more specific paraphrases.

2.3 Noun-compounds in other Tasks

Noun-compound paraphrasing may be considered
as a subtask of the general paraphrasing task,
whose goal is to generate, given a text fragment,
additional texts with the same meaning. How-
ever, general paraphrasing methods do not guar-
antee to explicate implicit information conveyed
in the original text. Moreover, the most notable
source for extracting paraphrases is multiple trans-
lations of the same text (Barzilay and McKeown,



1202

(23) made

(28) apple

(4145) cake
...

(7891) of

(1) [w1]

(2) [w2]

(3) [p]

ofcake made [w1]

MLPw

ŵ1i = 28

(23) made

(28) apple

(4145) cake
...

(7891) of

(1) [w1]

(2) [w2]

(3) [p]

(78) [w2] containing [w1]
...

(131) [w2] made of [w1]
...

[p]cake apple

MLPp

p̂i = 78

Figure 1: An illustration of the model predictions for w1 and p given the triplet (cake, made of, apple).
The model predicts each component given the encoding of the other two components, successfully pre-
dicting ‘apple’ given ‘cake made of [w1]’, while predicting ‘[w2] containing [w1]’ for ‘cake [p] apple’.

2001; Ganitkevitch et al., 2013; Mallinson et al.,
2017). If a certain concept can be described by
an English noun-compound, it is unlikely that a
translator chose to translate its foreign language
equivalent to an explicit paraphrase instead.

Another related task is Open Information Ex-
traction (Etzioni et al., 2008), whose goal is to ex-
tract relational tuples from text. Most system fo-
cus on extracting verb-mediated relations, and the
few exceptions that addressed noun-compounds
provided partial solutions. Pal and Mausam
(2016) focused on segmenting multi-word noun-
compounds and assumed an is-a relation between
the parts, as extracting (Francis Collins, is, NIH
director) from “NIH director Francis Collins”.
Xavier and Lima (2014) enriched the corpus with
compound definitions from online dictionaries, for
example, interpreting oil industry as (industry,
produces and delivers, oil) based on the Word-
Net definition “industry that produces and delivers
oil”. This method is very limited as it can only
interpret noun-compounds with dictionary entries,
while the majority of English noun-compounds
don’t have them (Nakov, 2013).

3 Paraphrasing Model

As opposed to previous approaches, that focus on
predicting a paraphrase template for a given noun-
compound, we reformulate the task as a multi-
task learning problem (Section 3.1), and train the
model to also predict a missing constituent given
the paraphrase template and the other constituent.
Our model is semi-supervised, and it expects as
input a set of noun-compounds and a set of con-
strained part-of-speech tag-based templates that
make valid prepositional and verbal paraphrases.

Section 3.2 details the creation of training data,
and Section 3.3 describes the model.

3.1 Multi-task Reformulation

Each training example consists of two constituents
and a paraphrase (w2, p, w1), and we train the
model on 3 subtasks: (1) predict p given w1 and
w2, (2) predict w1 given p and w2, and (3) predict
w2 given p and w1. Figure 1 demonstrates the pre-
dictions for subtasks (1) (right) and (2) (left) for
the training example (cake, made of, apple). Ef-
fectively, the model is trained to answer questions
such as “what can cake be made of?”, “what can
be made of apple?”, and “what are the possible re-
lationships between cake and apple?”.

The multi-task reformulation helps learning bet-
ter representations for paraphrase templates, by
embedding semantically-similar paraphrases in
proximity. Similarity between paraphrases stems
either from lexical similarity and overlap between
the paraphrases (e.g. ‘is made of’ and ‘made of’),
or from shared constituents, e.g. ‘[w2] involved in
[w1]’ and ‘[w2] in [w1] industry’ can share [w1]
= insurance and [w2] = company. This allows the
model to predict a correct paraphrase for a given
noun-compound, even when the constituents do
not occur with that paraphrase in the corpus.

3.2 Training Data

We collect a training set of (w2, p, w1, s) exam-
ples, where w1 and w2 are constituents of a noun-
compound w1w2, p is a templated paraphrase, and
s is the score assigned to the training instance.2

2We refer to “paraphrases” and “paraphrase templates” in-
terchangeably. In the extracted templates, [w2] always pre-
cedes [w1], probably because w2 is normally the head noun.



1203

We use the 19,491 noun-compounds found in
the SemEval tasks datasets (Butnariu et al., 2009;
Hendrickx et al., 2013) and in Tratz (2011). To ex-
tract patterns of part-of-speech tags that can form
noun-compound paraphrases, such as ‘[w2] VERB
PREP [w1]’, we use the SemEval task training data,
but we do not use the lexical information in the
gold paraphrases.

Corpus. Similarly to previous noun-compound
paraphrasing approaches, we use the Google N-
gram corpus (Brants and Franz, 2006) as a source
of paraphrases (Wubben, 2010; Li et al., 2010;
Surtani et al., 2013; Versley, 2013). The cor-
pus consists of sequences of n terms (for n ∈
{3, 4, 5}) that occur more than 40 times on the
web. We search for n-grams following the ex-
tracted patterns and containing w1 and w2’s lem-
mas for some noun-compound in the set. We re-
move punctuation, adjectives, adverbs and some
determiners to unite similar paraphrases. For ex-
ample, from the 5-gram ‘cake made of sweet ap-
ples’ we extract the training example (cake, made
of, apple). We keep only paraphrases that occurred
at least 5 times, resulting in 136,609 instances.

Weighting. Each n-gram in the corpus is accom-
panied with its frequency, which we use to assign
scores to the different paraphrases. For instance,
‘cake of apples’ may also appear in the corpus, al-
though with lower frequency than ‘cake from ap-
ples’. As also noted by Surtani et al. (2013), the
shortcoming of such a weighting mechanism is
that it prefers shorter paraphrases, which are much
more common in the corpus (e.g. count(‘cake
made of apples’)� count(‘cake of apples’)). We
overcome this by normalizing the frequencies for
each paraphrase length, creating a distribution of
paraphrases in a given length.

Negative Samples. We add 1% of negative sam-
ples by selecting random corpus words w1 and
w2 that do not co-occur, and adding an exam-
ple (w2, [w2] is unrelated to [w1], w1, sn), for
some predefined negative samples score sn. Sim-
ilarly, for a word wi that did not occur in a para-
phrase p we add (wi, p, UNK, sn) or (UNK, p,
wi, sn), where UNK is the unknown word. This
may help the model deal with non-compositional
noun-compounds, where w1 and w2 are unrelated,
rather than forcibly predicting some relation be-
tween them.

3.3 Model
For a training instance (w2, p, w1, s), we predict
each item given the encoding of the other two.

Encoding. We use the 100-dimensional pre-
trained GloVe embeddings (Pennington et al.,
2014), which are fixed during training. In addi-
tion, we learn embeddings for the special words
[w1], [w2], and [p], which are used to represent
a missing component, as in “cake made of [w1]”,
“[w2] made of apple”, and “cake [p] apple”.

For a missing component x ∈ {[p], [w1], [w2]}
surrounded by the sequences of words v1:i−1 and
vi+1:n, we encode the sequence using a bidirec-
tional long-short term memory (bi-LSTM) net-
work (Graves and Schmidhuber, 2005), and take
the ith output vector as representing the missing
component: bLS(v1:i, x, vi+1:n)i.

In bi-LSTMs, each output vector is a concate-
nation of the outputs of the forward and backward
LSTMs, so the output vector is expected to con-
tain information on valid substitutions both with
respect to the previous words v1:i−1 and the sub-
sequent words vi+1:n.

Prediction. We predict a distribution of the vo-
cabulary of the missing component, i.e. to predict
w1 correctly we need to predict its index in the
word vocabulary Vw, while the prediction of p is
from the vocabulary of paraphrases in the training
set, Vp. We predict the following distributions:

p̂ = softmax(Wp · bLS( ~w2, [p], ~w1)2)
ŵ1 = softmax(Ww · bLS( ~w2, ~p1:n, [w1])n+1)
ŵ2 = softmax(Ww · bLS([w2], ~p1:n, ~w1)1)

(1)

where Ww ∈ R|Vw|×2d, Wp ∈ R|Vp|×2d, and d is
the embeddings dimension.

During training, we compute cross-entropy loss
for each subtask using the gold item and the pre-
diction, sum up the losses, and weight them by the
instance score. During inference, we predict the
missing components by picking the best scoring
index in each distribution:3

p̂i = argmax(p̂)

ŵ1i = argmax(ŵ1)

ŵ2i = argmax(ŵ2)

(2)

The subtasks share the pre-trained word embed-
dings, the special embeddings, and the biLSTM
parameters. Subtasks (2) and (3) also share Ww,
the MLP that predicts the index of a word.

3In practice, we pick the k best scoring indices in each
distribution for some predefined k, as we discuss in Section 5.



1204

[w1] [w2] Predicted Paraphrases [w2] Paraphrase Predicted [w1] Paraphrase [w1] Predicted [w2]

cataract surgery

[w2] of [w1]

surgery [w2] to treat [w1]

heart

[w2] to treat [w1] cataract

surgery
[w2] on [w1] brain drug

[w2] to remove [w1] back patient
[w2] in patients with [w1] knee transplant

software company

[w2] of [w1]

company [w2] engaged in [w1]

management

[w2] engaged in [w1] software

company
[w2] to develop [w1] production firm
[w2] in [w1] industry computer engineer
[w2] involved in [w1] business industry

stone wall

[w2] is of [w1]

meeting [w2] held in [w1]

spring

[w2] held in [w1] morning

party
[w2] of [w1] afternoon meeting

[w2] is made of [w1] hour rally
[w2] made of [w1] day session

Table 1: Examples of top ranked predicted components using the model: predicting the paraphrase given
w1 and w2 (left), w1 given w2 and the paraphrase (middle), and w2 given w1 and the paraphrase (right).

[w2] is for [w1]

[w2] belongs to [w1]

[w2] pertaining to [w1]

[w2] issued by [w1]

[w2] related to [w1]

[w2] by way of [w1]

[w2] in terms of [w1]

[w2] done by [w1]

[w2] to produce [w1]

[w2] involved in [w1]

[w2] with [w1]

[w2] composed of [w1]
[w2] employed in [w1]

[w2] owned by [w1]

[w2] by means of [w1]

[w2] to make [w1]

[w2] produced by [w1]

[w2] source of [w1]

[w2] found in [w1]

[w2] offered by [w1]

[w2] out of [w1]

[w2] held by [w1]

[w2] for use in [w1][w2] consists of [w1]

[w2] relating to [w1]

[w2] devoted to [w1]

[w2] engaged in [w1]

[w2] occur in [w1][w2] caused by [w1]

[w2] supplied by [w1]

[w2] part of [w1]

[w2] provided by [w1]

[w2] generated by [w1]

[w2] made of [w1]

[w2] consisting of [w1]

[w2] is made of [w1]

[w2] for [w1]

[w2] from [w1]

[w2] created by [w1]

[w2] given by [w1] [w2] of providing [w1]

[w2] belonging to [w1]

[w2] aimed at [w1]

[w2] conducted by [w1]

[w2] dedicated to [w1]

[w2] made by [w1]

[w2] because of [w1]

[w2] included in [w1]

[w2] with respect to [w1]

[w2] given to [w1]

Figure 2: A t-SNE map of a sample of paraphrases, using the paraphrase vectors encoded by the biLSTM,
for example bLS([w2] made of [w1]).

Implementation Details. The model is imple-
mented in DyNet (Neubig et al., 2017). We dedi-
cate a small number of noun-compounds from the
corpus for validation. We train for up to 10 epochs,
stopping early if the validation loss has not im-
proved in 3 epochs. We use Momentum SGD
(Nesterov, 1983), and set the batch size to 10 and
the other hyper-parameters to their default values.

4 Qualitative Analysis

To estimate the quality of the proposed model, we
first provide a qualitative analysis of the model
outputs. Table 1 displays examples of the model
outputs for each possible usage: predicting the
paraphrase given the constituent words, and pre-
dicting each constituent word given the paraphrase
and the other word.

The examples in the table are from among the
top 10 ranked predictions for each component-
pair. We note that most of the (w2, paraphrase,
w1) triplets in the table do not occur in the training

data, but are rather generalized from similar exam-
ples. For example, there is no training instance for
“company in the software industry” but there is a
“firm in the software industry” and a company in
many other industries.

While the frequent prepositional paraphrases
are often ranked at the top of the list, the model
also retrieves more specified verbal paraphrases.
The list often contains multiple semantically-
similar paraphrases, such as ‘[w2] involved in
[w1]’ and ‘[w2] in [w1] industry’. This is a result
of the model training objective (Section 3) which
positions the vectors of semantically-similar para-
phrases close to each other in the embedding
space, based on similar constituents.

To illustrate paraphrase similarity we compute
a t-SNE projection (Van Der Maaten, 2014) of
the embeddings of all the paraphrases, and draw a
sample of 50 paraphrases in Figure 2. The projec-
tion positions semantically-similar but lexically-
divergent paraphrases in proximity, likely due to



1205

many shared constituents. For instance, ‘with’,
‘from’, and ‘out of’ can all describe the relation
between food words and their ingredients.

5 Evaluation: Noun-Compound
Interpretation Tasks

For quantitative evaluation we employ our model
for two noun-compound interpretation tasks. The
main evaluation is on retrieving and ranking para-
phrases (§5.1). For the sake of completeness, we
also evaluate the model on classification to a fixed
inventory of relations (§5.2), although it wasn’t de-
signed for this task.

5.1 Paraphrasing
Task Definition. The general goal of this task
is to interpret each noun-compound to multiple
prepositional and verbal paraphrases. In SemEval
2013 Task 4,4 the participating systems were
asked to retrieve a ranked list of paraphrases for
each noun-compound, which was automatically
evaluated against a similarly ranked list of para-
phrases proposed by human annotators.

Model. For a given noun-compound w1w2, we
first predict the k = 250 most likely paraphrases:
p̂1, ..., p̂k = argmaxk p̂, where p̂ is the distribution
of paraphrases defined in Equation 1.

While the model also provides a score for each
paraphrase (Equation 1), the scores have not been
optimized to correlate with human judgments. We
therefore developed a re-ranking model that re-
ceives a list of paraphrases and re-ranks the list to
better fit the human judgments.

We follow Herbrich (2000) and learn a pair-
wise ranking model. The model determines which
of two paraphrases of the same noun-compound
should be ranked higher, and it is implemented
as an SVM classifier using scikit-learn (Pedregosa
et al., 2011). For training, we use the available
training data with gold paraphrases and ranks pro-
vided by the SemEval task organizers. We extract
the following features for a paraphrase p:
1. The part-of-speech tags contained in p
2. The prepositions contained in p
3. The number of words in p
4. Whether p ends with the special [w1] symbol

5. cosine(bLS([w2], p, [w1])2, ~Vp
p̂i
) · p̂p̂i

where ~Vp
p̂i is the biLSTM encoding of the pre-

dicted paraphrase computed in Equation 1 and p̂p̂i

4
https://www.cs.york.ac.uk/semeval-2013/task4

is its confidence score. The last feature incorpo-
rates the original model score into the decision, as
to not let other considerations such as preposition
frequency in the training set take over.

During inference, the model sorts the list of
paraphrases retrieved for each noun-compound ac-
cording to the pairwise ranking. It then scores
each paraphrase by multiplying its rank with its
original model score, and prunes paraphrases with
final score < 0.025. The values for k and the
threshold were tuned on the training set.

Evaluation Settings. The SemEval 2013 task
provided a scorer that compares words and n-
grams from the gold paraphrases against those in
the predicted paraphrases, where agreement on
a prefix of a word (e.g. in derivations) yields
a partial scoring. The overall score assigned to
each system is calculated in two different ways.
The ‘isomorphic’ setting rewards both precision
and recall, and performing well on it requires ac-
curately reproducing as many of the gold para-
phrases as possible, and in much the same order.
The ‘non-isomorphic’ setting rewards only preci-
sion, and performing well on it requires accurately
reproducing the top-ranked gold paraphrases, with
no importance to order.

Baselines. We compare our method with the
published results from the SemEval task. The
SemEval 2013 baseline generates for each noun-
compound a list of prepositional paraphrases in
an arbitrary fixed order. It achieves a moder-
ately good score in the non-isomorphic setting by
generating a fixed set of paraphrases which are
both common and generic. The MELODI sys-
tem performs similarly: it represents each noun-
compound using a compositional distributional
vector (Mitchell and Lapata, 2010) which is then
used to predict paraphrases from the corpus. The
performance of MELODI indicates that the sys-
tem was rather conservative, yielding a few com-
mon paraphrases rather than many specific ones.
SFS and IIITH, on the other hand, show a more
balanced trade-off between recall and precision.

As a sanity check, we also report the results of a
baseline that retrieves ranked paraphrases from the
training data collected in Section 3.2. This base-
line has no generalization abilities, therefore it is
expected to score poorly on the recall-aware iso-
morphic setting.

https://www.cs.york.ac.uk/semeval-2013/task4


1206

Method isomorphic non-isomorphic

Baselines

SFS (Versley, 2013) 23.1 17.9
IIITH (Surtani et al., 2013) 23.1 25.8

MELODI (Van de Cruys et al., 2013) 13.0 54.8
SemEval 2013 Baseline (Hendrickx et al., 2013) 13.8 40.6

This paper Baseline 3.8 16.1Our method 28.2 28.4

Table 2: Results of the proposed method and the baselines on the SemEval 2013 task.

Category %

False Positive
(1) Valid paraphrase missing from gold 44%
(2) Valid paraphrase, slightly too specific 15%
(3) Incorrect, common prepositional paraphrase 14%
(4) Incorrect, other errors 14%
(5) Syntactic error in paraphrase 8%
(6) Valid paraphrase, but borderline grammatical 5%

False Negative
(1) Long paraphrase (more than 5 words) 30%
(2) Prepositional paraphrase with determiners 25%
(3) Inflected constituents in gold 10%
(4) Other errors 35%

Table 3: Categories of false positive and false neg-
ative predictions along with their percentage.

Results. Table 2 displays the performance of the
proposed method and the baselines in the two eval-
uation settings. Our method outperforms all the
methods in the isomorphic setting. In the non-
isomorphic setting, it outperforms the other two
systems that score reasonably on the isomorphic
setting (SFS and IIITH) but cannot compete with
the systems that focus on achieving high precision.

The main advantage of our proposed model
is in its ability to generalize, and that is also
demonstrated in comparison to our baseline per-
formance. The baseline retrieved paraphrases only
for a third of the noun-compounds (61/181), ex-
pectedly yielding poor performance on the isomor-
phic setting. Our model, which was trained on the
very same data, retrieved paraphrases for all noun-
compounds. For example, welfare system was not
present in the training data, yet the model pre-
dicted the correct paraphrases “system of welfare
benefits”, “system to provide welfare” and others.

Error Analysis. We analyze the causes of the
false positive and false negative errors made by the
model. For each error type we sample 10 noun-
compounds. For each noun-compound, false pos-
itive errors are the top 10 predicted paraphrases
which are not included in the gold paraphrases,
while false negative errors are the top 10 gold
paraphrases not found in the top k predictions
made by the model. Table 3 displays the manu-

ally annotated categories for each error type.

Many false positive errors are actually valid
paraphrases that were not suggested by the hu-
man annotators (error 1, “discussion by group”).
Some are borderline valid with minor grammati-
cal changes (error 6, “force of coalition forces”)
or too specific (error 2, “life of women in commu-
nity” instead of “life in community”). Common
prepositional paraphrases were often retrieved al-
though they are incorrect (error 3). We conjec-
ture that this error often stem from an n-gram that
does not respect the syntactic structure of the sen-
tence, e.g. a sentence such as “rinse away the oil
from baby ’s head” produces the n-gram “oil from
baby”.

With respect to false negative examples, they
consisted of many long paraphrases, while our
model was restricted to 5 words due to the source
of the training data (error 1, “holding done in the
case of a share”). Many prepositional paraphrases
consisted of determiners, which we conflated with
the same paraphrases without determiners (error
2, “mutation of a gene”). Finally, in some para-
phrases, the constituents in the gold paraphrase
appear in inflectional forms (error 3, “holding of
shares” instead of “holding of share”).

5.2 Classification

Noun-compound classification is defined as a mul-
ticlass classification problem: given a pre-defined
set of relations, classify w1w2 to the relation that
holds between w1 and w2. Potentially, the cor-
pus co-occurrences of w1 and w2 may contribute
to the classification, e.g. ‘[w2] held at [w1]’ in-
dicates a TIME relation. Tratz and Hovy (2010) in-
cluded such features in their classifier, but ablation
tests showed that these features had a relatively
small contribution, probably due to the sparseness
of the paraphrases. Recently, Shwartz and Wa-
terson (2018) showed that paraphrases may con-
tribute to the classification when represented in a
continuous space.



1207

Model. We generate a paraphrase vector repre-
sentation ~par(w1w2) for a given noun-compound
w1w2 as follows. We predict the indices of the k
most likely paraphrases: p̂1, ..., p̂k = argmaxk p̂,
where p̂ is the distribution on the paraphrase vo-
cabulary Vp, as defined in Equation 1. We then
encode each paraphrase using the biLSTM, and
average the paraphrase vectors, weighted by their
confidence scores in p̂:

~par(w1w2) =

∑k
i=1 p̂

p̂i · ~Vp
p̂i∑k

i=1 p̂
p̂i

(3)

We train a linear classifier, and represent w1w2
in a feature vector f(w1w2) in two variants: para-
phrase: f(w1w2) = ~par(w1w2), or integrated:
concatenated to the constituent word embeddings
f(w1w2) = [ ~par(w1w2), ~w1, ~w2]. The classifier
type (logistic regression/SVM), k, and the penalty
are tuned on the validation set. We also pro-
vide a baseline in which we ablate the paraphrase
component from our model, representing a noun-
compound by the concatenation of its constituent
embeddings f(w1w2) = [ ~w1, ~w2] (distributional).

Datasets. We evaluate on the Tratz (2011)
dataset, which consists of 19,158 instances, la-
beled in 37 fine-grained relations (Tratz-fine) or
12 coarse-grained relations (Tratz-coarse).

We report the performance on two different
dataset splits to train, test, and validation: a ran-
dom split in a 75:20:5 ratio, and, following con-
cerns raised by Dima (2016) about lexical mem-
orization (Levy et al., 2015), on a lexical split in
which the sets consist of distinct vocabularies. The
lexical split better demonstrates the scenario in
which a noun-compound whose constituents have
not been observed needs to be interpreted based on
similar observed noun-compounds, e.g. inferring
the relation in pear tart based on apple cake and
other similar compounds. We follow the random
and full-lexical splits from Shwartz and Waterson
(2018).

Baselines. We report the results of 3 baselines
representative of different approaches:
1) Feature-based (Tratz and Hovy, 2010): we re-
implement a version of the classifier with features
from WordNet and Roget’s Thesaurus.
2) Compositional (Dima, 2016): a neural archi-
tecture that operates on the distributional represen-
tations of the noun-compound and its constituents.
Noun-compound representations are learned with

Dataset & Split Method F1

Tratz
fine

Random

Tratz and Hovy (2010) 0.739
Dima (2016) 0.725

Shwartz and Waterson (2018) 0.714
distributional 0.677
paraphrase 0.505
integrated 0.673

Tratz
fine

Lexical

Tratz and Hovy (2010) 0.340
Dima (2016) 0.334

Shwartz and Waterson (2018) 0.429
distributional 0.356
paraphrase 0.333
integrated 0.370

Tratz
coarse
Random

Tratz and Hovy (2010) 0.760
Dima (2016) 0.775

Shwartz and Waterson (2018) 0.736
distributional 0.689
paraphrase 0.557
integrated 0.700

Tratz
coarse
Lexical

Tratz and Hovy (2010) 0.391
Dima (2016) 0.372

Shwartz and Waterson (2018) 0.478
distributional 0.370
paraphrase 0.345
integrated 0.393

Table 4: Classification results. For each dataset
split, the top part consists of baseline methods and
the bottom part of methods from this paper. The
best performance in each part appears in bold.

the Full-Additive (Zanzotto et al., 2010) and Ma-
trix (Socher et al., 2012) models. We report the
results from Shwartz and Waterson (2018).
3) Paraphrase-based (Shwartz and Waterson,
2018): a neural classification model that learns
an LSTM-based representation of the joint occur-
rences of w1 and w2 in a corpus (i.e. observed
paraphrases), and integrates distributional infor-
mation using the constituent embeddings.

Results. Table 4 displays the methods’ perfor-
mance on the two versions of the Tratz (2011)
dataset and the two dataset splits. The paraphrase
model on its own is inferior to the distributional
model, however, the integrated version improves
upon the distributional model in 3 out of 4 settings,
demonstrating the complementary nature of the
distributional and paraphrase-based methods. The
contribution of the paraphrase component is espe-
cially noticeable in the lexical splits.

As expected, the integrated method in Shwartz
and Waterson (2018), in which the paraphrase
representation was trained with the objective of
classification, performs better than our integrated
model. The superiority of both integrated models
in the lexical splits confirms that paraphrases are
beneficial for classification.



1208

Example Noun-compounds Gold Distributional Example Paraphrases

printing plant PURPOSE OBJECTIVE [w2] engaged in [w1]

marketing expert
development expert TOPICAL OBJECTIVE

[w2] in [w1]
[w2] knowledge of [w1]

weight/job loss OBJECTIVE CAUSAL [w2] of [w1]

rubber band
rice cake CONTAINMENT PURPOSE

[w2] made of [w1]
[w2] is made of [w1]

laboratory animal LOCATION/PART-WHOLE ATTRIBUTE [w2] in [w1], [w2] used in [w1]

Table 5: Examples of noun-compounds that were correctly classified by the integrated model while being
incorrectly classified by distributional, along with top ranked indicative paraphrases.

Analysis. To analyze the contribution of the
paraphrase component to the classification, we fo-
cused on the differences between the distributional
and integrated models on the Tratz-Coarse lexical
split. Examination of the per-relation F1 scores
revealed that the relations for which performance
improved the most in the integrated model were
TOPICAL (+11.1 F1 points), OBJECTIVE (+5.5), AT-
TRIBUTE (+3.8) and LOCATION/PART WHOLE (+3.5).

Table 5 provides examples of noun-compounds
that were correctly classified by the integrated
model while being incorrectly classified by the dis-
tributional model. For each noun-compound, we
provide examples of top ranked paraphrases which
are indicative of the gold label relation.

6 Compositionality Analysis

Our paraphrasing approach at its core assumes
compositionality: only a noun-compound whose
meaning is derived from the meanings of its con-
stituent words can be rephrased using them. In
§3.2 we added negative samples to the train-
ing data to simulate non-compositional noun-
compounds, which are included in the classifi-
cation dataset (§5.2). We assumed that these
compounds, more often than compositional ones
would consist of unrelated constituents (spelling
bee, sacred cow), and added instances of random
unrelated nouns with ‘[w2] is unrelated to [w1]’.
Here, we assess whether our model succeeds to
recognize non-compositional noun-compounds.

We used the compositionality dataset of Reddy
et al. (2011) which consists of 90 noun-
compounds along with human judgments about
their compositionality in a scale of 0-5, 0 be-
ing non-compositional and 5 being compositional.
For each noun-compound in the dataset, we pre-
dicted the 15 best paraphrases and analyzed the er-
rors. The most common error was predicting para-
phrases for idiomatic compounds which may have

a plausible concrete interpretation or which origi-
nated from one. For example, it predicted that sil-
ver spoon is simply a spoon made of silver and that
monkey business is a business that buys or raises
monkeys. In other cases, it seems that the strong
prior on one constituent leads to ignoring the other,
unrelated constituent, as in predicting “wedding
made of diamond”. Finally, the “unrelated” para-
phrase was predicted for a few compounds, but
those are not necessarily non-compositional (ap-
plication form, head teacher). We conclude that
the model does not address compositionality and
suggest to apply it only to compositional com-
pounds, which may be recognized using compo-
sitionality prediction methods as in Reddy et al.
(2011).

7 Conclusion

We presented a new semi-supervised model for
noun-compound paraphrasing. The model differs
from previous models by being trained to predict
both a paraphrase given a noun-compound, and a
missing constituent given the paraphrase and the
other constituent. This results in better general-
ization abilities, leading to improved performance
in two noun-compound interpretation tasks. In the
future, we plan to take generalization one step fur-
ther, and explore the possibility to use the biL-
STM for generating completely new paraphrase
templates unseen during training.

Acknowledgments

This work was supported in part by an Intel
ICRI-CI grant, the Israel Science Foundation
grant 1951/17, the German Research Foundation
through the German-Israeli Project Cooperation
(DIP, grant DA 1600/1-1), and Theo Hoffenberg.
Vered is also supported by the Clore Scholars Pro-
gramme (2017), and the AI2 Key Scientific Chal-
lenges Program (2017).



1209

References
Regina Barzilay and R. Kathleen McKeown. 2001.

Extracting paraphrases from a parallel corpus.
In Proceedings of the 39th Annual Meeting of
the Association for Computational Linguistics.
http://aclweb.org/anthology/P01-1008.

Thorsten Brants and Alex Franz. 2006. Web 1t 5-gram
version 1 .

Cristina Butnariu, Su Nam Kim, Preslav Nakov,
Diarmuid Ó Séaghdha, Stan Szpakowicz, and
Tony Veale. 2009. Semeval-2010 task 9: The
interpretation of noun compounds using para-
phrasing verbs and prepositions. In Proceed-
ings of the Workshop on Semantic Evalua-
tions: Recent Achievements and Future Direc-
tions (SEW-2009). Association for Computational
Linguistics, Boulder, Colorado, pages 100–105.
http://www.aclweb.org/anthology/W09-2416.

Corina Dima. 2016. Proceedings of the 1st Work-
shop on Representation Learning for NLP, As-
sociation for Computational Linguistics, chapter
On the Compositionality and Semantic Interpreta-
tion of English Noun Compounds, pages 27–39.
https://doi.org/10.18653/v1/W16-1604.

Corina Dima and Erhard Hinrichs. 2015. Automatic
noun compound interpretation using deep neural
networks and word embeddings. IWCS 2015 page
173.

Oren Etzioni, Michele Banko, Stephen Soderland, and
Daniel S Weld. 2008. Open information extrac-
tion from the web. Communications of the ACM
51(12):68–74.

Juri Ganitkevitch, Benjamin Van Durme, and Chris
Callison-Burch. 2013. PPDB: The paraphrase
database. In Proceedings of the 2013 Con-
ference of the North American Chapter of the
Association for Computational Linguistics: Hu-
man Language Technologies. Association for
Computational Linguistics, pages 758–764.
http://aclweb.org/anthology/N13-1092.

Roxana Girju. 2007. Improving the interpreta-
tion of noun phrases with cross-linguistic infor-
mation. In Proceedings of the 45th Annual
Meeting of the Association of Computational Lin-
guistics. Association for Computational Linguis-
tics, Prague, Czech Republic, pages 568–575.
http://www.aclweb.org/anthology/P07-1072.

Alex Graves and Jürgen Schmidhuber. 2005. Frame-
wise phoneme classification with bidirectional lstm
and other neural network architectures. Neural Net-
works 18(5-6):602–610.

Iris Hendrickx, Zornitsa Kozareva, Preslav Nakov, Di-
armuid Ó Séaghdha, Stan Szpakowicz, and Tony
Veale. 2013. Semeval-2013 task 4: Free paraphrases
of noun compounds. In Second Joint Conference
on Lexical and Computational Semantics (*SEM),

Volume 2: Proceedings of the Seventh International
Workshop on Semantic Evaluation (SemEval 2013).
Association for Computational Linguistics, pages
138–143. http://aclweb.org/anthology/S13-2025.

Ralf Herbrich. 2000. Large margin rank boundaries for
ordinal regression. Advances in large margin classi-
fiers pages 115–132.

Nam Su Kim and Preslav Nakov. 2011. Large-
scale noun compound interpretation using boot-
strapping and the web as a corpus. In Pro-
ceedings of the 2011 Conference on Empirical
Methods in Natural Language Processing. Associa-
tion for Computational Linguistics, pages 648–658.
http://aclweb.org/anthology/D11-1060.

Su Nam Kim and Timothy Baldwin. 2007. Interpret-
ing noun compounds using bootstrapping and sense
collocation. In Proceedings of Conference of the
Pacific Association for Computational Linguistics.
pages 129–136.

Omer Levy, Steffen Remus, Chris Biemann, and
Ido Dagan. 2015. Do supervised distribu-
tional methods really learn lexical inference re-
lations? In Proceedings of the 2015 Confer-
ence of the North American Chapter of the As-
sociation for Computational Linguistics: Human
Language Technologies. Association for Computa-
tional Linguistics, Denver, Colorado, pages 970–
976. http://www.aclweb.org/anthology/N15-1098.

Guofu Li, Alejandra Lopez-Fernandez, and Tony
Veale. 2010. Ucd-goggle: A hybrid system for
noun compound paraphrasing. In Proceedings of
the 5th International Workshop on Semantic Eval-
uation. Association for Computational Linguistics,
pages 230–233.

Jonathan Mallinson, Rico Sennrich, and Mirella Lap-
ata. 2017. Paraphrasing revisited with neural ma-
chine translation. In Proceedings of the 15th Confer-
ence of the European Chapter of the Association for
Computational Linguistics: Volume 1, Long Papers.
Association for Computational Linguistics, Valen-
cia, Spain, pages 881–893.

Jeff Mitchell and Mirella Lapata. 2010. Composition
in distributional models of semantics. Cognitive sci-
ence 34(8):1388–1429.

Preslav Nakov. 2013. On the interpretation of noun
compounds: Syntax, semantics, and entailment.
Natural Language Engineering 19(03):291–330.

Preslav Nakov and Marti Hearst. 2006. Using verbs to
characterize noun-noun relations. In International
Conference on Artificial Intelligence: Methodology,
Systems, and Applications. Springer, pages 233–
244.

Vivi Nastase and Stan Szpakowicz. 2003. Explor-
ing noun-modifier semantic relations. In Fifth in-
ternational workshop on computational semantics
(IWCS-5). pages 285–301.

http://aclweb.org/anthology/P01-1008
http://aclweb.org/anthology/P01-1008
http://www.aclweb.org/anthology/W09-2416
http://www.aclweb.org/anthology/W09-2416
http://www.aclweb.org/anthology/W09-2416
http://www.aclweb.org/anthology/W09-2416
https://doi.org/10.18653/v1/W16-1604
http://aclweb.org/anthology/N13-1092
http://aclweb.org/anthology/N13-1092
http://aclweb.org/anthology/N13-1092
http://www.aclweb.org/anthology/P07-1072
http://www.aclweb.org/anthology/P07-1072
http://www.aclweb.org/anthology/P07-1072
http://www.aclweb.org/anthology/P07-1072
http://aclweb.org/anthology/S13-2025
http://aclweb.org/anthology/S13-2025
http://aclweb.org/anthology/S13-2025
http://aclweb.org/anthology/D11-1060
http://aclweb.org/anthology/D11-1060
http://aclweb.org/anthology/D11-1060
http://aclweb.org/anthology/D11-1060
http://www.aclweb.org/anthology/N15-1098
http://www.aclweb.org/anthology/N15-1098
http://www.aclweb.org/anthology/N15-1098
http://www.aclweb.org/anthology/N15-1098


1210

Yurii Nesterov. 1983. A method of solving a con-
vex programming problem with convergence rate o
(1/k2). In Soviet Mathematics Doklady. volume 27,
pages 372–376.

Graham Neubig, Chris Dyer, Yoav Goldberg, Austin
Matthews, Waleed Ammar, Antonios Anastasopou-
los, Miguel Ballesteros, David Chiang, Daniel
Clothiaux, Trevor Cohn, et al. 2017. Dynet: The
dynamic neural network toolkit. arXiv preprint
arXiv:1701.03980 .

Paul Nulty and Fintan Costello. 2010. Ucd-pn: Select-
ing general paraphrases using conditional probabil-
ity. In Proceedings of the 5th International Work-
shop on Semantic Evaluation. Association for Com-
putational Linguistics, pages 234–237.

Diarmuid Ó Séaghdha and Ann Copestake. 2009.
Using lexical and relational similarity to clas-
sify semantic relations. In Proceedings of the
12th Conference of the European Chapter of
the ACL (EACL 2009). Association for Computa-
tional Linguistics, Athens, Greece, pages 621–629.
http://www.aclweb.org/anthology/E09-1071.

Harinder Pal and Mausam. 2016. Demonyms and com-
pound relational nouns in nominal open ie. In Pro-
ceedings of the 5th Workshop on Automated Knowl-
edge Base Construction. Association for Compu-
tational Linguistics, San Diego, CA, pages 35–39.
http://www.aclweb.org/anthology/W16-1307.

Patrick Pantel, Rahul Bhagat, Bonaventura Coppola,
Timothy Chklovski, and Eduard Hovy. 2007. ISP:
Learning inferential selectional preferences. In Hu-
man Language Technologies 2007: The Confer-
ence of the North American Chapter of the Asso-
ciation for Computational Linguistics; Proceedings
of the Main Conference. Association for Computa-
tional Linguistics, Rochester, New York, pages 564–
571. http://www.aclweb.org/anthology/N/N07/N07-
1071.

Marius Pasca. 2015. Interpreting compound noun
phrases using web search queries. In Proceed-
ings of the 2015 Conference of the North American
Chapter of the Association for Computational Lin-
guistics: Human Language Technologies. Associa-
tion for Computational Linguistics, pages 335–344.
https://doi.org/10.3115/v1/N15-1037.

Ellie Pavlick and Marius Pasca. 2017. Identify-
ing 1950s american jazz musicians: Fine-grained
isa extraction via modifier composition. In Pro-
ceedings of the 55th Annual Meeting of the As-
sociation for Computational Linguistics (Volume
1: Long Papers). Association for Computational
Linguistics, Vancouver, Canada, pages 2099–2109.
http://aclweb.org/anthology/P17-1192.

F. Pedregosa, G. Varoquaux, A. Gramfort, V. Michel,
B. Thirion, O. Grisel, M. Blondel, P. Pretten-
hofer, R. Weiss, V. Dubourg, J. Vanderplas, A. Pas-
sos, D. Cournapeau, M. Brucher, M. Perrot, and

E. Duchesnay. 2011. Scikit-learn: Machine learning
in Python. Journal of Machine Learning Research
12:2825–2830.

Jeffrey Pennington, Richard Socher, and Christopher
Manning. 2014. Glove: Global vectors for word
representation. In Proceedings of the 2014 Con-
ference on Empirical Methods in Natural Language
Processing (EMNLP). Association for Computa-
tional Linguistics, Doha, Qatar, pages 1532–1543.
http://www.aclweb.org/anthology/D14-1162.

Siva Reddy, Diana McCarthy, and Suresh Manand-
har. 2011. An empirical study on compositional-
ity in compound nouns. In Proceedings of 5th In-
ternational Joint Conference on Natural Language
Processing. Asian Federation of Natural Language
Processing, Chiang Mai, Thailand, pages 210–218.
http://www.aclweb.org/anthology/I11-1024.

Vered Shwartz and Chris Waterson. 2018. Olive oil
is made of olives, baby oil is made for babies: In-
terpreting noun compounds using paraphrases in a
neural model. In The 16th Annual Conference of
the North American Chapter of the Association for
Computational Linguistics: Human Language Tech-
nologies (NAACL-HLT). New Orleans, Louisiana.

Richard Socher, Brody Huval, D. Christopher Man-
ning, and Y. Andrew Ng. 2012. Semantic composi-
tionality through recursive matrix-vector spaces. In
Proceedings of the 2012 Joint Conference on Empir-
ical Methods in Natural Language Processing and
Computational Natural Language Learning. Asso-
ciation for Computational Linguistics, pages 1201–
1211. http://aclweb.org/anthology/D12-1110.

Nitesh Surtani, Arpita Batra, Urmi Ghosh, and Soma
Paul. 2013. Iiit-h: A corpus-driven co-occurrence
based probabilistic model for noun compound para-
phrasing. In Second Joint Conference on Lexical
and Computational Semantics (* SEM), Volume 2:
Proceedings of the Seventh International Workshop
on Semantic Evaluation (SemEval 2013). volume 2,
pages 153–157.

Stephen Tratz. 2011. Semantically-enriched parsing
for natural language understanding. University of
Southern California.

Stephen Tratz and Eduard Hovy. 2010. A taxon-
omy, dataset, and classifier for automatic noun
compound interpretation. In Proceedings of the
48th Annual Meeting of the Association for Com-
putational Linguistics. Association for Computa-
tional Linguistics, Uppsala, Sweden, pages 678–
687. http://www.aclweb.org/anthology/P10-1070.

Tim Van de Cruys, Stergos Afantenos, and Philippe
Muller. 2013. Melodi: A supervised distribu-
tional approach for free paraphrasing of noun com-
pounds. In Second Joint Conference on Lex-
ical and Computational Semantics (*SEM), Vol-
ume 2: Proceedings of the Seventh Interna-
tional Workshop on Semantic Evaluation (Se-

http://www.aclweb.org/anthology/E09-1071
http://www.aclweb.org/anthology/E09-1071
http://www.aclweb.org/anthology/E09-1071
http://www.aclweb.org/anthology/W16-1307
http://www.aclweb.org/anthology/W16-1307
http://www.aclweb.org/anthology/W16-1307
http://www.aclweb.org/anthology/N/N07/N07-1071
http://www.aclweb.org/anthology/N/N07/N07-1071
http://www.aclweb.org/anthology/N/N07/N07-1071
http://www.aclweb.org/anthology/N/N07/N07-1071
https://doi.org/10.3115/v1/N15-1037
https://doi.org/10.3115/v1/N15-1037
https://doi.org/10.3115/v1/N15-1037
http://aclweb.org/anthology/P17-1192
http://aclweb.org/anthology/P17-1192
http://aclweb.org/anthology/P17-1192
http://aclweb.org/anthology/P17-1192
http://www.aclweb.org/anthology/D14-1162
http://www.aclweb.org/anthology/D14-1162
http://www.aclweb.org/anthology/D14-1162
http://www.aclweb.org/anthology/I11-1024
http://www.aclweb.org/anthology/I11-1024
http://www.aclweb.org/anthology/I11-1024
http://aclweb.org/anthology/D12-1110
http://aclweb.org/anthology/D12-1110
http://aclweb.org/anthology/D12-1110
http://www.aclweb.org/anthology/P10-1070
http://www.aclweb.org/anthology/P10-1070
http://www.aclweb.org/anthology/P10-1070
http://www.aclweb.org/anthology/P10-1070
http://www.aclweb.org/anthology/S13-2026
http://www.aclweb.org/anthology/S13-2026
http://www.aclweb.org/anthology/S13-2026


1211

mEval 2013). Association for Computational Lin-
guistics, Atlanta, Georgia, USA, pages 144–147.
http://www.aclweb.org/anthology/S13-2026.

Laurens Van Der Maaten. 2014. Accelerating t-sne
using tree-based algorithms. Journal of machine
learning research 15(1):3221–3245.

Yannick Versley. 2013. Sfs-tue: Compound para-
phrasing with a language model and discriminative
reranking. In Second Joint Conference on Lexical
and Computational Semantics (* SEM), Volume 2:
Proceedings of the Seventh International Workshop
on Semantic Evaluation (SemEval 2013). volume 2,
pages 148–152.

Sander Wubben. 2010. Uvt: Memory-based pairwise
ranking of paraphrasing verbs. In Proceedings of
the 5th International Workshop on Semantic Eval-
uation. Association for Computational Linguistics,
pages 260–263.

Clarissa Xavier and Vera Lima. 2014. Boosting open
information extraction with noun-based relations.
In Nicoletta Calzolari (Conference Chair), Khalid
Choukri, Thierry Declerck, Hrafn Loftsson, Bente
Maegaard, Joseph Mariani, Asuncion Moreno, Jan
Odijk, and Stelios Piperidis, editors, Proceedings of
the Ninth International Conference on Language Re-
sources and Evaluation (LREC’14). European Lan-
guage Resources Association (ELRA), Reykjavik,
Iceland.

Fabio Massimo Zanzotto, Ioannis Korkontzelos,
Francesca Fallucchi, and Suresh Manandhar. 2010.
Estimating linear models for compositional distribu-
tional semantics. In Proceedings of the 23rd Inter-
national Conference on Computational Linguistics.
Association for Computational Linguistics, pages
1263–1271.

http://www.aclweb.org/anthology/S13-2026

