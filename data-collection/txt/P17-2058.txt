



















































Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics


Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics (Short Papers), pages 366–371
Vancouver, Canada, July 30 - August 4, 2017. c©2017 Association for Computational Linguistics

https://doi.org/10.18653/v1/P17-2058

Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics (Short Papers), pages 366–371
Vancouver, Canada, July 30 - August 4, 2017. c©2017 Association for Computational Linguistics

https://doi.org/10.18653/v1/P17-2058

Differentiable Scheduled Sampling for Credit Assignment

Kartik Goyal
Carnegie Mellon University

Pittsbrugh, PA, USA
kartikgo@cs.cmu.edu

Chris Dyer
DeepMind

London, UK
cdyer@google.com

Taylor Berg-Kirkpatrick
Carnegie Mellon University

Pittsburgh, PA, USA
tberg@cs.cmu.edu

Abstract

We demonstrate that a continuous relax-
ation of the argmax operation can be
used to create a differentiable approxima-
tion to greedy decoding for sequence-to-
sequence (seq2seq) models. By incorpo-
rating this approximation into the sched-
uled sampling training procedure (Bengio
et al., 2015)–a well-known technique for
correcting exposure bias–we introduce a
new training objective that is continuous
and differentiable everywhere and that can
provide informative gradients near points
where previous decoding decisions change
their value. In addition, by using a related
approximation, we demonstrate a similar
approach to sampled-based training. Fi-
nally, we show that our approach outper-
forms cross-entropy training and sched-
uled sampling procedures in two sequence
prediction tasks: named entity recognition
and machine translation.

1 Introduction

Sequence-to-Sequence (seq2seq) models have
demonstrated excellent performance in several
tasks including machine translation (Sutskever
et al., 2014), summarization (Rush et al., 2015),
dialogue generation (Serban et al., 2015), and
image captioning (Xu et al., 2015). However,
the standard cross-entropy training procedure for
these models suffers from the well-known prob-
lem of exposure bias: because cross-entropy train-
ing always uses gold contexts, the states and con-
texts encountered during training do not match
those encountered at test time. This issue has been
addressed using several approaches that try to in-
corporate awareness of decoding choices into the
training optimization. These include reinforce-
ment learning (Ranzato et al., 2016; Bahdanau

et al., 2017), imitation learning (Daumé et al.,
2009; Ross et al., 2011; Bengio et al., 2015),
and beam-based approaches (Wiseman and Rush,
2016; Andor et al., 2016; Daumé III and Marcu,
2005). In this paper, we focus on one the simplest
to implement and least computationally expensive
approaches, scheduled sampling (Bengio et al.,
2015), which stochastically incorporates contexts
from previous decoding decisions into training.

While scheduled sampling has been empiri-
cally successful, its training objective has a draw-
back: because the procedure directly incorporates
greedy decisions at each time step, the objective is
discontinuous at parameter settings where previ-
ous decisions change their value. As a result, gra-
dients near these points are non-informative and
scheduled sampling has difficulty assigning credit
for errors. In particular, the gradient does not pro-
vide information useful in distinguishing between
local errors without future consequences and cas-
cading errors which are more serious.

Here, we propose a novel approach based on
scheduled sampling that uses a differentiable ap-
proximation of previous greedy decoding deci-
sions inside the training objective by incorporat-
ing a continuous relaxation of argmax. As a re-
sult, our end-to-end relaxed greedy training ob-
jective is differentiable everywhere and fully con-
tinuous. By making the objective continuous at
points where previous decisions change value, our
approach provides gradients that can respond to
cascading errors. In addition, we demonstrate a
related approximation and reparametrization for
sample-based training (another training scenario
considered by scheduled sampling (Bengio et al.,
2015)) that can yield stochastic gradients with
lower variance than in standard scheduled sam-
pling. In our experiments on two different tasks,
machine translation (MT) and named entity recog-
nition (NER), we show that our approach out-
performs both cross-entropy training and standard

366

https://doi.org/10.18653/v1/P17-2058
https://doi.org/10.18653/v1/P17-2058


↵ = 1

↵ = 10

✓

ob
je

ct
iv

e(
✓)

ŷi�1(✓) = ‘dog’ŷi�1(✓) = ‘kitten’ ŷi�1(✓) = ‘cat’

Figure 1: Discontinuous scheduled sampling objective (red)
and continuous relaxations (blue and purple).

scheduled sampling procedures with greedy and
sampled-based training.

2 Discontinuity in Scheduled Sampling

While scheduled sampling (Bengio et al., 2015) is
an effective way to rectify exposure bias, it can-
not differentiate between cascading errors, which
can lead to a sequence of bad decisions, and local
errors, which have more benign effects. Specifi-
cally, scheduled sampling focuses on learning op-
timal behavior in the current step given the fixed
decoding decision of the previous step. If a previ-
ous bad decision is largely responsible for the cur-
rent error, the training procedure has difficulty ad-
justing the parameters accordingly. The following
machine translation example highlights this credit
assignment issue:

Ref: The cat purrs . Pred: The dog barks .

At step 3, the model prefers the word ‘barks’ af-
ter incorrectly predicting ‘dog’ at step 2. To cor-
rect this error, the scheduled sampling procedure
would increase the score of ‘purrs’ at step 3, con-
ditioned on the fact that the model predicted (in-
correctly) ‘dog’ at step 2, which is not the ideal
learning behaviour. Ideally, the model should be
able to backpropagate the error from step 3 to the
source of the problem which occurred at step 2,
where ‘dog’ was predicted instead of ‘cat’.

The lack of credit assignment during training
is a result of discontinuity in the objective func-
tion used by scheduled sampling, as illustrated in
Figure 1. We denote the ground truth target sym-
bol at step i by y∗i , the embedding representa-
tion of word y by e(y), and the hidden state of
a seq2seq decoder at step i as hi. Standard cross-
entropy training defines the loss at each step to be
log p(y∗i |hi(e(y∗i−1), hi−1)), while scheduled sam-
pling uses loss log p(y∗i |hi(e(ŷi−1), hi−1)), where

{ e(dog)
e(cat) ↵-soft argmax

{peaked softmaxargmax

hi�1 hi

e(kitten)

ŷi�1 = dog

ēi�1

si�1(dog)

si�1(kitten)

si�1(cat)

X

y

e(y) · exp [↵ · si�1(y)]
Z

Figure 2: Relaxed greedy decoder that uses a continuous
approximation of argmax as input to the decoder state at next
time step.

ŷi−1 refers the model’s prediction at the previ-
ous step.1 Here, the model prediction ŷi−1 is
obtained by argmaxing over the output softmax
layer. Hence, in addition to the intermediate hid-
den states and final softmax scores, the previ-
ous model prediction, ŷi−1, itself depends on the
model parameters, θ, and ideally, should be back-
propagated through, unlike the gold target symbol
y∗i−1 which is independent of model parameters.
However, the argmax operation is discontinuous,
and thus the training objective (depicted in Fig-
ure 1 as the red line) exhibits discontinuities at pa-
rameter settings where the previous decoding deci-
sions change value (depicted as changes from ‘kit-
ten’ to ‘dog’ to ‘cat’). Because these change points
represent discontinuities, their gradients are unde-
fined and the effect of correcting an earlier mistake
(for example ‘dog’ to ‘cat’) as the training proce-
dure approaches such a point is essentially hidden.

In our approach, described in detail in the next
section, we attempt to fix this problem by incorpo-
rating a continuous relaxation of the argmax op-
eration into the scheduled sampling procedure in
order to form an approximate but fully continuous
objective. Our relaxed approximate objective is
depicted in Figure 1 as blue and purple lines, de-
pending on temperature parameter αwhich trades-
off smoothness and quality of approximation.

3 Credit Assignment via Relaxation

In this section we explain in detail the continu-
ous relaxation of greedy decoding that we will use
to build a fully continuous training objective. We
also introduce a related approach for sample-based
training.

1For the sake of simplicity, the ‘always sample’ variant of
scheduled sampling is described (Bengio et al., 2015).

367



3.1 Soft Argmax

In scheduled sampling, the embedding for the best
scoring word at the previous step is passed as an
input to the current step. This operation2 can be
expressed as

êi−1 =
∑

y

e(y)1[∀y′ 6= y si−1(y) > si−1(y′)]

where y is a word in the vocabulary, si−1(y) is the
output score of that word at the previous step, and
êi−1 is the embedding passed to the next step. This
operation can be relaxed by replacing the indicator
function with a peaked softmax function with hy-
perparameter α to define a soft argmax procedure:

ēi−1 =
∑

y

e(y) · exp (α si−1(y))∑
y′ exp (α si−1(y

′))

As α → ∞, the equation above approaches the
true argmax embedding. Hence, with a finite and
large α, we get a linear combination of all the
words (and therefore a continuous function of the
parameters) that is dominated heavily by the word
with maximum score.

3.2 Soft Reparametrized Sampling

Another variant of scheduled sampling is to pass
a sampled embedding from the softmax distribu-
tion at the previous step to the current step instead
of the argmax. This is expected to enable better
exploration of the search space during optimiza-
tion due to the added randomness and hence re-
sult in a more robust model. In this section, we
discuss and review an approximation to the Gum-
bel reparametrization trick that we use as a mod-
ule in our sample-based decoder. This approxima-
tion was proposed by Maddison et al. (2017) and
Jang et al. (2016), who showed that the same soft
argmax operation introduced above can be used
for reducing variance of stochastic gradients when
sampling from softmax distributions. Unlike soft
argmax, this approach is not a fully continuous ap-
proximation to the sampling operation, but it does
result in much more informative gradients com-
pared to naive scheduled sampling procedure.

The Gumbel reparametrization trick shows that
sampling from a categorical distribution can be
refactored into sampling from a simple distribu-
tion followed by a deterministic transformation

2Assuming there are no ties for the sake of simplicity.

as follows: (i) sampling an independent Gum-
bel noise G for each element in the categori-
cal distribution, typically done by transforming
a sample from the uniform distribution: U ∼
Uniform(0, 1) as G = −log(−log U), then
(ii) adding it componentwise to the unnormalized
score of each element, and finally (iii) taking an
argmax over the vector. Using the same argmax
softening procedure as above, they arrive at an ap-
proximation to the reparametrization trick which
mitigates some of the gradient’s variance intro-
duced by sampling. The approximation is3:

ẽi−1 =
∑

y

e(y) · exp (α (si−1(y) +Gy))∑
y′ exp (α (si−1(y

′) +Gy′))

We will use this ‘concrete’ approximation of soft-
max sampling in our relaxation of scheduled sam-
pling with a sample-based decoder. We discuss
details in the next section. Note that our orig-
inal motivation based on removing discontinuity
does not strictly apply to this sampling procedure,
which still yields a stochastic gradient due to sam-
pling from the Gumbel distribution. However, this
approach is conceptually related to greedy relax-
ations since, here, the soft argmax reparametriza-
tion reduces gradient variance which may yield a
more informative training signal. Intuitively, this
approach results in the gradient of the loss to be
more aware of the sampling procedure compared
to naive scheduled sampling and hence carries for-
ward information about decisions made at previ-
ous steps. The empirical results, discussed later,
show similar gains to the greedy scenario.

3.3 Differentiable Relaxed Decoders
With the argmax relaxation introduced above, we
have a recipe for a fully differentiable greedy de-
coder designed to produce informative gradients
near change points. Our final training network for
scheduled sampling with relaxed greedy decod-
ing is shown in Figure 2. Instead of conditioning
the current hidden state, hi, on the argmax em-
bedding from the previous step, êi−1, we use the
α-soft argmax embedding, ēi−1, defined in Sec-
tion 3.1. This removes the discontinuity in the
original greedy scheduled sampling objective by
passing a linear combination of embeddings, dom-
inated by the argmax, to the next step. Figure 1

3This is different from using the expected softmax embed-
ding because our approach approximates the actual sampling
process instead of linearly weighting the embeddings by their
softmax probabilities

368



illustrates the effect of varying α. As α increases,
we more closely approximate the greedy decoder.

As in standard scheduled sampling, here we
minimize the cross-entropy based loss at each time
step. Hence the computational complexity of our
approach is comparable to standard seq2seq train-
ing. As we discuss in Section 5, mixing model
predictions randomly with ground truth symbols
during training (Bengio et al., 2015; Daumé et al.,
2009; Ross et al., 2011), while annealing the prob-
ability of using the ground truth with each epoch,
results in better models and more stable train-
ing. As a result, training is reliant on the anneal-
ing schedule of two important hyperparameters: i)
ground truth mixing probability and ii) the α pa-
rameter used for approximating the argmax func-
tion. For output prediction, at each time step, we
can still output the hard argmax, depicted in Fig-
ure 2.

For the case of scheduled sampling with
sample-based training–where decisions are sam-
pled rather than chosen greedily (Bengio et al.,
2015)–we conduct experiments using a related
training procedure. Instead of using soft argmax,
we use the soft sample embedding, ẽi−1, defined
in Section 3.2. Apart from this difference, training
is carried out using the same procedure.

4 Related Work

Gormley et al. (2015)’s approximation-aware
training is conceptually related, but focuses on
variational decoding procedures. Hoang et al.
(2017) also propose continuous relaxations of de-
coders, but are focused on developing better infer-
ence procedures. Grefenstette et al. (2015) suc-
cessfully use a soft approximation to argmax in
neural stack mechanisms. Finally, Ranzato et al.
(2016) experiment with a similarly motivated ob-
jective that was not fully continuous, but found it
performed worse than the standard training.

5 Experimental Setup

We perform experiments with machine translation
(MT) and named entity recognition (NER).

Data: For MT, we use the same dataset (the
German-English portion of the IWSLT 2014 ma-
chine translation evaluation campaign (Cettolo
et al., 2014)), preprocessing and data splits as Ran-
zato et al. (2016). For named entity recognition,
we use the CONLL 2003 shared task data (Tjong

Kim Sang and De Meulder, 2003) for German lan-
guage and use the provided data splits. We per-
form no preprocessing on the data.The output vo-
cabulary length for MT is 32000 and 10 for NER.

Implementation details: For MT, we use a
seq2seq model with a simple attention mechanism
(Bahdanau et al., 2015), a bidirectional LSTM en-
coder (1 layer, 256 units), and an LSTM decoder
(1 layer, 256 units). For NER, we use a seq2seq
model with an LSTM encoder (1 layer, 64 units)
and an LSTM decoder (1 layer, 64 units) with a
fixed attention mechanism that deterministically
attends to the ith input token when decoding the
ith output, and hence does not involve learning of
attention parameters. 4

Hyperparameter tuning: We start by training
with actual ground truth sequences for the first
epoch and decay the probability of selecting the
ground truth token as an inverse sigmoid (Bengio
et al., 2015) of epochs with a decay strength pa-
rameter k. We also tuned for different values of α
and explore the effect of varying α exponentially
(annealing) with the epochs. In table 1, we report
results for the best performing configuration of de-
cay parameter and the α parameter on the valida-
tion set. To account for variance across randomly
started runs, we ran multiple random restarts (RR)
for all the systems evaluated and always used the
RR with the best validation set score to calculate
test performance.

Comparison We report validation and test met-
rics for NER and MT tasks in Table 1, F1 and
BLEU respectively. ‘Greedy’ in the table refers
to scheduled sampling with soft argmax decisions
(either soft or hard) and ‘Sample’ refers the cor-
responding reparametrized sample-based decod-
ing scenario. We compare our approach with two
baselines: standard cross-entropy loss minimiza-
tion for seq2seq models (‘Baseline CE’) and the
standard scheduled sampling procedure (Bengio
et al. (2015)). We report results for two variants
of our approach: one with a fixed α parameter
throughout the training procedure (α-soft fixed),
and the other in which we vary α exponentially
with the number of epochs (α-soft annealed).

4Fixed attention refers to the scenario when we use the
bidirectional LSTM encoder representation of the source se-
quence token at time step t while decoding at time step t in-
stead of using a linear combination of all the input sequences
weighted according to the attention parameters in the stan-
dard attention mechanism based models.

369



Table 1: Result on NER and MT. We compare our approach (α-soft argmax with fixed and annealed temperature) with standard
cross entropy training (Baseline CE) and discontinuous scheduled sampling (Bengio et al. (2015)). ‘Greedy’ and ‘Sample’ refer
to Section 3.1 and Section 3.2.

Training procedure NER (F1) MT (BLEU)

Dev Test Dev Test
Baseline CE 49.43 53.32 20.35 19.11

Greedy Sample Greedy Sample
Dev Test Dev Test Dev Test Dev Test

Bengio et al. (2015) 49.75 54.83 50.90 54.60 20.52 19.85 20.40 19.69
α-soft fixed 51.65 55.88 51.13 56.25 21.32 20.28 20.48 19.69
α-soft annealed 51.43 56.33 50.99 54.20 21.28 20.18 21.36 20.60

6 Results

All three approaches improve over the standard
cross-entropy based seq2seq training. Moreover,
both approaches using continuous relaxations
(greedy and sample-based) outperform standard
scheduled sampling (Bengio et al., 2015). The
best results for NER were obtained with the re-
laxed greedy decoder with annealed α which
yielded an F1 gain of +3.1 over the standard
seq2seq baseline and a gain of +1.5 F1 over stan-
dard scheduled sampling. For MT, we obtain
the best results with the relaxed sample-based de-
coder, which yielded a gain of +1.5 BLEU over
standard seq2seq and a gain of +0.75 BLEU over
standard scheduled sampling.

We observe that the reparametrized sample-
based method, although not fully continuous end-
to-end unlike the soft greedy approach, results
in good performance on both the tasks, partic-
ularly MT. This might be an effect of stochas-
tic exploration of the search space over the out-
put sequences during training and hence we ex-
pect MT to benefit from sampling due to a much
larger search space associated with it. We also ob-
serve that annealing α results in good performance
which suggests that a smoother approximation to
the loss function in the initial stages of training is
helpful in guiding the learning in the right direc-
tion. However, in our experiments we noticed that

k 100 10 1 Always
NER (F1) 56.33 55.88 55.30 54.83

Table 2: Effect of different schedules for scheduled sampling
on NER. k is the decay strength parameter. Higher k cor-
responds to gentler decay schedules. Always refers to the
case when predictions at the previous predictions are always
passed on as inputs to the next step.

the performance while annealing α was sensitive
to the hyperparameter associated with the anneal-
ing schedule of the mixing probability in sched-
uled sampling during training.

The computational complexity of our approach
is comparable to that of standard seq2seq train-
ing. However, instead of a vocabulary-sized max
and lookup, our approach requires a matrix multi-
plication. Practically, we observed that on GPU
hardware, all the models for both the tasks had
similar speeds which suggests that our approach
leads to accuracy gains without compromising
run-time. Moreover, as shown in Table 2, we ob-
serve that a gradual decay of mixing probability
consistently compared favorably to more aggres-
sive decay schedules. We also observed that the
‘always sample’ case of relaxed greedy decoding,
in which we never mix in ground truth inputs (see
Bengio et al. (2015)), worked well for NER but
resulted in unstable training for MT. We reckon
that this is an effect of large difference between
the search space associated with NER and MT.

7 Conclusion

Our positive results indicate that mechanisms for
credit assignment can be useful when added to
the models that aim to ameliorate exposure bias.
Further, our results suggest that continuous relax-
ations of the argmax operation can be used as ef-
fective approximations to hard decoding during
training.

Acknowledgements

We thank Graham Neubig for helpful discussions.
We also thank the three anonymous reviewers for
their valuable feedback.

370



References
Daniel Andor, Chris Alberti, David Weiss, Aliaksei

Severyn, Alessandro Presta, Kuzman Ganchev, Slav
Petrov, and Michael Collins. 2016. Globally nor-
malized transition-based neural networks. In Asso-
ciation for Computational Linguistics.

Dzmitry Bahdanau, Philemon Brakel, Kelvin Xu,
Anirudh Goyal, Ryan Lowe, Joelle Pineau, Aaron
Courville, and Yoshua Bengio. 2017. An actor-critic
algorithm for sequence prediction. In International
Conference on Learning Representations.

Dzmitry Bahdanau, Kyunghyun Cho, and Yoshua Ben-
gio. 2015. Neural machine translation by jointly
learning to align and translate. In International Con-
ference on Learning Representations.

Samy Bengio, Oriol Vinyals, Navdeep Jaitly, and
Noam Shazeer. 2015. Scheduled sampling for se-
quence prediction with recurrent neural networks.
In Advances in Neural Information Processing Sys-
tems. pages 1171–1179.

Mauro Cettolo, Jan Niehues, Sebastian Stüker, Luisa
Bentivogli, and Marcello Federico. 2014. Report on
the 11th iwslt evaluation campaign, iwslt 2014. In
Proceedings of the International Workshop on Spo-
ken Language Translation, Hanoi, Vietnam.

Hal Daumé, John Langford, and Daniel Marcu. 2009.
Search-based structured prediction. Machine learn-
ing 75(3):297–325.

Hal Daumé III and Daniel Marcu. 2005. Learning
as search optimization: Approximate large margin
methods for structured prediction. In Proceedings
of the 22nd international conference on Machine
learning. ACM, pages 169–176.

Matthew R. Gormley, Mark Dredze, and Jason Eisner.
2015. Approximation-aware dependency parsing by
belief propagation. Transactions of the Association
for Computational Linguistics (TACL) .

Edward Grefenstette, Karl Moritz Hermann, Mustafa
Suleyman, and Phil Blunsom. 2015. Learning to
transduce with unbounded memory. In Advances
in Neural Information Processing Systems. pages
1828–1836.

Cong Duy Vu Hoang, Gholamreza Haffari, and Trevor
Cohn. 2017. Decoding as continuous optimiza-
tion in neural machine translation. arXiv preprint
arXiv:1701.02854 .

Eric Jang, Shixiang Gu, and Ben Poole. 2016. Cate-
gorical reparameterization with gumbel-softmax. In
International Conference on Learning Representa-
tions.

Chris J Maddison, Andriy Mnih, and Yee Whye Teh.
2017. The concrete distribution: A continuous re-
laxation of discrete random variables. In Interna-
tional Conference on Learning Representations.

Marc’Aurelio Ranzato, Sumit Chopra, Michael Auli,
and Wojciech Zaremba. 2016. Sequence level train-
ing with recurrent neural networks. In International
Conference on Learning Representations.

Stéphane Ross, Geoffrey J Gordon, and Drew Bagnell.
2011. A reduction of imitation learning and struc-
tured prediction to no-regret online learning. In AIS-
TATS. volume 1, page 6.

Alexander M Rush, Sumit Chopra, and Jason Weston.
2015. A neural attention model for abstractive sen-
tence summarization. In Empirical Methods in Nat-
ural Language Processing.

Iulian V Serban, Alessandro Sordoni, Yoshua Bengio,
Aaron Courville, and Joelle Pineau. 2015. Building
end-to-end dialogue systems using generative hier-
archical neural network models. In AAAI’16 Pro-
ceedings of the Thirtieth AAAI Conference on Artifi-
cial Intelligence.

Ilya Sutskever, Oriol Vinyals, and Quoc V Le. 2014.
Sequence to sequence learning with neural net-
works. In Advances in neural information process-
ing systems. pages 3104–3112.

Erik F Tjong Kim Sang and Fien De Meulder.
2003. Introduction to the conll-2003 shared task:
Language-independent named entity recognition. In
Proceedings of the seventh conference on Natural
language learning at HLT-NAACL 2003-Volume 4.
Association for Computational Linguistics, pages
142–147.

Sam Wiseman and Alexander M Rush. 2016.
Sequence-to-sequence learning as beam-search op-
timization. In Empirical Methods in Natural Lan-
guage Processing.

Kelvin Xu, Jimmy Ba, Ryan Kiros, Kyunghyun Cho,
Aaron C Courville, Ruslan Salakhutdinov, Richard S
Zemel, and Yoshua Bengio. 2015. Show, attend and
tell: Neural image caption generation with visual at-
tention. In ICML. volume 14, pages 77–81.

371


	Differentiable Scheduled Sampling for Credit Assignment

