



















































Cross-lingual Character-Level Neural Morphological Tagging


Proceedings of the 2017 Conference on Empirical Methods in Natural Language Processing, pages 748–759
Copenhagen, Denmark, September 7–11, 2017. c©2017 Association for Computational Linguistics

Cross-lingual, Character-Level Neural Morphological Tagging

Ryan Cotterell@ and Georg HeigoldK

@Center for Language and Speech Processing, Johns Hopkins University, Baltimore, MD, USA
KGerman Research Center for Artificial Intelligence, Saarbrücken, SL, GER

ryan.cotterell@jhu.edu georg.heigold@gmail.com

Abstract

Even for common NLP tasks, sufficient
supervision is not available in many
languages—morphological tagging is no
exception. In the work presented here,
we explore a transfer learning scheme,
whereby we train character-level recurrent
neural taggers to predict morphological
taggings for high-resource languages and
low-resource languages together. Learning
joint character representations among mul-
tiple related languages successfully enables
knowledge transfer from the high-resource
languages to the low-resource ones, im-
proving accuracy by up to 30%.

1 Introduction

State-of-the-art morphological taggers require thou-
sands of annotated sentences to train. For the ma-
jority of the world’s languages, however, sufficient
large-scale annotation is not available and obtain-
ing it would often be infeasible. Accordingly, an
important road forward in low-resource NLP is the
development of methods that allow for the training
of high-quality tools from smaller amounts of data.
In this work, we focus on transfer learning—we
train a recurrent neural tagger for a low-resource
language jointly with a tagger for a related high-
resource language. Forcing the models to share
character-level features among the languages al-
lows large gains in accuracy when tagging the low-
resource languages, while maintaining (or even im-
proving) accuracy on the high-resource language.

Recurrent neural networks constitute the state
of the art for a myriad of tasks in NLP, e.g., multi-
lingual part-of-speech tagging (Plank et al., 2016),
syntactic parsing (Dyer et al., 2015; Zeman et al.,
2017), morphological paradigm completion (Cot-
terell et al., 2016, 2017) and language modeling

(Sundermeyer et al., 2012; Melis et al., 2017); re-
cently, such models have also improved morpho-
logical tagging (Heigold et al., 2016, 2017). In
addition to increased performance over classical
approaches, neural networks also offer a second
advantage: they admit a clean paradigm for multi-
task learning. If the learned representations for
all of the tasks are embedded jointly into a shared
vector space, the various tasks reap benefits from
each other and often performance improves for
all (Collobert et al., 2011b). We exploit this idea
for language-to-language transfer to develop an
approach for cross-lingual morphological tagging.

We experiment on 18 languages taken from four
different language families. Using the Univer-
sal Dependencies treebanks, we emulate a low-
resource setting for our experiments, e.g., we at-
tempt to train a morphological tagger for Catalan
using primarily data from a related language like
Spanish. Our results demonstrate the successful
transfer of morphological knowledge from the high-
resource languages to the low-resource languages
without relying on an externally acquired bilingual
lexicon or bitext. We consider both the single- and
multi-source transfer case and explore how similar
two languages must be in order to enable high-
quality transfer of morphological taggers.1

2 Morphological Tagging

Many languages in the world exhibit rich inflec-
tional morphology: the form of individual words
mutates to reflect the syntactic function. For exam-
ple, the Spanish verb soñar will appear as sueño in
the first person present singular, but soñáis in the
second person present plural, depending on the bun-
dle of syntaco-semantic attributes associated with

1While we only experiment with languages in the same
family, we show that closer languages within that family are
better candidates for transfer. We remark that future work
should consider the viability of more distant language pairs.

748



  Все       счастливые       семьи       похожи    друг      на      друга…
familieshappyAll are similar to each other

POS=
CASE=
NUM=
GEN=

POS=
CASE=
NUM=

POS=
CASE=
NUM=

POS=
CASE=
NUM=

POS=
CASE=
NUM=

POS= POS=
CASE=
NUM=

Figure 1: Example of a morphologically-tagged sentence in Russian using the annotation scheme provided in the UD dataset.

PRESENT INDICATIVE PAST INDICATIVE

SINGULAR PLURAL SINGULAR PLURAL

1 sueño soñamos soñé soñamos
2 sueñas soñáis soñaste soñasteis
3 sueña sueñan soñó soñaron

Table 1: Partial inflection table for the Spanish verb soñar

the given form (in a sentential context). For con-
creteness, we list a more complete table of Spanish
verbal inflections in Table 1. Note that some lan-
guages, e.g., Archi, Northeast Caucasian language,
display a veritable cornucopia of potential forms
with the size of the verbal paradigm exceeding
10,000 (Kibrik, 1998).

Standard NLP annotation, e.g., the scheme in
Sylak-Glassman et al. (2015), marks forms in terms
of universal key-attribute pairs, e.g., the first per-
son present singular is represented as [pos=V, per=1,
num=SG, tns=PRES ]. This bundle of key-attributes
pairs is typically termed a morphological tag and
we may view the goal of morphological tagging to
label each word in its sentential context with the ap-
propriate tag (Oflazer and Kuruöz, 1994; Hajič and
Hladká, 1998). As the part-of-speech (POS) is a
component of the tag, we may view morphological
tagging as a strict generalization of POS tagging,
where we have significantly refined the set of avail-
able tags. All of the experiments in this paper make
use of the universal morphological tag set available
in the Universal Dependencies (UD) (Nivre et al.,
2016). As an example, we have provided a Russian
sentence with its UD tagging in Figure 1.

Transferring Morphology. The transfer of mor-
phology is arguably more dependent on the relat-
edness of the languages in question than other an-
notations in NLP, such as POS and named entity
recognition (NER). POS lends itself nicely to a
universal annotation scheme (Petrov et al., 2012)
and traditional NER is limited to a small number of
cross-linguistically compliant categories, e.g., PER-
SON and PLACE. Even universal dependency arcs
employ cross-lingual labels (Nivre et al., 2016).

Morphology, on the other hand, typically re-
quires more fine-grained annotation, e.g., gram-
matical case and tense. It is often the case that one
language will make a semantic distinction in the
form (or at all) that another does not. For example,
the Hungarian noun overtly marks 17 grammatical
cases and Slavic verbs typically distinguish two
aspects through morphology, while English marks
none of these distinctions. If the word form in
the source language does not overtly mark a gram-
matical category in the target language, it is nigh-
impossible to expect a successful transfer. For this
reason, much of our work focuses on the transfer
of related languages—specifically exploring how
close two languages must be for a successful trans-
fer. Note that the language-specific nature of mor-
phology does not contradict the universality of the
annotation; each language may mark a different
subset of categories, i.e., use a different set of the
universal keys and attributes, but there is a single,
universal set, from which the key-attribute pairs
are drawn. See Newmeyer (2007) for a linguistic
treatment of cross-lingual annotation.

Notation. We will discuss morphological tag-
ging in terms of the following notation. We will
consider two (related) languages: a high-resource
source language `s and a low-resource target lan-
guage `t. Each of these languages will have its
own (potentially overlapping) set of morphologi-
cal tags, denoted Ts and Tt, respectively. We will
work with the union of both sets T = Ts ∪ Tt. An
individual tag mi = [k1=v1, . . . , kM=vM ] ∈ T is
comprised of universal keys and attributes, i.e., the
pairs (ki, vi) are completely language-agnostic. In
the case where a language does not mark a distinc-
tion, e.g., case on English nouns, the corresponding
keys are excluded from the tag. Typically, |T | is
large (see Table 3). We denote the set of training
sentences for the high-resource source language as
Ds and the set of training sentences for the low-
resource target language asDt. In the experimental
section, we will also consider a multi-source setting

749



where we have multiple high-resource languages,
but, for ease of explication, we stick to the single-
source case in the development of the model.

3 Character-Level Neural Transfer

Our formulation of transfer learning builds on work
in multi-task learning (Caruana, 1997; Collobert
et al., 2011b). We treat each individual language as
a task and train a joint model for all the tasks. We
first discuss the current state of the art in morpho-
logical tagging: a character-level recurrent neural
network. After that, we explore three augmenta-
tions to the architecture that allow for the transfer
learning scenario. All of our proposals force the
embedding of the characters for both the source
and the target language to share the same vector
space, but involve different mechanisms, by which
the model may learn language-specific features.

3.1 Character-Level Neural Networks

Character-level neural networks currently consti-
tute the state of the art in morphological tagging
(Heigold et al., 2017). We draw on previous work
in defining a conditional distribution over taggings
t for a sentence w of length |w| = N as

pθ(t | w) =
N∏

i=1

pθ(ti | w), (1)

which may be seen as a 0th order conditional ran-
dom field (CRF) (Lafferty et al., 2001) with pa-
rameter vector θ.2 Importantly, this factorization
of the distribution pθ(t | w) also allows for ef-
ficient exact decoding and marginal inference in
O(|T | · N)-time, but at the cost of not admitting
any explicit interactions in the output structure, i.e.,
between adjacent tags.3 We parameterize the distri-
bution over tags at each time step as

pθ(ti | w) = softmax (Wei + b) , (2)
2The parameter vector θ is a vectorization of all the pa-

rameters discussed below.
3As an aside, it is quite interesting that a model with the fac-

torization in Equation (1) outperforms the MARMOT model
(Müller et al., 2013), which focused on modeling higher-order
interactions between the morphological tags, e.g., they employ
up to a (pruned) 3rd order CRF. That such a model achieves
state-of-the-art performance indicates, however, that richer
source-side features, e.g., those extracted by our character-
level neural architecture, are more important for morpholog-
ical tagging than higher-order tag interactions, which come
with the added unpleasantness of exponential (in the order)
decoding.

where W ∈ R|T |×n is an embedding matrix, b ∈
R|T | is a bias vector and positional embeddings
ei

4 are taken from a concatenation of the output
of two long short-term memory recurrent neural
networks (LSTMs) (Hochreiter and Schmidhuber,
1997), folded forward and backward, respectively,
over a sequence of input vectors. This constitutes
a bidirectional LSTM (Graves and Schmidhuber,
2005). We define the positional embedding vector
as follows

ei = [LSTM(v1:i); LSTM(vN,i+1)] , (3)

where each vi ∈ Rn is, itself, a word embedding.
Note that the function LSTM returns the last final
hidden state vector of the network. This architec-
ture is the context bidirectional recurrent neural
network of Plank et al. (2016). Finally, we derive
each word embedding vector vi from a character-
level bidirectional LSTM embedder. Namely, we
define each word embedding as the concatenation

vi =
[
LSTM

(
〈ci1 , . . . , ciMi 〉

)
; (4)

LSTM
(
〈ciMi , . . . , ci1〉

)]
.

In other words, we run a bidirectional LSTM over
the character stream. This bidirectional LSTM is
the sequence bidirectional recurrent neural network
of Plank et al. (2016). Note a concatenation of
the sequence of character symbols 〈ci1 , . . . , ciMi 〉
results in the word string wi. Each of the Mi char-
acters cik is a member of the set Σ. We take Σ to
be the union of sets of characters in the languages
considered.

We direct the reader to Heigold et al. (2017)
for a more in-depth discussion of this and various
additional architectures for the computation of vi;
the architecture we have presented in Equation (5)
is competitive with the best performing setting in
Heigold et al.’s study.

3.2 Cross-Lingual Morphological Transfer as
Multi-Task Learning

Cross-lingual morphological tagging may be for-
mulated as a multi-task learning problem. We seek
to learn a set of shared character embeddings for
taggers in both languages together through opti-
mization of a joint loss function that combines the
high-resource tagger and the low-resource one. The
first loss function we consider is the following:

4Note that |ei| = n; see §4.4 for the exact values used in
the experimentation.

750



softmax

linear

Bidirectional LSTM

softmax

linear

p✓(t1 | w) p✓(tN | w)

v1 vN

…

…

(a) Vanilla architecture for neural
morphological tagging.

softmax

linear

Bidirectional LSTM

softmax

linear

p✓(t1, ` | w) p✓(tN , ` | w)

v1 vN

…

…

(b) Joint morphological tagging and
language identification.

concatenation

Bidirectional 
LSTM

LUTLUT

vi

ci1 ciMi…

(c) Character-level biL-
STM embedder.

concatenation

Bidirectional 
LSTM

LUT

vi

ci1 ciMi…
LUT LUTLUT

id` id`

(d) Language-specific
biLSTM embedder.

Figure 2: We depict four subarchitectures used in the models we develop in this work. Combining (a) with the character
embeddings in (c) gives the vanilla morphological tagging architecture of Heigold et al. (2017). Combining (a) with (d) yields
the language-universal softmax architecture and (b) and (c) yields our joint model for language identification and tagging.

Lmulti(θ) =
∑

(t,w)∈Ds
log pθ(t | w, `s) (5)

+
∑

(t,w)∈Dt
log pθ (t | w, `t) .

Crucially, our cross-lingual objective forces both
taggers to share part of the parameter vector θ,
which allows it to represent morphological regular-
ities between the two languages in a common em-
bedding space and, thus, enables transfer of knowl-
edge. This is no different from monolingual multi-
task settings, e.g., jointly training a chunker and
a tagger for the transfer of syntactic information
(Collobert et al., 2011b). We point out that, in con-
trast to our approach, almost all multi-task transfer
learning, e.g., for dependency parsing (Guo et al.,
2016), has shared word-level embeddings rather
than character-level embeddings. See §6 for a more
complete discussion.

We consider two parameterizations of this dis-
tribution pθ(ti | w, `). First, we modify the ini-
tial character-level LSTM embedding such that it
also encodes the identity of the language. Second,
we modify the softmax layer, creating a language-
specific softmax.

Language-Universal Softmax. Our first archi-
tecture has one softmax, as in Equation (2), over
all morphological tags in T (shared among all the
languages). To allow the architecture to encode
morphological features specific to one language,
e.g., the third person present plural ending in Span-
ish is -an, but -ão in Portuguese, we modify the
creation of the character-level embeddings. Specif-
ically, we augment the character alphabet Σ with a
distinguished symbol that indicates the language:
id`. We then pre- and postpend this symbol to the
character stream for every word before feeding the

characters into the bidirectional LSTM Thus, we
arrive at the new language-specific word embed-
dings,

v`i =
[
LSTM

(
〈id`, ci1 , . . . , ciMi ,id`〉

)
; (6)

LSTM
(
〈id`, ciMi , . . . , ci1 ,id`〉

)]
.

This model creates a language-specific embedding
vector vi, but the individual embeddings for a given
character are shared among the languages jointly
trained on. The remainder of the architecture is
held constant.

Language-Specific Softmax. Next, inspired by
the architecture of Heigold et al. (2013), we con-
sider a language-specific softmax layer, i.e., we
define a new output layer for every language:

pθ (ti | w, `) = softmax (W`ei + b`) , (7)

where W` ∈ R|T |×n and b` ∈ R|T | are now
language-specific. In this architecture, the embed-
dings ei are the same for all languages—the model
has to learn language-specific behavior exclusively
through the output softmax of the tagging LSTM.

Joint Morphological Tagging and Language
Identification. The third model we exhibit is a
joint architecture for tagging and language identifi-
cation. We consider the following loss function:

Ljoint(θ) =
∑

(t,w)∈Ds
log pθ(`s, t | w) (8)

+
∑

(t,w)∈Dt
log pθ (`t, t | w) ,

where we factor the joint distribution as

pθ (`, t | w) = pθ (` | w) · pθ (t | w, `) . (9)

751



Romance Slavic

lang train dev test lang train dev test

(ca) 13123 1709 1846 (bg) 8907 1115 1116
(es) 14187 1552 274 (cs) 61677 9270 10148
(fr) 14554 1596 298 (pl) 6800 7000 727
(it) 12837 489 489 (ru) 4029 502 499
(pt) 8800 271 288 (sk) 8483 1060 1061
(ro) 7141 1191 1191 (uk) 200 30 25

Germanic Uralic

lang train dev test lang train dev test

(da) 4868 322 322 (et) 14510 1793 1806
(no) 15696 2410 1939 (fi) 12217 716 648
(sv) 4303 504 1219 (hu) 1433 179 188

Table 2: Number of tokens in each of the train, development
and test splits (organized by language family).

Just as before, we define pθ (t | w, `) above as in
Equation (7) and we define

pθ(` | w) = softmax
(
u> tanh(V ei)

)
, (10)

which is a multi-layer perceptron with a binary soft-
max (over the two languages) as an output layer; we
have added the additional parameters V ∈ R|T |×n
and u ∈ R|T |. In the case of multi-source transfer,
this is a softmax over the set of languages.

Comparative Discussion. The first two architec-
tures discussed in §3.2 represent two possibilities
for a multi-task objective, where we condition on
the language of the sentence. The first integrates
this knowledge at a lower level and the second at
a higher level. The third architecture discussed in
§3.2 takes a different tack—rather than condition-
ing on the language, it predicts it. The joint model
offers one interesting advantage over the two archi-
tectures proposed. Namely, it allows us to perform
a morphological analysis on a sentence where the
language is unknown. This effectively alleviates an
early step in the NLP pipeline, where language id
is performed and is useful in conditions where the
language to be tagged may not be known a-priori,
e.g., when tagging social media data.

While there are certainly more complex architec-
tures one could engineer for the task, we believe we
have found a relatively diverse sampling, enabling
an interesting experimental comparison. Indeed,
it is an important empirical question which archi-
tectures are most appropriate for transfer learning.
Since transfer learning affords the opportunity to
reduce the sample complexity of the “data-hungry”
neural networks that currently dominate NLP re-
search, finding a good solution for cross-lingual
transfer in state-of-the-art neural models will likely
be a boon for low-resource NLP in general.

Romance Slavic Germanic Uralic

lang |T | lang |T | lang |T | lang |T |
(ca) 172 (bg) 380 (da) 124 (et) 654
(es) 232 (cs) 2282 (no) 169 (fi) 1440
(fr) 142 (pl) 774 (sv) 155 (hu) 634
(it) 179 (ru) 520
(pt) 375 (sk) 597
(ro) 367 (uk) 220

Table 3: Number of unique morphological tags for each of the
experimental languages (organized by language family).

4 Experiments

Empirically, we ask three questions of our archi-
tectures. i) How well can we transfer morphologi-
cal tagging models from high-resource languages
to low-resource languages in each architecture?
(Does one of the three outperform the others?) ii)
How many annotated data in the low-resource lan-
guage do we need? iii) How closely related do the
languages need to be to get good transfer?

4.1 Experimental Languages

We experiment with the language families: Ro-
mance (Indo-European), Northern Germanic (Indo-
European), Slavic (Indo-European) and Uralic. In
the Romance sub-grouping of the wider Indo-
European family, we experiment on Catalan (ca),
French (fr), Italian (it), Portuguese (pt), Romanian
(ro) and Spanish (es). In the Northern Germanic
family, we experiment on Danish (da), Norwegian
(no) and Swedish (sv). In the Slavic family, we
experiment on Bulgarian (bg), Czech (bg), Polish
(pl), Russian (ru), Slovak (sk) and Ukrainian (uk).
Finally, in the Uralic family we experiment on Es-
tonian (et), Finnish (fi) and Hungarian (hu).

4.2 Datasets

We use the morphological tagging datasets pro-
vided by the Universal Dependencies (UD) tree-
banks (the concatenation of the 4th and 6th columns
of the file format) (Nivre et al., 2016). We list the
size of the training, development and test splits of
the UD treebanks we used in Table 2. Also, we list
the number of unique morphological tags in each
language in Table 3, which serves as an approx-
imate measure of the morphological complexity
each language exhibits. Crucially, the data are an-
notated in a cross-linguistically consistent manner,
such that words in the different languages that have
the same syntacto-semantic function have the same
bundle of tags (see §2 for a discussion). Potentially,
further gains would be possible by using a more

752



universal scheme, e.g., the UNIMORPH scheme.

4.3 Baselines

We consider two baselines in our work. First, we
consider the MARMOT tagger (Müller et al., 2013),
which is currently the best performing non-neural
model. The source code for MARMOT is freely
available online,5 which allows us to perform fully
controlled experiments with this model. Second,
we consider the alignment-based projection ap-
proach of Buys and Botha (2016).6 We discuss
each of the two baselines in turn.

4.3.1 Higher-Order CRF Tagger
The MARMOT tagger is the leading non-neural
approach to morphological tagging. This baseline
is important since non-neural, feature-based ap-
proaches have been found empirically to be more
efficient, in the sense that their learning curves tend
to be steeper. Thus, in the low-resource setting we
would be remiss to not consider a feature-based
approach. Note that this is not a transfer approach,
but rather only uses the low-resource data.

4.3.2 Alignment-based Projection
The projection approach of Buys and Botha (2016)
provides an alternative method for transfer learn-
ing. The idea is to construct pseudo-annotations
for bitext given cross-lingual alignments (Och and
Ney, 2003). Then, one trains a standard tagger us-
ing the projected annotations. The specific tagger
employed is the WSABIE model of Weston et al.
(2011), which—like our approach— is a 0th-order
discriminative neural model. In contrast to ours,
however, their network is shallow. We compare the
two methods in more detail in §6.
4.3.3 Architecture Study
Additionally, we perform a thorough study of the
neural transfer learner, considering all three archi-
tectures. A primary goal of our experiments is
to determine which of our three proposed neural
transfer techniques is superior. Even though our
experiments focus on morphological tagging, these
architectures are more general in that they may be

5http://cistern.cis.lmu.de/marmot/
6We do not have access to the code as the model was

developed in industry, so we compare to the numbers reported
in the original paper, as well as additional numbers provided
to us by the first author in a personal communication. The
numbers will not be, strictly speaking, comparable. However,
we hope they provide insight into the relative performance of
the tagger.

easily applied to other tasks, e.g., parsing or ma-
chine translation. We additionally explore the via-
bility of multi-source transfer, i.e., the case where
we have multiple source languages. All of our
architectures generalize to the multi-source case
without any complications.

4.4 Experimental Details

We train our models with the following conditions.

Evaluation Metrics. We evaluate using average
per token accuracy, as is standard for both POS
tagging and morphological tagging, and per feature
F1 as employed in Buys and Botha (2016). The
per feature F1 calculates a key F k1 for each key
in the target language’s tags by asking if the key-
attribute pair ki=vi is in the predicted tag. Then,
the key-specific F k1 values are averaged equally.
Note that F1 is a more flexible metric as it gives
partial credit for getting some of the attributes in
the bundle correct, where accuracy does not.

Hyperparameters. Our networks are four layers
deep (two LSTM layers for the character embedder,
i.e., to compute vi and two LSTM layers for the tag-
ger, i.e., to compute ei) and we use an embedding
size of 128 for the character input vector size and
hidden layers of 256 nodes in all other cases. All
networks are trained with the stochastic gradient
method RMSProp (Tieleman and Hinton, 2012),
with a fixed initial learning rate and a learning rate
decay that is adjusted for the other languages ac-
cording to the amount of training data. The batch
size is always 16. Furthermore, we use dropout
(Srivastava et al., 2014). The dropout probability is
set to 0.2. We used Torch 7 (Collobert et al., 2011a)
to configure the computation graphs implementing
the network architectures.

5 Results and Discussion

We report our results in three tables. First, we re-
port a detailed cross-lingual evaluation in Table 4.
Secondly, we report a comparison against two base-
lines in Table 5 (accuracy) and Table 6 (F1). We
see two general trends of the data. First, we find
that genetically closer languages yield better source
languages. Second, we find that the multi-softmax
architecture is the best in terms of transfer ability,
as evinced by the results in Table 4. We find a
wider gap between our model and the baselines
under the accuracy than under F1. We attribute this

753



target language
|Dt| = 100 |Dt| = 1000

(ca) (es) (fr) (it) (pt) (ro) (ca) (es) (fr) (it) (pt) (ro)
so

ur
ce

la
ng

ua
ge (ca) — 87.9% 84.2% 84.6% 81.1% 67.4% — 94.1% 93.5% 93.1% 89.0% 89.8%

(es) 88.9% — 85.5% 85.6% 81.8% 69.5% 95.5% — 93.5% 93.5% 88.9% 89.7%
(fr) 88.3% 87.0% — 83.6% 79.5% 69.9% 95.4% 93.8% — 93.3% 88.6% 89.7%
(it) 88.4% 87.8% 84.2% — 80.6% 69.1% 95.4% 94.0% 93.3% — 88.7% 90.3%
(pt) 88.4% 88.9% 85.1% 84.7% — 69.6% 95.3% 94.2% 93.5% 93.6% — 89.8%
(ro) 87.6% 87.2% 85.0% 84.4% 79.9% — 95.3% 93.6% 93.4% 93.2% 88.5% —

multi-source 89.8% 90.9% 86.6% 86.8% 83.4% 67.5% 95.4% 94.2% 93.4% 93.8% 88.7% 88.9%

(a) Results for the Romance languages.

target language
|Dt| = 100 |Dt| = 1000

(bg) (cs) (pl) (ru) (sk) (uk) (bg) (cs) (pl) (ru) (sk) (uk)

so
ur

ce
la

ng
ua

ge (bg) — 47.4% 44.7% 67.3% 39.7% 57.3% — 73.7% 75.0% 84.1% 70.9% 72.0%
(cs) 57.8% — 56.5% 62.6% 62.6% 54.0% 80.9% — 80.0% 84.1% 78.1% 64.7%
(pl) 54.3% 54.0% — 59.3% 57.8% 48.0% 78.3% 74.9% — 84.2% 75.9% 57.3%
(ru) 68.8% 48.6% 47.4% — 46.5% 60.7% 83.1% 73.6% 76.0% — 71.4% 72.7%
(sk) 55.2% 57.4% 54.8% 61.2% — 49.3% 77.6% 76.3% 78.4% 83.9% — 60.7%
(uk) 44.1% 36.0% 34.4% 43.2% 30.0% — 67.3% 64.8% 66.9% 76.1% 56.0% —

multi-source 64.5% 57.9% 57.0% 64.4% 64.8% 58.7% 81.6% 74.8% 78.1% 83.1% 79.6% 69.3%

(b) Results for the Slavic languages.

target language
|Dt| = 100 |Dt| = 1000

(da) (no) (sv) (da) (no) (sv)

so
ur

ce (da) — 77.6% 73.1% — 90.1% 90.0%
(no) 83.1% — 75.7% 93.1% — 90.5%
(sv) 81.4% 76.5% — 92.6% 90.2% —

multi-source 87.8% 82.3% 77.2% 93.9% 91.2% 90.9%

(c) Results for the Northern Germanic languages.

target language
|Dt| = 100 |Dt| = 1000

(et) (fi) (hu) (et) (fi) (hu)

so
ur

ce (et) — 60.9% 60.4% — 85.1% 74.8%
(fi) 60.1% — 60.3% 82.3% — 75.2%
(hu) 47.1% 48.3% — 76.9% 81.2% —

multi-source 54.7% 55.3% 55.4% 78.7% 81.8% 73.3%

(d) Results for the Uralic languages.

Table 4: Results for transfer learning with our joint model. The tables highlight that the best source languages are often
genetically and typologically closest. Also, we see that multi-source often helps, albeit more often in the |Dt| = 100 case.

to the fact that F1 is a softer metric in that it assigns
credit to partially correct guesses.

Source Language. As discussed in §2, the trans-
fer of morphology is language-dependent. This
intuition is borne out in the results from our study
(see Table 4). We see that in the closer grouping
of the Western Romance languages, i.e., Catalan,
French, Italian, Portuguese, and Spanish, it is eas-
ier to transfer than with Romanian, an Eastern Ro-
mance language. Within the Western grouping,
we see that the close pairs, e.g., Spanish and Por-
tuguese, are amenable to transfer. We find a similar
pattern in the other language families, e.g., Russian
is the best source language for Ukrainian, Czech is
the best language source for Slovak and Finnish is
the best source language for Estonian.

Multi-Source Transfer. In many cases, we find
that multiple sources noticeably improve the results
over the single-source case. For instance, when we
have multiple Romance languages as a source lan-
guage, we see gains of up to 2%. We also see gains

in the Northern Germanic languages when using
multiple source languages. From a linguistic point
of view, this is logical as different source languages
may be similar to the target language along differ-
ent dimensions, e.g., when transferring among the
Slavic languages, we note that Russian retains the
complex nominal case system of Serbian, but south
Slavic Bulgarian is lexically more similar.

Performance Against the Two Baselines. As
shown in Table 5 and Table 6, our model outper-
forms the projection tagger of Buys and Botha
(2016) even though our approach does not uti-
lize bitext, large-scale alignment or monolingual
corpora—rather, all transfer between languages
happens through the forced sharing of character-
level features.7 Our model, does, however, require

7 We would like to highlight some issues of comparability
with the results in Buys and Botha (2016). Strictly speaking,
the results are not comparable and our improvement over their
method should be taken with a grain of salt. As the source code
is not publicly available and developed in industry, we resorted
to numbers in their published work and additional numbers

754



Accuracy
B&B (2016) MARMOT Ours (Mono) Ours (Universal) Ours (Joint) Ours (Specific)

en (int) best (non) best (int) 100 1000 100 1000 100 1000 100 1000 100 1000

(bg) 36.3 38.2 50.0 56.5 78.8 40.2 66.6 57.8 80.9 64.5 81.6 63.5 80.8
(cs) 24.4 49.3 53.4 49.2 69.2 32.1 66.1 57.4 77.6 57.9 74.8 56.1 74.2
(da) 36.6 46.9 46.9 75.9 90.9 45.3 86.6 77.6 90.1 87.8 93.9 89.2 94.3
(es) 39.9 75.3 75.5 85.9 93.1 64.7 92.5 85.1 60.9 90.9 94.2 90.7 94.2
(fi) 27.4 51.8 56.0 50.0 77.5 28.0 74.2 48.3 81.2 55.3 81.8 55.4 80.7
(it) 38.1 75.5 75.9 81.7 92.3 67.0 88.9 84.7 93.1 86.8 93.8 86.1 93.3
(pl) 25.3 47.4 51.3 51.7 71.1 32.1 60.9 47.4 78.4 57.0 78.1 56.1 76.4
(pt) 36.6 71.9 72.2 77.0 86.3 61.7 85.6 80.6 88.7 83.4 88.7 82.4 89.1
(sv) 29.3 44.5 44.5 69.5 88.3 46.1 84.2 75.7 90.0 77.2 90.9 78.3 90.7

Table 5: Comparison of our approach to various baselines for low-resource tagging under token-level accuracy. We compare on
only those languages in Buys and Botha (2016). Note that tag-level accuracy was not reported in the original B&B paper, but
was acquired through personal communication with the first author. All architectures presented in this work are used in their
multi-source setting. The B&B and MARMOT models are single-source.

annotation of a small number of sentences in the
target language for training. We note, however, that
this does not necessitate a large number of human
annotation hours (Garrette and Baldridge, 2013).

Reducing Sample Complexity. Another inter-
esting a point about our model that is best evinced
in Figure 3 is the feature-based CRF approach
seems to be a better choice for the low-resource
setting, i.e., the neural model has greater sample
complexity. However, in the multi-task scenario,
we find that the neural tagger’s learning curve is
even steeper. In other words, if we have to train a
tagger on very little data, we are better off using
a neural multi-task approach than a feature-based
approach; preliminary attempts to develop a multi-
task version of MARMOT failed (see Figure 3).

6 Related Work

We divide the discussion of related work topically
into three parts for ease of intellectual digestion.

6.1 Alignment-Based Distant Supervision.

Most cross-lingual work in NLP—focusing on mor-
phology or otherwise—has concentrated on indi-
rect supervision, rather than transfer learning. The
goal in such a regime is to provide noisy labels for

obtained through direct communication with the authors. First,
we used a slightly newer version of UD to incorporate more
languages: we used v2 whereas they used v1.2. There are
minor differences in the morphological tagset used between
these versions. Also, in the |Dt| = 1000 setting, we are
training on significantly more data than the models in Buys
and Botha (2016). A much fairer comparison is to our models
with |Dt| = 100. Also, we compare to their method using
their standard (non) setup. This method is fair in so far as
we evaluate in the same manner, but it disadvantages their
approach, which cannot predict tags that are not in the source
language.

26 27 28 29 210 211 212 213

Number of Samples

55

60

65

70

75

80

85

90

95

100

A
cc

ur
ac

y Languages
Joint
MarMoT
Mono
MarMoT-Trans

Figure 3: Learning Curve for Spanish and Catalan comparing
our monolingual model, our joint model and two MARMOT
models. The first MARMOT model is identical to those trained
in the rest of the paper and the second attempts a multi-task
approach, which failed so no further experimentation was
performed with this model.

training the tagger in the low-resource language
through annotations projected over aligned bitext
with a high-resource language. This method of
projection was first introduced by Yarowsky and
Ngai (2001) for the projection of POS annotation.
While follow-up work (Fossum and Abney, 2005;
Das and Petrov, 2011; Täckström et al., 2012) has
continually demonstrated the efficacy of projecting
simple part-of-speech annotations, Buys and Botha
(2016) were the first to show the use of bitext-based
projection for the training of a morphological tag-
ger for low-resource languages.

As we also discuss the training of a morphologi-
cal tagger, our work is most closely related to Buys
and Botha (2016) in terms of the task itself. We
contrast the approaches. The main difference lies
therein, that our approach is not projection-based
and, thus, does not require the construction of a
bilingual lexicon for projection based on bitext.

755



F1
B&B (2016) MARMOT Ours (Mono) Ours (Universal) Ours (Joint) Ours (Specific)

en (int) best (non) best (int) 100 1000 100 1000 100 1000 100 1000 100 1000

(bg) 51.6 61.9 65.0 53.7 74.7 26.0 68.0 55.1 77.3 56.6 77.8 55.1 78.6
(cs) 55.7 61.6 64.0 60.8 80.5 30.9 65.3 54.5 66.3 54.7 66.5 54.6 67.0
(da) 65.4 70.7 73.1 69.7 92.9 35.3 90.1 85.9 93.2 86.9 93.5 83.2 93.2
(es) 60.7 74.0 74.6 82.4 92.6 55.9 91.4 88.4 93.6 89.2 94.1 87.6 93.8
(fi) 59.1 57.2 59.1 44.6 78.3 17.5 61.7 48.6 73.6 49.3 74.4 46.2 73.9
(it) 66.1 74.4 75.3 78.7 90.0 56.4 87.0 83.1 90.5 83.3 91.9 82.7 91.7
(pl) 47.3 56.8 60.4 57.8 81.8 31.6 69.7 61.9 83.9 62.5 84.7 62.6 83.2
(pt) 60.2 69.2 73.1 67.6 80.0 42.9 82.0 77.9 86.3 78.1 86.5 71.8 85.7
(sv) 55.1 72.1 74.6 69.7 90.2 44.1 86.4 82.5 93.2 83.5 93.7 82.8 93.4

Table 6: Comparison of our approach to various baselines for low-resource tagging under F1 to allow for a more complete
comparison to the model of Buys and Botha (2016). All architectures presented in this work are used in their multi-source setting.
The B&B and MARMOT models are single-source. We only compare on those languages used in B&B.

Rather, our method jointly learns multiple taggers
and forces them to share features—a true transfer
learning scenario. In contrast to projection-based
methods, our procedure always requires a minimal
amount of annotated data in the low-resource target
language—in practice, however, this distinction is
non-critical as projection-based methods without a
small mount of seed target language data perform
poorly (Buys and Botha, 2016).

6.2 Character-level NLP.

Our work also follows a recent trend in NLP,
whereby traditional word-level neural representa-
tions are being replaced by character-level repre-
sentations for a myriad tasks, e.g., POS tagging dos
Santos and Zadrozny (2014), parsing (Ballesteros
et al., 2015), language modeling (Ling et al., 2015),
sentiment analysis (Zhang et al., 2015) as well as
the tagger of Heigold et al. (2017), whose work we
build upon. Our work is also related to recent work
on character-level morphological generation using
neural architectures (Faruqui et al., 2016; Rastogi
et al., 2016).

6.3 Neural Cross-lingual Transfer in NLP.

In terms of methodology, however, our proposal
bears similarity to recent work in speech and ma-
chine translation–we discuss each in turn. In
speech recognition, Heigold et al. (2013) train a
cross-lingual neural acoustic model on five Ro-
mance languages. The architecture bears similarity
to our multi-language softmax approach. Depen-
dency parsing benefits from cross-lingual learning
in a similar fashion (Guo et al., 2015, 2016).

In neural machine translation (Sutskever et al.,
2014; Bahdanau et al., 2015), recent work (Firat
et al., 2016; Zoph and Knight, 2016; Johnson et al.,

2016) has explored the possibility of jointly train
translation models for a wide variety of languages.
Our work addresses a different task, but the un-
dergirding philosophical motivation is similar, i.e.,
attack low-resource NLP through multi-task trans-
fer learning. Kann et al. (2017) offer a similar
method for cross-lingual transfer in morphological
inflection generation.

7 Conclusion

We have presented three character-level recurrent
neural network architectures for multi-task cross-
lingual transfer of morphological taggers. We pro-
vided an empirical evaluation of the technique on
18 languages from four different language families,
showing wide-spread applicability of the method.
We found that the transfer of morphological taggers
is an eminently viable endeavor among related lan-
guage and, in general, the closer the languages, the
easier the transfer of morphology becomes. Our
technique outperforms two strong baselines pro-
posed in previous work. Moreover, we define stan-
dard low-resource training splits in UD for future
research in low-resource morphological tagging.
Future work should focus on extending the neural
morphological tagger to a joint lemmatizer (Müller
et al., 2015) and evaluate its functionality in the
low-resource setting.

Acknowledgements

RC acknowledges the support of an NDSEG fel-
lowship. Also, we would like to thank Jan Buys
and Jan Botha who help us compare to the num-
bers reported in their paper. We are grateful to
Schloss Dagstuhl Leibniz Center for Informatics
for hosting the event at which work on this paper
started.

756



References
Dzmitry Bahdanau, Kyunghyun Cho, and Yoshua Ben-

gio. 2015. Neural machine translation by jointly
learning to align and translate. In International Con-
ference on Learning Representations (ICLR).

Miguel Ballesteros, Chris Dyer, and Noah A. Smith.
2015. Improved transition-based parsing by mod-
eling characters instead of words with LSTMs. In
Proceedings of the 2015 Conference on Empirical
Methods in Natural Language Processing (EMNLP),
pages 349–359, Lisbon, Portugal. Association for
Computational Linguistics.

Jan Buys and Jan A. Botha. 2016. Cross-lingual mor-
phological tagging for low-resource languages. In
Proceedings of the 54th Annual Meeting of the Asso-
ciation for Computational Linguistics (ACL), pages
1954–1964, Berlin, Germany. Association for Com-
putational Linguistics.

Rich Caruana. 1997. Multitask learning. Machine
Learning, 28(1):41–75.

Ronan Collobert, Koray Kavukcuoglu, and Clément
Farabet. 2011a. Torch7: A Matlab-like environment
for machine learning. In BigLearn, NIPS Workshop.

Ronan Collobert, Jason Weston, Léon Bottou, Michael
Karlen, Koray Kavukcuoglu, and Pavel P. Kuksa.
2011b. Natural language processing (almost) from
scratch. Journal of Machine Learning Research,
12:2493–2537.

Ryan Cotterell, Christo Kirov, John Sylak-Glassman,
Géraldine Walther, Ekaterina Vylomova, Patrick
Xia, Manaal Faruqui, Sandra Kübler, David
Yarowsky, Jason Eisner, and Mans Hulden. 2017.
The CoNLL-SIGMORPHON 2017 shared task: Uni-
versal morphological reinflection in 52 languages.
In Proceedings of the CoNLL-SIGMORPHON 2017
Shared Task: Universal Morphological Reinflection,
Vancouver, Canada. Association for Computational
Linguistics.

Ryan Cotterell, Christo Kirov, John Sylak-Glassman,
David Yarowsky, Jason Eisner, and Mans Hulden.
2016. The SIGMORPHON 2016 shared task—
morphological reinflection. In Proceedings of the
14th SIGMORPHON Workshop on Computational
Research in Phonetics, Phonology, and Morphol-
ogy, pages 10–22, Berlin, Germany. Association for
Computational Linguistics.

Dipanjan Das and Slav Petrov. 2011. Unsupervised
part-of-speech tagging with bilingual graph-based
projections. In Proceedings of the 49th Annual
Meeting of the Association for Computational Lin-
guistics: Human Language Technologies (ACL),
pages 600–609, Portland, Oregon, USA. Associa-
tion for Computational Linguistics.

Chris Dyer, Miguel Ballesteros, Wang Ling, Austin
Matthews, and Noah A. Smith. 2015. Transition-
based dependency parsing with stack long short-
term memory. In Proceedings of the 53rd Annual

Meeting of the Association for Computational Lin-
guistics and the 7th International Joint Conference
on Natural Language Processing (ACL), pages 334–
343, Beijing, China. Association for Computational
Linguistics.

Manaal Faruqui, Yulia Tsvetkov, Graham Neubig, and
Chris Dyer. 2016. Morphological inflection gener-
ation using character sequence to sequence learn-
ing. In Proceedings of the 2016 Conference of the
North American Chapter of the Association for Com-
putational Linguistics: Human Language Technolo-
gies (NAACL), pages 634–643, San Diego, Califor-
nia. Association for Computational Linguistics.

Orhan Firat, Kyunghyun Cho, and Yoshua Bengio.
2016. Multi-way, multilingual neural machine
translation with a shared attention mechanism. In
Proceedings of the 2016 Conference of the North
American Chapter of the Association for Computa-
tional Linguistics: Human Language Technologies
(NAACL), pages 866–875, San Diego, California.
Association for Computational Linguistics.

Victoria Fossum and Steven P. Abney. 2005. Automati-
cally inducing a part-of-speech tagger by projecting
from multiple source languages across aligned cor-
pora. In Second International Joint Conference on
Natural Language Processing (IJCNLP), pages 862–
873.

Dan Garrette and Jason Baldridge. 2013. Learning a
part-of-speech tagger from two hours of annotation.
In Proceedings of the 2013 Conference of the North
American Chapter of the Association for Computa-
tional Linguistics: Human Language Technologies
(NAACL), pages 138–147, Atlanta, Georgia. Associ-
ation for Computational Linguistics.

Alex Graves and Jürgen Schmidhuber. 2005. Frame-
wise phoneme classification with bidirectional
LSTM and other neural network architectures. Neu-
ral Networks, 18(5-6):602–610.

Jiang Guo, Wanxiang Che, David Yarowsky, Haifeng
Wang, and Ting Liu. 2015. Cross-lingual depen-
dency parsing based on distributed representations.
In Proceedings of the 53rd Annual Meeting of the
Association for Computational Linguistics and the
7th International Joint Conference on Natural Lan-
guage Processing (ACL), pages 1234–1244, Beijing,
China. Association for Computational Linguistics.

Jiang Guo, Wanxiang Che, David Yarowsky, Haifeng
Wang, and Ting Liu. 2016. A representation learn-
ing framework for multi-source transfer parsing. In
Proceedings of the Thirtieth AAAI Conference on Ar-
tificial Intelligence (AAAI), pages 2734–2740.

Jan Hajič and Barbora Hladká. 1998. Tagging in-
flective languages: Prediction of morphological cat-
egories for a rich structured tagset. In Proceed-
ings of the 36th Annual Meeting of the Associa-
tion for Computational Linguistics and 17th Inter-
national Conference on Computational Linguistics

757



(ACL-COLING), pages 483–490, Montreal, Quebec,
Canada. Association for Computational Linguistics.

Georg Heigold, Guenter Neumann, and Josef van Gen-
abith. 2017. An extensive empirical evaluation of
character-based morphological tagging for 14 lan-
guages. In Proceedings of the 15th Conference of
the European Chapter of the Association for Compu-
tational Linguistics (EACL), pages 505–513, Valen-
cia, Spain. Association for Computational Linguis-
tics.

Georg Heigold, Günter Neumann, and Josef van
Genabith. 2016. Neural morphological tagging
from characters for morphologically rich languages.
CoRR, abs/1606.06640.

Georg Heigold, Vincent Vanhoucke, Andrew Senior,
Patrick Nguyen, Marc’Aurelio Ranzato, Matthieu
Devin, and Jeffrey Dean. 2013. Multilingual
acoustic models using distributed deep neural net-
works. In IEEE International Conference on Acous-
tics, Speech and Signal Processing (ICASSP), pages
8619–8623. IEEE.

Sepp Hochreiter and Jürgen Schmidhuber. 1997.
Long short-term memory. Neural Computation,
9(8):1735–1780.

Melvin Johnson, Mike Schuster, Quoc V. Le, Maxim
Krikun, Yonghui Wu, Zhifeng Chen, Nikhil Tho-
rat, Fernanda B. Viégas, Martin Wattenberg, Greg
Corrado, Macduff Hughes, and Jeffrey Dean. 2016.
Google’s multilingual neural machine translation
system: Enabling zero-shot translation. CoRR,
abs/1611.04558.

Katharina Kann, Ryan Cotterell, and Hinrich Schütze.
2017. One-shot neural cross-lingual transfer for
paradigm completion. In Proceedings of the 55th
Annual Meeting of the Association for Computa-
tional Linguistics (ACL), Vancouver, Canada. Asso-
ciation for Computational Linguistics.

Aleksandr E. Kibrik. 1998. Archi (Caucasian – Dagh-
estanian). In The Handbook of Morphology, pages
455–476. Blackwell Oxford.

John D. Lafferty, Andrew McCallum, and Fernando
C. N. Pereira. 2001. Conditional random fields:
Probabilistic models for segmenting and labeling se-
quence data. In Proceedings of the Eighteenth Inter-
national Conference on Machine Learning (ICML),
pages 282–289.

Wang Ling, Chris Dyer, Alan W Black, Isabel Tran-
coso, Ramon Fermandez, Silvio Amir, Luis Marujo,
and Tiago Luis. 2015. Finding function in form:
Compositional character models for open vocabu-
lary word representation. In Proceedings of the 2015
Conference on Empirical Methods in Natural Lan-
guage Processing (EMNLP), pages 1520–1530, Lis-
bon, Portugal. Association for Computational Lin-
guistics.

Gábor Melis, Chris Dyer, and Phil Blunsom. 2017. On
the state of the art of evaluation in neural language
models. arXiv preprint arXiv:1707.05589.

Thomas Müller, Ryan Cotterell, Alexander Fraser, and
Hinrich Schütze. 2015. Joint lemmatization and
morphological tagging with Lemming. In Proceed-
ings of the 2015 Conference on Empirical Methods
in Natural Language Processing (EMNLP), pages
2268–2274, Lisbon, Portugal. Association for Com-
putational Linguistics.

Thomas Müller, Helmut Schmid, and Hinrich Schütze.
2013. Efficient higher-order CRFs for morphologi-
cal tagging. In Proceedings of the 2013 Conference
on Empirical Methods in Natural Language Process-
ing (EMNLP), pages 322–332, Seattle, Washington,
USA. Association for Computational Linguistics.

Frederick J. Newmeyer. 2007. Linguistic typology re-
quires crosslinguistic formal categories. Linguistic
Typology, 11(1):133–157.

Joakim Nivre, Marie-Catherine de Marneffe, Filip Gin-
ter, Yoav Goldberg, Jan Hajič, Christopher D. Man-
ning, Ryan McDonald, Slav Petrov, Sampo Pyysalo,
Natalia Silveira, et al. 2016. Universal dependen-
cies v1: A multilingual treebank collection. In Pro-
ceedings of the 10th International Conference on
Language Resources and Evaluation (LREC), pages
1659–1666.

Franz Josef Och and Hermann Ney. 2003. A systematic
comparison of various statistical alignment models.
Computational Linguistics, 29(1):19–51.

Kemal Oflazer and Ìlker Kuruöz. 1994. Tagging and
morphological disambiguation of Turkish text. In
Proceedings of the Fourth Conference on Applied
Natural Language Processing, pages 144–149. As-
sociation for Computational Linguistics.

Slav Petrov, Dipanjan Das, and Ryan T. McDonald.
2012. A universal part-of-speech tagset. In Pro-
ceedings of the Eighth International Conference on
Language Resources and Evaluation (LREC), pages
2089–2096.

Barbara Plank, Anders Søgaard, and Yoav Goldberg.
2016. Multilingual part-of-speech tagging with bidi-
rectional long short-term memory models and auxil-
iary loss. In Proceedings of the 54th Annual Meet-
ing of the Association for Computational Linguistics
(ACL), pages 412–418, Berlin, Germany. Associa-
tion for Computational Linguistics.

Pushpendre Rastogi, Ryan Cotterell, and Jason Eisner.
2016. Weighting finite-state transductions with neu-
ral context. In Proceedings of the 2016 Conference
of the North American Chapter of the Association
for Computational Linguistics: Human Language
Technologies (NAACL), pages 623–633, San Diego,
California. Association for Computational Linguis-
tics.

758



Cı́cero Nogueira dos Santos and Bianca Zadrozny.
2014. Learning character-level representations for
part-of-speech tagging. In Proceedings of the
31th International Conference on Machine Learning
(ICML), pages 1818–1826.

Nitish Srivastava, Geoffrey E. Hinton, Alex
Krizhevsky, Ilya Sutskever, and Ruslan Salakhutdi-
nov. 2014. Dropout: A simple way to prevent neural
networks from overfitting. Journal of Machine
Learning Research, 15(1):1929–1958.

Martin Sundermeyer, Ralf Schlüter, and Hermann Ney.
2012. LSTM neural networks for language mod-
eling. In 13th Annual Conference of the Interna-
tional Speech Communication Association (INTER-
SPEECH), pages 194–197.

Ilya Sutskever, Oriol Vinyals, and Quoc V. Le. 2014.
Sequence to sequence learning with neural networks.
In Advances in Neural Information Processing Sys-
tems (NIPS), pages 3104–3112.

John Sylak-Glassman, Christo Kirov, David Yarowsky,
and Roger Que. 2015. A language-independent fea-
ture schema for inflectional morphology. In Pro-
ceedings of the 53rd Annual Meeting of the Associ-
ation for Computational Linguistics and the 7th In-
ternational Joint Conference on Natural Language
Processing (ACL), pages 674–680, Beijing, China.
Association for Computational Linguistics.

Oscar Täckström, Ryan McDonald, and Jakob Uszko-
reit. 2012. Cross-lingual word clusters for direct
transfer of linguistic structure. In Proceedings of the
2012 Conference of the North American Chapter of
the Association for Computational Linguistics: Hu-
man Language Technologies (NAACL), pages 477–
487, Montréal, Canada. Association for Computa-
tional Linguistics.

Tijmen Tieleman and Geoff Hinton. 2012. Lecture
6.5—RmsProp: Divide the gradient by a running av-
erage of its recent magnitude. COURSERA: Neural
Networks for Machine Learning.

Jason Weston, Samy Bengio, and Nicolas Usunier.
2011. WSABIE: scaling up to large vocabulary im-
age annotation. In Proceedings of the 22nd Inter-
national Joint Conference on Artificial Intelligence
(IJCAI), pages 2764–2770.

David Yarowsky and Grace Ngai. 2001. Inducing
multilingual POS taggers and NP bracketers via ro-
bust projection across aligned corpora. In Lan-
guage Technologies 2001: The Second Meeting of
the North American Chapter of the Association for
Computational Linguistics (NAACL).

Daniel Zeman, Martin Popel, Milan Straka, Jan Ha-
jic, Joakim Nivre, Filip Ginter, Juhani Luotolahti,
Sampo Pyysalo, Slav Petrov, Martin Potthast, Fran-
cis Tyers, Elena Badmaeva, Memduh Gokirmak,
Anna Nedoluzhko, Silvie Cinkova, Jan Hajic jr.,
Jaroslava Hlavacova, Václava Kettnerová, Zdenka

Uresova, Jenna Kanerva, Stina Ojala, Anna Mis-
silä, Christopher D. Manning, Sebastian Schuster,
Siva Reddy, Dima Taji, Nizar Habash, Herman Le-
ung, Marie-Catherine de Marneffe, Manuela San-
guinetti, Maria Simi, Hiroshi Kanayama, Valeria
dePaiva, Kira Droganova, Héctor Martı́nez Alonso,
Çağr Çöltekin, Umut Sulubacak, Hans Uszkoreit,
Vivien Macketanz, Aljoscha Burchardt, Kim Harris,
Katrin Marheinecke, Georg Rehm, Tolga Kayadelen,
Mohammed Attia, Ali Elkahky, Zhuoran Yu, Emily
Pitler, Saran Lertpradit, Michael Mandl, Jesse Kirch-
ner, Hector Fernandez Alcalde, Jana Strnadová,
Esha Banerjee, Ruli Manurung, Antonio Stella, At-
suko Shimada, Sookyoung Kwak, Gustavo Men-
donca, Tatiana Lando, Rattima Nitisaroj, and Josie
Li. 2017. Conll 2017 shared task: Multilingual pars-
ing from raw text to universal dependencies. In Pro-
ceedings of the CoNLL 2017 Shared Task: Multilin-
gual Parsing from Raw Text to Universal Dependen-
cies, pages 1–19, Vancouver, Canada. Association
for Computational Linguistics.

Xiang Zhang, Junbo Jake Zhao, and Yann LeCun. 2015.
Character-level convolutional networks for text clas-
sification. In Advances in Neural Information Pro-
cessing Systems (NIPS), pages 649–657.

Barret Zoph and Kevin Knight. 2016. Multi-source
neural translation. In Proceedings of the 2016 Con-
ference of the North American Chapter of the As-
sociation for Computational Linguistics: Human
Language Technologies (NAACL), pages 30–34, San
Diego, California. Association for Computational
Linguistics.

759


