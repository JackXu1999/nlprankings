



















































Self-Supervised Learning for Contextualized Extractive Summarization


Proceedings of the 57th Annual Meeting of the Association for Computational Linguistics, pages 2221–2227
Florence, Italy, July 28 - August 2, 2019. c©2019 Association for Computational Linguistics

2221

Self-Supervised Learning for Contextualized Extractive Summarization

Hong Wang†, Xin Wang†, Wenhan Xiong†,
Mo Yu‡, Xiaoxiao Guo‡, Shiyu Chang‡, William Yang Wang†

† University of California, Santa Barbara
‡ IBM Research

{hongwang600, xwang, xwhan, william}@cs.ucsb.edu,
yum@us.ibm.com, {xiaoxiao.guo, shiyu.chang}@ibm.com

Abstract
Existing models for extractive summarization
are usually trained from scratch with a cross-
entropy loss, which does not explicitly cap-
ture the global context at the document level.
In this paper, we aim to improve this task by
introducing three auxiliary pre-training tasks
that learn to capture the document-level con-
text in a self-supervised fashion. Experiments
on the widely-used CNN/DM dataset vali-
date the effectiveness of the proposed auxiliary
tasks. Furthermore, we show that after pre-
training, a clean model with simple building
blocks is able to outperform previous state-of-
the-art that are carefully designed. 1

1 Introduction

Extractive summarization aims at shortening the
original article while retaining the key information
through the way of selection sentences from the
original articles. This paradigm has been proven
effective by many previous systems (Carbonell
and Goldstein, 1998; Mihalcea and Tarau, 2004;
McDonald, 2007; Cao et al., 2015). In order to
decide whether to choose a particular sentence,
the system should have a global view of the doc-
ument context, e.g., the subject and structure of
the document. However, previous works (Nallap-
ati et al., 2017; Al-Sabahi et al., 2018; Zhou et al.,
2018; Zhang et al., 2018) usually directly build an
end-to-end training system to learn to choose sen-
tences without explicitly modeling the document
context, counting on that the system can automat-
ically learn the document-level context.

We argue that it is hard for these end-to-end
systems to learn to leverage the document context
from scratch due to the challenges of this task,
and a well pre-trained embedding model that in-
corporates document context should help on this

1Code can be found in this repository: https://
github.com/hongwang600/Summarization

Last week, I went to attend a one-day meeting.
I booked the flight in advanced.
[masked sentence]
The earliest next flight will be a few days later.
I had to use the online discussion instead.

But the flight was cancelled due to the weather.
But I lost my passport.
The meeting was cancelled.
The weather is good today.

Masked 
Paragraph

Candidate 
Sentences

Figure 1: An example for the Mask pre-training task.
A sentence is masked in the original paragraph, and
the model is required to predicted the missing sentence
from the candidate sentences.

task. In recent years, extensive works (Penning-
ton et al., 2014; Nie and Bansal, 2017; Lin et al.,
2017; Peters et al., 2018; Devlin et al., 2018; Sub-
ramanian et al., 2018; Cer et al., 2018; Logeswaran
and Lee, 2018; Pagliardini et al., 2018) have been
done in learning the word or sentence represen-
tations, but most of them only use a sentence or
a few sentences when learning the representation,
and the document context can hardly be included
in the representation. Hence, we introduce new
pre-training methods that take the whole docu-
ment into consideration to learn the contextualized
sentence representation with self-supervision.

Self-supervised learning (Raina et al., 2007;
Doersch et al., 2015; Agrawal et al., 2015; Wang
and Gupta, 2015) is a newly emerged paradigm,
which aims to learn from the intrinsic structure of
the raw data. The general framework is to con-
struct training signals directly from the structured
raw data, and use it to train the model. The struc-
ture information learned through the process can
then be easily transformed and benefit other tasks.
Thus self-supervised learning has been widely ap-
plied in structured data like text (Okanohara and
Tsujii, 2007; Collobert and Weston, 2008; Peters
et al., 2018; Devlin et al., 2018; Wu et al., 2019)
and images (Doersch et al., 2015; Agrawal et al.,
2015; Wang and Gupta, 2015; Lee et al., 2017).

https://github.com/hongwang600/Summarization
https://github.com/hongwang600/Summarization


2222

Since documents are well organized and struc-
tured, it is intuitive to employ the power of self-
supervised learning to learn the intrinsic structure
of the document and model the document-level
context for the summarization task.

In this paper, we propose three self-supervised
tasks (Mask, Replace and Switch), where the
model is required to learn the document-level
structure and context. The knowledge learned
about the document during the pre-training pro-
cess will be transferred and benefit on the sum-
marization task. Particularly, The Mask task ran-
domly masks some sentences and predicts the
missing sentence from a candidate pool; The Re-
place task randomly replaces some sentences with
sentences from other documents and predicts if a
sentence is replaced. The Switch task switches
some sentences within the same document and
predicts if a sentence is switched. An illustrating
example is shown in Figure 1, where the model is
required to take into account the document con-
text in order to predict the missing sentence. To
verify the effectiveness of the proposed methods,
we conduct experiments on the CNN/DM dataset
(Hermann et al., 2015; Nallapati et al., 2016)
based on a hierarchical model. We demonstrate
that all of the three pre-training tasks perform bet-
ter and converge faster than the basic model, one
of which even outperforms the state-of-the-art ex-
tractive method NEUSUM (Zhou et al., 2018).

The contributions of this work include:
• To the best of our knowledge, we are the

first to consider using the whole document to learn
contextualized sentence representations with self-
supervision and without any human annotations.
• We introduce and experiment with various

self-supervised approaches for extractive summa-
rization, one of which achieves the new state-of-
the-art results with a basic hierarchical model.
• Benefiting from the self-supervised pre-

training, the summarization model is more sam-
ple efficient and converges much faster than those
trained from scratch.

2 Model and Pre-training Methods

2.1 Basic Model

As shown in Figure 2, our basic model for ex-
tractive summarization is mainly composed of two
parts: a sentence encoder and a document-level
self-attention module. The sentence encoder is
a bidirectional LSTM (Hochreiter and Schmidhu-

X₁ X₂ Xₙ
…

LSTM LSTM LSTM…

S₁ S₂ Sₙ
…

Self Attention Self Attention Self Attention…

D₁ D₂ Dₙ
…

Linear Linear Linear

Figure 2: The structure of the Basic Model. We use
LSTM and self-attention module to encode the sen-
tence and document respectively. Xi represent the
word embedding for sentence i. Si and Di represent
the independent and document involved sentence em-
bedding for sentence i respectively.

ber, 1997), which encodes each individual sen-
tence Xi (a sequence of words) and whose output
vector at the last step is viewed as the sentence rep-
resentation Si. Given the representations of all the
sentences, a self-attention module (Vaswani et al.,
2017) is employed to incorporate document-level
context and learn the contextualized sentence rep-
resentationDi for each sentence.2 Finally, a linear
layer is applied to predict whether to choose the
sentence to form the summary.

2.2 Self-supervised Pre-training Methods
In this section, we will describe three self-
supervised pre-training approaches. Through
solving each pre-training task, the model is ex-
pected to learn the document-level contextualized
sentence embedding model from the raw docu-
ments, which will then be used to solve the down-
stream summarization task. Note that we are only
pretraining the sentence encoder and document-
level self-attention module of the basic model for
extractive summarization.

Mask Similar to the task of predicting missing
word, the Mask task is to predict the masked sen-
tence from a candidate pool. Specifically, we first
mask some sentences within a document with the
probability Pm and put these masked sentences
(xm1 ,x

m
2 , · · · ,xmt ) into a candidate pool Tm. The

2We leave the combination of different architectures such
as replacing the self-attention module with LSTM for future
work.



2223

model is required to predict the correct sentence
from the pool for each masked position i. We re-
place the sentence in the masked position i with
a special token 〈unk〉 and compute its document
contextualized sentence embedding Di. We use
the same sentence encoder in the basic model to
obtain the sentence embedding Sm for these can-
didate sentences in Tm. We score each candidate
sentence j in Tm by using the cosine similarity:

Θ(i, j) = cos(Di, S
m
j )

To train the model, we adopt a ranking loss to
maximize the margin between the gold sentence
and other sentences:

`m = max{0, γ −Θ(i, j) + Θ(i, k)}

where γ is a tuned hyper-parameter, j points to the
gold sentence in Tm for the masked position i, and
k points to another non-target sentence in Tm.

Replace The Replace task is to randomly re-
place some sentences (with probability Pr) in the
document with sentences from other documents,
and then predict if a sentence is replaced. Partic-
ularly, we use sentences from 10, 000 randomly
chosen documents to form a candidate pool T r.
Each sentence in the document will be replaced
with probability Pr by a random sentence in T r.
Let Cr be the set of positions where sentences are
replaced. We use a linear layer fr to predict if the
sentence is replaced based on the document em-
bedding D, and minimize the MSE loss:

`r = MSE(fr(Di), yri )

where yri = 1 if i ∈ Cr (i.e., the sentence in posi-
tion i has been replaced), otherwise yri = 0.

Switch The Switch task is similar to the Re-
place task. Instead of filling these selected sen-
tences with sentences out of the document, this
task chooses to use sentences within the same doc-
ument by switching these selected sentences, i.e.,
each selected sentence will be put in another po-
sition within the same document. Let Cs be the
set of positions where the sentences are switched.
Similarly, we use a linear layer fs to predict if a
sentence is switched and minimize the MSE loss:

`s = MSE(fs(Di), ysi )

where ysi = 1 if i ∈ Cs, otherwise ysi = 0.

Figure 3: This figure shows the Rouge-2 score for each
pre-training method and the basic model on the devel-
opment set during the training process. We put the re-
sult for Rouge-1 and Rouge-L score in Appendix A.2

3 Experiment

To show the effectiveness of the pre-training
method (Mask, Replace and Switch), we con-
duct experiments on the commonly used dataset
CNN/DM (Hermann et al., 2015; Nallapati et al.,
2016), and compare them with a popular baseline
Lead3 (See et al., 2017), which selects first three
sentences as the summary, and the state-of-the-
art extractive summarization method NEUSUM
(Zhou et al., 2018), which jointly scores and se-
lects sentences using pointer network.

3.1 On CNN/DM Dataset

Model and training details We use the rule-
based system from (Zhou et al., 2018) to label
sentences in a document, e.g., sentences to be
extracted will be labeled as 1. Rouge score3

(Lin, 2004) is used to evaluate the performance
of the model, and we report Rouge-1, Rouge-2,
and Rouge-L as in prior work. We use the pre-
trained glove embedding (Pennington et al., 2014)
with 100 dimensions to initialize the word embed-
ding. A one-layer bidirectional LSTM (Hochreiter
and Schmidhuber, 1997) is used as the sentence
encoder, and the size of hidden state is 200. A 5-
layer Transformer encoder (Vaswani et al., 2017)
with 4 heads is used as the document-level self-
attention module. A linear classification layer is
used to predict whether to choose the sentence.

The training process consists of two phrases.
First, we use the pre-training task to pre-train
the basic model using the raw article from the

3We use PyRouge https://pypi.org/project/
pyrouge/ to compute the Rouge score.

https://pypi.org/project/pyrouge/
https://pypi.org/project/pyrouge/


2224

Method Rouge-1 Rouge-2 Rouge-L

Basic 41.07 18.95 37.56

LEAD3 39.93 17.62 36.21
NEUSUM 41.18∗ 18.84 37.61

Mask 41.15∗ 19.06∗ 37.65∗

Replace 41.21∗ 19.08∗ 37.73∗

Switch 41.36 19.20 37.86

SentEnc 41.17∗ 19.04∗ 37.69∗

Switch 0.15 41.35∗ 19.18∗ 37.85∗

Switch 0.35 41.27∗ 19.12∗ 37.77∗

Table 1: The Rouge (Lin, 2004) scores for the basic
model, baselines, pre-training methods, and analytic
experiments. All of our Rouge scores have a 95% con-
fidence interval of at most ±0.25 as reported by the of-
ficial ROUGE script. The best result is marked in bold,
and those that are not significantly worse than the best
are marked with ∗.

CNN/DM dataset without labels. Second, we fine-
tune the pre-trained model for the extractive sum-
marization task using the sentence labels. The
learning rate is set as 0.0001 in the pre-training
phase and 0.00001 in the fine-tune phase. We
train each pre-training task until it is converged or
the number of training epochs reaches the upper
bound 30. We set the probability to mask, replace
or switch sentences as 0.25.

Results We show the Rouge score on the devel-
opment set during the training process in Figure 3,
and present the best Rouge score for each method
in Table 1. All pre-training methods improve the
performance compared with the Basic model. Es-
pecially, Switch method achieves the best result
on all the three evaluations compared with other
pre-training methods, and is even better than the
state-of-the-art extractive model NEUSUM4.

In the terms of convergence, the Mask, Replace
and Switch task takes 21, 24, 17 epochs in the
training phase respectively, and 18, 13, 9 epochs
to achieve the best performance in the fine-tune
phase. The basic model takes 24 epochs to obtain
the best result. From Figure 3, we can see that
the Switch task converges much faster than the ba-
sic model. Even adding on the epochs taken in
the pre-training phase, Switch method (26 epochs)

4We use code from https://github.com/
magic282/NeuSum to train the model, and evaluate
it using our evaluation script. Results using their script (only
include Rouge-1 and Rouge-2) is put in Appendix A.1.

takes roughly the same time as the Basic model
(24 epochs) to achieve the best performance.

3.2 Ablation Study
Reuse only the sentence encoder Our basic
model has mainly two components: a sentence en-
coder and a document-level self-attention module.
The sentence encoder focuses on each sentence,
while document-level self-attention module incor-
porates more document information. To investi-
gate the role of the document-level self-attention
module, we only reuse the sentence encoder of
the pre-train model, and randomly initialize the
document-level self-attention module. The results
is shown in Table 1 as SentEnc. We can see that
using the whole pre-training model (Switch 0.25)
can achieve better performance, which indicates
the model learn some useful document-level in-
formation from the pre-training task. We notice
that only using the sentence encoder also get some
improvement over the basic model, which means
that the pre-training task may also help to learn the
independent sentence representation.

On the sensitivity of hyper-parameter In this
part, we investigate the sensitivity of the model to
the important hyper-parameter Pw, i.e., the prob-
ability to switch sentences. In the previous exper-
iment, we switch sentences with probability 0.25.
We further try the probability of 0.15 and 0.35,
and show the results in Table 1 as Switch 0.15 and
Switch 0.35. We can see Switch 0.15 achieve ba-
sically the same result as Switch 0.25, and Switch
0.35 is slightly worse. So the model is not so
sensitive to the hyper-parameter of the probability
to switch sentences, and probability between 0.15
and 0.25 should be able to work well.

4 Conclusion

In this paper, we propose three self-supervised
tasks to force the model to learn about the docu-
ment context, which will benefit the summariza-
tion task. Experiments on the CNN/DM verify
that through the way of pre-training on our pro-
posed tasks, the model can perform better and con-
verge faster when learning on the summarization
task. Especially, through the Switch pre-training
task, the model even outperforms the state-of-the-
art method NEUSUM (Zhou et al., 2018). Further
analytic experiments show that the document con-
text learned by the document-level self-attention
module will benefit the model in summarization

https://github.com/magic282/NeuSum
https://github.com/magic282/NeuSum


2225

task, and the model is not so sensitive to the hyper-
parameter of the probability to switch sentences.

References
Pulkit Agrawal, João Carreira, and Jitendra Malik.

2015. Learning to see by moving. In 2015 IEEE In-
ternational Conference on Computer Vision, ICCV
2015, Santiago, Chile, December 7-13, 2015, pages
37–45. IEEE Computer Society.

Kamal Al-Sabahi, Zuping Zhang, and Mohammed
Nadher. 2018. A hierarchical structured self-
attentive model for extractive document summariza-
tion (HSSAS). IEEE Access, 6:24205–24212.

Ziqiang Cao, Furu Wei, Li Dong, Sujian Li, and Ming
Zhou. 2015. Ranking with recursive neural net-
works and its application to multi-document summa-
rization. In Proceedings of the Twenty-Ninth AAAI
Conference on Artificial Intelligence, January 25-
30, 2015, Austin, Texas, USA., pages 2153–2159.
AAAI Press.

Jaime G. Carbonell and Jade Goldstein. 1998. The
use of mmr, diversity-based reranking for reorder-
ing documents and producing summaries. In SIGIR
’98: Proceedings of the 21st Annual International
ACM SIGIR Conference on Research and Develop-
ment in Information Retrieval, August 24-28 1998,
Melbourne, Australia, pages 335–336. ACM.

Daniel Cer, Yinfei Yang, Sheng-yi Kong, Nan Hua,
Nicole Limtiaco, Rhomni St. John, Noah Constant,
Mario Guajardo-Cespedes, Steve Yuan, Chris Tar,
Brian Strope, and Ray Kurzweil. 2018. Univer-
sal sentence encoder for english. In Proceedings
of the 2018 Conference on Empirical Methods in
Natural Language Processing, EMNLP 2018: Sys-
tem Demonstrations, Brussels, Belgium, October 31
- November 4, 2018, pages 169–174. Association for
Computational Linguistics.

Ronan Collobert and Jason Weston. 2008. A unified
architecture for natural language processing: deep
neural networks with multitask learning. In Ma-
chine Learning, Proceedings of the Twenty-Fifth In-
ternational Conference (ICML 2008), Helsinki, Fin-
land, June 5-9, 2008, volume 307 of ACM Inter-
national Conference Proceeding Series, pages 160–
167. ACM.

Jacob Devlin, Ming-Wei Chang, Kenton Lee, and
Kristina Toutanova. 2018. BERT: pre-training of
deep bidirectional transformers for language under-
standing. CoRR, abs/1810.04805.

Carl Doersch, Abhinav Gupta, and Alexei A. Efros.
2015. Unsupervised visual representation learning
by context prediction. In 2015 IEEE International
Conference on Computer Vision, ICCV 2015, Santi-
ago, Chile, December 7-13, 2015, pages 1422–1430.
IEEE Computer Society.

Karl Moritz Hermann, Tomás Kociský, Edward
Grefenstette, Lasse Espeholt, Will Kay, Mustafa Su-
leyman, and Phil Blunsom. 2015. Teaching ma-
chines to read and comprehend. In Advances in
Neural Information Processing Systems 28: Annual
Conference on Neural Information Processing Sys-
tems 2015, December 7-12, 2015, Montreal, Que-
bec, Canada, pages 1693–1701.

Sepp Hochreiter and Jürgen Schmidhuber. 1997.
Long short-term memory. Neural Computation,
9(8):1735–1780.

Hsin-Ying Lee, Jia-Bin Huang, Maneesh Singh, and
Ming-Hsuan Yang. 2017. Unsupervised representa-
tion learning by sorting sequences. In IEEE Interna-
tional Conference on Computer Vision, ICCV 2017,
Venice, Italy, October 22-29, 2017, pages 667–676.
IEEE Computer Society.

Chin-Yew Lin. 2004. Rouge: A package for auto-
matic evaluation of summaries. Text Summarization
Branches Out.

Zhouhan Lin, Minwei Feng, Cı́cero Nogueira dos San-
tos, Mo Yu, Bing Xiang, Bowen Zhou, and Yoshua
Bengio. 2017. A structured self-attentive sentence
embedding. In International Conference on Learn-
ing Representations.

Lajanugen Logeswaran and Honglak Lee. 2018. An
efficient framework for learning sentence represen-
tations. In International Conference on Learning
Representations.

Ryan T. McDonald. 2007. A study of global infer-
ence algorithms in multi-document summarization.
In Advances in Information Retrieval, 29th Euro-
pean Conference on IR Research, ECIR 2007, Rome,
Italy, April 2-5, 2007, Proceedings, volume 4425 of
Lecture Notes in Computer Science, pages 557–564.
Springer.

Rada Mihalcea and Paul Tarau. 2004. Textrank: Bring-
ing order into text. In Proceedings of the 2004 Con-
ference on Empirical Methods in Natural Language
Processing , EMNLP 2004, A meeting of SIGDAT, a
Special Interest Group of the ACL, held in conjunc-
tion with ACL 2004, 25-26 July 2004, Barcelona,
Spain, pages 404–411. ACL.

Ramesh Nallapati, Feifei Zhai, and Bowen Zhou. 2017.
Summarunner: A recurrent neural network based se-
quence model for extractive summarization of doc-
uments. In Proceedings of the Thirty-First AAAI
Conference on Artificial Intelligence, February 4-9,
2017, San Francisco, California, USA., pages 3075–
3081. AAAI Press.

Ramesh Nallapati, Bowen Zhou, Cı́cero Nogueira dos
Santos, Çaglar Gülçehre, and Bing Xiang. 2016.
Abstractive text summarization using sequence-to-
sequence rnns and beyond. In Proceedings of the
20th SIGNLL Conference on Computational Natural
Language Learning, CoNLL 2016, Berlin, Germany,
August 11-12, 2016, pages 280–290. ACL.

https://doi.org/10.1109/ICCV.2015.13
https://doi.org/10.1109/ACCESS.2018.2829199
https://doi.org/10.1109/ACCESS.2018.2829199
https://doi.org/10.1109/ACCESS.2018.2829199
http://www.aaai.org/ocs/index.php/AAAI/AAAI15/paper/view/9414
http://www.aaai.org/ocs/index.php/AAAI/AAAI15/paper/view/9414
http://www.aaai.org/ocs/index.php/AAAI/AAAI15/paper/view/9414
https://doi.org/10.1145/290941.291025
https://doi.org/10.1145/290941.291025
https://doi.org/10.1145/290941.291025
https://aclanthology.info/papers/D18-2029/d18-2029
https://aclanthology.info/papers/D18-2029/d18-2029
https://doi.org/10.1145/1390156.1390177
https://doi.org/10.1145/1390156.1390177
https://doi.org/10.1145/1390156.1390177
http://arxiv.org/abs/1810.04805
http://arxiv.org/abs/1810.04805
http://arxiv.org/abs/1810.04805
https://doi.org/10.1109/ICCV.2015.167
https://doi.org/10.1109/ICCV.2015.167
http://papers.nips.cc/paper/5945-teaching-machines-to-read-and-comprehend
http://papers.nips.cc/paper/5945-teaching-machines-to-read-and-comprehend
https://doi.org/10.1162/neco.1997.9.8.1735
https://doi.org/10.1109/ICCV.2017.79
https://doi.org/10.1109/ICCV.2017.79
https://openreview.net/forum?id=rJvJXZb0W
https://openreview.net/forum?id=rJvJXZb0W
https://openreview.net/forum?id=rJvJXZb0W
https://doi.org/10.1007/978-3-540-71496-5_51
https://doi.org/10.1007/978-3-540-71496-5_51
http://www.aclweb.org/anthology/W04-3252
http://www.aclweb.org/anthology/W04-3252
http://aaai.org/ocs/index.php/AAAI/AAAI17/paper/view/14636
http://aaai.org/ocs/index.php/AAAI/AAAI17/paper/view/14636
http://aaai.org/ocs/index.php/AAAI/AAAI17/paper/view/14636
http://aclweb.org/anthology/K/K16/K16-1028.pdf
http://aclweb.org/anthology/K/K16/K16-1028.pdf


2226

Yixin Nie and Mohit Bansal. 2017. Shortcut-
stacked sentence encoders for multi-domain infer-
ence. In Proceedings of the 2nd Workshop on
Evaluating Vector Space Representations for NLP,
RepEval@EMNLP 2017, Copenhagen, Denmark,
September 8, 2017, pages 41–45. Association for
Computational Linguistics.

Daisuke Okanohara and Jun’ichi Tsujii. 2007. A dis-
criminative language model with pseudo-negative
samples. In ACL 2007, Proceedings of the 45th An-
nual Meeting of the Association for Computational
Linguistics, June 23-30, 2007, Prague, Czech Re-
public. The Association for Computational Linguis-
tics.

Matteo Pagliardini, Prakhar Gupta, and Martin Jaggi.
2018. Unsupervised learning of sentence embed-
dings using compositional n-gram features. In
Proceedings of the 2018 Conference of the North
American Chapter of the Association for Computa-
tional Linguistics: Human Language Technologies,
NAACL-HLT 2018, New Orleans, Louisiana, USA,
June 1-6, 2018, Volume 1 (Long Papers), pages 528–
540. Association for Computational Linguistics.

Jeffrey Pennington, Richard Socher, and Christo-
pher D. Manning. 2014. Glove: Global vectors for
word representation. In Empirical Methods in Nat-
ural Language Processing (EMNLP), pages 1532–
1543.

Matthew E. Peters, Mark Neumann, Mohit Iyyer, Matt
Gardner, Christopher Clark, Kenton Lee, and Luke
Zettlemoyer. 2018. Deep contextualized word rep-
resentations. In Proceedings of the 2018 Confer-
ence of the North American Chapter of the Associ-
ation for Computational Linguistics: Human Lan-
guage Technologies, NAACL-HLT 2018, New Or-
leans, Louisiana, USA, June 1-6, 2018, Volume 1
(Long Papers), pages 2227–2237. Association for
Computational Linguistics.

Rajat Raina, Alexis Battle, Honglak Lee, Benjamin
Packer, and Andrew Y. Ng. 2007. Self-taught learn-
ing: transfer learning from unlabeled data. In Ma-
chine Learning, Proceedings of the Twenty-Fourth
International Conference (ICML 2007), Corvallis,
Oregon, USA, June 20-24, 2007, volume 227 of
ACM International Conference Proceeding Series,
pages 759–766. ACM.

Abigail See, Peter J. Liu, and Christopher D. Manning.
2017. Get to the point: Summarization with pointer-
generator networks. In Proceedings of the 55th An-
nual Meeting of the Association for Computational
Linguistics, ACL 2017, Vancouver, Canada, July 30
- August 4, Volume 1: Long Papers, pages 1073–
1083. Association for Computational Linguistics.

Sandeep Subramanian, Adam Trischler, Yoshua Ben-
gio, and Christopher J. Pal. 2018. Learning
general purpose distributed sentence representa-
tions via large scale multi-task learning. CoRR,
abs/1804.00079.

Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob
Uszkoreit, Llion Jones, Aidan N. Gomez, Lukasz
Kaiser, and Illia Polosukhin. 2017. Attention is all
you need. In Advances in Neural Information Pro-
cessing Systems 30: Annual Conference on Neural
Information Processing Systems 2017, 4-9 Decem-
ber 2017, Long Beach, CA, USA, pages 6000–6010.

Xiaolong Wang and Abhinav Gupta. 2015. Unsu-
pervised learning of visual representations using
videos. In 2015 IEEE International Conference on
Computer Vision, ICCV 2015, Santiago, Chile, De-
cember 7-13, 2015, pages 2794–2802. IEEE Com-
puter Society.

Jiawei Wu, Xin Wang, and William Yang Wang. 2019.
Self-supervised dialogue learning. In ACL 2019,
Proceedings of the 57th Annual Meeting of the As-
sociation for Computational Linguistics. The Asso-
ciation for Computational Linguistics.

Xingxing Zhang, Mirella Lapata, Furu Wei, and Ming
Zhou. 2018. Neural latent extractive document sum-
marization. In Proceedings of the 2018 Conference
on Empirical Methods in Natural Language Pro-
cessing, Brussels, Belgium, October 31 - November
4, 2018, pages 779–784. Association for Computa-
tional Linguistics.

Qingyu Zhou, Nan Yang, Furu Wei, Shaohan Huang,
Ming Zhou, and Tiejun Zhao. 2018. Neural docu-
ment summarization by jointly learning to score and
select sentences. In Proceedings of the 56th Annual
Meeting of the Association for Computational Lin-
guistics, ACL 2018, Melbourne, Australia, July 15-
20, 2018, Volume 1: Long Papers, pages 654–663.
Association for Computational Linguistics.

https://aclanthology.info/papers/W17-5308/w17-5308
https://aclanthology.info/papers/W17-5308/w17-5308
https://aclanthology.info/papers/W17-5308/w17-5308
http://aclweb.org/anthology/P07-1010
http://aclweb.org/anthology/P07-1010
http://aclweb.org/anthology/P07-1010
https://aclanthology.info/papers/N18-1049/n18-1049
https://aclanthology.info/papers/N18-1049/n18-1049
http://www.aclweb.org/anthology/D14-1162
http://www.aclweb.org/anthology/D14-1162
https://aclanthology.info/papers/N18-1202/n18-1202
https://aclanthology.info/papers/N18-1202/n18-1202
https://doi.org/10.1145/1273496.1273592
https://doi.org/10.1145/1273496.1273592
https://doi.org/10.18653/v1/P17-1099
https://doi.org/10.18653/v1/P17-1099
http://arxiv.org/abs/1804.00079
http://arxiv.org/abs/1804.00079
http://arxiv.org/abs/1804.00079
http://papers.nips.cc/paper/7181-attention-is-all-you-need
http://papers.nips.cc/paper/7181-attention-is-all-you-need
https://doi.org/10.1109/ICCV.2015.320
https://doi.org/10.1109/ICCV.2015.320
https://doi.org/10.1109/ICCV.2015.320
https://aclanthology.info/papers/D18-1088/d18-1088
https://aclanthology.info/papers/D18-1088/d18-1088
https://aclanthology.info/papers/P18-1061/p18-1061
https://aclanthology.info/papers/P18-1061/p18-1061
https://aclanthology.info/papers/P18-1061/p18-1061


2227

A Appendix

(a) Rouge-1

(b) Rouge-L

Figure 4: The Rouge-1 and Rouge-L score for each
pre-training method and the basic model on the devel-
opment set during the training process.

A.1 Evaluation results using scripts from
NEUSUM

Method Rouge-1 Rouge-2

Basic 41.13 18.97

Mask 41.21∗ 19.07∗

Replace 41.27∗ 19.09∗

Switch 41.41 19.22

LEAD3 39.98 17.63
NEUSUM− 41.23∗ 18.85

Table 2: The Rouge (Lin, 2004) score for basic model,
the pre-training methods, and the baselines. We use the
script from https://github.com/magic282/
NeuSum to compute the Rouge score. All of our Rouge
scores have a 95% confidence interval of at most±0.22
as reported by the official ROUGE script. The best re-
sult for each score is marked in bold, and those that are
not significantly worse than the best are marked with ∗.

A.2 Rouge-1 and Rouge-L results
The Rouge-1 and Rouge-L results are shown in
Figure 4, from which we can see that the Switch
method achieves the best performance.

https://github.com/magic282/NeuSum
https://github.com/magic282/NeuSum

