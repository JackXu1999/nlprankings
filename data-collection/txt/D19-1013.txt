



















































Entity-Consistent End-to-end Task-Oriented Dialogue System with KB Retriever


Proceedings of the 2019 Conference on Empirical Methods in Natural Language Processing
and the 9th International Joint Conference on Natural Language Processing, pages 133–142,
Hong Kong, China, November 3–7, 2019. c©2019 Association for Computational Linguistics

133

Entity-Consistent End-to-end Task-Oriented Dialogue System with KB
Retriever

Libo Qin, Yijia Liu, Wanxiang Che∗, Haoyang Wen, Yangming Li, Ting Liu
Research Center for Social Computing and Information Retrieval

Harbin Institute of Technology, China
{lbqin,yjliu,car,hywen,yangmingli,tliu}@ir.hit.edu.cn

Abstract

Querying the knowledge base (KB) has long
been a challenge in the end-to-end task-
oriented dialogue system. Previous sequence-
to-sequence (Seq2Seq) dialogue generation
work treats the KB query as an attention over
the entire KB, without the guarantee that the
generated entities are consistent with each
other. In this paper, we propose a novel frame-
work which queries the KB in two steps to im-
prove the consistency of generated entities. In
the first step, inspired by the observation that a
response can usually be supported by a single
KB row, we introduce a KB retrieval compo-
nent which explicitly returns the most relevant
KB row given a dialogue history. The retrieval
result is further used to filter the irrelevant en-
tities in a Seq2Seq response generation model
to improve the consistency among the output
entities. In the second step, we further per-
form the attention mechanism to address the
most correlated KB column. Two methods are
proposed to make the training feasible without
labeled retrieval data, which include distant
supervision and Gumbel-Softmax technique.
Experiments on two publicly available task
oriented dialog datasets show the effective-
ness of our model by outperforming the base-
line systems and producing entity-consistent
responses.

1 Introduction

Task-oriented dialogue system, which helps users
to achieve specific goals with natural language,
is attracting more and more research attention.
With the success of the sequence-to-sequence
(Seq2Seq) models in text generation (Sutskever
et al., 2014; Bahdanau et al., 2014; Luong et al.,
2015a; Nallapati et al., 2016b,a), several works
tried to model the task-oriented dialogue as the
Seq2Seq generation of response from the dialogue

∗* Email corresponding.

Address Distance POI type POI Traffic info
638 Amherst St 3 miles grocery store Sigona Farmers Market car collision nearby
269 Alger Dr 1 miles coffee or tea place Cafe Venetia car collision nearby
5672 barringer street 5 miles certain address 5672 barringer street no traffic
200 Alester Ave 2 miles gas station Valero road block nearby
899 Ames Ct 5 miles hospital Stanford Childrens Health moderate traffic
481 Amaranta Ave 1 miles parking garage Palo Alto Garage R moderate traffic
145 Amherst St 1 miles coffee or tea place Teavana road block nearby
409 Bollard St 5 miles grocery store Willows Market no traffic

Driver Address to the gas station.
Car Valero is located at 200 Alester Ave.
Driver OK , please give me directions via a route that avoids all heavy traffic.
Car Since there is a road block nearby, I found another route for you and I sent it on your screen.
Driver Awesome thank you.

Figure 1: An example of a task-oriented dialogue that
incorporates a knowledge base (KB). The fourth row in
KB supports the second turn of the dialogue. A dia-
logue system will produce a response with conflict en-
tities if it includes the POI in the fourth row and the
address in the fifth row, like “Valero is located at 899
Ames Ct”.

history (Eric and Manning, 2017; Eric et al., 2017;
Madotto et al., 2018). This kind of modeling
scheme frees the task-oriented dialogue system
from the manually designed pipeline modules and
heavy annotation labor for these modules. Dif-
ferent from typical text generation, the success-
ful conversations for task-oriented dialogue sys-
tem heavily depend on accurate knowledge base
(KB) queries. Taking the dialogue in Figure 1
as an example, to answer the driver’s query on
the gas station, the dialogue system is required to
retrieve the entities like “200 Alester Ave”
and “Valero”. For the task-oriented system
based on Seq2Seq generation, there is a trend in
recent study towards modeling the KB query as an
attention network over the entire KB entity repre-
sentations, hoping to learn a model to pay more
attention to the relevant entities (Eric et al., 2017;
Madotto et al., 2018; Reddy et al., 2018; Wen
et al., 2018).

Though achieving good end-to-end dialogue
generation with over-the-entire-KB attention
mechanism, these methods do not guarantee the
generation consistency regarding KB entities and



134

sometimes yield responses with conflict entities,
like “Valero is located at 899 Ames Ct” for the
gas station query (as shown in Figure 1). In fact,
the correct address for Valero is 200 Alester Ave.
A consistent response is relatively easy to achieve
for the conventional pipeline systems because
they query the KB by issuing API calls (Bordes
and Weston, 2017; Wen et al., 2017b,a), and the
returned entities, which typically come from a
single KB row, are consistently related to the
object (like the “gas station”) that serves the user’s
request. This indicates that a response can usually
be supported by a single KB row. It’s promising
to incorporate such observation into the Seq2Seq
dialogue generation model, since it encourages
KB relevant generation and avoids the model from
producing responses with conflict entities.

To achieve entity-consistent generation in the
Seq2Seq task-oriented dialogue system, we pro-
pose a novel framework which query the KB in
two steps. In the first step, we introduce a re-
trieval module — KB-retriever to explicitly query
the KB. Inspired by the observation that a sin-
gle KB row usually supports a response, given
the dialogue history and a set of KB rows, the
KB-retriever uses a memory network (Sukhbaatar
et al., 2015) to select the most relevant row. The
retrieval result is then fed into a Seq2Seq dialogue
generation model to filter the irrelevant KB entities
and improve the consistency within the generated
entities. In the second step, we further perform at-
tention mechanism to address the most correlated
KB column. Finally, we adopt the copy mecha-
nism to incorporate the retrieved KB entity.

Since dialogue dataset is not typically annotated
with the retrieval results, training the KB-retriever
is non-trivial. To make the training feasible, we
propose two methods: 1) we use a set of heuris-
tics to derive the training data and train the re-
triever in a distant supervised fashion; 2) we use
Gumbel-Softmax (Jang et al., 2017) as an approx-
imation of the non-differentiable selecting process
and train the retriever along with the Seq2Seq di-
alogue generation model. Experiments on two
publicly available datasets (Camrest (Wen et al.,
2017b) and InCar Assistant (Eric et al., 2017))
confirm the effectiveness of the KB-retriever. Both
the retrievers trained with distant-supervision and
Gumbel-Softmax technique outperform the com-
pared systems in the automatic and human evalu-
ations. Analysis empirically verifies our assump-

tion that more than 80% responses in the dataset
can be supported by a single KB row and better re-
trieval results lead to better task-oriented dialogue
generation performance.

2 Definition

In this section, we will describe the input and out-
put of the end-to-end task-oriented dialogue sys-
tem, and the definition of Seq2Seq task-oriented
dialogue generation.

2.1 Dialogue History

Given a dialogue between a user (u) and a
system (s), we follow Eric et al. (2017) and
represent the k-turned dialogue utterances as
{(u1, s1), (u2, s2), ..., (uk, sk)}. At the ith turn of
the dialogue, we aggregate dialogue context which
consists of the tokens of (u1, s1, ..., si−1, ui) and
use x = (x1, x2, ..., xm) to denote the whole dia-
logue history word by word, where m is the num-
ber of tokens in the dialogue history.

2.2 Knowledge Base

In this paper, we assume to have the access to a
relational-database-like KB B, which consists of
|R| rows and |C| columns. The value of entity in
the jth row and the ith column is noted as vj,i.

2.3 Seq2Seq Dialogue Generation

We define the Seq2Seq task-oriented dialogue
generation as finding the most likely response y
according to the input dialogue history x and KB
B. Formally, the probability of a response is de-
fined as

p(y | x, B) =
n∏

t=1

p(yt | y1, ..., yt−1,x, B),

where yt represents an output token.

3 Our Framework

In this section, we describe our framework for
end-to-end task-oriented dialogues. The architec-
ture of our framework is demonstrated in Figure 2,
which consists of two major components includ-
ing an memory network-based retriever and the
seq2seq dialogue generation with KB Retriever.
Our framework first uses the KB-retriever to se-
lect the most relevant KB row and further filter the
irrelevant entities in a Seq2Seq response genera-
tion model to improve the consistency among the



135

at 200_Alester_Aveis locatedValero <eos>

!ℎ#
h1 h2 h3 h4

Attention layer

Address to the gas_station

!ℎ$ !ℎ% !ℎ& !ℎ' !ℎ#

Valero is located at

!ℎ(

200_Alester_Ave<start>

Seq2Seq Dialogue Generation with KB Retriever

Dialogue History
“Address to the gas
station”

) = softmax (3 4 + 6 )

Address Distance POI type POI Traffic info

8$,$ 8$,% 8$,& 8$,' 8$,#
⋮ ⋮ ⋮ ⋮ ⋮

200 Alester Ave 2 miles gas station Valero Road block nearby
⋮ ⋮ ⋮ ⋮ ⋮

8|ℛ|,$ 8|ℛ|,% 8|ℛ|,& 8|ℛ|,' 8 ℛ ,#

Retrieval Results
0

1

0

0

1

0

0
⋮
1
⋮
0

0

1

0

0

1

0 |ℛ|×|@|

⨂

Memory Network-based Retriever (KB Row Selection)

Vocabulary distribution

⋯ ⋯
… ck-1,5 200 A. … Vaero ck+1,1 …

Constrained KB distribution

… ck-1,5 200 A. … Vaero ck+1,1 …

KB distribution (KB Column Selection)

0 ⋯ 1 1 1 1 1 ⋯ 0
From C + k − 1 × @ to C + k× @

Flattened and Expanded Retrieval Results

KB Row
Representation

Dialogue History
Representation

6 FG ⋯ FH ⋯ F ℛ

IG ⋯ IH ⋯ I ℛ4

Figure 2: The workflow of our Seq2Seq task-oriented dialogue generation model with KB-retriever. For simplifi-
cation, we draw the single-hop memory network instead of the multiple-hop one we use in our model.

output entities. While in decoding, we further per-
form the attention mechanism to choose the most
probable KB column. We will present the details
of our framework in the following sections.

3.1 Encoder

In our encoder, we adopt the bidirectional LSTM
(Hochreiter and Schmidhuber, 1997, BiLSTM)
to encode the dialogue history x, which cap-
tures temporal relationships within the sequence.
The encoder first map the tokens in x to vec-
tors with embedding function φemb, and then the
BiLSTM read the vector forwardly and back-
wardly to produce context-sensitive hidden states
(h1,h2, ...,hm) by repeatedly applying the recur-
rence hi = BiLSTM

(
φemb (xi) ,hi−1

)
.

3.2 Vanilla Attention-based Decoder

Here, we follow Eric et al. (2017) to adopt
the attention-based decoder to generation the re-
sponse word by word. LSTM is also used to
represent the partially generated output sequence
(y1, y2, ..., yt−1) as (h̃1, h̃2, ..., h̃t). For the gen-
eration of next token yt, their model first calcu-
lates an attentive representation h̃

′
t of the dialogue

history as

uti =W2 tanh(W1 [hi, h̃t]),

ati = softmax(u
t
i),

h̃
′
t =

m∑
i=1

ati · hi.

Then, the concatenation of the hidden represen-
tation of the partially outputted sequence h̃t and
the attentive dialogue history representation h̃

′
t are

projected to the vocabulary space V by U as

ot = U [h̃t, h̃
′
t],

to calculate the score (logit) for the next token gen-
eration. The probability of next token yt is finally
calculated as

p(yt | y1, ..., yt−1,x, B) = softmax(ot).

3.3 Entity-Consistency Augmented Decoder
As shown in section 3.2, we can see that the gener-
ation of tokens are just based on the dialogue his-
tory attention, which makes the model ignorant to
the KB entities. In this section, we present how to
query the KB explicitly in two steps for improving
the entity consistence, which first adopt the KB-
retriever to select the most relevant KB row and
the generation of KB entities from the entities-
augmented decoder is constrained to the entities



136

within the most probable row, thus improve the
entity generation consistency. Next, we perform
the column attention to select the most probable
KB column. Finally, we show how to use the
copy mechanism to incorporate the retrieved en-
tity while decoding.

3.3.1 KB Row Selection
In our framework, our KB-retriever takes the di-
alogue history and KB rows as inputs and selects
the most relevant row. This selection process re-
sembles the task of selecting one word from the in-
puts to answer questions (Sukhbaatar et al., 2015),
and we use a memory network to model this pro-
cess. In the following sections, we will first de-
scribe how to represent the inputs, then we will
talk about our memory network-based retriever

Dialogue History Representation: We encode
the dialogue history by adopting the neural bag-
of-words (BoW) followed the original paper
(Sukhbaatar et al., 2015). Each token in the di-
alogue history is mapped into a vector by an-
other embedding function φemb

′
(x) and the dia-

logue history representation q is computed as the
sum of these vectors: q =

∑m
i=1 φ

emb′(xi).

KB Row Representation: In this section, we
describe how to encode the KB row. Each KB
cell is represented as the cell value v embedding
as cj,k = φvalue(vj,k), and the neural BoW is also
used to represent a KB row rj as rj =

∑|C|
k=1 cj,k.

Memory Network-Based Retriever: We model
the KB retrieval process as selecting the row
that most-likely supports the response gener-
ation. Memory network (Sukhbaatar et al.,
2015) has shown to be effective to model this
kind of selection. For a n-hop memory net-
work, the model keeps a set of input matrices
{R1, R2, ..., Rn+1}, where each Ri is a stack of
|R| inputs (ri1, ri2, ..., ri|R|). The model also keeps
query q1 as the input. A single hop memory net-
work computes the probability aj of selecting the
jth input as

π1 = softmax((q1)T R1),

o1 =
∑
i

π1i r
2
i ,

a = softmax(Wmem (o1 + q1)).

For the multi-hop cases, layers of single hop mem-
ory network are stacked and the query of the

(i+ 1)th layer network is computed as

qi+1 = qi + oi,

and the output of the last layer is used as the out-
put of the whole network. For more details about
memory network, please refer to the original paper
(Sukhbaatar et al., 2015).

After getting a, we represent the retrieval results
as a 0-1 matrix T ∈ {0, 1}|R|×|C|, where each ele-
ment in T is calculated as

Tj,∗ = 1[j = argmax
i

ai]. (1)

In the retrieval result, Tj,k indicates whether the
entity in the jth row and the kth column is rele-
vant to the final generation of the response. In
this paper, we further flatten T to a 0-1 vector
t ∈ {0, 1}|E| (where |E| equals |R| × |C|) as our
retrieval row results.

3.3.2 KB Column Selection
After getting the retrieved row result that indi-
cates which KB row is the most relevant to the
generation, we further perform column attention
in decoding time to select the probable KB col-
umn. For our KB column selection, following the
Eric et al. (2017) we use the decoder hidden state
(h̃1, h̃2, ..., h̃t) to compute an attention score with
the embedding of column attribute name. The at-
tention score c ∈ R|E| then become the logits of
the column be selected, which can be calculated
as

cj =W
′
2 tanh(W

′
1 [kj , h̃t]),

where cj is the attention score of the jth KB col-
umn, kj is represented with the embedding of
word embedding of KB column name. W

′
1, W

′
2

and tT are trainable parameters of the model.

3.3.3 Decoder with Retrieved Entity
After the row selection and column selection, we
can define the final retrieved KB entity score as
the element-wise dot between the row retriever re-
sult and the column selection score, which can be
calculated as

vt = t ∗ c, (2)

where the vt indicates the final KB retrieved en-
tity score. Finally, we follow Eric et al. (2017) to



137

use copy mechanism to incorporate the retrieved
entity, which can be defined as

ot = U [h̃t, h̃
′
t] + v

t,

where ot’s dimensionality is |V| +|E|. In vt , lower
|V| is zero and the rest|E| is retrieved entity scores.

4 Training the KB-Retriever

As mentioned in section 3.3.1, we adopt the mem-
ory network to train our KB-retriever. However, in
the Seq2Seq dialogue generation, the training data
does not include the annotated KB row retrieval
results, which makes supervised training the KB-
retriever impossible. To tackle this problem, we
propose two training methods for our KB-row-
retriever. 1) In the first method, inspired by the re-
cent success of distant supervision in information
extraction (Zeng et al., 2015; Mintz et al., 2009;
Min et al., 2013; Xu et al., 2013), we take advan-
tage of the similarity between the surface string of
KB entries and the reference response, and design
a set of heuristics to extract training data for the
KB-retriever. 2) In the second method, instead of
training the KB-retriever as an independent com-
ponent, we train it along with the training of the
Seq2Seq dialogue generation. To make the re-
trieval process in Equation 1 differentiable, we use
Gumbel-Softmax (Jang et al., 2017) as an approx-
imation of the argmax during training.

4.1 Training with Distant Supervision

Although it’s difficult to obtain the annotated re-
trieval data for the KB-retriever, we can “guess”
the most relevant KB row from the reference re-
sponse, and then obtain the weakly labeled data for
the retriever. Intuitively, for the current utterance
in the same dialogue which usually belongs to one
topic and the KB row that contains the largest
number of entities mentioned in the whole dia-
logue should support the utterance. In our training
with distant supervision, we further simplify our
assumption and assume that one dialogue which is
usually belongs to one topic and can be supported
by the most relevant KB row, which means for a
k-turned dialogue, we construct k pairs of train-
ing instances for the retriever and all the inputs
(u1, s1, ..., si−1, ui | i ≤ k) are associated with
the same weakly labeled KB retrieval result T ∗.

In this paper, we compute each row’s sim-
ilarity to the whole dialogue and choose the

most similar row as T ∗. We define the sim-
ilarity of each row as the number of matched
spans with the surface form of the entities in
the row. Taking the dialogue in Figure 1
for an example, the similarity of the 4th row
equals to 4 with “200 Alester Ave”, “gas
station”, “Valero”, and “road block
nearby” matching the dialogue context; and the
similarity of the 7th row equals to 1 with only
“road block nearby” matching.

In our model with the distantly supervised re-
triever, the retrieval results serve as the input
for the Seq2Seq generation. During training the
Seq2Seq generation, we use the weakly labeled re-
trieval result T ∗ as the input.

4.2 Training with Gumbel-Softmax

In addition to treating the row retrieval result as an
input to the generation model, and training the kb-
row-retriever independently, we can train it along
with the training of the Seq2Seq dialogue genera-
tion in an end-to-end fashion. The major difficulty
of such a training scheme is that the discrete re-
trieval result is not differentiable and the training
signal from the generation model cannot be passed
to the parameters of the retriever. Gumbel-softmax
technique (Jang et al., 2017) has been shown an ef-
fective approximation to the discrete variable and
proved to work in sentence representation. In this
paper, we adopt the Gumbel-Softmax technique to
train the KB retriever. We use

T
approx
j,∗ =

exp((log(aj) + gj)/τ)∑
i exp((log(ai) + gi)/τ)

,

as the approximation of T , where gj are i.i.d sam-
ples drawn from Gumbel(0, 1)1 and τ is a constant
that controls the smoothness of the distribution.
T

approx
j replaces Tj in equation 1 and goes through

the same flattening and expanding process as V to
get vt

approx′
and the training signal from Seq2Seq

generation is passed via the logit

o
approx
t = U [h̃t, h̃

′
t] + v

tapprox
′
.

To make training with Gumbel-Softmax more sta-
ble, we first initialize the parameters by pre-
training the KB-retriever with distant supervision
and further fine-tuning our framework.

1 We sample g by drawing u ∼ Uniform(0, 1) then com-
puting g = − log(− log(u)).



138

4.3 Experimental Settings

We choose the InCar Assistant dataset (Eric et al.,
2017) including three distinct domains: naviga-
tion, weather and calendar domain. For weather
domain, we follow Wen et al. (2018) to separate
the highest temperature, lowest temperature and
weather attribute into three different columns. For
calendar domain, there are some dialogues with-
out a KB or incomplete KB. In this case, we
padding a special token “-” in these incomplete
KBs. Our framework is trained separately in these
three domains, using the same train/validation/test
split sets as Eric et al. (2017).2 To justify the gen-
eralization of the proposed model, we also use an-
other public CamRest dataset (Wen et al., 2017b)
and partition the datasets into training, validation
and testing set in the ratio 3:1:1.3 Especially, we
hired some human experts to format the CamRest
dataset by equipping the corresponding KB to ev-
ery dialogues.

All hyper-parameters are selected according
to validation set. We use a three-hop mem-
ory network to model our KB-retriever. The
dimensionalities of the embedding is selected
from {100, 200} and LSTM hidden units is se-
lected from {50, 100, 150, 200, 350}. The dropout
we use in our framework is selected from
{0.25, 0.5, 0.75} and the batch size we adopt is
selected from {1, 2}. L2 regularization is used on
our model with a tension of 5 × 10−6 for reduc-
ing overfitting. For training the retriever with dis-
tant supervision, we adopt the weight typing trick
(Liu and Perez, 2017). We use Adam (Kingma and
Ba, 2014) to optimize the parameters in our model
and adopt the suggested hyper-parameters for op-
timization.

We adopt both the automatic and human evalu-
ations in our experiments.

4.4 Baseline Models

We compare our model with several baselines in-
cluding:

• Attn seq2seq (Luong et al., 2015b): A model
with simple attention over the input context at
each time step during decoding.

2We obtain the BLEU and Entity F1 score on the whole
InCar dataset by mixing all generated response and evaluat-
ing them together.

3The dataset can be available at: https://github.
com/yizhen20133868/Retriever-Dialogue

• Ptr-UNK (Gulcehre et al., 2016): Ptr-UNK
is the model which augments a sequence-
to-sequence architecture with attention-based
copy mechanism over the encoder context.

• KV Net (Eric et al., 2017): The model
adopted and argumented decoder which de-
codes over the concatenation of vocabulary
and KB entities, which allows the model to
generate entities.

• Mem2Seq (Madotto et al., 2018): Mem2Seq
is the model that takes dialogue history and
KB entities as input and uses a pointer gate to
control either generating a vocabulary word
or selecting an input as the output.

• DSR (Wen et al., 2018): DSR leveraged dia-
logue state representation to retrieve the KB
implicitly and applied copying mechanism to
retrieve entities from knowledge base while
decoding.

In InCar dataset, for the Attn seq2seq, Ptr-UNK
and Mem2seq, we adopt the reported results from
Madotto et al. (2018). In CamRest dataset, for
the Mem2Seq, we adopt their open-sourced code
to get the results while for the DSR, we run their
code on the same dataset to obtain the results.4

5 Results

Follow the prior works (Eric et al., 2017; Madotto
et al., 2018; Wen et al., 2018), we adopt the BLEU
and the Micro Entity F1 to evaluate our model per-
formance. The experimental results are illustrated
in Table 1.

In the first block of Table 1, we show the Hu-
man, rule-based and KV Net (with*) result which
are reported from Eric et al. (2017). We argue
that their results are not directly comparable be-
cause their work uses the entities in thier canoni-
calized forms, which are not calculated based on
real entity value. It’s noticing that our framework
with two methods still outperform KV Net in In-
Car dataset on whole BLEU and Entity F met-
rics, which demonstrates the effectiveness of our
framework.

4We adopt the same pre-processed dataset from Madotto
et al. (2018). We can find that experimental results is slightly
different with their reported performance (Wen et al., 2018)
because of their different tokenized utterances and normal-
ization for entities.

https://github.com/yizhen20133868/Retriever-Dialogue
https://github.com/yizhen20133868/Retriever-Dialogue


139

InCar CamRest

Model BLEU F1
Navigate

F1
Weather

F1
Calendar

F1
BLEU F1

Human* (Eric et al., 2017) 13.5 60.7 55.2 61.6 64.3 - -
Rule-Based* (Eric et al., 2017) 6.6 43.8 40.4 39.5 61.3 - -
KV Net* (Eric et al., 2017) 13.2 48.0 41.3 47.0 62.9 - -
Attn seq2seq (Luong et al., 2015b) 9.3 11.9 10.8 25.6 23.4 - -
Ptr-UNK (Gulcehre et al., 2016) 8.3 22.7 14.9 26.7 26.9 - -
Mem2Seq (Madotto et al., 2018) 12.6 33.4 20.0 32.8 49.3 16.6 42.4
DSR (Wen et al., 2018) 12.7 51.9 52.0 50.4 52.1 18.3 53.6
w/ distant supervision 14.1 51.9 51.6 49.6 54.2 17.4 58.0
w/ Gumbel-Softmax 13.9 53.7 54.5 52.2 55.6 18.5 58.6

Table 1: Comparison of our model with baselines

In the second block of Table 1, we can see that
our framework trained with both the distant super-
vision and the Gumbel-Softmax beats all existing
models on two datasets. Our model outperforms
each baseline on both BLEU and F1 metrics. In
InCar dataset, Our model with Gumbel-Softmax
has the highest BLEU compared with baselines,
which which shows that our framework can gen-
erate more fluent response. Especially, our frame-
work has achieved 2.5% improvement on navigate
domain, 1.8% improvement on weather domain
and 3.5% improvement on calendar domain on F1
metric. It indicates that the effectiveness of our
KB-retriever module and our framework can re-
trieve more correct entity from KB. In CamRest
dataset, the same trend of improvement has been
witnessed, which further show the effectiveness of
our framework.

Besides, we observe that the model trained with
Gumbel-Softmax outperforms with distant super-
vision method. We attribute this to the fact that
the KB-retriever and the Seq2Seq module are fine-
tuned in an end-to-end fashion, which can refine
the KB-retriever and further promote the dialogue
generation.

5.1 The proportion of responses that can be
supported by a single KB row

In this section, we verify our assumption by ex-
amining the proportion of responses that can be
supported by a single row.

We define a response being supported by the
most relevant KB row as all the responded enti-
ties are included by that row. We study the pro-
portion of these responses over the test set. The
number is 95% for the navigation domain, 90% for
the CamRest dataset and 80% for the weather do-
main. This confirms our assumption that most re-
sponses can be supported by the relevant KB row.

1.0 1.5 2.0 2.5 3.0 3.5 4.0 4.5 5.0

KB Row Number

70

75

80

85

90

95

G
en

er
at

io
n

C
on

si
st

en
cy

92.6

87.8

82.6

73.0

70.4

Figure 3: Correlation between the number of KB rows
and generation consistency on navigation domain.

Correctly retrieving the supporting row should be
beneficial.

We further study the weather domain to see the
rest 20% exceptions. Instead of being supported
by multiple rows, most of these exceptions cannot
be supported by any KB row. For example, there
is one case whose reference response is “It ’s not
rainy today”, and the related KB entity is sunny.
These cases provide challenges beyond the scope
of this paper. If we consider this kind of cases as
being supported by a single row, such proportion
in the weather domain is 99%.

5.2 Generation Consistency

In this paper, we expect the consistent generation
from our model. To verify this, we compute the
consistency recall of the utterances that have mul-
tiple entities. An utterance is considered as con-
sistent if it has multiple entities and these entities
belong to the same row which we annotated with
distant supervision.

The consistency result is shown in Table 2.
From this table, we can see that incorporating re-
triever in the dialogue generation improves the
consistency.



140

5.3 Correlation between the number of KB
rows and generation consistency

To further explore the correlation between the
number of KB rows and generation consistency,
we conduct experiments with distant manner to
study the correlation between the number of KB
rows and generation consistency.

We choose KBs with different number of rows
on a scale from 1 to 5 for the generation. From
Figure 3, as the number of KB rows increase, we
can see a decrease in generation consistency. This
indicates that irrelevant information would harm
the dialogue generation consistency.

5.4 Visualization

To gain more insights into how the our retriever
module influences the whole KB score distri-
bution, we visualized the KB entity probability
at the decoding position where we generate the
entity 200 Alester Ave. From the example
(Fig 4), we can see the 4th row and the 1th col-
umn has the highest probabilities for generating
200 Alester Ave, which verify the effective-
ness of firstly selecting the most relevant KB row
and further selecting the most relevant KB col-
umn.

5.5 Human Evaluation

We provide human evaluation on our framework
and the compared models. These responses are
based on distinct dialogue history. We hire sev-
eral human experts and ask them to judge the qual-
ity of the responses according to correctness, flu-
ency, and humanlikeness on a scale from 1 to 5.
In each judgment, the expert is presented with the
dialogue history, an output of a system with the
name anonymized, and the gold response.

The evaluation results are illustrated in Table 2.
Our framework outperforms other baseline mod-
els on all metrics according to Table 2. The most
significant improvement is from correctness, indi-
cating that our model can retrieve accurate entity
from KB and generate more informative informa-
tion that the users want to know.

6 Related Work

Sequence-to-sequence (Seq2Seq) models in text
generation (Sutskever et al., 2014; Bahdanau
et al., 2014; Luong et al., 2015a; Nallapati et al.,
2016b,a) has gained more popular and they are ap-
plied for the open-domain dialogs (Vinyals and Le,

Model Cons.
Human Evaluation
Cor. Flu. Hum.

Copy Net 21.2 4.14 4.40 4.36
Mem2Seq 38.1 4.29 4.29 4.27

DSR 70.3 4.59 4.71 4.65
w/ distant supervision 65.8 4.53 4.71 4.64

w/ Gumble-Softmax 72.1 4.64 4.73 4.69

Table 2: The generation consistency and Human Eval-
uation on navigation domain. Cons. represents Con-
sistency. Cor. represents Correctness. Flu. represents
Fluency and Hum. represents Humanlikeness.

Address Distance POI type POI Traffic info
638 Amherst St 3 miles grocery store Sigona Farmers Market car collision nearby
269 Alger Dr 1 miles coffee or tea place Cafe Venetia car collision nearby
5672 barringer street 5 miles certain address 5672 barringer street no traffic
200 Alester Ave 2 miles gas station Valero road block nearby
899 Ames Ct 5 miles hospital Stanford Childrens Health moderate traffic
481 Amaranta Ave 1 miles parking garage Palo Alto Garage R moderate traffic
145 Amherst St 1 miles coffee or tea place Teavana road block nearby
409 Bollard St 5 miles grocery store Willows Market no traffic

200 Alester Ave 2 miles gas station Valero road block nearby
0.817 0.017 0.052 0.071 0.043

High(1.00) Low(0.00)

0.07

0.1

0.02

0.25

0.05

0.04

0.06

0.01

Figure 4: KB score distribution. The distribution is the
timestep when generate entity 200 Alester Ave for
response “ Valero is located at 200 Alester Ave”

2015; Serban et al., 2016) in the end-to-end train-
ing method. Recently, the Seq2Seq can be used for
learning task oriented dialogs and how to query the
structured KB is the remaining challenges.

Properly querying the KB has long been a chal-
lenge in the task-oriented dialogue system. In the
pipeline system, the KB query is strongly corre-
lated with the design of language understanding,
state tracking, and policy management. Typically,
after obtaining the dialogue state, the policy man-
agement module issues an API call accordingly
to query the KB. With the development of neu-
ral network in natural language processing, efforts
have been made to replacing the discrete and pre-
defined dialogue state with the distributed repre-
sentation (Bordes and Weston, 2017; Wen et al.,
2017b,a; Liu and Lane, 2017). In our framework,
our retrieval result can be treated as a numeric rep-
resentation of the API call return.

Instead of interacting with the KB via API calls,
more and more recent works tried to incorporate
KB query as a part of the model. The most popu-
lar way of modeling KB query is treating it as an
attention network over the entire KB entities (Eric
et al., 2017; Dhingra et al., 2017; Reddy et al.,
2018; Raghu et al., 2019; Wu et al., 2019) and the
return can be a fuzzy summation of the entity rep-
resentations. Madotto et al. (2018)’s practice of
modeling the KB query with memory network can
also be considered as learning an attentive prefer-



141

ence over these entities. Wen et al. (2018) pro-
pose the implicit dialogue state representation to
query the KB and achieve the promising perfor-
mance. Different from their modes, we propose
the KB-retriever to explicitly query the KB, and
the query result is used to filter the irrelevant enti-
ties in the dialogue generation to improve the con-
sistency among the output entities.

7 Conclusion

In this paper, we propose a novel framework to im-
prove entities consistency by querying KB in two
steps. In the first step, inspired by the observa-
tion that a response can usually be supported by a
single KB row, we introduce the KB retriever to
return the most relevant KB row, which is used to
filter the irrelevant KB entities and encourage con-
sistent generation. In the second step, we further
perform attention mechanism to select the most
relevant KB column. Experimental results show
the effectiveness of our method. Extensive analy-
sis further confirms the observation and reveal the
correlation between the success of KB query and
the success of task-oriented dialogue generation.

Acknowledgments

We thank the anonymous reviewers for their help-
ful comments and suggestions. This work was
supported by the National Natural Science Foun-
dation of China (NSFC) via grant 61976072,
61632011 and 61772153.

References
Dzmitry Bahdanau, Kyunghyun Cho, and Yoshua Ben-

gio. 2014. Neural machine translation by jointly
learning to align and translate. arXiv preprint
arXiv:1409.0473.

Antoine Bordes and Jason Weston. 2017. Learning
end-to-end goal-oriented dialog. In Proc. of ICLR.

Bhuwan Dhingra, Lihong Li, Xiujun Li, Jianfeng Gao,
Yun-Nung Chen, Faisal Ahmed, and Li Deng. 2017.
Towards end-to-end reinforcement learning of dia-
logue agents for information access. In Proc. of
ACL.

Mihail Eric, Lakshmi Krishnan, Francois Charette, and
Christopher D Manning. 2017. Key-value retrieval
networks for task-oriented dialogue. In Proc. of
SIGDial.

Mihail Eric and Christopher Manning. 2017. A copy-
augmented sequence-to-sequence architecture gives

good performance on task-oriented dialogue. In
Proc. of EACL.

Caglar Gulcehre, Sungjin Ahn, Ramesh Nallapati,
Bowen Zhou, and Yoshua Bengio. 2016. Pointing
the unknown words. In Proc. of ACL.

Sepp Hochreiter and Jürgen Schmidhuber. 1997. Long
short-term memory. Neural computation.

Eric Jang, Shixiang Gu, and Ben Poole. 2017. Cate-
gorical reparameterization with gumbel-softmax. In
ICLR.

Diederik P Kingma and Jimmy Ba. 2014. Adam: A
method for stochastic optimization. arXiv preprint
arXiv:1412.6980.

Bing Liu and Ian Lane. 2017. An end-to-end trainable
neural network model with belief tracking for task-
oriented dialog. In Interspeech 2017.

Fei Liu and Julien Perez. 2017. Gated end-to-end
memory networks. In Proc. of ACL.

Thang Luong, Hieu Pham, and Christopher D. Man-
ning. 2015a. Effective approaches to attention-
based neural machine translation. In Proc. of
EMNLP.

Thang Luong, Hieu Pham, and Christopher D. Man-
ning. 2015b. Effective approaches to attention-
based neural machine translation. In Proc. of
EMNLP.

Andrea Madotto, Chien-Sheng Wu, and Pascale Fung.
2018. Mem2seq: Effectively incorporating knowl-
edge bases into end-to-end task-oriented dialog sys-
tems. In Proc. of ACL.

Bonan Min, Ralph Grishman, Li Wan, Chang Wang,
and David Gondek. 2013. Distant supervision for
relation extraction with an incomplete knowledge
base. In Proc. of ACL.

Mike Mintz, Steven Bills, Rion Snow, and Dan Juraf-
sky. 2009. Distant supervision for relation extrac-
tion without labeled data. In Proc. of ACL.

Ramesh Nallapati, Bing Xiang, and Bowen Zhou.
2016a. Sequence-to-sequence rnns for text summa-
rization.

Ramesh Nallapati, Bowen Zhou, Cicero dos Santos,
Caglar Gulcehre, and Bing Xiang. 2016b. Abstrac-
tive text summarization using sequence-to-sequence
rnns and beyond. In Proc. of SIGNLL.

Dinesh Raghu, Nikhil Gupta, and Mausam. 2019.
Disentangling Language and Knowledge in Task-
Oriented Dialogs. In Proc. of NAACL.

Revanth Reddy, Danish Contractor, Dinesh Raghu, and
Sachindra Joshi. 2018. Multi-level memory for task
oriented dialogs. arXiv preprint arXiv:1810.10647.



142

Iulian V Serban, Alessandro Sordoni, Yoshua Bengio,
Aaron Courville, and Joelle Pineau. 2016. Building
end-to-end dialogue systems using generative hier-
archical neural network models. In Proc. of AAAI.

Sainbayar Sukhbaatar, Jason Weston, Rob Fergus, et al.
2015. End-to-end memory networks. In NIPS.

Ilya Sutskever, Oriol Vinyals, and Quoc V Le. 2014.
Sequence to sequence learning with neural net-
works. In NIPS.

Oriol Vinyals and Quoc Le. 2015. A neural conversa-
tional model. arXiv preprint arXiv:1506.05869.

Haoyang Wen, Yijia Liu, Wanxiang Che, Libo Qin, and
Ting Liu. 2018. Sequence-to-sequence learning for
task-oriented dialogue with dialogue state represen-
tation. In Proc. of COLING.

Tsung-Hsien Wen, Yishu Miao, Phil Blunsom, and
Steve Young. 2017a. Latent intention dialogue mod-
els. In ICML.

Tsung-Hsien Wen, David Vandyke, Nikola Mrkšić,
Milica Gasic, Lina M. Rojas Barahona, Pei-Hao Su,
Stefan Ultes, and Steve Young. 2017b. A network-
based end-to-end trainable task-oriented dialogue
system. In Proc. of EACL.

Chien-Sheng Wu, Richard Socher, and Caiming
Xiong. 2019. Global-to-local memory pointer net-
works for task-oriented dialogue. arXiv preprint
arXiv:1901.04713.

Wei Xu, Raphael Hoffmann, Le Zhao, and Ralph Gr-
ishman. 2013. Filling knowledge base gaps for dis-
tant supervision of relation extraction. In Proc. of
ACL.

Daojian Zeng, Kang Liu, Yubo Chen, and Jun Zhao.
2015. Distant supervision for relation extraction via
piecewise convolutional neural networks. In Proc.
of EMNLP.


