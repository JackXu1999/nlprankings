



















































Unsupervised Adversarial Domain Adaptation for Implicit Discourse Relation Classification


Proceedings of the 23rd Conference on Computational Natural Language Learning, pages 686–695
Hong Kong, China, November 3-4, 2019. c©2019 Association for Computational Linguistics

686

Unsupervised Adversarial Domain Adaptation for Implicit Discourse
Relation Classification

Hsin-Ping Huang
Department of Computer Science
The University of Texas at Austin
hsinping@cs.utexas.edu

Junyi Jessy Li
Department of Linguistics

The University of Texas at Austin
jessy@austin.utexas.edu

Abstract

Implicit discourse relations are not only more
challenging to classify, but also to annotate,
than their explicit counterparts. We tackle sit-
uations where training data for implicit rela-
tions are lacking, and exploit domain adapta-
tion from explicit relations (Ji et al., 2015).
We present an unsupervised adversarial do-
main adaptive network equipped with a recon-
struction component. Our system outperforms
prior works and other adversarial benchmarks
for unsupervised domain adaptation. Addi-
tionally, we extend our system to take advan-
tage of labeled data if some are available.

1 Introduction

Discourse relations capture the relationship be-
tween units of text—e.g., sentences and clauses—
and are an important aspect of text coherence.
While some relations are expressed explicitly with
a discourse connective (e.g., “for example”, “how-
ever”), relations are equally often expressed im-
plicitly without an explicit connective (Prasad
et al., 2008); in these cases, the relation needs to
be inferred.

Resources for implicit discourse relations are
scarce compared to the explicit ones, since they
are harder to annotate (Miltsakaki et al., 2004).
For example, among corpora annotated with dis-
course relations such as Arabic (Al-Saif and Mark-
ert, 2010), Czech (Poláková et al., 2013), Chi-
nese (Zhou and Xue, 2015), English (Prasad
et al., 2008), Hindi (Oza et al., 2009), and Turk-
ish (Zeyrek et al., 2013), only the Chinese, English
and Hindi corpora include implicit discourse rela-
tions (Prasad et al., 2014). In this low-resource
scenario, Ji et al. (2015) proposed training with
explicit relations via unsupervised domain adapta-
tion, viewing explicit relations as a source domain
with labeled training data, and implicit relations

as a target domain with no labeled data. The do-
main gap between explicit and implicit relations is
acknowledged by prior observations that the two
types of discourse relations are linguistically dis-
similar (Sporleder and Lascarides, 2008; Ruther-
ford and Xue, 2015).

We present a new system for the unsuper-
vised domain adaptation setup on the Penn Dis-
course Treebank (Prasad et al., 2008). Our sys-
tem is based on Adversarial Discriminative Do-
main Adaptation (Tzeng et al., 2017), which de-
couples source domain training and representa-
tion mapping between source and target. We im-
prove this framework by proposing a reconstruc-
tion component to preserve the discriminability of
target features, and incorporating techniques for
stabler training on textual data.

Experimental results show that even with
a simple architecture for representation learn-
ing, our unsupervised domain adaptation sys-
tem outperforms prior work by 1.4-2.3 macro
F1, with substantial improvements on Temporal
and Contingency relations. It is also superior to
DANN (Ganin et al., 2016), an adversarial frame-
work widely used in NLP (Chen et al., 2018; Gui
et al., 2017; Zhang et al., 2017; Fu et al., 2017;
Joty et al., 2017; Xu and Yang, 2017), by 5.7
macro F1.

Finally, we extend the system to incorporate
in-domain supervision as it is sometimes feasible
resource-wise to build a seed corpus that may not
be large enough to train a fully supervised system.
We simulate this scenario by enabling the system
to jointly optimize over a varying number of la-
beled examples of implicit relations. Our system
consistently outperforms two strong baselines.

2 Related Work

Sporleder and Lascarides (2008) and Rutherford



687

and Xue (2015) observed that explicit and implicit
relations are linguistically dissimilar, warranting
an unsupervised domain adaptation approach in Ji
et al. (2015). They used a marginalized denois-
ing autoencoder to obtain generalized feature rep-
resentations across the source and target domains
with a linear SVM as the classification model. Our
system improves upon this work using an adver-
sarial network; we further generalize our network
to semi-supervised settings.

To supplement the training data of implicit dis-
course relations, prior works have used weak su-
pervision from sentences with discourse connec-
tives (Marcu and Echihabi, 2002; Sporleder and
Lascarides, 2008; Braud and Denis, 2014; Ji et al.,
2015), by analyzing connectives (Zhou et al.,
2010a,b; Biran and McKeown, 2013; Rutherford
and Xue, 2015; Braud and Denis, 2016; Wu et al.,
2017), using a multi-task framework with other
corpora (Lan et al., 2013; Liu et al., 2016; Lan
et al., 2017), or utilizing cross-lingual data (Wu
et al., 2016; Shi et al., 2017). The important dis-
tinction between this work and the research above
is that these are supervised systems that used all of
the annotated implicit annotation from PDTB dur-
ing training, while exploring non-PDTB corpora
for additional, noisy discourse cues; on the con-
trary, our main goal is to assume no labeled train-
ing data for implicit discourse relations.

Unsupervised domain adaptation with adver-
sarial networks has become popular in recent
years; this type of approach generates a repre-
sentation for the target domain with the goal that
the discriminator unable to distinguish between
the source and target domains. Prior works pro-
posed both generative approaches (Liu and Tuzel,
2016; Bousmalis et al., 2017; Sankaranarayanan
et al., 2018; Russo et al., 2018) and discrimina-
tive approaches (Ganin et al., 2016; Tzeng et al.,
2015, 2017). The discriminative DANN algorithm
from Ganin et al. (2016) is frequently used in NLP
tasks (Chen et al., 2018; Gui et al., 2017; Zhang
et al., 2017; Fu et al., 2017; Joty et al., 2017; Xu
and Yang, 2017). Our method builds upon Adver-
sarial Discriminative Domain Adaptation (Tzeng
et al., 2017), shown to outperform DANN in vi-
sual domain adaptation but has not been used in
NLP tasks. The key differences between the two
are discussed in Section 3.

Qin et al. (2017) adopted adversarial strate-
gies to supervised implicit discourse classification.

They train an adversarial model using implicit dis-
course relations with and without expert-inserted
connectives. Note again that theirs is a fully su-
pervised system using signals in addition to the
implicit relation annotations themselves, while our
main focus is unsupervised domain adaptation that
does not train on implicit relations.

3 Model Architecture

To classify discourse relations, our system takes a
pair of sentence arguments x as input, and outputs
the discourse relation y between these two argu-
ments. With unsupervised domain adaptation, we
have examples (Xs, Ys) from the source domain,
i.e., explicit discourse relations, and unlabeled ex-
amples (Xt) from a target domain, i.e., implicit
discourse relations.

We use ADDA (Tzeng et al., 2017) as our
underlying framework for domain adaptation.
ADDA first learns a discriminative representa-
tion for the classification task in the source do-
main, then learns a representation for the target
domain that mimics the distribution of the source
domain. The key insight here is asymmetric map-
ping, where the target representation is “updated”
until it matches with the source, a process more
similar to the original Generative Adversaial Net-
works (Goodfellow et al., 2014) than joint train-
ing as in DANN (Ganin et al., 2016). Intuitively,
since ADDA learns distinct feature encoders for
the source and target domains instead of using a
shared encoder, the same network doesn’t have to
handle instances from different domains.

Summarized in Figure 1, we first pre-train a
source encoder Ms and source classifier C (Sec-
tion 3.1), then train the target encoder Mt (initial-
ized with Ms) and discriminator D in an adversar-
ial way, to minimize the domain discrepancy dis-
tance between the target representation distribu-
tion Mt(Xt) and that of the source Ms(Xs) (Sec-
tion 3.2). Eventually, the target feature space is
trained to match the source, and the source classi-
fier C can be directly used on the target domain.

3.1 Base encoder and classifier

The source and target encoders Ms and Mt fol-
low the same architecture; Mt is initialized to be
Ms during adaptation. The encoders encode re-
lation arguments into latent representations, and
then feeds the representations into a classifier C
to predict the discourse relation.



688

Figure 1: The framework of our proposed adversarial domain adaptation model, containing the pre-training stage,
the adversarial adaptation stage, and the testing stage. The dashed box shows the supervised component.

Encoder The encoder generates a representation
for each argument with an inner-attention Bidirec-
tional LSTM (Yang et al., 2016) shared between
the two arguments. Then, the representations of
the two arguments are concatenated to form the fi-
nal representation, shown in Figure 2.

Specifically, we encode each word in an argu-
ment into its word embeddings, which are fed into
a BiLSTM, to get the hidden representations zi us-
ing a fully-connected layer Wc on top of the con-
catenated hidden states hi = [~hi, ~hi]. We then ap-
ply an attention mechanism to induce a distribu-
tion of weights over all tokens in the argument; the
final argument representation Arg is a weighted
sum of zi based on the attention weights αi:

zi =Wchi + bc

ui = tanh(Wwhi + bw)

αi =
exp(uTi uw)∑
i exp(u

T
i uw)

Arg =
∑
i

αizi (1)

Where Wc, bc,Ww, bw, uw are model parameters.

Classifier The classifier consists of a single
fully-connected layer on top of the encoder, fin-
ished with a softmax classification layer.

The source encoder Ms and the classifier C are
trained using a supervised loss:

min
Ms,C

Lcls(Xs, Ys) =

E(xs,ys) −
∑
k

1[k = ys] logC(Ms(xs)) (2)

Figure 2: Neural structure of inner-attention BiLSTM
to encode relation argument pairs.

3.2 Unsupervised adversarial domain
adaptation

We then learn a target encoder Mt to generate fea-
tures for the target data which can be classified
with classifier C, without assuming labels Yt in
the target domain. This is achieved by training a
domain discriminator D, which classifies whether
a feature is from the source or the target domain,
and the target encoder Mt, that produces features
similar to the source domain features and tries to
fool the discriminator to predict the incorrect do-
main label.

The discriminator D is optimized according to
a standard supervised loss:

min
D
LadvD(Xs, Xt,Ms,Mt) =

− Exs [logD(Ms(xs))]
− Ext [log (1−D(Mt(xt)))] (3)

D consists of two fully-connected layers on top of
the encoder, finished with a softmax classification
layer.



689

The target encoder Mt is optimized according
to a standard GAN loss with inverted labels:

min
Mt
LadvM (Xs, Xt, D) =

−Ext [logD(Mt(xt))] (4)

Spectral normalization To stabilize the train-
ing of the discriminator, we employ spectral
normalization, a weight normalization technique
(Miyato et al., 2018), which controls the Lips-
chitz constant of the discriminator function by
constraining the spectral norm of each layer. Spec-
tral normalization is easy to implement without
tuning any hyper-parameters and has a small ad-
ditional computational cost.

Label smoothing We utilize label smooth-
ing (Szegedy et al., 2016) to regularize the classi-
fier during pre-training, which prevents the largest
logit from becoming much larger than all oth-
ers, and therefore prevents overfitting and makes
the classifier, trained in the source domain, more
adaptable.

For a source domain training example xs with
ground-truth label ys and ground-truth distribu-
tion q(k|xs), the classifier computes the classifi-
cation probability over relation classes as p(k|xs)
for k ∈ {1...K}. With label smoothing, we re-
place the ground-truth label distribution q(k|xs) in
the standard cross-entropy loss as a linear combi-
nation of q(k|xs) and a uniform distribution over
classes u(k) = 1/K.

min
Ms,C

Lcls(Xs, Ys) = −
∑
k

q′(k) log (p(k))

q′(k|xs) = (1− �)1[k = ys] + �/K (5)

Reconstruction loss In order to classify the tar-
get representations using the source classifier, the
target encoder is trained to produce representa-
tions that mimic the source domain representa-
tions in the adversarial training stage. Since there
is no supervised loss applied in this stage, the tar-
get encoder may lose its ability to produce dis-
criminative features that are helpful during clas-
sification. We propose a reconstruction loss to
preserve the discriminability of the target encoder
when adversarially adapting its features.

Since we initialize the target encoder with the
source encoder, the initial representation (before
domain adaptation) of a target instance xt is the

Figure 3: The reconstruction loss component augment-
ing our unsupervised adversarial domain adaptor.

representation of target instances produced by the
source encoder Ms(xt) (which is then fixed). Af-
ter training, Mt(xt) adapts to the source domain
and becomes dissimilar to Ms(xt). The recon-
struction loss encourages the target encoder to pro-
duce features that can be reconstructed back to
Ms(xt) (Figure 3).

For a target example xt, we learn a reconstruc-
tion mapping Mr that maps the target representa-
tion Mt(xt) to Ms(xt):

xt →Mt(xt)→Mr(Mt(xt)) ≈Ms(xt) (6)

The target encoder Mt and the reconstruction
mapping Mr are optimized jointly with a recon-
struction loss:

min
Mt,Mr

Lrecon(Xt,Ms) =

Ext [||Mr(Mt(xt))−Ms(xt)||22] (7)

Mr consists of three fully-connected layers on top
of the encoder.

Unsupervised objective For unsupervised do-
main adaptation, our full objective is:

Lunsup(Xs, Ys,Xt,Ms,Mt, D) =
min
Ms,C

Lcls(Xs, Ys)+

min
D
LadvD(Xs, Xt,Ms,Mt)+

min
Mt
LadvM (Xs, Xt, D)+

min
Mt,Mr

Lrecon(Xt,Ms) (8)

3.3 Training
Summarized in Algorithm 1, the training proce-
dure consists of three stages: pre-training, adver-
sarial adaptation, and testing. During pre-training,
we train the source encoder Ms and the classifier
C according to Eq.(2). In the adversarial adap-
tation stage, we alternately train the discriminator
D, target encoderMt, and reconstruction mapping



690

Algorithm 1: Adversarial Adaptation
Input: explicit sentences with labels {xs, ys}

implicit sentences without labels {xt}
Notations: source encoder Ms, classifier C,

target encoder Mt,
reconstruction mapping Mr ,
domain discriminator D

1 Train Ms, C through Eq.(2) with {xs, ys};
2 Initialize Mt as Ms;
3 Repeat
4 Train D through Eq.(3) with {xs, xt} and train Mt

through Eq.(4) with {xt};
5 Train Mt,Mr through Eq.(7) with {xt};

Output: Mt and C for relation prediction

Mr according to Eq.(3), Eq.(4), Eq.(7). Finally,
we test the model using the target encoder Mt and
classifier C. The steps (lines 4 and 5) in the Re-
peat loop execute once in one iteration, and we
optimized the model in two-step units.

4 Unsupervised Domain Adaptation
Experiments

We first evaluate our model for the default task:
unsupervised domain adaptation from explicit dis-
course relations to implicit discourse relations.

4.1 Settings

Data We train and test our model on the PDTB,
following the experimental setup of Ji et al.
(2015). The test examples are implicit relation in-
stances from PDTB sections 21-22. The explicit
training set consists of explicit examples from sec-
tions 02-20 and 23-24, and the explicit develop-
ment set consists of the explicit examples from
sections 00-01. The implicit training set and the
implicit development set consist of examples from
the same sections as the explicit sets. Evaluation is
done for the first-level relations—Temporal, Com-
parison, Contingency, and Expansion. Table 1
summarizes the statistics of the four top-level im-
plicit and explicit discourse relations in the PDTB.

Training Details We early-stopped training for
both stages before total convergence if the macro
F1 on the development set does not improve. Dur-
ing pre-training (Line 1 in Algorithm 1), we train
and validate the model on the explicit training and
development set. Early stopping happened after
around 20 epochs. During adversarial adaptation
(lines 4 and 5 in Algorithm 1), we train the model
on the explicit and implicit training sets without
relation labels Yt, and validate on the implicit de-

Explicit Implicit

Relation Train Dev Train Dev Test

Temporal 2904 288 704 68 54
Contingency 2792 181 3622 276 287
Comparison 4674 366 2104 146 191
Expansion 5342 450 7394 556 651

Table 1: The number of examples of the four top level
discourse relations in PDTB 2.0.

velopment set1. Early stopping happened after
around 5 epochs (with lines 4 and 5 executed once
in each epoch).

Model configuration The hyperparameters, as
well as the number of fully connected layers for
the classifier C, discriminator D and the recon-
struction mapping Mr, are all set according to the
performance on the development sets. We first set
the hyper-parameters of the encoders Ms,Mt and
classifier C based on development performance
during the pre-training stage. Then, we set the
hyper-parameters of D and Mr based on develop-
ment performance of the adaptation stage.

We use GloVe (Pennington et al., 2014) for
word embeddings with dimension 300. The max-
imum argument length is set to 80. The encoder
contains an inner-attention BiLSTM with dimen-
sion 50, producing a representation with dimen-
sion 200 for each example. The discriminator D
consists of 2 hidden layers with 200 and 200 neu-
rons on each layer. The reconstruction mapping
Mr contains 3 hidden layers with 120, 15 and
120 neurons on each layer. The label smooth-
ing parameter � is 0.1. We use Adam (Kingma
and Ba, 2015) with learning rate 1e-4 for the base
encoder and classifier, and 1e-6 for the adversar-
ial domain adapter. We use SGD optimizer with
learning rate 1e-2 for the reconstruction compo-
nent. All the models were implemented using Py-
Torch (Paszke et al., 2017) and adapted from Con-
neau et al. (2017).

4.2 Systems
We experiment with three settings:

Implicit → Implicit A supervised implicit dis-
course relation classifier using the base encoder
and classifier, optimizing the standard cross-
entropy loss, using the full implicit training and

1Using a development set in the target domain is common
in unsupervised domain adaptation (Ganin et al., 2016; Liu
and Tuzel, 2016; Tzeng et al., 2017; Bousmalis et al., 2017;
Russo et al., 2018)



691

Temporal Contingency Comparison Expansion Macro F1
Implicit→ Implicit 25.53 41.02 30.35 65.38 40.57

Explicit→ Implicit 22.22 22.35 23.06 57.86 31.37
+Domain Adaptation 30.62 42.71 25.00 52.23 37.64

+Spectral Normalization 30.20 45.42 21.90 58.72 39.06
+Label Smoothing 31.58 46.40 24.64 58.03 40.16

+Reconstruction 31.25 48.04 25.15 59.15 40.90

(Ji et al., 2015) 19.26 41.39 25.74 68.08 38.62
+weak supervision 20.35 42.25 26.32 68.92 39.46

DANN 26.19 34.20 25.74 54.70 35.21

Table 2: Per-class and macro average F1 (%) of unsupervised domain adaptation from explicit to implicit relations.

development sets. This model does not use the ex-
plicit relations.

Explicit → Implicit A discourse relation clas-
sifier using the explicit training set and implicit
development set, optimizing the standard cross-
entropy loss. This serves as a baseline without any
domain adaptation.

Domain adaptation Our full adaptation model
trained on the explicit training set, and adapted to
the implicit training set without relation labels. We
perform ablation study with different extensions
describe in Section 3: spectral normalization, label
smoothing, and reconstruction loss.

For benchmarking, we train an unsupervised
domain adaptation system using DANN (Ganin
et al., 2016), which jointly learns domain-invariant
representations and the classifier and is often used
in NLP (c.f. Section 2). We use the same encoder,
classifier and discriminator structures, with pa-
rameters tuned on the implicit development data.
The system is optimized using Adam with learn-
ing rate 2e-4 and the adaptation parameter 0.25,
chosen between 0.01 and 1 on a logarithmic scale.

4.3 Results

To evaluate our model, we train four-way classi-
fiers and report per-class and macro F1 scores.
Table 2 tabulates the experimental results for un-
supervised domain adaptation.

We also show reported results from Ji et al.
(2015). Even though they trained four binary clas-
sifiers (instead of doing multi-class classification),
it is the only prior work exploring unsupervised
domain adaptation for implicit discourse relation
classification. We include two settings: their best
system with labeled data from PDTB explicit re-
lations only (and an implicit development set),
and their system with additional weak supervision

from non-PDTB sources.2

Our full system achieves the best average
F1 measure, a 9.53% absolute increase from
Explicit→ Implicit. It also performs 2.28% better
than Ji et al. (2015)’s model trained without weak
supervision, and 1.44% better than their model
trained with weak supervision. The full system
achieved an average F1 comparable to the super-
vised Implicit→ Implicit, while Ji et al. (2015)’s
models did not. Comparing with DANN, our sys-
tem achieved superior performance for 3 of the 4
relations, showing that training target representa-
tions and the classifier in two stages outperforms
doing both jointly.

The largest improvements from the Explicit→
Implicit baseline are from Temporal (from 22.22
to 31.25) and Contingency (from 22.35 to 48.04)
relations. Our system performs ∼11% better for
Temporal, and ∼6% better for Contingency, than
Ji et al. (2015)’s binary classifiers. The Compar-
ison and Expansion relations improved by about
2% from the baseline, a smaller improvement
compared to the other two relations. Our Com-
parison performance is comparable with Ji et al.
(2015)’s model without weak supervision.

Notably, the performance for Expansion
dropped after domain adaptation (without ex-
tensions) by about 5%. We suspect that this is
because the distributions of Expansion among
other relations are very different (33% for ex-
plicit and 53% for implicit, c.f. Table 1). By
applying Spectral Normalization, the performance
improved and surpassed Explicit→ Implicit.

Component-wise, Spectral Normalization helps
two of the four relations (Contingency and Expan-
sion), but hurts the performance of Comparison.

2The weakly labeled data includes sentences extracted
from 1000 CNN articles, with explicit discourse connectives
but without annotated discourse relations.



692

Figure 4: Normalized confusion matrices before and
after unsupervised domain adaptation.

Label smoothing improves performance for all re-
lations except Expansion; applying the reconstruc-
tion loss improves performance for all relations
except Temporal. Overall, the best result on this
task is to incorporate all components.

Error analysis Figure 4 shows the normalized
confusion matrices before and after unsupervised
domain adaptation. Before adaptation, Temporal
and Contingency relations are often misclassified
as Expansion, which is substantially improved af-
ter adaptation. The improvement in F score for
Comparison is milder due to lower precision and
higher recall, which is also reflected in the matri-
ces. Finally, the drop of performance in Expansion
adaptation can be traced through increased confu-
sion between Expansion and Contingency.

5 How about a little supervision?

We have so far presented an unsupervised domain
adaptation system that is not trained on any la-
bels Yt in the target domain. However, it is some-
times feasible to have some seed annotation that
can be used to improve prediction. Hence we ex-
tend the model with an optional supervised com-
ponent. We evaluate this extension by gradually

Figure 5: An extension component to incorporate su-
pervision with our unsupervised adversarial domain
adaptor.

adding labeled examples of implicit discourse re-
lations, simulating situations when different num-
bers of labeled examples are available.

5.1 Incorporating supervision

We extend the model with a supervised compo-
nent, where a subset XLt ⊆ Xt has labels Y Lt .
Illustrated in Figure 5, we jointly optimize the tar-
get encoder Mt and the classifier C according to
an additional supervised loss:

min
Mt,C

Lsup(XLt , Y Lt ) =

E(xLt ,yLt ) −
∑
k

1[k = yLt ] logC(Mt(x
L
t )) (9)

Effectively, we encourage the target encoder to
jointly extract more discriminative features for all
target examples (Xt), and learning target domain
representations close to the source.

The full objective incorporates supervision of
the in-domain labels by adding Lsup(XLt , Y Lt ) to
the unsupervised objective:

Lsup(Xs, Ys, Xt,Ms,Mt, D) =
Lunsup(Xs, Ys, Xt,Ms,Mt, D)+
min
Mt,C

Lsup(XLt , Y Lt ) (10)

5.2 Data and settings

We synthesize the labeled target subset (XLt , Y
L
t )

(XLt ⊆ Xt) by randomly extracting subsets from
the implicit training set and get their labels. The
sizes of this subset range from 1382 to 13824 with
a stepsize of 1382. Note that we use the entire im-
plicit training set (Xt without relation labels Yt)
in the adversarial adaptation process as unlabeled
data in the target domain, and the sampled labeled
data is used in the supervised component only.



693

Figure 6: The average F1 (%) with varying numbers of
labeled implicit relation training data.

We use the same hyper-parameters as the unsuper-
vised experiment, except that we tune the learning
rate on the implicit development set.

5.3 Systems
We compare three settings:

Supervised baseline The encoder and classi-
fier trained on the sampled implicit instances
(XLt , Y

L
t ), optimizing Eq.(9).

Pre-training baseline Our model with the su-
pervised component, but without the domain adap-
tation component. This setting is equivalent to
pre-training on the explicit instances then fine-
tuning on the sampled implicit instances. This is
trained on the explicit training set (Xs, Ys), plus
the sampled implicit instances (XLt , Y

L
t ), opti-

mizing Eq.(5) and Eq.(9).

Semi-supervised domain adaptation Our full
model with both the supervised and adaptation
components, optimizing Eq.(10). The supervised
component uses the sampled implicit instances
(XLt , Y

L
t ) for training.

5.4 Results
Since the added training data is randomly sam-
pled, we average the performance across 3 differ-
ent runs. Figure 6 shows the average F1 mea-
sure (y-axis) of the above three supervised sys-
tems, with varying numbers of labeled implicit re-
lation training data (x-axis). Standard errors are
also shown in the graph.

Our full system outperforms both the super-
vised baseline and the pre-training baseline, re-

gardless of the amount of labeled target data. This
evaluation also reveals that the pre-training base-
line also improves upon the supervised baseline
across the board, which means that the perfor-
mance of implicit relation classification can be im-
proved with pre-training on explicit relations.

Finally, the macro F1 of our system using full
supervision is 47.50. Since we focus on domain
adaptation and used very simple encoders, we do
not attempt to achieve state-of-the-art (e.g., Dai
and Huang (2018), Bai and Zhao (2018)). How-
ever this performance is on-par with many recent
work using multi-task or GANs, including Lan
et al. (2017) (47.80), Qin et al. (2017) (44.38, Re-
produced results on four-way classification), and
Liu et al. (2016) (44.98). These results confirm
that our framework generalizes well with respect
to the amount of supervision in the target domain.

6 Conclusion

Our work tackles implicit discourse relation clas-
sification in a low resource setting that is flexible
to the amount of supervision. We present a new
system based on the adversarial discriminative do-
main adaptation framework (Tzeng et al., 2017)
for unsupervised domain adaptation from explicit
discourse relation to implicit discourse relation.
We propose a reconstruction loss to preserve the
discriminability of features during adaptation, and
we generalize the framework to make use of pos-
sibly available seed data by jointly optimizing it
with a supervised loss. Our system outperforms
prior work and strong adversarial baselines on un-
supervised domain adaptation, and works effec-
tively with varying amount of supervision.

Acknowledgments

We thank Ray Mooney, Eric Holgate, and the
anonymous reviewers for their helpful feedback.
This work was partially supported by the NSF
Grant IIS-1850153.

References

Amal Al-Saif and Katja Markert. 2010. The leeds ara-
bic discourse treebank: Annotating discourse con-
nectives for arabic. In LREC.

Hongxiao Bai and Hai Zhao. 2018. Deep enhanced
representation for implicit discourse relation recog-
nition. In COLING.



694

Or Biran and Kathleen McKeown. 2013. Aggregated
word pair features for implicit discourse relation dis-
ambiguation. In ACL.

Konstantinos Bousmalis, Nathan Silberman, David
Dohan, Dumitru Erhan, and Dilip Krishnan. 2017.
Unsupervised pixel-level domain adaptation with
generative adversarial networks. In CVPR.

Chloé Braud and Pascal Denis. 2014. Combining nat-
ural and artificial examples to improve implicit dis-
course relation identification. In COLING.

Chloé Braud and Pascal Denis. 2016. Learning
connective-based word representations for implicit
discourse relation identification. In EMNLP.

Xilun Chen, Yu Sun, Ben Athiwaratkun, Claire Cardie,
and Kilian Weinberger. 2018. Adversarial deep av-
eraging networks for cross-lingual sentiment classi-
fication. Transactions of the Association for Com-
putational Linguistics, 6:557–570.

Alexis Conneau, Douwe Kiela, Holger Schwenk, Loı̈c
Barrault, and Antoine Bordes. 2017. Supervised
learning of universal sentence representations from
natural language inference data. In EMNLP.

Zeyu Dai and Ruihong Huang. 2018. Improving im-
plicit discourse relation classification by modeling
inter-dependencies of discourse units in a paragraph.
In NAACL.

Lisheng Fu, Thien Huu Nguyen, Bonan Min, and
Ralph Grishman. 2017. Domain adaptation for re-
lation extraction with domain adversarial neural net-
work. In IJCNLP.

Yaroslav Ganin, Evgeniya Ustinova, Hana Ajakan,
Pascal Germain, Hugo Larochelle, François Lavi-
olette, Mario Marchand, and Victor Lempitsky.
2016. Domain-adversarial training of neural net-
works. Journal of Machine Learning Research,
17(1):2096–2030.

Ian Goodfellow, Jean Pouget-Abadie, Mehdi Mirza,
Bing Xu, David Warde-Farley, Sherjil Ozair, Aaron
Courville, and Yoshua Bengio. 2014. Generative ad-
versarial nets. In NIPS.

Tao Gui, Qi Zhang, Haoran Huang, Minlong Peng,
and Xuanjing Huang. 2017. Part-of-speech tag-
ging for twitter with adversarial neural networks. In
EMNLP.

Yangfeng Ji, Gongbo Zhang, and Jacob Eisenstein.
2015. Closing the gap: Domain adaptation from ex-
plicit to implicit discourse relations. In EMNLP.

Shafiq Joty, Preslav Nakov, Lluı́s Màrquez, and Israa
Jaradat. 2017. Cross-language learning with adver-
sarial neural networks. In CoNLL.

Diederik P. Kingma and Jimmy Ba. 2015. Adam: A
method for stochastic optimization. In ICLR.

Man Lan, Jianxiang Wang, Yuanbin Wu, Zheng-Yu
Niu, and Haifeng Wang. 2017. Multi-task attention-
based neural networks for implicit discourse re-
lationship representation and identification. In
EMNLP.

Man Lan, Yu Xu, and Zhengyu Niu. 2013. Leveraging
synthetic discourse data via multi-task learning for
implicit discourse relation recognition. In ACL.

Ming-Yu Liu and Oncel Tuzel. 2016. Coupled genera-
tive adversarial networks. In NIPS.

Yang Liu, Sujian Li, Xiaodong Zhang, and Zhifang Sui.
2016. Implicit discourse relation classification via
multi-task neural networks. In AAAI.

Daniel Marcu and Abdessamad Echihabi. 2002. An
unsupervised approach to recognizing discourse re-
lations. In ACL.

Eleni Miltsakaki, Rashmi Prasad, Aravind Joshi, and
Bonnie Webber. 2004. The Penn Discourse Tree-
bank. In LREC.

Takeru Miyato, Toshiki Kataoka, Masanori Koyama,
and Yuichi Yoshida. 2018. Spectral normalization
for generative adversarial networks. In ICLR.

Umangi Oza, Rashmi Prasad, Sudheer Kolachina,
Dipti Misra Sharma, and Aravind Joshi. 2009. The
Hindi Discourse Relation Bank. In The Third Lin-
guistic Annotation Workshop.

Adam Paszke, Sam Gross, Soumith Chintala, Gre-
gory Chanan, Edward Yang, Zachary DeVito, Zem-
ing Lin, Alban Desmaison, Luca Antiga, and Adam
Lerer. 2017. Automatic differentiation in pytorch.
In NIPS-W.

Jeffrey Pennington, Richard Socher, and Christo-
pher D. Manning. 2014. Glove: Global vectors for
word representation. In EMNLP.

Lucie Poláková, Jiřı́ Mı́rovskỳ, Anna Nedoluzhko,
Pavlı́na Jı́nová, Šárka Zikánová, and Eva Hajičová.
2013. Introducing the prague discourse treebank
1.0. In IJCNLP.

Rashmi Prasad, Nikhil Dinesh, Alan Lee, Eleni Milt-
sakaki, Livio Robaldo, Aravind Joshi, and Bonnie
Webber. 2008. The Penn Discourse TreeBank 2.0.
In LREC.

Rashmi Prasad, Bonnie Webber, and Aravind Joshi.
2014. Reflections on the Penn Discourse Treebank,
comparable corpora, and complementary annota-
tion. Computational Linguistics, 40(4):921–950.

Lianhui Qin, Zhisong Zhang, Hai Zhao, Zhiting Hu,
and Eric Xing. 2017. Adversarial connective-
exploiting networks for implicit discourse relation
classification. In ACL.

Paolo Russo, Fabio Maria Carlucci, Tatiana Tommasi,
and Barbara Caputo. 2018. From source to target
and back: symmetric bi-directional adaptive gan. In
CVPR.



695

Attapol Rutherford and Nianwen Xue. 2015. Im-
proving the inference of implicit discourse relations
via classifying explicit discourse connectives. In
NAACL.

Swami Sankaranarayanan, Yogesh Balaji, Carlos D.
Castillo, and Rama Chellappa. 2018. Generate to
adapt: Aligning domains using generative adversar-
ial networks. In CVPR.

Wei Shi, Frances Yung, Raphael Rubino, and Vera
Demberg. 2017. Using explicit discourse connec-
tives in translation for implicit discourse relation
classification. In IJCNLP.

Caroline Sporleder and Alex Lascarides. 2008. Using
automatically labelled examples to classify rhetori-
cal relations: An assessment. Natural Language En-
gineering, 14(3):369–416.

Christian Szegedy, Vincent Vanhoucke, Sergey Ioffe,
Jon Shlens, and Zbigniew Wojna. 2016. Rethinking
the inception architecture for computer vision. In
CVPR.

Eric Tzeng, Judy Hoffman, Trevor Darrell, and Kate
Saenko. 2015. Simultaneous deep transfer across
domains and tasks. In ICCV.

Eric Tzeng, Judy Hoffman, Kate Saenko, and Trevor
Darrell. 2017. Adversarial discriminative domain
adaptation. In CVPR.

Changxing Wu, Xiaodong Shi, Yidong Chen, Yanzhou
Huang, and Jinsong Su. 2016. Bilingually-
constrained synthetic data for implicit discourse re-
lation recognition. In EMNLP.

Changxing Wu, Xiaodong Shi, Yidong Chen, Jinsong
Su, and Boli Wang. 2017. Improving implicit dis-
course relation recognition with discourse-specific
word embeddings. In ACL.

Ruochen Xu and Yiming Yang. 2017. Cross-lingual
distillation for text classification. In ACL.

Zichao Yang, Diyi Yang, Chris Dyer, Xiaodong He,
Alexander J. Smola, and Eduard H. Hovy. 2016. Hi-
erarchical attention networks for document classifi-
cation. In NAACL.

Deniz Zeyrek, Işın Demirşahin, AB Sevdik-Çallı, and
Ruket Çakıcı. 2013. Turkish discourse bank: Port-
ing a discourse annotation style to a morphologically
rich language. Dialogue and Discourse, 4(2):174–
184.

Yuan Zhang, Regina Barzilay, and Tommi Jaakkola.
2017. Aspect-augmented adversarial networks for
domain adaptation. Transactions of the Association
for Computational Linguistics, 5:515–528.

Yuping Zhou and Nianwen Xue. 2015. The Chinese
Discourse TreeBank: a Chinese corpus annotated
with discourse relations. Language Resources and
Evaluation, 49(2):397–431.

Zhi Min Zhou, Man Lan, Zheng Yu Niu, Yu Xu, and
Jian Su. 2010a. The effects of discourse connectives
prediction on implicit discourse relation recognition.
In SIGDIAL.

Zhi-Min Zhou, Yu Xu, Zheng-Yu Niu, Man Lan, Jian
Su, and Chew Lim Tan. 2010b. Predicting discourse
connectives for implicit discourse relation recogni-
tion. In COLING.


