



















































Fine-grained Knowledge Fusion for Sequence Labeling Domain Adaptation


Proceedings of the 2019 Conference on Empirical Methods in Natural Language Processing
and the 9th International Joint Conference on Natural Language Processing, pages 4197–4206,
Hong Kong, China, November 3–7, 2019. c©2019 Association for Computational Linguistics

4197

Fine-grained Knowledge Fusion for Sequence Labeling Domain
Adaptation

Huiyun Yang1,2 Shujian Huang1,2 Xinyu Dai1,2 Jiajun Chen1,2
National Key Laboratory for Novel Software Technology, Nanjing, China1

Nanjing University, Nanjing, China2

yanghy@smail.nju.edu.cn
{huangsj, daixinyu, chenjj}@nju.edu.cn

Abstract
In sequence labeling, previous domain adap-
tation methods focus on the adaptation from
the source domain to the entire target domain
without considering the diversity of individ-
ual target domain samples, which may lead
to negative transfer results for certain sam-
ples. Besides, an important characteristic of
sequence labeling tasks is that different ele-
ments within a given sample may also have di-
verse domain relevance, which requires further
consideration. To take the multi-level domain
relevance discrepancy into account, in this pa-
per, we propose a fine-grained knowledge fu-
sion model with the domain relevance mod-
eling scheme to control the balance between
learning from the target domain data and learn-
ing from the source domain model. Experi-
ments on three sequence labeling tasks show
that our fine-grained knowledge fusion model
outperforms strong baselines and other state-
of-the-art sequence labeling domain adapta-
tion methods. 1

1 Introduction

Sequence labeling tasks, such as Chinese word
segmentation (CWS), POS tagging (POS) and
named entity recognition (NER), are fundamen-
tal tasks in natural language processing. Recently,
with the development of deep learning, neural se-
quence labeling approaches have achieved pretty
high accuracy (Chen et al., 2017; Zhang and Yang,
2018), relying on large-scale annotated corpora.
However, most of the standard annotated corpora
belong to the news domain, and models trained
on these corpora will get sharp declines in per-
formance when applied to other domains like so-
cial media, forum, literature or patents (Daume III,
2007; Blitzer et al., 2007), which limits their ap-
plication in the real world. Domain adaptation

1Our code is available at https://github.com/yhy1117/
FGKF-DA.

Types Cases

Strongly Ops Steve Jobs resigned as CEO of Apple.Share prices are rising soooo fast!

Weakly Alas as time goes by, hair’s gone.Rock to 204 Section next week!

Table 1: Tweets from the social media domain have
different degrees of relevance to the source domain
(news). Within each case, the bold part is strongly rel-
evant and the italic part is weakly relevant.

aims to exploit the abundant information of well-
studied source domains to improve the perfor-
mance in target domains (Pan and Yang, 2010),
which is suitable to handle this issue. Following
Daume III (2007), we focus on the supervised do-
main adaptation setting, which utilizes large-scale
annotated data from the source domain and small-
scale annotated data from the target domain.

For sequence labeling tasks, each sample is usu-
ally a sentence, which consists of a sequence of
words/Chinese characters, denoted as the element.
We notice an interesting phenomenon: different
target domain samples may have varying degrees
of domain relevance to the source domain. As de-
picted in Table 1, there are some tweets similar to
the news domain (i.e. strongly relevant). But there
are also some tweets of their own style, which only
appear in the social media domain (i.e. weakly rel-
evant). The phenomenon can be more complicated
for the cases where the whole sample is strongly
relevant while contains some target domain spe-
cific elements, or vice versa, showing the diversity
of relevance at the element-level. In the rest of
this paper, we use ‘domain relevance’ to refer to
the domain relevance to the source domain, unless
specified otherwise.

Conventional neural sequence labeling domain
adaptation methods (Liu and Zhang, 2012; Liu
et al., 2014; Zhang et al., 2014; Chen et al., 2017;
Peng and Dredze, 2017; Lin and Lu, 2018) mainly

https://github.com/yhy1117/FGKF-DA
https://github.com/yhy1117/FGKF-DA


4198

same

source target
source target

transfer
transfer
more

less transfer

high domain relevance
target sample

set-to-set knowledge transfer set-to-sample knowledge transfer

equally

source target target

transfer

a target sample

(a) set-to-set KT

(b) set-to-sample KT

low domain relevance

sample character/word

source

strongly relevant
weakly relevant

sample element

more transfer
less transfer

(a) Previous methods

same

source target
source target

transfer
transfer

more

less transfer

high domain relevance

target sample

set-to-set knowledge transfer set-to-sample knowledge transfer

equally

source target target

transfer

a target sample

set-to-set knowledge transfer set-to-sample knowledge transfer

low domain relevance

sample character/word

source

high domain relevance

low domain relevance

sample element

more transfer

less transfer

(b) Our method

Figure 1: Previous methods transfer knowledge by
the whole sample set, while our method consider di-
verse domain relevance within the target domain set
and within every target sample to transfer knowledge
respectively.

focus on reducing the discrepancy between the
sets of source domain samples and target domain
samples. However, they neglect the diverse do-
main relevance of individual target domain sam-
ples, let alone the element-level domain relevance.
As depicted in Figure 1, obviously, strongly rele-
vant samples/elements should learn more knowl-
edge from the source domain, while weakly rele-
vant samples/elements should learn less and keep
their characteristics.

In this paper, we propose a fine-grained knowl-
edge fusion model to control the balance between
learning from the target domain data and learn-
ing from the source model, inspired by the knowl-
edge distillation method (Bucila et al., 2006; Hin-
ton et al., 2015). With both the sample-level
and element-level domain relevance modeling and
incorporating, the fine-grained knowledge fusion
model can alleviate the negative transfer (Rosen-
stein et al., 2005) in sequence labeling domain
adaptation.

We verify the effectiveness of our method on six
domain adaptation experiments of three different
tasks, i.e. CWS, POS and NER, in two different
languages, i.e. Chinese and English, respectively.
Experiments show that our method achieves bet-
ter results than previous state-of-the-art methods
on all tasks. We also provide detailed analyses to
study the knowledge fusion process.

Contributions of our work are summarized as
follows:

• We propose a fine-grained knowledge fusion
model to balance the learning from the target
data and learning from the source model.

• We also propose multi-level relevance mod-

shared embedding layer

!" !#

Bi-LSTM Bi-LSTM

softmax

CRF

softmax

CRF

ℒ",-#ℒ./#

ℒ#

⊕

1"

23" 23# 3#

45678/4:;:</4<=;>?

@#@"
1#

4

Figure 2: The architecture of basicKD (with the red α,
see §2) or fine-grained knowledge fusion model (with
the blue α, see §4), where the green part belongs to
the source model, the orange part belongs to the target
model and the white part is common. Better viewed in
color.

eling schemes to model both the sample-level
and element-level domain relevance.

• Empirical evidences and analyses are pro-
vided on three different tasks in two different
languages, which verify the effectiveness of
our method.

2 Knowledge Distillation for Adaptation

Knowledge distillation (KD), which distills the
knowledge from a sophisticated model to a simple
model, has been employed in domain adaptation
(Bao et al., 2017; Meng et al., 2018). Recently, on-
line knowledge distillation(Furlanello et al., 2018;
Zhou et al., 2018) is shown to be more effective,
which shares lower layers between the two models
and trains them simultaneously.

For sequence labeling domain adaptation, we
utilize the online knowledge distillation method
to distill knowledge from the source model to
improve the target model, denoted as basicKD,
which is depicted in Figure 2. We use the Bi-
LSTM-CRF architecture (Huang et al., 2015), for
both the source model and the target model, and
share the embedding layer between them.
Notations For the rest of the paper, we use the
superscript S and T to denote the source domain
and the target domain, respectively. Source do-
main data is a set of m samples with gold la-



4199

bel sequences, denoted as (xSj ,y
S
j )
m
j=1. Simi-

larly, target domain data has n samples, denoted
as (xTi ,y

T
i )
n
i=1, where n� m.

The training loss of the source model is the
cross entropy between the predicted label distri-
bution ŷ and the gold label y:

LS = − 1
m

m∑
j=1

ySj log ŷ
S
j (1)

The training loss of the target model is com-
posed of two parts, namely the sequence label-
ing loss LTSEQ and the knowledge distillation loss
LTKD:

LT = (1− α)LTSEQ + αLTKD (2)

LTSEQ = −
1

n

n∑
i=1

yTi log ŷ
T
i (3)

LTKD = −
1

n

n∑
i=1

pSi logp
T
i (4)

where LTSEQ is similar to LS , while LTKD is the
cross entropy between the probability distribu-
tions predicted by the source model and the tar-
get model. α is a hyper-parameter scalar, which
is used to balance the learning from the target do-
main data and the learning from the source model.

3 Relevance Modeling

BasicKD provides individual learning goals for
every sample and element of the target domain,
using a scalar α to weight. As a result, the source
model has the same influence on all target sam-
ples, in which the diversity of domain relevance is
neglected.

Here we present methods to model the domain
relevance of target samples and elements, which
could then be used to guide the knowledge fu-
sion process (see §4). The overall architecture is
shown in Figure 3. The relevance of each sam-
ple is a scalar, denoted as the sample-level rele-
vance weight, wsampi for the i

th sample, which can
be obtained by the sample-level domain classifi-
cation. The relevance of each element is also a
scalar, while the relevance weights of all elements
within a sample form a weight vector welem, which
can be obtained by the similarity calculation.

S/T

$%&%'

(%&%'

Domain classifier

()*'+

,

$)*'+

Similarity
calculation

-

Weighted sum

('.&/0⨀

f

g

Capsule layer

ℒ56

r

Figure 3: The relevance modeling process (see §3),
where the block f denotes Eq.(10) and the block g de-
notes Eq.(14).

3.1 Element-level Relevance

To acquire the element-level relevance, we employ
the domain representation q ∈ R2dh (dh is the di-
mension of the Bi-LSTM) and calculate the simi-
larity between the element representation and the
domain representation. We incorporate two meth-
ods to get q: (1) Domain-q: q is a trainable do-
main specific vector, where every element within
a domain share the same q; (2) Sample-q: q is the
domain relevant feature extracted from each sam-
ple, where every element within a sample share the
same q. Because of the superiority of the capsule
network modeling abstract features (Gong et al.,
2018; Yang et al., 2018), we use it to capture the
domain relevant features within a sample. We in-
corporate the same bottom-up aggregation process
as Gong et al. (2018) and the encoded vector is re-
garded as q:

q = Capsule(h) (5)

where h is the hidden state matrix of a sample.
The similarity calculation formula is the matrix

dot 2:

welemj = q
>Bhj (6)

wherehj is the hidden states of the jth element and
welemj is the relevance weight of it. B ∈ R2dh×2dh
is a trainable matrix.

2We also try dot and MLP, while matrix dot get better
performance with fewer parameters.



4200

3.2 Sample-level Relevance
To acquire the sample-level domain relevance, we
make use of the domain label to carry out sample-
level text classification (two class, source domain
or target domain). The weight welem is normalized
across the sample length using the softmax func-
tion, then the sample representation can be ob-
tained by the weighted sum of hidden states. The
process can be expressed as:

ŵelemj =
exp(welemj )∑
k exp(w

elem
k )

(7)

r =

L∑
j=1

ŵj
elem · hj (8)

r ∈ R2dh is the sample representation and L is the
sample length.

Once the sample representation is obtained,
the multi-layer perceptron (MLP) and softmax do
sample classification next:

[wsamp, 1− wsamp] = [softmax(MLP(r))]> (9)

where wsamp is the sample relevance weight.

4 Fine-grained Knowledge Fusion for
Adaptation

With the relevance modeling, the fine-grained
knowledge fusion model is proposed to fusion the
knowledge from the source domain and the target
domain at different levels. The overall architecture
is shown in Figure 2.

4.1 Sample-level Knowledge Fusion
Different samples of target domain tend to show
different domain relevance, and as a result, they
need to acquire different amount of knowledge
from the source domain. Different α is assigned to
each target sample based on its domain relevance
to achieve the sample-level knowledge fusion. The
new α can be computed as:

α
samp
i = σ(τ ·w

samp
i + γ) (10)

whereαsampi is the α of the i
th sample and wsampi is

the relevance weight of it; σ denotes the sigmoid
function; τ is temperature and γ is bias.

The loss functions of the target model can be
computed as:

LT = LTSEQ + LTKD (11)

LTSEQ = −
1

n

n∑
i=1

(1−αsampi )y
T
i log ŷ

T
i (12)

LTKD = −
1

n

n∑
i=1

α
samp
i p

S
i logp

T
i (13)

The sample classification losses of the source
model LSsc and target model LTsc are both cross en-
tropy.

4.2 Element-level Knowledge Fusion
Besides the sample-level domain relevance, dif-
ferent elements within a sample tend to present
diverse domain relevance. In this method, we
assign different α to each element based on its
domain relevance weight to achieve the element-
level knowledge fusion. The new α can be com-
puted as:

αelemi = σ(Wαw
elem
i + bα)] (14)

where αelemi ∈ RL is a vector, in which αelemij de-
notes the α of the jth element in the ith sample.
welemi is the relevance weight of the i

th sample.
Wα and bα are trainable parameters.

The loss functions of the target model can be
expressed as:

LTSEQ = −
1

n

n∑
i=1

L∑
j=1

(1−αelemij )yTij log ŷTij (15)

LTKD = −
1

n

n∑
i=1

L∑
j=1

αelemij p
S
ij logp

T
ij (16)

where ∗ij denotes the ∗ of the jth element in the
ith sample, and the final loss function is the same
with Eq.(11).

4.3 Multi-level Knowledge Fusion
In this method, we take both the sample-level and
element-level relevance diversities into account to
implement the multi-level knowledge fusion, and
the multi-level α can be computed as:

αmulti = αsamp �αelem (17)

where � denotes the element-wise product.
αmulti ∈ Rn×L is a matrix as well.

The loss functions of the target model can be
obtained by replacing αelemij with α

multi
ij in Eq.(15)

and Eq.(16).



4201

Task Language Source Target Domain

CWS Chinese CTB6 (Xue et al., 2005) Zhuxian (Zhang et al., 2014) news→ novelsChinese CTB6 (Xue et al., 2005) Weibo (Qiu et al., 2016)

news→ social mediaPOS
Chinese CTB6 (Xue et al., 2005) Weibo (Qiu et al., 2016)
English PTB (Marcus et al., 1993) Twitter (Ritter et al., 2011)

NER Chinese MSRA (Levow, 2006) WeiboNER (Peng and Dredze, 2015)English Ontonotes (Ralph et al., 2013) Twitter (Ritter et al., 2011)

Table 2: Datasets used in this paper.

Algorithm 1 Training Process of Knowledge Fusion
1. Input: source data, target data
2. Hyper− parameters: batch size b, teach step I
3. Initialize parameters of the source and target model
4. (optional) Use the source data to pre-train θS and θT

5. repeat
6. for i = 1 to I do
7. Sample b samples from the source data
8. Compute LS , and update θS
9. Compute LSsc, and update θS
10. end for
11. Use θS to test xTtrain and get p

S

12. while in an episode:
13. Sample b samples from the target data
14. Use relevance modeling to get wsamp,welem

15. Compute αsamp/αelem/αmulti and LTSEQ
16. Use θT to predict pT , and compute LTKD
17. Compute LT , and update θT
18. Compute LTsc, and update θT
19. end while
20. until converge

4.4 Training Process
Both the source model and the target model can be
pre-trained on the source domain data (warm up,
optional). In the fine-grained knowledge fusion
method, the source model and the target model
are trained alternately. Within an episode, we use
I steps to train the source model ahead, then the
soft target (pS) can be obtained and the target
model will be trained. During the training of the
target model, the parameters of the source model
are fixed (gradient block). Every training step in-
cludes the sequence labeling training and the sam-
ple classification training. We conduct early stop-
ping according to the performance of the target
model. The whole training process is shown in
Algorithm 1.

5 Experiments

5.1 Datasets
We conduct three sequence labeling tasks: CWS,
POS and NER, and the latter two tasks contain-
ing both Chinese and English settings. Detailed
datasets are shown in Table 2. There are two kinds
of source-target domain pairs: news-novels and
news-social media. To be consistent with the set-

ting where there is only small-scale target domain
data, we use 5% training data of Weibo for both
CWS and POS. For the different NER tag sets,
we only focus on three types of entities: Person
(PER), Location (LOC) and Organization (ORG)
and regard other types as Other (O).

5.2 Settings

For each task, hyper-parameters are set via grid
search on the target domain development set. Em-
bedding size and the dimension of LSTM hidden
states is set to 100. Batch size is set to 64. Learn-
ing rate is set to 0.01. We employ the dropout
strategy on the embedding and MLP layer with
the rate of 0.2. The l2 regularization term is set
to 0.1. The gradient clip is set to 5. The teach step
I is set to 100. The routing iteration is set to 3
and the number of the output capsules is set to 60.
The temperature τ is initialized to 1 and the prob-
ability bias γ is initialized to 0.5. We set the α
of the basicKD method to 0.5 according to Hinton
et al. (2015). We randomly initialize the embed-
ding matrix without using extra data to pre-train,
unless specified otherwise.

5.3 Baselines

We implement several baseline methods, includ-
ing: source only (training with only source do-
main data), target only (training with only target
domain data) and basicKD (see §2).

We also re-implement state-of-the-art sequence
labeling domain adaptation methods, following
their settings except for unifying the embedding
size and the dimension of LSTM hidden states:

• Pre-trained methods: Pre-trained embed-
ding incorporates source domain data with
its gold label to pre-train context-aware char-
acter embedding (Zhou et al., 2017), which
is used to initialize the target model; Pre-
trained model trains the model on the source
domain and then finetune it on the target do-
main.



4202

Methods
CWS POS NERZhuxian 5% Weibo

F ROOV F ROOV zh en zh en
Target only 92.80 65.81 84.01 64.12 93.03 86.83 46.49 59.58
BasicKD 94.23 74.08 89.21 76.26 95.69 89.96 49.92 62.15

Pre-trained embedding 93.70 70.44 87.62 72.27 94.96 89.70 52.53 61.36
Pre-trained model 94.43 74.30 89.50 76.27 96.10 90.05 54.25 62.88
Linear projection 94.14 72.75 88.77 75.85 95.92 89.36 52.71 62.27

Domain mask 94.30 75.20 88.84 75.03 96.01 89.81 54.12 62.64
NAL 94.47 74.62 88.63 75.77 96.19 90.48 54.70 63.32

AMCL 94.62 74.46 89.42 76.16 94.13 89.12 51.47 61.57
FGKF 95.01 77.26 90.45 77.27 96.60 91.33 55.60 63.81

+ Pre-trained embedding 95.09 77.56 90.73 77.87 96.36 91.66 57.57 65.51

Table 3: Results of domain adaptation on three tasks, where zh denotes the Weibo datasets (in Chinese), and en
denotes the Twitter dataset (in English).

• Projection methods: Linear projection
(Peng and Dredze, 2017) uses the domain-
relevant matrix to transform the learned rep-
resentation from different domains into the
shared space; Domain mask (Peng and
Dredze, 2017) masks the hidden states of Bi-
LSTM to split the representations into private
and public regions to do the projection; Neu-
ral adaptation layer (NAL) (Lin and Lu,
2018) incorporates adaptation layers at the
input and output to conduct private-public-
private projections.

• Adversarial method: Adversarial multi-
criteria learning (AMCL) (Chen et al.,
2017) uses the shared-private architecture
with the adversarial strategy to learn the
shared representations across domains.

5.4 Overall Results on CWS

We use the F1-score (F) and the recall of out-
of-vocabulary words (Roov) to evaluate the do-
main adaptation performance on CWS. We com-
pare methods with different relevance modeling
schemes and different levels of knowledge fusion,
without warm up. And we denote our final model
as FGKF, which is the multi-level knowledge fu-
sion with the sample-q relevance modeling and
warm up.

The results in Table 4 show that both the ba-
sicKD method and fine-grained methods achieve
performance improvements through domain adap-
tation. Compared with the basicKD method,
FGKF behaves better (+1.1% F and +2.8% Roov
v.s. basicKD on average), as it takes multi-
level relevance discrepancies into account. The
sample-q method performs better than the domain-
q method, which shows the domain feature is bet-

Methods Zhuxian 5% WeiboF ROOV F ROOV
Source only 83.86 62.40 83.75 70.74
Target only 92.80 65.81 84.01 64.12
BasicKD 94.23 74.08 89.21 76.26

Domain-q αsamp 94.55 74.02 89.63 75.93
Domain-q αelem 94.81 74.75 89.99 77.59
Domain-q αmulti 94.75 74.96 90.06 77.25
Sample-q αsamp 94.57 74.47 89.77 76.81
Sample-q αelem 94.78 74.52 90.07 76.94
Sample-q αmulti 94.91 75.56 90.20 77.46

FGKF 95.01 77.26 90.45 77.27

Table 4: Results of baselines and fine-grained knowl-
edge fusion methods on CWS.

ter represented at the sample level, not at the do-
main level. As for the granularity of α, the per-
formances of αelem is better than αsamp, showing
the necessity of modeling element-level relevance.
And there isn’t a distinct margin between αelem

and αmulti as most of the multi-level domain rel-
evance can be included by the element level. Re-
sults of FGKF with warm up indicate that starting
from sub-optimal point is better than starting from
scratch for the target model.

Among related works (Table 3), AMCL and
Pre-trained model methods have better perfor-
mances in CWS. Compared with other methods,
FGKF achieves the best results in both F and
ROOV. Results demonstrate the effectiveness of
our fine-grained knowledge fusion architecture for
domain adaptation, and also show the significance
of considering sample-level and element-level rel-
evance discrepancies.

5.5 Overall Results on POS and NER
To further verify the effectiveness of FGKF, we
conduct experiments on POS and NER tasks, us-
ing F1-score as the evaluation criterion. Detailed
results are shown in Table 3. In these tasks, FGKF



4203

是 日 青 云 大 战 ， 兽 神 败 在 诛 仙 古 剑 之 下

是 日 青 云 大 战 ， 兽 神 败 在 诛 仙 古 剑 之 下
That     day      Qing    Yun     big      battle       ,       Beast   God      lose       at      Zhu     Xian    Old    Sword under

鬼 厉 一 一 记 在 心 里 ， 向 面 前 的 大 巫 师 点 了 点 头

鬼 厉 一 一 记 在 心 里 ， 向 面 前 的 大 巫 师 点 了 点 头
Ghost one     one      keep      at      mind      in        , to       face     front big          wizard nod nod     head

Figure 4: Two cases of the element-level relevance modeling visualization, where the upper one belongs to the
domain-q method and the lower one belongs to the sample-q method. The green dotted circle indicates the correct
domain relevant element and the red solid circle indicates the ignored or mistaken extracted element.

achieves better results than other adaptation meth-
ods. Extra gain could be obtained by using pre-
trained embedding. These results also verify the
generalization of our method over different tasks
and languages.

6 Analysis

In this section, we will display and discuss the
domain adaptation improvements provided by our
fine-grained knowledge fusion method.

6.1 Performances of Elements with Different
Relevance

To further probe into the experimental results of
the fine-grained knowledge fusion, we classify the
target test data (in element level) into two classes:
strongly relevant and weakly relevant, based on
their relevance degrees to the source domain. The
partition threshold is according to the average rel-
evance score of the target training data. Detailed
results on Twitter are depicted in Table 5.

Methods POS NERStrong Weak Strong Weak
Source only 87.47 82.48 68.27 46.30
Target only 86.46 87.41 62.01 56.29
BasicKD 91.92 83.82 70.20 52.63

FGKF 92.55 89.93 71.81 57.92

Table 5: Results of the strongly/weakly relevant ele-
ments on the Twitter test set.

It is reasonable that both the basicKD and
FGKF enhance the performance of the strongly
relevant part, while FGKF get larger improve-
ments because it is able to enhance the knowledge
fusion by learning more from the source model.
For the weakly relevant part, the basicKD method
damages the performance on it (from 87.41 to

83.82 for POS and from 56.29 to 52.63 for NER),
which indicate the negative transfer. On the con-
trary, FGKF improves the performance of the
weakly relevant part compared with the target only
baseline with a large margin. It is shown that the
fine-grained domain adaptation method can reduce
the negative transfer on the weakly relevant part
and contribute to the transfer on the strongly rele-
vant one.

6.2 Relevance Weight Visualization

We carry out the visualization of the element-level
relevance weight to illustrate the effects of the
two relevance modeling schemes (domain-q and
sample-q). Figure 4 exhibits two cases of element-
level relevance modeling results, from which we
can explicitly observe that the two schemes cap-
ture different domain relevance within a sample.
In the first case, the sample-q method extracts
more domain relevant elments, like “Qingyun”,
“Beast God” and “Zhuxian Old Sword”, while the
domain-q method ignores the last one. In the sec-
ond case, the domain-q method extracts “front” in-
correctly. These results indicate that the sample-
q method can implement better relevance mod-
eling than the domain-q method to some extent,
and prove that the domain relevant feature is better
represented at the sample level, not at the domain
level.

6.3 Case Study

We take two samples in Twitter test set as exam-
ples to show how the element-level relevance af-
fects the adaptation. Results in Table 6 show that
both basicKD and FGKF can improve the perfor-
mance of strongly relevant elements, e.g. “got
(VBD)”, “Lovis (B-PER)”. However, only FGKF



4204

Tasks POS NER
Sentence I got u next week Louis interview with The Sun

Source only PN VBD NN JJ NN B-PER O O O O
Target only PN VBZ PN JJ NN O O O B-ORG I-ORG
BasicKD PN VBD NN JJ NN B-PER O O O O

FGKF PN VBD PN JJ NN B-PER O O B-ORG I-ORG

Table 6: Two cases of domain adaptation, where the underlined tags are wrong.

reduces the transfer of source domain errors, e.g.
“u (NN)”, “The (B-ORG) Sun (I-ORG)”.

6.4 Ablation Study
We conduct the ablation study on Twitter dataset
(Table 7). Results show the gradient block and the
multi-level knowledge fusion are of vital impor-
tance to FGKF. The embedding sharing and warm
up also make contributions.

Methods POS NERF ∆ F ∆
FGKF 91.33 - 63.81 -

w/o share embedding 90.75 -0.58 62.47 -1.34
w/o gradient block 88.48 -2.85 58.83 -4.98

w/o αsamp 90.94 -0.39 63.52 -0.30
w/o αelem 90.23 -1.10 62.43 -1.38
w/o αmulti 90.12 -1.21 62.32 -1.49

w/o warm up 90.89 -0.44 63.17 -0.64

Table 7: Ablation results of the Twitter test set.

6.5 Influence of Target Data Size
Here we investigate the impact of the target do-
main data size on FGKF. As is depicted in Figure
5, when the size is small (20%), the gap is pretty
huge between FGKF and basicKD, which verifies
the significance of fine-grained knowledge fusion
in the low-resource setting. Even with the size of
target data increasing, there are still stable margins
between the two methods.

Figure 5: Results of CWS target test set with vary-
ing target training data size. Only 10% training data
of Weibo is utilized.

7 Related Work

Besides the source domain data, some methods
utilize the target domain lexicons (Liu et al., 2014;
Zhang et al., 2014), unlabeled (Liu and Zhang,
2012) or partial-labeled target domain data (Liu
et al., 2014) to boost the sequence labeling adap-
tation performance, which belong to unsupervised
or semi-supervised domain adaptation. However,
we focus on supervised sequence labeling do-
main adaptation, where huge improvement can be
achieved by utilizing only small-scale annotated
data from the target domain.

Previous works in domain adaptation often try
to find a subset of source domain data to align
with the target domain data (Chopra et al., 2013;
Ruder and Plank, 2017) which realizes a kind of
source data sample or construct a common fea-
ture space, while those methods may wash out
informative characteristics of target domain sam-
ples. Instance-based domain adaptation (Jiang and
Zhai, 2007; Zhang and Xiong, 2018) implement
the source sample weighting by assigning higher
weights to source domain samples which are more
similar to the target domain. There are also some
methods (Guo et al., 2018; Kim et al., 2017; Zeng
et al., 2018) explicitly weighting multiple source
domain models for target samples in multi-source
domain adaptation. However, our work focuses on
the supervised single source domain adaptation,
which devote to implementing the knowledge fu-
sion between the source domain and the target do-
main, not within multiple source domains. More-
over, considering the important characteristics of
sequence labeling tasks, we put more attention to
the finer-grained adaptation, considering the do-
main relevance in sample level and element level.

8 Conclusion

In this paper, we propose a fine-grained knowl-
edge fusion model for sequence labeling domain
adaptation to take the domain relevance diversity
of target data into account. With the relevance
modeling on both the sample level and element



4205

level, the knowledge of the source model and tar-
get data can achieve multi-level fusion. Experi-
mental results on different tasks demonstrate the
effectiveness of our approach, and show the poten-
tial of our approach in a broader range of domain
adaptation applications.

Acknowledgements

We would like to thank the anonymous review-
ers for their insightful comments. Shujian Huang
is the corresponding author. This work is sup-
ported by National Science Foundation of China
(No. U1836221, No. 61772261), National Key
RD Program of China (No. 2019QY1806).

References
Zuyi Bao, Si Li, Weiran Xu, and Sheng Gao. 2017.

Neural regularized domain adaptation for Chinese
word segmentation. In AFNLP.

John Blitzer, Mark Dredze, and Fernando Pereira.
2007. Biographies, bollywood, boom-boxes and
blenders: Domain adaptation for sentiment classi-
fication. In ACL.

Cristian Bucila, Rich Caruana, and Alexandru
Niculescu-Mizil. 2006. Model compression. In
SIGKDD.

Xinchi Chen, Zhan Shi, Xipeng Qiu, and Xuanjing
Huang. 2017. Adversarial multi-criteria learning for
Chinese word segmentation. In ACL.

Sumit Chopra, Suhrid Balakrishnan, and Raghuraman
Gopalan. 2013. Dlid: Deep learning for domain
adaptation by interpolating between domains. In
ICML.

Hal Daume III. 2007. Frustratingly easy domain adap-
tation. In ACL.

Tommaso Furlanello, Zachary Chase Lipton, Michael
Tschannen, Laurent Itti, and Anima Anandkumar.
2018. Born-again neural networks. In ICML.

Jingjing Gong, Xipeng Qiu, Shaojing Wang, and Xuan-
jing Huang. 2018. Information aggregation via dy-
namic routing for sequence encoding. In COLING.

Jiang Guo, Darsh Shah, and Regina Barzilay. 2018.
Multi-source domain adaptation with mixture of ex-
perts. In EMNLP.

Geoffrey E. Hinton, Oriol Vinyals, and Jeffrey Dean.
2015. Distilling the knowledge in a neural network.
In NIPS.

Zhiheng Huang, Wei Xu, and Kai Yu. 2015. Bidi-
rectional LSTM-CRF models for sequence tagging.
arXiv:1508.01991. Version 1.

Jing Jiang and ChengXiang Zhai. 2007. Instance
weighting for domain adaptation in nlp. In ACL.

Young-Bum Kim, Karl Stratos, and Dongchan Kim.
2017. Domain attention with an ensemble of ex-
perts. In ACL.

Gina-Anne Levow. 2006. The third international Chi-
nese language processing bakeoff: Word segmenta-
tion and named entity recognition. In AFNLP.

Bill Yuchen Lin and Wei Lu. 2018. Neural adapta-
tion layers for cross-domain named entity recogni-
tion. In EMNLP.

Yang Liu and Yue Zhang. 2012. Unsupervised domain
adaptation for joint segmentation and pos-tagging.
In COLING.

Yijia Liu, Yue Zhang, Wanxiang Che, Ting Liu, and
Fan Wu. 2014. Domain adaptation for CRF-based
Chinese word segmentation using free annotations.
In EMNLP.

Mitchell P. Marcus, Beatrice Santorini, and Mary Ann
Marcinkiewicz. 1993. Building a large annotated
corpus of English: The penn treebank. Computa-
tional Linguistics.

Zhong Meng, Jinyu Li, Yifan Gong, and Biing-Hwang
Juang. 2018. Adversarial teacher-student learning
for unsupervised domain adaptation. In ICASSP.

Sinno Jialin Pan and Qiang Yang. 2010. A survey on
transfer learning. IEEE Trans. Knowl. Data Eng.

Nanyun Peng and Mark Dredze. 2015. Named entity
recognition for Chinese social media with jointly
trained embeddings. In EMNLP.

Nanyun Peng and Mark Dredze. 2017. Multi-
task domain adaptation for sequence tagging. In
Repl4NLP.

Xipeng Qiu, Peng Qian, and Zhan Shi. 2016. Overview
of the NLPCC-ICCPOL 2016 shared task: Chinese
word segmentation for micro-blog texts. In IC-
CPOL.

Weischedel Ralph, Palmer Martha, and Marcus et al.
Mitchell. 2013. Ontonotes release 5.0 ldc2013t19.
Linguistic Data Consortium.

Alan Ritter, Sam Clark, Mausam, and Oren Etzioni.
2011. Named entity recognition in tweets: An ex-
perimental study. In EMNLP.

Michael T Rosenstein, Zvika Marx, Leslie Pack Kael-
bling, and Thomas G Dietterich. 2005. To transfer
or not to transfer. NIPS.

Sebastian Ruder and Barbara Plank. 2017. Learning to
select data for transfer learning with bayesian opti-
mization. In EMNLP.

http://aclweb.org/anthology/W17-6002
http://aclweb.org/anthology/W17-6002
https://www.aclweb.org/anthology/P07-1056
https://www.aclweb.org/anthology/P07-1056
https://www.aclweb.org/anthology/P07-1056
https://doi.org/10.1145/1150402.1150464
https://doi.org/10.18653/v1/P17-1110
https://doi.org/10.18653/v1/P17-1110
http://deeplearning.net/wp-content/uploads/2013/03/dlid.pdf
http://deeplearning.net/wp-content/uploads/2013/03/dlid.pdf
http://aclweb.org/anthology/P07-1033
http://aclweb.org/anthology/P07-1033
http://proceedings.mlr.press/v80/furlanello18a.html
http://aclweb.org/anthology/C18-1232
http://aclweb.org/anthology/C18-1232
http://aclweb.org/anthology/D18-1498
http://aclweb.org/anthology/D18-1498
http://arxiv.org/abs/1503.02531
https://arxiv.org/abs/1508.01991
https://arxiv.org/abs/1508.01991
http://aclweb.org/anthology/P07-1034
http://aclweb.org/anthology/P07-1034
https://doi.org/10.18653/v1/P17-1060
https://doi.org/10.18653/v1/P17-1060
http://aclweb.org/anthology/W06-0115
http://aclweb.org/anthology/W06-0115
http://aclweb.org/anthology/W06-0115
http://aclweb.org/anthology/D18-1226
http://aclweb.org/anthology/D18-1226
http://aclweb.org/anthology/D18-1226
http://aclweb.org/anthology/C12-2073
http://aclweb.org/anthology/C12-2073
https://doi.org/10.3115/v1/D14-1093
https://doi.org/10.3115/v1/D14-1093
https://www.aclweb.org/anthology/J93-2004
https://www.aclweb.org/anthology/J93-2004
https://doi.org/10.1109/ICASSP.2018.8461682
https://doi.org/10.1109/ICASSP.2018.8461682
https://doi.org/10.1109/TKDE.2009.191
https://doi.org/10.1109/TKDE.2009.191
https://doi.org/10.18653/v1/D15-1064
https://doi.org/10.18653/v1/D15-1064
https://doi.org/10.18653/v1/D15-1064
http://aclweb.org/anthology/W17-2612
http://aclweb.org/anthology/W17-2612
https://doi.org/10.1007/978-3-319-50496-4_84
https://doi.org/10.1007/978-3-319-50496-4_84
https://doi.org/10.1007/978-3-319-50496-4_84
https://www.aclweb.org/anthology/D11-1141
https://www.aclweb.org/anthology/D11-1141
http://web.engr.oregonstate.edu/~tgd/publications/rosenstein-marx-kaelbling-dietterich-hnb-nips2005-transfer-workshop.pdf
http://web.engr.oregonstate.edu/~tgd/publications/rosenstein-marx-kaelbling-dietterich-hnb-nips2005-transfer-workshop.pdf
https://doi.org/10.18653/v1/D17-1038
https://doi.org/10.18653/v1/D17-1038
https://doi.org/10.18653/v1/D17-1038


4206

Naiwen Xue, Fei Xia, Fu-Dong Chiou, and Martha
Palmer. 2005. The Penn Chinese Treebank: Phrase
structure annotation of a large corpus. Natural Lan-
guage Engineering.

Min Yang, Wei Zhao, Jianbo Ye, Zeyang Lei, Zhou
Zhao, and Soufei Zhang. 2018. Investigating cap-
sule networks with dynamic routing for text classifi-
cation. In EMNLP.

Jiali Zeng, Jinsong Su, Huating Wen, Yang Liu,
Jun Xie, Yongjing Yin, and Jianqiang Zhao. 2018.
Multi-domain neural machine translation with word-
level domain context discrimination. In EMNLP.

Meishan Zhang, Yue Zhang, Wanxiang Che, and Ting
Liu. 2014. Type-supervised domain adaptation for
joint segmentation and pos-tagging. In ACL.

Shiqi Zhang and Deyi Xiong. 2018. Sentence weight-
ing for neural machine translation domain adapta-
tion. In COLING.

Yue Zhang and Jie Yang. 2018. Chinese ner using lat-
tice lstm. In ACL.

Guorui Zhou, Ying Fan, Runpeng Cui, Weijie Bian, Xi-
aoqiang Zhu, and Kun Gai. 2018. Rocket launch-
ing: A universal and efficient framework for training
well-performing light net. In AAAI.

Hao Zhou, Zhenting Yu, Yue Zhang, Shujian Huang,
XIN-YU DAI, and Jiajun Chen. 2017. Word-context
character embeddings for Chinese word segmenta-
tion. In EMNLP.

https://doi.org/10.1017/S135132490400364X
https://doi.org/10.1017/S135132490400364X
http://aclweb.org/anthology/D18-1350
http://aclweb.org/anthology/D18-1350
http://aclweb.org/anthology/D18-1350
http://aclweb.org/anthology/D18-1041
http://aclweb.org/anthology/D18-1041
https://doi.org/10.3115/v1/E14-1062
https://doi.org/10.3115/v1/E14-1062
https://www.aclweb.org/anthology/C18-1269
https://www.aclweb.org/anthology/C18-1269
https://www.aclweb.org/anthology/C18-1269
http://aclweb.org/anthology/P18-1144
http://aclweb.org/anthology/P18-1144
https://www.aaai.org/ocs/index.php/AAAI/AAAI18/paper/view/16090
https://www.aaai.org/ocs/index.php/AAAI/AAAI18/paper/view/16090
https://www.aaai.org/ocs/index.php/AAAI/AAAI18/paper/view/16090
https://doi.org/10.18653/v1/D17-1079
https://doi.org/10.18653/v1/D17-1079
https://doi.org/10.18653/v1/D17-1079

