



















































Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics


Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics, pages 613–622
Vancouver, Canada, July 30 - August 4, 2017. c©2017 Association for Computational Linguistics

https://doi.org/10.18653/v1/P17-1057

Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics, pages 613–622
Vancouver, Canada, July 30 - August 4, 2017. c©2017 Association for Computational Linguistics

https://doi.org/10.18653/v1/P17-1057

Representations of language in a model of visually grounded speech signal

Grzegorz Chrupała
Tilburg University

g.chrupala@uvt.nl

Lieke Gelderloos
Tilburg University

l.j.gelderloos@uvt.nl

Afra Alishahi
Tilburg University

a.alishahi@uvt.nl

Abstract

We present a visually grounded model of
speech perception which projects spoken
utterances and images to a joint seman-
tic space. We use a multi-layer recurrent
highway network to model the temporal
nature of spoken speech, and show that it
learns to extract both form and meaning-
based linguistic knowledge from the input
signal. We carry out an in-depth analy-
sis of the representations used by different
components of the trained model and show
that encoding of semantic aspects tends
to become richer as we go up the hierar-
chy of layers, whereas encoding of form-
related aspects of the language input tends
to initially increase and then plateau or de-
crease.

1 Introduction

Speech recognition is one of the success stories
of language technology. It works remarkably well
in a range of practical settings. However, this
success relies on the use of very heavy supervi-
sion where the machine is fed thousands of hours
of painstakingly transcribed audio speech signal.
Humans are able to learn to recognize and under-
stand speech from notably weaker and noisier su-
pervision: they manage to learn to extract struc-
ture and meaning from speech by simply being ex-
posed to utterances situated and grounded in their
daily sensory experience. Modeling and emulat-
ing this remarkable skill has been the goal of nu-
merous studies; however in the overwhelming ma-
jority of cases researchers used severely simplified
settings where either the language input or the ex-
tralinguistic sensory input, or both, are small scale
and symbolically represented. Section 2 provides
a brief overview of this research.

More recently several lines of work have moved
towards more realistic inputs while modeling or
emulating language acquisition in a grounded set-
ting. Gelderloos and Chrupała (2016) use the
image captioning dataset MS COCO (Lin et al.,
2014) to mimic the setting of grounded language
learning: the sensory input consists of images of
natural scenes, while the language input are pho-
netically transcribed descriptions of these scenes.
The use of such moderately large and low-level
data allows the authors to train a multi-layer re-
current neural network model, and to explore the
nature and localization of the emerging hierarchy
of linguistic representations learned in the process.
Furthermore, in a series of recent studies Harwath
and Glass (2015); Harwath et al. (2016); Harwath
and Glass (2017) use image captioning datasets
to model learning to understand spoken language
from visual context with convolutional neural net-
work models. Finally, there is a small but grow-
ing body of work dedicated to elucidating the na-
ture of representations learned by neural networks
from language data (see Section 2.2 for a brief
overview). In the current work we build on these
three strands of research and contribute the follow-
ing advances:

• We use a multi-layer gated recurrent neural
network to properly model the temporal na-
ture of speech signal and substantially im-
prove performance compared to the convolu-
tional architecture from Harwath and Glass
(2015);

• We carry out an in-depth analysis of the rep-
resentations used by different components of
the trained model and correlate them to repre-
sentations learned by a text-based model and
to human patterns of judgment on linguistic
stimuli. This analysis is especially novel for
a model with speech signal as input.

The general pattern of findings in our analysis is

613

https://doi.org/10.18653/v1/P17-1057
https://doi.org/10.18653/v1/P17-1057


as follows: The model learns to extract from the
acoustic input both form-related and semantics-
related information, and encodes it in the activa-
tions of the hidden layers. Encoding of semantic
aspects tends to become richer as we go up the hi-
erarchy of layers. Meanwhile, encoding of form-
related aspects of the language input, such as ut-
terance length or the presence of specific words,
tends to initially increase and then decay.

We release the code for our models
and analyses as open source, available at
https://github.com/gchrupala/visually-grounded-
speech. We also release a dataset of synthetically
spoken image captions based on MS COCO, avail-
able at https://doi.org/10.5281/zenodo.400926.

2 Related work

Children learn to recognize and assign meaning
to words from continuous perceptual data in ex-
tremely noisy context. While there have been
many computational studies of human word mean-
ing acquisition, they typically make strong sim-
plifying assumptions about the nature of the in-
put. Often language input is given in the form
of word symbols, and the context consists of a
set of symbols representing possible referents (e.g.
Siskind, 1996; Frank et al., 2007; Fazly et al.,
2010). In contrast, several studies presented mod-
els that learn from sensory rather than symbolic in-
put, which is rich with regards to the signal itself,
but very limited in scale and variation (e.g. Roy
and Pentland, 2002; Yu and Ballard, 2004; Lazari-
dou et al., 2016).

2.1 Multimodal language acquisition

Chrupała et al. (2015) introduce a model that
learns to predict the visual context from image
captions. The model is trained on image-caption
pairs from MSCOCO (Lin et al., 2014), captur-
ing both rich visual input as well as larger scale
input, but the language input still consists of word
symbols. Gelderloos and Chrupała (2016) propose
a similar architecture that instead takes phoneme-
level transcriptions as language input, thereby in-
corporating the word segmentation problem into
the learning task. In this work, we introduce an ar-
chitecture that learns from continuous speech and
images directly.

This work is related to research on visual
grounding of language. The field is large and
growing, with most work dedicated to the ground-

ing of written text, particularly in image cap-
tioning tasks (see Bernardi et al. (2016) for an
overview). However, learning to ground language
to visual information is also interesting from an
automatic speech recognition point of view. Po-
tentially, ASR systems could be trained from nat-
urally co-occurring visual context information,
without the need for extensive manual annota-
tion – a particularly promising prospect for speech
recognition in low-resource languages. There
have been several attempts along these lines. Syn-
naeve et al. (2014) present a method of learning
to recognize spoken words in isolation from co-
occurrence with image fragments. Harwath and
Glass (2015) present a model that learns to map
pre-segmented spoken words in sequence to as-
pects of the visual context, while in Harwath and
Glass (2017) the model also learns to recognize
words in the unsegmented signal.

Most closely related to our work is that of Har-
wath et al. (2016), as it presents an architecture
that learns to project images and unsegmented
spoken captions to the same embedding space.
The sentence representation is obtained by feed-
ing the spectrogram to a convolutional network.
The architecture is trained on crowd-sourced spo-
ken captions for images from the Places dataset
(Zhou et al., 2014), and evaluated on image search
and caption retrieval. Unfortunately this dataset is
not currently available and we were thus unable to
directly compare the performance of our model to
Harwath et al. (2016). We do compare to Harwath
and Glass (2015) which was tested on a public
dataset. We make different architectural choices,
as our models are based on recurrent highway net-
works (Zilly et al., 2016). As in human cognition,
speech is processed incrementally. This also al-
lows our architecture to integrate information se-
quentially from speech of arbitrary duration.

2.2 Analysis of neural representations

While analysis of neural methods in NLP is of-
ten limited to evaluation of the performance on
the training task, recently methods have been in-
troduced to peek inside the black box and explore
what it is that enables the model to perform the
task. One approach is to look at the contribution
of specific parts of the input, or specific units in the
model, to final representations or decisions. Kádár
et al. (2016) propose omission scores, a method to
estimate the contribution of input tokens to the fi-

614



nal representation by removing them from the in-
put and comparing the resulting representations to
the ones generated by the original input. In a sim-
ilar approach, Li et al. (2016) study the contribu-
tion of individual input tokens as well as hidden
units and word embedding dimensions by erasing
them from the representation and analyzing how
this affects the model.

Miao et al. (2016) and Tang et al. (2016) use vi-
sualization techniques for fine-grained analysis of
GRU and LSTM models for ASR. Visualization
of input and forget gate states allows Miao et al.
(2016) to make informed adaptations to gated re-
current architectures, resulting in more efficiently
trainable models. Tang et al. (2016) visualize
qualitative differences between LSTM- and GRU-
based architectures, regarding the encoding of in-
formation, as well as how it is processed through
time.

We specifically study linguistic properties of the
information encoded in the trained model. Adi
et al. (2016) introduce prediction tasks to ana-
lyze information encoded in sentence embeddings
about word order, sentence length, and the pres-
ence of individual words. We use related tech-
niques to explore encoding of aspects of form and
meaning within components of our stacked archi-
tecture.

3 Models

We use a multi-layer, gated recurrent neural net-
work (RHN) to model the temporal nature of
speech signal. Recurrent neural networks are de-
signed for modeling sequential data, and gated
variants (GRUs, LSTMs) are widely used with
speech and text in both cognitive modeling and
engineering contexts. RHNs are a simple gener-
alization of GRU networks such that the transform
between time points can consist of several steps.

Our multimodal model projects spoken utter-
ances and images to a joint semantic space. The
idea of projecting different modalities to a shared
semantic space via a pair of encoders has been
used in work on language and vision (among them
Vendrov et al. (2015)). The core idea is to en-
courage inputs representing the same meaning in
different modalities to end up nearby, while main-
taining a distance from unrelated inputs.

The model consists of two parts: an utterance
encoder, and an image encoder. The utterance en-
coder starts from MFCC speech features, while

the image encoder starts from features extracted
with a VGG-16 pre-trained on ImageNet. Our loss
function attempts to make the cosine distance be-
tween encodings of matching utterances and im-
ages greater than the distance between encodings
of mismatching utterance/image pairs, by a mar-
gin:

(1)

∑

u,i

(∑

u′
max[0, α+d(u, i)−d(u′, i)]

+
∑

i′
max[0, α+ d(u, i)− d(u, i′)]

)

where d(u, i) is the cosine distance between the
encoded utterance u and encoded image i. Here
(u, i) is the matching utterance-image pair, u′

ranges over utterances not describing i and i′

ranges over images not described by u.
The image encoder enci is a simple linear pro-

jection, followed by normalization to unit L2
norm:

enci(i) = unit(Ai+ b) (2)

where unit(x) = x
(xT x)0.5

and with (A, b) as
learned parameters. The utterance encoder encu
consists of a 1-dimensional convolutional layer of
length s, size d and stride z, whose output feeds
into a Recurrent Highway Network with k lay-
ers and L microsteps, whose output in turn goes
through an attention-like lookback operator, and
finally L2 normalization:

encu(u) = unit(Attn(RHNk,L(Convs,d,z(u))))
(3)

The main function of the convolutional layer
Convs,d,z is to subsample the input along the tem-
poral dimension. We use a 1-dimensional convo-
lution with full border mode padding. The atten-
tion operator simply computes a weighted sum of
the RHN activation at all timesteps:

Attn(x) =
∑

t

αtxt (4)

where the weights αt are determined by learned
parameters U and W, and passed through the
timewise softmax function:

αt =
exp(U tanh(Wxt))∑
t′ exp(U tanh(Wxt′))

(5)

The main component of the utterance encoder is a
recurrent network, specifically a Recurrent High-
way Network (Zilly et al., 2016). The idea behind

615



RHN is to increase the depth of the transform be-
tween timesteps, or the recurrence depth. Other-
wise they are a type of gated recurrent networks.
The transition from timestep t − 1 to t is then de-
fined as:

rhn(xt, s
(L)
t−1) = s

(L)
t (6)

where xt stands for input at time t, and s
(l)
t de-

notes the state at time t at recurrence layer l, with
L being the top layer of recurrence. Furthermore,

s
(l)
t = h

(l)
t � t

(l)
t + s

(l−1)
t �

(
1− t(l)t

)
(7)

where � is elementwise multiplication, and

h
(l)
t = tanh

(
I[l = 1]WHxt +UHls

(l−1)
t

)
(8)

t
(l)
t = σ

(
I[l = 1]WTxt +UTls

(l−1)
)

(9)

Here I is the indicator function: input is only in-
cluded in the computation for the first layer of re-
currence l = 1. By applying the rhn function re-
peatedly, an RHN layer maps a sequence of inputs
to a sequence of states:

(10)
RHN(X, s0)

= rhn(xn, . . . , rhn(x2, rhn(x1, s
(L)
0 )))

Two or more RHN layers can be composed into a
stack:

RHN2(RHN1(X, s1
(L)
0 ), s2

(L)
0 ), (11)

where sn
(l)
t stands for the state vector of layer n of

the stack, at layer l of recurrence, at time t. In our
version of the Stacked RHN architecture we use
residualized layers:

RHNres(X, s0) = RHN(X, s0) +X (12)

This formulation tends to ease optimization in
multi-layer models (cf. He et al., 2015; Oord et al.,
2016).

In addition to the speech model described
above, we also define a comparable text model.
As it takes a sequence of words as input, we re-
place the convolutional layer with a word embed-
ding lookup table. We found the text model did
not benefit from the use of the attention mecha-
nism, and thus the sentence embedding is simply
the L2-normalized activation vector of the topmost
layer, at the last timestep.

4 Experiments

Our main goal is to analyze the emerging repre-
sentations from different components of the model
and to examine the linguistic knowledge they en-
code. For this purpose, we employ a number of
tasks that cover the spectrum from fully form-
based to fully semantic.

In Section 4.2 we assess the effectiveness of our
architecture by evaluating it on the task of rank-
ing images given an utterance. Sections 4.3 to 4.6
present our analyses. In Sections 4.3 and 4.4 we
define auxiliary tasks to investigate to what extent
the network encodes information about the surface
form of an utterance from the speech input. In Sec-
tion 4.5 and 4.6 we focus on where semantic infor-
mation is encoded in the model. In the analyses,
we use the following features:
Utterance embeddings: the weighted sum of the

unit activations on the last layer, as calculated
by Equation (3).

Average unit activations: hidden layer activa-
tions averaged over time and L2-normalized
for each hidden layer.

Average input vectors: the MFCC vectors aver-
aged over time. We use this feature to exam-
ine how much information can be extracted
from the input signal only.

4.1 Data

For the experiments reported in the remainder of
the paper we use two datasets of images with spo-
ken captions.

4.1.1 Flickr8K
The Flickr8k Audio Caption Corpus was con-
structed by having crowdsource workers read
aloud the captions in the original Flickr8K cor-
pus (Hodosh et al., 2013). For details of the
data collection procedure refer to Harwath and
Glass (2015). The datasets consist of 8,000 im-
ages, each image with five descriptions. One
thousand images are held out for validation, and
another one thousand for the final test set. We
use the splits provided by (Karpathy and Fei-Fei,
2015). The image features come from the final
fully connect layer of VGG-16 (Simonyan and
Zisserman, 2014) pre-trained on Imagenet (Rus-
sakovsky et al., 2014).

We generate the input signal as follows: we ex-
tract 12-dimensional mel-frequency cepstral coef-
ficients (MFCC) plus log of the total energy. We

616



then compute and add first order and second order
differences (deltas) for a total of 37 dimensions.
We use 25 milisecond windows, sampled every 10
miliseconds.1

4.1.2 Synthetically spoken COCO
We generated synthetic speech for the captions
in the MS COCO dataset (Lin et al., 2014) via
the Google Text-to-Speech API.2 The audio and
the corresponding MFCC features are released as
Chrupała et al. (2017)3. This TTS system we used
produces high-quality realistic-sounding speech.
It is nevertheless much simpler than real human
speech as it uses a single voice, and lacks tempo
variation or ambient noise. The data consists of
over 300,000 images, each with five spoken cap-
tions. Five thousand images each are held out for
validation and test. We use the splits and image
features provided by Vendrov et al. (2015).4 The
image features also come from the VGG-16 net-
work, but are averages of feature vectors for ten
crops of each image. For the MS COCO captions
we extracted only plain MFCC and total energy
features, and did not add deltas in order to keep
the amount of computation manageable given the
size of the dataset.

4.2 Image retrieval

We evaluate our model on the task of ranking im-
ages given a spoken utterance, such that highly
ranked images contain scenes described by the ut-
terance. The performance on this task on valida-
tion data is also used to choose the best variant
of the model architecture and to tune the hyperpa-
rameters. We compare the speech models to mod-
els trained on written sentences split into words.
The best settings found for the four models were
the following:
Flickr8K Text RHN 300-dimensional word em-

beddings, 1 hidden layer with 1024 dimen-
sions, 1 microstep, initial learning rate 0.001.

Flick8K Speech RHN convolutional layer with
length 6, size 64, stride 2, 4 hidden layers
with 1024 dimensions, 2 microsteps, atten-

1We noticed that for a number of utterances the audio sig-
nal was very long: on inspection it turned out that most of
these involved failure to switch off the microphone on the
part of the workers, and the audio contained ambient noise or
unrelated speech. We thus trucated all audio for this dataset
at 10,000 miliseconds.

2Available at https://github.com/pndurette/gTTS.
3Available at https://doi.org/10.5281/zenodo.400926.
4See https://github.com/ivendrov/order-embedding.

tion MLP with 128 hidden units, initial learn-
ing rate 0.0002

COCO Text RHN 300-dimensional word em-
beddings, 1 hidden layer with 1024 dimen-
sions, 1 microstep, initial learning rate 0.001

COCO Speech RHN convolutional layer with
length 6, size 64, stride 3, 5 hidden layers
with 512 dimensions, 2 microsteps, attention
MLP with 512 hidden units, initial learning
rate 0.0002

All models were optimized with Adam
(Kingma and Ba, 2014) with early stopping: we
kept the parameters for the epoch which showed
the best recall@10 on validation data.

Model R@1 R@5 R@10 r̃
Speech RHN4,2 0.055 0.163 0.253 48
Spectr. CNN - - 0.179 -
Text RHN1,1 0.127 0.364 0.494 11

Table 1: Image retrieval performance on Flickr8K.
R@N stands for recall at N; r̃ stands for median
rank of the correct image.

Model R@1 R@5 R@10 r̃
Speech RHN5,2 0.111 0.310 0.444 13
Text RHN1,1 0.169 0.421 0.565 8

Table 2: Image retrieval performance on
MS COCO. R@N stands for recall at N; r̃ stands
for median rank of the correct image.

Table 1 shows the results for the human speech
from the Flickr8K dataset. The Speech RHN
model scores substantially higher than model of
Harwath and Glass (2015) on the same data. How-
ever the large gap between its perfomance and the
scores of the text model suggests that Flickr8K
is rather small for the speech task. In Table 2
we present the results on the dataset of synthetic
speech from MS COCO. Here the text model is
still better, but the gap is much smaller than for
Flickr8K. We attribute this to the much larger size
of dataset, and to the less noisy and less variable
synthetic speech.

While the MS COCO text model is overall bet-
ter than the speech model, there are cases where
it outperforms the text model. We listed the top
hundred cases where the ratio of the ranks of the
correct image according to the two models was the
smallest, as well as another hundred cases where
it was the largest. Manual inspection did not turn

617



up any obvious patterns for the cases of text be-
ing better than speech. For the cases where speech
outperformed text, two patterns stood out: (i) sen-
tences with spelling mistakes, (ii) unusually long
sentences. For example for the sentence a yellow

Figure 1: Images returned for utterance a yellow
and white birtd is in flight by the text (left) and
speech (right) models.

and white birtd is in flight the text model misses
the misspelled word birtd and returns an irrelevant
image, while the speech model seems robust to
some degree of variation in pronunciation and re-
turns the target image at rank 1 (see Figure 1). In
an attempt to quantify this effect we counted the
number of unique words with training set frequen-
cies below 5 in the top 100 utterances with lowest
and highest rank ratio: for the utterances where
text was better there were 16 such words; for ut-
terances where speech was better there were 28,
among them misspellings such as streeet, scears
(for skiers), contryside, scull, birtd, devise.

The distribution of utterance lengths in Fig-
ure 2 confirms pattern (ii): the set of 100 sen-
tences where speech beats text by a large margin
are longer on average and there are extremely long
outliers among them. One of them is the 36-word-

●● ●●speech

text

10 20 30 40
Length

be
tte

r

Figure 2: Length distribution for sentences where
one model performs much better than the other.

long utterance depicted in Figure 3, with ranks 470
and 2 for text and speech respectively. We suspect
that the speech model’s attention mechanism en-
ables it to cherry pick key fragments of such mon-
ster utterances, while the text model lacking this
mechanism may struggle. Figure 3 shows the plot
of the attention weights for this utterance from the

speech model.

4.3 Predicting utterance length

Our first auxiliary task is to predict the length of
the utterance, using the features explained at the
beginning of Section 4. Since the length of an ut-
terance directly corresponds to how long it takes to
articulate, we also use the number of time steps5 as
a feature and expect it to provide the upper bound
for our task, especially for synthetic speech. We
use a Ridge Regression model for predicting utter-
ance length using each set of features. The model
is trained on 80% of the sentences in the validation
set, and tested on the remaining 20%. For all fea-
tures regularization penalty α = 1.0 gave the best
results.

Figure 4 shows the results for this task on hu-
man speech from Flickr8K and synthetic speech
from COCO. With the exception of the average in-
put vectors for Flickr8K, all features can explain
a high proportion of variance in the predicted ut-
terance length. The pattern observed for the two
datasets is slightly different: due to the systematic
conversion of words to synthetic speech in COCO,
using the number of time steps for this dataset
yields the highest R2. However, this feature is not
as informative for predicting the utterance length
in Flickr8K due to noise and variation in human
speech, and is in fact outperformed by some of the
features extracted from the model. Also, the input
vectors from COCO are much more informative
than Flickr8K due to larger quantity and simpler
structure of the speech signal. However, in both
datasets the best (non-ceiling) performance is ob-
tained by using average unit activations from the
hidden layers (layer 2 for COCO, and layers 3 and
4 for Flickr8K). These features outperform utter-
ance embeddings, which are optimized according
to the visual grounding objective of the model and
most probably learn to ignore the superficial char-
acteristics of the utterance that do not contribute to
matching the corresponding image.

Note that the performance on COCO plateaus
after the second layer, which might suggest that
form-based knowledge is learned by lower layers.
Since Flickr8K is much smaller in size, the stabil-
ising happens later in layer 3.

5This is approximately duration in milliseconds
10×stride .

618



Figure 3: Attention weight distribution for a long utterance.

Figure 4: R2 values for predicting utterance length
for Flickr8K and COCO. Layers 1–5 represent
(normalized) average unit activation, whereas the
first (#0) and last point represent average input
vectors and utterance embeddings, respectively.

4.4 Predicting word presence

Results from the previous experiment suggest that
our model acquires information about higher level
building blocks (words) in the continuous speech
signal. Here we explore whether it can detect the
presence or absence of individual words in an ut-
terance. We formulate detecting a word in an ut-
terance as a binary classification task, for which
we use a multi-layer perceptron with a single hid-
den layer of size 1024, optimized by Adam. The
input to the model is a concatenation of the fea-
ture vector representing an utterance and the one
representing a target word. We again use utter-
ance embeddings, average unit activations on each
layer, and average input vectors as features, and
represent each target word as a vector of MFCC
features extracted from the audio signal syntheti-
cally produced for that word.

For each utterance in the validation set, we ran-
domly pick one positive and one negative target
(i.e., one word that does and one that does not ap-
pear in the utterance) that is not a stop word. To
balance the probability of a word being positive
or negative, we use each positive target as a neg-
ative target for another utterance in the validation

set. The MLP model is trained on the positive and
negative examples corresponding to 80% of the ut-
terances in the validation set of each dataset, and
evaluated on the remaining 20%.

Figure 5 shows the mean accuracy of the MLP
on Flickr8K and COCO. All results using features
extracted from the model are above chance (0.5),
with the average unit activations of the hidden lay-
ers yielding the best results (0.65 for Flickr8K on
layer 3, and 0.79 for COCO on layer 4). These
numbers show that the speech model infers re-
liable information about word-level blocks from
the low-level audio features it receives as input.
The observed trend is similar to the previous task:
average unit activations on the higher-level hid-
den layers are more informative for this task than
the utterance embeddings, but the performance
plateaus before the topmost layer.

Figure 5: Mean accuracy values for predicting the
presence of a word in an utterance for Flickr8K
and COCO. Layers 1–5 represent the (normalized)
average unit activations, whereas the first (#0) and
last point represent average input vectors and ut-
terance embeddings, respectively.

4.5 Sentence similarity
Next we explore to what extent the model’s rep-
resentations correspond to those of humans. We
employ the Sentences Involving Compositional
Knowledge (SICK) dataset (Marelli et al., 2014).
SICK consists of image descriptions taken from

619



Figure 6: Pearson’s r of cosine similarities of aver-
aged input MFCCs and COCO Speech RHN hid-
den layer activation vectors and embeddings of
sentence pairs with relatedness scores from SICK,
cosine similarity of COCO Text RHN embed-
dings, and edit similarity.

Flickr8K and video captions from the SemEval
2012 STS MSRVideo Description data set (STS)
(Agirre et al., 2012). Captions were paired at ran-
dom, as well as modified to obtain semantically
similar and contrasting counterparts, and the re-
sulting pairs were rated for semantic similarity.

For all sentence pairs in SICK, we generate
synthetic spoken sentences and feed them to the
COCO Speech RHN, and calculate the cosine sim-
ilarity between the averaged MFCC input vectors,
the averaged hidden layer activation vectors, and
the sentence embeddings. Z-score transformation
was applied before calculating the cosine similar-
ities. We then correlate these cosine similarities
with

• semantic relatedness according to human rat-
ings

• cosine similarities according to z-score trans-
formed embeddings from COCO Text RHN

• edit similarities, a measure of how sim-
ilar the sentences are in form, specifi-
cally, 1−normalized Levenshtein distance
over character sequences

Figure 6 shows a boxplot over 10,000 bootstrap
samples for all correlations. We observe that (i)
correlation with edit similarity initially increases,
then decreases; (ii) correlation with human re-
latedness scores and text model embeddings in-
creases until layer 4, but decreases for hidden layer
5. The initially increasing and then decreasing cor-
relation with edit similarity is consistent with the
findings that information about form is encoded
by lower layers. The overall growing correlation
with both human semantic similarity ratings and

0.00

0.25

0.50

0.75

1.00

0 2 4 6
layer

R
E

R

words

peaking/peeking
great/grate
mantle/mantel
peer/pier
tale/tail
wit/whit
weight/wait

isle/aisle
sight/site
pic/pick
sun/son
wears/wares
pause/paws
tied/tide

ware/wear
sales/sails
boarder/border
plane/plain
lapse/laps
rose/rows
stares/stairs

seen/scene
plains/planes
see/sea
main/mane
rains/reins
tea/tee
stair/stare

waist/waste
hole/whole
suite/sweet
pairs/pears
cole/coal
sale/sail

log(mincount) 4 5 6 7

Figure 7: Disambiguation performance per layer.
Points #0 and #6 (connected via dotted lines) rep-
resent the input vectors and utterance embeddings,
respectively. The black line shows the overall
mean RER.

the COCO Text RHN indicate that higher layers
learn to represent semantic knowledge. We were
somewhat surprised by the pattern for the correla-
tion with human ratings and the Text model simi-
larities which drops for layer 5. We suspect it may
be caused by the model at this point in the layer
hierarchy being strongly tuned to the specifics of
the COCO dataset. To test this, we checked the
correlations with COCO Text embeddings on val-
idation sentences from the COCO dataset instead
of SICK. These increased monotonically, in sup-
port of our conjecture.

4.6 Homonym disambiguation

Next we simulate the task of distinguishing be-
tween pairs of homonyms, i.e. words with the
same acoustic form but different meaning. We
group the words in the union of the training and
validation data of the COCO dataset by their pho-
netic transcription. We then pick pairs of words
which have the same pronunciation but different
spelling, for example suite/sweet. We impose the
following conditions: (a) both forms appear more
than 20 times, (b) the two forms have different
meaning (i.e. they are not simply variant spellings
like theater/theatre), (c) neither form is a func-
tion word, and (d) the more frequent form con-
stitutes less than 95% of the occurrences. This

620



gives us 34 word pairs. For each pair we gener-
ate a binary classification task by taking all the ut-
terances where either form appears, using average
input vectors, utterance embeddings, and average
unit activations as features. Instances for all fea-
ture sets are normalized to unit L2 norm.

For each task and feature set we run strati-
fied 10-fold cross validation using Logistic Re-
gression to predict which of the two words the
utterance contains. Figure 7 shows, for each
pair, the relative error reduction of each feature
set with respect to the majority baseline. There
is substantial variation across word pairs, but
overall the task becomes easier as the features
come from higher layers in the network. Some
forms can be disambiguated with very high accu-
racy (e.g. sale/sail, cole/coal, pairs/pears), while
some others cannot be distinguished at all (peak-
ing/peeking, great/grate, mantle/mantel). We ex-
amined the sentences containing the failing forms,
and found out that almost all occurrences of peak-
ing and mantle were misspellings of peeking and
mantel, which explains the impossibility of disam-
biguating these cases.

5 Conclusion

We present a multi-layer recurrent highway net-
work model of language acquisition from visually
grounded speech signal. Through detailed analy-
sis we uncover how information in the input sig-
nal is transformed as it flows through the network:
formal aspects of language such as word identities
that not directly present in the input are discovered
and encoded low in the layer hierarchy, while se-
mantic information is most strongly expressed in
the topmost layers.

Going forward we would like to compare the
representations learned by our model to the brain
activity of people listening to speech in order to
determine to what extent the patterns we found
correspond to localized processing in the human
cortex. This will hopefully lead to a better under-
standing of language learning and processing by
both artificial and neural networks.

Acknowledgements

We would like to thank David Harwath for mak-
ing the Flickr8k Audio Caption Corpus publicly
available.

References
Yossi Adi, Einat Kermany, Yonatan Belinkov, Ofer

Lavi, and Yoav Goldberg. 2016. Fine-grained anal-
ysis of sentence embeddings using auxiliary predic-
tion tasks. arXiv preprint arXiv:1608.04207 .

Eneko Agirre, Mona Diab, Daniel Cer, and Aitor
Gonzalez-Agirre. 2012. Semeval-2012 task 6: A pi-
lot on semantic textual similarity. In Proceedings of
the First Joint Conference on Lexical and Compu-
tational Semantics. Association for Computational
Linguistics, volume 2, pages 385–393.

Raffaella Bernardi, Ruket Cakici, Desmond Elliott,
Aykut Erdem, Erkut Erdem, Nazli Ikizler-Cinbis,
Frank Keller, Adrian Muscat, and Barbara Plank.
2016. Automatic description generation from im-
ages: A survey of models, datasets, and evaluation
measures. arXiv preprint arXiv:1601.03896 .

Grzegorz Chrupała, Akos Kádár, and Afra Alishahi.
2015. Learning language through pictures. In Pro-
ceedings of the 53rd Annual Meeting of the Associa-
tion for Computational Linguistics.

Grzegorz Chrupała, Lieke Gelderloos, and Afra
Alishahi. 2017. Synthetically spoken COCO.
https://doi.org/10.5281/zenodo.400926.

Afsaneh Fazly, Afra Alishahi, and Suzanne Steven-
son. 2010. A probabilistic computational model of
cross-situational word learning. Cognitive Science:
A Multidisciplinary Journal 34(6):1017–1063.

Michael C. Frank, Noah D. Goodman, and Joshua B.
Tenenbaum. 2007. A Bayesian framework for cross-
situational word-learning. In Advances in Neural In-
formation Processing Systems. volume 20.

Lieke Gelderloos and Grzegorz Chrupała. 2016. From
phonemes to images: levels of representation in
a recurrent neural model of visually-grounded lan-
guage learning. In Proceedings of COLING 2016,
the 26th International Conference on Computational
Linguistics: Technical Papers.

David Harwath and James Glass. 2015. Deep multi-
modal semantic embeddings for speech and images.
In IEEE Automatic Speech Recognition and Under-
standing Workshop.

David Harwath and James R Glass. 2017. Learn-
ing word-like units from joint audio-visual analysis.
arXiv preprint arXiv:1701.07481 .

David Harwath, Antonio Torralba, and James Glass.
2016. Unsupervised learning of spoken language
with visual context. In Advances in Neural Infor-
mation Processing Systems. pages 1858–1866.

Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian
Sun. 2015. Deep residual learning for image recog-
nition. arXiv:1512.03385 .

621



Micah Hodosh, Peter Young, and Julia Hockenmaier.
2013. Framing image description as a ranking task:
Data, models and evaluation metrics. Journal of Ar-
tificial Intelligence Research 47:853–899.

Ákos Kádár, Grzegorz Chrupała, and Afra Alishahi.
2016. Representation of linguistic form and
function in recurrent neural networks. CoRR
abs/1602.08952.

Andrej Karpathy and Li Fei-Fei. 2015. Deep visual-
semantic alignments for generating image descrip-
tions. In Proceedings of the IEEE Conference on
Computer Vision and Pattern Recognition. pages
3128–3137.

Diederik P. Kingma and Jimmy Ba. 2014. Adam:
A method for stochastic optimization. CoRR
abs/1412.6980.

Angeliki Lazaridou, Grzegorz Chrupała, Raquel
Fernández, and Marco Baroni. 2016. Multimodal
semantic learning from child-directed input. In
The 15th Annual Conference of the North American
Chapter of the Association for Computational Lin-
guistics: Human Language Technologies.

Jiwei Li, Will Monroe, and Dan Jurafsky. 2016. Un-
derstanding neural networks through representation
erasure. arXiv preprint arXiv:1612.08220 .

Tsung-Yi Lin, Michael Maire, Serge Belongie, James
Hays, Pietro Perona, Deva Ramanan, Piotr Dollár,
and C Lawrence Zitnick. 2014. Microsoft coco:
Common objects in context. In Computer Vision–
ECCV 2014, Springer, pages 740–755.

Marco Marelli, Stefano Menini, Marco Baroni, Luisa
Bentivogli, Raffaella Bernardi, and Roberto Zam-
parelli. 2014. A sick cure for the evaluation of com-
positional distributional semantic models. In LREC.
pages 216–223.

Yajie Miao, Jinyu Li, Yongqiang Wang, Shi-Xiong
Zhang, and Yifan Gong. 2016. Simplifying long
short-term memory acoustic models for fast training
and decoding. In IEEE International Conference on
Acoustics, Speech and Signal Processing (ICASSP).
IEEE, pages 2284–2288.

Aaron van den Oord, Nal Kalchbrenner, and Koray
Kavukcuoglu. 2016. Pixel recurrent neural net-
works. arXiv preprint arXiv:1601.06759 .

Deb K Roy and Alex P Pentland. 2002. Learning words
from sights and sounds: a computational model.
Cognitive Science 26(1):113 – 146.

Olga Russakovsky, Jia Deng, Hao Su, Jonathan Krause,
Sanjeev Satheesh, Sean Ma, Zhiheng Huang, An-
drej Karpathy, Aditya Khosla, Michael Bernstein,
Alexander C. Berg, and Li Fei-Fei. 2014. ImageNet
Large Scale Visual Recognition Challenge.

Karen Simonyan and Andrew Zisserman. 2014. Very
deep convolutional networks for large-scale image
recognition. CoRR abs/1409.1556.

Jeffrey M. Siskind. 1996. A computational study of
cross-situational techniques for learning word-to-
meaning mappings. Cognition 61(1-2):39–91.

Gabriel Synnaeve, Maarten Versteegh, and Emmanuel
Dupoux. 2014. Learning words from images and
speech. In NIPS Workshop on Learning Semantics,
Montreal, Canada.

Zhiyuan Tang, Ying Shi, Dong Wang, Yang Feng,
and Shiyue Zhang. 2016. Memory visualization for
gated recurrent neural networks in speech recogni-
tion. arXiv preprint arXiv:1609.08789 .

Ivan Vendrov, Ryan Kiros, Sanja Fidler, and Raquel
Urtasun. 2015. Order-embeddings of images and
language. arXiv preprint arXiv:1511.06361 .

Chen Yu and Dana H Ballard. 2004. A multimodal
learning interface for grounding spoken language in
sensory perceptions. ACM Transactions on Applied
Perception (TAP) 1(1):57–80.

Bolei Zhou, Agata Lapedriza, Jianxiong Xiao, Anto-
nio Torralba, and Aude Oliva. 2014. Learning deep
features for scene recognition using places database.
In Z. Ghahramani, M. Welling, C. Cortes, N. D.
Lawrence, and K. Q. Weinberger, editors, Advances
in Neural Information Processing Systems 27, Cur-
ran Associates, Inc., pages 487–495.

Julian Georg Zilly, Rupesh Kumar Srivastava,
Jan Koutnı́k, and Jürgen Schmidhuber. 2016.
Recurrent highway networks. arXiv preprint
arXiv:1607.03474 .

622


	Representations of language in a model of visually grounded speech signal

