












































Implicit Deep Latent Variable Models for Text Generation


Proceedings of the 2019 Conference on Empirical Methods in Natural Language Processing
and the 9th International Joint Conference on Natural Language Processing, pages 3946–3956,
Hong Kong, China, November 3–7, 2019. c©2019 Association for Computational Linguistics

3946

Implicit Deep Latent Variable Models for Text Generation

Le Fang†, Chunyuan Li§, Jianfeng Gao§, Wen Dong†, Changyou Chen†
†University at Buffalo, §Microsoft Research, Redmond
{lefang, wendong, changyou}@buffalo.edu

{chunyl, jfgao}@microsoft.com

Abstract

Deep latent variable models (LVM) such as
variational auto-encoder (VAE) have recently
played an important role in text generation.
One key factor is the exploitation of smooth
latent structures to guide the generation. How-
ever, the representation power of VAEs is lim-
ited due to two reasons: (1) the Gaussian as-
sumption is often made on the variational pos-
teriors; and meanwhile (2) a notorious “poste-
rior collapse” issue occurs. In this paper, we
advocate sample-based representations of vari-
ational distributions for natural language, lead-
ing to implicit latent features, which can pro-
vide flexible representation power compared
with Gaussian-based posteriors. We further de-
velop an LVM to directly match the aggregated
posterior to the prior. It can be viewed as a nat-
ural extension of VAEs with a regularization
of maximizing mutual information, mitigating
the “posterior collapse” issue. We demonstrate
the effectiveness and versatility of our models
in various text generation scenarios, including
language modeling, unaligned style transfer,
and dialog response generation. The source
code to reproduce our experimental results is
available on GitHub1.

1 Introduction

Deep latent variable models (LVM) such as varia-
tional auto-encoder (VAE) (Kingma and Welling,
2013; Rezende et al., 2014) are successfully ap-
plied for many natural language processing tasks,
including language modeling (Bowman et al., 2015;
Miao et al., 2016), dialogue response generation
(Zhao et al., 2017b), controllable text generation
(Hu et al., 2017) and neural machine translation
(Shah and Barber, 2018) etc. One advantage of
VAEs is the flexible distribution-based latent rep-
resentation. It captures holistic properties of in-
put, such as style, topic, and high-level linguis-

1https://github.com/fangleai/
Implicit-LVM

tic/semantic features, which further guide the gen-
eration of diverse and relevant sentences.

However, the representation capacity of VAEs
is restrictive due to two reasons. The first reason
is rooted in the assumption of variational posteri-
ors, which usually follow spherical Gaussian dis-
tributions with diagonal co-variance matrices. It
has been shown that an approximation gap gener-
ally exists between the true posterior and the best
possible variational posterior in a restricted fam-
ily (Cremer et al., 2018). Consequently, the gap
may militate against learning an optimal genera-
tive model, as its parameters may be always up-
dated based on sub-optimal posteriors (Kim et al.,
2018). The second reason is the so-called poste-
rior collapse issue, which occurs when learning
VAEs with an auto-regressive decoder (Bowman
et al., 2015). It produces undesirable outcomes:
the encoder yields meaningless posteriors that are
very close to the prior, while the decoder tends
to ignore the latent codes in generation (Bowman
et al., 2015). Several attempts have been made to
alleviate this issue (Bowman et al., 2015; Higgins
et al., 2017; Zhao et al., 2017a; Fu et al., 2019; He
et al., 2019).

These two seemingly unrelated issues are stud-
ied independently. In this paper, we argue that
the posterior collapse issue is partially due to the
restrictive Gaussian assumption, as it limits the op-
timization space of the encoder/decoder in a given
distribution family. (i) To break the assumption,
we propose to use sample-based representations
for natural language, thus leading to implicit latent
features. Such a representation is much more ex-
pressive than Gaussian-based posteriors. (ii) This
implicit representation allows us to extend VAE
and develop new LVM that further mitigate the
posterior collapse issue. It represents all the sen-
tences in the dataset as posterior samples in the
latent space, and matches the aggregated posterior
samples to the prior distribution. Consequently,

https://github.com/fangleai/Implicit-LVM
https://github.com/fangleai/Implicit-LVM


3947

latent features are encouraged to cooperate and be-
have diversely to capture meaningful information
for each sentence.

However, learning with implicit representations
faces one challenge: it is intractable to evaluate
the KL divergence term in the objectives. We over-
come the issue by introducing a conjugate-dual
form of the KL divergence (Rockafellar et al., 1966;
Dai et al., 2018). It facilitates learning via training
an auxiliary dual function. The effectiveness of our
models is validated by producing consistently state-
of-the-art results on a broad range of generation
tasks, including language modeling, unsupervised
style transfer, and dialog response generation.

2 Preliminaries

When applied to text generation, VAEs (Bowman
et al., 2015) consist of two parts, a generative
network (decoder) and an inference network (en-
coder). Given a training dataset D = {xi}|D|i=1,
where xi = [x1i, · · · , xT i] represents ith sentence
of length T . Starting from a prior distribution
p(z), VAE generates a sentence x using the deep
generative network pθ(x|z), where θ is the net-
work parameter. Therefore, the joint distribution
pθ(x, z) is defined as p(z)pθ(x|z). The prior p(z)
is typically assumed as a standard multivariate
Gaussian. Due to the sequential nature of natu-
ral language, the decoder pθ(x|z) takes an auto-
regressive form pθ(x|z) =

∏T
t=1 pθ(xt|x<t, z).

The goal of model training is to maximize the
marginal data log-likelihood Ex∼Dlogpθ(x).

However, it is intractable to perform posterior in-
ference. Anφ-parameterized encoder is introduced
to approximate pθ(z|x) ∝ pθ(x|z)p(z) with a
variational distribution qφ(z|x). Variational in-
ference is employed for VAE learning, yielding
following evidence lower bound (ELBO):

Ex∼Dlogpθ(x) ≥ L1 = L2 with
L1 = LE + LR where (1)

LE = Ex∼D
[
Ez∼qφ(z|x)logpθ(x|z)

]
(2)

LR = Ex∼D [−KL (qφ(z|x) ‖ p(z))] (3)
L2 = Ex∼Dlogpθ(x) + LG where (4)
LG = −Ex∼DKL (qφ(z|x) ‖ pθ(z|x)) (5)

Note that L1 and L2 provide two different views
for the VAE objective:

• L1 consists of a reconstruction error term
LE and a KL divergence regularization term

LR. With a strong auto-regressive decoder
pθ(x|z), the objective tends to degenerate
all encoding distribution qφ(z|x) to the prior,
causing LR → 0, i.e., the posterior collapse
issue.

• L2 indicates that VAE requests a flexible en-
coding distribution family to minimize the
approximation gap LG between the true pos-
terior and the best possible encoding distri-
bution. This motivates us to perform more
flexible posterior inference with implicit rep-
resentations.

3 The Proposed Models

We introduce a sample-based latent representa-
tion for natural language, and develop two models
that leverage its advantages. (1) When replacing
the Gaussian variational distributions with sample-
based distributions in VAEs, we derive implicit
VAE (iVAE). (2) We further extend VAE to maxi-
mize mutual information between latent represen-
tations and observed sentences, leading to a variant
termed as iVAEMI.

3.1 Implicit VAE
Implicit Representations Instead of assuming
an explicit density form such as Gaussian, we de-
fine a sampling mechanism to represent qφ(z|x)
as a set of sample {zx,i}Mi=1, through the encoder
as

zx,i = Gφ(x, �i), �i ∼ q(�) (6)

where the i-th sample is drawn from a neural net-
workGφ that takes (x, �i) as input; q(�) is a simple
distribution such as standard Gaussian. It is diffi-
cult to naively combine the random noise � with the
sentence x (a sequence of discrete tokens) as the
input ofGφ. Our solution is to concatenate noise �i
with hidden representations h of x. h is generated
using a LSTM encoder, as illustrated in Figure 1.

Dual form of KL-divergence Though theoreti-
cally promising, the implicit representations in (6)
render difficulties in optimizing the KL term LR
in (3), as the functional form is no longer tractable
with implicit qφ(z|x). We resort to evaluating its
dual form based on Fenchel duality theorem (Rock-
afellar et al., 1966; Dai et al., 2018):

KL (qφ(z|x) ‖ p(z)) (7)
=maxνEz∼qφ(z|x)νψ(x, z)− Ez∼p(z)exp(νψ(x, z)),



3948

Figure 1: Illustration of the proposed implicit LVMs. ν(x, z) is used in iVAE, and ν(z) is used in iVAEMI. In this
example, the piror is p(z) = N (0, 1), the sample-based aggregated posterior q(z) =

∫
qφ(z|x)q(x)dx for four

observations is shown, where the posterior qφ(z|x) for each observation is visualized in a different color.

where νψ(x, z) is an auxiliary dual function, pa-
rameterized by a neural network with weights ψ.
By replacing the KL term with this dual form, the
implicit VAE has the following objective:

LiVAE = Ex∼DEz∼qφ(z|x)logpθ(x|z)
− Ex∼DEz∼qφ(z|x)νψ(x, z)
+ Ex∼DEz∼p(z)exp(νψ(x, z)), (8)

Training scheme Implicit VAE inherits the end-
to-end training scheme of VAEs with extra work
on training the auxiliary network νψ(x, z):

• Sample a mini-batch of xi ∼ D, �i ∼ q(�),
and generate zxi,�i = G(xi, �i;φ); Sample a
mini-batch of zi ∼ p(z).

• Update ψ in νψ(x, z) to maximize∑
i

νψ(xi, zxi,�i)−
∑
i

exp(νψ(xi, zi)) (9)

• Update parameters {φ,θ} to maximize∑
i

logpθ(xi|zxi,�i)−
∑
i

νψ(xi, zxi,�i)

(10)

In practice, we implement νψ(x, z) with a multi-
layer perceptron (MLP), which takes the concate-
nation of h and z. In another word, the auxiliary
network distinguishes between (x, zx) and (x, z),
where zx is drawn from the posterior and z is
drawn from the prior, respectively. We found the
MLP-parameterized auxiliary network converges
faster than LSTM encoder and decoder (Hochre-
iter and Schmidhuber, 1997). This means that the
auxiliary network practically provides an accurate
approximation to the KL regularization LR.

3.2 Mutual Information Regularized iVAE

It is noted the inherent deficiency of the original
VAE objective in (3): the KL divergence regular-
ization term matches each posterior distribution
independently to the same prior. This is prone
to posterior collapse in text generation, due to a
strong auto-regressive decoder pθ(x|z). When se-
quentially generating xt, the model learns to solely
rely on the ground-truth [x1, · · · , xt−1], and ignore
the dependency from z (Fu et al., 2019). It re-
sults in the learned variational posteriors qφ(z|x)
to exactly match p(z), without discriminating data
x.

To better regularize the latent space, we propose
to replace LR = Ex∼D [−KL (qφ(z|x) ‖ p(z))]
in (3), with the following KL divergence:

−KL (qφ(z) ‖ p(z)) , (11)

where qφ(z) =
∫
q(x)qφ(z|x)dx is the aggre-

gated posterior, q(x) is the empirical data distri-
bution for the training dataset D. The integral is
estimated by ancestral sampling in practice, i.e.
we first sample x from dataset and then sample
z ∼ qφ(z|x).

In (11), variational posterior is regularized as a
whole qφ(z), encouraging posterior samples from
different sentences to cooperate to satisfy the ob-
jective. It implies a solution that each sentence is
represented as a local region in the latent space, the
aggregated representation of all sentences match
the prior; This avoids the degenerated solution from
(3) that the feature representation of individual sen-
tence spans over the whole space.

Connection to mutual information The pro-
posed latent variable model coincides with (Zhao
et al., 2018, 2017a) where mutual information is
introduced into the optimization, based on the fol-
lowing decomposition result (Please see detailed



3949

proof in Appendix A):

−KL (qφ(z) ‖ p(z)) = I(x, z)
− ExKL (qφ(z|x) ‖ p(z)) ,

where I(x, z) is the mutual information between
z and x under the joint distribution qφ(x, z) =
q(x)qφ(z|x). Therefore, the objective in (11) also
maximizes the mutual information between indi-
vidual sentences and their latent features. We term
the new LVM objective as iVAEMI:

LiVAEMI = Ex∼DEz∼qφ(z|x)logpθ(x|z)
− KL (qφ(z) ‖ p(z)) (12)

Training scheme Note that the aggregated pos-
terior qφ(z) is also a sample-based distribution.
Similarly, we evaluate (12) through its dual form:

KL (qφ(z) ‖ p(z)) (13)
=maxνEz∼qφ(z)νψ(z)− Ez∼p(z)exp(νψ(z)).

Therefore, iVAEMI in (12) can be written as:

LiVAEMI = Ex∼DEz∼qφ(z|x)logpθ(x|z) (14)
− Ez∼qφ(z)νψ(z) + Ez∼p(z)exp(νψ(z)),

where the auxiliary network νψ(z) is parameter-
ized as a neural network. Different from iVAE,
νψ(z) in iVAEMI only takes posterior samples as
input. The training algorithm is similar to iVAE
in Section 3.1, except a different auxiliary network
νψ(z). In Appendix B, we show the full algorithm
of iVAEMI.

We illustrate the proposed methods in Figure 1.
Note that both iVAE and iVAEMI share the same
model architecture, except a different auxiliary net-
work ν.

4 Related Work
4.1 Solutions to posterior collapse
Several attempts have been made to alleviate the
posterior collapse issue. The KL annealing scheme
in language VAEs has been first used in (Bowman
et al., 2015). An effective cyclical KL annealing
schedule is used in (Fu et al., 2019), where the
KL annealing process is repeated multiple times.
KL term weighting scheme is also adopted in β-
VAE (Higgins et al., 2017) for disentanglement. On
model architecture side, dilated CNN was consid-
ered to replace auto-regressive LSTMs for decod-
ing (Yang et al., 2017). The bag-of-word auxiliary

loss was proposed to improve the dependence on
latent representations in generation (Zhao et al.,
2017b). More recently, lagging inference proposes
to aggressively update encoder multiple times be-
fore a single decoder update (He et al., 2019). Semi-
amortized VAE refines variational parameters from
an amortized encoder per instance with stochastic
variational inference (Kim et al., 2018).

All these efforts utilize the Gaussian-based
forms for posterior inference. Our paper is among
the first ones to attribute posterior collapse issue to
the restrictive Gaussian assumption, and advocate
more flexible sample-based representations.

4.2 Implicit Feature Learning

Sample-based distributions, as well as implicit fea-
tures, have been widely used in representation
learning (Donahue et al., 2017; Li et al., 2017a).
Vanilla autoencoders learn point masses of latent
features rather than their distributions. Adversarial
variational Bayes introduces an auxiliary discrimi-
nator network like GANs (Goodfellow et al., 2014;
Makhzani et al., 2015) to learn almost arbitrarily
distributed latent variables (Mescheder et al., 2017;
Pu et al., 2017b). We explore the similar spirit
in the natural language processing (NLP) domain.
Amortized MCMC and particle based methods are
introduced for LVM learning in (Li et al., 2017d;
Pu et al., 2017a; Chen et al., 2018). Coupled varia-
tional Bayes (Dai et al., 2018) emphasizes an opti-
mization embedding, i.e., a flow of particles, in a
general setting of non-parametric variational infer-
ence. It also utilizes similar dual form with auxil-
iary function νψ(x, z) to evaluate KL divergence.
Adversarially regularized autoencoders (Makhzani
et al., 2015; Kim et al., 2017) use similar objec-
tives with iVAEs, in the form of a reconstruction
error plus a specific regularization evaluated with
implicit samples. Mutual information has also been
considered into regularization in (Zhao et al., 2018,
2017a) to obtain more informative representations.

Most previous works focus on image domain.
It is largely unexplored in NLP. Further, the auto-
regressive decoder renders an additional challenge
when applying implicit latent representations. Ad-
versarial training with samples can be empirically
unstable, and slow even applying recent stabiliza-
tion techniques in GANs (Arjovsky et al., 2017;
Gulrajani et al., 2017). To the best of our knowl-
edge, this paper presents the first to effectively ap-
ply implicit feature representations, to NLP.



3950

Dataset PTB Yahoo Yelp

num. sents. 42,000 100,000 100,000
min. len. 2 21 21
max. len. 78 201 201
avg. len. 21.9 79.9 96.7

Table 1: Statistics of datasets for language modeling.

5 Experiments

In this section, the effectiveness of our methods
is validated by largely producing state-of-the-art
metrics on a broad range of text generation tasks
under various scenarios.

5.1 Language Modeling
Datasets. We consider three public datasets, the
Penn Treebank (PTB) (Marcus et al., 1993; Bow-
man et al., 2015), Yahoo, and Yelp corpora (Yang
et al., 2017; He et al., 2019). PTB is a relatively
small dataset with sentences of varying lengths,
whereas Yahoo and Yelp contain larger amounts
of with long sentences. Detailed statistics of these
datasets are shown in Table 1.

Settings We implement both encoder and de-
coder as one-layer LSTM. As illustrated in Fig-
ure 1, concatenation of the last hidden state of the
encoder LSTM and a Gaussian noise is fed into a
MLP to draw a posterior sample. When decoding,
a latent sample is fed into a MLP to produce the
initial hidden state of the decoder LSTM. A KL-
term annealing scheme is also used (Bowman et al.,
2015). We list more detailed hyper-parameters and
architectures in Appendix C.1.2.

Baselines. We compare with several state-of-the-
art VAE language modeling methods, including (1)
VAEs with a monotonically KL-annealing sched-
ule (Bowman et al., 2015); (2) β-VAE (Higgins
et al., 2017), VAEs with a small penalty on KL
term scaled by β; (3) SA-VAE (Kim et al., 2018),
mixing instance-specific variational inference with
amortized inference; (4) Cyclical VAE (Fu et al.,
2019) that periodically anneals the KL term; (5)
Lagging VAE, which aggressively updates encoder
multiple times before a single decoder update.

Evaluation metrics. Two categories of metrics
are used to study VAEs for language modeling:

• To characterize the modeling ability of the ob-
served sentences, we use the negative ELBO

Methods -ELBO↓ PPL↓ KL↑ MI↑ AU↑
Dataset: PTB

VAE 102.6 108.26 1.08 0.8 2
β(0.5)-VAE 104.5 117.92 7.50 3.1 5

SA-VAE 102.6 107.71 1.23 0.7 2
Cyc-VAE 103.1 110.50 3.48 1.8 5

iVAE 87.6 54.46 6.32 3.5 32
iVAEMI 87.2 53.44 12.51 12.2 32

Dataset: Yahoo
VAE 328.6 61.21 0.0 0.0 0

β(0.4)-VAE 328.7 61.29 6.3 2.8 8
SA-VAE 327.2 60.15 5.2 2.7 10
Lag-VAE 326.7 59.77 5.7 2.9 15

iVAE 309.5 48.22 8.0 4.4 32
iVAEMI 309.1 47.93 11.4 10.7 32

Dataset: Yelp
VAE 357.9 40.56 0.0 0.0 0

β(0.4)-VAE 358.2 40.69 4.2 2.0 4
SA-VAE 355.9 39.73 2.8 1.7 8
Lag-VAE 355.9 39.73 3.8 2.4 11

iVAE 348.2 36.70 7.6 4.6 32
iVAEMI 348.7 36.88 11.6 11.0 32

Table 2: Language modeling on three datasets.

as the sum of reconstruction loss and KL term,
as well as perplexity (PPL).
• Compared with traditional neural language

models, VAEs has its unique advantages
in feature learning. To measure the qual-
ity of learned features, we consider (1) KL:
KL (qφ(z|x) ‖ p(z)); (2) Mutual informa-
tion (MI) I(x, z) under the joint distribu-
tion qφ(x, z); (3) Number of active units
(AU) of latent representation. The activ-
ity of a latent dimension z is measured as
Az= Covx

(
Ez∼q(z|x) [z]

)
, which is defined

as active if Az> 0.01.

The evaluation of implicit LVMs is unexplored
in language models, as there is no analytical forms
for the KL term. We consider to evaluate both
KL (qφ(z) ‖ p(z)) and KL (qφ(z|x) ‖ p(z)) by
training a fully connected ν network in Eq. (7) and
(13). To avoid the inconsistency between ν(x, z)
and ν(z) networks due to training, we train them
using the same data and optimizer in every itera-
tion. We evaluate each distribution qφ(z|x) with
128 code samples per x.

We report the results in Table 2. A better lan-
guage model would pursue a lower negative ELBO
(also lower reconstruction errors, lower PPL), and
make sufficient use of the latent space (i.e., main-
tain relatively high KL term, higher mutual infor-



3951

Dataset
PTB Yahoo Yelp

Re.↓ Abs.↓ Re.↓ Abs.↓ Re.↓ Abs.↓

VAE/β- 1.0 1.3 1.0 5.3 1.0 5.7
SA-VAE 5.5 7.1 9.9 52.9 10.3 59.3
Lag-VAE - - 2.2 11.7 3.7 21.4

iVAEs 1.4 1.8 1.3 6.9 1.3 7.5

Table 3: Total training time in hours: absolute time and
relative time versus VAE.

t =0 in new york the company declined comment
t =0.1 in new york the company declined comment
t =0.2 in new york the transaction was suspended
t =0.3 in the securities company said yesterday
t =0.4 in other board the transaction had disclosed
t =0.5 other of those has been available
t =0.6 both of companies have been unchanged
t =0.7 both men have received a plan to restructure
t =0.8 and to reduce that it owns
t =0.9 and to continue to make prices
t =1 and they plan to buy more today

Table 4: Interpolating latent representation.

mation and more active units). Under all these
metrics, the proposed iVAEs achieve much better
performance. The posterior collapse issue is largely
alleviated as indicated by the improved KL and MI
values, especially with iVAEMI which directly takes
mutual information into account.

The comparison on training time is shown in
Table 3. iVAE and iVAEMI requires updating an
auxiliary network, it spends 30% more time than
traditional VAEs. This is more efficient than SA-
VAE and Lag-VAE.

Latent space interpolation. One favorable prop-
erty of VAEs (Bowman et al., 2015; Zhao et al.,
2018) is to provide smooth latent representations
that capture sentence semantics. We demonstrate
this by interpolating two latent feature, each of
which represents a unique sentence. Table 4 shows
the generated examples. We take two sentences
x1 and x2, and obtain their latent features as the
sample-averaging results for z1 and z2, respec-
tively, from the implicit encoder, and then greed-
ily decode conditioned on the interpolated feature
zt = z1 · (1− t)+z2 · t with t increased from 0 to
1 by a step size of 0.1. It generates sentences with
smooth semantic evolution.

Improved Decoder. One might wonder whether
the improvements come from simply having a more
flexible encoder during evaluation, rather than from

Model Forward↓ Reverse↓

VAE 18494 10149
Cyc-VAE 3390 5587

AE 672 2589
β(0)-VAE 625 1897
β(0.5)-VAE 939 4078

SA-VAE 341 10651
iVAE 116 1520

iVAEMI 134 1137

Table 5: Forward and reverse PPL on PTB.

utilizing high-quality latent features, and learning a
better decoder. We use PTB to confirm our findings.
We draw samples from the prior p(z), and greedily
decode them using the trained decoder. The quality
of the generated text is evaluated by an external li-
brary “KenLM Language Model Toolkit” (Heafield
et al., 2013) with two metrics (Kim et al., 2017):
(1) Forward PPL: the fluency of the generated text
based on language models derived from the PTB
training corpus; (2) Reverse PPL: the fluency of
PTB corpus based on language model derived from
the generated text, which measures the extent to
which the generations are representative of the PTB
underlying language model. For both the PPL num-
bers, the lower the better. We use n=5 for n-gram
language models in “KenLM”.

As shown in Table 5, implicit LVMs outperform
others in both PPLs, which confirms that the im-
plicit representation can lead to better decoders.
The vanilla VAE model performs the worst. This
is expected, as the posterior collapse issue results
in poor utilization of a latent space. Besides, we
can see that iVAEMI generates comparably fluent
but more diverse text than pure iVAE, from the
lower reverse PPL values. This is reasonable, due
to the ability of iVAEMI to encourage diverse latent
samples per sentence with the aggregated regular-
ization in the latent space.

5.2 Unaligned style transfer

We next consider the task of unaligned style trans-
fer, which represents a scenario to generate text
with desired specifications. The goal is to control
one style aspect of a sentence that is independent
of its content. We consider non-parallel corpora
of sentences, where the sentences in two corpora
have the same content distribution but with differ-
ent styles, and no paired sentence is provided.



3952

Model Extension. The success of this task de-
pends on the exploitation of the distributional equiv-
alence of content to learn sentiment independent
content code and decoding it to a different style.
To ensure such independence, we extend iVAEMI
by adding a sentiment classifier loss to its objective
(14), similar to the previous style transfer meth-
ods (Shen et al., 2017; Kim et al., 2017). Let y be
the style attribute, xp and xn (with corresponding
features zp, zn) be sentences with positive and neg-
ative sentiments , respectively. The style classifier
loss Lclass(zp, zn) is the cross entropy loss of a
binary classifier.

The classifier and encoder are trained adversar-
ially: (1) the classifier is trained to distinguish
latent features with different sentiments; (2) the
encoder is trained to fool the classifier in order to
remove distinctions of content features from sen-
timents. In practice, the classifier is implemented
as a MLP. We implement two separate decoder
LSTMs for clean sentiment decoding: one for pos-
itive p(x|z, y = 1), and one for negative senti-
ment p(x|z, y = 0). The prior p(z) is also imple-
mented as an implicit distribution, via transforming
noise from a standard Gaussian through a MLP.
Appendix C.2.2 lists more details.

Baseline. We compare iVAEMI with a state-of-
the-art unaligned sentiment transferer: the adversar-
ially regularized autoencoder (ARAE) (Kim et al.,
2017), which directly regularizes the latent space
with Wasserstein distance measure.

Datasets. Following (Shen et al., 2017), the
Yelp restaurant reviews dataset is processed from
the original Yelp dataset in language modeling. Re-
views with user rating above three are considered
positive, and those below three are considered nega-
tive. The pre-processing allows sentiment analysis
on sentence level with feasible sentiment, ending
up with shorter sentences with each at most 15
words than those in language modeling. Finally,
we get two sets of unaligned reviews: 250K neg-
ative sentences, and 350K positive ones. Other
dataset details are shown in Appendix C.2.1.

Evaluation Metrics. (1) Acc: the accuracy of
transferring sentences into another sentiment mea-
sured by an automatic classifier: the “fasttext” li-
brary (Joulin et al., 2017); (2) BLEU: the consis-
tency between the transferred text and the original;
(3) PPL: the reconstruction perplexity of original
sentences without altering sentiment; (4) RPPL:

Input: it was super dry and had a weird taste to the entire slice .
ARAE: it was super nice and the owner was super sweet and helpful .
iVAEMI: it was super tasty and a good size with the best in the burgh .

Input: so i only had half of the regular fries and my soda .
ARAE: it ’s the best to eat and had a great meal .
iVAEMI: so i had a huge side and the price was great .

Input: i am just not a fan of this kind of pizza .
ARAE: i am very pleased and will definitely use this place .
iVAEMI: i am just a fan of the chicken and egg roll .

Input: i have eaten the lunch buffet and it was outstanding !
ARAE: once again , i was told by the wait and was seated .
iVAEMI: we were not impressed with the buffet there last night .

Input: my favorite food is kung pao beef , it is delicious .
ARAE: my husband was on the phone , which i tried it .
iVAEMI: my chicken was n’t warm , though it is n’t delicious .

Input: overall , it was a very positive dining experience .
ARAE: overall , it was very rude and unprofessional .
iVAEMI: overall , it was a nightmare of terrible experience .

Table 6: Sentiment transfer on Yelp. (Up: From nega-
tive to positive, Down: From positive to negative.)

Model Acc↑ BLEU↑ PPL↓ RPPL↓ Flu↑ Sim↑

ARAE 95 32.5 6.8 395 3.6 3.5
iVAEMI 92 36.7 6.2 285 3.8 3.9

Table 7: Sentiment Transfer on Yelp.

the reverse perplexity that evaluates the training
corpus based on language model derived from the
generated text, which measures the extent to which
the generations are representative of the training
corpus; (5) Flu: human evaluated index on the
fluency of transferred sentences when read alone
(1-5, 5 being most fluent as natural language); (6)
Sim: the human evaluated similarity between the
original and the transferred sentences in terms of
their contents (1-5, 5 being most similar). Note
that the similarity measure doesn’t care sentiment
but only the topic covered by sentences. For hu-
man evaluation, we show 1000 randomly selected
pairs of original and transferred sentences to crowd-
sourcing readers, and ask them to evaluate the ”Flu”
and ”Sim” metrics stated above. Each measure is
averaged among crowdsourcing readers.

As shown in Table 7, iVAEMI outperforms
ARAE in metrics except Acc, showing that iVAEMI
captures informative representations, generates
consistently opposite sentences with similar gram-
matical structure and reserved semantic meaning.
Both methods perform successful sentiment trans-
fer as shown by Acc values. iVAEMI achieves a
little lower Acc due to much more content reserv-
ing, even word reserving, of the source sentences.



3953

Table 6 presents some examples. In each box, we
show the source sentence, the transferred sentence
by ARAE and iVAEMI, respectively. We observe
that ARAE usually generates new sentences that
miss the content of the source, while iVAEMI shows
better content-preserving.

5.3 Dialog response generation

We consider the open-domain dialog response gen-
eration task, where we need to generate a natural
language response given a dialog history. It is cru-
cial to learn a meaningful latent feature represen-
tation of the dialog history in order to generate a
consistent, relevant, and contentful response that is
likely to drive the conversation (Gao et al., 2019).

Datasets. We consider two mainstream datasets
in recent studies (Zhao et al., 2017b, 2018; Fu et al.,
2019; Gu et al., 2018): Switchboard (Godfrey
and Holliman, 1997) and Dailydialog (Li et al.,
2017c). Switchboard contains 2,400 two-way
telephone conversations under 70 specified top-
ics. Dailydialog has 13,118 daily conversations
for a English learner. We process each utterance
as the response of previous 10 context utterances
from both speakers. The datasets are separated
into training, validation, and test sets as conven-
tion: 2316:60:62 for Switchboard and 10:1:1 for
Dailydialog, respectively.

Model Extension. We adapt iVAEMI by integrat-
ing the context embedding c into all model com-
ponents. The prior p(z|c) is defined as an implicit
mapping between context embedding c and prior
samples, which is not pre-fixed but learned together
with the variational posterior for more modeling
flexibility. The encoder q(z|x, c), auxiliary dual
function νψ(z, c) and decoder p(x|c, z) depend
on context embedding c as well. Both encoder
and decoder are implemented as GRUs. The ut-
terance encoder is a bidirectional GRU with 300
hidden units in each direction. The context encoder
and decoder are both GRUs with 300 hidden units.
Appendix C.3.1 presents more training details.

Baseline. We benchmark representative base-
lines and state-of-the-art approaches, include: Se-
qGAN, a GAN based model for sequence genera-
tion (Li et al., 2017b); CVAE baseline (Zhao et al.,
2017b); dialogue WAE, a conditional Wasserstein
auto-encoder for response generation (Gu et al.,
2018).

Metrics SeqGAN CVAE WAE iVAEMI
Dataset: Switchboard

BLEU-R↑ 0.282 0.295 0.394 0.427
BLEU-P↑ 0.282 0.258 0.254 0.254
BLEU-F1↑ 0.282 0.275 0.309 0.319
BOW-A↑ 0.817 0.836 0.897 0.930
BOW-E↑ 0.515 0.572 0.627 0.670
BOW-G↑ 0.748 0.846 0.887 0.900

Intra-dist1↑ 0.705 0.803 0.713 0.828
Intra-dist2↑ 0.521 0.415 0.651 0.692
Inter-dist1↑ 0.070 0.112 0.245 0.391
Inter-dist2↑ 0.052 0.102 0.413 0.668

Dataset: Dailydialog
BLEU-R↑ 0.270 0.265 0.341 0.355
BLEU-P↑ 0.270 0.222 0.278 0.239
BLEU-F1↑ 0.270 0.242 0.306 0.285
BOW-A↑ 0.907 0.923 0.948 0.951
BOW-E↑ 0.495 0.543 0.578 0.609
BOW-G↑ 0.774 0.811 0.846 0.872

Intra-dist1↑ 0.747 0.938 0.830 0.897
Intra-dist2↑ 0.806 0.973 0.940 0.975
Inter-dist1↑ 0.075 0.177 0.327 0.501
Inter-dist2↑ 0.081 0.222 0.583 0.868

Table 8: Dialog response generation on two datasets.

Evaluation Metrics. We adopt several widely
used numerical metrics to systematically evaluate
the response generation, including BLEU score (Pa-
pineni et al., 2002), BOW Embedding (Liu et al.,
2016) and Distinct (Li et al., 2015), as used in (Gu
et al., 2018). For each testing context, we sample
10 responses from each model.

• BLEU measures how much a generated re-
sponse contains n-gram overlaps with the ref-
erences. We compute 4-gram BLEU. For each
test context, we sample 10 responses from
the models and compute their BLEU scores.
BLEU precision and recall is defind as the
average and maximum scores, respectively
(Zhao et al., 2017b).
• BOW embedding is the cosine similarity of

bag-of-words embeddings between the gener-
ations and the reference. We compute three
different BOW embedding: greedy, average,
and extreme.

• Distinct evaluates the diversity of the gener-
ated responses: dist-n is defined as the ratio
of unique n-grams (n=1,2) over all n-grams in
the generated responses. We evaluate diver-
sities for both within each sampled response
and among all responses as intra-dist and inter-
dist, respectively.



3954

Tables 8 show the performance comparison.
iVAEMI achieves consistent improvement on a ma-
jority of the metrics. Especially, the BOW embed-
dings and Distinct get significantly improvement,
which implies that iVAEMI produces both meaning-
ful and diverse latent representations.

6 Conclusion

We present two types of implicit deep latent vari-
able models, iVAE and iVAEMI. Core to these
two models is the sample-based representation of
the latent features in LVM, in replacement of tra-
ditional Gaussian-based distributions. Extensive
experiments show that the proposed implicit LVM
models consistently outperform the vanilla VAEs
on three tasks, including language modeling, style
transfer and dialog response generation.

Acknowledgments

We acknowledge Yufan Zhou for helpful discus-
sions and the reviewers for their comments.

References

Martı́n Arjovsky, Soumith Chintala, and Léon Bottou.
2017. Wasserstein gan. CoRR, abs/1701.07875.

Samuel R Bowman, Luke Vilnis, Oriol Vinyals, An-
drew M Dai, Rafal Jozefowicz, and Samy Ben-
gio. 2015. Generating sentences from a continuous
space. arXiv preprint arXiv:1511.06349.

Changyou Chen, Chunyuan Li, Liqun Chen, Wen-
lin Wang, Yunchen Pu, and Lawrence Carin. 2018.
Continuous-time flows for efficient inference and
density estimation. ICML.

Chris Cremer, Xuechen Li, and David Duvenaud. 2018.
Inference suboptimality in variational autoencoders.
arXiv preprint arXiv:1801.03558.

Bo Dai, Hanjun Dai, Niao He, Weiyang Liu, Zhen Liu,
Jianshu Chen, Lin Xiao, and Le Song. 2018. Cou-
pled variational bayes via optimization embedding.
In S. Bengio, H. Wallach, H. Larochelle, K. Grau-
man, N. Cesa-Bianchi, and R. Garnett, editors, Ad-
vances in Neural Information Processing Systems
31, pages 9713–9723. Curran Associates, Inc.

Jeff Donahue, Philipp Krähenbühl, and Trevor Darrell.
2017. Adversarial feature learning. ICLR.

Hao Fu, Chunyuan Li, Xiaodong Liu, Jianfeng Gao,
Asli Celikyilmaz, and Lawrence Carin. 2019. Cycli-
cal annealing schedule: A simple approach to miti-
gating kl vanishing. NAACL.

Jianfeng Gao, Michel Galley, and Lihong Li. 2019.
Neural approaches to conversational ai. Founda-
tions and Trends R© in Information Retrieval, 13(2-
3):127–298.

John J Godfrey and Edward Holliman. 1997.
Switchboard-1 release 2. Linguistic Data Con-
sortium, Philadelphia, 926:927.

Ian Goodfellow, Jean Pouget-Abadie, Mehdi Mirza,
Bing Xu, David Warde-Farley, Sherjil Ozair, Aaron
Courville, and Yoshua Bengio. 2014. Generative
adversarial nets. In Z. Ghahramani, M. Welling,
C. Cortes, N. D. Lawrence, and K. Q. Weinberger,
editors, Advances in Neural Information Processing
Systems 27, pages 2672–2680. Curran Associates,
Inc.

Xiaodong Gu, Kyunghyun Cho, Jungwoo Ha, and
Sunghun Kim. 2018. Dialogwae: Multimodal re-
sponse generation with conditional wasserstein auto-
encoder. arXiv preprint arXiv:1805.12352.

Ishaan Gulrajani, Faruk Ahmed, Martin Arjovsky, Vin-
cent Dumoulin, and Aaron Courville. 2017. Im-
proved training of wasserstein gans. In Advances
in Neural Information Processing Systems 30, pages
5769–5779. Arxiv: 1704.00028.

Junxian He, Daniel Spokoyny, Graham Neubig, and
Taylor Berg-Kirkpatrick. 2019. Lagging inference
networks and posterior collapse in variational au-
toencoders. arXiv preprint arXiv:1901.05534.

Kenneth Heafield, Ivan Pouzyrevsky, Jonathan H.
Clark, and Philipp Koehn. 2013. Scalable modi-
fied Kneser-Ney language model estimation. In Pro-
ceedings of the 51st Annual Meeting of the Associa-
tion for Computational Linguistics, pages 690–696,
Sofia, Bulgaria.

Irina Higgins, Loic Matthey, Arka Pal, Christopher
Burgess, Xavier Glorot, Matthew Botvinick, Shakir
Mohamed, and Alexander Lerchner. 2017. beta-vae:
Learning basic visual concepts with a constrained
variational framework. In International Conference
on Learning Representations, volume 3.

Sepp Hochreiter and Jürgen Schmidhuber. 1997.
Long short-term memory. Neural computation,
9(8):1735–1780.

Zhiting Hu, Zichao Yang, Xiaodan Liang, Ruslan
Salakhutdinov, and Eric P Xing. 2017. Toward
controlled generation of text. In Proceedings
of the 34th International Conference on Machine
Learning-Volume 70, pages 1587–1596. JMLR. org.

Armand Joulin, Edouard Grave, Piotr Bojanowski, and
Tomas Mikolov. 2017. Bag of tricks for efficient
text classification. In Proceedings of the 15th Con-
ference of the European Chapter of the Association
for Computational Linguistics: Volume 2, Short Pa-
pers, pages 427–431. Association for Computational
Linguistics.

http://papers.nips.cc/paper/5423-generative-adversarial-nets.pdf
http://papers.nips.cc/paper/5423-generative-adversarial-nets.pdf
https://papers.nips.cc/paper/7159-improved-training-of-wasserstein-gans
https://papers.nips.cc/paper/7159-improved-training-of-wasserstein-gans
https://kheafield.com/papers/edinburgh/estimate_paper.pdf
https://kheafield.com/papers/edinburgh/estimate_paper.pdf


3955

Yoon Kim, Sam Wiseman, Andrew Miller, David Son-
tag, and Alexander Rush. 2018. Semi-amortized
variational autoencoders. In International Confer-
ence on Machine Learning, pages 2683–2692.

Yoon Kim, Kelly Zhang, Alexander M Rush, Yann Le-
Cun, et al. 2017. Adversarially regularized autoen-
coders. arXiv preprint arXiv:1706.04223.

Diederik P Kingma and Max Welling. 2013. Auto-
encoding variational bayes. arXiv preprint
arXiv:1312.6114.

Chunyuan Li, Hao Liu, Changyou Chen, Yuchen Pu,
Liqun Chen, Ricardo Henao, and Lawrence Carin.
2017a. Alice: Towards understanding adversar-
ial learning for joint distribution matching. In Ad-
vances in Neural Information Processing Systems,
pages 5495–5503.

Jiwei Li, Michel Galley, Chris Brockett, Jianfeng Gao,
and Bill Dolan. 2015. A diversity-promoting objec-
tive function for neural conversation models. arXiv
preprint arXiv:1510.03055.

Jiwei Li, Will Monroe, Tianlin Shi, Sébastien Jean,
Alan Ritter, and Dan Jurafsky. 2017b. Adversar-
ial learning for neural dialogue generation. arXiv
preprint arXiv:1701.06547.

Yanran Li, Hui Su, Xiaoyu Shen, Wenjie Li, Ziqiang
Cao, and Shuzi Niu. 2017c. Dailydialog: A man-
ually labelled multi-turn dialogue dataset. arXiv
preprint arXiv:1710.03957.

Yingzhen Li, Richard E Turner, and Qiang Liu. 2017d.
Approximate inference with amortised mcmc. arXiv
preprint arXiv:1702.08343.

Chia-Wei Liu, Ryan Lowe, Iulian V Serban, Michael
Noseworthy, Laurent Charlin, and Joelle Pineau.
2016. How not to evaluate your dialogue system:
An empirical study of unsupervised evaluation met-
rics for dialogue response generation. arXiv preprint
arXiv:1603.08023.

Alireza Makhzani, Jonathon Shlens, Navdeep Jaitly,
Ian Goodfellow, and Brendan Frey. 2015. Adversar-
ial autoencoders. arXiv preprint arXiv:1511.05644.

Mitchell Marcus, Beatrice Santorini, and Mary Ann
Marcinkiewicz. 1993. Building a large annotated
corpus of english: The penn treebank. Computa-
tional Linguistics.

Lars Mescheder, Sebastian Nowozin, and Andreas
Geiger. 2017. Adversarial variational bayes: Uni-
fying variational autoencoders and generative adver-
sarial networks. In Proceedings of the 34th Interna-
tional Conference on Machine Learning-Volume 70,
pages 2391–2400. JMLR. org.

Yishu Miao, Lei Yu, and Phil Blunsom. 2016. Neural
variational inference for text processing. In Interna-
tional conference on machine learning, pages 1727–
1736.

Kishore Papineni, Salim Roukos, Todd Ward, and Wei-
Jing Zhu. 2002. Bleu: a method for automatic eval-
uation of machine translation. In Proceedings of
the 40th annual meeting on association for compu-
tational linguistics, pages 311–318. Association for
Computational Linguistics.

Jeffrey Pennington, Richard Socher, and Christopher
Manning. 2014. Glove: Global vectors for word rep-
resentation. In Proceedings of the 2014 conference
on empirical methods in natural language process-
ing (EMNLP), pages 1532–1543.

Yuchen Pu, Zhe Gan, Ricardo Henao, Chunyuan Li,
Shaobo Han, and Lawrence Carin. 2017a. Vae learn-
ing via stein variational gradient descent. In Ad-
vances in Neural Information Processing Systems,
pages 4236–4245.

Yuchen Pu, Weiyao Wang, Ricardo Henao, Liqun
Chen, Zhe Gan, Chunyuan Li, and Lawrence Carin.
2017b. Adversarial symmetric variational autoen-
coder. In Advances in Neural Information Process-
ing Systems, pages 4330–4339.

Danilo Jimenez Rezende, Shakir Mohamed, and Daan
Wierstra. 2014. Stochastic backpropagation and
approximate inference in deep generative models.
In International Conference on Machine Learning,
pages 1278–1286.

R Tyrrell Rockafellar et al. 1966. Extension of
fenchel’duality theorem for convex functions. Duke
mathematical journal, 33(1):81–89.

Harshil Shah and David Barber. 2018. Generative neu-
ral machine translation. In S. Bengio, H. Wallach,
H. Larochelle, K. Grauman, N. Cesa-Bianchi, and
R. Garnett, editors, Advances in Neural Information
Processing Systems 31, pages 1346–1355. Curran
Associates, Inc.

Tianxiao Shen, Tao Lei, Regina Barzilay, and Tommi
Jaakkola. 2017. Style transfer from non-parallel text
by cross-alignment. In Advances in neural informa-
tion processing systems, pages 6830–6841.

Zichao Yang, Zhiting Hu, Ruslan Salakhutdinov, and
Taylor Berg-Kirkpatrick. 2017. Improved varia-
tional autoencoders for text modeling using dilated
convolutions. In Proceedings of the 34th Interna-
tional Conference on Machine Learning-Volume 70,
pages 3881–3890. JMLR. org.

Shengjia Zhao, Jiaming Song, and Stefano Er-
mon. 2017a. InfoVAE: Information maximiz-
ing variational autoencoders. arXiv preprint
arXiv:1706.02262.

Tiancheng Zhao, Kyusong Lee, and Maxine Eskenazi.
2018. Unsupervised discrete sentence representa-
tion learning for interpretable neural dialog genera-
tion. arXiv preprint arXiv:1804.08069.

http://papers.nips.cc/paper/7409-generative-neural-machine-translation.pdf
http://papers.nips.cc/paper/7409-generative-neural-machine-translation.pdf


3956

Tiancheng Zhao, Ran Zhao, and Maxine Eskenazi.
2017b. Learning discourse-level diversity for neural
dialog models using conditional variational autoen-
coders. arXiv preprint arXiv:1703.10960.


