



















































Unified Semantic Parsing with Weak Supervision


Proceedings of the 57th Annual Meeting of the Association for Computational Linguistics, pages 4801–4810
Florence, Italy, July 28 - August 2, 2019. c©2019 Association for Computational Linguistics

4801

Unified Semantic Parsing with Weak Supervision

Priyanka Agrawal*, Parag Jain, Ayushi Dalmia,
Abhishek Bansal, Ashish Mittal, Karthik Sankaranarayanan

IBM Research AI
*pagrawal.ml@gmail.com

{pajain34, adalmi08, abbansal, arakeshk, kartsank}@in.ibm.com

Abstract

Semantic parsing over multiple knowledge
bases enables a parser to exploit structural sim-
ilarities of programs across the multiple do-
mains. However, the fundamental challenge
lies in obtaining high-quality annotations of
(utterance, program) pairs across various do-
mains needed for training such models. To
overcome this, we propose a novel framework
to build a unified multi-domain enabled se-
mantic parser trained only with weak supervi-
sion (denotations). Weakly supervised training
is particularly arduous as the program search
space grows exponentially in a multi-domain
setting. To solve this, we incorporate a multi-
policy distillation mechanism in which we first
train domain-specific semantic parsers (teach-
ers) using weak supervision in the absence of
the ground truth programs, followed by train-
ing a single unified parser (student) from the
domain specific policies obtained from these
teachers. The resultant semantic parser is not
only compact but also generalizes better, and
generates more accurate programs. It fur-
ther does not require the user to provide a
domain label while querying. On the stan-
dard OVERNIGHT dataset (containing multiple
domains), we demonstrate that the proposed
model improves performance by 20% in terms
of denotation accuracy in comparison to base-
line techniques.

1 Introduction

Semantic parsing is the task of converting natural
language utterances into machine executable pro-
grams such as SQL, lambda logical form (Liang,
2013). This has been a classical area of re-
search in natural language processing (NLP) with
earlier works primarily utilizing rule based ap-
proaches (Woods, 1973) or grammar based ap-
proaches (Lafferty et al., 2001; Kwiatkowski et al.,

Figure 1: Examples for natural language utterances
with linguistic variations in two different domains
that share structural regularity (Source: OVERNIGHT
dataset). Note that in this setup, we do not use ground
truth parses for training the semantic parser.

2011; Zettlemoyer and Collins, 2005, 2007). Re-
cently, there has been a surge in neural encoder-
decoder techniques which are trained with in-
put utterances and corresponding annotated out-
put programs (Dong and Lapata, 2016; Jia and
Liang, 2016). However, the performance of these
strongly supervised methods is restricted by the
size and the diversity of training data i.e. natural
language utterances and their corresponding anno-
tated logical forms. This has motivated the work
on applying weak supervision based approaches
(Clarke et al., 2010; Liang et al., 2017; Neelakan-
tan et al., 2016; Chen et al., 2018), which use de-
notations i.e. the final answers obtained upon ex-
ecuting a program on the knowledge base and use
REINFORCE (Williams, 1992; Norouzi et al.,
2016), to guide the network to learn its semantic
parsing policy (see Figure 3(a)). Another line of
work (Goldman et al., 2018; Cheng and Lapata,
2018) is aimed towards improving the efficiency
of weakly supervised parsers by applying a two-
stage approach of first learning to generate pro-
gram templates followed by exact program gener-
ation. It is important to note that this entire body of
work on weakly supervised semantic parsing has



4802

been restricted to building a parser over a single
domain only (i.e. single dataset).

Moving beyond single-domain to multiple do-
mains, Herzig and Berant (2017) proposed se-
mantic parsing networks trained by combining
the datasets corresponding to multiple domains
into a single pool. Consider the example in Fig-
ure 1 illustrating utterances from two domains,
RECIPES and PUBLICATIONS, of the OVERNIGHT
dataset. The utterances have linguistic variations
most and maximum number corresponding to the
shared program token argmax. This work shows
that leveraging such structural similarities in lan-
guage by combining these different domains leads
to improved performance. However, as with many
single-domain techniques, this work also requires
strong supervision in the form of program anno-
tations corresponding to the utterances. Obtaining
such high quality annotations across multiple do-
mains is challenging, thereby making it expensive
to scale to newer domains.

To overcome these limitations, in this work, we
focus on the problem of developing a semantic
parser for multiple domains in the weak supervi-
sion setting using denotations. Note that, this com-
bined multiple domain task clearly entails a large
set of answers and complex search space in com-
parison to the individual domain tasks. Therefore,
the existing multi-domain semantic parsing mod-
els (Herzig and Berant, 2017) fail when trained un-
der weak supervision setting. See Section 6 for a
detailed analysis.

To address this challenge, we propose a multi-
policy distillation framework for multi-domain se-
mantic parsing. This framework splits the training
in the following two stages: 1) Learn domain ex-
perts (teacher) policy using weak supervision for
each domain. This allows the individual models to
focus on learning the semantic parsing policy for
corresponding single domains; 2) Train a unified
compressed semantic parser (student) using distil-
lation from these expert policies. This enables the
unified student to gain supervision from the above
trained expert policies and thus, learn the shared
semantic parsing policy for all the domains. This
two-stage framework is inspired from policy dis-
tillation (Rusu et al., 2016) which transfers pol-
icy of a reinforcement learning (RL) agent to train
a student network that is more compact and ef-
ficient. In our case, weakly supervised domain
teachers serve as RL agents. For inference, only

the compressed student model is used which takes
as input the user utterance from any domain and
outputs the corresponding parse program. It is im-
portant to note that, the domain identifier input is
not required by our model. The generated program
is then executed over the corresponding KB to re-
trieve denotations that are provided as responses
to the user.

To the best of our knowledge, we are the first to
propose a unified multiple-domain parsing frame-
work which does not assume the availability of
ground truth programs. Additionally, it allows in-
ference to be multi-domain enabled and does not
require user to provide domain identifiers corre-
sponding to the input utterance. In summary, we
make the following contributions:

• Build a unified neural framework to train a
single semantic parser for multiple domains
in the absence of ground truth parse pro-
grams. (Section 3)

• We show the effectiveness of multi-policy
distillation in learning a semantic parser us-
ing independent weakly supervised experts
for each domain. (Section 4)

• We perform an extensive experimental study
in multiple domains to understand the effi-
cacy of the proposed system against multi-
ple baselines. We also study the effect of the
availability of a small labeled corpus in the
distillation setup. (Section 5)

2 Related Work

Figure 2: Illustration of the proposed work in the space
of key related work in the area of semantic parsing,
knowledge distillation and policy learning

This work is related to three different areas:
semantic parsing, policy learning and knowledge



4803

distillation. Figure 2 illustrates the placement of
our proposed framework of unified semantic pars-
ing in the space of the key related works done
in each of these three areas. Semantic pars-
ing has been an extensively studied problem, the
first study dating back to Woods (1973). Much
of the work has been towards exploiting anno-
tated programs for natural language utterances to
build single domain semantic parsers using vari-
ous methods. Zettlemoyer and Collins (2007);
Kwiatkowski et al. (2011) propose to learn the
probabilistic categorical combination grammars,
Kate et al. (2005) learn transformation from syn-
tactic parse tree of natural language utterance to
formal parse tree. Andreas et al. (2013) model the
task of semantic parsing as machine translation.
Recently, Dong and Lapata (2016) introduce the
use of neural sequence-to-sequence models for the
task of machine translation. Due to the cost of ob-
taining annotated programs, there has been an in-
creasing interest in using weak supervision based
methods (Clarke et al., 2010; Liang et al., 2017;
Neelakantan et al., 2016; Chen et al., 2018; Gold-
man et al., 2018) which uses denotations, i.e. final
answers obtained on executing a program on the
knowledge base, for training.

The problem of semantic parsing has been pri-
marily studied in a single domain setting employ-
ing supervised and weakly supervised techniques.
However, the task of building a semantic parser in
the multi-domain setting is relatively new. Herzig
and Berant (2017) propose semantic parsing mod-
els using supervised learning in a multi-domain
setup and is the closest to our work. However,
none of the existing works inspect the problem of
multi-domain semantic parsing in a weak supervi-
sion setting.

Knowledge distillation was first presented
by Hinton et al. (2015) and has been popularly
used for model compression of convolution neu-
ral networks in computer vision based tasks (Yu
et al., 2017; Li et al., 2017). Kim and Rush
(2016); Chen et al. (2017) applied knowledge dis-
tillation on recurrent neural networks for the task
of machine translation and showed improved per-
formance with a much compressed student net-
work. Our proposed method of policy distillation
was first introduced by Rusu et al. (2016) and is
built on the principle of knowledge distillation and
applied for reinforcement learning agents. Vari-
ants of the framework for policy distillations have

also been proposed (Teh et al., 2017). To the
best of our knowledge, our work is the first to ap-
ply policy distillation in a sequence-to-sequence
learning task. We anticipate that the framework
described in this paper can be applied to learn uni-
fied models for other tasks as well.

3 Proposed Framework

In this section, we first present a high level
overview of the framework for the proposed uni-
fied semantic parsing using multi-policy distilla-
tion and then describe the models employed for
each component of the framework.

We focus on the setting of ‘K’ domains each
with an underlying knowledge-base B1, · · · ,BK .
We have a training set of utterances Xk and the
corresponding final denotations Y k, for each do-
main k ∈ 1, · · · ,K. Unlike existing works
(Herzig and Berant, 2017), we do not assume
availability of ground truth programs correspond-
ing to the utterances in the training data. Our
goal is to learn a unified semantic parsing model
which takes as input a user utterance xki =
{xki1, · · · , xkin} ∈ Xk from any domain k
and produces the corresponding program zki =
{zki1, · · · , zkim} which when executed on the cor-
responding knowledge base Bk should return de-
notation yki ∈ Y k. In this setup, we only rely
on the weak supervision from the final denotations
Y k for training this model. Moreover, the domain
identifier k is not needed by this unified model.

We use multi-policy distillation framework for
the task of learning a unified semantic parser. Fig-
ure 3 summarizes the proposed architecture. We
first train parsing models (teachers) for each do-
main using weak supervision to learn domain-
specific teacher policies. We use REINFORCE
for training, similar to prior work on Neural
Symbolic Machine (Liang et al., 2017) described
briefly in Section 4.1. Next, we distill the learnt
teacher policies to train a unified semantic parser
enabled over multiple domain. (described in Sec-
tion 4.2). Note that: (1) Our teachers are trained
with weak supervision from denotations instead of
actual parses and hence are weaker compared to
completely supervised semantic parses. (2) State-
of-the-art sequence distillation works (Kim and
Rush, 2016; Chen et al., 2017) have focused on
a single teacher-student setting.



4804

teacher network

encoder decoder

input utterance

executor
predicted output

ground truth answer

REINFORCE loss
generated parse

!" = {!%", … , !("}

*" = {*%", … , *+" } ,-"
-"

backpropagation

Knowledge 
Base (Bk)

a

(a) Domain specific expert policy Ek

E1

E2

Ek-1

EK

. .

probability distribution 
from experts

input utterance
! = {!$,… , !'}

generated parse

) = {)$, … , )*}

student network

encoder decoder distillation loss

backpropagation

Multi-policy 
distillation

domain experts

a

(b) Learning a unified student S by distilling domain policies from experts E1, · · · , EK

Figure 3: Proposed architecture diagram of unified semantic parsing framework. Figure 3(a) demonstrates the
training of the experts Ek using weak supervision on the denotation corresponding to input utterance. Once we
train all the domain experts E1, · · · , EK for the K domains, we use the probability distributions of the parse
generated by these experts to train the student, thereby distilling the domain policies learnt by the teachers to the
student as shown in Figure 3(b).

3.1 Model

In this section, we describe the architecture of
semantic parsing model used for both teachers
as well as the student networks. We use a
standard sequence-to-sequence model (Sutskever
et al., 2014) with attention similar to Dong and
Lapata (2016) for this task. Each parsing model
(the domain specific teachers E1, ..., EK and the
unified student S) is composed of an L-layer en-
coder LSTM (Hochreiter and Schmidhuber, 1997)
for encoding the input utterances and an L-layer
attention based decoder LSTM (Bahdanau et al.,
2014) for producing the program sequences. Note
that in this section, we omit the domain id super-
script k.

Given a user utterance x, the aim of the seman-
tic parsing model is to generate output program
z which should ultimately result in the true deno-
tations y. This user utterance x = {x1, ..., xn}
is input to the encoder which maps each word
in the input sequence to the embedding e =
{e1, ..., en} and uses this embedding to update
its respective hidden states h = {h1, ..., hn} us-
ing ht = LSTM(et, ht−1; θenc), where θenc are
the parameters of encoder LSTM. The last hid-

den state hn is input to the decoder’s first state.
The decoder updates its hidden state st using st =
LSTM(ct−1, st−1; θdec) where st−1 is the embed-
ding of output program token zt−1 at last step
t − 1 and θdec are the decoder LSTM parame-
ters. The output program {z1, ..., zm} is generated
token-wise by applying softmax over the vocab-
ulary weights derived by transforming the corre-
sponding hidden state s.

Further, we employ beam search during decod-
ing which generates a set of parses B for every ut-
terance. At each decoding step t, a beam Bt con-
taining partial parses of length t are maintained.
The next step beam Bt+1 are the |B| highest scor-
ing expansions of programs in the beam Bt.

4 Training

In this section we describe the training mech-
anism employed for the proposed multi-domain
policy distillation framework for semantic parsing.
The training process in our proposed framework
has the following two components (Figure 3): (i)
weakly supervised training for domain specific se-
mantic parsing experts E1, ..., EK and, (ii) distill-
ing multiple domain policies to the unified student



4805

S. We next describe each of these two compo-
nents.

4.1 Domain-specific Semantic Parsing Policy
As described in the previous section, an individual
domain specific semantic parsing model generates
the program z = {z1, ..., zm} which is executed
on the knowledge base B to return the denotation
ŷ. For brevity, we omit domain identifier k and
instance id i in this section. In our setting, since
labeled programs are not available for training,
we use weak supervision from final denotations
y similar to Liang et al. (2017) for each domain
expert. As the execution of parse program is a
non-differential operation on the KB, we use RE-
INFORCE (Williams, 1992; Norouzi et al., 2016)
for training which maximizes the expected reward.
Reward R(x, z) for prediction z on an input x is
defined as the match score between the true deno-
tations y for utterance x and the denotations ob-
tained by executing the predicted program z. The
overall objective to maximize the expected reward
is as follows∑

x

EPθ(z|x)[R(x, z)]

=
∑
x

∑
z

Pθ(z|x)R(x, z)

≈
∑
x

∑
z∈B

Pθ(z|x)[R(x, z)]

where θ = (θenc, θdec) are the policy parameters;
B is the output beam containing top scoring pro-
grams (described in Section 3.1) and Pθ(z|x) is
the likelihood of parse z

Pθ(z|x) =
∏
t

Pθ(zt|x, z1:t−1) (1)

To reduce the variance in gradient estimation we
use baseline b(x) = 1|B|

∑
z∈B R(x, z) i.e. the av-

erage reward for the beam corresponding to the in-
put instance x. See Table 2 WEAKINDEP for the
performance achieved for individual domains with
this training objective.

Note that the primary challenge with this
weakly supervised training is the sparsity in re-
ward signal given the large search space leading to
only a few predictions having a non-zero reward.
This can be seen in the Table 2 WEAKCOMBINED
when the entire set of domains is pooled into one,
the numbers drop severely due to the exponential
increase in the search space.

4.2 Unified Model for multiple domains

For the unified semantic parser, we use the same
sequence-to-sequence model described in Section
3.1. The hyper-parameter settings vary from
domain-specific models as detailed in Section 5.3.
We use the multi-task policy distillation method
of Rusu et al. (2016) to train this unified parser
for multiple domains. The individual domain ex-
perts E1, ..., EK are trained independently as de-
scribed in Section 4.1. This distillation frame-
work enables transfer of knowledge from experts
E1, ..., EK to a single student model S that op-
erates as a multi-domain parser, even in the ab-
sence of any domain indicator with input utter-
ance during the test phase. Each expert Ek pro-
vides a transformed training dataset to the student
Dk = {(xki , (pkθ)i)}

|Xk|
i=1 , where (p

k
θ)i is the ex-

pert’s probability distribution on the entire pro-
gram space w.r.t input utterance xi. Concretely,
given m is the decoding sequence length and V
is the vocabulary combined across domains, then
(pkθ)i ∈ [0, 1]m×|V| denotes the expert Ek’s re-
spective probabilities that output token zij equals
vocab token v, for all time steps j ∈ {1, . . . ,m}
and ∀v ∈ V .

(pkθ)i = {{p
k
θ(zij = v;x

k
i , zi{1:j−1})}mj=1}

|V|
v=1

The student takes the probability outputs from the
experts as the ground truth and is trained in a
supervised manner to minimize the cross-entropy
loss L w.r.t to teachers’ probability distribution:

L(θS ; θ1, ..., θK) =

−
K∑
k=1

|Xk|∑
i=1

|m|∑
j=1

|V|∑
v=1

pkθ(zij = v;x
k
i , zi{1:j−1})

log pSθ (zij = v;x
k, zi{1:j−1}) (2)

where {θk}Kk=1 are the policy parameters of ex-
perts and θS are the student model parameters;
similarly pSθ (zij = v;x

k, zi{1:j−1}) is the proba-
bility assigned to output token zij by student S.
This training objective enables the unified parser
to learn domain-specific parsing strategies from
individual domains as well as leverage structural
variations across domains. Therefore, the com-
bined multi-domain policy S is refined and com-
pressed during the distillation process thus render-
ing it to be more effective in parsing for each of
the domains.



4806

5 Experimental Setup

In this section, we provide details on the data and
model used for the experimental analysis1. We
further elaborate on the baselines used.

5.1 Data
We use the OVERNIGHT semantic parsing
dataset (Wang et al., 2015) which contains mul-
tiple domains. Each domain has utterances (ques-
tions) and corresponding parses in λ−DCS form
that are executable on domain specific knowledge
base. Every domain is designed to focus on a spe-
cific linguistic phenomenon, for example, CALEN-
DAR on temporal knowledge, BLOCKS on spatial
queries. In this work, we use seven domains from
the dataset as listed in Table 1.

We would like to highlight that we do not
use the parses available in the dataset during
the training of our unified semantic parser. Our
weakly supervised setup uses denotations to
navigate the program search space and learn the
parsing policy. This search space is a function
of decoder (program) length and vocabulary
size. Originally, the parses have 45 tokens on
an average with a combined vocabulary of 182
distinct tokens across the domains. To reduce
the decoder search space, we normalize the data
to have shortened parses with an average length
of 11 tokens and 147 combined vocab size. We
reduce the sequence length by using a set of
template normalization functions and reduce the
vocab size by masking named entities for each
domain. An example of normalization function
is the following: an entity utterance say of type
recipe in the query is programmed by first cre-
ating a single valued list with the entity type i.e.
(en.recipe) and then that property is extracted :
(call SW.getProperty ( call SW.singleton

en.recipe ) ( string ! type )) resulting
in 14 tokens. We replace this complex phrasing
by directly substituting the entity type under
consideration i.e. (en.recipe) (1 token). Next,
we show an example for a complete utterance:
what recipes posting date is at least the same as
rice pudding. Its original parse is:

(call SW.listValue (call SW.filter
(call SW.getProperty (call SW.singleton
en.recipe) (string ! type)) (call

SW.ensureNumericProperty (string
posting_date)) (string >=)

1Code and data is available at https://github.
com/pagrawal-ml/Unified-Semantic-Parsing

(call SW.ensureNumericEntity (call
SW.getProperty en.recipe.rice_pudding
(string posting_date))))).

Our normalized query is what recipes posting date
is at least the same as e0, where entity rice pud-
ding is substituted by entity identifier e0. The nor-
malized parse is as follows:

SW.filter en.recipe
SW.ensureNumericProperty

posting_date >=
(SW.ensureNumericEntity
SW.getProperty e0 posting_date)

It is important to note that this normalization
function is reversible. During the test phase, we
apply the reverse function to convert the normal-
ized parses to original forms for computing the de-
notations. Table 1 shows the domain wise statis-
tics of original and normalized data. It is important
to note that this script is applicable for template re-
duction for any λ−DCS form.

We report hard denotation accuracy i.e. the pro-
portion of questions for which the top prediction
and ground truth programs yield the matching an-
swer sets as the evaluation metric. For computing
the rewards during training, we use soft denota-
tion accuracy i.e. F1 score between predicted and
ground truth answer sets.

Table 2 shows the accuracy with strongly su-
pervised training (SUPERVISED). The average de-
notation accuracy (with beam width 1) of 70.6%
which is comparable to state-of-the-art (Jia and
Liang, 2016) denotation accuracy of 75.6% (with
beam width 5). This additionally suggests that
data normalization process does not alter the task
complexity.

5.2 Baselines

In the absence of any work on multi-domain
parser trained without ground truth programs, we
compare the performance of the proposed unified
framework against the following baselines:

1. Independent Domain Experts (WEAK-
INDEPENDENT): These are the set of weakly
supervised semantic parsers, trained indepen-
dently for each domain using REINFORCE
algorithm as described in Section 4.1. Note
that these are the teachers in our multi-policy
distillation framework.

2. Combined Weakly Supervised Seman-
tic Parser (WEAK-COMBINED)): As per

https://github.com/pagrawal-ml/Unified-Semantic-Parsing
https://github.com/pagrawal-ml/Unified-Semantic-Parsing


4807

DOMAIN

ORIGINAL DATASET NORMALIZED DATASET
UTTERANCE PROGRAM UTTERANCE PROGRAM

Vocab Vocab Avg. Vocab Vocab Avg.
Length Length

BASKETBALL 340 65 48.3 332 58 20.5
BLOCKS 213 48 47.4 212 41 9.7
CALENDAR 206 54 43.7 191 46 8.8
HOUSING 302 58 42.7 293 48 8.5
PUBLICATIONS 190 44 46.2 187 38 8.5
RECIPES 247 49 42.6 241 40 7.8
RESTAURANTS 315 62 41.2 310 48 8.2
AVERAGE 259 54.3 44.6 252.3 45.6 10.3

Table 1: Training data statistics for original and normalized dataset. For each domain, we compare the #unique
tokens (Vocab) in input utterances and corresponding programs; and average program length.

the recommendation in Herzig and Berant
(2017), we pool all the domains datasets into
one and train a single semantic parser with
weak supervision.

3. Independent Policy Distillation (DISTILL-
INDEPENDENT): We also experiment with
independent policy distillation for each do-
main. The setup is similar to the one de-
scribed in Section 4.2 used to learnK student
parsing models, one for each individual do-
main. Each student model uses the respective
expert model as the only teacher.

Following the above naming convention, we term
our proposed framework as DISTILL-COMBINED.
For the sake of completeness, we also compute
the skyline SUPERVISED i.e. the sequence-to-
sequence model described in Section 3.1 trained
with ground truth parses.

5.3 Model Setting

We use the original train-test split provided in the
dataset. We further split the training set of each
domain into training (80%) and validation (20%)
sets. We tune each hyperparameter by choosing
the parameter from a range of values and choose
the configuration with highest validation accuracy
for each model. For each experiment we select
from: beam width = {1, 5, 10, 20}, number of
layers = {1,2,3,4}, rnn size for both encoder & de-
coder = {100, 200, 300}. For faster compute, we
use the string match accuracy as the proxy to deno-
tation reward. In our experiments, we found that
combined model performs better with the num-
ber of layers set to 2 and RNN size set to 300

while individual models’ accuracies did not in-
crease with an increase in model capacity. This
is intuitive as the combined model requires more
capacity to learn multiple domains. Encoder and
decoder maximum sequence lengths were set to 50
and 35 respectively. For all the models, RMSprop
optimizer (Hinton et al.) was used with learning
rate set to 0.001.

6 Results and Discussion

Table 2 summarizes our main experimental re-
sults. It shows that our proposed framework
DISTILL-COMBINED clearly outperforms the
three baselines WEAK-INDEPENDENT, WEAK-
COMBINED, DISTILL-INDEPENDENT described
in Section 5.2

Effect of Policy Distillation: DISTILL-
INDEPENDENT are individual domain models
trained through distillation of individual weakly
supervised domain experts policies WEAK-
INDEPENDENT. We observe that policy distilla-
tion of individual expert policies result in an av-
erage percentage increase of ∼ 10% in accuracy
with a maximum of ∼ 33% increase in case of
BLOCKS domains, which shows the effectiveness
of the distillation method employed in our frame-
work. Note that for CALENDAR domain, WEAK-
INDEPENDENT is unable to learn the parsing pol-
icy probably due to the complexity of temporal
utterances. Therefore, further distillation on the
inaccurate policy leads to drop in performance.
More systematic analysis on the failure cases is an
interesting future direction.

Performance of Unified Semantic Parsing
framework: The results show the proposed uni-



4808

DOMAIN
WEAK- WEAK- DISTILL- DISTILL-

INDEPENDENT COMBINED INDEPENDENT COMBINED SUPERVISED

BASKETBALL 33.8 0.5 33.8 36.3 81.0
BLOCKS 27.6 0.8 36.8 37.1 52.8
CALENDAR 25.0 0.6 12.5 17.3 72.0
HOUSING 33.3 2.1 42.3 49.2 66.1
PUBLICATIONS 42.2 6.2 45.9 48.4 68.3
RECIPES 45.8 2.3 61.5 66.2 80.5
RESTAURANTS 41.3 2.1 40.9 45.2 73.5
AVERAGE 35.5 2.1 39.1 42.8 70.6

Table 2: Test denotation accuracy for each domain comparing our proposed method DISTILLCOMBINED with the
three baselines. We also report the skyline SUPERVISED.

fied semantic parser using multi-policy distilla-
tion (DISTILL-COMBINED) (as described in sec-
tion 3) on an average has the highest performance
in predicting programs under weak supervision
setup. DISTILL-COMBINED approach leads to an
increased performance by ∼ 20% on an average
in comparison to individual domain specific teach-
ers (WEAK-INDEPENDENT). We note maximum
increase in the case of HOUSING domain with
∼ 47% increase in the denotation accuracy.

Effectiveness of Multi-Policy Distillation: Fi-
nally, we evaluate the effectiveness of the overall
multi-policy distillation process in comparison to
training a combined model with data merged from
all the domains (WEAK-COMBINED) in the weak
supervision setup. We observe that due to weak
signal strength and enlarged search space from
multiple domains, WEAK-COMBINED model per-
forms poorly across domains. Thus, further re-
inforcing the need for the distillation process.
As discussed earlier, the SUPERVISED model is
trained using strong supervision from ground-truth
parses and hence is not considered as a compa-
rable baseline, rather a skyline, for our proposed
model

6.1 Effect of Small Parallel Corpus
We show that our model can greatly benefit from
the availability of a limited amount of parallel data
where semantic parses are available. Figure 4
plots the performance of WEAK-INDEPENDENT
and DISTILL-INDEPENDENT models for RECIPES
domain when initialized with a pre-trained SU-
PERVISED model trained on 10% and 30% of par-
allel training data. As it can be seen, adding 10%
parallel data brings an improvement of about 5
points, while increasing the parallel corpus size to

0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
0.8

0% 10% 30%

De
no

ta
tio

n 
Ac

cu
ra

cy

% of Training Data

SUPERVISED WEAK-INDEPENDENT DISTILL-INDEPENDENT

Figure 4: Effect of the fraction of training data on dif-
ferent models

only 30% we observe an improvement of about 11
points. The observed huge boost in performance is
motivating given the availability of small amount
of parallel corpus in most real world scenarios.

7 Conclusions and Future Work

In this work, we addressed the challenge of train-
ing a semantic parser for multiple domains without
strong supervision i.e. in the absence of ground
truth programs corresponding to input utterances.
We propose a novel unified neural framework us-
ing multi-policy distillation mechanism with two
stages of training through weak supervision from
denotations i.e. final answers corresponding to
utterances. The resultant multi-domain semantic
parser is compact and more precise as demon-
strated on the OVERNIGHT dataset. We believe
that this proposed framework has wide applicabil-
ity to any sequence-to-sequence model.

We show that a small parallel corpus with anno-
tated programs boosts the performance. We plan
to explore if further fine-tuning using denotations



4809

based training on the distilled model can lead to
improvements in the unified parser. We also plan
to investigate the possibility of augmenting the
parallel corpus by bootstrapping from shared tem-
plates across domains. This would further make
it feasible to perform transfer learning on a new
domain. An interesting direction would be to en-
able domain experts to identify and actively re-
quest for program annotations given the knowl-
edge shared by other domains. We would also like
to explore if guiding the decoder through syntac-
tical and domain-specific constraints helps in re-
ducing the search space for the weakly supervised
unified parser.

Acknowledgement

We thank Ghulam Ahmed Ansari and Miguel
Ballesteros, our colleagues at IBM for discussions
and suggestions which helped in shaping this pa-
per.

References
Jacob Andreas, Andreas Vlachos, and Stephen Clark.

2013. Semantic parsing as machine translation. In
Proceedings of the 51st Annual Meeting of the As-
sociation for Computational Linguistics (Volume 2:
Short Papers), volume 2, pages 47–52.

Dzmitry Bahdanau, Kyunghyun Cho, and Yoshua Ben-
gio. 2014. Neural machine translation by jointly
learning to align and translate. arXiv e-prints,
abs/1409.0473.

Bo Chen, Le Sun, and Xianpei Han. 2018. Sequence-
to-action: End-to-end semantic graph generation for
semantic parsing. In Proceedings of the 56th Annual
Meeting of the Association for Computational Lin-
guistics (Volume 1: Long Papers), pages 766–777.
Association for Computational Linguistics.

Yun Chen, Yang Liu, Yong Cheng, and Victor O.K.
Li. 2017. A teacher-student framework for zero-
resource neural machine translation. In Proceed-
ings of the 55th Annual Meeting of the Association
for Computational Linguistics (Volume 1: Long Pa-
pers), pages 1925–1935. Association for Computa-
tional Linguistics.

Jianpeng Cheng and Mirella Lapata. 2018. Weakly-
supervised neural semantic parsing with a generative
ranker. CoRR, abs/1808.07625.

James Clarke, Dan Goldwasser, Ming-Wei Chang, and
Dan Roth. 2010. Driving semantic parsing from
the world’s response. In Proceedings of the four-
teenth conference on computational natural lan-
guage learning, pages 18–27. Association for Com-
putational Linguistics.

Li Dong and Mirella Lapata. 2016. Language to logi-
cal form with neural attention. In Proceedings of the
54th Annual Meeting of the Association for Compu-
tational Linguistics (Volume 1: Long Papers), pages
33–43. Association for Computational Linguistics.

O. Goldman, V. Latcinnik, U. Naveh, A. Globerson,
and J. Berant. 2018. Weakly-supervised semantic
parsing with abstract examples. In Association for
Computational Linguistics (ACL).

Jonathan Herzig and Jonathan Berant. 2017. Neural
semantic parsing over multiple knowledge-bases. In
Association for Computational Linguistics.

Geoffrey Hinton, Nitish Srivastava, and Kevin Swer-
sky. Neural networks for machine learning lecture
6a overview of mini-batch gradient descent.

Geoffrey Hinton, Oriol Vinyals, and Jeffrey Dean.
2015. Distilling the knowledge in a neural network.
In NIPS Deep Learning and Representation Learn-
ing Workshop.

Sepp Hochreiter and Jürgen Schmidhuber. 1997. Long
short-term memory. Neural Comput., 9(8):1735–
1780.

Robin Jia and Percy Liang. 2016. Data recombination
for neural semantic parsing. In Proceedings of the
54th Annual Meeting of the Association for Compu-
tational Linguistics (Volume 1: Long Papers), pages
12–22. Association for Computational Linguistics.

Rohit J. Kate, Yuk Wah Wong, and Raymond J.
Mooney. 2005. Learning to transform natural to
formal languages. In Proceedings of the 20th Na-
tional Conference on Artificial Intelligence - Volume
3, AAAI’05, pages 1062–1068. AAAI Press.

Yoon Kim and Alexander M. Rush. 2016. Sequence-
level knowledge distillation. In Proceedings of the
2016 Conference on Empirical Methods in Natural
Language Processing, pages 1317–1327. Associa-
tion for Computational Linguistics.

Tom Kwiatkowski, Luke Zettlemoyer, Sharon Goldwa-
ter, and Mark Steedman. 2011. Lexical generaliza-
tion in ccg grammar induction for semantic pars-
ing. In Proceedings of the Conference on Empirical
Methods in Natural Language Processing, EMNLP
’11, pages 1512–1523, Stroudsburg, PA, USA. As-
sociation for Computational Linguistics.

John D. Lafferty, Andrew McCallum, and Fernando
C. N. Pereira. 2001. Conditional random fields:
Probabilistic models for segmenting and labeling se-
quence data. In Proceedings of the Eighteenth Inter-
national Conference on Machine Learning, ICML
’01, pages 282–289, San Francisco, CA, USA. Mor-
gan Kaufmann Publishers Inc.

Yuncheng Li, Jianchao Yang, Yale Song, Liangliang
Cao, Jiebo Luo, and Jia Li. 2017. Learning from
noisy labels with distillation. 2017 IEEE Inter-
national Conference on Computer Vision (ICCV),
pages 1928–1936.

https://arxiv.org/abs/1409.0473
https://arxiv.org/abs/1409.0473
http://aclweb.org/anthology/P18-1071
http://aclweb.org/anthology/P18-1071
http://aclweb.org/anthology/P18-1071
https://doi.org/10.18653/v1/P17-1176
https://doi.org/10.18653/v1/P17-1176
https://doi.org/10.18653/v1/P16-1004
https://doi.org/10.18653/v1/P16-1004
http://arxiv.org/abs/1503.02531
https://doi.org/10.1162/neco.1997.9.8.1735
https://doi.org/10.1162/neco.1997.9.8.1735
https://doi.org/10.18653/v1/P16-1002
https://doi.org/10.18653/v1/P16-1002
http://dl.acm.org/citation.cfm?id=1619499.1619504
http://dl.acm.org/citation.cfm?id=1619499.1619504
https://doi.org/10.18653/v1/D16-1139
https://doi.org/10.18653/v1/D16-1139
http://dl.acm.org/citation.cfm?id=2145432.2145593
http://dl.acm.org/citation.cfm?id=2145432.2145593
http://dl.acm.org/citation.cfm?id=2145432.2145593
http://dl.acm.org/citation.cfm?id=645530.655813
http://dl.acm.org/citation.cfm?id=645530.655813
http://dl.acm.org/citation.cfm?id=645530.655813


4810

Chen Liang, Jonathan Berant, Quoc V. Le, Ken For-
bus, and Ni Lao. 2017. Neural symbolic machines:
Learning semantic parsers on freebase with weak su-
pervision. In Proceedings of the 55th Annual Meet-
ing of the Association for Computational Linguistics
(Volume 1: Long Papers), pages 23–33, Vancouver,
Canada.

Percy Liang. 2013. Lambda dependency-based
compositional semantics. arXiv preprint
arXiv:1309.4408.

Arvind Neelakantan, Quoc V. Le, Martı́n Abadi, An-
drew McCallum, and Dario Amodei. 2016. Learn-
ing a natural language interface with neural pro-
grammer. CoRR, abs/1611.08945.

Mohammad Norouzi, Samy Bengio, zhifeng Chen,
Navdeep Jaitly, Mike Schuster, Yonghui Wu, and
Dale Schuurmans. 2016. Reward augmented max-
imum likelihood for neural structured prediction. In
Advances in Neural Information Processing Systems
29, pages 1723–1731. Curran Associates, Inc.

Andrei A Rusu, Sergio Gomez Colmenarejo, Caglar
Gulcehre, Guillaume Desjardins, James Kirk-
patrick, Razvan Pascanu, Volodymyr Mnih, Koray
Kavukcuoglu, and Raia Hadsell. 2016. Policy distil-
lation.

Ilya Sutskever, Oriol Vinyals, and Quoc V Le. 2014.
Sequence to sequence learning with neural net-
works. In Advances in neural information process-
ing systems, pages 3104–3112.

Yee Teh, Victor Bapst, Wojciech M. Czarnecki, John
Quan, James Kirkpatrick, Raia Hadsell, Nicolas
Heess, and Razvan Pascanu. 2017. Distral: Robust
multitask reinforcement learning. In I. Guyon, U. V.
Luxburg, S. Bengio, H. Wallach, R. Fergus, S. Vish-
wanathan, and R. Garnett, editors, Advances in Neu-
ral Information Processing Systems 30, pages 4496–
4506. Curran Associates, Inc.

Yushi Wang, Jonathan Berant, and Percy Liang. 2015.
Building a semantic parser overnight. In Proceed-
ings of the 53rd Annual Meeting of the Association
for Computational Linguistics and the 7th Interna-
tional Joint Conference on Natural Language Pro-
cessing (Volume 1: Long Papers), pages 1332–1342.
Association for Computational Linguistics.

Ronald J Williams. 1992. Simple statistical gradient-
following algorithms for connectionist reinforce-
ment learning. Machine learning, 8(3-4):229–256.

W. A. Woods. 1973. Progress in natural language un-
derstanding: An application to lunar geology. In
Proceedings of the June 4-8, 1973, National Com-
puter Conference and Exposition, AFIPS ’73, pages
441–450, New York, NY, USA. ACM.

Ruichi Yu, Ang Li, Vlad I. Morariu, and Larry S.
Davis. 2017. Visual relationship detection with in-
ternal and external linguistic knowledge distillation.
2017 IEEE International Conference on Computer
Vision (ICCV), pages 1068–1076.

Luke Zettlemoyer and Michael Collins. 2007. Online
learning of relaxed ccg grammars for parsing to log-
ical form. In Proceedings of the 2007 Joint Con-
ference on Empirical Methods in Natural Language
Processing and Computational Natural Language
Learning (EMNLP-CoNLL).

Luke S. Zettlemoyer and Michael Collins. 2005.
Learning to map sentences to logical form: Struc-
tured classification with probabilistic categorial
grammars. In Proceedings of the Twenty-First Con-
ference on Uncertainty in Artificial Intelligence,
UAI’05, pages 658–666, Arlington, Virginia, United
States. AUAI Press.

http://aclanthology.coli.uni-saarland.de/pdf/P/P17/P17-1003.pdf
http://aclanthology.coli.uni-saarland.de/pdf/P/P17/P17-1003.pdf
http://aclanthology.coli.uni-saarland.de/pdf/P/P17/P17-1003.pdf
http://papers.nips.cc/paper/6547-reward-augmented-maximum-likelihood-for-neural-structured-prediction.pdf
http://papers.nips.cc/paper/6547-reward-augmented-maximum-likelihood-for-neural-structured-prediction.pdf
https://papers.nips.cc/paper/5346-sequence-to-sequence-learning-with-neural-networks.pdf
https://papers.nips.cc/paper/5346-sequence-to-sequence-learning-with-neural-networks.pdf
http://papers.nips.cc/paper/7036-distral-robust-multitask-reinforcement-learning.pdf
http://papers.nips.cc/paper/7036-distral-robust-multitask-reinforcement-learning.pdf
https://doi.org/10.3115/v1/P15-1129
https://doi.org/10.1145/1499586.1499695
https://doi.org/10.1145/1499586.1499695
http://aclweb.org/anthology/D07-1071
http://aclweb.org/anthology/D07-1071
http://aclweb.org/anthology/D07-1071
http://dl.acm.org/citation.cfm?id=3020336.3020416
http://dl.acm.org/citation.cfm?id=3020336.3020416
http://dl.acm.org/citation.cfm?id=3020336.3020416

