



















































Pitfalls in the Evaluation of Sentence Embeddings


Proceedings of the 4th Workshop on Representation Learning for NLP (RepL4NLP-2019), pages 55–60
Florence, Italy, August 2, 2019. c©2019 Association for Computational Linguistics

55

Pitfalls in the Evaluation of Sentence Embeddings

Steffen Eger†‡, Andreas Rücklé†, Iryna Gurevych†‡
†Ubiquitous Knowledge Processing Lab (UKP-TUDA)

‡Research Training Group AIPHES
Department of Computer Science, Technische Universität Darmstadt

†www.ukp.tu-darmstadt.de
‡www.aiphes.tu-darmstadt.de

Abstract

Deep learning models continuously break new
records across different NLP tasks. At the
same time, their success exposes weaknesses
of model evaluation. Here, we compile several
key pitfalls of evaluation of sentence embed-
dings, a currently very popular NLP paradigm.
These pitfalls include the comparison of em-
beddings of different sizes, normalization of
embeddings, and the low (and diverging) cor-
relations between transfer and probing tasks.
Our motivation is to challenge the current eval-
uation of sentence embeddings and to provide
an easy-to-access reference for future research.
Based on our insights, we also recommend bet-
ter practices for better future evaluations of
sentence embeddings.

1 Introduction

The field of natural language processing (NLP) is
currently in upheaval. A reason for this is the suc-
cess story of deep learning, which has led to ever
better reported performances across many differ-
ent NLP tasks, sometimes exceeding the scores
achieved by humans. These fanfares of victory are
echoed by isolated voices raising concern about
the trustworthiness of some of the reported results.
For instance, Melis et al. (2017) find that neural
language models have been misleadingly evaluated
and that, under fair conditions, standard LSTMs
outperform more recent innovations. Reimers and
Gurevych (2017) find that reporting single perfor-
mance scores is insufficient for comparing non-
deterministic approaches such as neural networks.
Post (2018) holds that neural MT systems are un-
fairly compared in the literature using different
variants of the BLEU score metric. In an even
more general context, Lipton and Steinhardt (2018)
detect several current “troubling trends” in machine
learning scholarship, some of which refer to evalu-
ation.

Sentence encoders (Kiros et al., 2015; Conneau
et al., 2017; Pagliardini et al., 2018) are one par-
ticularly hot deep learning topic. Generalizing the
popular word-level representations (Mikolov et al.,
2013; Pennington et al., 2014) to the sentence level,
they are valuable in a variety of contexts: (i) clus-
tering of sentences and short texts; (ii) retrieval
tasks, e.g., retrieving answer passages for a ques-
tion; and (iii) when task-specific training data is
scarce—i.e., when the full potential of task-specific
word-level representation approaches cannot be
leveraged (Subramanian et al., 2018).

The popularity of sentence encoders has led to a
large variety of proposed techniques. These range
from ‘complex’ unsupervised RNN models predict-
ing context sentences (Kiros et al., 2015) to su-
pervised RNN models predicting semantic relation-
ships between sentence pairs (Conneau et al., 2017).
Even more complex models learn sentence embed-
dings in a multi-task setup (Subramanian et al.,
2018). In contrast, ‘simple’ encoders compute sen-
tence embeddings as an elementary function of
word embeddings. They compute a weighted aver-
age of word embeddings and then modify these rep-
resentations via principal component analysis (SIF)
(Arora et al., 2017); average n-gram embeddings
(Sent2Vec) (Pagliardini et al., 2018); consider gen-
eralized pooling mechanisms (Shen et al., 2018;
Rücklé et al., 2018); or combine word embeddings
via randomly initialized projection matrices (Wiet-
ing and Kiela, 2019).

The embeddings of different encoders vary
across various dimensions, the most obvious being
their size. E.g., the literature has proposed embed-
dings ranging from 300d average word embeddings
to 700d n-gram embeddings, to 4096d InferSent
embeddings, to 24k dimensional random embed-
dings (Wieting and Kiela, 2019). Unsurprisingly,
comparing embeddings of different sizes is unfair
when size itself is crucially related to performances

www.ukp.tu-darmstadt.de
www.aiphes.tu-darmstadt.de


56

in downstream tasks, as has been highlighted be-
fore (Rücklé et al., 2018; Wieting and Kiela, 2019).

We compile several pitfalls when evaluating and
comparing sentence encoders. These relate to (i)
the embedding sizes, (ii) normalization of embed-
dings before feeding them to classifiers, and (iii)
unsupervised semantic similarity evaluation. We
also discuss (iv) the choice of classifier used on
top of sentence embeddings and (v) divergence in
performance results which compare downstream
tasks and so-called probing tasks (Conneau et al.,
2018).

Our motivation is to assemble diverse obser-
vations from different published works regarding
problematic aspects of the emerging field of sen-
tence encoders. We do so in order to provide future
research with an easy-to-access reference about is-
sues that may not (yet) be widely known. We also
want to provide the newcomer to sentence encoders
a guide for avoiding pitfalls that even experienced
researchers have fallen prey to. We also recom-
mend best practices, from our viewpoint.

2 Setup

We compare several freely available sentence en-
coders (listed in Table 1) with SentEval (Conneau
and Kiela, 2018), using its default settings. SentE-
val trains a logistic regression classifier for specific
downstream tasks with the sentence embeddings as
the input. We compare 6 downstream tasks from
the fields of sentiment analysis (MR, SST), product
reviews (CR), subjectivity (SUBJ), opinion polarity
(MPQA), and question-type classification (TREC).
In these tasks, the goal is to label a single sentence
with one of several classes. We also evaluate on the
STSBenchmark (Cer et al., 2017), which evaluates
semantic similarity of pairs of sentences.

Sentence Encoder Emb. Size

InferSent (Conneau et al., 2017) 4096
Sent2Vec (Pagliardini et al., 2018) 700
PMeans (Rücklé et al., 2018) 3600
USE (Cer et al., 2018) 512
Avg. Glove (Pennington et al., 2014) 300
Avg. Word2Vec (Mikolov et al., 2013) variable
SIF-Glove (Arora et al., 2017) 300

Table 1: Sentence encoders used in this work, together
with the sizes of the resulting sentence embeddings.

3 Problems

Size matters. Currently, there is no standard size
for sentence embeddings and different encoders
induce embeddings of vastly different sizes.

For example, the sentence encoders of Conneau
et al. (2017), Pagliardini et al. (2018), Rücklé et al.
(2018), Cer et al. (2018), Kiros et al. (2015), Sub-
ramanian et al. (2018) are 4096, 700, 3600, 512,
4800, 1500/2048 dimensional, respectively. How-
ever, Conneau et al. (2017) show that their own
model performs better when dimensionality of the
embeddings is larger. They hypothesize that the
linear model they use for evaluation (logistic re-
gression) performs better with higher dimensional
embeddings because these are more likely to be
linearly separable. Rücklé et al. (2018) then argued
that a comparison to low-dimensional baselines is
unfair under this finding and increase the size of the
baselines by concatenating different word embed-
ding types or by concatenating different pooling
operations (min, max, average). Wieting and Kiela
(2019) further extend this idea by enlarging the
word embedding size with randomly initialized ma-
trices before averaging. All three works show that
performance increases as a concave function of em-
bedding size, when a linear model is used on top
of embeddings for evaluation.

We also observe this trend when we merely train
higher-dimensional word2vec word embeddings
(on Wikipedia) and then average them, see Fig-
ure 1. At equal embedding size, some models such
as USE and Sent2Vec, have no or very little ad-
vantage over average word embeddings. Therefore,
we strongly encourage future research to compare
embeddings of the same sizes to provide a fair eval-
uation (or at least similar sizes).

Cosine similarity and Pearson correlation may
give misleading results. The following evalua-
tion scenario is common when testing for semantic
similarity: given two inputs (words or sentences),
embed each of them, (i) compute the cosine simi-
larity of the pairs of vectors, and then (ii) calculate
the Pearson (or Spearman) correlation with human
judgments for the same pairs. Both steps are prob-
lematic: (i) it is unclear whether cosine similarity
is better suited to measure semantic similarity than
other similarity functions; (ii) Pearson correlation
is known for its deficiencies—e.g., it only measures
linear correlation and it is sensitive to outliers. A
popular example for failure of Pearson correlation



57

InferSent (d=4096)

PMeans (d=3600)

SIF-Glove (d=300)

USE (d=512) / Glove (d=300; below)

Sent2Vec (d=700)

Word2Vec Normalized
Word2Vec

77.5

80.0

82.5

85.0

87.5

100 300 700 1000 1500 2000
Size

Sc
or

e
in

%

Figure 1: Avg. score across 6 transfer tasks for differ-
ent sizes of Word2Vec embeddings vs. scores of other
encoders (with constant embedding sizes as given in
Table 1). ‘Word2Vec Normalized’ is discussed below.

is Anscombe’s quartet (Anscombe, 1973).
Indeed, using such unsupervised evaluations

based on cosine similarity and Pearson correla-
tion (which we denote UCP) may be misleading,
as pointed out by Lu et al. (2015). When they nor-
malized word embeddings, their WS353 semantic
similarity (Finkelstein et al., 2001) scores using
UCP increased by almost 20 percentage points (pp).
Since normalization is a simple operation that could
easily be learned by a machine learning model, this
indicates that UCP scores may yield unreliable con-
clusions regarding the quality of the underlying
embeddings.

We wanted to verify if this was also true when
comparing different sentence encoders, and there-
fore used the popular STSBenchmark dataset in the
UCP setup. The results in Table 2 show that the
outcomes vary strongly, with Glove-300d embed-
dings performing worst (0.41 correlation) and USE-
512d embeddings best (0.70 correlation). We then
normalized all sentence embeddings with z-norm1,
which is given as a recommendation in LeCun et al.
(1998) to process inputs for deep learning systems.

With normalization, we observe a reduction in
the range of the distribution of UCP scores across
the nine systems from 29% to 9%; similarly, the
standard deviation decreases from 8.6% to 2.4%.
In particular, the worst sentence encoders catch
up substantially: e.g., average Glove embeddings
improve from 0.41 Pearson to 0.62 Pearson and the
improvement of more complex systems over simple

1Subtracting the mean from each column of the embedding
matrix of the whole data (2N rows, one for each of N pairs,
and d columns, where d is the embedding size) and dividing
by the standard deviation; after that we normalized each row
to have unit length (`2 norm).

Standard Normalized ∆

Glove-300d 0.41 0.62 +21
Word2Vec-300d 0.56 0.65 +9
Word2Vec-800d 0.56 0.67 +11
InferSent-4096d 0.67 0.67 +0
SIF-Glove-300d 0.66 0.67 +1
SIF-Word2Vec-300d 0.67 0.67 +0
USE-512d 0.70 0.70 +0
Sent2Vec-700d 0.67 0.71 +4
PMean-3600d 0.64 0.66 +2

Table 2: Unsupervised cosine similarity + Pearson cor-
relation (UCP) on STSBench (test data). ∆ in pp.

averaging baselines appears much less pronounced
than before the normalization.

When replacing Pearson by Spearman correla-
tion, we observed very similar trends: e.g., Glove-
300d had 0.44 before and 0.58 after normalization.

This shows that that UCP requires specific nor-
malization of the inputs for a fair comparison. Par-
allel to the suggestion of Lu et al. (2015), we rec-
ommend considering to use learned similarity func-
tions and mean-square error (MSE) as an alterna-
tive to UCP.

Normalization. Indeed, we also evaluated the ef-
fect of normalization for supervised transfer tasks,
i.e., with learned similarity function. To this end,
we compared the 9 sentence encoders from Table 2
across 6 transfer tasks (averaged results) and STS-
Bench (learned similarity function on training data
instead of cosine similarity).2

−0.4
−0.2

0

0.2

0.4

0.6

0.8

U
SE

In
fe

rS
en

t

PM
ea

ns

SI
F-

G
lo

ve

SI
F-

W
2V

ec

W
2V

ec
-3

00

W
2V

ec
-8

00

Se
nt

2V
ec

G
lo

ve

Transfer tasks
STSBench

Figure 2: ∆ in pp of normalization and no normaliza-
tion. Average across transfer tasks. STSBench differ-
ences are scaled down by factor of 10.

2We estimated normalization vectors for mean and stan-
dard deviation on the training data and used these fixed values
to normalize the test data.



58

Figure 2 shows that most techniques profit from
normalization (on average), both on the transfer
tasks and STSBench, even though gains are often
substantially smaller than in the UCP setting. Since
the normalization can lead to rank changes (which
we, e.g., observe between W2Vec-800, USE, and
Sent2Vec) we thus recommend introducing normal-
ization as a binary hyperparameter that is tuned
for each sentence encoder and downstream task
also in supervised settings with learned similarity
function.

Different classifiers for evaluation. The popu-
lar SentEval evaluation tool feeds sentence embed-
dings into a logistic regression classifier. The un-
derlying assumption is that in order to evaluate
the embeddings themselves the classifier used on
top of embeddings should be as simple as possible.
While the argument has some appeal, one wonders
how relevant such an evaluation is when in practice
more powerful classifiers would probably be used,
e.g., deeper networks (current versions of SentEval
also offer evaluating with a multi-layer perceptron
(MLP)). In particular, we note here an asymme-
try between the extrinsic evaluation of word and
sentence embeddings: word embeddings have tra-
ditionally been compared extrinsically by feeding
them into different powerful architectures, such as
BiLSTMs, while sentence embeddings are com-
pared using the simplest possible architecture, lo-
gistic regression. While this is cheaper and focuses
more on the embeddings themselves, it is less prac-
tically relevant, as discussed, and may have un-
desirable side effects, such as the preference for
embeddings of larger size.

A main problem arises when the ranking of sys-
tems is not stable across different classifiers. To
our knowledge, this is an open issue. We are only
aware of Subramanian et al. (2018), who evaluate a
few setups both with logistic regression and using
an MLP, and their results indicate that their own
approach profits much more from the MLP than
the InferSent embeddings they compare to (+3.4pp
vs. +2.2pp).

Thus, it is not sufficient to only report results
with logistic regression, and evaluations with better-
performing approaches would provide a more re-
alistic comparison for actual use-case scenarios.
We suggest reporting results for at least logistic
regression and MLP.

Correlation of transfer tasks and probing tasks.
Besides transfer tasks, the literature has recently
suggested evaluating sentence encoders with prob-
ing tasks (Conneau et al., 2018) that query em-
beddings for certain linguistic features, such as
to detect whether a sentence contains certain
words (WC) or to determine the sentence length
(SentLen). Perone et al. (2018) evaluate 11 differ-
ent sentence encoders on 9 transfer tasks and 10
probing tasks. We plot the Spearman correlation
between their transfer task results and their probing
task results in Figure 3. The average Spearman
correlation is 0.64. The highest average correlation
to transfer tasks has SentLen (0.83), and the low-
est score has WC (0.04). Taken at face value, this
may mean that current transfer tasks query more
for superficial sentence features (knowing that em-
bedding A can better predict sentence length than
embedding B is indicative that A outperforms B on
the transfer tasks) than for actual semantic content,
as the embeddings were originally designed for.

Bs
hif

t
Co

or
dIn

v
Ob

jN
um

Se
nt

Le
n

SO
MO

Su
bjN

um
Te

ns
e

To
pC

on
st

Tr
ee

De
pt

h
W

C

CR

MPQA

MR

MRPC

SICK-E

SST-2

SST-5

SUBJ

TREC
0.6

0.4

0.2

0.0

0.2

0.4

0.6

0.8

Figure 3: Correlation of 11 sentence encoders on trans-
fer tasks (y-axis) and probing tasks (x-axis) in Perone
et al. (2018).

Thus, future research might focus on more suit-
able (difficult) datasets and sentence classification
tasks for the evaluation of sentence embeddings, a
lesson already learned in other fields (Läubli et al.,
2018; Yu et al., 2018).

Importantly, depending on the set of evaluated
sentence encoders, such correlations can yield con-
tradictory outcomes. For example, Conneau et al.
(2018) evaluate more than 40 combinations of sim-
ilar sentence encoder architectures and observe the
strongest correlation with downstream task perfor-
mances for WC (cf. their figure 2). This is in con-
trast to the correlations from the results of Perone



59

et al. (2018), where WC had the lowest correlation.
Thus, it remains unclear to which extent downstram
tasks benefit from the different properties that are
defined by many probing tasks.

4 Conclusion

Others have laid out problems with the evaluation
of word embeddings (Faruqui et al., 2016) using
word similarity tasks. They referred to the vague-
ness of the data underlying the tasks (as well as
its annotations), the low correlations between ex-
trinsic and intrinsic evaluations, and the lack of
statistical tests. Our critique differs (in part) from
this in that we also address extrinsic evaluation and
the evaluation techniques themselves,3 and in that
we believe that the comparison between sentence
embeddings is not always fair, especially given the
current evaluations using logistic regression. This
implicitly favors larger embeddings, and may there-
fore result in misleading conclusions regarding the
superiority of different encoders.

As practical recommendations, we encourage
future research in sentence embeddings to (1) com-
pare embeddings of the same size; (2) treat nor-
malization as a further hyperparameter; and (3) use
multiple classifiers during evaluation, i.e., at least
logistic regression and an MLP. We recommend
against using unsupervised cosine+Pearson evalu-
ations but instead to use a learned similarity func-
tion, and to report MSE as an alternative to Pear-
son/Spearman correlations. If unsupervised eval-
uation is unavoidable, normalization is even more
important. Finally, we think that current transfer
tasks for sentence embeddings should be comple-
mented by more challenging ones for which bag-of-
words models or random projection models cannot
as easily compete.

Acknowledgments
We thank the reviewers for their helpful feedback.
This work has been supported by the German Re-
search Foundation (DFG) funded research train-
ing group “Adaptive Preparation of Information
form Heterogeneous Sources” (AIPHES, GRK
1994/1) and the DFG-funded project QA-EduInf
(GU 798/18-1, RI 803/12-1). Some calculations of
this research were conducted on the Lichtenberg
high performance cluster of the TU Darmstadt.

3Faruqui et al. (2016) also discuss some short-comings of
cosine similarity.

References
Frank J. Anscombe. 1973. Graphs in Statistical Analy-

sis. The American Statistician, 27(1):17–21.

Sanjeev Arora, Yingyu Liang, and Tengyu Ma. 2017.
A Simple but Tough-to-Beat Baseline for Sentence
Embeddings. In International Conference on Learn-
ing Representations (ICLR 2017).

Daniel Cer, Yinfei Yang, Sheng-yi Kong, Nan Hua,
Nicole Limtiaco, Rhomni St. John, Noah Constant,
Mario Guajardo-Cespedes, Steve Yuan, Chris Tar,
Yun-Hsuan Sung, Brian Strope, and Ray Kurzweil.
2018. Universal Sentence Encoder. CoRR,
abs/1803.11175.

Daniel M. Cer, Mona T. Diab, Eneko Agirre, Iñigo
Lopez-Gazpio, and Lucia Specia. 2017. SemEval-
2017 Task 1: Semantic Textual Similarity Multilin-
gual and Crosslingual Focused Evaluation. In Se-
mEval@ACL, pages 1–14. Association for Compu-
tational Linguistics.

Alexis Conneau and Douwe Kiela. 2018. Senteval: An
evaluation toolkit for universal sentence representa-
tions. In Proceedings of the Eleventh International
Conference on Language Resources and Evaluation
(LREC 2018). European Language Resource Associ-
ation.

Alexis Conneau, Douwe Kiela, Holger Schwenk, Loic
Barrault, and Antoine Bordes. 2017. Supervised
Learning of Universal Sentence Representations
from Natural Language Inference Data. In Proceed-
ings of the 2017 Conference on Empirical Methods
in Natural Language Processing (EMNLP 2017),
pages 681–691. Association for Computational Lin-
guistics.

Alexis Conneau, Germán Kruszewski, Guillaume Lam-
ple, Loı̈c Barrault, and Marco Baroni. 2018. What
you can cram into a single $&!#* vector: Probing
sentence embeddings for linguistic properties. In
Proceedings of the 56th Annual Meeting of the Asso-
ciation for Computational Linguistics (ACL 2018),
pages 2126–2136. Association for Computational
Linguistics.

Manaal Faruqui, Yulia Tsvetkov, Pushpendre Rastogi,
and Chris Dyer. 2016. Problems With Evaluation
of Word Embeddings Using Word Similarity Tasks.
In Proceedings of the 1st Workshop on Evaluating
Vector-Space Representations for NLP, pages 30–35.
Association for Computational Linguistics.

Lev Finkelstein, Evgeniy Gabrilovich, Yossi Matias,
Ehud Rivlin, Zach Solan, Gadi Wolfman, and Eytan
Ruppin. 2001. Placing search in context: The con-
cept revisited. In Proceedings of the 10th Interna-
tional Conference on World Wide Web (WWW ’01),
pages 406–414. ACM.

Ryan Kiros, Yukun Zhu, Ruslan Salakhutdinov,
Richard S. Zemel, Antonio Torralba, Raquel Urta-
sun, and Sanja Fidler. 2015. Skip-thought Vectors.

https://doi.org/10.1080/00031305.1973.10478966
https://doi.org/10.1080/00031305.1973.10478966
https://openreview.net/pdf?id=SyK00v5xx
https://openreview.net/pdf?id=SyK00v5xx
http://arxiv.org/abs/1803.11175
http://aclweb.org/anthology/L18-1269
http://aclweb.org/anthology/L18-1269
http://aclweb.org/anthology/L18-1269
http://www.aclweb.org/anthology/D17-1071
http://www.aclweb.org/anthology/D17-1071
http://www.aclweb.org/anthology/D17-1071
http://aclweb.org/anthology/P18-1198
http://aclweb.org/anthology/P18-1198
http://aclweb.org/anthology/P18-1198
https://www.aclweb.org/anthology/W16-2506
https://www.aclweb.org/anthology/W16-2506
https://doi.org/10.1145/371920.372094
https://doi.org/10.1145/371920.372094


60

In Proceedings of the 28th International Conference
on Neural Information Processing Systems (NIPS
2015), pages 3294–3302.

Samuel Läubli, Rico Sennrich, and Martin Volk. 2018.
Has machine translation achieved human parity? a
case for document-level evaluation. In Proceed-
ings of the 2018 Conference on Empirical Methods
in Natural Language Processing (EMNLP 2018),
pages 4791–4796. Association for Computational
Linguistics.

Yann LeCun, Leon Bottou, Genevieve B. Orr, and
Klaus Robert Müller. 1998. Efficient BackProp.
Springer Berlin Heidelberg, Berlin, Heidelberg.

Zachary C. Lipton and Jacob Steinhardt. 2018. Trou-
bling Trends in Machine Learning Scholarship.
CoRR, abs/1807.03341.

Ang Lu, Weiran Wang, Mohit Bansal, Kevin Gimpel,
and Karen Livescu. 2015. Deep Multilingual Corre-
lation for Improved Word Embeddings. In Proceed-
ings of the 2015 Conference of the North American
Chapter of the Association for Computational Lin-
guistics: Human Language Technologies (NAACL-
HLT 2015), pages 250–256, Denver, Colorado. As-
sociation for Computational Linguistics.

Gábor Melis, Chris Dyer, and Phil Blunsom. 2017. On
the state of the art of evaluation in neural language
models. CoRR, abs/1707.05589.

Tomas Mikolov, Ilya Sutskever, Kai Chen, Greg S Cor-
rado, and Jeff Dean. 2013. Distributed Representa-
tions of Words and Phrases and their Composition-
ality. In Advances in neural information processing
systems (NIPS 2013), pages 3111–3119.

Matteo Pagliardini, Prakhar Gupta, and Martin Jaggi.
2018. Unsupervised Learning of Sentence Embed-
dings Using Compositional n-Gram Features. In
Proceedings of the 2018 Conference of the North
American Chapter of the Association for Computa-
tional Linguistics: Human Language Technologies
(NAACL-HLT 2018), pages 528–540, New Orleans,
Louisiana. Association for Computational Linguis-
tics.

Jeffrey Pennington, Richard Socher, and Christopher
Manning. 2014. Glove: Global Vectors for Word
Representation. In Proceedings of the 2014 Con-
ference on Empirical Methods in Natural Language
Processing (EMNLP 2014), pages 1532–1543. Asso-
ciation for Computational Linguistics.

Christian S. Perone, Roberto Silveira, and Thomas S.
Paula. 2018. Evaluation of sentence embeddings
in downstream and linguistic probing tasks. CoRR,
abs/1806.06259.

Matt Post. 2018. A Call for Clarity in Reporting BLEU
Scores. In Proceedings of the Third Conference on
Machine Translation: Research Papers, pages 186–
191. Association for Computational Linguistics.

Nils Reimers and Iryna Gurevych. 2017. Reporting
Score Distributions Makes a Difference: Perfor-
mance Study of LSTM-networks for Sequence Tag-
ging. In Proceedings of the 2017 Conference on
Empirical Methods in Natural Language Processing
(EMNLP 2017), pages 338–348.

Andreas Rücklé, Steffen Eger, Maxime Peyrard, and
Iryna Gurevych. 2018. Concatenated power mean
embeddings as universal cross-lingual sentence rep-
resentations. CoRR, abs/1803.01400.

Dinghan Shen, Guoyin Wang, Wenlin Wang, Martin
Renqiang Min, Qinliang Su, Yizhe Zhang, Chun-
yuan Li, Ricardo Henao, and Lawrence Carin. 2018.
Baseline Needs More Love: On Simple Word-
Embedding-Based Models and Associated Pooling
Mechanisms. In Proceedings of the 56th Annual
Meeting of the Association for Computational Lin-
guistics (ACL 2018), pages 440–450. Association
for Computational Linguistics.

Sandeep Subramanian, Adam Trischler, Yoshua Ben-
gio, and Christopher J Pal. 2018. Learning gen-
eral purpose distributed sentence representations via
large scale multi-task learning. In International
Conference on Learning Representations (ICLR
2018).

John Wieting and Douwe Kiela. 2019. No Train-
ing Required: Exploring Random Encoders for Sen-
tence Classification. In International Conference on
Learning Representations (ICLR 2019).

Tao Yu, Rui Zhang, Kai Yang, Michihiro Yasunaga,
Dongxu Wang, Zifan Li, James Ma, Irene Li,
Qingning Yao, Shanelle Roman, Zilin Zhang, and
Dragomir Radev. 2018. Spider: A Large-Scale
Human-Labeled Dataset for Complex and Cross-
Domain Semantic Parsing and Text-to-SQL Task. In
Proceedings of the 2018 Conference on Empirical
Methods in Natural Language Processing (EMNLP
2018), pages 3911–3921. Association for Computa-
tional Linguistics.

http://aclweb.org/anthology/D18-1512
http://aclweb.org/anthology/D18-1512
https://doi.org/10.1007/3-540-49430-8_2
https://arxiv.org/abs/1807.03341
https://arxiv.org/abs/1807.03341
https://doi.org/10.3115/v1/N15-1028
https://doi.org/10.3115/v1/N15-1028
https://arxiv.org/abs/1707.05589
https://arxiv.org/abs/1707.05589
https://arxiv.org/abs/1707.05589
http://papers.nips.cc/paper/5021-distributed-representations-of-words-and-phrases-and-their-compositionality.pdf
http://papers.nips.cc/paper/5021-distributed-representations-of-words-and-phrases-and-their-compositionality.pdf
http://papers.nips.cc/paper/5021-distributed-representations-of-words-and-phrases-and-their-compositionality.pdf
https://doi.org/10.18653/v1/N18-1049
https://doi.org/10.18653/v1/N18-1049
https://doi.org/10.3115/v1/D14-1162
https://doi.org/10.3115/v1/D14-1162
http://arxiv.org/abs/1806.06259
http://arxiv.org/abs/1806.06259
https://www.aclweb.org/anthology/W18-6319
https://www.aclweb.org/anthology/W18-6319
http://aclweb.org/anthology/D17-1035
http://aclweb.org/anthology/D17-1035
http://aclweb.org/anthology/D17-1035
http://aclweb.org/anthology/D17-1035
https://arxiv.org/abs/1803.01400
https://arxiv.org/abs/1803.01400
https://arxiv.org/abs/1803.01400
http://aclweb.org/anthology/P18-1041
http://aclweb.org/anthology/P18-1041
http://aclweb.org/anthology/P18-1041
https://openreview.net/forum?id=B18WgG-CZ
https://openreview.net/forum?id=B18WgG-CZ
https://openreview.net/forum?id=B18WgG-CZ
https://openreview.net/forum?id=BkgPajAcY7
https://openreview.net/forum?id=BkgPajAcY7
https://openreview.net/forum?id=BkgPajAcY7
http://aclweb.org/anthology/D18-1425
http://aclweb.org/anthology/D18-1425
http://aclweb.org/anthology/D18-1425

