



















































Avoiding Reasoning Shortcuts: Adversarial Evaluation, Training, and Model Development for Multi-Hop QA


Proceedings of the 57th Annual Meeting of the Association for Computational Linguistics, pages 2726–2736
Florence, Italy, July 28 - August 2, 2019. c©2019 Association for Computational Linguistics

2726

Avoiding Reasoning Shortcuts: Adversarial Evaluation, Training, and
Model Development for Multi-Hop QA

Yichen Jiang and Mohit Bansal
UNC Chapel Hill

{yichenj, mbansal}@cs.unc.edu

Abstract
Multi-hop question answering requires a
model to connect multiple pieces of evidence
scattered in a long context to answer the ques-
tion. In this paper, we show that in the multi-
hop HotpotQA (Yang et al., 2018) dataset,
the examples often contain reasoning shortcuts
through which models can directly locate the
answer by word-matching the question with a
sentence in the context. We demonstrate this
issue by constructing adversarial documents
that create contradicting answers to the short-
cut but do not affect the validity of the origi-
nal answer. The performance of strong base-
line models drops significantly on our adver-
sarial evaluation, indicating that they are in-
deed exploiting the shortcuts rather than per-
forming multi-hop reasoning. After adversar-
ial training, the baseline’s performance im-
proves but is still limited on the adversarial
evaluation. Hence, we use a control unit that
dynamically attends to the question at differ-
ent reasoning hops to guide the model’s multi-
hop reasoning. We show that this 2-hop model
trained on the regular data is more robust to
the adversaries than the baseline model. Af-
ter adversarial training, this 2-hop model not
only achieves improvements over its counter-
part trained on regular data, but also outper-
forms the adversarially-trained 1-hop baseline.
We hope that these insights and initial im-
provements will motivate the development of
new models that combine explicit composi-
tional reasoning with adversarial training.1

1 Introduction

The task of question answering (QA) requires the
model to answer a natural language question by
finding relevant information in a given natural lan-
guage context. Most QA datasets require single-
hop reasoning only, which means that the evidence

1Our code and data are publicly available at:
https://github.com/jiangycTarheel/
Adversarial-MultiHopQA

What was the father of Kasper Schmeichel 
voted to be by the IFFHS in 1992?

R. Bolesław Kelly MBE (] ; born 18 November 1963) 
is a Danish former professional footballer who played 
as a Defender, and was voted the IFFHS 
World's Best Defender in 1992 and 1993.

Kasper Peter Schmeichel (] ; born 5 November 1986) is 
a Danish professional footballer who plays as a 
goalkeeper ... . He is the son of former Manchester 
United and Danish international goalkeeper 
Peter Schmeichel.

Edson Arantes do Nascimento (] ; born 23 October 1940), 
known as Pelé (] ), is a retired Brazilian professional 
footballer who played as a forward. In 1999, he was 
voted World Player of the Century by IFFHS.

Peter Bolesław Schmeichel MBE (] ; born 18 
November 1963) is a Danish former professional 
footballer who played as a goalkeeper, and was voted 
the IFFHS World's Best Goalkeeper in 1992 and 1993.

Kasper Hvidt (born 6 February 1976 in Copenhagen) 
is a Danish retired handball goalkeeper, who lastly played 
for KIF Kolding and previous Danish national team. ... 
Hvidt was also voted as Goalkeeper of the Year 
March 20, 2009, second place was Thierry Omeyer ...

Prediction: World's Best Goalkeeper (correct)

Q
ue

st
io

n 
G

ol
de

n 
R

ea
so

ni
ng

C
ha

in
 D

oc
s

D
is

tra
ct

or
D

oc
s

A
dv
er
sa
ri
al

D
oc

Prediction under adversary: IFFHS World's Best Defender

Figure 1: HotpotQA example with a reasoning short-
cut, and our adversarial document that eliminates this
shortcut to necessitate multi-hop reasoning.

necessary to answer the question is concentrated
in a single sentence or located closely in a single
paragraph (Q: “What’s the color of the sky?”, Con-
text: “The sky is blue.”, Answer: “Blue”). Such
datasets emphasize the role of matching and align-
ing information between the question and the con-
text (“sky→sky, color→blue”). Previous works
have shown that models with strong question-
aware context representation (Seo et al., 2017;
Xiong et al., 2017) can achieve super-human per-
formance on single-hop QA tasks like SQuAD
(Rajpurkar et al., 2016, 2018).

Recently, several multi-hop QA datasets, such

https://github.com/jiangycTarheel/Adversarial-MultiHopQA
https://github.com/jiangycTarheel/Adversarial-MultiHopQA


2727

as QAngaroo (Welbl et al., 2017) and Hot-
potQA (Yang et al., 2018), have been proposed
to further assess QA systems’ ability to perform
composite reasoning. In this setting, the informa-
tion required to answer the question is scattered in
the long context and the model has to connect mul-
tiple evidence pieces to pinpoint to the final an-
swer. Fig. 1 shows an example from the HotpotQA
dev set, where it is necessary to consider infor-
mation in two documents to infer the hidden rea-
soning chain “Kasper Schemeichel

son of−−−−→ Peter
Schemeichel voted as−−−−−→ World’s Best Goalkeeper”
that leads to the final answer. However, in this
example, one may also arrive at the correct an-
swer by matching a few keywords in the question
(“voted, IFFHS, in 1992”) with the corresponding
fact in the context without reasoning through the
first hop to find “father of Kasper Schmeichel”,
as neither of the two distractor documents con-
tains sufficient distracting information about an-
other person “voted as something by IFFHS in
1992”. Therefore, a model performing well on the
existing evaluation does not necessarily suggest its
strong compositional reasoning ability. To truly
promote and evaluate a model’s ability to perform
multi-hop reasoning, there should be no such “rea-
soning shortcut” where the model can locate the
answer with single-hop reasoning only. This is a
common pitfall when collecting multi-hop exam-
ples and is difficult to address properly.

In this work, we improve the original HotpotQA
distractor setting2 by adversarially generating bet-
ter distractor documents that make it necessary to
perform multi-hop reasoning in order to find the
correct answer. As shown in Fig. 1, we apply
phrase-level perturbations to the answer span and
the titles in the supporting documents to create the
adversary with a new title and a fake answer to
confuse the model. With the adversary added to
the context, it is no longer possible to locate the
correct answer with the single-hop shortcut, which
now leads to two possible answers (“World’s Best
Goalkeeper” and “World’s Best Defender”). We
evaluate the strong “Bi-attention + Self-attention”
model (Seo et al., 2017; Wang et al., 2017) from
Yang et al. (2018) on our constructed adversar-
ial dev set (adv-dev), and find that its EM score
drops significantly. In the example in Fig. 1, the

2HotpotQA has a fullwiki setting as an open-domain QA
task. In this work, we focus on the distractor setting as it pro-
vides a less noisy environment to study machine reasoning.

model is confused by our adversary and predicts
the wrong answer (“World’s Best Defender”). Our
experiments further reveal that when strong su-
pervision of the supporting facts that contain the
evidence is applied, the baseline achieves a sig-
nificantly higher score on the adversarial dev set.
This is because the strong supervision encourages
the model to not only locate the answer but also
find the evidence that completes the first reason-
ing hop and hence promotes robust multi-hop rea-
soning behavior from the model. We then train
the baseline with supporting fact supervision on
our generated adversarial training set (adv-train)
and observe significant improvement on adv-dev.
However, the result is still poor compared to the
model’s performance on the regular dev set be-
cause this single-hop model is not well-designed
to perform multi-hop reasoning.

To motivate and analyze some new multi-hop
reasoning models, we propose an initial architec-
ture by incorporating the recurrent control unit
from Hudson and Manning (2018), which dynam-
ically computes a distribution over question words
at each reasoning hop to guide the multi-hop bi-
attention. In this way, the model can learn to
put the focus on “father of Kasper Schmeichel” at
the first step and then attend to “voted by IFFHS
in 1992” in the second step to complete this 2-
hop reasoning chain. When trained on the regu-
lar data, this 2-hop model outperforms the single-
hop baseline in the adversarial evaluation, indi-
cating improved robustness against adversaries.
Furthermore, this 2-hop model, with or without
supporting-fact supervision, can benefit from ad-
versarial training and achieve better performance
on adv-dev compared to the counterpart trained
with the regular training set, while also outper-
forming the adversarially-trained baseline. Over-
all, we hope that these insights and initial improve-
ments will motivate the development of new mod-
els that combine explicit compositional reasoning
with adversarial training.

2 Adversarial Evaluation

2.1 The HotpotQA Task

The HotpotQA dataset (Yang et al., 2018) is
composed of 113k human-crafted questions, each
of which can be answered with facts from two
Wikipedia articles. During the construction of
the dataset, the crowd workers are asked to come
up with questions requiring reasoning about two



2728

Supporting Doc 1: Sachin Warrier
Sachin Warrier is a playback singer and composer in 
the Malayalam cinema industry from Kerala. 
He became notable with the song "Muthuchippi Poloru" 
from the film Thattathin Marayathu. He made his debut 
with the movie Malarvaadi Arts Club. He was working 
as a software engineer in Tata Consultancy Services
in Kochi. Later he resigned from the job to concentrate 
more on music. His latest work is as a composer for the 
movie Aanandam.

Supporting Doc 2: Tata Consultancy Services
Tata Consultancy Services Limited (TCS) is an Indian 
multinational information technology (IT) service, 
consulting and business solutions company 
Headquartered in Mumbai, Maharashtra. 
It is a subsidiary of the Tata Group and operates in 
46 countries.

Question: Where is the company that Sachin Warrier worked for as a software engineer headquartered? 

Answer: Mumbai
Model's prediction: Mumbai

Adversarial Doc:
Valencia Street Circuit Limited is an Indian 
multinational information technology (IT) service,
consulting and business solutions company 
Headquartered in Delhi, Maharashtra. 
It is a subsidiary of the Valencia Group and operates 
in 46 countries.

Model's prediction: Delhi

(Step 3)
Substitue all titles

and answers tokens

Original answer:
Mumbai

Advesarial answer:
Delhi

(Step 1)
Generate fake

answer

Title:
Tata Consultancy Services

New title:
Valencia Street Circuit

(Step 2)
Sample 

title

Figure 2: An illustration of our ADDDOC procedure. In this example, the keyword “headquarter” appears in no
distractor documents. Thus the reader can easily infer the answer by looking for this keyword in the context.

given documents. Yang et al. (2018) then se-
lect the top-8 documents from Wikipedia with the
shortest bigram TF-IDF (Chen et al., 2017) dis-
tance to the question as the distractors to form
the context with a total of 10 documents. Since
the crowd workers are not provided with distrac-
tor documents when generating the question, there
is no guarantee that both supporting documents
are necessary to infer the answer given the entire
context. The multi-hop assumption can be bro-
ken by incompetent distractor documents in two
ways. First, one of the selected distractors may
contain all required evidence to infer the answer
(e.g., “The father of Kasper Schmeichel was voted
the IFFHS World’s Best Goalkeeper in 1992.”).
Empirically, we find no such cases in HotpotQA,
as Wiki article about one subject rarely discusses
details of another subject. Second, the entire pool
of distractor documents may not contain the in-
formation to truly distract the reader/model. As
shown in Fig. 1, one can directly locate the an-
swer by looking for a few keywords in the question
(“voted, IFFHS, in 1992”) without actually dis-
covering the intended 2-hop reasoning path. We
call this pattern of bypassing the first reasoning
hop the “reasoning shortcut”, and we find such
shortcuts exist frequently in the non-comparison-

type examples in HotpotQA.3 We randomly sam-
ple 50 “bridge-type” questions in the dev set, and
found that 26 of them contain this kind of reason-
ing shortcut.

2.2 Adversary Construction

To investigate whether neural models exploit rea-
soning shortcuts instead of exploring the desired
reasoning path, we adapt the original examples in
HotpotQA to eliminate these shortcuts. Given a
context-question-answer tuple (C, q, a) that may
contain a reasoning shortcut, the objective is to
produce (C ′, q, a) such that (1) a is still the valid
answer to the new tuple, (2)C ′ is close to the origi-
nal example, and (3) there is no reasoning shortcut
that leads to a single answer. In HotpotQA, there
is a subset of 2 supporting documents P ⊂ C that
contains all evidence needed to infer the answer.
To achieve this, we propose an adversary AD-
DDOC (illustrated in Fig. 2) that constructs docu-
ments P ′ to get (ξ(C,P ′), q, a) where ξ is a func-
tion that mixes the context and adversaries.

3HotpotQA also includes a subset of comparison ques-
tions (e.g.,“Are Leo and Kate of the same age?”) that make
up to 21% of total examples in the dev set. These questions
can’t be answered without aggregating information from mul-
tiple documents, as shortcuts like “Leo is one-year older than
Kate” rarely exist in Wikipedia articles. Therefore, we simply
leave these examples unchanged in our adversarial data.



2729

Suppose p2 ∈ P is a document containing the
answer a and p1 ∈ P is the other supporting docu-
ment.4 ADDDOC applies a word/phrase-level per-
turbation to p2 so that the generated p′2 contains
a fake answer that satisfies the reasoning short-
cut but does not contradict the answer to the entire
question (e.g., the adversarial document in Fig. 2).
First, for every non-stopword in the answer, we
find the substitute within the top-10 closest words
in GloVe (Pennington et al., 2014) 100-d vector
space that doesn’t have an overlapping substring
longer than 3 with the original answer (“Mumbai
→Delhi, Goalkeeper→Defender”). If this proce-
dure fails, we randomly sample a candidate from
the entire pool of answers in the HotpotQA dev set
(e.g., “Rome” for Fig. 2 or “defence of the Cathe-
dral” for Fig. 1). We then replace the original an-
swer in p2 with our generated answer to get p′2.
If the original answer spans multiple words, we
substitute one non-stopword in the answer with
the corresponding sampled answer word to cre-
ate the fake answer (“World’s Best Goalkeeper→
World’s Best Defender”) and replace all mentions
of the original answer in p′2.

The resulting paragraph p′2 provides an answer
that satisfies the reasoning shortcut, but also con-
tradicts the real answer to the entire question as
it forms another valid reasoning chain connecting
the question to the fake answer (“Sachin Warrier
workAt−−−−→ TCS at−→ Delhi”). To break this contra-
dicting reasoning chain, we need to replace the
bridge entity that connects the two pieces of evi-
dence (“Tata Consultancy Services” in this case)
with another entity so that the generated answer
no longer serves as a valid answer to the ques-
tion. We replace the title of p′2 with a candidate
randomly sampled from all document titles in the
HotpotQA dev set. If the title of p1 appears in p′2,
we also replace it with another sampled title to en-
tirely eliminate the connection between p′2 and p1.
Empirically, we find that the title of either p1 or p2
serves as the bridge entity in most examples. Note
that it is possible that models trained on our adver-
sarial data could simply learn new reasoning short-
cuts in these adversaries by ignoring adversarial
documents with randomly-sampled titles, because
these titles never appear in any other document in
the context. Hence, to eliminate this bias in ti-

4|P | = 2 in HotpotQA. If both documents in P contain
the answer, we apply ADDDOC twice while alternating the
choice of p1 and p2

tle occurrence, for each adversarial document, we
additionally find another document from the entire
dev set that contains the exact title of our adversar-
ial document and add it to the context.5 Every new
document added to the context replaces an original
non-supporting document so that the total number
of documents in context remains unchanged. Note
that ADDDOC adversaries are model-independent,
which means that they require no access to the
model or any training data, similar to the AD-
DONESENT in Jia and Liang (2017).

3 Models

3.1 Encoding
We first describe the pre-processing and encod-
ing steps. We use a Highway Network (Srivas-
tava et al., 2015) of dimension v, which merges
the character embedding and GloVe word embed-
ding (Pennington et al., 2014), to get the word
representations for the context and the question
as x ∈ RJ×v and q ∈ RS×v where J and S
are the lengths of the context and question. We
then apply a bi-directional LSTM-RNN (Hochre-
iter and Schmidhuber, 1997) of d hidden units to
get the contextualized word representations for the
context and question: h = BiLSTM(x); u =
BiLSTM(q) so that h ∈ RJ×2d and u ∈ RS×2d.

3.2 Single-Hop Baseline
We use the bi-attention + self-attention
model (Yang et al., 2018; Clark and Gard-
ner, 2018), which is a strong near-state-of-the-art6

model on HotpotQA. Given the contextualized
encoding h,u for the context and question,
BiAttn(h,u) (Seo et al., 2017; Xiong et al.,
2017) first computes a similarity matrix MS×J

between every question and context word and use
it to derive context-to-query attention:

Ms,j =W1us +W2hj +W3(us � hj)

ps,j =
exp(Ms,j)∑S
s=1 exp(Ms,j)

cqj =
S∑

s=1

ps,jus

(1)

5Empirically, we find that our models trained on the ad-
versarial data without this final title-balancing step do not
seem to be exploiting this new shortcut, because they still
perform equally well on the title-balanced adversarial evalu-
ation. However, we keep this final title-balancing step in our
adversary-generation procedure so as to prevent future model
families from exploiting this title shortcut.

6At the time of submission: March 3rd, 2019.



2730

RNN RNN

question

bi-attention

RNN

RNN

self-attention

bi-attention

Word Emb Char Emb

context

Word Emb Char Emb

Query2Context Attention

S
of

tm
ax

W,b

Previous
Control

W,b W,b

Control Unit

Contextualized
word emb

question
vector

Context2Query and Query2Context
Attention

S
of

tm
ax

Context2Query
 Attention

Bridge-entity
Supervision

RNN

Start index

RNNEnd index

Figure 3: A 2-hop bi-attention model with a control unit. The Context2Query attention is modeled as in Seo et al.
(2017). The output distribution cv of the control unit is used to bias the Query2Context attention.

where W1,W2 and W3 are trainable parameters,
and � is element-wise multiplication. Then the
query-to-context attention vector is derived as:

mj = max1≤s≤S Ms,j

pj =
exp(mj)∑J
j=1 exp(mj)

qc =
J∑

j=1

pjhj

(2)

We then obtain the question-aware context rep-
resentation and pass it through another layer of
BiLSTM:

h′j = [hj ; cqj ;hj � cqj ; cqj � qc]

h1 = BiLSTM(h′)
(3)

where ; is concatenation. Self-attention is modeled
upon h1 as BiAttn(h1,h1) to produce h2. Then,
we apply linear projection to h2 to get the start in-
dex logits for span prediction and the end index
logits is modeled as h3 = BiLSTM(h2) followed
by linear projection. Furthermore, the model uses
a 3-way classifier on h3 to predict the answer as
“yes”, “no”, or a text span. The model is addition-
ally supervised to predict the sentence-level sup-
porting fact by applying a binary classifier to every
sentence on h2 after self-attention.

3.3 Compositional Attention over Question
To present some initial model insights for fu-
ture community research, we try to improve the
model’s ability to perform composite reasoning
using a recurrent control unit (Hudson and Man-
ning, 2018) that computes a distribution-over-
word on the question at each hop. Intuitively, the

control unit imitates human’s behavior when an-
swering a question that requires multiple reason-
ing steps. For the example in Fig. 1, a human
reader would first look for the name of “Kasper
Schmeichel’s father”. Then s/he can locate the
correct answer by finding what “Peter Schme-
ichel” (the answer to the first reasoning hop) was
“voted to be by the IFFHS in 1992”. Recall
that S, J are the lengths of the question and con-
text. At each hop i, given the recurrent control
state ci−1, contextualized question representation
u, and question’s vector representation q, the con-
trol unit outputs a distribution cv over all words in
the question and updates the state ci:

cqi = Proj[ci−1; q]; cai,s = Proj(cqi � us)

cvis = softmax(cais); ci =
S∑

s=1

cvi,s · us

(4)

where Proj is the linear projection layer. The dis-
tribution cv tells which part of the question is re-
lated to the current reasoning hop.

Then we use cv and ci to bias the BiAttn de-
scribed in the single-hop baseline. Specifically,
we use h � ci to replace h in Eqn. 1, Eqn. 2,
and Eqn. 3. Moreover, after we compute the sim-
ilarity matrix M between question and context
words as in Eqn. 1, instead of max-pooling M on
the question dimension (as done in the single-hop
bi-attention), we calculate the distribution over J
context words as:



2731

m′j = cv ·M

pj =
exp(m′j)∑J
j=1 exp(m

′
j)

qc =

J∑
j=1

pjhj

(5)

The query-to-context attention vector qc is ap-
plied to the following computation in Eqn. 3 to
get the query-aware context representation. Here,
with the output distribution from the control unit,
qc represents the context information that is most
relevant to the sub-question of the current rea-
soning hop, as opposed to encoding the context
most related to any question word in the origi-
nal bi-attention. Overall, this model (illustrated in
Fig. 3) combines the control unit from the state-
of-the-art multi-hop VQA model and the widely-
adopted bi-attention mechanism from text-based
QA to perform composite reasoning on the con-
text and question.

Bridge Entity Supervision However, even with
the multi-hop architecture to capture a hop-
specific distribution over the question, there is no
supervision on the control unit’s output distribu-
tion cv about which part of the question is impor-
tant to the current reasoning step, thus preventing
the control unit from learning the composite rea-
soning skill. To address this problem, we look for
the bridge entity (defined in Sec. 2.2) that connects
the two supporting documents. We supervise the
main model to predict the bridge entity span (“Tata
Consultancy Services” in Fig. 2) after the first bi-
attention layer, which indirectly encourages the
control unit to look for question information re-
lated to this entity (“company that Sachin Warrier
worked for as a software engineer”) at the first
hop. For examples with the answer appearing in
both supporting documents,7 the intermediate su-
pervision is given as the answer appearing in the
first supporting document, while the answer in the
second supporting document serves as the answer-
prediction supervision.

4 Experimental Setup

Adversarial Evaluation and Training For all
the adversarial analysis in this paper, we construct
four adversarial dev sets with different numbers
of adversarial documents per supporting document

7This mostly happens for questions requiring checking
multiple facts of an entity.

Train Reg Reg Adv Adv
Eval Reg Adv Reg Adv

1-hop Base 42.32 26.67 41.55 37.65
1-hop Base + sp 43.12 34.00 45.12 44.65
2-hop 47.68 34.71 45.71 40.72
2-hop + sp 46.41 32.30 47.08 46.87

Table 1: EM scores after training on the regular data or
on the adversarial training set ADD4DOCS-RAND, and
evaluation on the regular dev set or the ADD4DOCS-
RAND adv-dev set. “1-hop Base” and ”2-hop” do not
have sentence-level supporting-facts supervision.

containing answer (4 or 8) and mixing strategy
(randomly insert or prepend). We name these
4 dev sets “Add4Docs-Rand”, “Add4Docs-Prep”,
“Add8Docs-Rand”, and “Add8Docs-Prep”. For
adversarial training, we choose the “Add4Docs-
Rand” training set since it is shown in Wang and
Bansal (2018) that training with randomly inserted
adversaries yields the model that is the most ro-
bust to the various adversarial evaluation settings.
In the adversarial training examples, the fake titles
and answers are sampled from the original training
set. We randomly select 40% of the adversarial ex-
amples and add them to the regular training set to
build our adversarial training set.

Dataset and Metrics We use the Hot-
potQA (Yang et al., 2018) dataset’s distractor
setting. We show EM scores rather than F1 scores
because our generated fake answer usually has
word-overlap with the original answer, but the
overall result trends and take-away’s are the same
even for F1 scores.

Training Details We use 300-d pre-trained
GloVe word embedding (Pennington et al., 2014)
and 80-d encoding LSTM-RNNs. The control unit
of the 2-hop model has an 128-d internal state.
We train the models using Adam (Kingma and Ba,
2014) optimizer, with an initial learning rate of
0.001. We keep exponential moving averages of
all trainable variables in our models and use them
during the evaluation.

5 Results

Regularly-Trained Models In our main experi-
ment, we compare four models’ performance on
the regular HotpotQA and Add4Docs-Rand dev
sets, when trained on two different training sets
(regular or adversarial), respectively. The first
two columns in Table 1 show the result of models
trained on the regular training set only. As shown



2732

A4D-R A4D-P A8D-R A8D-P

1-hop Base 37.65 37.72 34.14 34.84
1-hop Base + sp 44.65 44.51 43.42 43.59
2-hop 40.72 41.03 37.26 37.70
2-hop + sp 46.87 47.14 44.28 44.44

Table 2: EM scores on 4 adversarial evaluation set-
tings after training on ADD4DOCS-RAND. ‘-R’ and
‘-P’ represent random insertion and prepending. A4D
and A8D stands for ADD4DOCS and ADD8DOCS adv-
dev sets.

in the first row, the single-hop baseline trained
on regular data performs poorly on the adversar-
ial evaluation, suggesting that it is indeed exploit-
ing the reasoning shortcuts instead of actually per-
forming the multi-hop reasoning in locating the
answer. After we add the supporting fact super-
vision (2nd row in Table 1), we observe a signif-
icant improvement8 (p < 0.001) on the adversar-
ial evaluation, compared to the baseline without
this strong supervision. However, this score is still
more than 9 points lower than the model’s perfor-
mance on the regular evaluation. Next, the 2-hop
bi-attention model with the control unit obtains a
higher EM score than the baseline in the adver-
sarial evaluation, demonstrating better robustness
against the adversaries. After this 2-hop model
is additionally supervised to predict the sentence-
level supporting facts, the performance in both
regular and adversarial evaluation decreases a bit,
but still outperforms both baselines in the regular
evaluation (with stat. significance). One possible
explanation for this performance drop is that the
2-hop model without the extra task of predicting
supporting facts overfits to the task of the final an-
swer prediction, thus achieving higher scores.

Adversarially-Trained Models We further
train all four models with the adversarial training
set, and the results are shown in the last two
columns in Table 1. Comparing the numbers
horizontally, we observe that after adversarial
training, both the baselines and the 2-hop models
with control unit gained statistically significant9

improvement on the adversarial evaluations.
Comparing the numbers in Table 1 vertically,
we show that the 2-hop model (row 3) achieves
significantly (p-value < 0.001) better results than
the baseline (row 1) on both regular and adver-

8All stat. signif. is based on bootstrapped randomization
test with 100K samples (Efron and Tibshirani, 1994).

9Statistical significance of p < 0.01.

Train Regular Regular Adv Adv
Eval Regular Adv Regular Adv

2-hop 47.68 34.71 45.71 40.72
2-hop - Ctrl 46.12 32.46 45.20 40.32
2-hop - Bridge 43.31 31.80 41.90 37.37
1-hop Base 42.32 26.67 41.55 37.65

Table 3: Ablation for the Control unit and Bridge-entity
supervision, reported as EM scores after training on
the regular or adversarial ADD4DOCS-RAND data, and
evaluation on regular dev set and ADD4DOCS-RAND
adv-dev set. Note that 1-hop Base is same as 2-hop
without both control unit and bridge-entity supervision.

sarial evaluation. After we add the sentence-level
supporting-fact supervision, the 2-hop model (row
4) obtains further improvements in both regular
and adversarial evaluation. Overall, we hope
that these initial improvements will motivate the
development of new models that combine explicit
compositional reasoning with adversarial training.

Adversary Ablation In order to test the robust-
ness of the adversarially-trained models against
new adversaries, we additionally evaluate them on
dev sets with varying numbers of adversarial doc-
uments and a different adversary placement strat-
egy elaborated in Sec. 4. As shown in the first
two columns in Table 2, neither the baselines nor
the 2-hop models are affected when the adversarial
documents are pre-pended to the context. When
the number of adversarial documents per support-
ing document with answer is increased to eight,
all four models’ performance drops by more than
1 points, but again the 2-hop model, with or with-
out supporting-fact supervision, continues to out-
perform its single-hop counterpart.

Control Unit Ablation We also conduct an ab-
lation study on the 2-hop model by removing the
control unit. As shown in the first two rows of Ta-
ble 3, the model with the control unit outperforms
the alternative in all 4 settings with different train-
ing and evaluation data combinations. The results
validate our intuition that the control unit can im-
prove the model’s multi-hop reasoning ability and
robustness against adversarial documents.

Bridge-Entity Supervision Ablation We fur-
ther investigate how intermediate supervision of
finding the bridge entity affects the overall perfor-
mance. For this ablation, we also construct an-
other 2-hop model without the bridge-entity super-



2733

vision, using 2 unshared layers of bi-attention (2-
hop - Bridge), as opposed to our previous model
with 2 parallel, shared layers of bi-attention. As
shown in Table 3, both the 2-hop and 1-hop mod-
els without the bridge-entity supervision suffer
large drops in the EM scores, suggesting that in-
termediate supervision is important for the model
to learn the compositional reasoning behavior.

6 Analysis

In this section, we seek to understand the behavior
of the model under the influence of the adversar-
ial examples. Following Jia and Liang (2017), we
focus on examples where the model predicted the
correct answer on the regular dev set. This portion
of the examples is divided into “model-successes”
— where the model continues to predict the cor-
rect answer given the adversarial documents, and
“model-failures” — where the model makes the
wrong prediction on the adversarial example.

Manual Verification of Adversaries We first
verify that the adversarial documents do not con-
tradict the original answer. As elaborated in
Sec. 2.2, we assume that the bridge entity is the
title of a supporting document and substitute it
with another title sampled from the training/dev
set. Thus, the contradiction could arise when the
adversarial document p′2 is linked with p1 with an-
other entity other than the titles. We randomly
sample 50 examples in ADD4DOCS-RAND, and
find 0 example where the fake answers in the ad-
versarial docs contradict the original answer. This
shows that our adversary construction is effective
in breaking the logical connection between the
supporting documents and adversaries.

Model Error Analysis Next, we try to under-
stand the model’s false prediction in the “model-
failures” subset on ADD4DOCS-RAND. For the
1-hop Baseline trained on regular data (2nd row,
2nd column in Table 1), in 96.3% of the failures,
the model’s prediction spans at least one of the ad-
versarial documents. For the same baseline trained
with adversarial data, the model’s prediction spans
at least one adversarial document in 95.4% of the
failures. We further found that in some examples,
the span predicted on the adversarial data is much
longer than the span predicted on the original dev
set, sometimes starting from a word in one doc-
ument and ending several documents later. This
is because our models predict the start and end in-

dexes separately, and thus could be affected by dif-
ferent adversarial documents in the context.

Adversary Failure Analysis Finally, we inves-
tigate those “model-successes”, where the adver-
sarial examples fail to fool the model. Specifically,
we find that some questions can be answered with
a single document. For the question “Who pro-
duced the film that was Jennifer Kent’s directo-
rial debut?”, one supporting document states “The
Babadook is ... directed by Jennifer Kent in her
directorial debut, and produced by Kristina Tarbell
and Kristian Corneille.” In this situation, even an
adversary is unable to change the single-hop na-
ture of the question. We refer to the appendix for
the full example.

Toward Better Multi-Hop QA Datasets
Lastly, we provide some intuition that is of impor-
tance for future attempts in collecting multi-hop
questions. In general, the final sub-question of a
multi-hop question should not be over-specific,
so as to avoid large semantic match between
the question and the surrounding context of the
answer. Compared to the question in Fig. 1, it is
harder to find a shortcut for the question “What
government position was held by the woman
who portrayed Corliss Archer in ...” because the
final sub-question (“What government position”)
contains less information for the model to directly
exploit, and it is more possible that a distracting
document breaks the reasoning shortcut by men-
tioning another government position held by a
person.

7 Related Works

Multi-hop Reading Comprehension The last
few years have witnessed significant progress
on large-scale QA datasets including cloze-style
blank-filling tasks (Hermann et al., 2015), open-
domain QA (Yang et al., 2015), QA with answer
span prediction (Rajpurkar et al., 2016, 2018), and
generative QA (Nguyen et al., 2016). However,
all of the above datasets are confined to a single-
document context per question domain.

Earlier attempts in multi-hop QA focused on
reasoning about the relations in a knowledge
base (Jain, 2016; Zhou et al., 2018; Lin et al.,
2018) or tables (Yin et al., 2015). The bAbI
dataset (Weston et al., 2016) uses synthetic con-
textx and requires the model to combine multi-
ple pieces of evidence in the text-based context.



2734

TriviaQA (Joshi et al., 2017) includes a small por-
tion of questions that require cross-sentence in-
ference. Welbl et al. (2017) uses Wikipedia ar-
ticles as the context and subject-relation pairs as
the query, and construct the multi-hop QAngaroo
dataset by traversing a directed bipartite graph. It
is designed in a way such that the evidence re-
quired to answer a query could be spread across
multiple documents that are not directly related to
the query. HotpotQA (Yang et al., 2018) is a more
recent multi-hop dataset that has crowd-sourced
questions with diverse syntactic and semantic fea-
tures. HotpotQA and QAngaroo also differ in their
types of multi-hop reasoning covered. Because
of the knowledge-base domain and the triplet for-
mat used in the construction, QAngaroo’s ques-
tions usually require inferring the desired property
of a query subject by finding a bridge entity that
connects the query to the answer. HotpotQA in-
cludes three more types of question, each requir-
ing a different reasoning paradigm. Some exam-
ples require inferring the bridge entity from the
question (Type I in Yang et al. (2018)), while oth-
ers demand checking facts or comparing subjects’
properties from two different documents (Type II
and comparison question).

Adversarial Evaluation and Training Jia and
Liang (2017) first applied adversarial evaluation
to QA models on the SQuAD (Rajpurkar et al.,
2016) dataset by generating a sentence that only
resembles the question syntactically and append-
ing it to the paragraph. They report that the perfor-
mances of state-of-the-art QA models (Seo et al.,
2017; Hu et al., 2018; Huang et al., 2018) drop
significantly when evaluated on the adversarial
data. Wang and Bansal (2018) further improves
the AddSent adversary and proposed AddSentDi-
verse that employs a diverse vocabulary for the
question conversion procedure. They show that
models trained with such adversarial examples can
be robust against a wide range of adversarial eval-
uation samples. Our paper shares the spirit with
these two works as we also try to investigate mod-
els’ over-stability to semantics-altering perturba-
tions. However, our study also differs from the
previous works (Jia and Liang, 2017; Wang and
Bansal, 2018) in two points. First, we gener-
ate adversarial documents by replacing the answer
and bridge entities in the supporting documents
instead of converting the question into a state-
ment. Second, our adversarial documents still pre-

serve words with common semantic meaning to
the question so that it can distract models that are
exploiting the reasoning shortcut in the context.

8 Conclusion

In this work, we identified reasoning shortcuts in
the HotpotQA dataset where the model can locate
the answer without multi-hop reasoning. We con-
structed adversarial documents that can fool the
models exploiting the shortcut, and found that the
performance of a state-of-the-art model dropped
significantly under our adversarial examples. We
showed that this baseline can improve on the ad-
versarial evaluation after being trained on the ad-
versarial data. We next proposed to use a con-
trol unit that dynamically attends to the question
to guide the bi-attention in multi-hop reasoning.
Trained on the regular data, this 2-hop model is
more robust against the adversary than the base-
line; and after being trained with adversarial data,
this model achieved further improvements on the
adversarial evaluation and also outperforms the
baseline. Overall, we hope that these insights and
initial improvements will motivate the develop-
ment of new models that combine explicit com-
positional reasoning with adversarial training.

9 Acknowledgement

We thank the reviewers for their helpful com-
ments. This work was supported by DARPA
(YFA17-D17AP00022), Google Faculty Research
Award, Bloomberg Data Science Research Grant,
Salesforce Deep Learning Research Grant, Nvidia
GPU awards, Amazon AWS, and Google Cloud
Credits. The views, opinions, and/or findings con-
tained in this article are those of the authors and
should not be interpreted as representing the offi-
cial views or policies, either expressed or implied,
of the funding agency.

References
Danqi Chen, Adam Fisch, Jason Weston, and Antoine

Bordes. 2017. Reading wikipedia to answer open-
domain questions. In Proceedings of the 55th An-
nual Meeting of the Association for Computational
Linguistics (Volume 1: Long Papers).

Christopher Clark and Matt Gardner. 2018. Simple
and effective multi-paragraph reading comprehen-
sion. In Proceedings of the 56th Annual Meeting of
the Association for Computational Linguistics (Vol-
ume 1: Long Papers).



2735

Bradley Efron and Robert J Tibshirani. 1994. An intro-
duction to the bootstrap. CRC press.

Karl Moritz Hermann, Tomas Kocisky, Edward
Grefenstette, Lasse Espeholt, Will Kay, Mustafa Su-
leyman, and Phil Blunsom. 2015. Teaching ma-
chines to read and comprehend. In Advances in Neu-
ral Information Processing Systems, pages 1693–
1701.

Sepp Hochreiter and Jürgen Schmidhuber. 1997.
Long short-term memory. Neural computation,
9(8):1735–1780.

Minghao Hu, Yuxing Peng, Zhen Huang, Xipeng Qiu,
Furu Wei, and Ming Zhou. 2018. Reinforced
mnemonic reader for machine reading comprehen-
sion. In IJCAI.

Hsin-Yuan Huang, Chenguang Zhu, Yelong Shen, and
Weizhu Chen. 2018. Fusionnet: Fusing via fully-
aware attention with application to machine compre-
hension. In ICLR.

Drew A Hudson and Christopher D Manning. 2018.
Compositional attention networks for machine rea-
soning. In Proceedings of ICLR.

Sarthak Jain. 2016. Question answering over knowl-
edge base using factual memory networks. In Pro-
ceedings of the NAACL Student Research Workshop.
Association for Computational Linguistics.

Robin Jia and Percy Liang. 2017. Adversarial ex-
amples for evaluating reading comprehension sys-
tems. In Proceedings of the Conference on Em-
pirical Methods in Natural Language Processing
(EMNLP).

Mandar Joshi, Eunsol Choi, Daniel S Weld, and Luke
Zettlemoyer. 2017. Triviaqa: A large scale distantly
supervised challenge dataset for reading comprehen-
sion. arXiv preprint arXiv:1705.03551.

Diederik P. Kingma and Jimmy Ba. 2014. Adam: A
method for stochastic optimization. CoRR.

Xi Victoria Lin, Richard Socher, and Caiming Xiong.
2018. Multi-hop knowledge graph reasoning with
reward shaping. In EMNLP.

Tri Nguyen, Mir Rosenberg, Xia Song, Jianfeng Gao,
Saurabh Tiwary, Rangan Majumder, and Li Deng.
2016. Ms marco: A human generated machine
reading comprehension dataset. arXiv preprint
arXiv:1611.09268.

Jeffrey Pennington, Richard Socher, and Christopher D
Manning. 2014. Glove: Global vectors for word
representation. In Conference on Empirical Meth-
ods in Natural Language Processing (EMNLP).

P. Rajpurkar, R. Jia, and P. Liang. 2018. Know
what you don’t know: Unanswerable questions for
SQuAD. In Association for Computational Linguis-
tics (ACL).

Pranav Rajpurkar, Jian Zhang, Konstantin Lopyrev, and
Percy Liang. 2016. Squad: 100,000+ questions for
machine comprehension of text. In Proceedings of
the Conference on Empirical Methods in Natural
Language Processing (EMNLP).

Minjoon Seo, Aniruddha Kembhavi, Ali Farhadi, and
Hannaneh Hajishirzi. 2017. Bidirectional attention
flow for machine comprehension. In International
Conference on Learning Representations (ICLR).

Rupesh Kumar Srivastava, Klaus Greff, and Jürgen
Schmidhuber. 2015. Highway networks. In Inter-
national Conference on Machine Learning (ICML).

Wenhui Wang, Nan Yang, Furu Wei, Baobao Chang,
and Ming Zhou. 2017. Gated self-matching net-
works for reading comprehension and question an-
swering. In Proceedings of the 55th Annual Meet-
ing of the Association for Computational Linguistics
(Volume 1: Long Papers), volume 1, pages 189–198.

Yicheng Wang and Mohit Bansal. 2018. Robust ma-
chine comprehension models via adversarial train-
ing. In NAACL.

Johannes Welbl, Pontus Stenetorp, and Sebastian
Riedel. 2017. Constructing datasets for multi-hop
reading comprehension across documents. In TACL.

Jason Weston, Antoine Bordes, Sumit Chopra, Alexan-
der M Rush, Bart van Merriënboer, Armand Joulin,
and Tomas Mikolov. 2016. Towards ai-complete
question answering: A set of prerequisite toy tasks.
In ICLR.

Caiming Xiong, Victor Zhong, and Richard Socher.
2017. Dynamic coattention networks for question
answering. In ICLR.

Yi Yang, Wen-tau Yih, and Christopher Meek. 2015.
Wikiqa: A challenge dataset for open-domain ques-
tion answering. In Proceedings of the 2015 Con-
ference on Empirical Methods in Natural Language
Processing, pages 2013–2018.

Zhilin Yang, Peng Qi, Saizheng Zhang, Yoshua Ben-
gio, William W Cohen, Ruslan Salakhutdinov, and
Christopher D Manning. 2018. Hotpotqa: A dataset
for diverse, explainable multi-hop question answer-
ing. In Conference on Empirical Methods in Natural
Language Processing (EMNLP).

Pengcheng Yin, Zhengdong Lu, Hang Li, and Ben Kao.
2015. Neural enquirer: Learning to query tables.
arXiv preprint.

Mantong Zhou, Minlie Huang, and Xiaoyan Zhu.
2018. An interpretable reasoning network for multi-
relation question answering. In Proceedings of
the 27th International Conference on Computational
Linguistics.



2736

Who produced the film that was Jennifer Kent's 
directorial debut?

The Aphra Behn is a 2014 Australian psychological 
horror film written and directed by Scott Hahn in her 
directorial debut, and produced by Kristina Mutrux and 
Kristian ionesco. ...

Jennifer Kent is an Australian actress, writer and director, 
best known for her horror film "The Babadook" (2014), 
which was her directorial debut. She is currently 
filming her second film, "The Nightingale".

You Can't Kill Stephen King is a 2012 American comedy 
horror film that was directed by Monroe Mann, Ronnie 
Khalil, and Jorge Valdés-Iga, and is the directorial debut
of Khalil and the feature film directorial debut of Mann ...

The Babadook is a 2014 Australian psychological horror 
film written and directed by Jennifer Kent in her 
directorial debut, and produced byKristina Ceyton 
and Kristian Moliere. The film stars Essie Davis, Noah 
Wiseman, Daniel Henshall, Hayley McElhinney, Barbara 
West, and Ben Winspear.', ' It is based on the 2005 short 
film "Monster", also written and directed by Kent.

The Iron Giant is a 1999 American animated science-
fiction comedy-drama action film using both traditional 
animation and computer animation, produced by and 
directed by Brad Bird in his directorial debut.

Prediction: Kristina Ceyton and Kristian Moliere

Q
ue

st
io

n 
G

ol
de

n 
R

ea
so

ni
ng

C
ha

in
 D

oc
s

D
is

tra
ct

or
D

oc
s

A
dv
er
sa
ri
al

D
oc

Prediction under adversary: Kristina Ceyton and Kristian Moliere

Figure 4: A single-hop HotpotQA example that cannot
be fixed with our adversary.

Appendix

A Examples

We show an HotpotQA (Yang et al., 2018) exam-
ple of our adversarial documents fail to fool the
model into predicting the fake answer. As shown
in Fig. 4, the question can be directly answered
by the second document in the Golden Reasoning
Chain. Therefore, it is logically impossible to cre-
ate an adversarial document to break this single-
hop situation without introducing contradiction.


