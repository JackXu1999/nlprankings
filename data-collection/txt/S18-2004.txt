



















































Learning Neural Word Salience Scores


Proceedings of the 7th Joint Conference on Lexical and Computational Semantics (*SEM), pages 33–42
New Orleans, June 5-6, 2018. c©2018 Association for Computational Linguistics

Learning Neural Word Salience Scores

Krasen Samardzhiev Andrew Gargett
Department of Computer Science, University of Liverpool

Science and Technology Facilities Council.
krasensam@gmail.com, danushka@liverpool.ac.uk

andrew.gargett@stfc.ac.uk

Danushka Bollegala

Abstract

Measuring the salience of a word is an essen-
tial step in numerous NLP tasks. Heuristic ap-
proaches such as tfidf have been used so far
to estimate the salience of words. We propose
Neural Word Salience (NWS) scores, unlike
heuristics, are learnt from a corpus. Specifi-
cally, we learn word salience scores such that,
using pre-trained word embeddings as the in-
put, can accurately predict the words that ap-
pear in a sentence, given the words that ap-
pear in the sentences preceding or succeed-
ing that sentence. Experimental results on sen-
tence similarity prediction show that the learnt
word salience scores perform comparably or
better than some of the state-of-the-art ap-
proaches for representing sentences on bench-
mark datasets for sentence similarity, while us-
ing only a fraction of the training and predic-
tion times required by prior methods. More-
over, our NWS scores positively correlate with
psycholinguistic measures such as concrete-
ness, and imageability implying a close con-
nection to the salience as perceived by hu-
mans.

1 Introduction

Humans can easily recognise the words that con-
tribute to the meaning of a sentence (i.e. content
words) from words that serve only a grammatical
functionality (i.e. functional words). For example,
functional words such as the, an, a etc. have lim-
ited contributions towards the overall meaning of
a document and are often filtered out as stop words
in information retrieval systems (Salton and Buck-
ley, 1983). We define the salience q(w) of a word
w in a given text T as the semantic contribution
made by w towards the overall meaning of T . If
we can accurately compute the salience of words,
then we can develop better representations of texts
that can be used in downstream NLP tasks such as
similarity measurement (Arora et al., 2017) or text

(e.g. sentiment, entailment) classification (Socher
et al., 2011).

As described later in section 2, existing meth-
ods for detecting word salience can be classi-
fied into two groups: (a) lexicon-based filter-
ing methods such as stop word lists, or (b)
word frequency-based heuristics such as the pop-
ular term-frequency inverse document frequency
(tfidf) (Jones, 1972) measure and its variants. Un-
fortunately, two main drawbacks can be identified
in common to both stop words lists and frequency-
based salience scores.

First, such methods do not take into account the
semantics associated with individual words when
determining their salience. For example, consider
the following two adjacent sentences extracted
from a newspaper article related to the visit of the
Japanese Prime Minister, Shinzo Abe, to the White
House in Washington, to meet the US President
Donald Trump.

(a) Abe visited Washington in February and met
Trump in the White House.

(b) Because the trade relations between US and
Japan have been fragile after the recent com-
ments by the US President, the Prime Minis-
ter’s visit to the US can be seen as an attempt
to reinforce the trade relations.

In Sentence (a), the Japanese person name Abe or
American person name Trump would occur less
in a corpus than the US state name Washington.
Nevertheless, for the main theme of this sentence,
Japanese Prime minister met US President, the
two person names are equally important as the lo-
cation they met. Therefore, we must look into the
semantics of the individual words when comput-
ing their saliences.

Second, words do not occur independently of
one another in a text, and methods that compute

33



word salience using frequency or pre-compiled
stop words lists alone do not consider the contex-
tual information. For example, the two sentences
(a) and (b) in our previous example are extracted
from the same newspaper article and are adjacent.
The words in the two sentences are highly re-
lated. For example, Abe in sentence (a) refers to
the Prime Minister in sentence (b), and Trump in
sentence (a) is refers to the US President in sen-
tence (b). A human reader who reads sentence (a)
before sentence (b) would expect to see some re-
lationship between the topic discussed in (a) and
that in the next sentence (b). Unfortunately, meth-
ods that compute word salience scores considering
each word independently from all other words in
near by contexts, ignore such proximity relation-
ships.

To overcome the above-mentioned disfluencies
in existing word salience scores, we propose an
unsupervised method that first randomly initialises
word salience scores, and subsequently updates
them such that we can accurately predict the words
in local contexts. Specifically, we train a two-layer
neural network where in the first layer we take
pre-trained word embeddings of the words in a
sentence Si as the input and compute a represen-
tation for Si (here onwards referred to as a sen-
tence embedding) as the weighted average of the
input word embeddings. The weights correspond
to the word salience scores of the words in Si.
Likewise, we apply the same approach to compute
the sentence embedding for the sentence Si−1 pre-
ceding Si and Si+1 succeeding Si in a sentence-
ordered corpus. Because Si−1, Si and Si+1 are ad-
jacent sentences, we would expect the sentence
pairs (Si, Si−1) and (Si, Si+1) to be topically re-
lated.1

We would expect a high degree of cosine sim-
ilarity between si and si−1, and si and si+1,
where boldface symbols indicate vectors. Like-
wise, for a randomly selected sentence Sj /∈
{Si−1, Si, Si+1}, the expect similarity between Sj
and Si would be low. We model this as a super-
vised similarity prediction task and use backprop-
agation to update the word salience scores, keep-
ing word embeddings fixed. We refer to the word

1Si−1 and Si+1 could also be topically related and pro-
duce a positive training examples in some cases. However,
they are non-adjacent and possibly less related compared to
adjacent sentence pairs. Because we have an abundant supply
of sentences, and we want to reduce label noise in positive
examples, we do not consider (Si−1, Si+1) as a positive ex-
ample.

salience scores learnt by the proposed method as
the Neural Word Salience (NWS) scores. We will
use the contextual information of a word to learn
its salience. However, once learnt, we consider
salience as a property of a word that holds inde-
pendently of its context. This enables us to use the
same salience score for a word after training, with-
out having to modify it considering the context in
which it occurs.

Several remarks can be made about the pro-
posed method for learning NWS scores. First, we
do not require labelled data for learning NWS
scores. Although we require semantically similar
(positive) and semantically dissimilar (negative)
pairs of sentences for learning the NWS scores,
both positive and negative examples are automati-
cally extracted from the given corpus. Second, we
use pre-trained word embeddings as the input, and
do not learn the word embeddings as part of the
learning process. This design choice differentiates
our work from previously proposed sentence em-
bedding learning methods that jointly learn word
embeddings as well as sentence embeddings (Hill
et al., 2016; Kiros et al., 2015; Kenter et al., 2016).
Moreover, it decouples the word salience score
learning problem from word or sentence embed-
ding learning problem, thereby simplifying the op-
timisation task and speeding up the learning pro-
cess.

We use the NWS scores to compute sen-
tence embeddings and measure the similarity be-
tween two sentences using 18 benchmark datasets
for semantic textual similarity in past SemEval
tasks (Agirre et al., 2012). Experimental results
show that the sentence similarity scores com-
puted using the NWS scores and pre-trained word
embeddings show a high degree of correlation
with human similarity ratings in those bench-
mark datasets. Moreover, we compare the NWS
scores against the human ratings for psycholin-
guistic properties of words such as arousal, va-
lence, dominance, imageability, and concreteness.
Our analysis shows that NWS scores demonstrate
a moderate level of correlation with concreteness
and imageability ratings, despite not being specifi-
cally trained to predict such psycholinguistic prop-
erties of words.

2 Related Work

Word salience scores have long been studied in
the information retrieval community (Salton and

34



Buckley, 1983). Given a user query described in
terms of one or more keywords, an information
retrieval system must find the most relevant doc-
uments to the user query from a potentially large
collection of documents. Word salience scores
based on term frequency, document frequency, and
document length have been proposed such as tfidf
and BM25 (Robertson, 1997).

Our proposed method learns word salience
scores by creating sentence embeddings. Next, we
briefly review such sentence embedding methods
and explain the differences between the sentence
embedding learning problem and word salience
learning problem.

Sentences have a syntactic structure and the or-
dering of words affects the meaning expressed
in the sentence. Consequently, compositional ap-
proaches for computing sentence-level semantic
representations from word-level semantic repre-
sentations have used numerous linear algebraic
operators such as vector addition, element-wise
multiplication, multiplying by a matrix or a ten-
sor (Blacoe and Lapata, 2012; Mitchell and Lap-
ata, 2008).

Alternatively to applying nonparametric opera-
tors on word embeddings to create sentence em-
beddings, recurrent neural networks can learn the
optimal weight matrix that can produce an ac-
curate sentence embedding when repeatedly ap-
plied to the constituent word embeddings. For ex-
ample, skip-thought vectors (Kiros et al., 2015)
use bi-directional LSTMs to predict the words in
the order they appear in the previous and next
sentences given the current sentence. Although
skip-thought vectors have shown superior perfor-
mances in supervised tasks, its performance on
unsupervised tasks has been sub-optimal (Arora
et al., 2017). Moreover, training bi-directional
LSTMs from large datasets is time consuming and
we also need to perform LSTM inference in or-
der to create the embedding for unseen sentences
at test time, which is time consuming compared to
weighted addition of the input word embeddings.
FastSent (Hill et al., 2016) was proposed as an
alternative lightweight approach for sentence em-
bedding where a softmax objective is optimised to
predict the occurrences of words in the next and
the previous sentences, ignoring the ordering of
the words in the sentence.

Surprisingly, averaging word embeddings to
create sentence embeddings has shown compara-

Figure 1: Overview of the proposed neural word salience
learning method. Given two sentences (Si, Sj), we learn the
salience scores of words q(w) such that we can predict the
similarity between the two sentences using their embeddings
si, sj . Difference between predicted similarity and actual la-
bel is considered as the error and its gradient is backpropa-
gated through the network to update q(w).

ble performances to sentence embeddings that are
learnt using more sophisticated word-order sen-
sitive methods. For example, (Arora et al., 2017)
proposed a method to find the optimal weights for
combining word embeddings when creating sen-
tence embeddings using unigram probabilities, by
maximising the likelihood of the occurrences of
words in a corpus. Siamese CBOW (Kenter et al.,
2016) learns word embeddings such that we can
accurately compute sentence embeddings by aver-
aging the word embeddings. Although averaging
is an order insensitive operator, (Adi et al., 2016)
empirically showed that it can accurately predict
the content and word order in sentences. This can
be understood intuitively by recalling that words
that appear between two words are often different
in contexts where those two words are swapped.
For example, in the two sentences “Ostrich is a
large bird that lives in Africa” and “Large birds
such as Ostriches live in Africa”, the words that
appear in between ostrich and bird are different,
giving rise to different sentence embeddings even
when sentence embeddings are computed by aver-
aging the individual word embeddings. Instead of
considering all words equally for sentence embed-
ding purposes, attention-based models (Hahn and
Keller, 2016; Yin et al., 2016; Wang et al., 2016)
learn the amount of weight (attention) we must as-
sign to each word in a given context.

Our proposed method for learning NWS scores
is based on the prior observation that averaging
is an effective heuristic for creating sentence em-
beddings from word embeddings. However, unlike
sentence embedding learning methods that do not
learn word salience scores (He and Lin, 2016; Yin

35



et al., 2016) , our goal in this paper is to learn word
salience scores and not sentence embeddings. We
compute sentence embeddings only for the pur-
pose of evaluating the word salience scores we
learn. Moreover, our work differs from Siamese
CBOW (Kenter et al., 2016) in that we do not learn
word embeddings but take pre-trained word em-
beddings as the input for learning word salience
scores. NWS scores we learn in this paper are also
different from the salience scores learnt by (Arora
et al., 2017) because they do not constrain their
word salience scores such that they can be used to
predict the words that occur in adjacent sentences.

3 Neural Word Salience Scores

Let us consider a vocabulary V of words w ∈ V .
For the simplicity of exposition, we limit the vo-
cabulary to unigrams but note that the proposed
method can be used to learn salience scores for
arbitrary length n-grams. We assume that we are
given d-dimensional pre-trained word embeddings
w ∈ Rd for the words in V . Let us denote
the NWS score of w by q(w) ∈ R. We learn
q(w) such that the similarity between two adja-
cent sentences Si and Si−1, or Si and Si+1 in
a sentence-ordered corpus C is larger than that
between two non-adjacent sentences Si and Sj ,
where j /∈ {i − 1, i, i + 1}. Let us further rep-
resent the two sentence Si = {wi1, . . . , win} and
Sj = {wj1, . . . , wjm} by the sets of words in
those sentences. Here, we assume the corpus to
contain sequences of ordered sentence such as in a
newspaper article, a book chapter or a blog post.

The neural network we use for learning q(w) is
shown in Figure 1. The first layer computes the
embedding of a sentence S, s ∈ Rd using Equa-
tion 1, which is the weighted-average of the indi-
vidual word embeddings.

s =
∑

w∈S
q(w)w (1)

We use (1) to compute embeddings for two sen-
tences Si and Sj denoted respectively by si and
sj . Here, the same set of salience scores q(w) are
used for computing both si and sj , which resem-
bles a Siamese neural network architecture.

The root node computes the similarity h(si, sj)
between two sentence embeddings. Different sim-
ilarity (alternatively dissimilarity or divergence)
functions such as cosine similarity, `1 distance, `2
distance, Jenson-Shannon divergence etc. can be

used as h. As a concrete example, here we use
softmax of the inner-products as follows:

h(si, sj) =
exp

(
si
>sj
)

∑
Sk∈C exp (si

>sk)
(2)

Ideally, the normalisation term in the denominator
in the softmax must be taken over all the sentences
Sk in the corpus (Andreas and Klein, 2015). How-
ever, this is computationally expensive in most
cases except for extremely small corpora. There-
fore, following noise-contrastive estimation (Gut-
mann and Hyvärinen, 2012), we approximate the
normalisation term using a randomly sampled set
of K sentences, where K is typically less than
10. Because the similarity between two randomly
sampled sentences is likely to be smaller than, for
example, two adjacent sentences, we can see this
sampling process as randomly sampling negative
training instances from the corpus.

For two sentences Si and Sj we consider them
to be similar (positive training instance) if j ∈
{i − 1, i + 1}, and denote this by the target label
t = 1. On the other hand, if the two sentences are
non-adjacent (i.e. j /∈ {i−1, i+1}), then we con-
sider the pair (Si,Sj) to form a negative training
instance, and denote this by t = 0.2 This assump-
tion enables us to use a sentence-ordered corpus
for selecting both positive and negative training in-
stances required for learning NWS scores.

Specifically, the model is trained using the two
adjacent sentences to Si - {i − 1, i + 1} as posi-
tive examples, and K=2 negative examples not in
{i− 1, i + 1}. These are sampled from the whole
text corpus using a uniformly. Similar to (Kenter
et al., 2016), we found that increasing the number
of negative examples increases the training time,
but does not have a significant impact on model
accuracy.

Using t and h(si, sj) above, we compute the
cross-entropy error E(t, (Si,Sj)) for an instance
(t, (Si,Sj)) as follows:

E(t, (Si,Sj)) = t log (h(si, sj))+(1−t) log (1− h(si, sj))
(3)

Next, we backpropagate the error gradients via the
network to compute the updates as follows:

∂E

∂q(w)
=

(t− h(si, sj))
h(si, sj)(1− h(si, sj))

∂h(si, sj)

∂q(w)
(4)

2It is possible in theory that two non-adjacent sentences
could be similar, but the likelihood of this event is small and
can be safely ignored in practice.

36



Here, we drop the arguments of the error and sim-
ply write it as E to simplify the notation. To com-
pute ∂h(si,sj)∂q(w) let us define

g(si, sj) = log (h(si, sj)) (5)

From which we have,

∂h(si, sj)

∂q(w)
= h(si, sj)

∂g(si, sj)

∂q(w)
. (6)

We can then compute ∂g∂q(w) as follows:

I[w ∈ Si]w>sj + I[w ∈ Sj ]w>si (7)
− log(

∑

k

exp
(
si
>sj

)
I[w ∈ Si]w>sk+ (8)

I[w ∈ Sk]w>si)) (9)

Here, the indicator function I is given by (10).

I[θ] =
{

1 θ is True
0 otherwise

(10)

Substituting (10), (7), in (4) we compute ∂E∂q(w)
and use stochastic gradient descent with initial
learning rate set to 0.01 and subsequently sched-
uled by AdaGrad (Duchi et al., 2011). The NWS
scores can be either randomly initialised or set to
some other values such as ISF scores. We found
experimentally that the best performing models
are the ones with the weights initialised with ISF.
Source code of our implementation is available3.

4 Experiments

We use the Toronto books corpus4 as our training
dataset. This corpus contains 81 million sentences
from 11,038 books, and has been used as a training
dataset in several prior work on sentence embed-
ding learning. Note that only 7,807 books in this
corpus are unique. Specifically, for 2,098 books
there exist one duplicate, for 733 there are two and
for 95 books there are more than two duplicates.
However, following the training protocol used in
prior work (Kiros et al., 2015), we do not remove
those duplicates from the corpus, and use the en-
tire collection of books for training. We convert
all sentences to lowercase and tokenise using the
Python NLTK5 punctuation tokeniser. No further
pre-processing is conduced beyond tokenisation.
The proposed method is implemented using Ten-
sorFlow6 and executed on a NVIDIA Tesla K40c
2880 GPU.

3https://bitbucket.org/u3ks/year3
4http://yknzhu.wixsite.com/mbweb
5http://www.nltk.org/
6https://www.tensorflow.org/

4.1 Measuring Semantic Textual Similarity
It is difficult to evaluate the accuracy of word
salience scores by direct manual inspection. More-
over, no such dataset exists where human an-
notators have manually rated words for their
salience. Therefore, we resort to extrinsic evalu-
ation, where, we first use (1) to create the sen-
tence embedding for a given sentence using pre-
trained word embeddings and the NWS scores
computed using the proposed method. Next, we
measure the semantic textual similarity (STS) be-
tween two sentences by the cosine similarity be-
tween the corresponding sentence embeddings. Fi-
nally, we compute the correlation between human
similarity ratings for sentence pairs in benchmark
datasets for STS and the similarity scores com-
puted following the above-mentioned procedure.
If there exists a high degree of correlation be-
tween the sentence similarity scores computed us-
ing the NWS scores and human ratings, then it can
be considered as empirical support for the accu-
racy of the NWS scores. Note that we have not
trained the word salience model on the SemEval
datasets, but are only using them to test the effec-
tiveness of the computed NWS scores. As shown
in Table 1, we use 18 benchmark datasets from Se-
mEval STS tasks from years 2012 (Agirre et al.,
2012), 2013 (Agirre et al., 2013), 2014 (Agirre
et al., 2014), and 2015 (Agirre et al., 2015). Note
that the tasks with the same name in different years
actually represent different tasks.

We use Pearson correlation coefficient as the
evaluation measure. For a list of n ordered pairs of
ratings {(xi, yi)}ni=1, the Pearson correlation co-
efficient between the two ratings, r(x,y), is com-
puted as follows:

r(x,y) =

∑n
i=1(xi − x̄)(yi − ȳ)√∑n

i=1(xi − x̄)2
√∑n

i=1(yi − ȳ)2
(11)

Here, x̄ = 1n
∑n

i=1 xi and ȳ =
1
n

∑n
i=1 yi. Pear-

son correlation coefficient is invariant against lin-
ear transformations of the similarity scores, which
is suitable for comparing similarity scores as-
signed to the same set of items by two different
methods (human ratings vs. system ratings).

We use the Fisher transformation (Fisher, 1915)
to test for the statistical significance of Pear-
son correlation coefficients. Fisher transformation,
F (r), of the Pearson correlation coefficient r is
given by (12).

F (r) =
1

2
log

(
1 + r

1− r

)
(12)

37



Then, 95% confidence intervals are given by (13).

tanh

(
F (r)± 1.96√

n− 3

)
(13)

We consider two baseline methods in our eval-
uations as described next.

Averaged Word Embeddings (AVG) As a base-
line that does not use any salience scores
for words when computing sentence embed-
dings, we use Averaged Word Embeddings
(AVG) where we simply add all the word em-
beddings of the words in a sentence and di-
vide from the total number of words to create
a sentence embedding. This baseline demon-
strates the level of performance we would ob-
tain if we did not perform any word salience-
based weighting in (1).

Inverse Sentence Frequency (ISF) As described
earlier in section 2, term frequency is not a
useful measure for discriminating salient vs.
non-salient words in short-texts because it
is rare for a particular word to occur multi-
ple times in a short text such as a sentence.
However, (inverse of) the number of differ-
ent sentences in which a particular word oc-
curs is a useful method for identifying salient
features because non-content stop words are
likely to occur in any sentence, irrespective
of the semantic contribution to the topic of
the sentence. Following the success of In-
verse Document Frequency (IDF) in filter-
ing out high frequent words in text classifi-
cation tasks (Joachims, 1998), we define In-
verse Sentence Frequency (ISF) of a word as
the reciprocal of the number of sentences in
which that word appears in a corpus. Specifi-
cally, ISF is computed as follows:

ISF(w) = log
(

1 +
no. of sentences in the corpus
no. of sentences containing w

)

(14)

In Table 1, we compare NWS against AVG, ISF
baselines. SMOOTH is the unigram probability-
based smoothing method proposed by (Arora
et al., 2017).7 We compute sentence embeddings
for NWS, AVG and ISF using pre-trained 300
dimensional GloVe embeddings trained from the
Toronto books corpus using contextual windows

7Corresponds to the GloVe-W method in the original pub-
lication.

of 10 tokens.8 For reference purposes we show
the level of performance we would obtain if we
had used sentence embedding methods such as,
skip-thought (Kiros et al., 2015), and Siamese-
CBOW (Kenter et al., 2016). Note that however,
sentence embedding methods do not necessarily
compute word salience scores. For skip-thought,
Siamese CBOW and SMOOTH methods we re-
port the published results in the original papers.
Because (Kiros et al., 2015) did not report results
for skip-thought on all 18 benchmark datasets used
here, we report the re-evaluation of skip-thought
on all 18 benchmark datasets by (Wieting et al.,
2016).

Statistically significant improvements over the
ISF baseline are indicated by an asterisk ∗,
whereas the best results on each benchmark
dataset are shown in bold. From Table 1, we see
that between the two baselines AVG and ISF, ISF
consistently outperforms AVG in all benchmark
datasets. In 9 out of the 18 benchmarks, the pro-
posed NWS scores report the best performance.
We suspect that the word salience model has the
best performance in the OWNs datasets because
they are closest to the training data. However, it
outperforms the other models in other datasets
such as images, and student-answers which talks
about the generalisability of the model. More-
over, in 9 datasets NWS statistically significantly
outperforms the ISF baseline. Siamese-CBOW
reports the best results in 5 datasets, whereas
SMOOTH reports the best results in 2 datasets.
Overall, NWS stands out as the best performing
method among the methods compared in Table 1.

Our proposed method for learning NWS scores
does not assume any specific properties of a partic-
ular word embedding learning algorithm. There-
fore, in principle, we can learn NWS scores us-
ing any pre-trained set of word embeddings. To
evaluate the accuracy of the word salience scores
computed using different word embeddings, we
conduct the following experiment. We use SGNS,
CBOW and GloVe word embedding learning algo-
rithms to learn 300 dimensional word embeddings
from the Toronto books corpus.9 The vocabulary
size, cut-off frequency for selecting words, con-
text window size are are kept fixed across differ-

8We use the GloVe implementation by the original
authors available at https://nlp.stanford.edu/
projects/glove/

9We use the implementation of word2vec from https:
//github.com/dav/word2vec

38



Table 1: Performance on STS benchmarks.

Dataset SMOOTH skip-thought Siamese-CBOW AVG ISF NWS
2012
MSRpar 43.6 5.6 43.8 28.4 39.1 28.5
OnWN 54.3 60.5 64.4 47.1 60.5 65.5∗

SMTeuroparl 51.1∗ 42.0 45.0 37.1 44.5 50.1
SMTnews 42.2 39.1 39.0 32.2 34.9 44.7∗

2013
FNWN 23.0 31.2 23.2 26.9 29.4 25.2
OnWN 68.0∗ 24.2 49.9 25.0 63.2 78.1∗

headlines 63.8 38.6 65.3∗ 40.2 59.4 57.0
2014
OnWN 68.0 46.8 60.7 41.1 68.5 80.8∗

deft-forum 29.1 37.4 40.8 27.1 37.1 29.9
deft-news 68.5 46.2 59.1 48.8 63.6 65.4
headlines 59.3 40.3 63.6∗ 41.9 58.8 56.2
images 74.1∗ 42.6 65.0 35.3 66.3 75.9∗

tweet-news 57.3 51.4 73.2∗ 41.7 57.1 64.5∗

2015
answers-forums 41.4 27.8 21.8 25.7 37.6 49.6∗

answers-students 61.5 26.6 36.7 56.5 67.1 68.0
belief 47.7 45.8 47.7 29.3 43.2 54.3∗

headlines 64.0 12.5 21.5 49.3 65.4 65.3
images 75.4∗ 21 25.6 49.8 66.1 76.6∗

Overall Average 55.1 35.5 47.0 38.0 53.4 57.6

ent word embedding learning methods for the con-
sistency of the evaluation. We then trained NWS
with each set of word embeddings. Performance
on STS benchmarks is shown in Table 2, where
the best performance is bolded.

From Table 2, we see that GloVe is the best
among the three word embedding learning meth-
ods compared in Table 2 for producing pre-trained
word embeddings for the purpose of learning
NWS scores. In particular, NWS scores reports
best results with GloVe embeddings in 10 out of
the 18 benchmark datasets, whereas with CBOW
embeddings it obtains the best results in the re-
maining 8 benchmark datasets.

Figures 2a and 2b show the Pearson correla-
tion coefficients on STS benchmarks obtained by
NWS scores computed respectively for GloVe and
SGNS embeddings. We plot training curves for the
average correlation over each year’s benchmarks
as well as the overall average over the 18 bench-
marks. We see that for both embeddings the train-
ing saturates after about five or six epochs. This
ability to learn quickly with a small number of
epochs is attractive because it reduces the training

time.

4.2 Correlation with Psycholinguistic Scores

Prior work in psycholinguistics show that there is
a close connection between the emotions felt by
humans and the words they read in a text. Va-
lence (the pleasantness of the stimulus), arousal
(the intensity of emotion provoked by the stim-
ulus), and dominance (the degree of control ex-
erted by the stimulus) contribute to how the mean-
ings of words affect human psychology, and of-
ten referred to as the affective meanings of words.
(Mandera et al., 2015) show that by using SGNS
embeddings as features in a k-Nearest Neighbour
classifier, it is possible to accurately extrapolate
the affective meanings of words. Moreover, per-
ceived psycholinguistic properties of words such
as concreteness (how “palpable” the object the
word refers to) and imageability (the intensity with
which a word arouses images) have been success-
fully predicted using word embeddings (Turney
et al., 2011; Paetzold and Specia, 2016). For ex-
ample, (Turney et al., 2011) used the cosine simi-
larity between word embeddings obtained via La-

39



Table 2: Effect of word embeddings.

Dataset NWS with pre-trained
SGNS CBOW GloVe

2012
MSRpar 14.27 24.15 28.47
OnWN 59.76 61.25 65.50
SMTeuroparl 41.04 45.51 50.12
SMTnews 43.42 46.94 44.73
2013
FNWN 21.47 29.31 25.21
OnWN 67.37 70.04 78.06
headlines 57.05 57.46 57.02
2014
OnWN 73.06 73.71 80.83
deft-forum 28.62 32.49 29.90
deft-news 59.63 61.95 65.35
headlines 56.05 55.64 56.20
images 76.94 78.08 75.88
tweet-news 61.49 66.41 64.46
2015
answers-forums 36.35 46.78 49.65
answers-students 59.53 59.92 68.01
belief 51.97 55.65 54.27
headlines 61.24 63.04 65.32
images 77.67 78.39 76.55
Overall Average 52.60 55.92 57.52

(a) GloVe

(b) SGNS

Figure 2: Pearson correlations on STS benchmarks against
the number of training epochs

tent Semantic Analysis (LSA) (Deerwester et al.,
1990) to predict the concreteness and imageability

Table 3: Pearson correlation coefficients against Psycholin-
guistic ratings of words in the ANEW and MRC databases.

Embed. Arousal Conc. Dom. Img. Valance
GloVe 0.03 0.26 0.09 0.25 0.03
CBOW 0.04 -0.35 -0.04 -0.37 0.04
SGNS -0.01 0.27 0.06 0.27 -0.01

ratings of words.
On the other hand, prior work studying the re-

lationship between human reading patterns using
eye-tracking devices show that there exist a high
positive correlation between word salience and
reading times (Dziemianko et al., 2013; Hahn and
Keller, 2016). For example, humans pay more at-
tention to words that carry meaning as indicated
by the longer fixation times. Therefore, an inter-
esting open question is that what psycholinguis-
tic properties of words, if any, are related to the
NWS scores we learn in a purely unsupervised
manner from a large corpus? To answer this ques-
tion empirically, we conduct the following exper-
iment. We used the Affected Norms for English
Words (ANEW) dataset created by Warriner et al.
(2013), which contains valence, arousal, and dom-
inance ratings collected via crowd sourcing for
13,915 words. Moreover, we obtained concrete-
ness and imageability ratings for 3364 words from
the MRC psycholinguistic database. We then mea-
sure the Pearson correlation coefficient between
NWS scores and each of the psycholinguistic rat-
ings as shown in Table 3.

We see a certain degree of correlation between
NWS scores computed for all three word embed-
dings and the concreteness scores. Both GloVe
and SGNS show moderate positive correlations
for concreteness, whereas CBOW shows a mod-
erate negative correlation for the same. A similar
trend can be observed for imageability ratings in
Table 3, where GloVe and SGNS correlates posi-
tively with imageability, while CBOW correlates
negatively. Moreover, no correlation could be ob-
served for arousal, valance and dominance ratings.
This result shows that NWS scores are not corre-
lated with affective meanings of words (arousal,
dominance, and valance), but show a moderate
level of correlation with perceived meaning scores
(concreteness and imageability).

4.3 Sample Salience Scores
Tables 4 and 5 show respectively low and high
salient words for ISF, NWS (ISF initialised) and
NWS (randomly initialised) methods. words) se-

40



Table 4: Sample words with the low salience

ISF NWS (ISF init.) NWS (rand init.)

the your alexis
to our tobias
i we copyright
and my rupert
a you spotted
of us vehicle
was me sword
he i isaac
his voice fletcher
you has cook

Table 5: Sample words with the high salience

ISF NWS (ISF init.) NWS (rand init.)

pathways guess hurdling
conspiratorial boulder happen
henna autopsy weird
alejandro hippy alejo
bedpost alejandro bolivians
swiveling philosophy his
confederate arrow answer
mid-morning germany her
alejo spotted yesterday
phd bookstore replied

lected from a sample of 1000 words. The proba-
bility of each word appearing in the sample was
based on its frequency in the text corpus. The
fact that the top ranked words with NWS dif-
fer from that of ISF suggests that the proposed
method learns salience scores based on attributes
other than frequency and provides a finer differ-
entiation between words. The effectiveness of the
NWS scores when initialised with ISF might be
due to incorporating frequency information in ad-
dition to salience.

5 Conclusion

We proposed a method for learning Neural Word
Salience scores from a sentence-ordered cor-
pus, without requiring any manual data annota-
tions. To evaluate the learnt salience scores, we
computed sentence embeddings as the linearly
weighted sum over pre-trained word embeddings.
Our experimental results show that the proposed
NWS scores outperform baseline methods, pre-
viously proposed word salience scores and sen-
tence embedding methods on a range of bench-
mark datasets selected from past SemEval STS
tasks. Moreover, the NWS scores shows interest-
ing correlations with perceived meaning of words

indicated by concreteness and imageability psy-
cholinguistic ratings.

References
Yossi Adi, Einat Kermany, Yonatan Belinkov, Ofer

Lavi, and Yoav Goldberg. 2016. Fine-grained anal-
ysis of sentence embeddings using auxiliary predic-
tion tasks. arXiv .

Eneko Agirre, Carmen Banea, Claire Cardie, Daniel
Cer, Mona Diab, Aitor Gonzalez-Agirre, Wei-
wei Guo, Iñigo Lopez-Gazpio, Montese Martxalar,
Rada Mihalcea, German Rigau, Larraitz Uria, and
Janyce M. Wiebe. 2015. Semeval-2015 task 2: Se-
mantic textual similarity, english, spanish and pilot
on interpretability. In Proc. of SemEval. pages 252
– 263.

Eneko Agirre, Carmen Banea, Claire Cardie, Daniel
Cer, Mona Diab, Aitor Gonzalez-Agirre, Weiwei
Guo, Rada Mihalcea, German Rigau, and Janyce
Weibe. 2014. Semeval-2014 task 10: Multilingual
semantic textual similarity. In Proc. of the 8th In-
ternational Workshop on Semantic Evaluation (Se-
mEval). pages 81–91.

Eneko Agirre, Daniel Cer, Mona Diab, and Aitor
Gonzalez-Agirre. 2012. Semeval-2012 task 6: A pi-
lot on semantic textual similarity. In Proc. of the first
Joint Conference on Lexical and Computational Se-
mantics (*SEM). pages 385 – 393.

Eneko Agirre, Daniel Cer, Mona Diab, Aitor Gonzalez-
Agirre, and Weiwei Guo. 2013. shared task: Seman-
tic textual similarity. In Proc. of the Second Joint
Conference on Lexical and Computational Seman-
tics (*SEM):. pages 32–43.

Jacob Andreas and Dan Klein. 2015. When and why
are log-linear models self-normalizing? In Proc. of
the North American Chapter of the Association for
Computational Linguistics: Human Language Tech-
nologies. pages 244–249.

Sanjeev Arora, Yingyu Liang, and Tengyu Ma. 2017.
A simple but tough-to-beat baseline for sentence em-
beddings. In Proc. of International Conference on
Learning Representations (ICLR).

William Blacoe and Mirella Lapata. 2012. A com-
parison of vector-based representations for semantic
composition. In Proc. of the Joint Conference on
Empirical Methods in Natural Language Process-
ing and Computational Natural Language Learning.
pages 546–556.

Scott Deerwester, Susan T. Dumais, George W. Furnas,
Thomas K. Landauer, and Richard Harshman. 1990.
Indexing by latent semantic analysis. JOURNAL OF
THE AMERICAN SOCIETY FOR INFORMATION
SCIENCE 41(6):391–407.

41



John Duchi, Elad Hazan, and Yoram Singer. 2011.
Adaptive subgradient methods for online learning
and stochastic optimization. Journal of Machine
Learning Research 12:2121 – 2159.

Michal Dziemianko, Alasdair Clarke, and Frank Keller.
2013. Object-based saliency as a predictor of atten-
tion in visual tasks. In Proc. of the 35thth Annual
Conference of the Cognitive Science Society. pages
2237–2242.

R. A. Fisher. 1915. Frequency distribution of the val-
ues of the correlation coefficient in samples of an in-
definitely large population. Biometrika 10(4):507–
521.

Michael U. Gutmann and Aapo Hyvärinen. 2012.
Noise-contrastive estimation of unnormalized sta-
tistical models, with applications to natural image
statistics. Journal of Machine Learning Research
13:307 – 361.

Michael Hahn and Frank Keller. 2016. Modeling hu-
man reading with neural attention. In Proc. of Em-
pirical Methods in Natural Language Processing
(EMNLP). pages 85–95.

Hua He and Jimmy Lin. 2016. Pairwise word interac-
tion modeling with deep neural networks for seman-
tic similarity measurement. In Proc. of the North
American Chapter of the Association for Computa-
tional Linguistics: Human Language Technologies.
pages 937–948.

Felix Hill, Kyunghyun Cho, and Anna Korhonen.
2016. Learning disributed representations of sen-
tences from unlabelled data. In Proc. of the North
American Chapter of the Association for Computa-
tional Linguistics: Human Language Technologies.
pages 1367–1377.

Thorsten Joachims. 1998. Text categorization with
support vector machines: Learning with many rel-
evant features. In Proc. of the European Conference
on Machine Learning (ECML). pages 137–142.

Karen Spärck Jones. 1972. A statistical interpretation
of term specificity and its application in retrieval.
Journal of Documentation 28:11–21.

Tom Kenter, Alexey Borisov, and Maarten de Rijke.
2016. Siamese cbow: Optimizing word embeddings
for sentence representations. In Proc, of the Annual
Meeting of the Association for Computational Lin-
guistics (Volume 1: Long Papers). pages 941–951.

Ryan Kiros, Yukun Zhu, Ruslan Salakhutdinov,
Richard S. Zemel, Antonio Torralba, Raquel Urta-
sun, and Sanja Fidler. 2015. Skip-thought vectors.
In Proc. of Advances in Neural Information Process-
ing Systems (NIPS). pages 3276–3284.

Pawel Mandera, Emmanuel Keuleers, and Marc Brys-
baret. 2015. How useful are corpus-based meth-
ods for extrapolating psycholinguistic variables?
The Quarterly Journal of Experimental Pscychology
68(8):1623–1642.

Jeff Mitchell and Mirella Lapata. 2008. Vector-based
models of semantic composition. In Proc. of Annual
Meeting of the Association for Computational Lin-
guistics. pages 236 – 244.

Gustavi Henrique Paetzold and Lucia Specia. 2016.
Inferring psycholinguistic properties of words. In
Proc. of the North American Chapter of the Asso-
ciation for Computational Linguistics: Human Lan-
guage Technologies. pages 435–440.

S. E. Robertson. 1997. Overview of the okapi projects.
Journal of Documentation 53(1):3 – 7.

G. Salton and C. Buckley. 1983. Introduction to
Modern Information Retreival. McGraw-Hill Book
Company.

Richard Socher, Jeffrey Pennington, Eric H. Huang,
Andrew Y. Ng, and Christopher D. Manning.
2011. Semi-supervised recursive autoencoders for
predicting sentiment distributions. In Proceed-
ings of the 2011 Conference on Empirical Meth-
ods in Natural Language Processing. Association
for Computational Linguistics, Edinburgh, Scotland,
UK., pages 151–161. http://www.aclweb.org/
anthology/D11-1014.

Peter D. Turney, Yair Neuman, Dan Assaf, and Yohai
Cohen. 2011. Literal and metaphorical sense identi-
fication through concrete and abstract context. In
Proc. of Empirical Methods in Natural Language
Processing (EMNLP). pages 27 – 31.

Yashen Wang, Heyan Huang, Chong Feng, Qiang
Zhou, Jiahui Gu, and Xion Gao. 2016. Cse: Concep-
tutal sentence embeddings based on attention model.
In Proc. of Annual Meeting of the Association for
Computational Linguistics. pages 505–515.

Amy Beth Warriner, Victor Kuperman, and Marc Brys-
baret. 2013. Norms of valence, arousal, and domi-
nance for 13,915 enlish lemmas. Behavior Research
Methods 45(4):1191–1207.

John Wieting, Mohit Bansal, Kevin Gimpel, and Karen
Livescu. 2016. Towards universal paraphrastic sen-
tence embeddings. In Proc. of International Confer-
ence on Learning Representations (ICLR).

Wenpeng Yin, Hinrich Schütze, Bing Xiang, and
Bowen Zhou. 2016. Abcnn: Attention-based convo-
lutional neural network for modeling sentence pairs.
Transactions of Association for Computational Lin-
guistics pages 259–272.

42


