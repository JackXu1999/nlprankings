



















































Specialising Word Vectors for Lexical Entailment


Proceedings of NAACL-HLT 2018, pages 1134–1145
New Orleans, Louisiana, June 1 - 6, 2018. c©2018 Association for Computational Linguistics

Specialising Word Vectors for Lexical Entailment

Ivan Vulić1 and Nikola Mrkšić2
1 Language Technology Lab, University of Cambridge

2 PolyAI
iv250@cam.ac.uk nikola@poly-ai.com

Abstract

We present LEAR (Lexical Entailment Attract-
Repel), a novel post-processing method that
transforms any input word vector space to
emphasise the asymmetric relation of lexical
entailment (LE), also known as the IS-A or
hyponymy-hypernymy relation. By injecting
external linguistic constraints (e.g., WordNet
links) into the initial vector space, the LE spe-
cialisation procedure brings true hyponymy-
hypernymy pairs closer together in the trans-
formed Euclidean space. The proposed asym-
metric distance measure adjusts the norms of
word vectors to reflect the actual WordNet-
style hierarchy of concepts. Simultaneously, a
joint objective enforces semantic similarity us-
ing the symmetric cosine distance, yielding a
vector space specialised for both lexical re-
lations at once. LEAR specialisation achieves
state-of-the-art performance in the tasks of hy-
pernymy directionality, hypernymy detection,
and graded lexical entailment, demonstrating
the effectiveness and robustness of the pro-
posed asymmetric specialisation model.

1 Introduction

Word representation learning has become a re-
search area of central importance in NLP, with
its usefulness demonstrated across application ar-
eas such as parsing (Chen and Manning, 2014),
machine translation (Zou et al., 2013), and many
others (Turian et al., 2010; Collobert et al., 2011).
Standard techniques for inducing word embeddings
rely on the distributional hypothesis (Harris, 1954),
using co-occurrence information from large textual
corpora to learn meaningful word representations
(Mikolov et al., 2013; Levy and Goldberg, 2014;
Pennington et al., 2014; Bojanowski et al., 2017).

A major drawback of the distributional hypoth-
esis is that it coalesces different relationships be-
tween words, such as synonymy and topical related-
ness, into a single vector space. A popular solution

is to go beyond stand-alone unsupervised learning
and fine-tune distributional vector spaces by using
external knowledge from human- or automatically-
constructed knowledge bases. This is often done as
a post-processing step, where distributional vectors
are gradually refined to satisfy linguistic constraints
extracted from lexical resources such as WordNet
(Faruqui et al., 2015; Mrkšić et al., 2016), the Para-
phrase Database (PPDB) (Wieting et al., 2015), or
BabelNet (Mrkšić et al., 2017; Vulić et al., 2017a).
One advantage of post-processing methods is that
they treat the input vector space as a black box,
making them applicable to any input space.

A key property of these methods is their abil-
ity to transform the vector space by specialising it
for a particular relationship between words.1 Prior
work has predominantly focused on distinguishing
between semantic similarity and conceptual relat-
edness (Faruqui et al., 2015; Mrkšić et al., 2017;
Vulić et al., 2017b). In this paper, we introduce a
novel post-processing model which specialises vec-
tor spaces for the lexical entailment (LE) relation.

Word-level lexical entailment is an asymmet-
ric semantic relation (Collins and Quillian, 1972;
Beckwith et al., 1991). It is a key principle de-
termining the organisation of semantic networks
into hierarchical structures such as semantic on-
tologies (Fellbaum, 1998). Automatic reasoning
about LE supports tasks such as taxonomy creation
(Snow et al., 2006; Navigli et al., 2011), natural lan-
guage inference (Dagan et al., 2013; Bowman et al.,
2015), text generation (Biran and McKeown, 2013),
and metaphor detection (Mohler et al., 2013).

Our novel LE specialisation model, termed LEAR
(Lexical Entailment Attract-Repel), is inspired by
ATTRACT-REPEL, a state-of-the-art general spe-

1Distinguishing between synonymy and antonymy has a
positive impact on real-world language understanding tasks
such as Dialogue State Tracking (Mrkšić et al., 2017).

1134



x

y

z

terrier

dog

animal
organism

laptop

computer

machine

Figure 1: An illustration of LEAR specialisation.
LEAR controls the arrangement of vectors in the
transformed vector space by: 1) emphasising sym-
metric similarity of LE pairs through cosine dis-
tance (by enforcing small angles between

−−−−→
terrier

and
−→
dog or

−→
dog and

−−−−→
animal); and 2) by imposing

an LE ordering using vector norms, adjusting them
so that higher-level concepts have larger norms
(e.g., |−−−−→animal| > |−→dog| > |−−−−→terrier|).

cialisation framework (Mrkšić et al., 2017).2 The
key idea of LEAR, illustrated by Figure 1, is to
pull desirable (ATTRACT) examples described by
the constraints closer together, while at the same
time pushing undesirable (REPEL) word pairs away
from each other. Concurrently, LEAR (re-)arranges
vector norms so that norm values in the Euclidean
space reflect the hierarchical organisation of con-
cepts according to the given LE constraints: put
simply, higher-level concepts are assigned larger
norms. Therefore, LEAR simultaneously captures
the hierarchy of concepts (through vector norms)
and their similarity (through their cosine distance).
The two pivotal pieces of information are combined
into an asymmetric distance measure which quanti-
fies the LE strength in the specialised space.

After specialising four well-known input vector
spaces with LEAR, we test them in three standard
word-level LE tasks (Kiela et al., 2015b): 1) hyper-
nymy directionality; 2) hypernymy detection; and
3) combined hypernymy detection/directionality.
Our specialised vectors yield notable improve-
ments over the strongest baselines for each task,
with each input space, demonstrating the effective-
ness and robustness of LEAR specialisation.

2https://github.com/nmrksic/attract-repel

The employed asymmetric distance allows one
to make graded assertions about hierarchical re-
lationships between concepts in the specialised
space. This property is evaluated using HyperLex,
a recent graded LE dataset (Vulić et al., 2017).
The LEAR-specialised vectors push state-of-the-art
Spearman’s correlation from 0.540 to 0.686 on the
full dataset (2,616 word pairs), and from 0.512 to
0.705 on its noun subset (2,163 word pairs).

The code for the LEAR model is available from:
github.com/nmrksic/lear.

2 Methodology

2.1 The ATTRACT-REPEL Framework

Let V be the vocabulary, A the set of ATTRACT
word pairs (e.g., intelligent and brilliant), and R
the set of REPEL word pairs (e.g., vacant and oc-
cupied). The ATTRACT-REPEL procedure operates
over mini-batches of such pairs BA and BR. For
ease of notation, let each word pair (xl, xr) in
these two sets correspond to a vector pair (xl,xr),
so that a mini-batch of k1 word pairs is given by
BA = [(x1l ,x1r), . . . , (xk1l ,xk1r )] (similarly for BR,
which consists of k2 example pairs).

Next, the sets of pseudo-negative examples
TA = [(t

1
l , t

1
r), . . . , (t

k1
l , t

k1
r )] and TR =

[(t1l , t
1
r), . . . , (t

k2
l , t

k2
r )] are defined as pairs of neg-

ative examples for each ATTRACT and REPEL ex-
ample pair in mini-batches BA and BR. These neg-
ative examples are chosen from the word vectors
present in BA or BR so that, for each ATTRACT
pair (xl,xr), the negative example pair (tl, tr) is
chosen so that tl is the vector closest (in terms of
cosine distance) to xl and tr is closest to xr. Sim-
ilarly, for each REPEL pair (xl,xr), the negative
example pair (tl, tr) is chosen from the remain-
ing in-batch vectors so that tl is the vector furthest
away from xl and tr is furthest from xr.

The negative examples are used to: a) force AT-
TRACT pairs to be closer to each other than to their
respective negative examples; and b) to force RE-
PEL pairs to be further away from each other than
from their negative examples. The first term of the
cost function pulls ATTRACT pairs together:

Att(BA, TA) =
k1∑

i=1

[
τ
(
δatt + cos(x

i
l, t

i
l)− cos(xil,xir)

)

+τ
(
δatt + cos(x

i
r, t

i
r)− cos(xil,xir)

) ]
(1)

1135



where cos denotes cosine similarity, τ(x) =
max(0, x) is the hinge loss function and δatt is the
attract margin which determines how much closer
these vectors should be to each other than to their
respective negative examples. The second part of
the cost function pushes REPEL word pairs away
from each other:

Rep(BR, TR) =
k2∑

i=1

[
τ
(
δrep + cos(x

i
l,x

i
r)− cos(xil, til)

)

+τ
(
δrep + cos(x

i
l,x

i
r)− cos(xir, tir)

) ]
(2)

In addition to these two terms, an additional regu-
larisation term is used to preserve the abundance
of high-quality semantic content present in the
distributional vector space, as long as this infor-
mation does not contradict the injected linguistic
constraints. If V (B) is the set of all word vectors
present in the given mini-batch, then:

Reg(BA,BR) =
∑

xi∈V (BA∪BR)
λreg ‖x̂i − xi‖2

where λreg is the L2 regularization constant and x̂i
denotes the original (distributional) word vector for
word xi. The full ATTRACT-REPEL cost function
is given by the sum of all three terms.

2.2 LEAR: Encoding Lexical Entailment

In this section, the ATTRACT-REPEL framework is
extended to model lexical entailment jointly with
(symmetric) semantic similarity. To do this, the
method uses an additional source of external lexi-
cal knowledge: let L be the set of directed lexical
entailment constraints such as (corgi, dog), (dog,
animal), or (corgi, animal), with lower-level con-
cepts on the left and higher-level ones on the right
(the source of these constraints will be discussed
in Section 3). The optimisation proceeds in the
same way as before, considering a mini-batch of
LE pairs BL consisting of k3 word pairs standing
in the (directed) lexical entailment relation.

Unlike symmetric similarity, lexical entailment
is an asymmetric relation which encodes a hier-
archical ordering between concepts. Inferring the
direction of the entailment relation between word
vectors requires the use of an asymmetric distance
function. We define three different ones, all of
which use the word vector’s norms to impose an

ordering between high- and low-level concepts:

D1(x,y) = |x| − |y| (3)

D2(x,y) =
|x| − |y|
|x|+ |y| (4)

D3(x,y) =
|x| − |y|

max(|x|, |y|) (5)

The lexical entailment term (for the j-th asym-
metric distance, j ∈ 1, 2, 3) is defined as:

LEj(BL) =
k3∑

i=1

Dj(xi,yi) (6)

The first distance serves as the baseline: it uses
the word vectors’ norms to order the concepts, that
is to decide which of the words is likely to be the
higher-level concept. In this case, the magnitude of
the difference between the two norms determines
the ‘intensity’ of the LE relation. This is potentially
problematic, as this distance does not impose a
limit on the vectors’ norms. The second and third
metric take a more sophisticated approach, using
the ratios of the differences between the two norms
and either: a) the sum of the two norms; or b) the
larger of the two norms. In doing that, these metrics
ensure that the cost function only considers the
norms’ ratios. This means that the cost function no
longer has the incentive to increase word vectors’
norms past a certain point, as the magnitudes of
norm ratios grow in size much faster than the linear
relation defined by the first distance function.

To model the semantic and the LE relations
jointly, the LEAR cost function jointly optimises
the four terms of the expanded cost function:

C(BA, TA,BR, TR,BL, TL) = Att(BS , TS) + . . .
+ Rep(BA, TA) + Reg(BA,BR,BL) + . . .
+ Att(BL, TL) + LEj(BL)

LE Pairs as ATTRACT Constraints The com-
bined cost function makes use of the batch of lexi-
cal constraints BL twice: once in the defined asym-
metric cost function LEj , and once in the symmet-
ric ATTRACT term Att(BL, TL). This means that
words standing in the lexical entailment relation
are forced to be similar both in terms of cosine
distance (via the symmetric ATTRACT term) and in
terms of the asymmetric LE distance from Eq. (6).

Decoding Lexical Entailment The defined cost
function serves to encode semantic similarity and

1136



LE relations in the same vector space. Whereas
the similarity can be inferred from the standard
cosine distance, the LEAR optimisation embeds lex-
ical entailment as a combination of the symmetric
ATTRACT term and the newly defined asymmetric
LEj cost function. Consequently, the metric used
to determine whether two words stand in the LE
relation must combine the two cost terms as well.
We define the LE decoding metric as:

ILE(x,y) = dcos(x,y) +Dj(x,y) (7)

where dcos(x,y) denotes the cosine distance. This
decoding function combines the symmetric and the
asymmetric cost term, in line with the combination
of the two used to perform LEAR specialisation. In
the evaluation, we show that combining the two
cost terms has a synergistic effect, with both terms
contributing to stronger performance across all LE
tasks used for evaluation.

3 Experimental Setup

Starting Distributional Vectors To test the ro-
bustness of LEAR specialisation, we experiment
with a variety of well-known, publicly available
English word vectors: 1) Skip-Gram with Negative
Sampling (SGNS) (Mikolov et al., 2013) trained
on the Polyglot Wikipedia (Al-Rfou et al., 2013)
by Levy and Goldberg (2014); 2) GLOVE Common
Crawl (Pennington et al., 2014); 3) CONTEXT2VEC
(Melamud et al., 2016), which replaces CBOW con-
texts with contexts based on bidirectional LSTMs
(Hochreiter and Schmidhuber, 1997); and 4) FAST-
TEXT (Bojanowski et al., 2017), a SGNS variant
which builds word vectors as the sum of their con-
stituent character n-gram vectors.3

Linguistic Constraints We use three groups of
linguistic constraints in the LEAR specialisation
model, covering three different relation types which
are all beneficial to the specialisation process: di-
rected 1) lexical entailment (LE) pairs; 2) syn-
onymy pairs; and 3) antonymy pairs. Synonyms
are included as symmetric ATTRACT pairs (i.e.,
the BA pairs) since they can be seen as defining
a trivial symmetric IS-A relation (Rei and Briscoe,
2014; Vulić et al., 2017). For a similar reason,

3All vectors are 300-dimensional except for the 600-
dimensional CONTEXT2VEC vectors; for further details re-
garding the architectures and training setup of the used vector
collections, we refer the reader to the original papers. We also
experimented with dependency-based SGNS vectors (Levy
and Goldberg, 2014), observing similar patterns in the results.

antonyms are clear REPEL constraints as they anti-
correlate with the LE relation.4 Synonymy and
antonymy constraints are taken from prior work
(Zhang et al., 2014; Ono et al., 2015): they are ex-
tracted from WordNet (Fellbaum, 1998) and Roget
(Kipfer, 2009). In total, we work with 1,023,082
synonymy pairs (11.7 synonyms per word on aver-
age) and 380,873 antonymy pairs (6.5 per word).5

As in prior work (Nguyen et al., 2017; Nickel
and Kiela, 2017), LE constraints are extracted from
the WordNet hierarchy, relying on the transitivity
of the LE relation. This means that we include both
direct and indirect LE pairs in our set of constraints
(e.g., (pangasius, fish), (fish, animal), and (panga-
sius, animal)). We retained only noun-noun and
verb-verb pairs, while the rest were discarded: the
final number of LE constraints is 1,545,630.6

Training Setup We adopt the original ATTRACT-
REPEL model setup without any fine-tuning. Hyper-
parameter values are set to: δatt = 0.6, δrep = 0.0,
λreg = 10

−9 (Mrkšić et al., 2017). The models
are trained for 5 epochs with the AdaGrad algo-
rithm (Duchi et al., 2011), with batch sizes set to
k1 = k2 = k3 = 128 for faster convergence.

4 Results and Discussion

We test and analyse LEAR-specialised vector spaces
in two standard word-level LE tasks used in prior
work: hypernymy directionality and detection (Sec-
tion 4.1) and graded LE (Section 4.2).

4.1 LE Directionality and Detection

The first evaluation uses three classification-style
tasks with increased levels of difficulty. The tasks
are evaluated on three datasets used extensively in
the LE literature (Roller et al., 2014; Santus et al.,
2014; Weeds et al., 2014; Shwartz et al., 2017;
Nguyen et al., 2017), compiled into an integrated
evaluation set by Kiela et al. (2015b).7

4In short, the question “Is X a type of X?” (synonymy)
is trivially true, while the question “Is ¬X a type of X?”
(antonymy) is trivially false.

5https://github.com/tticoin/AntonymDetection
6We also experimented with additional 30,491 LE con-

straints from the Paraphrase Database (PPDB) 2.0 (Pavlick
et al., 2015). Adding them to the WordNet-based LE pairs
makes no significant impact on the final performance. We also
used synonymy and antonymy pairs from other sources, such
as word pairs from PPDB used previously by Wieting et al.
(2015), and BabelNet (Navigli and Ponzetto, 2012) used by
Mrkšić et al. (2017), reaching the same conclusions.

7http://www.cl.cam.ac.uk/∼dk427/generality.html

1137



SGNS Glove context2vec fastText
Word vector collection

0.80

0.85

0.90

0.95

1.00

A
cc

ur
ac

y

D1 D2 D3

(a) BLESS: Directionality

SGNS Glove context2vec fastText
Word vector collection

0.80

0.85

0.90

0.95

1.00

A
cc

ur
ac

y

D1 D2 D3

(b) WBLESS: Detection

SGNS Glove context2vec fastText
Word vector collection

0.80

0.85

0.90

0.95

1.00

A
cc

ur
ac

y

D1 D2 D3

(c) BIBLESS: Detect+direct

Figure 2: Summary of the results on three different word-level LE subtasks: (a) directionality; (b) detection;
(c) detection and directionality. Vertical bars denote the results obtained by different input word vector
spaces which are post-processed/specialised by our LEAR specialisation model using three variants of the
asymmetric distance (D1, D2, D3), see Section 2. Thick horizontal red lines refer to the best reported
scores on each subtask for these datasets; the baseline scores are taken from Nguyen et al. (2017).

The first task, LE directionality, is conducted on
1,337 LE pairs originating from the BLESS evalu-
ation set (Baroni and Lenci, 2011). Given a true
LE pair, the task is to predict the correct hypernym.
With LEAR-specialised vectors this is achieved by
simply comparing the vector norms of each con-
cept in a pair: the one with the larger norm is the
hypernym (see Figure 1).

The second task, LE detection, involves a binary
classification on the WBLESS dataset (Weeds et al.,
2014) which comprises 1,668 word pairs standing
in a variety of relations (LE, meronymy-holonymy,
co-hyponymy, reversed LE, no relation). The model
has to detect a true LE pair, that is, to distinguish
between the pairs where the statement X is a (type
of) Y is true from all other pairs. With LEAR vec-
tors, this classification is based on the asymmetric
distance score: if the score is above a certain thresh-
old, we classify the pair as “true LE”, otherwise as
“other”. While Kiela et al. (2015b) manually de-
fine the threshold value, we follow the approach of
Nguyen et al. (2017) and cross-validate: in each of
the 1,000 iterations, 2% of the pairs are sampled
for threshold tuning, and the remaining 98% are
used for testing. The reported numbers are there-
fore average accuracy scores.8

8We have conducted more LE directionality and detection
experiments on other datasets such as EVALution (Santus
et al., 2015), the N1 � N2 dataset of Baroni et al. (2012),
and the dataset of Lenci and Benotto (2012) with similar
performances and findings. We do not report all these results
for brevity and clarity of presentation.

The final task, LE detection and directionality,
concerns a three-way classification on BIBLESS, a
relabeled version of WBLESS. The task is now to
distinguish both LE pairs (→ 1) and reversed LE
pairs (→ −1) from other relations (→ 0), and then
additionally select the correct hypernym in each
detected LE pair. We apply the same test protocol
as in the LE detection task.

Results and Analysis The original paper of
Kiela et al. (2015b) reports the following best
scores on each task: 0.88 (BLESS), 0.75 (WBLESS),
0.57 (BIBLESS). These scores were recently sur-
passed by Nguyen et al. (2017), who, instead
of post-processing, combine WordNet-based con-
straints with an SGNS-style objective into a joint
model. They report the best scores to date: 0.92
(BLESS), 0.87 (WBLESS), and 0.81 (BIBLESS).

The performance of the four LEAR-specialised
word vector collections is shown in Figure 2 (to-
gether with the strongest baseline scores for each
of the three tasks). The comparative analysis con-
firms the increased complexity of subsequent tasks.
LEAR specialisation of each of the starting vec-
tor spaces consistently outperformed all baseline
scores across all three tasks. The extent of the im-
provements is correlated with task difficulty: it is
lowest for the easiest directionality task (0.92 →
0.96), and highest for the most difficult detection
plus directionality task (0.81→ 0.88).

The results show that the two LEAR variants
which do not rely on absolute norm values and

1138



Norm Norm Norm

terrier 0.87 laptop 0.60 cabriolet 0.74
dog 2.64 computer 2.96 car 3.59
mammal 8.57 machine 6.15 vehicle 7.78
vertebrate 10.96 device 12.09 transport 8.01
animal 11.91 artifact 17.71 instrumentality 14.56
organism 20.08 object 23.55 – –

Table 1: L2 norms for selected concepts from the
WordNet hierarchy. Input: FASTTEXT; LEAR: D2.

perform a normalisation step in the asymmetric
distance (D2 and D3) have an edge over the D1
variant which operates with unbounded norms. The
difference in performance between D2/D3 and D1
is even more pronounced in the graded LE task (see
Section 4.2). This shows that the use of unbounded
vector norms diminishes the importance of the sym-
metric cosine distance in the combined asymmetric
distance. Conversely, the synergistic combination
used in D2/D3 does not suffer from this issue.

The high scores achieved with each of the four
word vector collections show that LEAR is not de-
pendent on any particular word representation ar-
chitecture. Moreover, the extent of the performance
improvements in each task suggests that LEAR is
able to reconstruct the concept hierarchy coded in
the input linguistic constraints.

Moreover, we have conducted a small experi-
ment to verify that the LEAR method can generalise
beyond what is directly coded in pairwise exter-
nal constraints. A simple WordNet lookup baseline
yields accuracy scores of 0.82 and 0.80 on the di-
rectionality and detection tasks, respectively. This
baseline is outperformed by LEAR: its scores are
0.96 and 0.92 on the two tasks when relying on the
same set of WordNet constraints.

Importance of Vector Norms To verify that the
knowledge concerning the position in the semantic
hierarchy actually arises from vector norms, we
also manually inspect the norms after LEAR spe-
cialisation. A few examples are provided in Table 1.
They indicate a desirable pattern in the norm values
which imposes a hierarchical ordering on the con-
cepts. Note that the original distributional SGNS
model (Mikolov et al., 2013) does not normalise
vectors to unit length after training. However, these
norms are not at all correlated with the desired hi-
erarchical ordering, and are therefore useless for
LE-related applications: the non-specialised distri-
butional SGNS model scores 0.44, 0.48, and 0.34
on the three tasks, respectively.

4.2 Graded Lexical Entailment
Asymmetric distances in the LEAR-specialised
space quantify the degree of lexical entailment
between any two concepts. This means that they
can be used to make fine-grained assertions re-
garding the hierarchical relationships between con-
cepts. We test this property on HyperLex (Vulić
et al., 2017), a gold standard dataset for evalu-
ating how well word representation models cap-
ture graded LE, grounded in the notions of concept
(proto)typicality (Rosch, 1973; Medin et al., 1984)
and category vagueness (Kamp and Partee, 1995;
Hampton, 2007) from cognitive science. HyperLex
contains 2,616 word pairs (2,163 noun pairs and
453 verb pairs) scored by human raters in the [0, 6]
interval following the question “To what degree is
X a (type of) Y?”9

As shown by the high inter-annotator agreement
on HyperLex (0.85), humans are able to consis-
tently reason about graded LE.10 However, current
state-of-the-art representation architectures are far
from this ceiling. For instance, Vulić et al. (2017)
evaluate a plethora of architectures and report a
high-score of only 0.320 (see the summary table
in Figure 3). Two recent representation models
(Nickel and Kiela, 2017; Nguyen et al., 2017) fo-
cused on the LE relation in particular (and employ-
ing the same set of WordNet-based constraints as
LEAR) report the highest score of 0.540 (on the
entire dataset) and 0.512 (on the noun subset).

Results and Analysis We scored all HyperLex
pairs using the combined asymmetric distance de-
scribed by Equation (7), and then computed Spear-
man’s rank correlation with the ground-truth rank-
ing. Our results, together with the strongest base-
line scores, are summarised in Figure 3.

The summary table in Figure 3(c) shows the Hy-
perLex performance of several prominent LE mod-
els. We provide only a quick outline of these mod-
els here; further details can be found in the original
papers. FREQ-RATIO exploits the fact that more
general concepts tend to occur more frequently in
textual corpora. SGNS (COS) uses non-specialised

9From another perspective, one might say that graded LE
provides finer-grained human judgements on a continuous
scale rather than simplifying the judgements into binary dis-
crete decisions. For instance, the HyperLex score for the pair
(girl, person) is 5.91/6, the score for (guest, person) is 4.33,
while the score for the reversed pair (person, guest) is 1.73.

10For further details concerning HyperLex, we refer the
reader to the resource paper (Vulić et al., 2017). The
dataset is available at: http://people.ds.cam.ac.
uk/iv250/hyperlex.html

1139



SGNS Glove context2vec fastText
Word vector collection

0.50

0.55

0.60

0.65

0.70
Sp

ea
rm

an
’s

ρ
co

rr
el

at
io

n
w

it
h

H
yp

er
Le

x
(A

ll) D1 D2 D3

(a) HyperLex: All

SGNS Glove context2vec fastText
Word vector collection

0.50

0.55

0.60

0.65

0.70

Sp
ea

rm
an

’s
ρ

co
rr

el
at

io
n

w
it

h
H

yp
er

Le
x

(N
ou

ns
)

D1 D2 D3

(b) HyperLex: Nouns

All

FREQ-RATIO 0.279
SGNS (COS) 0.205
SLQS-SIM 0.228
VISUAL 0.209
WN-BEST 0.234
WORD2GAUSS 0.206
SIM-SPEC 0.320

ORDER-EMB 0.191
POINCARÉ (nouns) 0.512
HYPERVEC 0.540

Best LEAR 0.686

(c) Summary

Figure 3: Results on the graded LE task defined by HyperLex. Following Nickel and Kiela (2017), we use
Spearman’s rank correlation scores on: a) the entire dataset (2,616 noun and verb pairs); and b) its noun
subset (2,163 pairs). The summary table shows the performance of other well-known architectures on the
full HyperLex dataset, compared to the best results achieved using LEAR specialisation.

SGNS vectors and quantifies the LE strength using
the symmetric cosine distance between vectors. A
comparison of these models to the best-performing
LEAR vectors shows the extent of the improvements
achieved using the specialisation approach.

LEAR-specialised vectors also outperform SLQS-
SIM (Santus et al., 2014) and VISUAL (Kiela et al.,
2015b), two LE detection models similar in spirit
to LEAR. These models combine symmetric se-
mantic similarity (through cosine distance) with
an asymmetric measure of lexical generality ob-
tained either from text (SLQS-SIM) or visual data
(VISUAL). The results on HyperLex indicate that
the two generality-based measures are too coarse-
grained for graded LE judgements. These models
were originally constructed to tackle LE direction-
ality and detection tasks (see Section 4.1), but their
performance is surpassed by LEAR on those tasks
as well. The VISUAL model outperforms SLQS-SIM.
However, its numbers on BLESS (0.88), WBLESS
(0.75), and BIBLESS (0.57) are far from the top-
performing LEAR vectors (0.96, 0.92, 0.88).11

WN-BEST denotes the best result with asymmet-
ric similarity measures which use the WordNet
structure as their starting point (Wu and Palmer,
1994; Pedersen et al., 2004). This model can be
observed as a model that directly looks up the full
WordNet structure to reason about graded lexical
entailment. The reported results from Figure 3(c)
suggest it is more effective to quantify the LE re-

11We note that SLQS and VISUAL do not leverage any exter-
nal knowledge from WordNet, but the VISUAL model lever-
ages external visual information about concepts.

lation strength by using WordNet as the source of
constraints for specialisation models such as HY-
PERVEC or LEAR.

WORD2GAUSS (Vilnis and McCallum, 2015)
represents words as multivariate K-dimensional
Gaussians rather than points in the embedding
space: it is therefore naturally asymmetric and was
used in LE tasks before, but its performance on Hy-
perLex indicates that it cannot effectively capture
the subtleties required to model graded LE. How-
ever, note that the comparison is not strictly fair
as WORD2GAUSS does not leverage any external
knowledge. An interesting line for future research
is to embed external knowledge within this repre-
sentation framework.

Most importantly, LEAR outperforms three re-
cent (and conceptually different) architectures:
ORDER-EMB (Vendrov et al., 2016), POINCARÉ
(Nickel and Kiela, 2017), and HYPERVEC (Nguyen
et al., 2017). Like LEAR, all of these models
complement distributional knowledge with exter-
nal linguistic constraints extracted from WordNet.
Each model uses a different strategy to exploit the
hierarchical relationships encoded in these con-
straints (their approaches are discussed in Sec-
tion 5).12 However, LEAR, as the first LE-oriented
post-processor, is able to utilise the constraints
more effectively than its competitors. Another ad-
vantage of LEAR is its applicability to any input

12As discussed previously by Vulić et al. (2017), the off-
the-shelf ORDER-EMB vectors were trained for the binary
ungraded LE detection task: this limits their expressiveness in
the graded LE task.

1140



WBLESS BIBLESS HL-A HL-N

LEAR variant
SYM-ONLY 0.687 0.679 0.469 0.429
ASYM-ONLY 0.867 0.824 0.529 0.565
FULL 0.912 0.875 0.686 0.705

Table 2: Analysing the importance of the synergy in
the FULL LEAR model on the final performance
on WBLESS, BLESS, HyperLex-All (HL-A) and
HyperLex-Nouns (HL-N). Input: FASTTEXT. D2.

vector space.
Figures 3(a) and 3(b) indicate that the two LEAR

variants which rely on norm ratios (D2 and D3),
rather than on absolute (unbounded) norm differ-
ences (D1), achieve stronger performance on Hy-
perLex. The highest correlation scores are again
achieved by D2 with all input vector spaces.

4.3 Further Discussion

Why Symmetric + Asymmetric? In another ex-
periment, we analyse the contributions of both LE-
related terms in the LEAR combined objective func-
tion (see Section 2.2). We compare three variants
of LEAR: 1) a symmetric variant which does not ar-
range vector norms using the LEj(BL) term (SYM-
ONLY); 2) a variant which arranges norms, but does
not use LE constraints as additional symmetric AT-
TRACT constraints (ASYM-ONLY); and 3) the full
LEAR model, which uses both cost terms (FULL).
The results with one input space (similar results are
achieved with others) are shown in Table 2. This ta-
ble shows that, while the stand-alone ASYM-ONLY
term seems more beneficial than the SYM-ONLY
one, using the two terms jointly yields the strongest
performance across all LE tasks.

LE and Semantic Similarity We also test
whether the asymmetric LE term harms the (norm-
independent) cosine distances used to represent
semantic similarity. The LEAR model is compared
to the original ATTRACT-REPEL model making use
of the same set of linguistic constraints. Two true
semantic similarity datasets are used for evaluation:
SimLex-999 (Hill et al., 2015) and SimVerb-3500
(Gerz et al., 2016). There is no significant differ-
ence in performance between the two models, both
of which yield similar results on SimLex (Spear-
man’s rank correlation of ≈ 0.71) and SimVerb (≈
0.70). This proves that cosine distances remain pre-
served during the optimization of the asymmetric
objective performed by the joint LEAR model.

5 Related Work

Vector Space Specialisation A standard ap-
proach to incorporating external information into
vector spaces is to pull the representations of simi-
lar words closer together. Some models integrate
such constraints into the training procedure: they
modify the prior or the regularisation (Yu and
Dredze, 2014; Xu et al., 2014; Bian et al., 2014;
Kiela et al., 2015a), or use a variant of the SGNS-
style objective (Liu et al., 2015; Osborne et al.,
2016; Nguyen et al., 2017). Another class of mod-
els, popularly termed retrofitting, fine-tune distribu-
tional vector spaces by injecting lexical knowledge
from semantic databases such as WordNet or the
Paraphrase Database (Faruqui et al., 2015; Jauhar
et al., 2015; Wieting et al., 2015; Nguyen et al.,
2016; Mrkšić et al., 2016; Mrkšić et al., 2017).

LEAR falls into the latter category. However,
while previous post-processing methods have fo-
cused almost exclusively on specialising vector
spaces to emphasise semantic similarity (i.e., to
distinguish between similarity and relatedness by
explicitly pulling synonyms closer and pushing
antonyms further apart), this paper proposed a prin-
cipled methodology for specialising vector spaces
for asymmetric hierarchical relations (of which lex-
ical entailment is an instance). Its starting point is
the state-of-the-art similarity specialisation frame-
work of Mrkšić et al. (2017), which we extend to
support the inclusion of hierarchical asymmetric
relationships between words.

Word Vectors and Lexical Entailment Since
the hierarchical LE relation is one of the funda-
mental building blocks of semantic taxonomies
and hierarchical concept categorisations (Beckwith
et al., 1991; Fellbaum, 1998), a significant amount
of research in semantics has been invested into its
automatic detection and classification. Early work
relied on asymmetric directional measures (Weeds
et al., 2004; Clarke, 2009; Kotlerman et al., 2010;
Lenci and Benotto, 2012, i.a.) which were based
on the distributional inclusion hypothesis (Geffet
and Dagan, 2005) or the distributional informa-
tiveness or generality hypothesis (Herbelot and
Ganesalingam, 2013; Santus et al., 2014). However,
these approaches have recently been superseded by
methods based on word embeddings. These meth-
ods build dense real-valued vectors for capturing
the LE relation, either directly in the LE-focused
space (Vilnis and McCallum, 2015; Vendrov et al.,

1141



2016; Henderson and Popa, 2016; Nickel and Kiela,
2017; Nguyen et al., 2017) or by using the vectors
as features for supervised LE detection models
(Tuan et al., 2016; Shwartz et al., 2016; Nguyen
et al., 2017; Glavaš and Ponzetto, 2017).

Several LE models embed useful hierarchical re-
lations from external resources such as WordNet
into LE-focused vector spaces, with solutions com-
ing in different flavours. The model of Yu et al.
(2015) is a dynamic distance-margin model opti-
mised for the LE detection task using hierarchical
WordNet constraints. This model was extended by
Tuan et al. (2016) to make use of contextual senten-
tial information. A major drawback of both models
is their inability to make directionality judgements.
Further, their performance has recently been sur-
passed by the HYPERVEC model of Nguyen et al.
(2017). This model combines WordNet constraints
with the SGNS distributional objective into a joint
model. As such, the model is tied to the SGNS
objective and any change of the distributional mod-
elling paradigm implies a change of the entire HY-
PERVEC model. This makes their model less ver-
satile than the proposed LEAR framework. More-
over, the results achieved using LEAR specialisation
achieve substantially better performance across all
LE tasks used for evaluation.

Another model similar in spirit to LEAR is the
ORDER-EMB model of Vendrov et al. (2016), which
encodes hierarchical structure by imposing a par-
tial order in the embedding space: higher-level
concepts get assigned higher per-coordinate val-
ues in a d-dimensional vector space. The model
minimises the violation of the per-coordinate or-
derings during training by relying on hierarchical
WordNet constraints between word pairs. Finally,
the POINCARÉ model of Nickel and Kiela (2017)
makes use of hyperbolic spaces to learn general-
purpose LE embeddings based on n-dimensional
Poincaré balls which encode both hierarchy and
semantic similarity, again using the WordNet con-
straints. A similar model in hyperbolic spaces was
proposed by Chamberlain et al. (2017). In this pa-
per, we demonstrate that LE-specialised word em-
beddings with stronger performance can be induced
using a simpler model operating in more intuitively
interpretable Euclidean vector spaces.

6 Conclusion and Future Work

This paper proposed LEAR, a vector space speciali-
sation procedure which simultaneously injects sym-

metric and asymmetric constraints into existing
vector spaces, performing joint specialisation for
two properties: lexical entailment and semantic sim-
ilarity. Since the former is not symmetric, LEAR
uses an asymmetric cost function which encodes
the hierarchy between concepts by manipulating
the norms of word vectors, assigning higher norms
to higher-level concepts. Specialising the vector
space for both relations has a synergistic effect:
LEAR-specialised vectors attain state-of-the-art per-
formance in judging semantic similarity and set
new high scores across four different lexical entail-
ment tasks. The code for the LEAR model is avail-
able from: github.com/nmrksic/lear.

In future work, we plan to apply a simi-
lar methodology to other asymmetric relations
(e.g., meronymy), as well as to investigate fine-
grained models which can account for differing
path lengths from the WordNet hierarchy. We will
also extend the model to reason over words un-
seen in input lexical resources, similar to the recent
post-specialisation model oriented towards special-
isation of unseen words for similarity (Vulić et al.,
2018). We also plan to test the usefulness of LE-
specialised vectors in downstream natural language
understanding tasks. Porting the model to other
languages and enabling cross-lingual applications
such as cross-lingual lexical entailment (Upadhyay
et al., 2018) is another future research direction.

Acknowledgments

We thank the three anonymous reviewers for their
insightful comments and suggestions. We are also
grateful to the TakeLab research group at the Uni-
versity of Zagreb for offering support to computa-
tionally intensive experiments in our hour of need.
This work is supported by the ERC Consolidator
Grant LEXICAL: Lexical Acquisition Across Lan-
guages (no 648909).

References
Rami Al-Rfou, Bryan Perozzi, and Steven Skiena.

2013. Polyglot: Distributed word representations for
multilingual NLP. In Proceedings of CoNLL, pages
183–192.

Marco Baroni, Raffaella Bernardi, Ngoc-Quynh Do,
and Chung-chieh Shan. 2012. Entailment above the
word level in distributional semantics. In Proceed-
ings of EACL, pages 23–32.

Marco Baroni and Alessandro Lenci. 2011. How we

1142



BLESSed distributional semantic evaluation. In Pro-
ceedings of the GEMS 2011 Workshop, pages 1–10.

Richard Beckwith, Christiane Fellbaum, Derek Gross,
and George A. Miller. 1991. WordNet: A lexical
database organized on psycholinguistic principles.
Lexical acquisition: Exploiting on-line resources to
build a lexicon, pages 211–231.

Jiang Bian, Bin Gao, and Tie-Yan Liu. 2014.
Knowledge-powered deep learning for word embed-
ding. In Proceedings of ECML-PKDD, pages 132–
148.

Or Biran and Kathleen McKeown. 2013. Classifying
taxonomic relations between pairs of Wikipedia arti-
cles. In Proceedings of IJCNLP, pages 788–794.

Piotr Bojanowski, Edouard Grave, Armand Joulin, and
Tomas Mikolov. 2017. Enriching word vectors with
subword information. Transactions of the ACL,
5:135–146.

Samuel R. Bowman, Gabor Angeli, Christopher Potts,
and Christopher D. Manning. 2015. A large anno-
tated corpus for learning natural language inference.
In Proceedings of EMNLP, pages 632–642.

Benjamin Paul Chamberlain, James Clough, and
Marc Peter Deisenroth. 2017. Neural embeddings of
graphs in hyperbolic space. CoRR, abs/1705.10359.

Danqi Chen and Christopher D. Manning. 2014. A
fast and accurate dependency parser using neural net-
works. In Proceedings of EMNLP, pages 740–750.

Daoud Clarke. 2009. Context-theoretic semantics for
natural language: An overview. In Proceedings of
the Workshop on Geometrical Models of Natural
Language Semantics (GEMS), pages 112–119.

Allan M. Collins and Ross M. Quillian. 1972. Exper-
iments on semantic memory and language compre-
hension. Cognition in Learning and Memory.

Ronan Collobert, Jason Weston, Léon Bottou, Michael
Karlen, Koray Kavukcuoglu, and Pavel P. Kuksa.
2011. Natural language processing (almost) from
scratch. Journal of Machine Learning Research,
12:2493–2537.

Ido Dagan, Dan Roth, Mark Sammons, and Fabio Mas-
simo Zanzotto. 2013. Recognizing textual entail-
ment: Models and applications. Synthesis Lectures
on Human Language Technologies, 6(4):1–220.

John C. Duchi, Elad Hazan, and Yoram Singer. 2011.
Adaptive subgradient methods for online learning
and stochastic optimization. Journal of Machine
Learning Research, 12:2121–2159.

Manaal Faruqui, Jesse Dodge, Sujay Kumar Jauhar,
Chris Dyer, Eduard Hovy, and Noah A. Smith. 2015.
Retrofitting word vectors to semantic lexicons. In
Proceedings of NAACL-HLT, pages 1606–1615.

Christiane Fellbaum. 1998. WordNet.

Maayan Geffet and Ido Dagan. 2005. The distribu-
tional inclusion hypotheses and lexical entailment.
In Proceedings of ACL, pages 107–114.

Daniela Gerz, Ivan Vulić, Felix Hill, Roi Reichart, and
Anna Korhonen. 2016. SimVerb-3500: A large-
scale evaluation set of verb similarity. In Proceed-
ings of EMNLP, pages 2173–2182.

Goran Glavaš and Simone Paolo Ponzetto. 2017.
Dual tensor model for detecting asymmetric lexico-
semantic relations. In Proceedings of EMNLP,
pages 1758–1768.

James A. Hampton. 2007. Typicality, graded member-
ship, and vagueness. Cognitive Science, 31(3):355–
384.

Zellig S. Harris. 1954. Distributional structure. Word,
10(23):146–162.

James Henderson and Diana Popa. 2016. A vector
space for distributional semantics for entailment. In
Proceedings of ACL, pages 2052–2062.

Aurélie Herbelot and Mohan Ganesalingam. 2013.
Measuring semantic content in distributional vectors.
In Proceedings of ACL, pages 440–445.

Felix Hill, Roi Reichart, and Anna Korhonen. 2015.
SimLex-999: Evaluating semantic models with (gen-
uine) similarity estimation. Computational Linguis-
tics, 41(4):665–695.

Sepp Hochreiter and Jürgen Schmidhuber. 1997.
Long Short-Term Memory. Neural Computation,
9(8):1735–1780.

Sujay Kumar Jauhar, Chris Dyer, and Eduard H. Hovy.
2015. Ontologically grounded multi-sense represen-
tation learning for semantic vector space models. In
Proceedings of NAACL, pages 683–693.

Hans Kamp and Barbara Partee. 1995. Prototype the-
ory and compositionality. Cognition, 57(2):129–
191.

Douwe Kiela, Felix Hill, and Stephen Clark. 2015a.
Specializing word embeddings for similarity or re-
latedness. In Proceedings of EMNLP, pages 2044–
2048.

Douwe Kiela, Laura Rimell, Ivan Vulić, and Stephen
Clark. 2015b. Exploiting image generality for lex-
ical entailment detection. In Proceedings of ACL,
pages 119–124.

Barbara Ann Kipfer. 2009. Roget’s 21st Century The-
saurus (3rd Edition). Philip Lief Group.

Lili Kotlerman, Ido Dagan, Idan Szpektor, and Maayan
Zhitomirsky-Geffet. 2010. Directional distribu-
tional similarity for lexical inference. Natural Lan-
guage Engineering, 16(4):359–389.

1143



Alessandro Lenci and Giulia Benotto. 2012. Identify-
ing hypernyms in distributional semantic spaces. In
Proceedings of *SEM, pages 75–79.

Omer Levy and Yoav Goldberg. 2014. Dependency-
based word embeddings. In Proceedings of ACL,
pages 302–308.

Quan Liu, Hui Jiang, Si Wei, Zhen-Hua Ling, and
Yu Hu. 2015. Learning semantic word embeddings
based on ordinal knowledge constraints. In Proceed-
ings of ACL, pages 1501–1511.

Douglas L. Medin, Mark W. Altom, and Timothy D.
Murphy. 1984. Given versus induced category repre-
sentations: Use of prototype and exemplar informa-
tion in classification. Journal of Experimental Psy-
chology, 10(3):333–352.

Oren Melamud, Jacob Goldberger, and Ido Dagan.
2016. Context2vec: Learning generic context em-
bedding with bidirectional LSTM. In Proceedings
of CoNLL, pages 51–61.

Tomas Mikolov, Ilya Sutskever, Kai Chen, Gregory S.
Corrado, and Jeffrey Dean. 2013. Distributed rep-
resentations of words and phrases and their compo-
sitionality. In Proceedings of NIPS, pages 3111–
3119.

Michael Mohler, David Bracewell, Marc Tomlinson,
and David Hinote. 2013. Semantic signatures for
example-based linguistic metaphor detection. In
Proceedings of the First Workshop on Metaphor in
NLP, pages 27–35.

Nikola Mrkšić, Diarmuid Ó Séaghdha, Tsung-Hsien
Wen, Blaise Thomson, and Steve Young. 2017. Neu-
ral belief tracker: Data-driven dialogue state track-
ing. In Proceedings of ACL, pages 1777–1788.

Nikola Mrkšić, Diarmuid Ó Séaghdha, Blaise Thom-
son, Milica Gašić, Lina Maria Rojas-Barahona, Pei-
Hao Su, David Vandyke, Tsung-Hsien Wen, and
Steve Young. 2016. Counter-fitting word vectors
to linguistic constraints. In Proceedings of NAACL-
HLT.

Nikola Mrkšić, Ivan Vulić, Diarmuid Ó Séaghdha, Ira
Leviant, Roi Reichart, Milica Gašić, Anna Korho-
nen, and Steve Young. 2017. Semantic specialisa-
tion of distributional word vector spaces using mono-
lingual and cross-lingual constraints. Transactions
of the ACL, 5:309–324.

Roberto Navigli and Simone Paolo Ponzetto. 2012. Ba-
belNet: The automatic construction, evaluation and
application of a wide-coverage multilingual seman-
tic network. Artificial Intelligence, 193:217–250.

Roberto Navigli, Paola Velardi, and Stefano Faralli.
2011. A graph-based algorithm for inducing lexical
taxonomies from scratch. In Proceedings of IJCAI,
pages 1872–1877.

Kim Anh Nguyen, Maximilian Köper, Sabine
Schulte im Walde, and Ngoc Thang Vu. 2017.
Hierarchical embeddings for hypernymy detection
and directionality. In Proceedings of EMNLP,
pages 233–243.

Kim Anh Nguyen, Sabine Schulte im Walde, and
Ngoc Thang Vu. 2016. Integrating distributional
lexical contrast into word embeddings for antonym-
synonym distinction. In Proceedings of ACL, pages
454–459.

Maximilian Nickel and Douwe Kiela. 2017. Poincaré
embeddings for learning hierarchical representa-
tions. In Proceedings of NIPS.

Masataka Ono, Makoto Miwa, and Yutaka Sasaki.
2015. Word embedding-based antonym detection
using thesauri and distributional information. In
Proceedings of NAACL-HLT, pages 984–989.

Dominique Osborne, Shashi Narayan, and Shay Cohen.
2016. Encoding prior knowledge with eigenword
embeddings. Transactions of the ACL, 4:417–430.

Ellie Pavlick, Pushpendre Rastogi, Juri Ganitkevitch,
Benjamin Van Durme, and Chris Callison-Burch.
2015. PPDB 2.0: Better paraphrase ranking, fine-
grained entailment relations, word embeddings, and
style classification. In Proceedings of ACL, pages
425–430.

Ted Pedersen, Siddharth Patwardhan, and Jason Miche-
lizzi. 2004. WordNet::Similarity - Measuring the re-
latedness of oncepts. In Proceedings of AAAI, pages
1024–1025.

Jeffrey Pennington, Richard Socher, and Christopher
Manning. 2014. Glove: Global vectors for word rep-
resentation. In Proceedings of EMNLP, pages 1532–
1543.

Marek Rei and Ted Briscoe. 2014. Looking for hy-
ponyms in vector space. In Proceedings of CoNLL,
pages 68–77.

Stephen Roller, Katrin Erk, and Gemma Boleda. 2014.
Inclusive yet selective: Supervised distributional hy-
pernymy detection. In Proceedings of COLING,
pages 1025–1036.

Eleanor H. Rosch. 1973. Natural categories. Cognitive
Psychology, 4(3):328–350.

Enrico Santus, Alessandro Lenci, Qin Lu, and Sabine
Schulte im Walde. 2014. Chasing hypernyms in vec-
tor spaces with entropy. In Proceedings of EACL,
pages 38–42.

Enrico Santus, Frances Yung, Alessandro Lenci, and
Chu-Ren Huang. 2015. EVALution 1.0: an evolving
semantic dataset for training and evaluation of distri-
butional semantic models. In Proceedings of the 4th
Workshop on Linked Data in Linguistics: Resources
and Applications, pages 64–69.

1144



Vered Shwartz, Yoav Goldberg, and Ido Dagan. 2016.
Improving hypernymy detection with an integrated
path-based and distributional method. In Proceed-
ings of ACL, pages 2389–2398.

Vered Shwartz, Enrico Santus, and Dominik
Schlechtweg. 2017. Hypernyms under siege:
Linguistically-motivated artillery for hypernymy
detection. In Proceedings of EACL, pages 65–75.

Rion Snow, Daniel Jurafsky, and Andrew Y. Ng. 2006.
Semantic taxonomy induction from heterogenous ev-
idence. In Proceedings of ACL, pages 801–808.

Luu Anh Tuan, Yi Tay, Siu Cheung Hui, and See Kiong
Ng. 2016. Learning term embeddings for taxonomic
relation identification using dynamic weighting neu-
ral network. In Proceedings of EMNLP, pages 403–
413.

Joseph P. Turian, Lev-Arie Ratinov, and Yoshua Ben-
gio. 2010. Word representations: A simple and gen-
eral method for semi-supervised learning. In Pro-
ceedings of ACL, pages 384–394.

Shyam Upadhyay, Yogarshi Vyas, Marine Carpuat, and
Dan Roth. 2018. Robust cross-lingual hypernymy
detection using dependency context. In Proceedings
of NAACL-HLT.

Ivan Vendrov, Ryan Kiros, Sanja Fidler, and Raquel Ur-
tasun. 2016. Order-embeddings of images and lan-
guage. In Proceedings of ICLR (Conference Track).

Luke Vilnis and Andrew McCallum. 2015. Word repre-
sentations via Gaussian embedding. In Proceedings
of ICLR (Conference Track).

Ivan Vulić, Daniela Gerz, Douwe Kiela, Felix Hill, and
Anna Korhonen. 2017. Hyperlex: A large-scale eval-
uation of graded lexical entailment. Computational
Linguistics.

Ivan Vulić, Goran Glavaš, Nikola Mrkšić, and Anna
Korhonen. 2018. Post-specialisation: Retrofitting
vectors of words unseen in lexical resources. In Pro-
ceedings of NAACL-HLT.

Ivan Vulić, Nikola Mrkšić, and Anna Korhonen. 2017a.
Cross-lingual induction and transfer of verb classes
based on word vector space specialisation. In Pro-
ceedings of EMNLP, pages 2536–2548.

Ivan Vulić, Nikola Mrkšić, Roi Reichart, Diarmuid
Ó Séaghdha, Steve Young, and Anna Korhonen.
2017b. Morph-fitting: Fine-tuning word vector
spaces with simple language-specific rules. In Pro-
ceedings of ACL, pages 56–68.

Julie Weeds, Daoud Clarke, Jeremy Reffin, David Weir,
and Bill Keller. 2014. Learning to distinguish hy-
pernyms and co-hyponyms. In Proceedings of COL-
ING, pages 2249–2259.

Julie Weeds, David Weir, and Diana McCarthy. 2004.
Characterising measures of lexical distributional
similarity. In Proceedings of COLING, pages 1015–
1021.

John Wieting, Mohit Bansal, Kevin Gimpel, and Karen
Livescu. 2015. From paraphrase database to compo-
sitional paraphrase model and back. Transactions of
the ACL, 3:345–358.

Zhibiao Wu and Martha Palmer. 1994. Verb semantics
and lexical selection. In Proceedings of ACL, pages
133–138.

Chang Xu, Yalong Bai, Jiang Bian, Bin Gao, Gang
Wang, Xiaoguang Liu, and Tie-Yan Liu. 2014. RC-
NET: A general framework for incorporating knowl-
edge into word representations. In Proceedings of
CIKM, pages 1219–1228.

Mo Yu and Mark Dredze. 2014. Improving lexical em-
beddings with semantic knowledge. In Proceedings
of ACL, pages 545–550.

Zheng Yu, Haixun Wang, Xuemin Lin, and Min Wang.
2015. Learning term embeddings for hypernymy
identification. In Proceedings of IJCAI, pages 1390–
1397.

Jingwei Zhang, Jeremy Salwen, Michael Glass, and Al-
fio Gliozzo. 2014. Word semantic representations
using bayesian probabilistic tensor factorization. In
Proceedings of EMNLP, pages 1522–1531.

Will Y. Zou, Richard Socher, Daniel Cer, and Christo-
pher D. Manning. 2013. Bilingual word embeddings
for phrase-based machine translation. In Proceed-
ings of EMNLP, pages 1393–1398.

1145


