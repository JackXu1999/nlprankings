



















































The Unreasonable Effectiveness of Transformer Language Models in Grammatical Error Correction


Proceedings of the Fourteenth Workshop on Innovative Use of NLP for Building Educational Applications, pages 127–133
Florence, Italy, August 2, 2019. c©2019 Association for Computational Linguistics

127

The Unreasonable Effectiveness of Transformer Language Models in
Grammatical Error Correction

Dimitris Alikaniotis Vipul Raheja
Grammarly

New York City, NY
firstname.lastname@grammarly.com

Abstract

Recent work on Grammatical Error Correc-
tion (GEC) has highlighted the importance of
language modeling in that it is certainly pos-
sible to achieve good performance by com-
paring the probabilities of the proposed edits.
At the same time, advancements in language
modeling have managed to generate linguistic
output, which is almost indistinguishable from
that of human-generated text. In this paper,
we up the ante by exploring the potential of
more sophisticated language models in GEC
and offer some key insights on their strengths
and weaknesses. We show that, in line with
recent results in other NLP tasks, Transformer
architectures achieve consistently high perfor-
mance and provide a competitive baseline for
future machine learning models.

1 Introduction

Transformer models (Vaswani et al., 2017) trained
on large-scale language modeling datasets have re-
cently proved to be a very effective means of rep-
resenting the meaning of a sentence, being put
to effective use in fine-tuning both sentence-level
tasks, such as the GLUE benchmark (Wang et al.,
2018) and token-level tasks, such as Named Entity
Recognition (Devlin et al., 2019). Recent work
has also found them to produce linguistically valid
representations (Goldberg, 2019), as well as to dis-
play excellent performance across multiple down-
stream NLP tasks (e.g., Houlsby et al. 2019).

In this work, we explore how such models per-
form in the task of Grammatical Error Correc-
tion (GEC). While there is a substantial amount of
work on statistical (Rozovskaya and Roth, 2016;
Junczys-Dowmunt and Grundkiewicz, 2014; Yan-
nakoudakis et al., 2017) and neural (Ji et al.,
2017; Xie et al., 2016; Yuan and Briscoe, 2016;
Chollampatt et al., 2016; Chollampatt and Ng,
2017; Sakaguchi et al., 2017; Chollampatt and

Ng, 2018) machine translation methods for GEC,
we follow the approach of Bryant and Briscoe
(2018) and explore how such models would fare
in this task when treated as simple language mod-
els. More specifically, Bryant and Briscoe (2018)
train a 5-gram language model on the One Bil-
lion Word Benchmark (Chelba et al., 2013) dataset
and find that it produces competitive baseline re-
sults without any supervised training. In our work,
we extend this work by substituting the n-gram
model for several publicly available implemen-
tations of state-of-the-art Transformer language
models trained on large linguistic corpora and as-
sess their performance on GEC without any super-
vised training. We find that Transformer language
models produce results on par with supervised ap-
proaches providing a solid baseline system. This
finding is of particular importance in GEC, where
data collection and annotation requires substantial
manual effort.

2 Related Work

The idea of using language models is quite funda-
mental to the task of Grammatical Error Correc-
tion, which has fed a substantial body of work over
the years. More recently, with the availability of
web-scale data powering the advances in language
modeling, among most of the other advances in
NLP, a plethora of language-modeling based ap-
proaches have been proposed for the GEC task.
Gamon et al. (2008); Matthieu Hermet and Sz-
pakowicz (2008) and Yi et al. (2008) were some of
the early works to successfully leverage language
models trained on large amounts of web-scale data
into a GEC system, reinforcing the idea that sim-
ple models and a lot of data trump more elabo-
rate models based on annotated data (Halevy et al.,
2009).

Since then, multiple works based on language-



128

models have been proposed for the GEC task
(Park and Levy, 2011; Dahlmeier and Ng, 2012a),
either relying entirely on LMs or using them
for fine-tuning their systems. Many of the top-
ranked systems in the CoNLL-2013 and 2014
GEC shared tasks (Ng et al., 2013, 2014), were
either based on language models or had them as
integral parts of their systems (Kao et al., 2013;
Yoshimoto et al., 2013; Xing et al., 2013; Lee
and Lee, 2014; Junczys-Dowmunt and Grund-
kiewicz, 2014). LM-only approaches though took
a backseat and were only sporadically used after
the shared tasks, as Neural Machine Translation-
based approaches took over, but LMs remained
an integral part of the GEC systems (Junczys-
Dowmunt and Grundkiewicz, 2016; Ji et al., 2017;
Xie et al., 2016; Junczys-Dowmunt et al., 2018;
Chollampatt and Ng, 2018). However, Bryant and
Briscoe (2018) recently revived the idea, achiev-
ing competitive performance with the state-of-
the-art, demonstrating the effectiveness of the ap-
proaches to the task without using any annotated
data for training.

3 Methodology

In this work, we follow the setup from Bryant
and Briscoe (2018) substituting the 5-gram lan-
guage model for different language models based
on the Transformer architecture. Specifically, we
use Google’s BERT (Devlin et al., 2019) and Ope-
nAI’s GPT (Radford et al., 2018) and GPT-2 (Rad-
ford et al., 2019).1 While all these are best thought
of as language models in that they have been
trained to predict an element in a sequence, they
use slightly different objectives which does not
make them directly comparable. Specifically, GPT
and GPT-2 have been trained with a classic lan-
guage modeling objective, whereby they predict
the next word in a sequence, whereas BERT has
been trained using a masked language modeling
objective in which the network attempts to predict
masked words in the sentence.

We extract the probability of a sentence from
BERT, by iteratively masking every word in the
sentence and then summing the log probabilities.
While this approach is far from ideal, it has been
shown (Wang and Cho, 2019) that it approximates
the log-likelihood of a sentence.

1https://github.com/huggingface/
pytorch-pretrained-BERT/

Test set Sent. Tokens Annot.

CoNLL-2014 1,312 30k 2
FCE 2,715 47k 1

Table 1: Statistics for evaluation data

3.1 Confusion sets

Since our systems do not generate novel se-
quences, we follow Bryant and Briscoe (2018) and
use simple heuristics to generate a confusion set
of sentences that our language models score. For
prepositions and determiners, the confusion set in-
cludes the set of all prepositions and determiners
plus an empty string � to remove unnecessary ad-
ditions. For morphological errors (e.g., past tense
or pluralization), we use the Automatically Gener-
ated Inflection Database (AGID) which contains
different morphological forms for each word.2

However, we notice that due to the automatic gen-
eration, AGID contains errors that might prop-
agate into our scoring. The problem with in-
troducing new errors and non-words is that they
would be interpreted as unknown words (hence-
forth [UNK]s) from the model’s perspective. An
unknown word in some context might give higher
probabilities to an erroneous sentence and cause
the model not to select the correct alternative. To
remedy this issue, we generate a vocabulary from
all the training sets and make sure that any pro-
posed words which do not exist in the vocabulary
are replaced by [UNK]s. Note that there is no rea-
son to re-use the vocabulary of the training sets as
any large English wordlist would achieve a simi-
lar effect. Finally, for spelling mistakes, we, again,
follow Bryant and Briscoe (2018) and use CyHun-
Spell3 to generate alternatives for non-words.

3.2 Thresholding

Given that our confusion set is prone to errors (due
to its automatic generation procedure) as well as
the fact that we cannot target all potential errors
(e.g., insertions), we bias our method to prefer
the original sentence unless a much better the al-
ternative is found. We quantify this margin by
imposing a threshold above which we accept a
candidate sentence as a better alternative. Con-
cretely, let P (sc) be the probability of the can-
didate sentence and P (so) the probability of the

2http://wordlist.aspell.net/other/
3https://pypi.org/project/CyHunspell/

https://github.com/huggingface/pytorch-pretrained-BERT/
https://github.com/huggingface/pytorch-pretrained-BERT/
http://wordlist.aspell.net/other/
https://pypi.org/project/CyHunspell/


129

ERRANT M2

Dataset System P R F0.5 P R F0.5

CoNLL-2014

Felice et al. (2014) † - - - 39.71 30.10 37.33
Yannakoudakis et al. (2017) - - - 58.79 30.63 49.66
Chollampatt and Ng (2017) - - - 62.74 32.96 53.14
Chollampatt and Ng (2018) - - - 65.49 33.14 54.79
Ge et al. (2018) - - - 74.12 36.30 61.34

Bryant and Briscoe (2018) 36.62 19.93 31.37 40.56 20.81 34.09
BERT 33.27 27.14 31.83 35.69 27.99 33.83
GPT-1 49.58 27.06 42.5 51.08 27.45 43.57
GPT-2 57.73 24.75 45.58 58.51 24.9 46.08

FCE

Yannakoudakis et al. (2017) - - - 65.03 32.45 54.15

Bryant and Briscoe (2018) 41.92 13.62 29.61 44.78 14.12 31.22
BERT 29.56 34.67 30.46 31.97 35.01 32.53
GPT-1 62.75 32.19 52.74 64.01 32.33 53.52
GPT-2 61.91 33.47 52.92 62.64 33.74 53.48

Table 2: Results of our Transformer-Language Model approach against similar approaches (Bryant and Briscoe,
2018) and state-of-the-art on Grammatical Error Correction. For each of the datasets, we use the corresponding
test set, and we do not train our models on the corpora. As BERT, we report the best performing BERT model (12
layers, retaining uppercase characters). In the top part of each dataset, we report the scores of supervised methods
and in the bottom the unsupervised ones. † denotes this system won the shared task competition.

original sentence, then we accept the candidate if
P (sc) > P (so) + τ , where τ is some threshold
parameter which we fit on each development set.
Note that, practically, this parameter controls the
trade-off between precision and recall as higher
τ values would mean that there is less chance of
changing the original sentence (i.e., higher preci-
sion) and vice versa. We explore different values
for τ ∈ {0, 2, 4, 6, 8} by, as above, fitting them on
the corresponding development set.4

3.3 Search

Finally, we perform greedy search to find the best
alternative sentence by iterating over each sen-
tence multiple times, once for every position for
which our heuristics found alternatives. If an alter-
native is selected for the target position, we update
the original sentence and proceed to the next po-
sition. This pseudo-log-likelihood approximation
makes the problem of considering every permuta-
tion more computationally tractable.

4 Experiments

We evaluate our method and report results on two
standard publicly available datasets. Our evalua-
tion is aimed to stay as true to Bryant and Briscoe
(2018) as possible to ensure an even compari-
son. Concretely, we use the test dataset from

4Note that the probability of each sentence is in log space.

the CoNLL-2014 (Ng et al., 2014) shared task5

and the publicly available First Certificate in En-
glish (FCE) (Yannakoudakis et al., 2011). Unfor-
tunately, due to licensing issues, we were unable
to obtain permission to use the JFLEG (Napoles
et al., 2017) corpus for evaluation. Note that in
our method, we do not make use of the training
sets commonly used with these datasets. However,
we use the development sets used by Bryant and
Briscoe (2018) to tune the hyperparameter τ . The
number of sentences and tokens for the datasets
we used can be found in Table 1.

Similar to Bryant and Briscoe (2018), we report
results on three metrics. We use the MaxMatch
(M2) Precision, Recall and F0.5 (Dahlmeier and
Ng, 2012b) and ERRANT Precision, Recall and
F0.5 (Bryant et al., 2017).

5 Results

Table 2 presents the results of our method compar-
ing them against recent state-of-the-art supervised
models and the simple n-gram language model
used by Bryant and Briscoe (2018). Table 3 shows
some qualitative examples on how each model cor-
rects two sentences pulled from the FCE along
with the gold annotations. The reported results

5While we acknowledge the contemporaneous nature of
the BEA 2019 Shared Task on GEC and would have liked to
report results on the W&I+LOCNESS data, we could not do
so because of license limitations.



130

Source It will start by a speech from the Director of the conference, followed by a meal.
Gold It will start with a speech by the Director of the conference, followed by a meal.
BERT It will start with a speech from the Director of the conference, followed by a meal.
GPT It will start by a speech from the Director of the conference, followed by a meal.
GPT-2 It will start with a speech from the Director of the conference, followed by a meal.

Source They all knows where the conference is and when.
Gold They all know where the conference is and when.
BERT They all know where the conferencing is and when.
GPT They all knows where the conference is and when.
GPT-2 They all know where the conference is and when.

Table 3: Source sentences along with the gold edits and the proposed candidates from each of our models.

come from the best performing hyperparameter τ
on each dataset. For BERT, we also explored dif-
ferent sizes (12 vs. 24 layers) and whether re-
taining uppercase characters helps in performance.
The best performing τ values were τ = 4 for
CoNLL14 for all models; for the FCE dataset:
BERT τ = 4, GPT τ = 8, and GPT-2 τ = 6.
The best ‘version,’ of BERT was the large, cased
(i.e., retaining the lower- /uppercase distinction).

A key result of Table 2 is that Transformer Lan-
guage Models prove to be more than just a com-
petitive baseline to legitimate Grammatical Er-
ror Correction systems on their own. Across the
board, Transformer Models are able to outperform
the simple n-gram model and even approach the
performance of supervised GEC systems.

6 Discussion

Looking at the performance of the two GPT mod-
els more closely, we see that their performance
is nearly identical with GPT-2 leading by a small
margin in the CoNLL14 dataset. Given that the
versions we used share the same number of layers
(12), we attribute GPT-2’s slight advantage to the
fact that it was trained on considerably more data.

Another interesting result is that while BERT
surpasses the n-gram baseline overall, it achieves
worse performance than the rest in terms of preci-
sion and F0.5 score. Considering its overall suc-
cess at modeling NLP tasks, one might expect
BERT to achieve better performance here. How-
ever, as mentioned above, BERT is not truly a
language model in the sense that GPT and GPT-
2 are but uses a quasi-language modeling objec-
tive which could explain its degraded performance
in this setting. Note that framing the task differ-
ently (e.g., by masking the preposition in a sen-

tence and selecting the one with the highest proba-
bility) might give the edge to BERT as it resembles
the way it was trained.

It is also worth mentioning that despite tun-
ing τ to each dataset, we do not explore different
weights for different kinds of errors (e.g., penal-
izing more spelling mistakes). Our key motivation
was to corroborate and extend the results of Bryant
and Briscoe (2018) to current state-of-the-art lan-
guage models which have been trained in several
languages and show that these models are tough
baselines to beat for novel GEC systems.

While the results of the Transformer language
models shown in Table 2 demonstrate that they
are a tough baseline to beat, it is worth noting that
the present approach is not without its limitations.
We believe that our methodology should not be
considered a panacea to GEC. For instance, being
bound by the confusion sets, our system (1) cannot
handle missing words (which make up about 20%
of all errors), and (2) it is tuned to capture only a
subset of the possible mistakes a writer can make
(closed class words).

It could be argued that since our system makes
use of a pre-defined confusion set (even an auto-
matically generated one), it could not be consid-
ered as a fully unsupervised system. In principle,
we agree with that statement and we believe that
a system which uses, for example, corpus statis-
tics to on-the-fly generate a confusion set would
be a very interesting exercise and could yield sim-
ilar results. However, the present paper is con-
cerned with highlighting the importance of lan-
guage modeling in GEC and its potential in aid-
ing in low-resource languages where large parallel
datasets are unavailable, but such confusion sets
are relatively easily obtainable.



131

7 Conclusion

In this work, we advanced on the foundational idea
that a simple language modeling-based approach
to GEC with no annotated data can challenge the
latest neural and machine translation approaches
that rely on large quantities of annotated training
data. To this end, we improve on previous work
by leveraging state-of-the-art language modeling
techniques and perform a thorough comparison of
three state-of-the-art Transformer language mod-
els which in turn have been trained on data of the
order of hundreds of millions of words. We find
that merely using pre-trained, and publicly avail-
able neural language models improves the perfor-
mance by a significant margin and comes within
striking distance of the state-of-the-art methods.

This work reinforces the strength and robust-
ness of language-model based methods for the
task of grammatical error correction. While recent
state-of-the-art GEC systems are pursuing NMT-
based models with huge amounts (millions of sen-
tences) of annotated training data, approaches like
this which require no annotated training data pro-
vide great value to researchers and developers
interested in building competitive GEC systems
(e.g., in other languages) with limited annotated
data.

Acknowledgements

The authors would like to thank Joel Tetreault
for his comments on earlier drafts as well as the
anonymous reviewers for their helpful sugges-
tions.

References
Christopher Bryant and Ted Briscoe. 2018. Language

model based grammatical error correction without
annotated training data. In Proceedings of the Thir-
teenth Workshop on Innovative Use of NLP for
Building Educational Applications, pages 247–253,
New Orleans, Louisiana. Association for Computa-
tional Linguistics.

Christopher Bryant, Mariano Felice, and Ted Briscoe.
2017. Automatic annotation and evaluation of error
types for grammatical error correction. In Proceed-
ings of the 55th Annual Meeting of the Association
for Computational Linguistics (Volume 1: Long Pa-
pers), pages 793–805, Vancouver, Canada. Associa-
tion for Computational Linguistics.

Ciprian Chelba, Tomas Mikolov, Mike Schuster, Qi Ge,
Thorsten Brants, Phillipp Koehn, and Tony Robin-

son. 2013. One billion word benchmark for measur-
ing progress in statistical language modeling. Tech-
nical report, Google.

Shamil Chollampatt and Hwee Tou Ng. 2017. Con-
necting the dots: Towards human-level grammatical
error correction. In Proceedings of the 12th Work-
shop on Innovative Use of NLP for Building Edu-
cational Applications, pages 327–333, Copenhagen,
Denmark. Association for Computational Linguis-
tics.

Shamil Chollampatt and Hwee Tou Ng. 2018. A multi-
layer convolutional encoder-decoder neural network
for grammatical error correction. In Proceedings of
the Thirty-Second AAAI Conference on Artificial In-
telligence.

Shamil Chollampatt, Kaveh Taghipour, and Hwee Tou
Ng. 2016. Neural network translation models for
grammatical error correction. In Proceedings of the
25th International Joint Conference on Artificial In-
telligence, New York, USA.

Daniel Dahlmeier and Hwee Tou Ng. 2012a. A beam-
search decoder for grammatical error correction. In
Proceedings of the 2012 Joint Conference on Empir-
ical Methods in Natural Language Processing and
Computational Natural Language Learning, pages
568–578, Jeju Island, Korea. Association for Com-
putational Linguistics.

Daniel Dahlmeier and Hwee Tou Ng. 2012b. Better
evaluation for grammatical error correction. In Pro-
ceedings of the 2012 Conference of the North Amer-
ican Chapter of the Association for Computational
Linguistics: Human Language Technologies, pages
568–572, Montréal, Canada. Association for Com-
putational Linguistics.

Jacob Devlin, Ming-Wei Chang, Kenton Lee, and
Kristina Toutanova. 2019. BERT: Pre-training of
deep bidirectional transformers for language under-
standing. In Proceedings of the 2019 Conference
of the North American Chapter of the Association
for Computational Linguistics: Human Language
Technologies, Volume 1 (Long and Short Papers),
pages 4171–4186, Minneapolis, Minnesota. Associ-
ation for Computational Linguistics.

Mariano Felice, Zheng Yuan, Øistein E. Andersen, He-
len Yannakoudakis, and Ekaterina Kochmar. 2014.
Grammatical error correction using hybrid systems
and type filtering. In Proceedings of the Eigh-
teenth Conference on Computational Natural Lan-
guage Learning: Shared Task, pages 15–24, Bal-
timore, Maryland. Association for Computational
Linguistics.

Michael Gamon, Jianfeng Gao, Chris Brockett,
Alexandre Klementiev, William B. Dolan, Dmitriy
Belenko, and Lucy Vanderwende. 2008. Using
contextual speller techniques and language model-
ing for ESL error correction. In Proceedings of
the Third International Joint Conference on Natural
Language Processing: Volume-I.

https://doi.org/10.18653/v1/W18-0529
https://doi.org/10.18653/v1/W18-0529
https://doi.org/10.18653/v1/W18-0529
https://doi.org/10.18653/v1/P17-1074
https://doi.org/10.18653/v1/P17-1074
http://arxiv.org/abs/1312.3005
http://arxiv.org/abs/1312.3005
https://doi.org/10.18653/v1/W17-5037
https://doi.org/10.18653/v1/W17-5037
https://doi.org/10.18653/v1/W17-5037
https://www.aaai.org/ocs/index.php/AAAI/AAAI18/paper/viewFile/17308/16137
https://www.aaai.org/ocs/index.php/AAAI/AAAI18/paper/viewFile/17308/16137
https://www.aaai.org/ocs/index.php/AAAI/AAAI18/paper/viewFile/17308/16137
https://arxiv.org/pdf/1606.00189.pdf
https://arxiv.org/pdf/1606.00189.pdf
https://www.aclweb.org/anthology/D12-1052
https://www.aclweb.org/anthology/D12-1052
https://www.aclweb.org/anthology/N12-1067
https://www.aclweb.org/anthology/N12-1067
https://www.aclweb.org/anthology/N19-1423
https://www.aclweb.org/anthology/N19-1423
https://www.aclweb.org/anthology/N19-1423
https://doi.org/10.3115/v1/W14-1702
https://doi.org/10.3115/v1/W14-1702
https://www.aclweb.org/anthology/I08-1059
https://www.aclweb.org/anthology/I08-1059
https://www.aclweb.org/anthology/I08-1059


132

Tao Ge, Furu Wei, and Ming Zhou. 2018. Reaching
human-level performance in automatic grammati-
cal error correction: An empirical study. CoRR,
abs/1807.01270.

Yoav Goldberg. 2019. Assessing bert’s syntactic abili-
ties. CoRR, abs/1901.05287.

A. Halevy, P. Norvig, and F. Pereira. 2009. The un-
reasonable effectiveness of data. IEEE Intelligent
Systems, 24(2):8–12.

Neil Houlsby, Andrei Giurgiu, Stanislaw Jastrzebski,
Bruna Morrone, Quentin De Laroussilhe, Andrea
Gesmundo, Mona Attariyan, and Sylvain Gelly.
2019. Parameter-efficient transfer learning for NLP.
In Proceedings of the 36th International Conference
on Machine Learning, volume 97 of Proceedings
of Machine Learning Research, pages 2790–2799,
Long Beach, California, USA. PMLR.

Jianshu Ji, Qinlong Wang, Kristina Toutanova, Yongen
Gong, Steven Truong, and Jianfeng Gao. 2017. A
nested attention neural hybrid model for grammati-
cal error correction. In Proceedings of the 55th An-
nual Meeting of the Association for Computational
Linguistics (Volume 1: Long Papers), pages 753–
762, Vancouver, Canada. Association for Computa-
tional Linguistics.

Marcin Junczys-Dowmunt and Roman Grundkiewicz.
2014. The AMU system in the CoNLL-2014
shared task: Grammatical error correction by data-
intensive and feature-rich statistical machine trans-
lation. In Proceedings of the Eighteenth Confer-
ence on Computational Natural Language Learn-
ing: Shared Task, pages 25–33, Baltimore, Mary-
land. Association for Computational Linguistics.

Marcin Junczys-Dowmunt and Roman Grundkiewicz.
2016. Phrase-based machine translation is state-of-
the-art for automatic grammatical error correction.
In Proceedings of the 2016 Conference on Empiri-
cal Methods in Natural Language Processing, pages
1546–1556, Austin, Texas. Association for Compu-
tational Linguistics.

Marcin Junczys-Dowmunt, Roman Grundkiewicz,
Shubha Guha, and Kenneth Heafield. 2018. Ap-
proaching neural grammatical error correction as a
low-resource machine translation task. In Proceed-
ings of the 2018 Conference of the North Ameri-
can Chapter of the Association for Computational
Linguistics: Human Language Technologies, Vol-
ume 1 (Long Papers), pages 595–606, New Orleans,
Louisiana. Association for Computational Linguis-
tics.

Ting-hui Kao, Yu-wei Chang, Hsun-wen Chiu, Tzu-Hsi
Yen, Joanne Boisson, Jian-cheng Wu, and Jason S.
Chang. 2013. CoNLL-2013 shared task: Gram-
matical error correction NTHU system description.
In Proceedings of the Seventeenth Conference on
Computational Natural Language Learning: Shared
Task, pages 20–25, Sofia, Bulgaria. Association for
Computational Linguistics.

Kyusong Lee and Gary Geunbae Lee. 2014.
POSTECH grammatical error correction system
in the CoNLL-2014 shared task. In Proceedings
of the Eighteenth Conference on Computational
Natural Language Learning: Shared Task, pages
65–73, Baltimore, Maryland. Association for
Computational Linguistics.

Alain Dsilets Matthieu Hermet and Stan Szpakow-
icz. 2008. Using the web as a linguistic re-
source to automatically correct lexico-syntactic er-
rors. In Proceedings of the Sixth International
Conference on Language Resources and Evaluation
(LREC’08), Marrakech, Morocco. European Lan-
guage Resources Association (ELRA).

Courtney Napoles, Keisuke Sakaguchi, and Joel
Tetreault. 2017. Jfleg: A fluency corpus and bench-
mark for grammatical error correction. In Proceed-
ings of the 15th Conference of the European Chap-
ter of the Association for Computational Linguistics:
Volume 2, Short Papers, pages 229–234, Valencia,
Spain. Association for Computational Linguistics.

Hwee Tou Ng, Siew Mei Wu, Ted Briscoe, Christian
Hadiwinoto, Raymond Hendy Susanto, and Christo-
pher Bryant. 2014. The CoNLL-2014 shared task
on grammatical error correction. In Proceedings of
the Eighteenth Conference on Computational Nat-
ural Language Learning: Shared Task, pages 1–
14, Baltimore, Maryland. Association for Compu-
tational Linguistics.

Hwee Tou Ng, Siew Mei Wu, Yuanbin Wu, Christian
Hadiwinoto, and Joel Tetreault. 2013. The CoNLL-
2013 shared task on grammatical error correction.
In Proceedings of the Seventeenth Conference on
Computational Natural Language Learning: Shared
Task, pages 1–12, Sofia, Bulgaria. Association for
Computational Linguistics.

Y. Albert Park and Roger Levy. 2011. Automated
whole sentence grammar correction using a noisy
channel model. In Proceedings of the 49th Annual
Meeting of the Association for Computational Lin-
guistics: Human Language Technologies - Volume
1, HLT ’11, pages 934–944, Stroudsburg, PA, USA.
Association for Computational Linguistics.

Alec Radford, Karthik Narasimhan, Tim Salimans, and
Ilya Sutskever. 2018. Improving language under-
standing by generative pre-training.

Alec Radford, Jeff Wu, Rewon Child, David Luan,
Dario Amodei, and Ilya Sutskever. 2019. Language
models are unsupervised multitask learners.

Alla Rozovskaya and Dan Roth. 2016. Grammatical
error correction: Machine translation and classifiers.
In Proceedings of the 54th Annual Meeting of the As-
sociation for Computational Linguistics (Volume 1:
Long Papers), pages 2205–2215, Berlin, Germany.
Association for Computational Linguistics.

https://arxiv.org/abs/1807.01270
https://arxiv.org/abs/1807.01270
https://arxiv.org/abs/1807.01270
http://arxiv.org/abs/1901.05287
http://arxiv.org/abs/1901.05287
https://doi.org/10.1109/MIS.2009.36
https://doi.org/10.1109/MIS.2009.36
http://proceedings.mlr.press/v97/houlsby19a.html
https://doi.org/10.18653/v1/P17-1070
https://doi.org/10.18653/v1/P17-1070
https://doi.org/10.18653/v1/P17-1070
https://doi.org/10.3115/v1/W14-1703
https://doi.org/10.3115/v1/W14-1703
https://doi.org/10.3115/v1/W14-1703
https://doi.org/10.3115/v1/W14-1703
https://doi.org/10.18653/v1/D16-1161
https://doi.org/10.18653/v1/D16-1161
https://doi.org/10.18653/v1/N18-1055
https://doi.org/10.18653/v1/N18-1055
https://doi.org/10.18653/v1/N18-1055
https://www.aclweb.org/anthology/W13-3603
https://www.aclweb.org/anthology/W13-3603
https://doi.org/10.3115/v1/W14-1709
https://doi.org/10.3115/v1/W14-1709
http://www.lrec-conf.org/proceedings/lrec2008/
http://www.lrec-conf.org/proceedings/lrec2008/
http://www.lrec-conf.org/proceedings/lrec2008/
http://www.aclweb.org/anthology/E17-2037
http://www.aclweb.org/anthology/E17-2037
https://doi.org/10.3115/v1/W14-1701
https://doi.org/10.3115/v1/W14-1701
https://www.aclweb.org/anthology/W13-3601
https://www.aclweb.org/anthology/W13-3601
http://dl.acm.org/citation.cfm?id=2002472.2002590
http://dl.acm.org/citation.cfm?id=2002472.2002590
http://dl.acm.org/citation.cfm?id=2002472.2002590
https://s3-us-west-2.amazonaws.com/openai-assets/research-covers/language-unsupervised/language_understanding_paper.pdf
https://s3-us-west-2.amazonaws.com/openai-assets/research-covers/language-unsupervised/language_understanding_paper.pdf
https://d4mucfpksywv.cloudfront.net/better-language-models/language-models.pdf
https://d4mucfpksywv.cloudfront.net/better-language-models/language-models.pdf
https://doi.org/10.18653/v1/P16-1208
https://doi.org/10.18653/v1/P16-1208


133

Keisuke Sakaguchi, Matt Post, and Benjamin
Van Durme. 2017. Grammatical error correction
with neural reinforcement learning. In Proceedings
of the Eighth International Joint Conference on
Natural Language Processing (Volume 2: Short
Papers), pages 366–372, Taipei, Taiwan. Asian
Federation of Natural Language Processing.

Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob
Uszkoreit, Llion Jones, Aidan N Gomez, Ł ukasz
Kaiser, and Illia Polosukhin. 2017. Attention is all
you need. In Advances in Neural Information Pro-
cessing Systems 30, pages 5998–6008. Curran Asso-
ciates, Inc.

Alex Wang and Kyunghyun Cho. 2019. BERT has a
mouth, and it must speak: BERT as a markov ran-
dom field language model. CoRR, abs/1902.04094.

Alex Wang, Amanpreet Singh, Julian Michael, Fe-
lix Hill, Omer Levy, and Samuel Bowman. 2018.
GLUE: A multi-task benchmark and analysis plat-
form for natural language understanding. In Pro-
ceedings of the 2018 EMNLP Workshop Black-
boxNLP: Analyzing and Interpreting Neural Net-
works for NLP, pages 353–355, Brussels, Belgium.
Association for Computational Linguistics.

Ziang Xie, Anand Avati, Naveen Arivazhagan, Dan Ju-
rafsky, and Andrew Y. Ng. 2016. Neural language
correction with character-based attention. CoRR,
abs/1603.09727.

Junwen Xing, Longyue Wang, Derek F. Wong, Lidia S.
Chao, and Xiaodong Zeng. 2013. UM-checker: A
hybrid system for English grammatical error cor-
rection. In Proceedings of the Seventeenth Con-
ference on Computational Natural Language Learn-
ing: Shared Task, pages 34–42, Sofia, Bulgaria. As-
sociation for Computational Linguistics.

Helen Yannakoudakis, Ted Briscoe, and Ben Medlock.
2011. A new dataset and method for automatically
grading ESOL texts. In Proceedings of the 49th An-
nual Meeting of the Association for Computational
Linguistics: Human Language Technologies, pages
180–189, Portland, Oregon, USA. Association for
Computational Linguistics.

Helen Yannakoudakis, Marek Rei, Øistein E. Ander-
sen, and Zheng Yuan. 2017. Neural sequence-
labelling models for grammatical error correction.
In Proceedings of the 2017 Conference on Empiri-
cal Methods in Natural Language Processing, pages
2795–2806, Copenhagen, Denmark. Association for
Computational Linguistics.

Xing Yi, Jianfeng Gao, and William B. Dolan. 2008.
A web-based English proofing system for English
as a second language users. In Proceedings of
the Third International Joint Conference on Natural
Language Processing: Volume-II.

Ippei Yoshimoto, Tomoya Kose, Kensuke Mitsuzawa,
Keisuke Sakaguchi, Tomoya Mizumoto, Yuta

Hayashibe, Mamoru Komachi, and Yuji Matsumoto.
2013. NAIST at 2013 CoNLL grammatical error
correction shared task. In Proceedings of the Seven-
teenth Conference on Computational Natural Lan-
guage Learning: Shared Task, pages 26–33, Sofia,
Bulgaria. Association for Computational Linguis-
tics.

Zheng Yuan and Ted Briscoe. 2016. Grammatical er-
ror correction using neural machine translation. In
Proceedings of the 2016 Conference of the North
American Chapter of the Association for Computa-
tional Linguistics: Human Language Technologies,
pages 380–386, San Diego, California. Association
for Computational Linguistics.

https://www.aclweb.org/anthology/I17-2062
https://www.aclweb.org/anthology/I17-2062
http://papers.nips.cc/paper/7181-attention-is-all-you-need.pdf
http://papers.nips.cc/paper/7181-attention-is-all-you-need.pdf
https://www.aclweb.org/anthology/W18-5446
https://www.aclweb.org/anthology/W18-5446
http://arxiv.org/abs/1603.09727
http://arxiv.org/abs/1603.09727
https://www.aclweb.org/anthology/W13-3605
https://www.aclweb.org/anthology/W13-3605
https://www.aclweb.org/anthology/W13-3605
https://www.aclweb.org/anthology/P11-1019
https://www.aclweb.org/anthology/P11-1019
https://doi.org/10.18653/v1/D17-1297
https://doi.org/10.18653/v1/D17-1297
https://www.aclweb.org/anthology/I08-2082
https://www.aclweb.org/anthology/I08-2082
https://www.aclweb.org/anthology/W13-3604
https://www.aclweb.org/anthology/W13-3604
https://doi.org/10.18653/v1/N16-1042
https://doi.org/10.18653/v1/N16-1042

