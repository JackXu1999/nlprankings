



















































Variational Neural Discourse Relation Recognizer


Proceedings of the 2016 Conference on Empirical Methods in Natural Language Processing, pages 382–391,
Austin, Texas, November 1-5, 2016. c©2016 Association for Computational Linguistics

Variational Neural Discourse Relation Recognizer

Biao Zhang1, Deyi Xiong2∗, Jinsong Su1, Qun Liu3,4, Rongrong Ji1, Hong Duan1, Min Zhang2
Xiamen University, Xiamen, China 3610051

Provincial Key Laboratory for Computer Information Processing Technology
Soochow University, Suzhou, China 2150062

ADAPT Centre, School of Computing, Dublin City University3

Key Laboratory of Intelligent Information Processing,
Institute of Computing Technology, Chinese Academy of Sciences4

zb@stu.xmu.edu.cn, {jssu, rrji, hduan}@xmu.edu.cn
qun.liu@dcu.ie, {dyxiong, minzhang}@suda.edu.cn

Abstract

Implicit discourse relation recognition is a
crucial component for automatic discourse-
level analysis and nature language understand-
ing. Previous studies exploit discriminative
models that are built on either powerful man-
ual features or deep discourse representations.
In this paper, instead, we explore generative
models and propose a variational neural dis-
course relation recognizer. We refer to this
model as VarNDRR. VarNDRR establishes a
directed probabilistic model with a latent con-
tinuous variable that generates both a dis-
course and the relation between the two ar-
guments of the discourse. In order to per-
form efficient inference and learning, we in-
troduce neural discourse relation models to
approximate the prior and posterior distribu-
tions of the latent variable, and employ these
approximated distributions to optimize a repa-
rameterized variational lower bound. This al-
lows VarNDRR to be trained with standard
stochastic gradient methods. Experiments on
the benchmark data set show that VarNDRR
can achieve comparable results against state-
of-the-art baselines without using any manual
features.

1 Introduction

Discourse relation characterizes the internal struc-
ture and logical relation of a coherent text. Automat-
ically identifying these relations not only plays an
important role in discourse comprehension and gen-
eration, but also obtains wide applications in many

∗Corresponding author

other relevant natural language processing tasks,
such as text summarization (Yoshida et al., 2014),
conversation (Higashinaka et al., 2014), question an-
swering (Verberne et al., 2007) and information ex-
traction (Cimiano et al., 2005). Generally, discourse
relations can be divided into two categories: explicit
and implicit, which can be illustrated in the follow-
ing example:

The company was disappointed by the rul-
ing. because The obligation is totally un-
warranted. (adapted from wsj 0294)

With the discourse connective because, these two
sentences display an explicit discourse relation
CONTINGENCY which can be inferred easily. Once
this discourse connective is removed, however, the
discourse relation becomes implicit and difficult to
be recognized. This is because almost no surface in-
formation in these two sentences can signal this re-
lation. For successful recognition of this relation, in
the contrary, we need to understand the deep seman-
tic correlation between disappointed and obligation
in the two sentences above. Although explicit dis-
course relation recognition (DRR) has made great
progress (Miltsakaki et al., 2005; Pitler et al., 2008),
implicit DRR still remains a serious challenge due
to the difficulty in semantic analysis.

Conventional approaches to implicit DRR often
treat the relation recognition as a classification prob-
lem, where discourse arguments and relations are re-
garded as the inputs and outputs respectively. Gen-
erally, these methods first generate a representation
for a discourse, denoted as x1 (e.g., manual fea-

1Unless otherwise specified, all variables in the paper, e.g.,
x,y, z are multivariate. But for notational convenience, we

382



amssymb amsmath

z

x y

θφ

N

Figure 1: Graphical illustration for VarNDRR. Solid
lines denote the generative model pθ(x|z)pθ(y|z),
dashed lines denote the variational approximation
qφ(z|x,y) to the posterior p(z|x,y) and q′φ(z|x) to the
prior p(z) for inference. The variational parameters φ are
learned jointly with the generative model parameters θ.

tures in SVM-based recognition (Pitler et al., 2009;
Lin et al., 2009) or sentence embeddings in neu-
ral networks-based recognition (Ji and Eisenstein,
2015; Zhang et al., 2015)), and then directly model
the conditional probability of the corresponding dis-
course relation y given x, i.e. p(y|x). In spite of
their success, these discriminative approaches rely
heavily on the goodness of discourse representa-
tion x. Sophisticated and good representations of
a discourse, however, may make models suffer from
overfitting as we have no large-scale balanced data.

Instead, we assume that there is a latent continu-
ous variable z from an underlying semantic space.
It is this latent variable that generates both dis-
course arguments and the corresponding relation,
i.e. p(x,y|z). The latent variable enables us to
jointly model discourse arguments and their rela-
tions, rather than conditionally model y on x. How-
ever, the incorporation of the latent variable makes
the modeling difficult due to the intractable compu-
tation with respect to the posterior distribution.

Inspired by Kingma and Welling (2014) as well
as Rezende et al. (2014) who introduce a variational
neural inference model to the intractable posterior
via optimizing a reparameterized variational lower
bound, we propose a variational neural discourse re-
lation recognizer (VarNDRR) with a latent contin-
uous variable for implicit DRR in this paper. The
key idea behind VarNDRR is that although the pos-
terior distribution is intractable, we can approximate
it via a deep neural network. Figure 1 illustrates the

treat them as univariate variables in most cases. Additionally,
we use bold symbols to denote variables, and plain symbols to
denote values.

graph structure of VarNDRR. Specifically, there are
two essential components:

• neural discourse recognizer As a discourse x
and its corresponding relation y are indepen-
dent with each other given the latent variable z
(as shown by the solid lines), we can formulate
the generation of x and y from z in the equa-
tion pθ(x,y|z) = pθ(x|z)pθ(y|z). These two
conditional probabilities on the right hand side
are modeled via deep neural networks (see sec-
tion 3.1).
• neural latent approximator VarNDRR assumes

that the latent variable can be inferred from dis-
course arguments x and relations y (as shown
by the dash lines). In order to infer the la-
tent variable, we employ a deep neural net-
work to approximate the posterior qφ(z|x,y)
as well as the prior q′φ(z|x) (see section 3.2),
which makes the inference procedure efficient.
We further employ a reparameterization tech-
nique to sample z from qφ(z|x,y) that not only
bridges the gap between the recognizer and the
approximator but also allows us to use the stan-
dard stochastic gradient ascent techniques for
optimization (see section 3.3).

The main contributions of our work lie in two as-
pects. 1) We exploit a generative graphic model for
implicit DRR. To the best of our knowledge, this
has never been investigated before. 2) We develop
a neural recognizer and two neural approximators
specifically for implicit DRR, which enables both
the recognition and inference to be efficient.

We conduct a series of experiments for English
implicit DRR on the PDTB-style corpus to evaluate
the effectiveness of our proposed VarNDRR model.
Experiment results show that our variational model
achieves comparable results against several strong
baselines in term of F1 score. Extensive analysis
on the variational lower bound further reveals that
our model can indeed fit the data set with respect to
discourse arguments and relations.

2 Background: Variational Autoencoder

The variational autoencoder (VAE) (Kingma and
Welling, 2014; Rezende et al., 2014), which forms
the basis of our model, is a generative model that can
be regarded as a regularized version of the standard

383



autoencoder. With a latent random variable z, VAE
significantly changes the autoencoder architecture to
be able to capture the variations in the observed vari-
able x. The joint distribution of (x, z) is formulated
as follows:

pθ(x, z) = pθ(x|z)pθ(z) (1)

where pθ(z) is the prior over the latent variable, usu-
ally equipped with a simple Gaussian distribution.
pθ(x|z) is the conditional distribution that models
the probability of x given the latent variable z. Typi-
cally, VAE parameterizes pθ(x|z) with a highly non-
linear but flexible function approximator such as a
neural network.

The objective of VAE is to maximize a variational
lower bound as follows:

LV AE(θ, φ;x) = −KL(qφ(z|x)||pθ(z))
+Eqφ(z|x)[log pθ(x|z)] ≤ log pθ(x)

(2)

where KL(Q||P ) is Kullback-Leibler divergence be-
tween two distributions Q and P . qφ(z|x) is an
approximation of the posterior p(z|x) and usually
follows a diagonal Gaussian N (µ, diag(σ2)) whose
mean µ and variance σ2 are parameterized by again,
neural networks, conditioned on x.

To optimize Eq. (2) stochastically with respect to
both θ and φ, VAE introduces a reparameterization
trick that parameterizes the latent variable z with the
Gaussian parameters µ and σ in qφ(z|x):

z̃ = µ+ σ � � (3)

where � is a standard Gaussian variable, and � de-
notes an element-wise product. Intuitively, VAE
learns the representation of the latent variable not
as single points, but as soft ellipsoidal regions in la-
tent space, forcing the representation to fill the space
rather than memorizing the training data as isolated
representations. With this trick, the VAE model can
be trained through standard backpropagation tech-
nique with stochastic gradient ascent.

3 The VarNDRR Model

This section introduces our proposed VarNDRR
model. Formally, in VarNDRR, there are two ob-
served variables, x for a discourse and y for the cor-
responding relation, and one latent variable z. As

z

y

x1 x2

pθ(x|z)

pθ(y|z)

h′1 h
′
2

Figure 2: Neural networks for conditional probabilities
pθ(x|z) and pθ(y|z). The gray color denotes real-valued
representations while the white and black color 0-1 rep-
resentations.

illustrated in Figure 1, the joint distribution of the
three variables is formulated as follows:

pθ(x,y, z) = pθ(x,y|z)p(z) (4)

We begin with this distribution to elaborate the ma-
jor components of VarNDRR.

3.1 Neural Discourse Recognizer

The conditional distribution p(x,y|z) in Eq. (4)
shows that both discourse arguments and the corre-
sponding relation are generated from the latent vari-
able. As shown in Figure 1, x is d-separated from
y by z. Therefore the discourse x and the corre-
sponding relation y is independent given the latent
variable z. The joint probability can be therefore
formulated as follows:

pθ(x,y, z) = pθ(x|z)pθ(y|z)p(z) (5)

We use a neural model q′φ(z|x) to approximate the
prior p(z) conditioned on the discourse x (see the
following section). With respect to the other two
conditional distributions, we parameterize them via
neural networks as shown in Figure 2.

Before we describe these neural networks, it is
necessary to briefly introduce how discourse rela-
tions are annotated in our training data. The PDTB
corpus, used as our training data, annotates implicit
discourse relations between two neighboring argu-
ments, namely Arg1 and Arg2. In VarNDRR, we
represent the two arguments with bag-of-word rep-
resentations, and denote them as x1 and x2.

To model pθ(x|z) (the bottom part in Figure 2),
we project the representation of the latent variable

384



z ∈ Rdz onto a hidden layer:
h′1 = f(Wh′1z + bh′1)

h′2 = f(Wh′2z + bh′1)
(6)

where h′1 ∈ R
dh′1 , h′2 ∈ R

dh′2 , W∗ is the transfor-
mation matrix, b∗ is the bias term, du denotes the
dimensionality of vector representations of u and
f(·) is an element-wise activation function, such as
tanh(·), which is used throughout our model.

Upon this hidden layer, we further stack a Sig-
moid layer to predict the probabilities of correspond-
ing discourse arguments:

x′1 = Sigmoid(Wx′1h
′
1 + bx′1)

x′2 = Sigmoid(Wx′2h
′
2 + bx′2)

(7)

here, x′1 ∈ Rdx1 and x′2 ∈ Rdx2 are the real-
valued representations of the reconstructed x1 and
x2 respectively.2 We assume that pθ(x|z) is a mul-
tivariate Bernoulli distribution because of the bag-
of-word representation. Therefore the logarithm of
p(x|z) is calculated as the sum of probabilities of
words in discourse arguments as follows:

log p(x|z)
=

∑

i

x1,i log x
′
1,i + (1− x1,i) log(1− x′1,i)

+
∑

j

x2,j log x
′
2,j + (1− x2,j) log(1− x′2,j)

(8)

where ui,j is the jth element in ui.
In order to estimate pθ(y|z) (the top part in Fig-

ure 2), we stack a softmax layer over the multilayer-
perceptron-transformed representation of the latent
variable z:

y′ = SoftMax(Wy′MLP(z) + by′) (9)

y′ ∈ Rdy , and dy denotes the number of discourse
relations. MLP projects the representation of latent
variable z into a dm-dimensional space through four
internal layers, each of which has dimension dm.
Suppose that the true relation is y ∈ Rdy , the log-
arithm of p(y|z) is defined as:

log p(y|z) =
dy∑

i=1

yi log y
′
i (10)

2Notice that the equality of dx1 = dx2 , dh′1 = dh′2 is not
necessary though we assume so in our experiments.

µ

x1

h1

log σ2

h2

x2

y

hy

q′φ(z|x)

qφ(z|x,y)

Figure 3: Neural networks for Gaussian parameters µ
and log σ in the approximated posterior qφ(z|x,y) and
prior q′φ(z|x).

In order to precisely estimate these conditional
probabilities, our model will force the representation
z of the latent variable to encode semantic informa-
tion for both the reconstructed discourse x′ (Eq. (8))
and predicted discourse relation y′ (Eq. (10)), which
is exactly what we want.

3.2 Neural Latent Approximator
For the joint distribution in Eq. (5), we can define
a variational lower bound that is similar to Eq. (2).
The difference lies in two aspects: the approximate
prior q′φ(z|x) and posterior qφ(z|x,y). We model
both distributions as a multivariate Gaussian distri-
bution with a diagonal covariance structure:

N (z;µ, σ2I)

The mean µ and s.d. σ of the approximate distribu-
tion are the outputs of the neural network as shown
in Figure 3, where the prior and posterior have dif-
ferent conditions and independent parameters.

Approximate Posterior qφ(z|x,y) is modeled to
condition on both observed variables: the discourse
arguments x and relations y. Similar to the calcula-
tion of pθ(x|z), we first transform the input x and y
into a hidden representation:

h1 = f(Wh1x1 + bh1)

h2 = f(Wh2x2 + bh2)

hy = f(Whyy + bhy)

(11)

where h1 ∈ Rdh1 , h2 ∈ Rdh2 and hy ∈ Rdhy .3
3Notice that dh1/dh2 are not necessarily equal to dh′1/dh′2 .

385



We then obtain the Gaussian parameters of the
posterior µ and log σ2 through linear regression:

µ =Wµ1h1 +Wµ2h2 +Wµyhy + bµ

log σ2 =Wσ1h1 +Wσ2h2 +Wσyhy + bσ
(12)

where µ, σ ∈ Rdz . In this way, this posterior ap-
proximator can be efficiently computed.

Approximate Prior q′φ(z|x) is modeled to condi-
tion on discourse arguments x alone. This is based
on the observation that discriminative models are
able to obtain promising results using only x. There-
fore, assuming the discourse arguments encode the
prior information for discourse relation recognition
is meaningful.

The neural model for prior q′φ(z|x) is the same as
that (i.e. Eq (11) and (12)) for posterior qφ(z|x,y)
(see Figure 3), except for the absence of discourse
relation y. For clarity , we use µ′ and σ′ to denote
the mean and s.d. of the approximate prior.

With the parameters of Gaussian distribution, we
can access the representation z using different sam-
pling strategies. However, traditional sampling ap-
proaches often breaks off the connection between
recognizer and approximator, making the optimiza-
tion difficult. Instead, we employ the reparameteri-
zation trick (Kingma and Welling, 2014; Rezende et
al., 2014) as in Eq. (3). During training, we sam-
ple the latent variable using z̃ = µ + σ � �; during
testing, however, we employ the expectation of z in
the approximate prior distribution, i.e. set z̃ = µ′ to
avoid uncertainty.

3.3 Parameter Learning
We employ the Monte Carlo method to estimate the
expectation over the approximate posterior, that is
Eqφ(z|x,y)[log pθ(x,y|z)]. Given a training instance
(x(t), y(t)), the joint training objective is defined:

L(θ, φ) ' −KL(qφ(z|x(t), y(t))||q′φ(z|x(t)))

+
1

L

L∑

l=1

log pθ(x
(t), y(t)|z̃(t,l)) (13)

where z̃(t,l) = µ(t) + σ(t) � �(l) and �(l) ∼ N (0, I)

L is the number of samples. The first term is the KL
divergence of two Gaussian distributions which can
be computed and differentiated without estimation.

Algorithm 1 Parameter Learning Algorithm of
VarNDRR.

Inputs: A, the maximum number of iterations;
M , the number of instances in one batch;
L, the number of samples;

θ, φ← Initialize parameters
repeat
D ← getRandomMiniBatch(M)
�← getRandomNoiseFromStandardGaussian()
g←∇θ,φL(θ, φ;D, �)
θ, φ← parameterUpdater(θ, φ; g)

until convergence of parameters (θ, φ) or reach the
maximum iteration A

Relation #Instance NumberTrain Dev Test
COM 1942 197 152
CON 3342 295 279
EXP 7004 671 574
TEM 760 64 85

Table 1: Statistics of implicit discourse relations for the
training (Train), development (Dev) and test (Test) sets in
PDTB.

Maximizing this objective will minimize the differ-
ence between the approximate posterior and prior,
thus making the setting z̃ = µ′ during testing rea-
sonable. The second term is the approximate ex-
pectation of Eqφ(z|x,y)[log pθ(x,y|z)], which is also
differentiable.

As the objective function in Eq. (13) is differen-
tiable, we can optimize both the model parameters θ
and variational parameters φ jointly using standard
gradient ascent techniques. The training procedure
for VarNDRR is summarized in Algorithm 1.

4 Experiments

We conducted experiments on English implicit DRR
task to validate the effectiveness of VarNDRR.4

4.1 Dataset
We used the largest hand-annotated discourse cor-
pus PDTB 2.05 (Prasad et al., 2008) (PDTB here-
after). This corpus contains discourse annotations
over 2,312 Wall Street Journal articles, and is or-
ganized in different sections. Following previous
work (Pitler et al., 2009; Zhou et al., 2010; Lan et

4Source code is available at
https://github.com/DeepLearnXMU/VarNDRR.

5http://www.seas.upenn.edu/ pdtb/

386



Model Acc P R F1
R & X (2015) - - - 41.00
J & E (2015) 70.27 - - 35.93

SVM 63.10 22.79 64.47 33.68
SCNN 60.42 22.00 67.76 33.22

VarNDRR 63.30 24.00 71.05 35.88

(a) COM vs Other

Model Acc P R F1
(R & X (2015)) - - - 53.80
(J & E (2015)) 76.95 - - 52.78

SVM 62.62 39.14 72.40 50.82
SCNN 63.00 39.80 75.29 52.04

VarNDRR 53.82 35.39 88.53 50.56

(b) CON vs Other

Model Acc P R F1
(R & X (2015)) - - - 69.40
(J & E (2015)) 69.80 - - 80.02

SVM 60.71 65.89 58.89 62.19
SCNN 63.00 56.29 91.11 69.59

VarNDRR 57.36 56.46 97.39 71.48

(c) EXP vs Other

Model Acc P R F1
(R & X (2015)) - - - 33.30
(J & E (2015)) 87.11 - - 27.63

SVM 66.25 15.10 68.24 24.73
SCNN 76.95 20.22 62.35 30.54

VarNDRR 62.14 17.40 97.65 29.54

(d) TEM vs Other

Table 2: Classification results of different models on the implicit DRR task. Acc=Accuracy, P=Precision, R=Recall,
and F1=F1 score.

al., 2013; Zhang et al., 2015), we used sections 2-
20 as our training set, sections 21-22 as the test set.
Sections 0-1 were used as the development set for
hyperparameter optimization.

In PDTB, discourse relations are annotated in a
predicate-argument view. Each discourse connective
is treated as a predicate that takes two text spans as
its arguments. The discourse relation tags in PDTB
are arranged in a three-level hierarchy, where the
top level consists of four major semantic classes:
TEMPORAL (TEM), CONTINGENCY (CON), EX-
PANSION (EXP) and COMPARISON (COM). Be-
cause the top-level relations are general enough to
be annotated with a high inter-annotator agreement
and are common to most theories of discourse, in our
experiments we only use this level of annotations.

We formulated the task as four separate one-
against-all binary classification problems: each top
level class vs. the other three discourse relation
classes. We also balanced the training set by resam-
pling training instances in each class until the num-
ber of positive and negative instances are equal. In
contrast, all instances in the test and development set
are kept in nature. The statistics of various data sets
is listed in Table 1.

4.2 Setup
We tokenized all datasets using Stanford NLP
Toolkit6. For optimization, we employed the Adam

6http://nlp.stanford.edu/software/corenlp.shtml

algorithm (Kingma and Ba, 2014) to update param-
eters. With respect to the hyperparameters M,L,A
and the dimensionality of all vector representations,
we set them according to previous work (Kingma
and Welling, 2014; Rezende et al., 2014) and pre-
liminary experiments on the development set. Fi-
nally, we set M = 16, A = 1000, L = 1, dz =
20, dx1 = dx2 = 10001, dh1 = dh2 = dh′1 = dh′2 =

dm = dhy = 400, dy = 2 for all experiments.
7. All

parameters of VarNDRR are initialized by a Gaus-
sian distribution (µ = 0, σ = 0.01). For Adam,
we set β1 = 0.9, β2 = 0.999 with a learning rate
0.001. Additionally, we tied the following parame-
ters in practice: Wh1 and Wh2 , Wx′1 and Wx′2 .

We compared VarNDRR against the following
two different baseline methods:

• SVM: a support vector machine (SVM) classi-
fier8 trained with several manual features.
• SCNN: a shallow convolutional neural network

proposed by Zhang et al. (2015).

We also provide results from two state-of-the-art
systems:

• Rutherford and Xue (2015) convert explicit
discourse relations into implicit instances.
• Ji and Eisenstein (2015) augment discourse

representations via entity connections.

7There is one dimension in dx1 and dx2 for unknown words.
8http://svmlight.joachims.org/

387



1 -1270.24 25.3012
2 -207.21 26.04374
3 -210.21 26.64165
4 -182.84 24.70785
5 -182.17 23.63014
6 -178.72 24
7 -177.09 27.61506
8 -174.33 24.70434
9 -170.43 25.9366
10 -166.63 22.83105
11 -163.22 22.94118
12 -159.37 25.1809
13 -155.23 27.72681
14 -150.78 28.74459
15 -146.27 29.29533
16 -141.61 30.70362
17 -136.9 29.55665
18 -132.44 28.82527
19 -128.22 29.78355
20 -124.19 26.22951
21 -120.32 12.41379
22 -117.68 28.42942
23 -113.3 29.53846
24 -110.01 30.33932
25 -106.99 29.63636
26 -104.15 29.67581
27 -101.29 27.86885
28 -98.89 27.32558
29 -96.5 28.09917
30 -94.19 29.26829
31 -92.15 22.90389
32 -90.16 29.36242
33 -88.39 29.14238
34 -86.65 27.86305
35 -84.92 12.12121
36 -83.46 29.7593
37 -81.93 28.66379
38 -80.44 30.66516
39 -79.16 29.19006
40 -77.8 34.93045
41 -76.65 29.93062
42 -75.48 38.41808
43 -74.41 42.2043
44 -73.35 0.980392
45 -72.38 26.60218
46 -71.4 19.58042
47 -70.51 28.50467
48 -69.65 26.22169
49 -68.79 20.12579
50 -68 24.19872
51 -67.18 28.16456
52 -66.44 26.67877
53 -65.76 28.53261
54 -65.04 0

-1400

-1200

-1000

-800

-600

-400

-200

0

0

5

10

15

20

25

30

35

40

45

1 101 201 301 401 501 601 701 801 901

Dev Train

(a) COM vs Other

1 -774.47 31.84422
2 -178.34 29.57938
3 -174.75 36.31436
4 -172.55 31.85629
5 -168.78 30.78704
6 -164.1 23.26241
7 -159.04 39.74267
8 -153.3 42.9342
9 -147.32 19.25926

10 -141.37 0
11 -135.17 34.44109
12 -129.05 19.48529
13 -123.05 0
14 -117.5 0
15 -112.36 9.69697
16 -107.69 30.15682
17 -103.41 18.91892
18 -99.5 21.02908
19 -95.89 18.05556
20 -92.55 32.95638
21 -89.57 25.26767
22 -86.76 38.05668
23 -84.18 7.506053
24 -81.77 49.31774
25 -79.56 29.11051
26 -77.86 28.06122
27 -75.62 14.74926
28 -73.78 32.99145
29 -72.12 24.42589
30 -70.57 40.37685
31 -69.09 27.44722
32 -67.72 26.64418
33 -66.42 25.56391
34 -65.28 37.69231
35 -64.09 0
36 -63.03 42.11687
37 -62.01 0
38 -61.03 34.80278
39 -60.12 35.76642
40 -59.21 39.21085
41 -58.42 39.11439
42 -57.67 32.78195
43 -56.94 34.12463
44 -56.24 42.22821
45 -55.53 42.36902
46 -54.95 28.40909
47 -54.29 41.14173
48 -53.69 42.89044
49 -53.1 40.85189
50 -52.63 40
51 -52.08 40.1122
52 -51.58 41.76049
53 -51.11 43.67301
54 -50.63 44.73976

-900

-800

-700

-600

-500

-400

-300

-200

-100

0

0

10

20

30

40

50

60

1 101 201 301 401 501 601 701 801 901

Dev Train

(b) CON vs Other

1 -475.58 59.25384
2 -167.78 62.2192
3 -158.7 62.41888
4 -150.99 71.32476
5 -143.16 66.0775
6 -135.89 59.29878
7 -129.95 57.02067
8 -124.59 40.04004
9 -119.7 53.457

10 -115.08 55.83204
11 -110.79 57.92779
12 -106.82 56.6428
13 -103.11 53.08848
14 -99.68 51.27753
15 -96.55 45.91368
16 -93.65 47.80083
17 -91.01 46.41509
18 -88.61 54.89567
19 -86.4 53.93443
20 -84.37 49.91364
21 -82.5 48.92857
22 -80.76 44.04389
23 -79.2 49.95491
24 -77.81 56.56109
25 -76.43 50.39648
26 -75.2 49.74271
27 -74.09 57.31615
28 -72.99 53.35438
29 -71.98 50.30251
30 -71.06 56.90054
31 -70.23 58.11966
32 -69.39 50.76401
33 -68.6 52.6763
34 -67.87 53.72895
35 -67.21 53.23855
36 -66.56 53.52987
37 -65.93 56.77711
38 -65.33 55.22502
39 -64.78 52.33034
40 -64.27 54.64313
41 -63.75 54.04556
42 -63.25 54.64481
43 -62.77 51.9544
44 -62.35 55.74273
45 -61.93 57.18541
46 -61.55 55.28701
47 -61.12 54.69824
48 -60.8 55.39623
49 -60.41 55.02392
50 -60.08 54.04972
51 -59.77 54.69126
52 -59.43 52.52033
53 -59.13 55.87549
54 -58.82 56.77711

-500

-450

-400

-350

-300

-250

-200

-150

-100

-50

0

0

10

20

30

40

50

60

70

80

1 101 201 301 401 501 601 701 801 901

Dev Train

(c) EXP vs Other

1 -2621.6 10.06289
2 -197.63 10.51525
3 -193.15 11.11111
4 -198.57 10.77982
5 -315.79 11.53305
6 -244.37 6.984127
7 -264.03 11.23596
8 -301.25 10.97046
9 -188.89 4.181185

10 -186.88 0
11 -187.06 0
12 -184.16 1.892744
13 -182.4 1.369863
14 -180.22 9.924306
15 -178.27 10.08101
16 -176.39 5.235602
17 -174.71 0
18 -173.06 0
19 -171.49 0
20 -169.66 0
21 -167.42 0
22 -164.95 0
23 -162.28 0
24 -159.85 0
25 -157.64 0
26 -155.43 0
27 -153.12 0
28 -150.95 0
29 -148.96 0
30 -146.91 0
31 -145.03 0
32 -143.22 0
33 -141.17 0
34 -139.52 0
35 -137.63 0
36 -135.8 0
37 -134.07 10.5802
38 -132.44 2.158273
39 -130.8 10.9434
40 -129.51 3.883495
41 -127.7 12.16879
42 -126.55 21.57534
43 -124.58 10.90259
44 -123.23 10.65719
45 -121.78 10.84444
46 -120.3 2.234637
47 -118.94 11.38861
48 -117.44 11.51832
49 -116.18 4.472843
50 -114.76 11.71634
51 -113.71 11.55015
52 -112.34 11.6349
53 -111.18 11.63793
54 -109.95 3.951368

-3000

-2500

-2000

-1500

-1000

-500

0

0

5

10

15

20

25

1 101 201 301 401 501 601 701 801 901

Dev Train

(d) TEM vs Other

Figure 4: Illustration of the variational lower bound (blue color) on the training set and F-score (brown color) on the
development set. Horizontal axis: the epoch numbers; Vertical axis: the F1 score for relation classification (left) and
the estimated average variational lower bound per datapoint (right).

Features used in SVM are taken from the state-
of-the-art implicit discourse relation recognition
model, including Bag of Words, Cross-Argument
Word Pairs, Polarity, First-Last, First3, Production
Rules, Dependency Rules and Brown cluster pair
(Rutherford and Xue, 2014). In order to collect bag
of words, production rules, dependency rules, and
cross-argument word pairs, we used a frequency cut-
off of 5 to remove rare features, following Lin et
al. (2009).

4.3 Classification Results

Because the development and test sets are imbal-
anced in terms of the ratio of positive and negative
instances, we chose the widely-used F1 score as our
major evaluation metric. In addition, we also pro-
vide the precision, recall and accuracy for further
analysis. Table 2 summarizes the classification re-
sults.

From Table 2, we observe that the proposed VarN-
DRR outperforms SVM on COM/EXP/TEM and
SCNN on EXP/COM according to their F1 scores.
Although it fails on CON, VarNDRR achieves the
best result on EXP/COM among these three mod-
els. Overall, VarNDRR is competitive in compar-
ison with these two baselines. With respect to the
accuracy, our model does not yield substantial im-

provements over the two baselines. This may be be-
cause that we used the F1 score rather than the accu-
racy, as our selection criterion on the development
set. With respect to the precision and recall, our
model tends to produce relatively lower precisions
but higher recalls. This suggests that the improve-
ments of VarNDRR in terms of F1 scores mostly
benefits from the recall values.

Comparing with the state-of-the-art results of pre-
vious work (Ji and Eisenstein, 2015; Rutherford and
Xue, 2015), VarNDRR achieves comparable results
in term of the F1 scores. Specifically, VarNDRR out-
performs Rutherford and Xue (2015) on EXP, and Ji
and Eisenstein (2015) on TEM. However, the accu-
racy of our model fails to surpass these models. We
argue that this is because both baselines use many
manual features designed with prior human knowl-
edge, but our model is purely neural-based.

Additionally, we find that the performance of our
model is proportional to the number of training in-
stances. This suggests that collecting more training
instances (in spite of the noises) may be beneficial
to our model.

4.4 Variational Lower Bound Analysis

In addition to the classification performance, the ef-
ficiency in learning and inference is another concern

388



for variational methods. Figure 4 shows the training
procedure for four tasks in terms of the variational
lower bound on the training set. We also provide
F1 scores on the development set to investigate the
relations between the variational lower bound and
recognition performance.

We find that our model converges toward the vari-
ational lower bound considerably fast in all exper-
iments (within 100 epochs), which resonates with
the previous findings (Kingma and Welling, 2014;
Rezende et al., 2014). However, the change trend of
the F1 score does not follow that of the lower bound
which takes more time to converge. Particularly to
the four discourse relations, we further observe that
the change paths of the F1 score are completely dif-
ferent. This may suggest that the four discourse re-
lations have different properties and distributions.

In particular, the number of epochs when the best
F1 score reaches is also different for the four dis-
course relations. This indicates that dividing the im-
plicit DRR into four different tasks according to the
type of discourse relations is reasonable and better
than performing DRR on the mixtures of the four
relations.

5 Related Work

There are two lines of research related to our work:
implicit discourse relation recognition and varia-
tional neural model, which we describe in succes-
sion.

Implicit Discourse Relation Recognition Due to
the release of Penn Discourse Treebank (Prasad et
al., 2008) corpus, constantly increasing efforts are
made for implicit DRR. Upon this corpus, Pilter
et al. (2009) exploit several linguistically informed
features, such as polarity tags, modality and lexical
features. Lin et al. (2009) further incorporate con-
text words, word pairs as well as discourse parse
information into their classifier. Following this di-
rection, several more powerful features have been
exploited: entities (Louis et al., 2010), word em-
beddings (Braud and Denis, 2015), Brown cluster
pairs and co-reference patterns (Rutherford and Xue,
2014). With these features, Park and Cardie (2012)
perform feature set optimization for better feature
combination.

Different from feature engineering, predicting

discourse connectives can indirectly help the rela-
tion classification (Zhou et al., 2010; Patterson and
Kehler, 2013). In addition, selecting explicit dis-
course instances that are similar to the implicit ones
can enrich the training corpus for implicit DRR and
gains improvement (Wang et al., 2012; Lan et al.,
2013; Braud and Denis, 2014; Fisher and Sim-
mons, 2015; Rutherford and Xue, 2015). Very re-
cently, neural network models have been also used
for implicit DRR due to its capability for represen-
tation learning (Ji and Eisenstein, 2015; Zhang et al.,
2015).

Despite their successes, most of them focus on the
discriminative models, leaving the field of genera-
tive models for implicit DRR a relatively uninvesti-
gated area. In this respect, the most related work to
ours is the latent variable recurrent neural network
recently proposed by Ji et al. (2016). However, our
work differs from theirs significantly, which can be
summarized in the following three aspects: 1) they
employ the recurrent neural network to represent the
discourse arguments, while we use the simple feed-
forward neural network; 2) they treat the discourse
relations directly as latent variables, rather than the
underlying semantic representation of discourses; 3)
their model is optimized in terms of the data likeli-
hood, since the discourse relations are observed dur-
ing training. However, VarNDRR is optimized un-
der the variational theory.

Variational Neural Model In the presence of con-
tinuous latent variables with intractable posterior
distributions, efficient inference and learning in di-
rected probabilistic models is required. Kingma and
Welling (2014) as well as Rezende et al. (2014)
introduce variational neural networks that employ
an approximate inference model for intractable pos-
terior and reparameterized variational lower bound
for stochastic gradient optimization. Kingma et
al. (2014) revisit the approach to semi-supervised
learning with generative models and further develop
new models that allow effective generalization from
a small labeled dataset to a large unlabeled dataset.
Chung et al. (2015) incorporate latent variables into
the hidden state of a recurrent neural network, while
Gregor et al. (2015) combine a novel spatial atten-
tion mechanism that mimics the foveation of human
eyes, with a sequential variational auto-encoding
framework that allows the iterative construction of

389



complex images.
We follow the spirit of these variational models,

but focus on the adaptation and utilization of them
onto implicit DRR, which, to the best of our knowl-
edge, is the first attempt in this respect.

6 Conclusion and Future Work

In this paper, we have presented a variational neural
discourse relation recognizer for implicit DRR. Dif-
ferent from conventional discriminative models that
directly calculate the conditional probability of the
relation y given discourse arguments x, our model
assumes that it is a latent variable from an underly-
ing semantic space that generates both x and y. In
order to make the inference and learning efficient,
we introduce a neural discourse recognizer and two
neural latent approximators as our generative and in-
ference model respectively. Using the reparameteri-
zation technique, we are able to optimize the whole
model via standard stochastic gradient ascent algo-
rithm. Experiment results in terms of classification
and variational lower bound verify the effectiveness
of our model.

In the future, we would like to exploit the utiliza-
tion of discourse instances with explicit relations for
implicit DRR. For this we can start from two direc-
tions: 1) converting explicit instances into pseudo
implicit instances and retraining our model; 2) de-
veloping a semi-supervised model to leverage se-
mantic information inside discourse arguments. Fur-
thermore, we are also interested in adapting our
model to other similar tasks, such as nature language
inference.

Acknowledgments

The authors were supported by National Natural Sci-
ence Foundation of China (Grant Nos 61303082,
61672440, 61402388, 61622209 and 61403269),
Natural Science Foundation of Fujian Province
(Grant No. 2016J05161), Natural Science Founda-
tion of Jiangsu Province (Grant No. BK20140355),
Research fund of the Provincial Key Laboratory
for Computer Information Processing Technology in
Soochow University (Grant No. KJS1520), and Re-
search fund of the Key Laboratory for Intelligence
Information Processing in the Institute of Comput-
ing Technology of the Chinese Academy of Sciences

(Grant No. IIP2015-4). We also thank the anony-
mous reviewers for their insightful comments.

References

Chloé Braud and Pascal Denis. 2014. Combining nat-
ural and artificial examples to improve implicit dis-
course relation identification. In Proc. of COLING,
pages 1694–1705, August.

Chloé Braud and Pascal Denis. 2015. Comparing word
representations for implicit discourse relation classifi-
cation. In Proc. of EMNLP, pages 2201–2211.

Junyoung Chung, Kyle Kastner, Laurent Dinh, Kratarth
Goel, Aaron C. Courville, and Yoshua Bengio. 2015.
A recurrent latent variable model for sequential data.
In Proc. of NIPS.

Philipp Cimiano, Uwe Reyle, and Jasmin Šarić. 2005.
Ontology-driven discourse analysis for information
extraction. Data & Knowledge Engineering, 55:59–
83.

Robert Fisher and Reid Simmons. 2015. Spectral semi-
supervised discourse relation classification. In Proc.
of ACL-IJCNLP, pages 89–93, July.

Karol Gregor, Ivo Danihelka, Alex Graves, and Daan
Wierstra. 2015. DRAW: A recurrent neural network
for image generation. CoRR, abs/1502.04623.

Ryuichiro Higashinaka, Kenji Imamura, Toyomi Me-
guro, Chiaki Miyazaki, Nozomi Kobayashi, Hiroaki
Sugiyama, Toru Hirano, Toshiro Makino, and Yoshi-
hiro Matsuo. 2014. Towards an open-domain conver-
sational system fully based on natural language pro-
cessing. In Proc. of COLING, pages 928–939.

Yangfeng Ji and Jacob Eisenstein. 2015. One vector is
not enough: Entity-augmented distributed semantics
for discourse relations. TACL, pages 329–344.

Yangfeng Ji, Gholamreza Haffari, and Jacob Eisenstein.
2016. A latent variable recurrent neural network
for discourse-driven language models. In Proc. of
NAACL, pages 332–342, June.

Diederik P. Kingma and Jimmy Ba. 2014. Adam:
A method for stochastic optimization. CoRR,
abs/1412.6980.

Diederik P Kingma and Max Welling. 2014. Auto-
Encoding Variational Bayes. In Proc. of ICLR.

Diederik P. Kingma, Shakir Mohamed, Danilo Jimenez
Rezende, and Max Welling. 2014. Semi-supervised
learning with deep generative models. In Proc. of
NIPS, pages 3581–3589.

Man Lan, Yu Xu, and Zhengyu Niu. 2013. Leveraging
Synthetic Discourse Data via Multi-task Learning for
Implicit Discourse Relation Recognition. In Proc. of
ACL, pages 476–485, Sofia, Bulgaria, August.

390



Ziheng Lin, Min-Yen Kan, and Hwee Tou Ng. 2009.
Recognizing implicit discourse relations in the Penn
Discourse Treebank. In Proc. of EMNLP, pages 343–
351.

Annie Louis, Aravind Joshi, Rashmi Prasad, and Ani
Nenkova. 2010. Using entity features to classify im-
plicit discourse relations. In Proc. of SIGDIAL, pages
59–62, Tokyo, Japan, September.

Eleni Miltsakaki, Nikhil Dinesh, Rashmi Prasad, Aravind
Joshi, and Bonnie Webber. 2005. Experiments on
sense annotations and sense disambiguation of dis-
course connectives. In Proc. of TLT2005.

Joonsuk Park and Claire Cardie. 2012. Improving Im-
plicit Discourse Relation Recognition Through Fea-
ture Set Optimization. In Proc. of SIGDIAL, pages
108–112, Seoul, South Korea, July.

Gary Patterson and Andrew Kehler. 2013. Predicting
the presence of discourse connectives. In Proc. of
EMNLP, pages 914–923.

Emily Pitler, Mridhula Raghupathy, Hena Mehta, Ani
Nenkova, Alan Lee, and Aravind K Joshi. 2008. Eas-
ily identifiable discourse relations. Technical Reports
(CIS), page 884.

Emily Pitler, Annie Louis, and Ani Nenkova. 2009. Au-
tomatic sense prediction for implicit discourse rela-
tions in text. In Proc. of ACL-AFNLP, pages 683–691,
August.

Rashmi Prasad, Nikhil Dinesh, Alan Lee, Eleni Milt-
sakaki, Livio Robaldo, Aravind K Joshi, and Bonnie L
Webber. 2008. The penn discourse treebank 2.0. In
LREC. Citeseer.

Danilo Jimenez Rezende, Shakir Mohamed, and Daan
Wierstra. 2014. Stochastic backpropagation and ap-
proximate inference in deep generative models. In
Proc. of ICML, pages 1278–1286.

Attapol Rutherford and Nianwen Xue. 2014. Discover-
ing implicit discourse relations through brown cluster
pair representation and coreference patterns. In Proc.
of EACL, pages 645–654, April.

Attapol Rutherford and Nianwen Xue. 2015. Improv-
ing the inference of implicit discourse relations via
classifying explicit discourse connectives. In Proc. of
NAACL-HLT, pages 799–808, May–June.

Suzan Verberne, Lou Boves, Nelleke Oostdijk, and Peter-
Arno Coppen. 2007. Evaluating discourse-based an-
swer extraction for why-question answering. In Proc.
of SIGIR, pages 735–736.

Xun Wang, Sujian Li, Jiwei Li, and Wenjie Li. 2012. Im-
plicit discourse relation recognition by selecting typ-
ical training examples. In Proc. of COLING, pages
2757–2772.

Yasuhisa Yoshida, Jun Suzuki, Tsutomu Hirao, and
Masaaki Nagata. 2014. Dependency-based discourse

parser for single-document summarization. In Proc. of
EMNLP, pages 1834–1839, October.

Biao Zhang, Jinsong Su, Deyi Xiong, Yaojie Lu, Hong
Duan, and Junfeng Yao. 2015. Shallow convolutional
neural network for implicit discourse relation recogni-
tion. In Proc. of EMNLP, September.

Zhi-Min Zhou, Yu Xu, Zheng-Yu Niu, Man Lan, Jian Su,
and Chew Lim Tan. 2010. Predicting discourse con-
nectives for implicit discourse relation recognition. In
Proc. of COLING, pages 1507–1514.

391


