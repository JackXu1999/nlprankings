



















































Variational Semi-Supervised Aspect-Term Sentiment Analysis via Transformer


Proceedings of the 23rd Conference on Computational Natural Language Learning, pages 961–969
Hong Kong, China, November 3-4, 2019. c©2019 Association for Computational Linguistics

961

Variational Semi-supervised Aspect-term Sentiment Analysis via
Transformer

Xingyi Cheng∗, Weidi Xu ∗, Taifeng Wang, Wei Chu,
Weipeng Huang, Kunlong Chen and Junfeng Hu

Ant Financial Services Group
fanyin.cxy@antfin.com

Abstract

Aspect-term sentiment analysis (ATSA) is a
long-standing challenge in natural language
processing. It requires fine-grained semanti-
cal reasoning about a target entity appeared
in the text. As manual annotation over the
aspects is laborious and time-consuming, the
amount of labeled data is limited for super-
vised learning. This paper proposes a semi-
supervised method for the ATSA problem by
using the Variational Autoencoder based on
Transformer. The model learns the latent dis-
tribution via variational inference. By dis-
entangling the latent representation into the
aspect-specific sentiment and the lexical con-
text, our method induces the underlying senti-
ment prediction for the unlabeled data, which
then benefits the ATSA classifier. Our method
is classifier-agnostic, i.e., the classifier is an
independent module and various supervised
models can be integrated. Experimental re-
sults are obtained on the SemEval 2014 task 4
and show that our method is effective with dif-
ferent five specific classifiers and outperforms
these models by a significant margin.

1 Introduction

Aspect based sentiment analysis (ABSA) has two
sub-tasks, namely aspect-term sentiment analy-
sis (ATSA) and aspect-category sentiment analy-
sis (ACSA). ACSA is to infer the sentiment polar-
ity with regard to the predefined categories, e.g.,
the aspect food, price, ambience. On the other
hand, ATSA aims at classifying the sentiment po-
larity of a given aspect word or phrase in the
text. For example, given a review about a restau-
rant “the [pizza]aspect is the best if you like thin
crusted pizza, however, the [service]aspect is aw-
ful.”, the sentiment implications with regard to
“pizza” and “service” are contrary. For the aspect

∗∗: Equal Contribution

“pizza”, the sentiment polarity is “positive” while
“negative” for the aspect “service”. In contrast
to document-level sentiment analysis, ATSA re-
quires more fine-grained reasoning about the tex-
tual context. The task is worthy of investigation
as it can obtain the attitude with regard to a spe-
cific entity which we are interested in. The task
is widely applicated in analyzing the comments,
such as opinion generation. Recently, many at-
tempts (Tang et al., 2016b; Pan and Wang, 2018;
Liu et al., 2018; Xue and Li, 2018; Li et al., 2018a)
focus on supervised learning and pay much atten-
tion to the interaction between the aspect and the
context. However, the amount of labeled data is
quite limited as the annotation about the aspects is
laborious. Currently available data sets, e.g. Se-
mEval, only has around 2K unique sentences and
3K sentence-aspect pairs, which is insufficient to
fully exploit the power of the deep models. Fortu-
nately, a large amount of unlabeled data is avail-
able for free and can be accessed easily from the
websites. It will be of great significance if numer-
ous unlabeled samples can be utilized to further fa-
cilitate the supervised ATSA classifier. Therefore,
the semi-supervised ATSA is a promising research
topic.

In ATSA, achieving the sentiment of the aspect-
term is semantically complicated and it is non-
trivial for a model to capture sentimental simi-
larity of the aspects, which causes the difficulties
for semi-supervised learning. In this paper, we
proposed a classifier-agnostic framework which
named Aspect-term Semi-supervised Variational
Autoencoder (Kingma and Welling, 2014) based
on Transformer (ASVAET). The variational au-
toencoder offers the flexibility to customize the
model structure. In other words, the proposed
framework is compatible with other supervised
neural networks to boost their performance. Our
proposed model learns the latent representation



962

of the input data and disentangles the representa-
tions into two independent parts, i.e., the aspect-
term sentiment and the representation of the lexi-
cal context. By regarding the aspect sentiment po-
larity of the unlabeled data as the discrete latent
variable, the model implicitly induces the senti-
ment polarity via the variational inference. Specif-
ically, the representation of the lexical context is
extracted by the encoder and the aspect-term sen-
timent polarity is inferred from the specific ATSA
classifier. The decoder takes these two represen-
tations as inputs and reconstructs the original sen-
tence by two unidirectional language models. In
contrast to the conventional auto-regressive mod-
els, the latent representations have their specific
meanings and are obtained from the encoder and
the classifier to the input examples. Therefore, it
is also possible to condition the sentence genera-
tion on the sentiment and lexical information w.r.t.
a certain target entity. In addition, by separating
the representation of the input sentence, the classi-
fier becomes an independent module in our frame-
work, which endows the method with the ability to
integrate different classifiers. The method is pre-
sented in detail in Sec. 3.

Experimental results are obtained on the two
classical datasets from SemEval 2014 task 4 (Pon-
tiki et al., 2014). Five recent available models
are implemented as the classifier in ASVAET. Our
method is able to utilize the unlabeled data and
consistently improve the performance against the
supervised models. Compared with other semi-
supervised methods, i.e., in-domain word embed-
ding pre-training and self-training, the proposed
method also demonstrates better performance. We
also evaluate the effectiveness of labeled data and
sharing embeddings, and show that the structure
can provide the separation between lexical context
and sentiment polarity in the latent space.

2 Related Work

Sentiment analysis is a traditional research hotspot
in the NLP field (Wang and Manning, 2012).
Rather than obtaining the sentimental inclination
of the entire text, ATSA instead aims to extract
the sentimental expression w.r.t. a target entity.
With the release of online completions, abundant
methods were proposed to explore the limits of
current models. Tang et al. (Tang et al., 2016a)
proposed to make use of bidirectional Long Short-
Term Memory (LSTM) (Hochreiter and Schmid-

huber, 1997) to encode the sentence from the left
and right to the aspect-term. This model primar-
ily verifies the effectiveness of deep models for
ABSA Tang et al. (Tang et al., 2016b) then put
forward a neural reasoning model in analogy to
the memory network to perform the reasoning in
many steps. There are also many other works ded-
icating to solve this task (Pan and Wang, 2018; Liu
et al., 2018; Zhang and Liu, 2017).

Another related topic is semi-supervised learn-
ing for the text classification. Recently, Data
augmentation methods (Xie et al., 2019; Berth-
elot et al., 2019) achieve a greate success on low-
resource datasets. Moreover, A simple but effi-
cient method is to use pre-trained modules, e.g.,
initializing the word embedding or bottom layers
with pre-training. Word embedding technique has
been wildly used in NLP models, e.g., Glove (Pen-
nington et al., 2014) and ELMo (Peters et al.,
2018). Recently, Bidirectional Encoder Represen-
tations from Transformer (BERT) (Devlin et al.,
2018) replaces the embedding layer to context-
dependent layer with the pre-trained bidirectional
language model to capture the contextual repre-
sentation. BERT is complementary to the encoder
of the proposed method. To keep our framework
neat, these pre-training investigations are not con-
ducted in this paper.

VAE-based semi-supervised methods, on the
other hand, are able to cooperate with various
kinds of classifiers. VAE has been applied in
many semi-supervised NLP tasks, ranging from
text classification (Xu et al., 2017), relation extrac-
tion (Marcheggiani and Titov, 2016) to sequence
tagging (Chen et al., 2018). Different from text
classification where sentiment polarity is related to
an entire sentence, ATSA just interested in related
information of a given aspect-term. To circumvent
this problem, a novel structure is proposed.

3 Method Description

In this section, the problem definition is provided
and then the model framework is presented in de-
tail.

The ATSA task aims to classify a data sam-
ple with input sentence x = {x1, ..., xn} and
corresponding aspect 1 a = {a1, ..., am}, where
a is a subsequence of x, into a sentiment polar-
ity y, where y ∈ {P,O,N}. P,O,N denotes

1If an input sentence has n aspect-terms, then n data sam-
ples are generated.



963

“positive”, “neutral”, “negative”. For the semi-
supervised ATSA, we consider the following sce-
nario. Given a dataset consisting of labeled sam-
ples Sl and unlabeled samples Su, where the Sl =
{(x(i)l ,a

(i)
l , y

(i)
l )}

Nl
i=1 and Su = {(x

(i)
u ,a

(i)
u }Nli=1,

the goal is to utilize Su to improve the classifica-
tion performance over the supervised model using
Sl only.

The architecture is depicted in Fig. 1. The
method consists of three main components, i.e.,
the classifier, the encoder, and the decoder. The
classifier can be any differentiable supervised
ATSA model, which takes x and a as input, and
outputs the prediction about y. The encoder trans-
form the data into a latent space that is indepen-
dent of the label y. And the decoder combines the
outputs from the classifier and the encoder to re-
construct the input sentence. For the labeled data,
the classifier and the autoencoder are trained with
the given label y. For the unlabeled data, the y
is regarded as the latent discrete variable and it
is induced by maximizing the generative probabil-
ity. As the classifier can be implemented by var-
ious models, the description of the classifier will
be omitted. We present a autoencoder structure
based on Transformer (Vaswani et al., 2017). In
the following, the objective functions are clarified,
followed by the model description.

3.1 Variational Inference
Using generative models is a common approach
for semi-supervised learning, which tries to extract
the information from the unlabeled data by model-
ing the data distribution. In VAE, the data distribu-
tion is modeled by optimizing the evidence lower
bound (ELBO) of data log-likelihood, which leads
to two objectives for labeled data and unlabeled
data respectively. For the labeled data, VAE max-
imizes the ELBO of p(x, y|a). For the unlabeled
data, it optimizes the ELBO of p(x|a), where the
y is latent and integrated. Specifically, the depen-
dency between variables is illustrated in Fig. 2.
The ELBO of log p(x, y|a) can be given as fol-
lows:

log pθ(x, y|a) ≥ Eqφ(z|x,a,y)[log pθ(x|y,a, z)]
−DKL(qφ(z|x,a, y)||pθ(z))
+ log pθ(y)

= L(x,a, y) ,

(1)

where z is the latent variable which represents lex-
ical information over the sentence and DKL is the

KullbackLeibler divergence.
In terms of the unlabeled data, the ELBO of

log p(x|a) can be extended from Eq. 1.

log pθ(x|a) ≥
∑
y

qφ(y|x,a)(L(x,a, y))

+H(qφ(y|x,a))
= U(x,a) ,

(2)

where H is the entropy function and qφ(y|x,a) is
the classification function.

And qφ(y|x,a) can also be trained in the super-
vised manner using the labeled data. Combining
the above objectives, the overall objective for the
entire data set is:

J =
∑

(x,a,y)∈Sl

−L(x,a, y) +
∑
x∈Su

−U(x,a)

+ γ
∑

(x,a,y)∈Sl

− log qφ(y|x,a) ,
(3)

where γ is a hyper-parameter which controls the
weight of the additional classification loss.

To implement this objective, three components
are required to model the qφ(y|x,a), qφ(z|x,a, y)
and pθ(x|y,a, z) respectively.

3.2 Classifier
Various currently available models can be used as
the classifier. For the unlabeled data, the classi-
fier is used to predict the distribution of label y for
the decoder, i.e., y ∼ qφ(y|x,a). The distribution
qφ(y|x,a) will be tuned during maximizing the
objective in Eq. 2. In this work, five classifiers are
implemented in ASVAET and they are also used
as the supervised baselines for the comparison.

3.3 Transformer Encoder
The encoder plays the role of qφ(z|x,a, y). This
module attempts to extract the lexical feature that
is independent of the label y when given data sam-
ple (x,a). In this way, the z and y jointly form the
representative vector for the input data.

In our implementation, we use a bidirectional
encoder to construct sentences embeddings. It is
referred as the Transformer encoder that is ac-
tually a sub-graph of the Transformer architech-
ture (Vaswani et al., 2017), the architecture is
shown in the left part of the Fig. 2. The en-
coder employs residual connections around each
of the multi-head attention sub-layers, followed by



964

Trm

[EOS]

Trm

Trm

Trm

TrmTrm

xk-1

Trm

xk-2[BOS]

ex1

Trm

Trm

Trm

Trm Trm

…

…

…

…

T1

Trm

x1

T2 Tn

Trm

Trm

Trm

TrmTrm

…

…

ex1

px1

sx1

ex2

px2

sx2

exn

pxn

sxn

z~qΦ(z|x,a,y) 

y

z

Transformer Encoder Transformer Decoders

px1

x2 xn

Pooler g

y

z

pxk-1

y

z

pa

y

z

pa

y

z

pxk+la+1

y

z

pxn
ea exk+la+1 exneaexk-1

y~qΦ(y|x,a)

xk+la+1 xk+la+2…

Figure 1: This is the sketch of our model with bidirectional encoder and decoder. Assuming the aspect-term starts
at the k-th position in x. Bottom: When using unlabeled data, the distribution of y ∼ qφ(y|x,a) is provided
by the classifier. Left: The sequence is encoded by a Transformer block, which receives the summation of three
embeddings, i.e., segment (used to distinguish aspect words) sxn , position pxn and word exn . The encoding and
the label y are used to parameterize the posterior qφ(z|x,a, y). Right: A sample z from the posterior qφ(z|x,a, y)
and label y are passed to the generative network which estimates the probability pθ(x|y,a, z) by two unidirectional
Transformer decoders. The number of aspect tokens is la.

Figure 2: Illustration of ASVAET as a directed graph.
Left: Dashed lines are used to denote variational
approximation qφ(y|x,a)qφ(z|x,a, y). Right: Solid
lines are used to denote generative model pθ(x|y,a, z).

layer normalization. To capture the aspect-term,
we treat the aspect-term and its context differently
by segment embeddings. To further emphasize the
position of the conditional aspect, the position tag
is also included for each token. The position tag
indicates the distance from the token to the as-
pect. And then the position tag is transformed
into a vector as defined in (Vaswani et al., 2017),
which is added with the word embedding and seg-
ment embedding as the input of the Transformer
encoder. Let g denote the output of the Trans-
former encoder after pooling which simply aver-
aging the hidden states of the aspect-terms (the
number of tokens is equal or greater than one) of
the last layer, y is the indicator vector of the polar-

ity. Then the distribution of z can be given as:

z ∼ N (µ(x, y), diag(σ2(x, y))) ,
µ(x, y) = tanh(Wµ[g : y] + bµ) ,

σ(x, y) = tanh(Wσ[g : y] + bσ) .

The sequences are divided into two parts by us-
ing segment embedding, the encoder can be aware
of the position and the content of the aspect-term
a by multi-head attention operation in the Trans-
former encoder. The information from two sides
are aggregated into the aspect-term a, and there-
fore the resulting z can gather the information re-
lated to the aspect.

3.4 Transformer Decoders
The decoder is also a sub-graph of Transformer ar-
chitechture (Vaswani et al., 2017) which focus on
reconstructing original text. The main difference
from the Transformer encoder is that the Trans-
former decoder is unidirectional by modifying the
self-attention sub-layer to prevent positions from
paying attention to subsequent positions. The tex-
tual sequence is well-known to be semantically
complex and it is non-trivial for a Transformer de-
coder to capture the high-level semantics. Here
we investigate two questions. How to implement
pθ(x|y,a, z) without losing the information of a
and how to capture the semantic polarity by a se-
quential model. For the first question, denoting



965

that x is composed of three parts (xl,a,xr), we
use two Transformer decoders to model the left
and right content. For the second question, we let
each token is generated conditioned on the sum-
mation of the variables z and embedding y.

One way to achieve pθ(x|y,a, z) is to separate
the sequence into two parts, reversing the process
in the two unidirectional decoder. For each de-
coder, the input state is represented by the sum-
mation of the four input i.e., the polarity indicator
vector y from the classifier or the labeled dataset,
the context vector z from the encoder, the input
token embedding ext and the position embedding
pxt :

←−
h trmt =

←−−
ftrm(e[xt:a],pxt ,y, z), xt ∈ [xl : a]

p(xt−1|·) = softmax(Wp
←−
h trmt + bp) ,

log pθ(xl|a, y, z) =
∑
xt

log p(xt|·), xt ∈ xl ,

−→
h trmt =

−−→
ftrm(e[a:xt],pxt ,y, z), xt ∈ [a : xr]

p(xt+1|·) = softmax(Wp
−→
h trmt + bp) ,

log pθ(xr|a, y, z) =
∑
xt

log p(xt|·), xt ∈ xr .

It is equivalent to generate two sequences using
two decoders. When decoding left part (or right
part), the aspect will first get processed by the
decoder and hence the decoder is aware of the
aspect-terms. The position tag is also used in the
decoder.

4 Experiments

4.1 Datasets and Preparation
The models are evaluated on two benchmarks:
Restaurant (REST) and Laptop (LAPTOP) datasets
from the SemEval ATSA challenge (Pontiki et al.,
2014). The REST dataset contains the reviews in
the restaurant domain, while the LAPTOP dataset
contains the reviews of Laptop products. The
statistics of these two datasets are listed in Table
1. When processing these two datasets, we fol-
low the same procedures as in another work (Lam
et al., 2018). The dataset has a few samples that
are labeled as “conflict” and these samples are re-
moved. All tokens in the samples are lowercased
without other preprocess, e.g., removing the stop
words, symbols or digits.

In terms of the unlabeled data, we obtained
samples in the same domain for the REST and
LAPTOP datasets. For the REST, the unlabeled

# Positive # Negative # Neutral

REST
Train 2159 800 632
Test 730 195 196

LAPTOP
Train 980 858 454
Test 340 128 171

Table 1: The statistics of the datasets.

Avg. Length Std. Length

REST
Labeled 20.06 10.38

Unlabeled 22.70 12.38

LAPTOP
Labeled 21.95 11.80

Unlabeled 29.89 17.33

Table 2: The statistics of the reviews.

samples are obtained from a sentiment analysis
competition in Kaggle 2. The competition consists
of 82K training samples and 34K test samples. For
the LAPTOP, the unlabeled samples are obtained
from the “Six Categories of Amazon Product Re-
views” 3, which has 412K samples. The reviews
about the laptops are used among six product cat-
egories.

The NLTK sentence tokenizer is utilized to ex-
tract the sentences from the raw comments. And
each sentence is regarded as a sample in our model
for both REST and LAPTOP. To obtain the aspects
in the unlabeled samples, an open-sourced aspect
extractor 4 is pre-trained using labeled data. The
resulting test F1 score is 88.42 for the REST and
80.12 for the LAPTOP. Then the unlabeled data
is processed by the pre-trained aspect extractor to
obtain the aspects. The sentences that have no as-
pect are removed. And the sentences are filtered
with maximal sentence length 80. The statistic of
the resulting sentences is given in Table. 2.

4.2 Model Configuration & Classifiers

In the experiments, the model is fixed with a set of
universal hyper-parameters. The number of units
in the encoder and the decoder is 100 and the latent
variable is of size 50 and the number of layers of
both Transformer blocks is 2, the number of self-
attention heads is 8. The KL weight klw should be
carefully tuned to prevent the model from trapping
in a local optimum, where z carries no useful in-
formation. In this work, the KL weight is set to be
1e-4. In term of word embedding, the pre-trained
GloVe (Pennington et al., 2014) is used as the in-

2https://inclass.kaggle.com/c/restaurant-reviews
3http://times.cs.uiuc.edu/ wang296/Data/
4https://github.com/guillaumegenthial/sequence tagging



966

Classifier Models REST LAPTOPAccuracy Macro-F1 Accuracy Macro-F1
- CNN-ASP 77.82 \ - 72.46 \ -
- AE-LSTM 76.60 \ - 68.90 \ -
- ATAE-LSTM 77.20 \ - 68.70 \ -
- GCAE 77.28 (0.32) \ - 69.14 (0.32) \ -

TC-LSTM
TC-LSTM 77.97 (0.16) 67.55 (0.32) 68.42 (0.56) 62.42 (1.10)
TC-LSTM (EMB) 77.18 (0.38) 65.97 (0.44) 67.51 (0.72) 60.31 (1.28)
TC-LSTM (ST) 78.19 (0.36) 67.65 (0.43) 68.47 (0.47) 62.54 (0.74)
TC-LSTM (ASVAET) 78.34 (0.18) 68.41 (0.92) 70.04 (0.53) 64.23 (0.71)

MemNet
MemNet 78.68 (0.23) 68.18 (0.58) 70.28 (0.32) 64.38 (0.86)
MemNet (EMB) 79.47 (0.38) 69.06 (0.21) 72.17 (0.44) 65.06 (0.73)
MemNet (ST) 78.83 (0.20) 68.92 (0.20) 69.52 (0.36) 64.39 (0.67)
MemNet (ASVAET) 80.58 (0.23) 70.06 (0.53) 73.21 (0.55) 65.88 (0.45)

IAN
IAN 79.20 (0.19) 68.71 (0.59) 69.48 (0.52) 62.90 (0.99)
IAN (EMB) 79.46 (0.38) 69.45 (0.38) 70.89 (0.48) 65.27 (0.34)
IAN (ST) 79.45 (0.11) 69.36 (0.71) 73.25 (0.81) 68.25 (0.76)
IAN (ASVAET) 80.23 (0.17) 70.32 (1.00) 74.02 (0.42) 69.39 (0.75)

BILSTM-ATT-G
BILSTM-ATT-G 79.74 (0.22) 69.16 (0.53) 74.26 (0.35) 69.54 (0.53)
BILSTM-ATT-G (EMB) 80.27 (0.44) 70.33 (0.51) 73.61 (0.30) 68.25 (0.63)
BILSTM-ATT-G (ST) 80.54 (0.23) 71.88 (0.19) 74.70 (0.41) 70.31 (0.60)
BILSTM-ATT-G (ASVAET) 81.11 (0.34) 72.19 (0.27) 75.44 (0.32) 70.52 (0.33)

TNet-AS
TNet-AS 80.56 (0.23) 71.17 (0.43) 76.75 (0.35) 71.88 (0.35)
TNet-AS (EMB) 80.96 (0.49) 69.99 (0.87) 76.45 (0.40) 71.52 (0.73)
TNet-AS (ST) 80.76 (0.23) 71.32 (0.56) 76.88 (0.41) 71.74 (0.63)
TNet-AS (ASVAET) 81.77 (0.20) 72.57 (0.32) 77.57 (0.31) 72.31 (0.69)

Table 3: Experimental results (%). For each classifier, we performed five experiments, i.e., the supervised classifier,
the supervised classifier with pre-trained embedding using unlabeled data and our model with the classifier. The
results are obtained after 5 runs, and we report the mean and the standard deviation of the test accuracy, and the
Macro-averaged F1 score. Better results are in bold. \ denotes that the results are extracted from the original paper.

put of the encoder and the decoder 5 and the out-
of-vocabulary words are excluded. And it is fixed
during the training. The γ is set to be 10 across the
experiments.

We implemented and verified four kinds of
mainstream ATSA classifiers integrated into our
model, i.e., TC-LSTM (Tang et al., 2016a), Mem-
Net (Tang et al., 2016b), BILSTM-ATT-G (Zhang
and Liu, 2017), IAN (Ma et al., 2017) and
TNet (Li et al., 2018b).

• TC-LSTM: Two LSTMs are used to model
the left and right context of the target sepa-
rately, then the concatenation of two repre-
sentations is used to predict the label.

• MemNet: It uses the attention mechanism
over the word embedding over multiple
rounds to aggregate the information in the
sentence, the vector of the final round is used
for the prediction.

• IAN: IAN adopts two LSTMs to derive the
representations of the context and the target
phrase interactively and the concatenation is
fed to the softmax layer.

• BILSTM-ATT-G: It models left and right
contexts using two attention-based LSTMs

5http://nlp.stanford.edu/data/glove.8B.300d.zip

and makes use of a special gate layer to com-
bine these two representations. The resulting
vector is used for the prediction.

• TNet-AS: Without using an attention mod-
ule, TNet adopts a convolutional layer to
get salient features from the transformed
word representations originated from a bi-
directional LSTM layer. Among current su-
pervised models, TNet is currently one of the
in-domain state-of-the-art methods and the
TNet-AS is one of the two variants of TNet.

The configuration of hyper-parameters and the
training settings are the same as in the original pa-
pers. Various classifiers are tested here to demon-
strate the robustness of our method and show that
the performance can be consistently improved for
different classifiers.

4.3 Main Results

Table 3 shows the experimental results on the
REST and LAPTOP datasets. Two evaluation met-
rics are used here, i.e., classification accuracy and
Macro-averaged F1 score. The latter is more sen-
sitive when the dataset is class-imbalance. In
this table, the semi-supervised results are obtained
with 10K unlabeled data. We didn’t observe fur-
ther improvement with more unlabeled data. The
mean and the standard deviation are reported over



967

5 runs. For each classifier clf, we conducted the
following experiments:

• clf : The classifier is trained using labeled
data only.

• clf (EMB): We use CBOW (Mikolov et al.,
2013) to train the word embedding vectors
using both labeled and unlabeled data. And
the resulting vectors, instead of pre-trained
GloVe vectors, are used to initialize the em-
bedding matrix of the classifier. This is
the embedding-level semi-supervised learn-
ing as the embedding layer is trained using
in-domain data.

• clf (ST): The self-training (ST) method is
a typical semi-supervised learning method.
We performed the self-training method over
each classifier. At each epoch, we select
the 1K samples with the best confidence and
give them pseudo labels using the prediction.
Then the classifier is re-trained with the new
labeled data. The procedure loops until all
the unlabeled samples are labeled.

• clf (ASVAET): The proposed method that
uses clf as the classifier. Note again that
the classifier is an independent module in the
proposed model, and the same configuration
is used as in the supervised learning.

Besides, we also include the results of sev-
eral supervised models in the first block, i.e.,
CNN-ASP (Lam et al., 2018), AE-LSTM, ATAE-
LSTM (Wang et al., 2016), GCAE (Li and Xue,
2018), from the original paper.

From the Table 3, the ASVAET is able to im-
prove supervised performance consistently for all
classifiers. For the MemNet, the test accuracy can
be improved by about 2% by the TSSVAE, and so
as the Macro-averaged F1. The TNet-AS outper-
forms the other three models.

Compared with the other two semi-supervised
methods, the ASVAET also shows better results.
The ASVAET outperforms the compared semi-
supervised methods evidently. The adoption of in-
domain pre-trained word vectors is beneficial for
the performance compared with the Glove vectors.

4.4 Ablation Studies
4.4.1 Effect of Labeled Data
Here we investigated whether the ASVAET works
with less labeled data. Without loss of general-

Accuracy w/o sharing w/ sharing
TC-LSTM (ASVAET) 78.34 77.65
MemNet (ASVAET) 80.58 78.82

IAN (ASVAET) 80.23 79.22
BILSTM-ATT-G (ASVAET) 81.11 78.36

TNet-AS (ASVAET) 81.77 79.53

Table 4: Comparison between with or without sharing
embedding on the REST dataset.

Figure 3: The test accuracy w.r.t. the number of labeled
samples on the REST dataset with MemNet classifier.

Figure 4: The distribution of the REST dataset in latent
space z using t-SNE.

ity, the MemNet is used as the basic classifier. We
sampled different amount of labeled data to verify
the improvement by using ASVAET. The test ac-
curacy curve w.r.t. the amount of labeled data used
is shown in Fig. 3. With fewer labeled samples,
the test accuracy decreases, however, the improve-
ment becomes more evident. When using 500 la-
beled samples, the improvement is about 3.2%.
With full 3591 labeled samples, 1.5% gain can be
obtained. This illustrates that our method can im-
prove the accuracy with limited data.

4.4.2 Effect of Sharing Embeddings
In previous works, the word embedding is shared
among all the components. In other words, the
word embedding is also tuned in learning to re-
construct the data. It is questionable whether the
improvement is obtained by using VAE or multi-



968

Positive
... the best food i ’ve ever had !!! ...

... the lox is very tasty ...
... the rice is a great value ...

Negative
... the worst food i ’ve ever had !!! ...

... the lox is a bit of boring ...
... the rice is awful ...

Neutral
... had the food in the restaurant ...
... lox with a glass of chilli sauce ...

... the rice with a couple of olives salad ...

Table 5: Nice sentences that are generated by control-
ling the sentiment polarity y using the decoder.

task learning (text generation and classification).
In the aforementioned experiments, the embed-
ding layer is not shared between the classifier and
autoencoder. This implementation guarantees that
the improvement does not come from learning to
generate. To verify if sharing embedding will ben-
efit, we also conducted experiments with sharing
embedding, as illustrated in Table. 4. The results
indicate that the joint training for the embedding
layer is negative for improving the performance in
this task. The gradient from the autoencoder may
collide with the gradients from the classifier and
therefore, interferes with the optimization direc-
tion.

4.5 Analysis of the Latent Space
Transformer encodes the data into two represen-
tations, i.e., y and z. These two latent variable
represented sentiment polarity and lexical context
individually from the input text. We expect the y
and z are fully disentangled and represent differ-
ent meanings. The scatters of latent variable z (cf.
Fig. 4) helps us have a better understanding. As
shown in the figure, the distributions of three dif-
ferent polarities are very similar, which indicates
that the lexical context reprensetation z is indepen-
dent of the polarity y.

The generation ability of the decoder is also in-
vestigated. Several sentences are generated and
selected in the Table 5. By controlling the senti-
ment polarity y with the same z, the decoder can
generate sentences with different sentiment in a
similar format. This indicates that the decoder is
trained successfully to perceive the y and model
the relationship between the y and x.

5 Conclusion

A VAE-based framework has been proposed for
the ATSA task. In this work, the encoder and de-
coder are constructed from the Transformers. Both
analytical and experimental work has been carried
out to show the effectiveness of the ASVAET. The
method is verified with various kinds of classi-
fiers. For all tested classifiers, the improvement
is obtained when equipped with ASVAET, which
demonstrates its universality.

In this paper, the aspect-term is assumed to be
known and there is an error accumulation problem
when using the pre-trained aspect extractor. Ac-
cording to this, in future work, it is also interest-
ing to show if it is possible to learn the aspect and
sentiment polarity jointly for the unlabeled data. It
will be of great importance if detailed knowledge
can be extracted from the unlabeled data, which
will shed light on other related tasks.

References
David Berthelot, Nicholas Carlini, Ian Goodfellow,

Nicolas Papernot, Avital Oliver, and Colin Raf-
fel. 2019. Mixmatch: A holistic approach
to semi-supervised learning. arXiv preprint
arXiv:1905.02249.

Mingda Chen, Qingming Tang, Karen Livescu, and
Kevin Gimpel. 2018. Variational sequential labelers
for semi-supervised learning. In Proceedings of the
2018 Conference on Empirical Methods in Natural
Language Processing, pages 215–226.

Jacob Devlin, Ming-Wei Chang, Kenton Lee, and
Kristina Toutanova. 2018. Bert: Pre-training of deep
bidirectional transformers for language understand-
ing. arXiv preprint arXiv:1810.04805.

Sepp Hochreiter and Jürgen Schmidhuber. 1997.
Long short-term memory. Neural Computation,
9(8):1735–1780.

Diederik P Kingma and Max Welling. 2014. Auto-
encoding variational bayes. In The International
Conference on Learning Representations (ICLR),
Banff, Canada.

Wai Lam, Xin Li, Bei Shi, and Lidong Bing. 2018.
Transformation networks for target-oriented senti-
ment classification. pages 946–956.

Lishuang Li, Yang Liu, and AnQiao Zhou. 2018a. Hi-
erarchical attention based position-aware network
for aspect-level sentiment analysis. In Proceedings
of the 22nd Conference on Computational Natural
Language Learning, pages 181–189.

https://doi.org/10.1162/neco.1997.9.8.1735
https://aclanthology.info/papers/P18-1087/p18-1087
https://aclanthology.info/papers/P18-1087/p18-1087


969

Tao Li and Wei Xue. 2018. Aspect based sentiment
analysis with gated convolutional networks. In Pro-
ceedings of the 56th Annual Meeting of the Associa-
tion for Computational Linguistics, ACL 2018, Mel-
bourne, Australia, July 15-20, 2018, Volume 1: Long
Papers, pages 2514–2523.

Xin Li, Lidong Bing, Wai Lam, and Bei Shi.
2018b. Transformation networks for target-
oriented sentiment classification. arXiv preprint
arXiv:1805.01086.

Fei Liu, Trevor Cohn, and Timothy Baldwin. 2018. Re-
current entity networks with delayed memory update
for targeted aspect-based sentiment analysis. pages
278–283.

Dehong Ma, Sujian Li, Xiaodong Zhang, and Houfeng
Wang. 2017. Interactive attention networks for
aspect-level sentiment classification. In Proceed-
ings of the Twenty-Sixth International Joint Con-
ference on Artificial Intelligence, IJCAI 2017, Mel-
bourne, Australia, August 19-25, 2017, pages 4068–
4074.

Diego Marcheggiani and Ivan Titov. 2016. Discrete-
state variational autoencoders for joint discovery and
factorization of relations. TACL, 4:231–244.

Tomas Mikolov, Kai Chen, Greg Corrado, and Jeffrey
Dean. 2013. Efficient estimation of word represen-
tations in vector space. CoRR, abs/1301.3781.

Sinno Jialin Pan and Wenya Wang. 2018. Recursive
neural structural correspondence network for cross-
domain aspect and opinion co-extraction. pages
2171–2181.

Jeffrey Pennington, Richard Socher, and Christo-
pher D. Manning. 2014. Glove: Global vectors for
word representation. In Proceedings of the 2014
Conference on Empirical Methods in Natural Lan-
guage Processing, EMNLP 2014, October 25-29,
2014, Doha, Qatar, A meeting of SIGDAT, a Special
Interest Group of the ACL, pages 1532–1543.

Matthew E. Peters, Mark Neumann, Mohit Iyyer, Matt
Gardner, Christopher Clark, Kenton Lee, and Luke
Zettlemoyer. 2018. Deep contextualized word rep-
resentations. In Proceedings of the 2018 Confer-
ence of the North American Chapter of the Associ-
ation for Computational Linguistics: Human Lan-
guage Technologies, NAACL-HLT 2018, New Or-
leans, Louisiana, USA, June 1-6, 2018, Volume 1
(Long Papers), pages 2227–2237.

Maria Pontiki, Dimitris Galanis, John Pavlopoulos,
Harris Papageorgiou, Ion Androutsopoulos, and
Suresh Manandhar. 2014. Semeval-2014 task 4: As-
pect based sentiment analysis. In Proceedings of the
8th International Workshop on Semantic Evaluation,
SemEval@COLING 2014, Dublin, Ireland, August
23-24, 2014., pages 27–35.

Duyu Tang, Bing Qin, Xiaocheng Feng, and Ting Liu.
2016a. Effective lstms for target-dependent senti-
ment classification. In COLING 2016, 26th Inter-
national Conference on Computational Linguistics,
Proceedings of the Conference: Technical Papers,
December 11-16, 2016, Osaka, Japan, pages 3298–
3307.

Duyu Tang, Bing Qin, and Ting Liu. 2016b. Aspect
level sentiment classification with deep memory net-
work. In Proceedings of the 2016 Conference on
Empirical Methods in Natural Language Process-
ing, EMNLP 2016, Austin, Texas, USA, November
1-4, 2016, pages 214–224.

Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob
Uszkoreit, Llion Jones, Aidan N. Gomez, Lukasz
Kaiser, and Illia Polosukhin. 2017. Attention is all
you need. In Advances in Neural Information Pro-
cessing Systems 30: Annual Conference on Neural
Information Processing Systems 2017, 4-9 Decem-
ber 2017, Long Beach, CA, USA, pages 6000–6010.

Sida Wang and Christopher D Manning. 2012. Base-
lines and bigrams: Simple, good sentiment and topic
classification. In Proceedings of the 50th Annual
Meeting of the Association for Computational Lin-
guistics: Short Papers-Volume 2, pages 90–94. As-
sociation for Computational Linguistics.

Yequan Wang, Minlie Huang, Xiaoyan Zhu, and
Li Zhao. 2016. Attention-based LSTM for aspect-
level sentiment classification. In Proceedings of the
2016 Conference on Empirical Methods in Natural
Language Processing, EMNLP 2016, Austin, Texas,
USA, November 1-4, 2016, pages 606–615.

Qizhe Xie, Zihang Dai, Eduard Hovy, Minh-Thang Lu-
ong, and Quoc V Le. 2019. Unsupervised data aug-
mentation. arXiv preprint arXiv:1904.12848.

Weidi Xu, Haoze Sun, Chao Deng, and Ying Tan.
2017. Variational autoencoder for semi-supervised
text classification. In Proceedings of the Thirty-First
AAAI Conference on Artificial Intelligence, Febru-
ary 4-9, 2017, San Francisco, California, USA.,
pages 3358–3364.

Wei Xue and Tao Li. 2018. Aspect based sentiment
analysis with gated convolutional networks. arXiv
preprint arXiv:1805.07043.

Yue Zhang and Jiangming Liu. 2017. Attention mod-
eling for targeted sentiment. In Proceedings of the
15th Conference of the European Chapter of the
Association for Computational Linguistics, EACL
2017, Valencia, Spain, April 3-7, 2017, Volume 2:
Short Papers, pages 572–577.

https://aclanthology.info/papers/P18-1234/p18-1234
https://aclanthology.info/papers/P18-1234/p18-1234
https://aclanthology.info/papers/N18-2045/n18-2045
https://aclanthology.info/papers/N18-2045/n18-2045
https://aclanthology.info/papers/N18-2045/n18-2045
https://doi.org/10.24963/ijcai.2017/568
https://doi.org/10.24963/ijcai.2017/568
https://tacl2013.cs.columbia.edu/ojs/index.php/tacl/article/view/761
https://tacl2013.cs.columbia.edu/ojs/index.php/tacl/article/view/761
https://tacl2013.cs.columbia.edu/ojs/index.php/tacl/article/view/761
http://arxiv.org/abs/1301.3781
http://arxiv.org/abs/1301.3781
https://aclanthology.info/papers/P18-1202/p18-1202
https://aclanthology.info/papers/P18-1202/p18-1202
https://aclanthology.info/papers/P18-1202/p18-1202
http://aclweb.org/anthology/D/D14/D14-1162.pdf
http://aclweb.org/anthology/D/D14/D14-1162.pdf
https://aclanthology.info/papers/N18-1202/n18-1202
https://aclanthology.info/papers/N18-1202/n18-1202
http://aclweb.org/anthology/S/S14/S14-2004.pdf
http://aclweb.org/anthology/S/S14/S14-2004.pdf
http://aclweb.org/anthology/C/C16/C16-1311.pdf
http://aclweb.org/anthology/C/C16/C16-1311.pdf
http://aclweb.org/anthology/D/D16/D16-1021.pdf
http://aclweb.org/anthology/D/D16/D16-1021.pdf
http://aclweb.org/anthology/D/D16/D16-1021.pdf
http://papers.nips.cc/paper/7181-attention-is-all-you-need
http://papers.nips.cc/paper/7181-attention-is-all-you-need
http://aclweb.org/anthology/D/D16/D16-1058.pdf
http://aclweb.org/anthology/D/D16/D16-1058.pdf
http://aaai.org/ocs/index.php/AAAI/AAAI17/paper/view/14299
http://aaai.org/ocs/index.php/AAAI/AAAI17/paper/view/14299
https://aclanthology.info/papers/E17-2091/e17-2091
https://aclanthology.info/papers/E17-2091/e17-2091

