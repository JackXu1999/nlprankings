



















































Multi-News: A Large-Scale Multi-Document Summarization Dataset and Abstractive Hierarchical Model


Proceedings of the 57th Annual Meeting of the Association for Computational Linguistics, pages 1074–1084
Florence, Italy, July 28 - August 2, 2019. c©2019 Association for Computational Linguistics

1074

Multi-News: a Large-Scale Multi-Document Summarization
Dataset and Abstractive Hierarchical Model

Alexander R. Fabbri Irene Li
Tianwei She Suyi Li Dragomir R. Radev

Department of Computer Science
Yale University

{alexander.fabbri,irene.li,tianwei.she,suyi.li,dragomir.radev}@yale.edu

Abstract
Automatic generation of summaries from mul-
tiple news articles is a valuable tool as the
number of online publications grows rapidly.
Single document summarization (SDS) sys-
tems have benefited from advances in neu-
ral encoder-decoder model thanks to the avail-
ability of large datasets. However, multi-
document summarization (MDS) of news ar-
ticles has been limited to datasets of a couple
of hundred examples. In this paper, we in-
troduce Multi-News, the first large-scale MDS
news dataset. Additionally, we propose an
end-to-end model which incorporates a tradi-
tional extractive summarization model with a
standard SDS model and achieves competitive
results on MDS datasets. We benchmark sev-
eral methods on Multi-News and release our
data and code in hope that this work will pro-
mote advances in summarization in the multi-
document setting1.

1 Introduction

Summarization is a central problem in Natural
Language Processing with increasing applications
as the desire to receive content in a concise and
easily-understood format increases. Recent ad-
vances in neural methods for text summariza-
tion have largely been applied in the setting of
single-document news summarization and head-
line generation (Rush et al., 2015; See et al., 2017;
Gehrmann et al., 2018). These works take advan-
tage of large datasets such as the Gigaword Corpus
(Napoles et al., 2012), the CNN/Daily Mail (CN-
NDM) dataset (Hermann et al., 2015), the New
York Times dataset (NYT, 2008) and the News-
room corpus (Grusky et al., 2018), which con-
tain on the order of hundreds of thousands to mil-
lions of article-summary pairs. However, multi-
document summarization (MDS), which aims to

1https://github.com/Alex-Fabbri/
Multi-News

Source 1
Meng Wanzhou, Huawei’s chief financial officer and
deputy chair, was arrested in Vancouver on 1 December.
Details of the arrest have not been released...
Source 2
A Chinese foreign ministry spokesman said on Thurs-
day that Beijing had separately called on the US and
Canada to “clarify the reasons for the detention ”imme-
diately and “immediately release the detained person ”.
The spokesman...
Source 3
Canadian officials have arrested Meng Wanzhou, the chief
financial officer and deputy chair of the board for the Chi-
nese tech giant Huawei,...Meng was arrested in Vancou-
ver on Saturday and is being sought for extradition by the
United States. A bail hearing has been set for Friday...
Summary
...Canadian authorities say she was being sought for extra-
dition to the US, where the company is being investigated
for possible violation of sanctions against Iran. Canada’s
justice department said Meng was arrested in Vancouver
on Dec. 1... China’s embassy in Ottawa released a state-
ment.. “The Chinese side has lodged stern representations
with the US and Canadian side, and urged them to imme-
diately correct the wrongdoing ”and restore Meng’s free-
dom, the statement said...

Table 1: An example from our multi-document sum-
marization dataset showing the input documents and
their summary. Content found in the summary is color-
coded.

output summaries from document clusters on the
same topic, has largely been performed on datasets
with less than 100 document clusters such as
the DUC 2004 (Paul and James, 2004) and TAC
2011 (Owczarzak and Dang, 2011) datasets, and
has benefited less from advances in deep learning
methods.

Multi-document summarization of news events
offers the challenge of outputting a well-organized
summary which covers an event comprehensively
while simultaneously avoiding redundancy. The
input documents may differ in focus and point of
view for an event. We present an example of mul-
tiple input news documents and their summary in

https://github.com/Alex-Fabbri/Multi-News
https://github.com/Alex-Fabbri/Multi-News


1075

Figure 1. The three source documents discuss the
same event and contain overlaps in content: the
fact that Meng Wanzhou was arrested is stated ex-
plicitly in Source 1 and 3 and indirectly in Source
2. However, some sources contain information not
mentioned in the others which should be included
in the summary: Source 3 states that (Wanzhou)
is being sought for extradition by the US while
only Source 2 mentioned the attitude of the Chi-
nese side.

Recent work in tackling this problem with neu-
ral models has attempted to exploit the graph
structure among discourse relations in text clus-
ters (Yasunaga et al., 2017) or through an auxiliary
text classification task (Cao et al., 2017). Addi-
tionally, a couple of recent papers have attempted
to adapt neural encoder decoder models trained on
single document summarization datasets to MDS
(Lebanoff et al., 2018; Baumel et al., 2018; Zhang
et al., 2018b).

However, data sparsity has largely been the bot-
tleneck of the development of neural MDS sys-
tems. The creation of large-scale multi-document
summarization dataset for training has been re-
stricted due to the sparsity and cost of human-
written summaries. Liu et al. (2018) trains ab-
stractive sequence-to-sequence models on a large
corpus of Wikipedia text with citations and search
engine results as input documents. However, no
analogous dataset exists in the news domain. To
bridge the gap, we introduce Multi-News, the
first large-scale MDS news dataset, which con-
tains 56,216 articles-summary pairs. We also
propose a hierarchical model for neural abstrac-
tive multi-document summarization, which con-
sists of a pointer-generator network (See et al.,
2017) and an additional Maximal Marginal Rel-
evance (MMR) (Carbonell and Goldstein, 1998)
module that calculates sentence ranking scores
based on relevancy and redundancy. We inte-
grate sentence-level MMR scores into the pointer-
generator model to adapt the attention weights on
a word-level. Our model performs competitively
on both our Multi-News dataset and the DUC 2004
dataset on ROUGE scores. We additionally per-
form human evaluation on several system outputs.

Our contributions are as follows: We introduce
the first large-scale multi-document summariza-
tion datasets in the news domain. We propose
an end-to-end method to incorporate MMR into
pointer-generator networks. Finally, we bench-

mark various methods on our dataset to lay the
foundations for future work on large-scale MDS.

2 Related Work

Traditional non-neural approaches to multi-
document summarization have been both extrac-
tive (Carbonell and Goldstein, 1998; Radev et al.,
2000; Erkan and Radev, 2004; Mihalcea and Ta-
rau, 2004; Haghighi and Vanderwende, 2009) as
well as abstractive (McKeown and Radev, 1995;
Radev and McKeown, 1998; Barzilay et al., 1999;
Ganesan et al., 2010). Recently, neural meth-
ods have shown great promise in text summariza-
tion, although largely in the single-document set-
ting, with both extractive (Nallapati et al., 2016a;
Cheng and Lapata, 2016; Narayan et al., 2018b)
and abstractive methods (Chopra et al., 2016; Nal-
lapati et al., 2016b; See et al., 2017; Paulus et al.,
2017; Cohan et al., 2018; Çelikyilmaz et al., 2018;
Gehrmann et al., 2018)

In addition to the multi-document methods de-
scribed above which address data sparsity, re-
cent work has attempted unsupervised and weakly
supervised methods in non-news domains (Chu
and Liu, 2018; Angelidis and Lapata, 2018).
The methods most related to this work are SDS
adapted for MDS data. Zhang et al. (2018a)
adopts a hierarchical encoding framework trained
on SDS data to MDS data by adding an addi-
tional document-level encoding. Baumel et al.
(2018) incorporates query relevance into standard
sequence-to-sequence models. Lebanoff et al.
(2018) adapts encoder-decoder models trained on
single-document datasets to the MDS case by in-
troducing an external MMR module which does
not require training on the MDS dataset. In our
work, we incorporate the MMR module directly
into our model, learning weights for the similar-
ity functions simultaneously with the rest of the
model.

3 Multi-News Dataset

Our dataset, which we call Multi-News, consists
of news articles and human-written summaries of
these articles from the site newser.com. Each sum-
mary is professionally written by editors and in-
cludes links to the original articles cited. We will
release stable Wayback-archived links, and scripts
to reproduce the dataset from these links. Our
dataset is notably the first large-scale dataset for
MDS on news articles. Our dataset also comes



1076

# of source Frequency # of source Frequency
2 23,894 7 382
3 12,707 8 209
4 5,022 9 89
5 1,873 10 33
6 763

Table 2: The number of source articles per example, by
frequency, in our dataset.

from a diverse set of news sources; over 1,500 sites
appear as source documents 5 times or greater, as
opposed to previous news datasets (DUC comes
from 2 sources, CNNDM comes from CNN and
Daily Mail respectively, and even the Newsroom
dataset (Grusky et al., 2018) covers only 38 news
sources). A total of 20 editors contribute to 85% of
the total summaries on newser.com. Thus we be-
lieve that this dataset allows for the summarization
of diverse source documents and summaries.

3.1 Statistics and Analysis

The number of collected Wayback links for sum-
maries and their corresponding cited articles totals
over 250,000. We only include examples with be-
tween 2 and 10 source documents per summary,
as our goal is MDS, and the number of examples
with more than 10 sources was minimal. The num-
ber of source articles per summary present, after
downloading and processing the text to obtain the
original article text, varies across the dataset, as
shown in Table 2. We believe this setting reflects
real-world situations; often for a new or special-
ized event there may be only a few news articles.
Nonetheless, we would like to summarize these
events in addition to others with greater news cov-
erage.

We split our dataset into training (80%, 44,972),
validation (10%, 5,622), and test (10%, 5,622)
sets. Table 3 compares Multi-News to other news
datasets used in experiments below. We choose to
compare Multi-News with DUC data from 2003
and 2004 and TAC 2011 data, which are typically
used in multi-document settings. Additionally, we
compare to the single-document CNNDM dataset,
as this has been recently used in work which
adapts SDS to MDS (Lebanoff et al., 2018). The
number of examples in our Multi-News dataset
is two orders of magnitude larger than previous
MDS news data. The total number of words in
the concatenated inputs is shorter than other MDS
datasets, as those consist of 10 input documents,
but larger than SDS datasets, as expected. Our

summaries are notably longer than in other works,
about 260 words on average. While compress-
ing information into a shorter text is the goal of
summarization, our dataset tests the ability of ab-
stractive models to generate fluent text concise in
meaning while also coherent in the entirety of its
generally longer output, which we consider an in-
teresting challenge.

3.2 Diversity
We report the percentage of n-grams in the gold
summaries which do not appear in the input docu-
ments as a measure of how abstractive our sum-
maries are in Table 4. As the table shows, the
smaller MDS datasets tend to be more abstrac-
tive, but Multi-News is comparable and similar
to the abstractiveness of SDS datasets. Grusky
et al. (2018) additionally define three measures of
the extractive nature of a dataset, which we use
here for a comparison. We extend these notions to
the multi-document setting by concatenating the
source documents and treating them as a single
input. Extractive fragment coverage is the per-
centage of words in the summary that are from
the source article, measuring the extent to which
a summary is derivative of a text:

COVERAGE(A,S) =
1

|S|
∑

f∈F (A,S)

|f | (1)

where A is the article, S the summary, and
F (A,S) the set of all token sequences identified
as extractive in a greedy manner; if there is a se-
quence of source tokens that is a prefix of the re-
mainder of the summary, that is marked as extrac-
tive. Similarly, density is defined as the average
length of the extractive fragment to which each
summary word belongs:

DENSITY(A,S) =
1

|S|
∑

f∈F (A,S)

|f |2 (2)

Finally, compression ratio is defined as the word
ratio between the articles and its summaries:

COMPRESSION(A,S) =
|A|
|S|

(3)

These numbers are plotted using kernel density
estimation in Figure 1. As explained above, our
summaries are larger on average, which corre-
sponds to a lower compression rate. The variabil-
ity along the x-axis (fragment coverage), suggests



1077

Dataset # pairs # words(doc)
# sents
(docs)

# words
(summary)

# sents
(summary) vocab size

Multi-News 44,972/5,622/5,622 2,103.49 82.73 263.66 9.97 666,515
DUC03+04 320 4,636.24 173.15 109.58 2.88 19,734
TAC 2011 176 4,695.70 188.43 99.70 1.00 24,672
CNNDM 287,227/13,368/11,490 810.57 39.78 56.20 3.68 717,951

Table 3: Comparison of our Multi-News dataset to other MDS datasets as well as an SDS dataset used as training
data for MDS (CNNDM). Training, validation and testing size splits (article(s) to summary) are provided when
applicable. Statistics for multi-document inputs are calculated on the concatenation of all input sources.

% novel
n-grams Multi-News DUC03+04 TAC11 CNNDM

uni-grams 17.76 27.74 16.65 19.50
bi-grams 57.10 72.87 61.18 56.88
tri-grams 75.71 90.61 83.34 74.41
4-grams 82.30 96.18 92.04 82.83

Table 4: Percentage of n-grams in summaries which do
not appear in the input documents , a measure of the
abstractiveness, in relevant datasets.

1

3

5

7 DUC 03+04
n = 320
c = 39.88

TAC 2011
n = 176
c = 45.00

0.5 0.7 0.9

1

3

5

7 CNN / Daily Mail
n = 287,227
c = 12.92

0.5 0.7 0.9

Multi-News
n = 44,972
c = 6.34

Extractive fragment coverage

Ex
tra

ct
iv

e 
fra

gm
en

t d
en

si
ty

Figure 1: Density estimation of extractive diversity
scores as explained in Section 3.2. Large variability
along the y-axis suggests variation in the average length
of source sequences present in the summary, while the
x axis shows variability in the average length of the ex-
tractive fragments to which summary words belong.

variability in the percentage of copied words, with
the DUC data varying the most. In terms of y-axis
(fragment density), our dataset shows variability
in the average length of copied sequence, suggest-
ing varying styles of word sequence arrangement.
Our dataset exhibits extractive characteristics sim-
ilar to the CNNDM dataset.

3.3 Other Datasets
As discussed above, large scale datasets for multi-
document news summarization are lacking. There
have been several attempts to create MDS datasets
in other domains. Zopf (2018) introduce a multi-
lingual MDS dataset based on English and Ger-
man Wikipedia articles as summaries to create a

set of about 7,000 examples. Liu et al. (2018) use
Wikipedia as well, creating a dataset of over two
million examples. That paper uses Wikipedia ref-
erences as input documents but largely relies on
Google search to increase topic coverage. We,
however, are focused on the news domain, and
the source articles in our dataset are specifically
cited by the corresponding summaries. Related
work has also focused on opinion summarization
in the multi-document setting; Angelidis and La-
pata (2018) introduces a dataset of 600 Amazon
product reviews.

4 Preliminaries

We introduce several common methods for sum-
marization.

4.1 Pointer-generator Network

The pointer-generator network (See et al., 2017)
is a commonly-used encoder-decoder summariza-
tion model with attention (Bahdanau et al., 2014)
which combines copying words from source doc-
uments and outputting words from a vocabulary.
The encoder converts each token wi in the docu-
ment into the hidden state hi. At each decoding
step t, the decoder has a hidden state dt. An atten-
tion distribution at is calculated as in (Bahdanau
et al., 2014) and is used to get the context vec-
tor h∗t , which is a weighted sum of the encoder
hidden states, representing the semantic meaning
of the related document content for this decoding
time step:

eti = v
T tanh(Whhi +Wsdt + battn)

at = softmax(et)

h∗t =
∑
i

atih
t
i

(4)

The context vector h∗t and the decoder hidden state
dt are then passed to two linear layers to produce
the vocabulary distribution Pvocab. For each word,
there is also a copy probability Pcopy. It is the sum



1078

of the attention weights over all the word occur-
rences:

Pvocab = softmax(V
′
(V [dt, h

∗
t ] + b) + b

′
)

Pcopy =
∑

i:wi=w

ati
(5)

The pointer-generator network has a soft switch
pgen, which indicates whether to generate a word
from vocabulary by sampling from Pvocab, or to
copy a word from the source sequence by sam-
pling from the copy probability Pcopy.

pgen = σ(w
T
h∗h
∗
t + w

T
d dt + w

T
x xt + bptr) (6)

where xt is the decoder input. The final probabil-
ity distribution is a weighted sum of the vocabu-
lary distribution and copy probability:

P (w) = pgenPvocab(w) + (1− pgen)Pcopy(w)
(7)

4.2 Transformer
The Transformer model replaces recurrent layers
with self-attention in an encoder-decoder frame-
work and has achieved state-of-the-art results in
machine translation (Vaswani et al., 2017) and
language modeling (Baevski and Auli, 2019; Dai
et al., 2019). The Transformer has also been suc-
cessfully applied to SDS (Gehrmann et al., 2018).
More specifically, for each word during encoding,
the multi-head self-attention sub-layer allows the
encoder to directly attend to all other words in a
sentence in one step. Decoding contains the typi-
cal encoder-decoder attention mechanisms as well
as self-attention to all previous generated output.
The Transformer motivates the elimination of re-
currence to allow more direct interaction among
words in a sequence.

4.3 MMR
Maximal Marginal Relevance (MMR) is an
approach for combining query-relevance with
information-novelty in the context of summariza-
tion (Carbonell and Goldstein, 1998). MMR pro-
duces a ranked list of the candidate sentences
based on the relevance and redundancy to the
query, which can be used to extract sentences. The
score is calculated as follows:

(8)
MMR = argmax

Di∈R\S

[
λSim1(Di, Q)

− (1− λ) max
Dj∈S

Sim2(Di, Dj)
]

Figure 2: Our Hierarchical MMR-Attention Pointer-
generator (Hi-MAP) model incorporates sentence-level
representations and hidden-state-based MMR on top of
a standard pointer-generator network.

where R is the collection of all candidate sen-
tences, Q is the query, S is the set of sentences
that have been selected, and R \ S is set of the
un-selected ones. In general, each time we want
to select a sentence, we have a ranking score for
all the candidates that considers relevance and re-
dundancy. A recent work (Lebanoff et al., 2018)
applied MMR for multi-document summarization
by creating an external module and a supervised
regression model for sentence importance. Our
proposed method, however, incorporates MMR
with the pointer-generator network in an end-to-
end manner that learns parameters for similarity
and redundancy.

5 Hi-MAP Model

In this section, we provide the details of our Hi-
erarchical MMR-Attention Pointer-generator (Hi-
MAP) model for multi-document neural abstrac-
tive summarization. We expand the existing
pointer-generator network model into a hierar-
chical network, which allows us to calculate
sentence-level MMR scores. Our model consists
of a pointer-generator network and an integrated
MMR module, as shown in Figure 2.

5.1 Sentence representations

To expand our model into a hierarchical one, we
compute sentence representations on both the en-
coder and decoder. The input is a collection
of sentences D = [s1, s2, .., sn] from all the
source documents, where a given sentence si =
[wk−m, wk−m+1, ..., wk] is made up of input word
tokens. Word tokens from the whole document are
treated as a single sequential input to a Bi-LSTM
encoder as in the original encoder of the pointer-



1079

generator network from See et al. (2017) (see bot-
tom of Figure 2). For each time step, the output
of an input word token wl is hwl (we use super-
script w to indicate word-level LSTM cells, s for
sentence-level).

To obtain a representation for each sentence si,
we take the encoder output of the last token for
that sentence. If that token has an index of k in
the whole document D, then the sentence repre-
sentation is marked as hwsi = h

w
k . The word-

level sentence embeddings of the document hwD =
[hws1 , h

w
s2 , ..h

w
sn ] will be a sequence which is fed

into a sentence-level LSTM network. Thus, for
each input sentence hwsi , we obtain an output hid-
den state hssi . We then get the final sentence-level
embeddings hsD = [h

s
1, h

s
2, ..h

s
n] (we omit the sub-

script for sentences s). To obtain a summary rep-
resentation, we simply treat the current decoded
summary as a single sentence and take the output
of the last step of the decoder: ssum. We plan to
investigate alternative methods for input and out-
put sentence embeddings, such as separate LSTMs
for each sentence, in future work.

5.2 MMR-Attention
Now, we have all the sentence-level representation
from both the articles and summary, and then we
apply MMR to compute a ranking on the candidate
sentences hsD. Intuitively, incorporating MMR
will help determine salient sentences from the in-
put at the current decoding step based on relevancy
and redundancy.

We follow Section 4.3 to compute MMR scores.
Here, however, our query document is represented
by the summary vector ssum, and we want to rank
the candidates in hsD. The MMR score for an input
sentence i is then defined as:

(9)
MMRi = λSim1(hsi , ssum)

− (1− λ) max
sj∈D,j 6=i

Sim2(hsi , h
s
j)

We then add a softmax function to normalize all
the MMR scores of these candidates as a probabil-
ity distribution.

(10)MMRi =
exp(MMRi)∑
i exp(MMRi)

Now we define the similarity function between
each candidate sentence hsi and summary sentence
ssum to be:

Sim1 = hsi
TWSimssum (11)

where WSim is a learned parameter used to trans-
form ssum and hsi into a common feature space.

For the second term of Equation 9, instead of
choosing the maximum score from all candidates
except for hsi , which is intended to find the can-
didate most similar to hsi , we choose to apply a
self-attention model on hsi and all the other candi-
dates hsj ∈ hsD. We then choose the largest weight
as the final score:

vij = tanh
(
hsj

TWselfh
s
i

)
βij =

exp (vij)∑
j exp (vij)

scorei = max
j

(βi,j)

(12)

Note that Wself is also a trainable parameter.
Eventually, the MMR score from Equation 9 be-
comes:

(13)MMRi = λSim1(hsi , ssum)− (1− λ)scorei

5.3 MMR-attention Pointer-generator

After we calculate MMRi for each sentence rep-
resentation hsi , we use these scores to update
the word-level attention weights for the pointer-
generator model shown by the blue arrows in Fig-
ure 2. Since MMRi is a sentence weight for hsi ,
each token in the sentence will have the same
value of MMRi. The new attention for each input
token from Equation 4 becomes:

at = atMMRi (14)

6 Experiments

In this section we describe additional methods we
compare with and present our assumptions and ex-
perimental process.

6.1 Baseline and Extractive Methods

First We concatenate the first sentence of each ar-
ticle in a document cluster as the system summary.
For our dataset, First-k means the first k sentences
from each source article will be concatenated as
the summary. Due to the difference in gold sum-
mary length, we only use First-1 for DUC, as oth-
ers would exceed the average summary length.
LexRank Initially proposed by (Erkan and Radev,
2004), LexRank is a graph-based method for com-
puting relative importance in extractive summa-
rization.



1080

TextRank Introduced by (Mihalcea and Tarau,
2004), TextRank is a graph-based ranking model.
Sentence importance scores are computed based
on eigenvector centrality within a global graph
from the corpus.
MMR In addition to incorporating MMR in our
pointer generator network, we use this original
method as an extractive summarization baseline.
When testing on DUC data, we set these extrac-
tive methods to give an output of 100 tokens and
300 tokens for Multi-News data.

6.2 Neural Abstractive Methods
PG-Original, PG-MMR These are the origi-
nal pointer-generator network models reported by
(Lebanoff et al., 2018).
PG-BRNN The PG-BRNN model is a pointer-
generator implementation from OpenNMT2. As in
the original paper (See et al., 2017), we use a 1-
layer bi-LSTM as encoder, with 128-dimensional
word-embeddings and 256-dimensional hidden
states for each direction. The decoder is a 512-
dimensional single-layer LSTM. We include this
for reference in addition to PG-Original, as our Hi-
MAP code builds upon this implementation.
CopyTransformer Instead of using an LSTM, the
CopyTransformer model used in Gehrmann et al.
(2018) uses a 4-layer Transformer of 512 dimen-
sions for encoder and decoder. One of the atten-
tion heads is chosen randomly as the copy distribu-
tion. This model and the PG-BRNN are run with-
out the bottom-up masked attention for inference
from Gehrmann et al. (2018) as we did not find
a large improvement when reproducing the model
on this data.

6.3 Experimental Setting
Following the setting from (Lebanoff et al., 2018),
we report ROUGE (Lin, 2004) scores, which mea-
sure the overlap of unigrams (R-1), bigrams (R-
2) and skip bigrams with a max distance of four
words (R-SU). For the neural abstractive models,
we truncate input articles to 500 tokens in the fol-
lowing way: for each example with S source in-
put documents, we take the first 500/S tokens
from each source document. As some source doc-
uments may be shorter, we iteratively determine
the number of tokens to take from each docu-
ment until the 500 token quota is reached. Hav-

2https://github.com/OpenNMT/
OpenNMT-py/blob/master/docs/source/
Summarization.md

ing determined the number of tokens per source
document to use, we concatenate the truncated
source documents into a single mega-document.
This effectively reduces MDS to SDS on longer
documents, a commonly-used assumption for re-
cent neural MDS papers (Cao et al., 2017; Liu
et al., 2018; Lebanoff et al., 2018). We chose 500
as our truncation size as related MDS work did
not find significant improvement when increas-
ing input length from 500 to 1000 tokens (Liu
et al., 2018). We simply introduce a special to-
ken between source documents to aid our models
in detecting document-to-document relationships
and leave direct modeling of this relationship, as
well as modeling longer input sequences, to fu-
ture work. We hope that the dataset we introduce
will promote such work. For our Hi-MAP model,
we applied a 1-layer bidirectional LSTM network,
with the hidden state dimension 256 in each di-
rection. The sentence representation dimension is
also 256. We set the λ = 0.5 to calculate the MMR
value in Equation 9.

Method R-1 R-2 R-SU
First 30.77 8.27 7.35
LexRank (Erkan and Radev, 2004) 35.56 7.87 11.86
TextRank (Mihalcea and Tarau, 2004) 33.16 6.13 10.16
MMR (Carbonell and Goldstein, 1998) 30.14 4.55 8.16
PG-Original(Lebanoff et al., 2018) 31.43 6.03 10.01
PG-MMR(Lebanoff et al., 2018) 36.42 9.36 13.23
PG-BRNN (Gehrmann et al., 2018) 29.47 6.77 7.56
CopyTransformer (Gehrmann et al., 2018) 28.54 6.38 7.22
Hi-MAP (Our Model) 35.78 8.90 11.43

Table 5: ROUGE scores on the DUC 2004 dataset for
models trained on CNNDM data, as in Lebanoff et al.
(2018).3

Method R-1 R-2 R-SU
First-1 26.83 7.25 6.46
First-2 35.99 10.17 12.06
First-3 39.41 11.77 14.51
LexRank (Erkan and Radev, 2004) 38.27 12.70 13.20
TextRank (Mihalcea and Tarau, 2004) 38.44 13.10 13.50
MMR (Carbonell and Goldstein, 1998) 38.77 11.98 12.91
PG-Original (Lebanoff et al., 2018) 41.85 12.91 16.46
PG-MMR (Lebanoff et al., 2018) 40.55 12.36 15.87
PG-BRNN (Gehrmann et al., 2018) 42.80 14.19 16.75
CopyTransformer (Gehrmann et al., 2018) 43.57 14.03 17.37
Hi-MAP (Our Model) 43.47 14.89 17.41

Table 6: ROUGE scores for models trained and tested
on the Multi-News dataset.

3As our focus was on deep methods for MDS, we only
tested several non-neural baselines. However, other classical
methods deserve more attention, for which we refer the reader
to Hong et al. (2014) and leave the implementation of these
methods on Multi-News for future work.

https://github.com/OpenNMT/OpenNMT-py/blob/master/docs/source/Summarization.md
https://github.com/OpenNMT/OpenNMT-py/blob/master/docs/source/Summarization.md
https://github.com/OpenNMT/OpenNMT-py/blob/master/docs/source/Summarization.md


1081

Method Informativeness Fluency Non-Redundancy
PG-MMR 95 70 45
Hi-MAP 85 75 100

CopyTransformer 99 100 107
Human 150 150 149

Table 7: Number of times a system was chosen as best
in pairwise comparisons according to informativeness,
fluency and non-redundancy.

7 Analysis and Discussion

In Table 5 and Table 6 we report ROUGE scores
on DUC 2004 and Multi-News datasets respec-
tively. We use DUC 2004, as results on this dataset
are reported in Lebanoff et al. (2018), although
this dataset is not the focus of this work. For re-
sults on DUC 2004, models were trained on the
CNNDM dataset, as in Lebanoff et al. (2018). PG-
BRNN and CopyTransformer models, which were
pretrained by OpenNMT on CNNDM, were ap-
plied to DUC without additional training, analo-
gous to PG-Original. We also experimented with
training on Multi-News and testing on DUC data,
but we did not see significant improvements. We
attribute the generally low performance of pointer-
generator, CopyTransformer and Hi-MAP to do-
main differences between DUC and CNNDM as
well as DUC and Multi-News. These domain dif-
ferences are evident in the statistics and extractive
metrics discussed in Section 3.

Additionally, for both DUC and Multi-News
testing, we experimented with using the output
of 500 tokens from extractive methods (LexRank,
TextRank and MMR) as input to the abstractive
model. However, this did not improve results. We
believe this is because our truncated input mirrors
the First-3 baseline, which outperforms these three
extractive methods and thus may provide more in-
formation as input to the abstractive model.

Our model outperforms PG-MMR when trained
and tested on the Multi-News dataset. We see
much-improved model performances when trained
and tested on in-domain Multi-News data. The
Transformer performs best in terms of R-1 while
Hi-MAP outperforms it on R-2 and R-SU. Also,
we notice a drop in performance between PG-
original, and PG-MMR (which takes the pre-
trained PG-original and applies MMR on top of
the model). Our PG-MMR results correspond to
PG-MMR w Cosine reported in Lebanoff et al.
(2018). We trained their sentence regression
model on Multi-News data and leave the investi-
gation of transferring regression models from SDS
to Multi-News for future work.

In addition to automatic evaluation, we per-
formed human evaluation to compare the sum-
maries produced. We used Best-Worst Scaling
(Louviere and Woodworth, 1991; Louviere et al.,
2015), which has shown to be more reliable than
rating scales (Kiritchenko and Mohammad, 2017)
and has been used to evaluate summaries (Narayan
et al., 2018a; Angelidis and Lapata, 2018). An-
notators were presented with the same input that
the systems saw at testing time; input documents
were truncated, and we separated input documents
by visible spaces in our annotator interface. We
chose three native English speakers as annotators.
They were presented with input documents, and
summaries generated by two out of four systems,
and were asked to determine which summary was
better and which was worse in terms of informa-
tiveness (is the meaning in the input text preserved
in the summary?), fluency (is the summary writ-
ten in well-formed and grammatical English?) and
non-redundancy (does the summary avoid repeat-
ing information?). We randomly selected 50 doc-
uments from the Multi-News test set and com-
pared all possible combinations of two out of four
systems. We chose to compare PG-MMR, Copy-
Transformer, Hi-MAP and gold summaries. The
order of summaries was randomized per example.

The results of our pairwise human-annotated
comparison are shown in Table 7. Human-written
summaries were easily marked as better than other
systems, which, while expected, shows that there
is much room for improvement in producing read-
able, informative summaries. We performed pair-
wise comparison of the models over the three met-
rics combined, using a one-way ANOVA with
Tukey HSD tests and p value of 0.05. Overall,
statistically significant differences were found be-
tween human summaries score and all other sys-
tems, CopyTransformer and the other two models,
and our Hi-MAP model compared to PG-MMR.
Our Hi-MAP model performs comparably to PG-
MMR on informativeness and fluency but much
better in terms of non-redundancy. We believe that
the incorporation of learned parameters for simi-
larity and redundancy reduces redundancy in our
output summaries. In future work, we would like
to incorporate MMR into Transformer models to
benefit from their fluent summaries.

8 Conclusion
In this paper we introduce Multi-News, the first
large-scale multi-document news summarization



1082

dataset. We hope that this dataset will promote
work in multi-document summarization similar to
the progress seen in the single-document case.
Additionally, we introduce an end-to-end model
which incorporates MMR into a pointer-generator
network, which performs competitively compared
to previous multi-document summarization mod-
els. We also benchmark methods on our dataset.
In the future we plan to explore interactions among
documents beyond concatenation and experiment
with summarizing longer input documents.

References
2008. The New York Times Annotated Corpus.

Stefanos Angelidis and Mirella Lapata. 2018. Sum-
marizing Opinions: Aspect Extraction Meets Senti-
ment Prediction and They Are Both Weakly Super-
vised. In Proceedings of the 2018 Conference on
Empirical Methods in Natural Language Process-
ing, Brussels, Belgium, October 31 - November 4,
2018, pages 3675–3686.

Alexei Baevski and Michael Auli. 2019. Adaptive in-
put representations for neural language modeling. In
International Conference on Learning Representa-
tions.

Dzmitry Bahdanau, Kyunghyun Cho, and Yoshua Ben-
gio. 2014. Neural Machine Translation by Jointly
Learning to Align and Translate. arXiv preprint
arXiv:1409.0473.

Regina Barzilay, Kathleen R. McKeown, and Michael
Elhadad. 1999. Information Fusion in the Context
of Multi-Document Summarization. In 27th An-
nual Meeting of the Association for Computational
Linguistics, University of Maryland, College Park,
Maryland, USA, 20-26 June 1999.

Tal Baumel, Matan Eyal, and Michael Elhadad. 2018.
Query Focused Abstractive Summarization: Incor-
porating Query Relevance, Multi-Document Cover-
age, and Summary Length Constraints into seq2seq
Models. CoRR, abs/1801.07704.

Ziqiang Cao, Wenjie Li, Sujian Li, and Furu Wei.
2017. Improving Multi-Document Summarization
via Text Classification. In Proceedings of the
Thirty-First AAAI Conference on Artificial Intelli-
gence, February 4-9, 2017, San Francisco, Califor-
nia, USA., pages 3053–3059.

Jaime Carbonell and Jade Goldstein. 1998. The Use
of MMR, Diversity-Based Reranking for Reorder-
ing Documents and Producing Summaries. In Pro-
ceedings of the 21st annual international ACM SI-
GIR conference on Research and development in in-
formation retrieval, pages 335–336. ACM.

Asli Çelikyilmaz, Antoine Bosselut, Xiaodong He, and
Yejin Choi. 2018. Deep Communicating Agents
for Abstractive Summarization. In Proceedings of
the 2018 Conference of the North American Chap-
ter of the Association for Computational Linguistics:
Human Language Technologies, NAACL-HLT 2018,
New Orleans, Louisiana, USA, June 1-6, 2018, Vol-
ume 1 (Long Papers), pages 1662–1675.

Jianpeng Cheng and Mirella Lapata. 2016. Neural
Summarization by Extracting Sentences and Words.
In Proceedings of the 54th Annual Meeting of the As-
sociation for Computational Linguistics, ACL 2016,
August 7-12, 2016, Berlin, Germany, Volume 1:
Long Papers.

Sumit Chopra, Michael Auli, and Alexander M. Rush.
2016. Abstractive Sentence Summarization with At-
tentive Recurrent Neural Networks. In NAACL HLT
2016, The 2016 Conference of the North American
Chapter of the Association for Computational Lin-
guistics: Human Language Technologies, San Diego
California, USA, June 12-17, 2016, pages 93–98.

Eric Chu and Peter J. Liu. 2018. Unsupervised
Neural Multi-Document Abstractive Summariza-
tion. CoRR, abs/1810.05739.

Arman Cohan, Franck Dernoncourt, Doo Soon Kim,
Trung Bui, Seokhwan Kim, Walter Chang, and Na-
zli Goharian. 2018. A Discourse-Aware Attention
Model for Abstractive Summarization of Long Doc-
uments. In Proceedings of the 2018 Conference of
the North American Chapter of the Association for
Computational Linguistics: Human Language Tech-
nologies, NAACL-HLT, New Orleans, Louisiana,
USA, June 1-6, 2018, Volume 2 (Short Papers),
pages 615–621.

Zihang Dai, Zhilin Yang, Yiming Yang, William W.
Cohen, Jaime Carbonell, Quoc V. Le, and Ruslan
Salakhutdinov. 2019. Transformer-XL: Language
modeling with longer-term dependency.

Günes Erkan and Dragomir R Radev. 2004. Lexrank:
Graph-Based Lexical Centrality as Salience in Text
Summarization. Journal of artificial intelligence re-
search, 22:457–479.

Kavita Ganesan, ChengXiang Zhai, and Jiawei Han.
2010. Opinosis: A Graph Based Approach to Ab-
stractive Summarization of Highly Redundant Opin-
ions. In COLING 2010, 23rd International Confer-
ence on Computational Linguistics, Proceedings of
the Conference, 23-27 August 2010, Beijing, China,
pages 340–348.

Sebastian Gehrmann, Yuntian Deng, and Alexander M.
Rush. 2018. Bottom-Up Abstractive Summariza-
tion. In Proceedings of the 2018 Conference on
Empirical Methods in Natural Language Process-
ing, Brussels, Belgium, October 31 - November 4,
2018, pages 4098–4109.

https://catalog.ldc.upenn.edu/LDC2008T19


1083

Max Grusky, Mor Naaman, and Yoav Artzi. 2018.
Newsroom: A Dataset of 1.3 Million Sum-
maries with Diverse Extractive Strategies. CoRR,
abs/1804.11283.

Aria Haghighi and Lucy Vanderwende. 2009. Explor-
ing Content Models for Multi-Document Summa-
rization. In Human Language Technologies: Con-
ference of the North American Chapter of the Asso-
ciation of Computational Linguistics, Proceedings,
May 31 - June 5, 2009, Boulder, Colorado, USA,
pages 362–370.

Karl Moritz Hermann, Tomás Kociský, Edward
Grefenstette, Lasse Espeholt, Will Kay, Mustafa Su-
leyman, and Phil Blunsom. 2015. Teaching Ma-
chines to Read and Comprehend. In Advances in
Neural Information Processing Systems 28: Annual
Conference on Neural Information Processing Sys-
tems 2015, December 7-12, 2015, Montreal, Que-
bec, Canada, pages 1693–1701.

Kai Hong, John M. Conroy, Benoı̂t Favre, Alex
Kulesza, Hui Lin, and Ani Nenkova. 2014. A repos-
itory of state of the art and competitive baseline sum-
maries for generic news summarization. In Proceed-
ings of the Ninth International Conference on Lan-
guage Resources and Evaluation, LREC 2014, Reyk-
javik, Iceland, May 26-31, 2014., pages 1608–1616.

Svetlana Kiritchenko and Saif Mohammad. 2017.
Best-Worst Scaling More Reliable than Rating
Scales: A Case Study on Sentiment Intensity Anno-
tation. In Proceedings of the 55th Annual Meeting of
the Association for Computational Linguistics, ACL
2017, Vancouver, Canada, July 30 - August 4, Vol-
ume 2: Short Papers, pages 465–470.

Logan Lebanoff, Kaiqiang Song, and Fei Liu. 2018.
Adapting the Neural Encoder-Decoder Framework
from Single to Multi-Document summarization. In
Proceedings of the 2018 Conference on Empirical
Methods in Natural Language Processing, Brussels,
Belgium, October 31 - November 4, 2018, pages
4131–4141.

Chin-Yew Lin. 2004. Rouge: A Package for Auto-
matic Evaluation of Summaries. Text Summariza-
tion Branches Out.

Peter J. Liu, Mohammad Saleh, Etienne Pot, Ben
Goodrich, Ryan Sepassi, Lukasz Kaiser, and Noam
Shazeer. 2018. Generating Wikipedia by Summa-
rizing Long Sequences. CoRR, abs/1801.10198.

Jordan Louviere, Terry Flynn, and A. A. J. Marley.
2015. Best-Worst Scaling: Theory, Methods and
Applications.

Jordan J Louviere and George G Woodworth. 1991.
Best-Worst Scaling: A Model for the Largest Dif-
ference Judgments.

Kathleen R. McKeown and Dragomir R. Radev. 1995.
Generating summaries of multiple news articles. In

Proceedings, ACM Conference on Research and De-
velopment in Information Retrieval SIGIR’95, pages
74–82, Seattle, Washington.

Rada Mihalcea and Paul Tarau. 2004. Textrank: Bring-
ing Order into Text. In Proceedings of the 2004 con-
ference on empirical methods in natural language
processing.

Ramesh Nallapati, Bowen Zhou, and Mingbo Ma.
2016a. Classify or Select: Neural Architectures
for Extractive Document Summarization. CoRR,
abs/1611.04244.

Ramesh Nallapati, Bowen Zhou, Cı́cero Nogueira dos
Santos, Çaglar Gülçehre, and Bing Xiang. 2016b.
Abstractive Text Summarization Using Sequence-
to-Sequence RNNs and Beyond. In Proceedings
of the 20th SIGNLL Conference on Computational
Natural Language Learning, CoNLL 2016, Berlin,
Germany, August 11-12, 2016, pages 280–290.

Courtney Napoles, Matthew R. Gormley, and Ben-
jamin Van Durme. 2012. Annotated Gigaword.
In Proceedings of the Joint Workshop on Auto-
matic Knowledge Base Construction and Web-scale
Knowledge Extraction, AKBC-WEKEX@NAACL-
HLT 2012, Montrèal, Canada, June 7-8, 2012, pages
95–100.

Shashi Narayan, Shay B. Cohen, and Mirella Lap-
ata. 2018a. Don’t Give Me the Details, Just the
Summary! Topic-Aware Convolutional Neural Net-
works for Extreme Summarization. In Proceed-
ings of the 2018 Conference on Empirical Methods
in Natural Language Processing, pages 1797–1807.
Association for Computational Linguistics.

Shashi Narayan, Shay B. Cohen, and Mirella Lapata.
2018b. Ranking Sentences for Extractive Summa-
rization with Reinforcement Learning. In Proceed-
ings of the 2018 Conference of the North American
Chapter of the Association for Computational Lin-
guistics: Human Language Technologies, NAACL-
HLT 2018, New Orleans, Louisiana, USA, June 1-6,
2018, Volume 1 (Long Papers), pages 1747–1759.

Karolina Owczarzak and Hoa Trang Dang. 2011.
Overview of the TAC 2011 Summarization Track:
Guided Task and AESOP Task.

Over Paul and Yen James. 2004. An Introduction to
DUC-2004. In Proceedings of the 4th Document
Understanding Conference (DUC 2004).

Romain Paulus, Caiming Xiong, and Richard Socher.
2017. A Deep Reinforced Model for Abstractive
Summarization. CoRR, abs/1705.04304.

Dragomir R. Radev, Hongyan Jing, and Malgorzata
Budzikowska. 2000. Centroid-Based Summariza-
tion of Multiple Documents: Sentence Extraction
utility-based evaluation, and user studies. CoRR,
cs.CL/0005020.



1084

Dragomir R. Radev and Kathleen R. McKeown. 1998.
Generating Natural Language Summaries from Mul-
tiple On-Line Sources. Computational Linguistics,
24(3):469–500.

Alexander M. Rush, Sumit Chopra, and Jason We-
ston. 2015. A Neural Attention Model for Abstrac-
tive Sentence Summarization. In Proceedings of the
2015 Conference on Empirical Methods in Natural
Language Processing, EMNLP 2015, Lisbon, Portu-
gal, September 17-21, 2015, pages 379–389.

Abigail See, Peter J Liu, and Christopher D Man-
ning. 2017. Get To The Point: Summarization with
Pointer-Generator Networks. In Proceedings of the
55th Annual Meeting of the Association for Compu-
tational Linguistics (Volume 1: Long Papers), vol-
ume 1, pages 1073–1083.

Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob
Uszkoreit, Llion Jones, Aidan N Gomez, Łukasz
Kaiser, and Illia Polosukhin. 2017. Attention is all
you need. In Advances in Neural Information Pro-
cessing Systems, pages 5998–6008.

Michihiro Yasunaga, Rui Zhang, Kshitijh Meelu,
Ayush Pareek, Krishnan Srinivasan, and
Dragomir R. Radev. 2017. Graph-Based Neural
Multi-Document Summarization. In Proceedings
of CoNLL-2017. Association for Computational
Linguistics.

Jianmin Zhang, Jiwei Tan, and Xiaojun Wan. 2018a.
Adapting Neural Single-Document Summarization
Model for Abstractive Multi-Document Summariza-
tion: A Pilot Study. In Proceedings of the 11th Inter-
national Conference on Natural Language Genera-
tion, Tilburg University, The Netherlands, November
5-8, 2018, pages 381–390.

Jianmin Zhang, Jiwei Tan, and Xiaojun Wan. 2018b.
Towards a Neural Network Approach to Ab-
stractive Multi-Document Summarization. CoRR,
abs/1804.09010.

Markus Zopf. 2018. Auto-hmds: Automatic Construc-
tion of a Large Heterogeneous Multilingual Multi-
Document Summarization Corpus. In Proceed-
ings of the Eleventh International Conference on
Language Resources and Evaluation, LREC 2018,
Miyazaki, Japan, May 7-12, 2018.


