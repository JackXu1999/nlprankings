



















































A Multi-sentiment-resource Enhanced Attention Network for Sentiment Classification


Proceedings of the 56th Annual Meeting of the Association for Computational Linguistics (Short Papers), pages 758–763
Melbourne, Australia, July 15 - 20, 2018. c©2018 Association for Computational Linguistics

758

A Multi-sentiment-resource Enhanced Attention Network for Sentiment
Classification

Zeyang Lei1,2, Yujiu Yang1, Min Yang3, and Yi Liu2
Graduate School at Shenzhen, Tsinghua University1

Peking University Shenzhen Institute2

Shenzhen Institutes of Advanced Technology, Chinese Academy of Sciences3

leizy16@mails.tsinghua.edu.cn, yang.yujiu@sz.tsinghua.edu.cn,
min.yang1129@gmail.com, eeyliu@gmail.com

Abstract

Deep learning approaches for sentimen-
t classification do not fully exploit senti-
ment linguistic knowledge. In this paper,
we propose a Multi-sentiment-resource
Enhanced Attention Network (MEAN) to
alleviate the problem by integrating three
kinds of sentiment linguistic knowledge
(e.g., sentiment lexicon, negation words,
intensity words) into the deep neural net-
work via attention mechanisms. By us-
ing various types of sentiment resources,
MEAN utilizes sentiment-relevant infor-
mation from different representation sub-
spaces, which makes it more effective to
capture the overall semantics of the sen-
timent, negation and intensity words for
sentiment prediction. The experimental
results demonstrate that MEAN has robust
superiority over strong competitors.

1 Introduction

Sentiment classification is an important task of
natural language processing (NLP), aiming to
classify the sentiment polarity of a given text as
positive, negative, or more fine-grained classes.
It has obtained considerable attention due to it-
s broad applications in natural language process-
ing (Hao et al., 2012; Gui et al., 2017). Most
existing studies set up sentiment classifiers using
supervised machine learning approaches, such as
support vector machine (SVM) (Pang et al., 2002),
convolutional neural network (CNN) (Kim, 2014;
Bonggun et al., 2017), long short-term memo-
ry (LSTM) (Hochreiter and Schmidhuber, 1997;
Qian et al., 2017), Tree-LSTM (Tai et al., 2015),
and attention-based methods (Zhou et al., 2016;
Yang et al., 2016; Lin et al., 2017; Du et al., 2017).

Despite the remarkable progress made by the

previous work, we argue that sentiment analysis
still remains a challenge. Sentiment resources in-
cluding sentiment lexicon, negation words, inten-
sity words play a crucial role in traditional senti-
ment classification approaches (Maks and Vossen,
2012; Duyu et al., 2014). Despite its usefulness, to
date, the sentiment linguistic knowledge has been
underutilized in most recent deep neural network
models (e.g., CNNs and LSTMs).

In this work, we propose a Multi-sentiment-
resource Enhanced Attention Network (MEAN)
for sentence-level sentiment classification to inte-
grate many kinds of sentiment linguistic knowl-
edge into deep neural networks via multi-path
attention mechanism. Specifically, we first de-
sign a coupled word embedding module to model
the word representation from character-level and
word-level semantics. This can help to capture
the morphological information such as prefixes
and suffixes of words. Then, we propose a multi-
sentiment-resource attention module to learn more
comprehensive and meaningful sentiment-specific
sentence representation by using the three types
of sentiment resource words as attention sources
attending to the context words respectively. In
this way, we can attend to different sentiment-
relevant information from different representation
subspaces implied by different types of sentimen-
t sources and capture the overall semantics of the
sentiment, negation and intensity words for senti-
ment prediction.

The main contributions of this paper are sum-
marized as follows. First, we design a coupled
word embedding obtained from character-level
embedding and word-level embedding to capture
both the character-level morphological informa-
tion and word-level semantics. Second, we pro-
pose a multi-sentiment-resource attention module
to learn more comprehensive sentiment-specific
sentence representation from multiply subspaces



759

implied by three kinds of sentiment resources in-
cluding sentiment lexicon, intensity words, nega-
tion words. Finally, the experimental results show
that MEAN consistently outperforms competitive
methods.

2 Model

Our proposed MEAN model consists of three key
components: coupled word embedding module,
multi-sentiment-resource attention module, sen-
tence classifier module. In the rest of this section,
we will elaborate these three parts in details.

2.1 Coupled Word Embedding

To exploit the sentiment-related morphological in-
formation implied by some prefixes and suffix-
es of words (such as “Non-”, “In-”, “Im-”), we
design a coupled word embedding learned from
character-level embedding and word-level embed-
ding. We first design a character-level convolution
neural network (Char-CNN) to obtain character-
level embedding (Zhang et al., 2015). Differen-
t from (Zhang et al., 2015), the designed Char-
CNN is a fully convolutional network without
max-pooling layer to capture better semantic in-
formation in character chunk. Specifically, we first
input one-hot-encoding character sequences to a
1 × 1 convolution layer to enhance the seman-
tic nonlinear representation ability of our mod-
el (Long et al., 2015), and the output is then fed
into a multi-gram (i.e. different window sizes)
convolution layer to capture different local charac-
ter chunk information. For word-level embedding,
we use pre-trained word vectors, GloVe (Penning-
ton et al., 2014), to map each word to a low-
dimensional vector space. Finally, each word is
represented as a concatenation of the character-
level embedding and word-level embedding. This
is performed on the context words and the three
types of sentiment resource words 1, resulting in
four final coupled word embedding matrices: the
W c = [wc1, ..., w

c
t ] ∈ Rd×t for context words, the

W s = [ws1, ..., w
s
m] ∈ Rd×m for sentiment words,

the W i = [wi1, ..., w
i
k] ∈ Rd×k for intensity word-

s, the Wn = [wn1 , ..., w
n
p ] ∈ Rd×p for negation

words. Here, t,m, k, p are the length of the corre-
sponding items respectively, and d is the embed-
ding dimension. Each W is normalized to better
calculate the following word correlation.

1To be precise, sentiment resource words include senti-
ment words, negation words and intensity words.

2.2 Multi-sentiment-resource Attention
Module

After obtaining the coupled word embedding,
we propose a multi-sentiment-resource attention
mechanism to help select the crucial sentiment-
resource-relevant context words to build the
sentiment-specific sentence representation. Con-
cretely, we use the three kinds of sentiment re-
source words as attention sources to attend to the
context words respectively, which is beneficial to
capture different sentiment-relevant context word-
s corresponding to different types of sentimen-
t sources. For example, using sentiment words
as attention source attending to the context words
helps form the sentiment-word-enhanced sentence
representation. Then, we combine the three kind-
s of sentiment-resource-enhanced sentence repre-
sentations to learn the final sentiment-specific sen-
tence representation. We design three types of at-
tention mechanisms: sentiment attention, intensi-
ty attention, negation attention to model the three
kinds of sentiment resources, respectively. In the
following, we will elaborate the three types of at-
tention mechanisms in details.

First, inspired by (Xiong et al.), we expect to
establish the word-level relationship between the
context words and different kinds of sentiment re-
source words. To be specific, we define the dot
products among the context words and the three
kinds of sentiment resource words as correlation
matrices. Mathematically, the detailed formula-
tion is described as follows.

M s = (W c)T ·W s ∈ Rt×m (1)
M i = (W c)T ·W i ∈ Rt×k (2)
Mn = (W c)T ·Wn ∈ Rt×p (3)

whereM s,M i,Mn are the correlation matrices to
measure the relationship among the context words
and the three kinds of sentiment resource word-
s, representing the relevance between the context
words and the sentiment resource word.

After obtaining the correlation matrices, we
can compute the sentiment-resource-relevant con-
text word representations Xcs , X

c
i , X

c
n by the dot

products among the context words and differ-
ent types of corresponding correlation matrices.
Meanwhile, we can also obtain the context-word-
relevant sentiment word representation matrix Xs

by the dot product between the correlation ma-
trix M s and the sentiment words W s, the context-



760

word-relevant intensity word representation ma-
trix Xi by the dot product between the intensi-
ty words W i and the correlation matrix M i, the
context-word-relevant negation word representa-
tion matrix Xn by the dot product between the
negation words Wn and the correlation matrix
Mn. The detailed formulas are presented as fol-
lows:

Xcs = W
cM s, Xs = W s(M s)T (4)

Xci = W
cM i, Xi = W i(M i)T (5)

Xcn = W
cMn, Xn = Wn(Mn)T (6)

The final enhanced context word representation
matrix is computed as:

Xc = Xcs +X
c
i +X

c
n. (7)

Next, we employ four independent GRU net-
works (Chung et al., 2015) to encode hidden s-
tates of the context words and the three types of
sentiment resource words, respectively. Formally,
given the word embedding Xc, Xs, Xi, Xn, the
hidden state matrices Hc, Hs, H i, Hn can be ob-
tained as follows:

Hc = GRU(Xc) (8)

Hs = GRU(Xs) (9)

H i = GRU(Xi) (10)

Hn = GRU(Xn) (11)

After obtaining the hidden state matrices, the
sentiment-word-enhanced sentence representation
o1 can be computed as:

o1 =
t∑
i=1

αih
c
i , q

s =
m∑
i=1

hsi/m (12)

β([hci ; qs]) = u
T
s tanh(Ws[h

c
i ; qs]) (13)

αi =
exp(β([hci ; qs]))∑t
i=1 exp(β([h

c
i ; qs]))

(14)

where qs denotes the mean-pooling operation to-
wards Hs, β is the attention function that calcu-
lates the importance of the i-th word hci in the
context and αi indicates the importance of the i-
th word in the context, us and Ws are learnable
parameters.

Similarly, with the hidden states H i and Hn

for the intensity words and the negation words
as attention sources, we can obtain the intensity-
word-enhanced sentence representation o2 and the

negation-word-enhanced sentence representation
o3. The final comprehensive sentiment-specific
sentence representation õ is the composition of the
above three sentiment-resource-specific sentence
representations o1, o2, o3:

õ = [o1, o2, o3] (15)

2.3 Sentence Classifier
After obtaining the final sentence representation õ,
we feed it to a softmax layer to predict the senti-
ment label distribution of a sentence:

ŷ =
exp(W̃o

T
õ + b̃o)∑C

i=1 exp(W̃o
T
õ + b̃o)

(16)

where ŷ is the predicted sentiment distribution of
the sentence, C is the number of sentiment labels,
W̃o and b̃o are parameters to be learned.

For model training, our goal is to minimize the
cross entropy between the ground truth and pre-
dicted results for all sentences. Meanwhile, in or-
der to avoid overfitting, we use dropout strategy
to randomly omit parts of the parameters on each
training case. Inspired by (Lin et al., 2017), we al-
so design a penalization term to ensure the diversi-
ty of semantics from different sentiment-resource-
specific sentence representations, which reduces
information redundancy from different sentimen-
t resources attention. Specifically, the final loss
function is presented as follows:

L(ŷ, y) =−
N∑
i=1

C∑
j=1

yji log(ŷ
j
i ) + λ(

∑
θ∈Θ

θ2)

(17)

+ µ||ÕÕT − ψI||2F
Õ =[o1; o2; o3] (18)

where yji is the target sentiment distribution of the
sentence, ŷji is the prediction probabilities, θ de-
notes each parameter to be regularized, Θ is pa-
rameter set, λ is the coefficient for L2 regulariza-
tion, µ is a hyper-parameter to balance the three
terms, ψ is the weight parameter, I denotes the
the identity matrix and ||.||F denotes the Frobe-
nius norm of a matrix. Here, the first two terms of
the loss function are cross-entropy function of the
predicted and true distributions and L2 regulariza-
tion respectively, and the final term is a penaliza-
tion term to encourage the diversity of sentiment
sources.



761

3 Experiments

3.1 Datasets and Sentiment Resources

Movie Review (MR)2 and Stanford Sentimen-
t Treebank (SST)3 are used to evaluate our model.
MR dataset has 5,331 positive samples and 5,331
negative samples. We adopt the same data split as
in (Qian et al., 2017). SST consists of 8,545 train-
ing samples, 1,101 validation samples, 2210 test
samples. Each sample is marked as very negative,
negative, neutral, positive, or very positive. Senti-
ment lexicon combines the sentiment words from
both (Qian et al., 2017) and (Hu and Liu, 2004),
resulting in 10,899 sentiment words in total. We
collect negation and intensity words manually as
the number of these words is limited.

3.2 Baselines

In order to comprehensively evaluate the perfor-
mance of our model, we list several baselines for
sentence-level sentiment classification.

RNTN: Recursive Tensor Neural Network
(Socher et al., 2013) is used to model correlations
between different dimensions of child nodes vec-
tors.

LSTM/Bi-LSTM: Cho et al. (2014) employs
Long Short-Term Memory and the bidirectional
variant to capture sequential information.

Tree-LSTM: Memory cells was introduced by
Tree-Structured Long Short-Term Memory (Tai
et al., 2015) and gates into tree-structured neural
network, which is beneficial to capture semantic
relatedness by parsing syntax trees.

CNN: Convolutional Neural Networks (Kim,
2014) is applied to generate task-specific sentence
representation.

NCSL: Teng et al. (2016) designs a Neural
Context-Sensitive Lexicon (NSCL) to obtain pri-
or sentiment scores of words in the sentence.

LR-Bi-LSTM: Qian et al. (2017) imposes lin-
guistic roles into neural networks by applying lin-
guistic regularization on intermediate outputs with
KL divergence.

Self-attention: Lin et al. (2017) proposes a self-
attention mechanism to learn structured sentence
embedding.

2http://www.cs.cornell.edu/people/
pabo/movie-review-data/

3https://nlp.stanford.edu/sentiment/we
train the model on both phrases and sentences but only test
on sentences

ID-LSTM: (Tianyang et al., 2018) uses rein-
forcement learning to learn structured sentence
representation for sentiment classification.

3.3 Implementation Details
In our experiments, the dimensions of character-
level embedding and word embedding (GloVe) are
both set to 300. Kernel sizes of multi-gram convo-
lution for Char-CNN are set to 2, 3, respectively.
All the weight matrices are initialized as random
orthogonal matrices, and we set all the bias vec-
tors as zero vectors. We optimize the proposed
model with RMSprop algorithm, using mini-batch
training. The size of mini-batch is 60. The dropout
rate is 0.5, and the coefficient λ of L2 normaliza-
tion is set to 10−5. µ is set to 10−4. ψ is set to
0.9. When there are not sentiment resource words
in the sentences, all the context words are treat-
ed as sentiment resource words to implement the
multi-path self-attention strategy.

3.4 Experiment Results
In our experiments, to be consistent with the re-
cent baseline methods, we adopt classification ac-
curacy as evaluation metric. We summarize the
experimental results in Table 1. Our model has
robust superiority over competitors and sets state-
of-the-art on MR and SST datasets. First, our
model brings a substantial improvement over the
methods that do not leverage sentiment linguis-
tic knowledge (e.g., RNTN, LSTM, BiLSTM, C-
NN and ID-LSTM) on both datasets. This veri-
fies the effectiveness of leveraging sentiment lin-
guistic resource with the deep learning algorithms.
Second, our model also consistently outperforms
LR-Bi-LSTM which integrates linguistic roles of
sentiment, negation and intensity words into neu-
ral networks via the linguistic regularization. For
example, our model achieves 2.4% improvements
over the MR dataset and 0.8% improvements over
the SST dataset compared to LR-Bi-LSTM. This
is because that MEAN designs attention mecha-
nisms to leverage sentiment resources efficiently,
which utilizes the interactive information between
context words and sentiment resource words.

In order to analyze the effectiveness of each
component of MEAN, we also report the abla-
tion test in terms of discarding character-level em-
bedding (denoted as MEAN w/o CharCNN) and
sentiment words/negation words/intensity words
(denoted as MEAN w/o sentiment words/negation
words/intensity words). All the tested factors con-

http://www.cs.cornell.edu/people/pabo/movie-review-data/
http://www.cs.cornell.edu/people/pabo/movie-review-data/
https://nlp.stanford.edu/sentiment/


762

tribute greatly to the improvement of the MEAN.
In particular, the accuracy decreases sharply when
discarding the sentiment words. This is within our
expectation since sentiment words are vital when
classifying the polarity of the sentences.

Methods MR SST

RNTN 75.9%# 45.7%
LSTM 77.4%# 46.4%

BiLSTM 79.3%# 49.1%
Tree-LSTM 80.7%# 51.0%

CNN 81.5% 48.0%
NSCL 82.9% 51.1%

LR-Bi-LSTM 82.1% 50.6%
Self-attention 81.7%* 48.9%*

ID-LSTM 81.6% 50.0%
MEAN(our model) 84.5% 51.4%
MEAN-CharCNN 83.2% 50.0%

MEAN-sentiment words 82.1% 48.4%
MEAN-negation words 82.9% 49.5%
MEAN-intensity words 83.5% 49.3%

Table 1: Evaluation results. The best result for
each dataset is in bold. The result marked with #
are retrieved from (Qian et al., 2017), and the re-
sults marked with * denote the results are obtained
by our implementation.

4 Conclusion

In this paper, we propose a novel Multi-sentiment-
resource Enhanced Attention Network (MEAN) to
enhance the performance of sentence-level senti-
ment analysis, which integrates the sentiment lin-
guistic knowledge into the deep neural network.

Acknowledgements

This work was supported in part by the
Research Fund for the development of s-
trategic emerging industries by ShenZhen c-
ity (No.JCYJ20160301151844537 and No. J-
CYJ20160331104524983).

References
Shin Bonggun, Lee Timothy, and D. Choi Jinho. 2017.

Lexicon integrated cnn models with attention for
sentiment analysis. In Proceedings of the 8th Work-
shop on Computational Approaches to Subjectivity,
Sentiment and Social Media Analysis, ACL 2017.

Kyunghyun Cho, Bart van Merrienboer, Çaglar
Gülçehre, Fethi Bougares, Holger Schwenk, and
Yoshua Bengio. 2014. Learning phrase representa-
tions using RNN encoder-decoder for statistical ma-
chine translation. CoRR, abs/1406.1078.

Junyoung Chung, Caglar Gulcehre, Kyunghyun Cho,
and Yoshua Bengio. 2015. Gated feedback recurrent
neural networks. In Proceedings of ICML 2015.

Jiachen Du, Ruifeng Xu, Yulan He, and Lin Gui. 2017.
Stance classification with target-specific neural at-
tention networks. In Proceedings of IJCAI 2017.

Tang Duyu, Wei Furu, Qin Bing, Liu Ting, and Zhou
Ming. 2014. Coooolll: A deep learning system for
twitter sentiment classification. In Proceedings of
the 8th International Workshop on Semantic Evalu-
ation, SemEval@COLING 2014.

Lin Gui, Yu Zhou, Ruifeng Xu, Yulan He, and Qin Lu.
2017. Learning representations from heterogeneous
network for sentiment classification of product re-
views. Knowledge-Based Systems, 124:34–45.

Li Hao, Chen Yu, Ji Heng, Muresan Smaranda, and
Zheng Dequan. 2012. Combining social cognitive
theories with linguistic features for multi-genre sen-
timent analysis. In Proceedings of the 26th Pacif-
ic Asia Conference on Language, Information and
Computation.

Sepp Hochreiter and Jürgen Schmidhuber. 1997. Long
short-term memory. Neural computation, pages
1735–1780.

Minqing Hu and Bing Liu. 2004. Mining and summa-
rizing customer reviews. In Proceedings of SIGKD-
D 2004.

Yoon Kim. 2014. Convolutional neural networks for
sentence classification. In Proceedings of EMNLP
2014.

Zhouhan Lin, Minwei Feng, Cicero Nogueira dos San-
tos, Mo Yu, Bing Xiang, Bowen Zhou, and Yoshua
Bengio. 2017. A structured self-attentive sentence
embedding. In Proceedings of ICLR 2017.

Jonathan Long, Evan Shelhamer, and Trevor Darrel-
l. 2015. Fully convolutional networks for semantic
segmentation. In Proceedings of CVPR 2015.

Isa Maks and Piek Vossen. 2012. A lexicon model for
deep sentiment analysis and opinion mining applica-
tions. Decision Support Systems, pages 680–688.

Bo Pang, Lillian Lee, and Shivakumar Vaithyanathan.
2002. Thumbs up?: sentiment classification using
machine learning techniques. In Proceedings of A-
CL 2002.

Jeffrey Pennington, Richard Socher, and Christopher
Manning. 2014. Glove: Global vectors for word
representation. In Proceedings of EMNLP 2014.

Qiao Qian, Minlie Huang, Jinhao Lei, and Xiaoyan
Zhu. 2017. Linguistically regularized LSTM for
sentiment classification. In Proceedings of ACL
2017, pages 1679–1689.



763

Richard Socher, Alex Perelygin, Jean Wu, Jason
Chuang, Christopher D Manning, Andrew Ng, and
Christopher Potts. 2013. Recursive deep models
for semantic compositionality over a sentiment tree-
bank. In Proceedings of EMNLP 2013.

Kai Sheng Tai, Richard Socher, and Christopher D.
Manning. 2015. Improved semantic representation-
s from tree-structured long short-term memory net-
works. In Proceedings of ACL 2015.

Zhiyang Teng, Duy-Tin Vo, and Yue Zhang. 2016.
Context-sensitive lexicon features for neural senti-
ment analysis. In Proceedings of EMNLP 2016.

Zhang Tianyang, Huang Minlie, and Li Zhao. 2018.
Learning structured representation for text classifi-
cation via reinforcement learning. In Proceedings
of AAAI 2018.

Caiming Xiong, Victor Zhong, and Richard Socher.
Dynamic coattention networks for question answer-
ing. In ICLR.

Zichao Yang, Diyi Yang, Chris Dyer, Xiaodong He,
Alex Smola, and Eduard Hovy. 2016. Hierarchical
attention networks for document classification. In
Proceedings of NAACL 2016.

Xiang Zhang, Junbo Zhao, and Yann LeCun. 2015.
Character-level convolutional networks for text clas-
sification. In Proceedings of NIPS 2015.

Xinjie Zhou, Xiaojun Wan, and Jianguo Xiao. 2016.
Attention-based lstm network for cross-lingual sen-
timent classification. In Proceedings of EMNLP
2016.


