




































Proceedings of the 12th International Workshop on Tree Adjoining Grammars and Related Formalisms (TAG+12), pages 58–66,
Düsseldorf, Germany, June 29 - July 1, 2016.

Verbal fields in Hungarian simple sentences and
infinitival clausal complements

Kata Balogh

DFG Collaborative Research Centre 991
Heinrich-Heine-Universität Düsseldorf

Katalin.Balogh@hhu.de

The paper presents an analysis of Hungarian
sentence articulation driven by discourse-semantic
functions such as topic and focus, hence the in-
formation structure of the utterance. In this pa-
per extensions of the standard LTAG framework
are proposed to represent the information structure
driven positions in simple sentences. The elemen-
tary trees are generated by the meta-grammar, us-
ing the XMG tool for grammar writing. The ver-
bal fields will also be investigated in complex sen-
tences with infinitival clausal complements. I will
discuss challenging phenomena, such as scram-
bling of the different verbal fields, and verbal mod-
ifier climbing.

1 Introduction

The core topic of this paper is the analysis of
the verbal fields in Hungarian simple sentences
and infinitival clausal complements. Hungarian is
challenging for computational linguistic applica-
tions, given its flexible word order and discourse
configurational type, where syntactic positions are
not driven by grammatical functions, but rather by
discourse-semantic functions such as topic and fo-
cus. In this paper I propose an analysis in Lexical-
ized Tree-Adjoining Grammar [LTAG; (Joshi and
Schabes, 1997)] with an extension to the represen-
tation of information structure, the driving device
for sentence articulation in Hungarian. The ele-
mentary trees are generated by the meta-grammar,
using the eXtensible MetaGrammar tool [XMG;
(Crabbé et al., 2013)].

Next to simple sentences, the paper also
presents the proposal of an analysis of complex
sentences with infinitival clausal components. The
analysis of Hungarian infinitival clauses faces a
list of interesting issues, regardless of the given
framework. In the analysis we need to capture
the fact that the embedded infinitival clause has

its own verbal fields and that the arguments of the
matrix verb and the embedded infinitival can be
mixed. The analysis of infinitival clausal comple-
ments is challenging for standard LTAG, since it
cannot handle discontinuity and scrambling phe-
nomena (Becker and Rambow, 1990; Becker et al.,
1991), caused by the mixing of the arguments in
different verbal fields. This paper proposes some
modifications in order to capture these phenom-
ena: (i) using multi-component TAG [MCTAG]
(Weir, 1988; Nesson et al., 2010), and (ii) extend-
ing the feature sets to represent stress-positions.

1.1 LTAG in a nutshell

Tree-Adjoining Grammar (TAG) is a tree-
rewriting formalism, where the elementary struc-
tures are trees. A TAG is a set of elementary trees
with two combinatorial operations: substitution
and adjunction. The set of elementary trees is the
union of a finite set of initial trees and auxiliary
trees. A derivation in TAG starts with an initial
tree (α) and proceeds by using either of the two
operations. By substitution a non-terminal leaf
node is replaced by an initial tree (β), while by
adjunction an internal node is replaced by an aux-
iliary tree (γ).

α: Y

XZ

β: Z γ: X

X∗

substitute β to α: Y

XZ

adjoin γ to α: Y

X

X

Z

Figure 1: Substitution and adjunction

In a Lexicalized TAG [LTAG] each elementary
tree contains at least one lexical element, its lexi-
cal anchor (⋄). To increase the expressive power

58



of the formalism, adjunction constraints are ad-
ditionally introduced to restrict whether adjunc-
tion is mandatory and/or which trees can be ad-
joined at a given node. In particular for natu-
ral language analyses another extension of TAG is
proposed, using feature structures as non-terminal
nodes. Among the reasons for a Feature-based
TAG [F-TAG] two important ones are generaliz-
ing agreement and case marking via underspecifi-
cation. A great advantage of F-TAG with respect
to grammar writing is the result of smaller gram-
mars that are easier to maintain, as well as the pos-
sibility of modeling adjunction constraints. The
shape of the elementary trees is driven by linguis-
tic principles (Abeillé and Rambow, 2000; Frank,
2002), reflecting the syntactic/semantic properties
of linguistic objects. Syntactic design principles
determine, for example, that subcategorization is
expressed locally within the elementary tree of the
predicate. In the grammar architecture tree fami-
lies are defined, sets of tree templates representing
a subcategorization frame and collecting all syn-
tactic configurations the subcategorization frame
can be realized in.

2 Verbal fields in simple sentences

With respect to information structure, Hungarian
sentence structure distinguishes two fields: the
postverbal and the preverbal field (see e.g. É.
Kiss, 2005). The postverbal field by default hosts
the ‘argument positions’ the order of which is free:
the word order variations do not signal grammat-
ical roles and are associated with the same se-
mantic content. The preverbal field hosts the so-
called ‘functional projections’, the order of which
is fixed. Sentence initially we find the topic(s), fol-
lowed by quantifier(s) and the narrow focus, which
is placed in the immediate preverbal position:1

Topic* < Quantifier* < Focus < Verb [...]

A designated syntactic position immediately
preceding the verb is important in Hungarian for
several reasons. This position hosts narrow fo-
cus, sentential negation, the verbal modifier (ver-
bal particles, bare nouns, infinitives etc.), partially
in complementary distribution. In ‘neutral sen-
tences’ – utterances without narrow focus or sen-
tential negation –, the immediate preverbal posi-
tion is occupied by the verbal modifier (VM) as il-

1Next to topic, focus and quantifiers, the preverbal field
also hosts sentential negation, optative operators (bárcsak ‘if
only’) and interrogative operators.

lustrated in (1a). When the sentence contains sen-
tential negation (1b) or narrow focus (1c) the VM
stands postverbally.

(1) a. Pim
Pim

meg-hívta
VM-invited

Marit.
Mary.acc

‘Pim invited Mary.’

b. Pim
Pim

nem
neg

hívta
invited

meg
VM

Marit.
Mary.acc

‘Pim did not invite Mary.’

c. Pim
Pim

MARIT
Mary.acc

hívta
invited

meg.
VM

‘It is Mary whom Pim invited.’

The verbal modifier is in complementary distri-
bution with both the narrow focus and the senten-
tial negation. However, narrow focus and negation
can co-occur; see (2).

(2) Pim
Pim

MARIT
Mary.acc

nem
neg

hívta
invited

meg.
VM

‘It is Mary whom Pim did not invite.’

The position of the VM depends on whether
narrow focus or sentential negation is present in
the sentence. The narrow focus and sentential
negation must stand in the immediate preverbal
position, forcing the VM to appear postverbally.

2.1 Functional positions

In Hungarian, sentence articulation is driven by
discourse semantics rather than by grammatical
function. Instead of defining structural positions
for grammatical functions (e.g. subject) we need
to define structural positions for topic and focus.
Accordingly, the elementary trees in a given tree
family need to encode the possible topic/focus
structures. In the following, I will illustrate the
system via the transitive tree family with two
NP arguments. Both arguments can be either in
postverbal position, in topic position and in fo-
cus position. Hence, the tree family of transi-
tive verbs must contain the elementary trees for all
structures: VP-NP-NP, NPtop-VP-NP, NPfoc-VP-
NP, NPtop-NPtop-VP, NPtop-NPfoc-VP. Instead of
merely listing the structures, the XMG tool is used
to generate the set of elementary trees, so that
generalizations on positions can also be expressed
(see section 3).

2.2 Representing information structure

The representation of information structure comes
on a par with the elementary tree, following the
proposals by (Kallmeyer and Romero, 2008) and

59



(Kallmeyer and Osswald, 2012). Each elementary
tree is linked to a frame-based semantic represen-
tation. The syntactic operations (substitution and
adjunction) trigger the unification of the semantic
representations, thereby deriving the meaning rep-
resentation of the sentence. Next to the meaning
representation, the representation of the informa-
tion structure is proposed, mediated by the meta-
variables on the nodes.

The notion of information structure [InfS] cov-
ers a wide range of phenomena such as topic, com-
ment, focus, background, given, new, contrast etc.
The central aim in the current analysis is to rep-
resent InfS in a way that we can derive the basic
focus structures: sentence focus, predicate focus
and narrow focus. These structures are nicely re-
flected in the Hungarian sentence articulation by
the structural distinction of the topic of the sen-
tence and the comment, which we take as the focus
domain. The focus domain is either as a whole the
focus of the sentence (predicate focus) or it con-
tains narrow focus.

(3) a. Q: What happened?

A: Meg-hívta
VM-invited

Pim
Pim

Marit.
Mary.acc

‘[Pim invited Mary.]F ’→ sentence focus

b. Q: What did Pim do?

A: Pim
Pim

meg-hívta
VM-invited

Marit.
Mary.acc

‘Pim [invited Mary.]F ’→ predicate focus

c. Q: Whom did Pim invite?

A: Pim
Pim

MARIT
Mary.acc

hívta
invited

meg.
VM

A′: MARIT
Mary.acc

hívta
invited

meg
VM

Pim.
Pim

‘Pim invited [Mary]F .’ → narrow focus

In the elementary tree of the predicate, the fea-
ture INFS indicates the positions related to infor-
mation structure. The values topic and focus in-
dicate the positions for the sentence topic and the
narrow focus respectively, while the value pred in-
dicates the syntactic predicate.

Each elementary tree is linked to a representa-
tion of the information structure, uniformly given
as an attribute-value matrix. The attributes TOP
(topic) and FOC-DOM (focus domain) represent
the topic–comment distinction. The focus domain
can be further divided into FOC (indicating narrow
focus) and NON-FOC (non-focus part of the fo-

cus domain).2 The background part in the focus–
background distinction can be derived as the uni-
fication of the NON-FOC and the TOP values.

VP[P=
0 ]

[infs=pred]

NP↓[I=
2 ]

[acc]NP↓
[I= 1 ]
[nom]V

hívta

VM

meg

[

info-struct

FOC-DOM 0

]

Figure 2: Elementary tree of meg-hívta for sentence focus

Figure 2 illustrates the elementary tree of the
verb meg-hívta (‘invited’) for structures with sen-
tence focus (3a). The resulting InfS representa-
tion signals the whole predication (P= 0 ) being the
focus-domain, and since it is not divided further, it
represents sentence focus.

VP[P=
0 ]

[infs=top]

VP[P=
3 ]

[infs=pred]

NP↓[I=
2 ]

[acc]V

hívta

VM

meg

NP↓[I=
1 ]

[nom]






info-struct

TOP 1

FOC-DOM 3






Figure 3: Elementary tree of meg-hívta for predicate focus

Figure 3 shows the elementary tree for predi-
cate focus structure (3b). The InfS representation
signals the syntactic predicate (P= 3 ) as the focus-
domain, while the element occupying the topic po-
sition (I= 1 ) is represented as the sentence topic.









info-struct

TOP 1

FOC-DOM 3

[

FOC 2

NON-FOC 4

]









VP[P=
0 ]

[infs=top]

VP[P=
3 ]

[infs=foc]

VP[P=
4 ]

[infs=pred]

VM

meg

V

hívta

NP↓[I=
2 ]

[acc]

NP↓[I=
1 ]

[nom]

Figure 4: Elementary tree of hívta meg for narrow focus

Figure 4 illustrates the elementary tree of the
verb for a construction containing both a topic and

2The notions of focus domain and non-focus are inspired
by (Van Valin Jr., 2005).

60



a narrow focus (3c-A). The focus domain is di-
vided into the narrow focus (FOC) and the non-
focus, that contributes to the background.

The different information structures can be fur-
ther mapped to the information status of the given
elements, in terms of givenness. The representa-
tions of different topic/focus structures and their
relation to the discourse is under investigation and
will be presented in a later stage of the analysis.

3 Topic and focus positions

As already noted above, the tree families of the
verbs must contain all possible structures reflect-
ing the information structure of the utterance. The
arguments of the verbs can occupy three structural
positions, resulting in various structures. For ex-
ample, transitive verbs must have two argument
slots, each with three possibilities. Instead of
merely listing these structures, the XMG tool is
used to generate the set of elementary trees, so that
generalizations can also be expressed.

3.1 XMG in a nutshell

An LTAG grammar is a set of elementary trees
which contain most linguistic information. How-
ever, this set contains identical tree fragments,
leading to multiple structure sharing. The XMG
tool provides the elementary trees for a given
grammar, such that it factors out redundant parts
of a given tree set by identifying identical tree
fragments in the set of elementary trees. An ad-
ditional abstraction level is introduced, the meta-
grammar, where generalizations can be expressed.
The meta-grammar is a declarative system that
combines re-usable tree fragments – classes – by
conjunction and disjunction.
Class ::= Name → Content

Content ::=

Descr | Name |

Content ∧ Content | Content ∨ Content

Descr ::=

ni → nj | ni →
+ nj | ni →

∗ nj | ni ≺ nj |

ni ≺
+ nj | ni ≺

∗ nj | ni[f1 : v1, ..., fn : vn] |

ni(c1 : cv1, ..., cfn : cvn) | Descr ∧ Descr

The content of a class can be either a simple
tree fragment or a conjunction / disjunction of
two tree fragments. In the description of a tree
fragment the dominance→ and precedence ≺ re-
lations of the nodes are given, where →+ and
≺+ stand for their transitive closure and →∗ and
≺∗ for their transitive, reflexive closure. At each
node we refer to the features associated with it

by ni[f1 : v1, ..., fn : vn] and each node can be
marked for substitution, footnode, anchor, etc. by
ni(c1 : cv1, ..., cfn : cvn).

class CanSubj

declare ?S ?VP ?NP

{<syn>{

node ?S (color=black) [cat=s] ;

node ?NP (color=black,mark=subst) [cat=np] ;

node ?VP (color=white) [cat=vp] ;

?S -> ?NP ; ?S -> ?VP ; ?NP » ?VP } }

Figure 5: Tree description of the class of canonical subject
in English

Tree fragments can be combined by conjunction
and disjunction resulting in tree templates, e.g.:

Subject → CanSubject ∨ WhNpSubject

Object → CanObject ∨ WhNpObject

In the combination of the tree fragments nodes
get unified. Node equations are carried out by
node polarization: annotating the nodes with col-
ors (e.g. color = black), which declare implic-
itly how a given node can be unified with others.
This method is based on a color matrix, according
to which (i) a black node can unify with zero, one
or more white nodes, producing a black node, (ii)
a white node must be unified with a black node
producing a black node, and (iii) a red node can-
not be unified with any other node. The resulting
tree fragment is a satisfying model only if it does
not contain any white nodes.

3.2 Implementation using XMG

The class of transitive verbs must contain the
verbal projection and two arguments, the subject
(Subj) and the object (Obj).

Trans → VProj ∧ Subj ∧ Obj

Both arguments have three possible positions:
postverbal (ArgPos), topic (TopPos) or focus
(FocPos) position and get the appropriate case
marking.

Subj → (ArgPos ∨ TopPos ∨ FocPos) ∧ Nom

Obj → (ArgPos ∨ TopPos ∨ FocPos) ∧ Acc

NP case marking is generalized via the classes
Nom, Acc, . . . as:

Nom → n[cat:np,top:[case:nom]]

Acc → n[cat:np,top:[case:acc]]

The core is the class of the verb projection,
VProj, that must be either one of the three tree
fragments:

VProj → VProj1 ∨ VProj2 ∨ VProj3

The above fragments are defined according to
whether there is a verbal modifier present, and in

61



which order it appears relative to the verb. Consid-
ering the VM-V order as default (non-inversion),
the INV feature determines whether inversion is
present (values yes / no). In case the sentence con-
tains no VM, the INV feature is irrelevant / not ap-
plicable (value na).

VProj1: VProj2: VProj3:

VP[ inv = na
infs = pred

]

V⋄

VP[ inv = no
infs = pred

]

V⋄≺VM⋄

VP[ inv = yes
infs = pred

]

VM⋄≺V⋄

Figure 6: Tree fragments for verb projection

For the argument position the class ArgPos is
defined. As illustrated in section 2, in the post-
verbal field the order of the arguments is free. At
the VP node the feature INFS represents the infor-
mation structural function of the constituent, with
value pred representing the syntactic predicate.

VP[infs=pred]

NP↓[case=X]≺∗V⋄

Figure 7: Tree fragment for argument position

The class of the verb projection combines with
one or more argument positions, where the order
of the arguments are free. This latter is made pos-
sible by the reflexive, transitive closure (≺∗) of the
precedence relation between the V node and the
argument NP node. The case marking of the argu-
ment is underspecified.

By the above fragments we can generate the el-
ementary trees for deriving all possible argument
orders in the post-verbal field for a given predi-
cate. For example, the tree family of a transitive
verb will contain the structures (among others) for
cases in which both arguments are postverbal:

VP[infs=pred]

NP↓[case=acc]NP↓[case=nom]V⋄

VP[infs=pred]

NP↓[case=nom]NP↓[case=acc]V⋄

In the pre-verbal field we have fixed structural
positions for the topic and focus.3 The classes for
these positions are defined respectively as:

3In Hungarian, (distributive) quantifiers have a designated
position, too, between the topic(s) and the focus. Regarding

TopPos: VP[infs=topic]

VP[inv=no|na][infs=topic|focus|pred]≺NP↓
[case=X]

FocPos: VP[infs=focus]

VP[inv=yes|na][infs=pred]≺NP↓
[case=X]

Figure 8: Tree fragments for topic and positions

According to the hierarchical order of the pre-
verbal positions, a topic can be followed by an-
other topic, the focus or the predicate, while focus
can only be followed by the predicate. These or-
dering constraints are captured by the bottom fea-
tures of the respective VP footnotes, while the top
features of these nodes constrain the VM-V inver-
sion. Focus induces inversion (inv=yes|na), while
topics do not (inv=no|na). For both, a combina-
tion with a non-VM verb is of course possible.

The tree fragments above define the post-verbal
position and the two functional positions (topic,
focus) in a uniform way, capturing the general-
izations behind them. Using the above tree frag-
ments the meta-grammar generates the elemen-
tary trees, by which the grammar can derive all
possible structures in simple sentences, possibly
containing topic and focus positions. The non-
grammatical structures – e.g. topic following fo-
cus, focus without VM-V inversion etc. – are ruled
out correctly.

4 Infinitival embedded clauses

In this section I propose an analysis of infinitival
complements and the structure and relation of the
verbal fields of the matrix verb and the infinitival
embedded verb. In Hungarian two types of con-
trol verbs can be distinguished: the ones that take
main stress (e.g. fél ‘is afraid’) versus the ones that
avoid main stress (e.g. akar ‘want’), referred to as
‘stress-bearing verbs’ and ‘stress-avoiding verbs’
respectively. These two verb classes differ in syn-
tactic behavior with respect to the placement of
the verbal modifier of the embedded infinitive. In
Hungarian the main stress falls on the leftmost ele-
ment of the phonological phrase, hence, in neutral
sentences the main stress falls on the VM.

the space limitations, the analysis of quantifiers is not dis-
cussed in this paper.

62



Example (4a) illustrates the stress-avoiding verb
(akar ‘want’), which induces the climbing of the
VM of the infinitival verb.

(4) a. Pim
Pim

el
VM

akarja
wants

(el-∗)olvasni
(VM-)read.inf

a
the

levelet.
book.acc

‘Pim wants to read the letter.’

b. Pim
Pim

(el∗)
(VM)

fél
afraid

el-olvasni
VM-read.inf

a
the

levelet.
book.acc

‘Pim is afraid to read the letter.’

The VM el- is the modifier of the infinitival
olvasni, but it must appear in the pre-verbal po-
sition of the matrix verb. In this way the VM el-
receives the main stress instead of the matrix verb.
In (4b) the VM of the infinitival stays in its own
pre-verbal position, VM climbing is no grammati-
cal. Koopman & Szabolcsi (2000) classifies differ-
ent verb types as (i) the group of auxiliaries: that
do not bear main accent and induce VM-climbing,
(ii) non-auxiliaries 1: that bear main accent and do
not induce VM-climbing and (iii) non-auxiliaries
2 with mixed behavior.

In case of clausal complements we have multi-
ple verbal fields, belonging to both the finite and
the infinite verbs.

(5) [preV1 ] V1 [ postV1 ] [ preV2 ] V2 [ postV2 ]

(6) András
Andrew

meg-tanította
VM-taught

a
the

diákokat
students.acc

a
the

mondatot
sentence.acc

csak
only

LFG-ben
LFG.in

elemezni.
analyze.inf

‘Andrew taught the students to analyze the sen-
tence only in LFG.’

(from (Szécsényi, 2009))

Syntactically interesting cases are the sentences
in which arguments of the embedded verb are top-
icalized or focused. Szécseényi’s (2009) example
above provides evidence of the existence of the
separate pre-verbal field of the embedded infini-
tive, hosting the focus expression csak LFG-ben
‘only in LFG’. However, broader data suggest that
the preferred position of a focused or topicalized
argument of the infinitive is in the pre-verbal field
of the matrix verb (see examples (7) and (8)).

In the following examples the embedded infini-
tive is el-olvasni ‘VM-read.inf’, containing a ver-
bal modifier, while the matrix verb does not have a
VM. Topics preferably stand in the preverbal field
of the matrix verb (7b, 8b), however, it is also
grammatical in the preverbal field of the embed-
ded verb (7a, 8a). Focused constituents stand in
the preverbal field of the matrix verb (7c, 8c). Next

to these preferred positions, the sentence articula-
tion is also sensitive to the type of the matrix verb
(auxiliary vs. non-auxiliary), providing different
structures.

(7) a. ?Pim
Pim

fél
afraid

[a
the

levelet]T

letter.acc
el-olvasni.
VM-read.inf

b. Pim
Pim

[a
the

levelet]T

letter.acc
fél
afraid

el-olvasni.
VM-read.inf

‘Pim is afraid to read the letter.’

c. Pim
Pim

[a
the

LEVELET]F

letter.acc
fél
afraid

el-olvasni.
VM-read.inf

‘It is the letter, that Pim is afraid to read. ’

(8) a. ?Pim
Pim

el
VM

akarja
wants

[a
the

levelet]T

letter.acc
olvasni.
read.inf

b. Pim
Pim

[a
the

levelet]T

letter.acc
el
VM

akarja
wants

olvasni.
read.inf

‘Pim wants to read the letter.’

c. Pim
Pim

[a
the

LEVELET]F

letter.acc
akarja
wants

el-olvasni.
VM-read.inf

‘It is the letter, that Pim wants to read. ’

4.1 Proposal: from LTAG to TL-MCTAG

Closely related to scrambling, the position of the
verbal modifier of the embedded verb in stress
avoiding versus stress bearing control verbs poses
interesting questions to the analysis.4

The structures reflecting the verbal fields of the
control verbs and the infinitives can both be gener-
ated along the lines of the analysis of simple sen-
tences. See, e.g., the elementary tree of el-olvasni
‘to read’ with a topicalized argument:

VP[infs=top]

VP[inv=na][infs=pred]

V

olvasni

VM

el-

NP↓[case=acc]

The core of the problem with an LTAG anal-
ysis here is caused by scrambling of the argu-
ments and the verbal modifier in the different ver-
bal fields of the matrix verb and the embedded
verb. Using the standard LTAG formalisms it is
not possible to capture VM-climbing (4a), since
it proposes elementary trees for sentence embed-
ding, such that sentential complements being rep-
resented as a footnode (S∗), and the elementary

4Hungarian infinitival clauses pose several more interest-
ing issue to deal with, for example the verb-object agree-
ment between the matrix verb and the object of the infinitive.
For more issues around infinitival clauses in Hungarian see
(Koopman and Szabolcsi, 2000) and (Szécsényi, 2009).

63



tree of the matrix verb (akar ‘wants’) being ad-
joined into the elementary tree of the embedded
verb. The standard LTAG analysis derives straight-
forwardly the structures, in which the matrix verbs
and its arguments are not split. This involves sen-
tences with a stress-bearing control verb with dif-
ferent possible topic/focus structures, e.g.

(9) a. PimT

Pim
fél
like.mod

el-olvasni
VM-read.inf

a
the

levelet.
letter.acc

‘Pim is afraid to read the letter.’

b. A
the

leveletT

letter.acc
PimF

Pim
fél
like.mod

el-olvasni.
VM-read.inf

‘It is Pim, who is afraid to read the letter.’

VP[...][infs=top]

NP↓[nom]

NP

Pim

VP[...][infs=pred]

V

fél

VP∗

VP[...][infs=pred]

VM

el-

V

olvasni

NP↓[acc]

NP

a levelet

VP[...][infs=top]

NP↓[nom]

NP

Pim

VP[...][infs=pred]

V

fél

VP∗

VP[...][infs=top]

NP↓[acc]

NP

a levelet

VP[...][infs=pred]

VM

el-

V

olvasni

Figure 9: Standard LTAG analysis of (9a) and (9b)

The analysis in Figure 9 correctly derives the
structures for stress-bearing verbs (4b), how-
ever this structure is not grammatical for stress-
avoiding verbs as akar ‘want’.

(10) *Pim
Pim

akarja
wants

el-olvasni
VM-read.inf

a
the

levelet.
letter.acc

This structure should be ruled out for stress-
avoiding verbs, but must be derived for stress-
bearing verbs. Furthermore, Hungarian has a num-
ber of control verbs compatible with both VM-
climbing and VM in situ structures. For such verbs
it should be possible to derive both structures .

(11) a. Pim
Pim

szeretne
like.mod

el-olvasni
VM-read.inf

egy
a

levelet.
letter.acc

‘Pim would like to read a book.’

b. Pim
Pim

el
VM

szeretne
like.mod

olvasni
read.inf

egy
the

levelet.
letter.acc

‘Pim would like to read a book.’

In cases of VM-climbing (4a,11b), the tree
of the matrix verb (akar) should split into more
pieces when adjoined to the tree of the embed-
ded verb (el-olvasni). This core problem for the
standard LTAG analysis also arises when the argu-
ments of the two verbs are mixed in the pre-verbal
field of the matrix verb. As shown before, the pre-
ferred position of the topicalized or focused argu-
ment of the infinitive is in the pre-verbal field of
the finite verb, hence arguments of different verbs
can mix. See, for example, the sentence in which
the object of the infinitive is focused and the sub-
ject of the finite verb is topicalized.

(12) Pim
Pim

a
the

LEVELETF

letter.acc
fél
afraid

el-olvasni.
VM-read.inf

‘It is the letter, what Pim is afraid to read.’

The problems of the analysis discussed above
are due to the fact that standard LTAG cannot cap-
ture discontinuity (scrambling, extraposition etc.)
in general (Becker and Rambow, 1990; Becker
et al., 1991). In order to overcome the problems
of our analysis, the use of Multicomponent TAG
[MCTAG] is proposed. MCTAG is a modified
TAG formalism, that allows elementary structures
as set of trees. For natural language grammars
the tree-local MCTAG [TL-MCTAG] (Weir, 1988;
Nesson et al., 2010) is considered, which comes
with the restriction that all trees in the set have to
attach to the same elementary tree. TL-MCTAG
is strongly equivalent to standard LTAG, thus by
using this formalism we can overcome the prob-
lems of scrambling and VM-climbing without los-
ing any of the attractive formal and computational
properties of LTAG.

The first necessary modification of our origi-
nal analysis is the position of the VM. In order to
make VM-climbing possible, we need more struc-
ture below the given VP node, hence the previ-
ously proposed flat structure must be revised.

VP[infs=pred]

VM

el-

VP

V

olvasni

NP↓[acc]

Figure 10: VM-V structure revised

Evidently, the structures with a topical-
ized/focused argument must be revised accord-

64



ingly. Such a structure allows adjunction at the
VP node right above the V, thereby allowing the
VM-V verbal complex to split. This is one of the
necessary conditions for capturing VM-climbing.
However, this is merely the first step. The prob-
lem of the discontinuity of the finite verbs and its
(topicalized) argument is still unresolved. Obvi-
ously, we need to deal with cases, where both the
finite verbs and the embedded infinitive come with
a split structure regarding the arguments and the
verbal modifier. The solution is provided by TL-
MCTAG, taking the elementary structures of the
matrix verbs (akar, fél) as sets of trees.

{ VP[infs=top]

NP↓[nom] VP

,
VP[infs=pred]

V⋄ VP∗

}

Figure 11: Elementary tree set for control verbs

Through this modification of the analysis we
can derive the correct VM-climbing structure of
stress avoiding verbs by allowing the first tree
in the tree set to adjoin at the root VP node of
the infinitival tree, and the second tree at the in-
ner VP node right above the V. However, with
these elementary tree sets we also derive the non-
grammatical structures for both stress-bearing and
stress avoiding verbs. The difference between
these two verb classes relies on their relation with
the prosodical structure of the sentence, that moti-
vates the extension of the analysis by features rep-
resenting stress positions. In Hungarian, the main
stress falls on the left edge of the phonological
phrase, hence in the default VM-V order the VM
bears the main stress, while the V is unstressed.
This is reflected in the elementary trees of verbs,
e.g.:

VP[sp=+,infs=pred]

VM

el-

VP[sp=−]

V

olvasni

NP↓[case=acc]

Figure 12: Features for stress positions

Stress-bearing verbs (fél ‘is afraid’) are marked
for a stress position ([sp=+]) and thereby can only
be adjoined at the root VP node of the tree of the
infinitive. Adjoining at the inner VP node is ruled

out by a feature clash between the footnode of fél
and the target node.

{
VP[infs=top]

NP↓[case=nom] VP[sp=+]

,

VP[sp=+][...]

V

fél

VP∗[...][sp=+]

}

Stress-avoiding verbs (akar ‘want’) are marked
for a non-stress position ([sp=–]) and hereby the
second tree in the set can only be adjoined at the
inner VP node of the tree of the infinitive.

{
VP[infs=top]

NP↓[case=nom] VP[sp=+]

,

VP[sp=−][...]

V

akar

VP∗[...][sp=−]

}

Verbs allowing for both structures come with a
SP feature with an underspecified value, and thus
can be equally derived in both structures.

5 Conclusion

This paper proposes an analysis of the verbal fields
in Hungarian sentences articulation. I discussed
several issues for an LTAG analysis of the in-
formation structure driven syntactic positions in
simple sentences and in infinitival clausal com-
plements. As information structure is the main
device driving sentence articulation, an exten-
sion is proposed for representing different topic–
focus structures. The elementary trees – reflect-
ing the possible structures – are generated by the
meta-grammar, using the eXtensible MetaGram-
mar tool. As shown in the paper, the flexible word
order in Hungarian simple sentences is relatively
easy to capture, generating all possible structures,
while expressing the important generalizations on
the functional positions.

Next to the analysis of the verbal fields in sim-
ple sentences, the paper proposed an analysis of
complex sentences with infinitival clausal com-
ponents. The analysis of Hungarian infinitival
clauses faces a list of interesting issues. It is es-
pecially challenging for standard LTAG, since it
cannot handle discontinuity and scrambling phe-
nomena, caused here by the mixing of the argu-
ments and the verbal modifier of different verbs.
The proposed analysis shows that the challenges
can be overcome by using TL-MCTAG extended
with features to represent stress positions.

65



References

Anne Abeillé and Owen Rambow. 2000. Tree Ad-
joning Grammar: An overview. In Anne Abeillé
and Owen Rambow, editors, Tree Adjoning Gram-
mars: Formalisms, Linguistic Analyses and Process-
ing, pages 1–68. CSLI Publications, Stanford.

Tilman Becker and Owen Rambow. 1990. Formal as-
pects of long distance scrambling. Unpublished Pa-
per.

Tilman Becker, Aravind K. Joshi, and Owen Rambow.
1991. Long-distance scrambling and tree adjoining
grammars. In Proceedings of the 5th meeting of the
European Chapter of the Association for Computa-
tional Linguistics (EACL), Berlin, Germany.

Benoit Crabbé, Denys Duchier, Claire Gardent, Joseph
Le Roux, and Yannick Parmentier. 2013. XMG:
eXtensible MetaGrammar. Computational Linguis-
tics, 39(3).

Katalin É. Kiss. 2005. The Syntax of Hungarian.
Cambridge University Press.

Robert Frank. 2002. Phrase Structure Composi-
tion and Syntactic Dependencies. MIT Press, Cam-
bridge, MA.

Aravind K. Joshi and Yves Schabes. 1997. Tree-
Adjoning Grammars. In G. Rozenberg and A. Salo-
maa, editors, Handbook of Formal Languages, pages
69–123. Springer, Berlin.

Laura Kallmeyer and Rainer Osswald. 2012. An
analysis of directed motion expressions with lexi-
calized tree adjoining grammars and frame seman-
tics. In L. Ong and R. de Queiroz, editors, WoL-
LIC 2012, Lecture Notes in Computer Science LNCS
7456, pages 34–55. Springer.

Laura Kallmeyer and Maribel Romero. 2008. Scope
and situation binding in LTAG using semantic uni-
fication. Research on Language and Computation,
6(1):3–52.

Hilda Koopman and Anna Szabolcsi. 2000. Verbal
Complexes. MIT Press.

Rebecca Nesson, Stuart M. Shieber, and Giorgio Satta.
2010. Complexity, parsing, and factorization of
tree-local multicomponent tree-adjoining grammar.
Computational Linguistics, 36(3):443–480.

Krisztina Szécsényi. 2009. An LF-driven Theory of
Scrambling in Hungarian Infinitival Constructions.
Ph.D. thesis, Szeged University, Hungary.

Robert Van Valin Jr. 2005. Exploring the syntax-
semantics interface. Cambridge University Press.

David J. Weir. 1988. Characterizing Mildly Context-
Sensitive Grammar Formalisms. Ph.D. thesis, Uni-
versity of Pennsylvania.

66


