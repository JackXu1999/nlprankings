



















































Time after Time: Representing Time in Literary Texts


Proceedings of the 3rd Workshop on Computational Linguistics for Literature (CLfL) @ EACL 2014, pages 25–30,
Gothenburg, Sweden, April 27, 2014. c©2014 Association for Computational Linguistics

Time after Time:
Representing Time in Literary Texts

Michael Levison
School of Computing

Queen’s University, Canada
levison@cs.queensu.ca

Greg Lessard
French Studies

Queen’s University, Canada
greg.lessard@queensu.ca

Abstract

The representation of temporal informa-
tion in text represents a significant com-
putational challenge. The problem is par-
ticularly acute in the case of literary texts,
which tend to be massively underspeci-
fied, often relying on a network of seman-
tic relations to establish times and timings.
This paper shows how a model based on
threaded directed acyclic graphs makes it
possible to capture a range of subtle tem-
poral information in this type of text and
argues for an onomasiological approach
which places meaning before form.

1 Time and Text

This paper deals with the representation of tem-
poral phenomena in literary texts. As a result, it
builds on work from a number of fields.1 Thus, it
takes as given the longstanding observation from
philosophy that time is not a simple issue of days,
months and years, but reflects issues of perception
and culture (Ricoeur, 1983). At the same time,
it assumes that the study of temporal phenomena
will be enhanced by use of a formal representation
(Allen, 1984). It further assumes the traditional
narratological distinction between the information
which underlies a text, variously known as the fab-
ula or histoire and which we will henceforth call
the story and some particular instantiation of this
in text, often called the sjuzhet or récit, which we
will henceforth call the narrative (Genette, 1972).

Mani (2010), based on earlier work, suggests
that the temporal relations BEFORE, DURING,
IMMEDIATELY BEFORE, BEGINS, ENDS, SI-
MULTANEOUS AND OVERLAPS are adequate
for representing time in human languages. This
raises the interesting empirical question of how

1In what follows, for lack of space, we restrict ourselves
to citing some typical examples from a vast literature.

well this model applies to literary texts, given their
complex but typically underspecified nature. In
fact, in the case of time, a literary text often gives
no explicit indication of temporal phenomena, but
relies on encyclopedic knowledge available to the
reader. In addition, we might ask how different
temporal relations are distributed across literary
texts, as compared with what is found in exposi-
tory or other types of texts, or simpler narratives.
At the same time, as Lascarides and Asher (1991)
point out, it is important to see temporal relations
as a subset of a broader range of relations includ-
ing Narration, Explanation, Background, and Re-
sult, all of which have temporal implications.

There does exist a growing body of analyses of
narrative texts, but most of these are based on rel-
atively simple third person narratives such as fa-
bles. Such texts tend to be event-driven (one thing
follows another) and they tend to lack more com-
plex literary phenomena such as first person narra-
tive, where all information is not known, multiple,
sometimes competing, perspectives, and signifi-
cant temporal shifts. It will be important to anal-
yse literary texts in their full complexity before
we are capable of pronouncing on the use of time.
This will no doubt be aided by research on nar-
rative generation, such as (Callaway and Lester,
2002), (Riedl and Young, 2012), and (Montfort,
2007), where temporal representations at the ab-
stract level are made use of, but this must be com-
plemented by empirical work on actual texts.

The empirical study of temporal relations in
complex literary texts will be complicated by the
fact that, despite recent progress (for example,
Kolomiyets et al. (2012)), parsers still do not
match the performance of humans in assigning
temporal points and relations. As a result, build-
ing a detailed corpus of literary texts will still take
some time and much human effort. When it is
undertaken, one of the fundamental decisions to
be faced will be what is to be represented. Most

25



work to date takes texts themselves as the object
of tagging, and schemes such as TimeML (Puste-
jovsky et al., 2003) are designed to allow quite
precise temporal information to be added to texts
in the form of markup. As a result, they focus
on phenomena in the narrative rather than in the
story. To put this another way, they adopt a se-
masiological perspective (from form to meaning),
rather than an onomasiological one (from meaning
to form) (Baldinger, 1964). However, it is reason-
able to ask whether the appropriate level of rep-
resentation should in fact be one level up, at the
level of the story. We argue here that this is the
case. Elson (2012) takes a first step in this direc-
tion by mapping the textual layer to a propositional
layer; however, most of the texts he deals with
are relatively simple. We will show below how,
in some complex examples, representing temporal
phenomena at the story level requires at the least
additional ‘machinery’ based on multiple points of
view, temporal shifts including prolepsis, and en-
cyclopedic knowledge, but that it also offers in-
sights into narrative structure not apparent at the
textual level.

2 DAGs and Threading

The story which underlies a literary text may be
represented by means of a directed acyclic graph,
henceforth DAG, composed of nodes connected
by unidirectional edges. The acyclicity requires
that no sequence of edges may return to an earlier
node. The nodes carry segments of meaning repre-
sented by semantic expressions. These are func-
tional representations, described in (Levison et al.,
2012). Each semantic expression is composed of
elements drawn from a semantic lexicon.

A simple example might be stab(brutus,
caesar), where the two entities brutus and
caesar denote certain human beings, and stab
is a function which takes two entities and returns a
completion2 having the obvious meaning. On the
basis of functions such as these, it is possible to
construct the DAG shown in Fig. 1.3

The unidirectional edges between the various
2A completion may be thought of as the semantic equiva-

lent of an utterance, an entity as the semantic equivalent of a
noun, and an action as the semantic equivalent of a verb.

3The DAGs shown here were constructed with yEd
(http://www.yworks.com/en/products_yed_
about.html), which generates a GraphML representation
for each graph. For simplicity, we have ignored represen-
tation of tense and aspect in these examples, although the
formalism permits this.

Figure 1: A DAG for the various states of Caesar

nodes represent semantic dependency, that is, the
fact that subsequent nodes depend upon informa-
tion contained in previous nodes, and by transitive
closure, parents of previous nodes. So, in Fig. 1,
the expression stab(brutus, caesar) de-
pends on the fact that Caesar is at the Senate, while
Caesar being dead depends on the stabbing. The
relation carried by edges may be one of order (one
node occurs before another), or of some sort of
causality, whereby a subsequent node is made pos-
sible by a previous node. In addition, nodes which
convey a coarse level of meaning may themselves
be refined into DAGs at a finer level. And so on,
recursively.

Since a DAG exists prior to any text which rep-
resents it, a text may begin at the start of the DAG
and follow the nodes, as in Caesar arrived at the
Senate, then Brutus stabbed him, then he died, or
alternatively at the end, as in Caesar died because
Brutus stabbed him after his arrival at the Senate,
in the middle, as in Brutus stabbed Caesar after he
arrived at the Senate, and then he died, or even in
a zigzag order, as in Caesar arrived at the Senate
and then died because Brutus stabbed him.4

Each of these narrations may be represented by
a sequence of nodes, in other words, a thread,
showing the order in which the meaning carried
by the nodes is presented to the reader. Note that
the thread passes through some or all of the nodes,
but need not follow the edges of the DAG. Nor is
it constrained to be acyclic: it may visit the same
node more than once. An example of this is pro-
vided by a narration in which the same event is
recounted twice. To take an extreme case, in the
movie Groundhog Day (http://www.imdb.
com/title/tt0107048/), the character Phil
relives the same day and its events many times.

In our DAGs, we represent threads by a dot-

4For more examples, see (Mani, 2012).

26



ted line to distinguish them from the edges of the
DAG. By threading coarse or refined DAGs, the
narration can be at different levels of detail. In ad-
dition, a single DAG may be traversed by multiple
threads representing, among other things, differ-
ent points of view. So, for example, suppose that a
third party, say Livia, finds Caesar’s dead body,
observes the stab wounds, and concludes that a
previously living Caesar has been killed. From the
point of view of the Livia thread, the ‘Caesar is
dead’ node is traversed before the stabbing node
(although from Livia’s point of view, it may not be
clear who has done the stabbing). Alternatively,
a fourth character may observe a stabbing in the
distance, then on approach note that the stabbee is
Caesar, assumed alive until that point, and finally
learn that Caesar is dead.

3 Relative and Absolute Timestamps

Within the DAG model, the simple chronological
ordering of events or activities requires no extra
features except perhaps ‘colouring’ certain edges
to distinguish between those which denote chrono-
logical dependence and those whose dependence
is based on other reasons. Figure 1 above illus-
trates this. However, more complex temporal rela-
tionships such as ‘while’ can be signified by nodes
indicating relative or absolute times, as in:

reltime(7)
{relative time}

exacttime(0900, 5, Mar, 2013)
{exact time}

Consider, for example, the DAG shown in Fig.
2. Here, both event1 and event2 take place af-
ter reltime(7) and before reltime(8).5 If
no other activities take place in the same context,
we might conclude that while event1 was taking
place, event2 was happening elsewhere. Both
events conclude before event4. In addition,
event3 occurs after event1, but it may have
started before or after reltime(8); and there
is no information about its relation to event4.
Additional arguments can be added to specify
whether an event is durative or punctual, be-
cause nothing says that event1 actually began at
reltime(7) and ended at reltime(8). The
function exacttime() allows us to anchor parts
of the DAG at, or more precisely after, specific
moments.

5The parameters to reltime, by the way, are irrelevant;
they are included only for the purposes of this commentary.

Figure 2: A DAG showing relative times and
events

4 Some Empirical Tests of the Formalism

To empirically test the model proposed here, we
will examine several actual texts. Of course, these
represent only a small selection of a vast range
of temporal phenomena. Our object is simply to
show how the proposed model may be applied.

4.1 Prolepsis

As noted earlier, a literary text may bring into play
a variety of perspectives. One of these is pro-
lepsis, or foreknowledge of a future event. Con-
sider the following example from Homer’s Iliad.6

Achilles asks Zeus for success in a battle and that
Patroclus survive the battle. Zeus grants the first
wish, but not the second.7 As a result, he (Zeus)
and by extension, we, as readers, know that Pa-
troclus will die. However Patroclus himself is un-
aware of this. We may represent this part of the
story by means of the DAG shown in Fig. 3, which
contains two sets of dependencies, one which links
Zeus to the decision that Patroclus will die, and the
other which links Patroclus to his fighting and dy-
ing. We may then capture the temporality of the
narrative by threading this DAG.8

An example like this may seem arcane, but
cases of multiple points of view, or multiple
threading, are found in a variety of textual models.
Thus, in a murder mystery, the detective comes
to understand the ordering of particular events, in-
cluding the murder, and may subsequently explain

6This instance of prolepsis is discussed in Grethlein
(2010).

7Iliad, ch. 16, v. 249, http://classics.mit.
edu/Homer/iliad.html.

8Threads are shown here by numbered dotted lines to in-
dicate their order, while dependencies are shown by unnum-
bered solid lines.

27



Figure 3: A DAG for part of the Iliad

this to the reader.

4.2 Parallel Series of Events
Consider the following passage from the Conan
Doyle story entitled The Red-headed League.9

When I saw him that afternoon so
enwrapped in the music at St. James’s
Hall . . . 10

“You want to go home, no doubt,
Doctor,” he remarked as we emerged.

“Yes, it would be as well.”
“And I have some business to do

which will take some hours. . . . to-day
being Saturday rather complicates mat-
ters. I shall want your help to-night.”

“At what time?”
“Ten will be early enough.”
“I shall be at Baker Street at ten.”
. . . It was a quarter-past nine when

I started from home and made my way
. . . to Baker Street. . . . On entering his
room I found Holmes in animated con-
versation with two men, . . .

The text itself provides two absolute times, one
prescriptive, that of the time when Watson is to
meet Holmes, and the other descriptive, the time
reported by Watson for his leaving home. Another
more approximate time is also provided, the fact
that Watson and Holmes are listening to music in
St James’s Hall on a Saturday afternoon. All of
these could be marked up in the text itself. How-
ever, others would provide a greater challenge. On
Watson’s return to meet Holmes, he discovers that

9First published in the Strand magazine in 1891. See
http://www.gutenberg.org/ebooks/1661.

10Several non-pertinent elements of the text have been
elided. These are shown by suspension points.

Figure 4: A DAG for part of the Red-headed
League

others are present, presumably at Holmes’ invita-
tion, although this is not specified in the text it-
self. The chronology of Watson’s activities is pro-
vided only by its placement in the text, between
the conversation with Holmes and the return to
meet Holmes, while the arrival of the others can-
not be marked up at all at the textual level since it
is not even mentioned in the text. Such a model
provides a serious challenge to a semasiological
markup, for obvious reasons. However, it may be
easily represented by a DAG, as shown in Fig. 4.

Note that the nodes of the DAG are all en-
closed in a higher-level node situated on Satur-
day. This ‘envelope’ provides the framework for
the detailed events. However, within this enve-
lope, a branching occurs, separating Watson’s ex-
plicitly noted activities from those which we must
suppose Holmes to have accomplished. The two
series are bracketed between a relative temporal
marker (the moment when Watson and Holmes
leave each other) and an absolute temporal marker
(Watson’s arrival at Holmes’ lodgings around 10).

4.3 Access to Encyclopaedic Information

Reading a text is not a simple activity. Among
other things, it requires a constant reference to
background ‘encyclopaedic’ information. The na-
ture of this information will vary from reader
to reader. As an illustration, consider the fol-
lowing paragraph, which opens Flaubert’s novel
Salammbô.11

11We provide here the English translation from
http://www.gutenberg.org/files/1290/
1290-h/1290-h.htm#link2HCH0001.

28



Figure 5: A DAG for the introduction to
Salammbô

It was at Megara, a suburb of
Carthage, in the gardens of Hamilcar.
The soldiers whom he had commanded
in Sicily were having a great feast to cel-
ebrate the anniversary of the battle of
Eryx, and as the master was away, and
they were numerous, they ate and drank
with perfect freedom.

At the most basic level, any reader may use the
tense (had commanded) and some lexical items
(anniversary) to determine the anteriority of the
battle of Eryx with respect to the feast. However,
more educated readers will probably be able to use
the proper name Carthage to locate the text in the
far past, while even more educated readers will be
able to use the names Hamilcar and Eryx to place
the feast after the period 244-242 BCE.

We may represent the interplay between what
is given by the text and the information available
to the reader (which, importantly, is also repre-
sentable by a DAG) as shown in Fig. 5, where
we see that the node exist(troops...),
represented in the text, depends on the node
command(hamilcar...) also represented in
the text. However, this latter node is a subnode of
the higher-level node describe(hamilcar),
which provides information (including tempo-
ral information) not present in the text. Sim-
ilarly, the node exist(battle...), present
in the text, is part of another higher-level
node (describe(punic-war)), which con-
tains more detailed encyclopaedic information.

This model captures both the temporal elastic-
ity provided by the interplay of logical depen-
dency and the varying levels of temporal assign-
ment noted above. To put this another way, it cap-
tures the set of readings which the same text may
carry for different readers. In particular, different

readings may thread this DAG at different levels
of granularity, some coarse, some finer.

5 Conclusions and Next Steps

Although they are limited to issues of time, the
examples studied above suggest that an onomasi-
ological approach gives access to textual and lit-
erary phenomena which escape tagging of tex-
tual contents alone. While the use of DAGs and
threading currently requires human intervention,
the output of the model, by its formality, provides
a means of studying in detail the instantiation of
stories as narratives, and thereby, a complement to
existing approaches to literary time.

References
James F. Allen. 1984. Towards a general theory of

action and time. Artificial Intelligence, 23:123–154.

Kurt Baldinger. 1964. Sémasiologie et onomasiologie.
Revue de linguistique romane, 28:249–272.

Charles Callaway and James Lester. 2002. Nar-
rative prose generation. Artificial Intelligence,
139(2):213–252.

David K. Elson. 2012. Modeling Narrative Discourse.
PhD thesis, Columbia University.

Gérard Genette. 1972. Figures III. Éditions du Seuil,
Paris.

Jonas Grethlein. 2010. The narrative reconfiguration
of time beyond Ricoeur. Poetics Today, 31(2):313–
329.

Oleksandr Kolomiyets, Steven Bethard and Marie-
France Moens. 2012. Extracting narrative timelines
as temporal dependency structures. In Proceedings
of the 50th Annual Meeting of the Association for
Computational Linguistics (ACL’2012), pp. 88-97.

Alex Lascarides and Nicholas Asher. 1991. Discourse
relations and defeasible knowledge. In Proceedings
of the 29th Annual Meeting of the Association of
Computational Linguistics (ACL91), pp. 55-63.

Michael Levison, Greg Lessard, Craig Thomas, and
Matthew Donald. 2012. The Semantic Representa-
tion of Natural Language. Bloomsbury Publishing,
London.

Inderjeet Mani. 2012. Computational Modeling of
Narrative. Morgan and Claypool, San Rafael, CA.

Inderjeet Mani. 2010. The Imagined Moment: Time,
Narrative and Computation. University of Nebraska
Press, Lincoln, Nebraska.

29



Nick Montfort. 2007. Ordering events in interactive
fiction narratives. In Proceedings of the AAAI Fall
Symposium on Interactive Narrative Technologies.
Technical Report FS-07-05, B.S. Magerki and M.
Riedl, eds., AAAI Press, Menlo Park, CA, pp. 87–
94.

James Pustejovsky, Jose M. Castaño, Robert Ingria,
Roser Saurı́, Robert Gaizauskas, Andrea Setzer, and
Graham Katz. 2003. TimeML: Robust specification
of event and temporal expressions in text. In Fifth
International Workshop on Computational Seman-
tics (IWCS-5).

Paul Ricœur. 1983. Temps et récit. Volume 1. Éditions
du Seuil, Paris.

Mark Riedl and R. Michael Young. 2010. Narrative
planning: balancing plot and character. Journal of
Artificial Intelligence Research, 39:217–268.

30


