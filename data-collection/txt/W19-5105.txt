



















































Learning to Predict Novel Noun-Noun Compounds


Proceedings of the Joint Workshop on Multiword Expressions and WordNet (MWE-WN 2019), pages 30–39
Florence, Italy, August 2, 2019. c©2019 Association for Computational Linguistics

30

Learning to Predict Novel Noun-Noun Compounds

Prajit Dhar
Leiden University

dharp@liacs.leidenuniv.nl

Lonneke van der Plas
University of Malta

lonneke.vanderplas@um.edu.mt

Abstract

We introduce temporally and contextually-
aware models for the novel task of predicting
unseen but plausible concepts, as conveyed by
noun-noun compounds in a time-stamped cor-
pus. We train compositional models on ob-
served compounds, more specifically the com-
posed distributed representations of their con-
stituents across a time-stamped corpus, while
giving it corrupted instances (where head or
modifier are replaced by a random constituent)
as negative evidence. The model captures
generalisations over this data and learns what
combinations give rise to plausible compounds
and which ones do not. After training, we
query the model for the plausibility of auto-
matically generated novel combinations and
verify whether the classifications are accurate.
For our best model, we find that in around 85%
of the cases, the novel compounds generated
are attested in previously unseen data. An ad-
ditional estimated 5% are plausible despite not
being attested in the recent corpus, based on
judgments from independent human raters.

1 Introduction

Compounding is defined as the process of com-
bining two or more lexemes to form a new con-
cept (Bauer, 2017). For most compounds in En-
glish, the first constituent is the modifier, whereas
the second is the head. The head usually deter-
mines the class to which the compound belongs,
whereas the modifier adds specialisation, e.g apple
cake is a type of cake. Compounding is thought
of as one of the simplest forms of concept forma-
tion1 as it involves use of elements that are already
part of the language and requires little or no mor-
phological changes, particularly in English. From
the perspective of language acquisition, Berman

1We avoid the usage of “word formation” due to there be-
ing no consensus on the definitions for both words and com-
pounds (Bauer, 2017, chapter 2).

(2009) found that children acquired compounding
construction skills before the other forms of word
formation.

Comparatively little effort has been put into in-
vestigating the productive word formation process
of compounding computationally. Although com-
pounding is a rather challenging process to model
as it involves concepts of compositionality and
plausibility along with an intricate blend of seman-
tic and syntactic processes, it is, in our view, one of
the best starting points for modeling linguistic cre-
ativity. In contrast to relatively more studied topics
in linguistics creativity, such as automatic poetry
generation (Ghazvininejad et al., 2017), aesthet-
ics are not involved. Moreover, compounding is
limited to phrase level processes, as it involves a
combination of known lexemes.

In general, the creative power of language has
been understudied in the field of natural language
processing (NLP). The main focus is indeed on
processing, as the name suggests. Creative think-
ing is a cognitive ability that fuels innovation.
Therefore, the modelling and understanding of the
underlying processes of novel concept creation
is relevant. Ultimately, we aim to create tools
that enhance peoples ability to interface more cre-
atively with large data sets, to build tools that find
inspiration in data.

Our main contributions are the introduction of
a new task in NLP that sheds light on the ba-
sic mechanisms underlying conceptual creativity;
an automatic way of evaluating newly generated
language; a temporally-aware neural model that
learns what are plausible new conceptual combi-
nations by generalising over attested combinations
and corrupted instances thereof.



31

2 Related Work

The related task of automatic novel compound
detection was introduced by Lapata and Las-
carides (2003). Their aim is to distinguish rare
noun compounds from rare but nonce noun se-
quences. The biggest difference between their
work and ours is that while they identify exist-
ing, albeit rare, and therefore possibly relatively
novel compounds in corpora, we predict unseen,
and therefore novel compounds, in an absolute
sense. Still, the overlap between the tasks makes
the work relevant. In their experiments, sur-
face features, such as the frequency of the com-
pound head/modifier, the likelihood of a word as
a head/modifier, or the surface-grammatical con-
text surrounding a candidate compound perform
almost as well as features that are estimated on
the basis of existing taxonomies such as Word-
Net. Although the semantic features they gath-
ered from WordNet did not do very well, we be-
lieve our distributional semantic features are more
fine-grained. The simple statistical features that
did well in distinguishing rare compounds from
nonce terms, would not be suitable in our scenario,
where we try to generate novel, plausible com-
pounds. We did however, follow their method-
ology for the automatic extraction of noun-noun
compounds from corpora based on their PoS.

Keller and Lapata (2003) obtain frequencies for
unseen bigrams (including noun-noun bigrams) in
corpora using Web search engines and show evi-
dence of the reliability of the web counts for natu-
ral language processing, also by means of studying
the correlation between the web counts and human
plausibility judgments. The unseen bigrams are
generated in a random fashion from corpus data,
as the aim is not to generate plausible combina-
tions, but to overcome data sparseness by provid-
ing counts from Web searches.

Ó Séaghdha (2010) uses topic models for se-
lectional preference induction, and evaluates his
models on the same data as Keller and Lapata
(2003) outperforming previous work. As this work
tries to predict the plausibility of unseen combi-
nations, it is more closely related to our work.
We are, however, first and foremost interested
in the temporal aspect of novel compound cre-
ation, and therefore use a time-stamped corpus and
temporally-aware models. We also use this time-
stamped corpus for evaluation, in addition to hu-
man plausibility judgments.

We find a number of works in the related field of
cognitive science that focus on predicting human
acceptability or plausibility ratings with composi-
tional distributional models. Vecchi et al. (2017)
focus on novel adjective noun-phrases. They show
that the extent to which an adjective alters the dis-
tributional representation of a noun it modifies is
the most significant factor in determining the ac-
ceptability of the phrase. Günther and Marelli
(2016) are also concerned with predicting plausi-
bility ratings, but focus on noun-noun compounds
instead. The main difference between their work
and ours is the fact that our systems are partly neu-
ral and use slightly different features, and aim to
generate novel, plausible compounds that are eval-
uated by checking for their existence in a future
corpus, whereas they check for correlation with
human plausibility ratings on a set of attested and
corrupted compounds. However, their careful in-
vestigation of the different distributional seman-
tic factors in their model have been very insight-
ful for us and they inspired one of our systems.
For example, they found that a higher relatedness
between head and compound is associated with
higher plausibility. And the similarity between
the constituents is associated with a slightly higher
plausibility as well. We used these features in one
of our models as well.

More recently, Marelli et al. (2017) presented
a data-driven computational system for com-
pound semantic processing based on composi-
tional distributional semantics and evaluate the
model against behavioral results concerning the
processing of novel compounds. They find that
the phenomena of relational priming and relational
dominance are captured by the compositional dis-
tributional semantic models (cDSMs), whose pre-
dictions pattern nicely with the results from the be-
havioral experiments. Although this work proves
that the cDSM is psychologically real when it
comes to processing novel compounds, and we
find inspiration in the architecture of their model,
their work is mainly aimed at modelling com-
pound processing, whereas we are focusing on
compound prediction.

For the architecture of our model, we were
mainly inspired by Van de Cruys (2014). The
problem we are focusing on has many similar-
ities with the task that their paper focuses on:
predicting selectional preferences for unseen data.
We adopted the architecture of the neural network



32

from this paper as well as the method to gener-
ate negative data for training purposes, originally
proposed by Collobert and Weston (2008). Apart
from the difference in the task we are trying to ad-
dress, the main differences between their work and
ours is the fact that we are adding a temporal as-
pect to the neural networks.

3 Novel Compound Prediction

In this paper, we address the task of novel com-
pound prediction. Three models are created that
use count-based distributed word representations
of known compound constituents to predict un-
seen, but plausible compounds.

3.1 Intuitions and evaluation

In particular, we address the task of predicting
novel noun-noun (N-N) compounds: compounds
consisting of two constituents that are both nouns.
Our method is based on the generalisation power
of machine learning. We reason that by compress-
ing the space in ways that are in line with distribu-
tional patterns found in observed data, estimates
for unobserved yet plausible combinations should
be close to the estimates gathered from attested
examples. For example, if we have seen glass-
bottom boats in corpora, but we have never seen
the combination glass canoe (a recent invention),
we can infer from the similarity between the com-
ponents of the compounds that a glass canoe could
be a plausible compound even though it has never
been seen.

Evaluating plausibility prediction models for
novel combinations is non-trivial and previous
work has relied mainly on human judgments
(Günther and Marelli, 2016). We aim to find an au-
tomatic evaluation method to ease parameter opti-
misation and model comparison. To this end, we
use a time-stamped corpus divided into decades.
The last decade is used for testing, with the previ-
ous decades used for training the models. This al-
lows us to check whether the novel generated com-
pounds are good predictions of compounds that
might emerge in the future. Because the future ex-
tends beyond the last decade of our corpus, and
the results from our automatic evaluation are pes-
simistic, we ask human judges to rate the plausi-
bility of a sample of automatically generated novel
compounds that are not attested in the last decade
(see Sections 7 and 9).

3.2 Two Aspects for Compounding
We hypothesise that in order to computationally
model the phenomenon of compounding, we need
our models to be both contextually-aware and
temporally-aware, which we explain in detail in
the subsequent section.

3.2.1 The Contextual Aspect
Psycholinguistic research on N-N compounds in
Dutch that seemed to suggest that constituents
such as -molen ‘-mill’ in pepermolen ‘peppermill’
are separately stored as abstract combinatorial
structures rather than processed on-line and
understood on the basis of their independent
constituents: molen ‘mill’ (De Jong et al., 2002).
For English open compounds, a similar effect
was found for the right constituent. To test if
this phenomenon has an effect in the process
of generating novel compounds, we decided to
experiment with two types of contextual contexts:
CompoundCentric and CompoundAgnostic.

CompoundAgnostic: These are the standard
window-based contexts used in vector-based rep-
resentations of words. We capture the distribu-
tional vectors of the words, irrespective of whether
lexemes are found as constituents of a compound
or as simple standalone words (see Figure 1b).

CompoundCentric: To the best of our knowl-
edge, distributional models that are sensitive to
the role a lexeme plays in a compound have not
been tested before. Here we capture the distri-
butional vectors of words based on their usage
as constituents in a compound. So the word mill
would have different representations, depending
on its role in a compound. In Figure 1a, we show
an example context that mill gets as a head, and an
example context it gets as a modifier.

3.2.2 The Temporal Aspect
Previous works such as Hamilton et al. (2016)
have shown that meanings of certain words change
over time. The same can be observed for com-
pounds such as melting pot. The meaning of melt-
ing pot deviated from its original meaning (”A
blast furnace”) to its current meaning, that of a so-
ciety where people from many different cultures
are living together, and assimilating into a cohe-
sive whole. To test if time does impact our task,
we envision two settings for our models:

DecadeCentric: In this setting, we empha-
sise the temporal aspect by collecting counts of



33

Head context

context

The red pepper︸ ︷︷ ︸
Modifier

mill︸︷︷︸
Head

context

is on the shelf .

Modifier context

context

The new mill︸︷︷︸
Modifier

context

stone︸ ︷︷ ︸
Head

has started .

(a)

context

The hugemill︸︷︷︸
Word

context

is at the lake .

context

The red peppermill︸︷︷︸
Word

context

is on the shelf .

context

The newmill︸︷︷︸
Word

context

stone has started .

(b)

Figure 1: Contexts for (a) CompoundCentric and (b) CompoundAgnostic aspects

individual compounds and their constituents per
decade. We reason that knowing about the us-
age trend of the constituents of a compound might
help to predict which constituents will be com-
bined next. For example, if a certain word is trend-
ing, you would expect it to crop up in novel com-
binations.

DecadeAgnostic: To test if our intuition about
the temporal aspect indeed holds true, we also col-
lect the counts of the individual compounds and
their constituents without any temporal informa-
tion.

4 System Overview

Figure 2 shows the system overview for our two
main models. The two aspects explained in the
previous section are clearly visible as distinct
routes in the system overview. From the Google
Ngram Corpus (Michel et al., 2010), distribu-
tional vectors that are either CompoundAgnostic
or CompoundCentric are collected2. The counts
are either collected per decade (DecadeCentric)
or without any temporal information (DecadeAg-
nostic). The vectors then undergo dimensional-
ity reduction (to 300 dimensions) using singular-
value decomposition (SVD), after which they are
either directly input to our two semantic mod-
els (DecadeAgnostic), or passed through a Long
short-term memory (LSTM) model (DecadeCen-
tric) before they are input to the two semantic
models. The reason for doing so is that it makes
it easier to compare the models for each aspect.
The LSTM we use takes a sequence of constituents
representations for each decade as input and re-

2Even though the CompoundAgnostic aspect returns
phrases and words instead of actual compounds and con-
stituents, respectively, we refer to them as same for simplic-
ity.

Google Ngram Corpus

Phrases 
 

Words 

Compounds 
Heads 

Modifiers 

CompoundAgnostic CompoundCentric

SVD

LSTM

DecadeCentric

Dense
Constituent
Embeddings

DecadeAgnostic

DSM NNM

Figure 2: System Overview for the DSM and NNM
models



34

turns a single representation for the constituent
that ideally encompasses its entire history. In the
following subsections, we will provide more de-
tails on the data processing we performed.

5 Data

We will describe how we collected our data, pre-
processed it and how we generated negative data
for the classifier.

5.1 Data Collection

We constructed four different datasets based on the
aforementioned aspects from the Google Books
Ngram corpus (Michel et al., 2010). This corpus
describes the usage of words and phrases over a
period of five centuries. Information of around
6% of all books in eight languages was gathered
using Optical Character Recognition (OCR). For
our study, we focused on the extraction of English
unigrams and bigrams from the corpus and on 20
decades (1800s to 1990s), with the final decade
(2000s) only used to collect the newly generated
compounds. The corpus was tagged using a Con-
ditional Random Field (CRF) based tagger (Laf-
ferty et al., 2001), which has an error rate of 1-5%.
The universal PoS tagset (Petrov et al., 2011) was
used to perform the PoS tagging.

5.2 Data Pre-processing

Similar to Lapata and Lascarides (2003), we made
sure that our compounds are not surrounded by
nouns, in order to avoid extracting parts of com-
pounds that have more than two constituents.
Also, constituents and compounds containing non-
alphabetic characters are excluded from the exper-
iments. For each compound and its constituents, a
context window of 3 words is used (i.e. 3 words on
either side of the target word), in order to retrieve
their distributional representations. We were ini-
tially limited to a 2-word context window size due
to the nature of the Google Ngram 5-gram cor-
pus. However with the use of a sliding window
approach, this was increased to a window size of
3. A bigram (say the compound water cycle) could
occur in four different positions in the 5-grams (1-
2, 2-3, 3-4 and finally 4-5). The contexts for each
of these positions is then captured.

We only consider the top 50k most commonly
occurring nouns, adjectives, verbs and adverbs to
be candidate contexts. Finally, the heads are lem-
matised and converted to lowercase. A compound

is considered to be novel if it only exists in the fi-
nal decade (the 2000s) and has a frequency count
of atleast 3. We chose the cut off count of 3, so as
to capture most rare and plausible compounds but
at the same time eliminate hapax legomena (terms
that occur only once).

5.3 Negative Data Generation
In order to train the classifiers for the task of pre-
dicting plausible novel compounds, we need both
positive and negative data. The positive class
for our models is comprised of the modifier and
head of compounds that were newly created in the
decade of the 2000s. Note that the decade 2000s is
not used for our training purposes, but only used
to extract the positive examples. In the absence
of an attested negative class, i.e. compounds that
are implausible, we used the strategy from Col-
lobert and Weston (2008) to generate our own neg-
ative class. This class is made up of corrupt tuples,
that are constructed by randomly replacing one of
the constituents in the tuple (m,h) with a corre-
sponding constituent (heads are replaced by heads
and modifiers by modifiers) from another attested
compound.

We then have two scenarios: the CorruptHead
and the CorruptModifier scenarios. For a Cor-
ruptHead scenario, the head h is replaced by ran-
domly selected head h′ with the modifier remain-
ing the same. Similarly, for a CorruptModifier
scenario, we replace the modifier m with m′ (see
Table 1).

Disambiguation Task The models have the task
of disambiguating the attested tuples from their
corrupted counterparts. The purpose of allowing
these two scenarios is to test whether corrupting
the head leads to better negative data points, than
corrupting the modifier. We also make sure that
none of the corrupted tuples from the aforemen-
tioned procedures results in the generation of a
novel or a previously existing compound.

6 Semantic Models

In Figure 2, we show that the distributional vec-
tors, be they CompoundAgnostic or not and be
they DecadeAgnostic or not are fed into two dis-
tinct semantic models. Note that at this point the
distributional vectors are turned into dense repre-
sentations. We experimented with one additional
model, the Distributional Feature Model (DFM),
that uses sparse embeddings for constructing its



35

CorruptHead Novel Compound CorruptModifier
m h′ m h m′ h

water fox water absorption blanket absorption
pitch minister ← pitch accent → cement accent
gene psychiatry gene sequence dolphin sequence

Table 1: Generation of negative examples using the CorruptHead and CorruptModifier scenarios

features. The other two models: the Distribu-
tional Semantic Models (DSM) and Neural Net-
work Model (NNM) use dense embeddings. 3

6.1 Distributional Feature Models

In the DFM, for each compound, distributional
semantic features are constructed. The raw fre-
quency counts were used to construct the features
as weighting measures such as PPMI worsened the
final results. The first three are adopted from In-
formation Theory and commonly used to find col-
locations between words (for more detail see Man-
ning and Schütze (1999)) -

1. Positive Pointwise Mutual Information
PPMI: A variation of the Pointwise Mutual
Information (PMI) where the negative PMI
values are replaced by 0’s. PPMI is preferred
over PMI as it has been shown to outperform
PMI on semantic similarity tasks (Bullinaria
and Levy, 2007). The PPMI for a compound
comp and its two constituents m and h is
defined as

PPMI(comp) = max(log2
P (comp)

P (m)P (h)
, 0),

(1)
where P (comp) is the probability of both m
and h occurring together (i.e. the compound
itself).

2. Log likelihood-ratio LLR: PPMI scores are
biased towards rare collocations as they as-
sign rare words with rather high PMI val-
ues. To overcome this bias and to incorporate
the frequency counts of the constituents, the
log likelihood ratio is used as another feature,
similar to Lyse and Andersen (2012).

3. Local Mutual Information LMI: It is another
metric that tries to overcome the bias of

3All the implementation details are provided in
the GitHub repository https://github.com/
prajitdhar/Compounding.

PPMI and does so by comparing the proba-
bility of observing m and h together with the
probability of observing the two by chance:

LMI(comp) = P (m) · P (h) · P (comp)
P (m)P (h)

(2)

The three features below relate to the calcula-
tion of the similarity between the three com-
ponents of the compound. The similarity be-
tween any two target words is defined by the
cosine similarity between their vectors.

4. Similarity between the Compound and its
Constituents sim-with-head and sim-with-
mod: The similarity between a compound
comp and a constituent c is defined as:

cos(−−−→comp,−→c ) =
−−−→comp · −→c
‖−−−→comp‖‖−→c ‖

, (3)

where −−−→comp and −→c are the vector represen-
tation of comp and c, respectively.

5. Similarity between the Constituents: The
similarity between the constituents of a com-
pound is computed as well. Günther and
Marelli (2016) and Lynott and Ramscar
(2001) have found this score to be useful in
discerning plausible compounds. Formally,
the similarity between a modifier mod and a
head head is defined as:

cos(
−−→
mod,

−−→
head) =

−−→
mod ·

−−→
head

‖
−−→
mod‖‖

−−→
head‖

, (4)

where
−−→
mod and

−−→
head are the vector represen-

tation of mod and head, respectively.

Finally to retrieve the features for the constituents,
the distributional features of the compounds are

https://github.com/prajitdhar/Compounding.
https://github.com/prajitdhar/Compounding.


36

averaged. We also collect the standard devia-
tion of each feature, so as to get the best ap-
proximation of the distribution of the original val-
ues. The 6 constituent features (and 120 for the
DecadeCentric aspect as there are 20 decades) are
then concatenated to represent the compound. So
in total, we have 12 features (and 240 for the
DecadeCentric aspect) as input to the DFM, which
uses the stochastic gradient boosting model (XG-
Boost, Chen and Guestrin, 2016) to perform the
supervised learning. The tree-based models were
trained using logistic regression as the loss func-
tion. The following parameters were then tuned
and set as follows : learning rate = 0.1, maximum
tree depth = 3, number of estimators = 100, mini-
mum child weight = 6, sub-sample ratio = 0.5, γ =
0, α = 0.05 and β = 1.

6.2 Neural Network Model

As shown by Van de Cruys (2014) and Tsubaki
et al. (2016), neural networks have been shown to
be successful in composing a representation of a
phrase or sentence. Since we expect our novel
compounds to be compositional in nature, i.e.
its representation could be derived from its con-
stituents’ representations, a compositional neural
network should be able to discriminate between
plausible candidate compounds and their nonsen-
sical counterparts.

A candidate compound is represented by its
modifier and head:

x = [im, jh], (5)

where i and j are the vectors representations of
the modifier m and head h, respectively, and the
resultant composed vector x serves as the input to
the neural network.The vector x is then the input
to the NNM.

The architecture of the NNM is similar to the
two-way selectional preferences model from Van
der Cruys (2014) and it comprises of a feed-
forward neural network with one hidden layer as
shown in Figure 3.

An element-wise activation function rectified
linear unit (ReLU ) is used in the hidden layer:

a = f(W1x+ b1), (6)

where a is the activation function of the hidden
layer with H nodes, f(.) performs an element-
wise ReLU function and W1 and b1 are the

im

jh

x

W1

W2

a

y

Plausible

Not Plausible

Figure 3: Architecture of NNM

weights and bias of the first layer, respectively. In
the end, NNM generates a plausibility score y:

y =W2 a, (7)

where W2 is the weight matrix for the final layer.
The neural network was trained for 50 epochs with
stochastic gradient descent (SGD) used for opti-
mization. A batch size of 100 was chosen and the
hidden layer was set to H = 300 nodes.

6.3 Distributional Semantic Models
In order to discern if a compositional neural net-
work is indeed required for our disambiguation
task, we also implement Distributional Semantic
Models (DSMs) as a baseline. Since both models
(DSMs and NNM) would be using the same con-
stituent embeddings for all four aspects, the final
results would help us answer this question. Sim-
ilar to DFM, we concatenate the constituent fea-
tures (here embeddings) which are then taken as
input to a gradient boosting model, to predict the
plausibility.

7 System Evaluation

We evaluate our overall system in two ways: on
the basis of corpus data, and by means of human
judges, which we cover in Section 9.

For the automatic evaluation of our system, we
measure how many of the compounds it predicts
are attested among the previously unseen com-
pounds in the last decade, the 2000s. The 20
decades prior to the 2000s (1800s to 1990s) are
used to train the models. The constituents that ex-
ist only in the decade of the 2000s are therefore
excluded from the training phase. This way we
make sure that the prediction of novel entities is



37

dependent only on information derived from the
prior decades.

8 Results on Corpus Data

Since all the datasets were equally balanced, we
only report the accuracy scores for each of the
models. We control the randomness of the nega-
tive data generation and run all our semantic mod-
els using 10 different datasets. Each of these
datasets consists of the same attested novel com-
pounds, along with a different negative class. The
results of all the models in our experiments are
shown in Table 2.

The NNM produces by far the best results. It
attains an accuracy of 85% when the Compound-
Centric and DecadeCentric aspects are observed
and the heads are corrupted (CorruptHead) in or-
der to generate negative data. This means that for
85% of the compounds generated, the model is
able to correctly classify the compound as plau-
sible or implausible. The accuracy in this case is
solely determined by the fact that the novel com-
pound is found in the last decade (that is excluded
from training). We will show in a separate evalua-
tion (see Section 9) with human judges that this
score, although already quite impressive is pes-
simistic, because some of the novel compounds
predicted by the model are not found in the last
decade, but still plausible, according to human
judges.

Furthermore, the following observations can be
made :

Overall, the models that are sensitive to the tem-
poral aspect (DecadeCentric), outperform models
that do not take the temporal aspect into account
(DecadeAgnostic). This underlines our hypothesis
that the temporal aspect is crucial when modelling
the process of compounding.

Also, our hypothesis that distributional mod-
els should be sensitive to the fact that lexemes as
part of a compound differ in meaning from lex-
emes that appear as standalone words seems to
hold true. In general, models that observe the
CompoundCentric aspect, perform better. Lastly,
corrupting the head to generate negative evidence
seems a better alternative than corrupting the mod-
ifier. This is to be expected as the head determines
most of the compound’s meaning. Replacing the
head with another head has a higher probability
of generating an implausible compound than re-
placing the modifier. Implausible compounds are

needed to generate negative evidence.

9 Human Evaluation

Evaluation on corpus data does not guarantee full
coverage. In other words, if a novel compound
generated by the system is not found in the con-
temporary corpus this does not mean per se that
the compound is not plausible. The compound
might be plausible but not yet ’invented’. We
therefore also ran a small-scale manual annotation.

Taking our best model, which was NNM un-
der CompoundCentric and DecadeCentric aspects,
a subset of plausible compounds that were pre-
dicted by our system (but not found in test corpus
and hence counted as incorrect) were annotated by
human judges. Following the annotation guide-
lines of Graves et al. (2013), each annotator was
asked to rate each candidate compound between 0
(makes no sense) and 4 (makes complete sense).
250 plausible compounds were annotated in total.

Each candidate compound was evaluated by at
least three annotaters. Table 3 shows some of the
annotation results. We see that compounds such as
art direction and service ramp, that are predicted
by the system, but not found in the decades 2000s,
is deemed plausible by the annotators. In fact, we
found that around 5% of the test data set was rated
3 or higher, on average, by the annotators, indicat-
ing that we cannot just rely on a corpora for the
evaluation of the novel compound predictor, and
that the accuracies given in Table 2 are pessimistic.

10 Conclusions and Future Work

We propose a method for the task of novel com-
pound prediction. We show that this task can
be modeled computationally, and that our mod-
els need to be both temporally and contextually
aware, in order to properly model compounding.
The evaluation method we proposed that uses a
contemporary corpus to evaluate the novel com-
pound predicted, provides an objective and cheap
alternative to evaluation with human judges. In a
separate evaluation, we show that the latter pro-
vide more optimistic results.

Although previous work has shown correlations
between human plausibility judgments on unseen
bigrams and frequencies in larger corpora (Keller
and Lapata, 2003), we would like to study the
correlation between human plausibility judgments
and occurrence in the last decade, to rigorously
test the viability of the evaluation method. We



38

DecadeCentric
CompoundCentric CompoundAgnostic

Model CorruptHead CorruptMod CorruptHead CorruptMod

DFM 71.57± 0.31 68.76± 0.2 70.95± 0.35 69.29± 0.36
DSM 68.18± 0.33 64.77± 0.26 67.05± 0.71 64.03± 0.35
NNM 84.69± 0.33 84.55± 0.46 74.32± 0.63 76.48± 0.56

DecadeAgnostic
CompoundCentric CompoundAgnostic

Model CorruptHead CorruptMod CorruptHead CorruptMod

DFM 69.17± 0.24 66.69± 0.25 69.67± 0.39 67.33± 0.27
DSM 68.26± 0.43 65.04± 0.34 67.52± 0.58 65.04± 0.34
NNM 82.92± 0.2 82.54± 0.4 72.38± 0.92 75.02± 0.57

Table 2: Results of the Semantic Models, represented with accuracy and the standard deviation

Compound Plausibility rating

Service ramp 4
Art direction 3.34
Resource companion 2
Funeral fish 0

Table 3: Human evaluations (average plausibility rat-
ings) for compounds that are non-attested in corpus

would also like to take the graded nature of the
plausibility judgments into account when evaluat-
ing our models.

In addition, we would like to experiment with
other models such as cDSMs and other neural net-
work architectures. Our current system uses a
rather simple LSTM architecture to encode tem-
poral information into one representation, and
prior tests have shown that enhanced neural net-
work architectures such as Schuster and Paliwal
(1997) and Raffel and Ellis (2015) that use bidirec-
tional LSTMS and attention-based networks, re-
spectively, are better at encoding representation.

Lastly, would like to cover a more diverse set of
compounds in future work. Our experiments are
currently limited to collecting N-N compounds.
In subsequent experiments, we aim to add closed
compounds and compounds separated by a hy-
phen, as well as compounds that are composed of
other parts of speech, such as adjective-noun com-
pounds.

Acknowledgements

We would like to thank the anonymous review-
ers for their valuable comments and also thank Ja-

nis Pagel for providing feedback towards the later
stages of this research.

References
Laurie Bauer. 2017. Compounds and Compounding.

Cambridge Studies in Linguistics. Cambridge Uni-
versity Press.

Ruth Berman. 2009. Children’s acquisition of com-
pound constructions. In R. Lieber and P. Stekauer,
editors, Handbook of Compounding, pages 298–
322. Oxford University Press.

John A. Bullinaria and Joseph P. Levy. 2007. Ex-
tracting semantic representations from word co-
occurrence statistics: A computational study. Be-
havior Research Methods, 39(3):510–526.

Tianqi Chen and Carlos Guestrin. 2016. XGBoost: A
scalable tree boosting system. In Proceedings of the
22nd ACM SIGKDD International Conference on
Knowledge Discovery and Data Mining, KDD ’16,
pages 785–794, New York, NY, USA. ACM.

Ronan Collobert and Jason Weston. 2008. A unified
architecture for natural language processing: Deep
neural networks with multitask learning. In Pro-
ceedings of the 25th International Conference on
Machine Learning, ICML ’08, pages 160–167, New
York, NY, USA. ACM.

Tim Van de Cruys. 2014. A neural network approach
to selectional preference acquisition. In Proceed-
ings of the 2014 Conference on Empirical Methods
in Natural Language Processing, EMNLP 2014, Oc-
tober 25-29, 2014, Doha, Qatar, A meeting of SIG-
DAT, a Special Interest Group of the ACL, pages 26–
35.

Nivja H. De Jong, Laurie B. Feldman, Robert
Schreuder, Matthew Pastizzo, and R. Harald
Baayen. 2002. The processing and representation of

https://doi.org/10.1017/9781108235679
https://doi.org/10.3758/BF03193020
https://doi.org/10.3758/BF03193020
https://doi.org/10.3758/BF03193020
https://doi.org/10.1145/2939672.2939785
https://doi.org/10.1145/2939672.2939785
https://doi.org/10.1145/1390156.1390177
https://doi.org/10.1145/1390156.1390177
https://doi.org/10.1145/1390156.1390177
http://aclweb.org/anthology/D/D14/D14-1004.pdf
http://aclweb.org/anthology/D/D14/D14-1004.pdf


39

dutch and english compounds: peripheral morpho-
logical and central orthographic effects. Brain and
Language, 81:555–67.

Marjan Ghazvininejad, Xing Shi, Jay Priyadarshi, and
Kevin Knight. 2017. Hafez: an interactive poetry
generation system. In Proceedings of ACL 2017,
System Demonstrations, pages 43–48, Vancouver,
Canada. Association for Computational Linguistics.

William W. Graves, Jeffrey R. Binder, and Mark S. Sei-
denberg. 2013. Noun–noun combination: Meaning-
fulness ratings and lexical statistics for 2,160 word
pairs. Behavior Research Methods, 45(2):463–469.

Fritz Günther and Marco Marelli. 2016. Understanding
Karma Police: The Perceived Plausibility of Noun
Compounds as Predicted by Distributional Models
of Semantic Representation. PLoS ONE, 11(10):1–
36.

William L. Hamilton, Jure Leskovec, and Dan Jurafsky.
2016. Diachronic word embeddings reveal statisti-
cal laws of semantic change. In Proceedings of the
54th Annual Meeting of the Association for Compu-
tational Linguistics (Volume 1: Long Papers), pages
1489–1501. Association for Computational Linguis-
tics.

Frank Keller and Mirella Lapata. 2003. Using the web
to obtain frequencies for unseen bigrams. Coputa-
tional Linguistics, 29(3):459–484.

John D. Lafferty, Andrew McCallum, and Fernando
C. N. Pereira. 2001. Conditional random fields:
Probabilistic models for segmenting and labeling se-
quence data. In Proceedings of the Eighteenth Inter-
national Conference on Machine Learning, ICML
’01, pages 282–289, San Francisco, CA, USA. Mor-
gan Kaufmann Publishers Inc.

Mirella Lapata and Alex Lascarides. 2003. Detecting
novel compounds: The role of distributional evi-
dence. In Proceedings of the Tenth Conference on
European Chapter of the Association for Computa-
tional Linguistics - Volume 1, EACL ’03, pages 235–
242, Stroudsburg, PA, USA. Association for Com-
putational Linguistics.

Dermot Lynott and Michael Ramscar. 2001. Can we
model conceptual combination using distributional
information? In Proceedings of the 12th Irish Con-
ference on Artificial Intelligence and Cognitive Sci-
ence, pages 1–10.

Gunn Inger Lyse and Gisle Andersen. 2012. Colloca-
tions and statistical analysis of n-grams: Multiword
expressions in newspaper text. Exploring newspa-
per language: Using the web to create and inves-
tigate a large corpus of modern Norwegian,, pages
79–110.

Christopher D. Manning and Hinrich Schütze. 1999.
Foundations of Statistical Natural Language Pro-
cessing. MIT Press, Cambridge, MA, USA.

Marco Marelli, Christina L. Gagn, and Thomas L.
Spalding. 2017. Compounding as Abstract Oper-
ation in Semantic Space: Investigating relational
effects through a large-scale, data-driven computa-
tional model. Cognition, 166:207–224.

Jean-Baptiste Michel, Yuan Kui Shen, Aviva Presser
Aiden, Adrian Veres, Matthew K. Gray, The
Google Books Team, Joseph P. Pickett, Dale Hol-
berg, Dan Clancy, Peter Norvig, Jon Orwant, Steven
Pinker, Martin A. Nowak, and Erez Lieberman
Aiden. 2010. Quantitative analysis of culture using
millions of digitized books. Science.

Diarmuid Ó Séaghdha. 2010. Latent variable mod-
els of selectional preference. In Proceedings of the
48th Annual Meeting of the Association for Compu-
tational Linguistics, pages 435–444, Uppsala, Swe-
den. Association for Computational Linguistics.

Slav Petrov, Dipanjan Das, and Ryan T. McDonald.
2011. A universal part-of-speech tagset. CoRR,
abs/1104.2086.

Colin Raffel and Daniel P. W. Ellis. 2015. Feed-
forward networks with attention can solve
some long-term memory problems. CoRR,
abs/1512.08756.

Mike Schuster and Kuldip K. Paliwal. 1997. Bidirec-
tional recurrent neural networks. IEEE Trans. Sig-
nal Processing, 45:2673–2681.

Masashi Tsubaki, Kevin Duh, Masashi Shimbo, and
Yuji Matsumoto. 2016. Non-linear similarity learn-
ing for compositionality. In Proceedings of the
Thirtieth AAAI Conference on Artificial Intelligence,
AAAI’16, pages 2828–2834. AAAI Press.

Eva Maria Vecchi, Marco Marelli, Roberto Zampar-
elli, and Marco Baroni. 2017. Spicy adjectives and
nominal donkeys: Capturing semantic deviance us-
ing compositionality in distributional spaces. Cog-
nitive Science, 41(1):102–136.

https://www.aclweb.org/anthology/P17-4008
https://www.aclweb.org/anthology/P17-4008
https://doi.org/10.3758/s13428-012-0256-3
https://doi.org/10.3758/s13428-012-0256-3
https://doi.org/10.3758/s13428-012-0256-3
https://doi.org/10.18653/v1/P16-1141
https://doi.org/10.18653/v1/P16-1141
http://dl.acm.org/citation.cfm?id=645530.655813
http://dl.acm.org/citation.cfm?id=645530.655813
http://dl.acm.org/citation.cfm?id=645530.655813
https://doi.org/10.3115/1067807.1067839
https://doi.org/10.3115/1067807.1067839
https://doi.org/10.3115/1067807.1067839
http://www.sciencemag.org/content/331/6014/176.full
http://www.sciencemag.org/content/331/6014/176.full
https://www.aclweb.org/anthology/P10-1045
https://www.aclweb.org/anthology/P10-1045
http://arxiv.org/abs/1104.2086
http://arxiv.org/abs/1512.08756
http://arxiv.org/abs/1512.08756
http://arxiv.org/abs/1512.08756
http://dl.acm.org/citation.cfm?id=3016100.3016297
http://dl.acm.org/citation.cfm?id=3016100.3016297
http://dblp.uni-trier.de/db/journals/cogsci/cogsci41.html#VecchiMZB17
http://dblp.uni-trier.de/db/journals/cogsci/cogsci41.html#VecchiMZB17
http://dblp.uni-trier.de/db/journals/cogsci/cogsci41.html#VecchiMZB17

