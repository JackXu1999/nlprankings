



















































Few-Shot Representation Learning for Out-Of-Vocabulary Words


Proceedings of the 57th Annual Meeting of the Association for Computational Linguistics, pages 4102–4112
Florence, Italy, July 28 - August 2, 2019. c©2019 Association for Computational Linguistics

4102

Few-Shot Representation Learning for Out-Of-Vocabulary Words

Ziniu Hu, Ting Chen, Kai-Wei Chang, Yizhou Sun
University of California, Los Angeles

{bull, tingchen, kwchang, yzsun}@cs.ucla.edu

Abstract

Existing approaches for learning word embed-
dings often assume there are sufficient occur-
rences for each word in the corpus, such that
the representation of words can be accurately
estimated from their contexts. However, in
real-world scenarios, out-of-vocabulary (a.k.a.
OOV) words that do not appear in training cor-
pus emerge frequently. It is challenging to
learn accurate representations of these words
with only a few observations. In this pa-
per, we formulate the learning of OOV em-
beddings as a few-shot regression problem,
and address it by training a representation
function to predict the oracle embedding vec-
tor (defined as embedding trained with abun-
dant observations) based on limited observa-
tions. Specifically, we propose a novel hier-
archical attention-based architecture to serve
as the neural regression function, with which
the context information of a word is encoded
and aggregated from K observations. Fur-
thermore, our approach can leverage Model-
Agnostic Meta-Learning (MAML) for adapt-
ing the learned model to the new corpus fast
and robustly. Experiments show that the pro-
posed approach significantly outperforms ex-
isting methods in constructing accurate em-
beddings for OOV words, and improves down-
stream tasks where these embeddings are uti-
lized.

1 Introduction

Distributional word embedding models aim to
assign each word a low-dimensional vector rep-
resenting its semantic meaning. These embed-
ding models have been used as key components
in natural language processing systems. To learn
such embeddings, existing approaches such as
skip-gram models (Mikolov et al., 2013) resort to
an auxiliary task of predicting the context words
(words surround the target word). These embed-

dings have shown to be able to capture syntactic
and semantic relations between words.

Despite the success, an essential issue arises:
most existing embedding techniques assume the
availability of abundant observations of each word
in the training corpus. When a word occurs only
a few times during training (i.e., in the few-shot
setting), the corresponding embedding vector is
not accurate (Cohn et al., 2017). In the extreme
case, some words are not observed when train-
ing the embedding, which are known as out-of-
vocabulary (OOV) words. These words are often
rare and might only occurred for a few times in
the testing corpus. Therefore, the insufficient ob-
servations hinder the existing context-based word
embedding models to infer accurate OOV embed-
dings. This leads us to the following research
problem: How can we learn accurate embedding
vectors for OOV words during the inference time
by observing their usages for only a few times?

Existing approaches for dealing with OOV
words can be categorized into two groups. The
first group of methods derives embedding vectors
of OOV words based on their morphological infor-
mation (Bojanowski et al., 2017; Kim et al., 2016;
Pinter et al., 2017). This type of approaches has
a limitation when the meaning of words cannot
be inferred from its subunits (e.g., names, such
as Vladimir). The second group of approaches
attempts to learn to embed an OOV word from
a few examples. In a prior study (Cohn et al.,
2017; Herbelot and Baroni, 2017), these demon-
strating examples are treated as a small corpus and
are used to fine-tune OOV embeddings. Unfortu-
nately, fine-tuning with just a few examples usu-
ally leads to overfitting. In another work (Khodak
et al., 2018), a simple linear function is used to
infer embedding of an OOV word by aggregating
embeddings of its context words in the examples.
However, the simple linear averaging can fail to



4103

capture the complex semantics and relationships
of an OOV word from its contexts.

Unlike the existing approaches mentioned
above, humans have the ability to infer the mean-
ing of a word based on a more comprehensive un-
derstanding of its contexts and morphology. Given
an OOV word with a few example sentences, hu-
mans are capable of understanding the semantics
of each sentence, and then aggregating multiple
sentences to estimate the meaning of this word.
In addition, humans can combine the context in-
formation with sub-word or other morphological
forms to have a better estimation of the target
word. Inspired by this, we propose an attention-
based hierarchical context encoder (HiCE), which
can leverage both sentence examples and morpho-
logical information. Specifically, the proposed
model adopts multi-head self-attention to integrate
information extracted from multiple contexts, and
the morphological information can be easily inte-
grated through a character-level CNN encoder.

In order to train HiCE to effectively predict the
embedding of an OOV word from just a few ex-
amples, we introduce an episode based few-shot
learning framework. In each episode, we suppose
a word with abundant observations is actually an
OOV word, and we use the embedding trained
with these observations as its oracle embedding.
Then, the HiCE model is asked to predict the
word’s oracle embedding using only the word’s K
randomly sampled observations as well as its mor-
phological information. This training scheme can
simulate the real scenarios where OOV words oc-
cur during inference, while in our case we have ac-
cess to their oracle embeddings as the learning tar-
get. Furthermore, OOV words may occur in a new
corpus whose domain or linguistic usages are dif-
ferent from the main training corpus. To deal with
this issue, we propose to adopt Model-Agnostic
Meta-Learning (MAML) (Finn et al., 2017) to as-
sist the fast and robust adaptation of a pre-trained
HiCE model, which allows HiCE to better infer
the embeddings of OOV words in a new domain
by starting from a promising initialization.

We conduct comprehensive experiments based
on both intrinsic and extrinsic embedding evalu-
ation. Experiments of intrinsic evaluation on the
Chimera benchmark dataset demonstrate that the
proposed method, HiCE, can effectively utilize
context information and outperform baseline al-
gorithms. For example, HiCE achieves 9.3% rel-

ative improvement in terms of Spearman corre-
lation compared to the state-of-the-art approach,
à la carte, regarding 6-shot learning case. Fur-
thermore, with experiments on extrinsic evalua-
tion, we show that our proposed method can bene-
fit downstream tasks, such as named entity recog-
nition and part-of-speech tagging, and outperform
existing methods significantly.

The contributions of this work can be summa-
rized as follows.
• We formulate the OOV word embedding

learning as a K-shot regression problem and
propose a simulated episode-based training
schema to predict oracle embeddings.
• We propose an attention-based hierarchical

context encoder (HiCE) to encode and aggre-
gate both context and sub-word information.
We further incorporate MAML for fast adapt-
ing the learned model to the new corpus by
bridging the semantic gap.
• We conduct experiments on multiple tasks,

and through quantitative and qualitative anal-
ysis, we demonstrate the effectiveness of the
proposed method in fast representation learn-
ing of OOV words for down-stream tasks.

2 The Approach

In this section, we first formalize the problem of
OOV embedding learning as a few-shot regression
problem. Then, we present our embedding predic-
tion model, a hierarchical context encoder (HiCE)
for capturing the semantics of context as well as
morphological features. Finally, we adopt a state-
of-the-art meta-learning algorithm, MAML, for
fast and robust adaptation to a new corpus.

2.1 The Few-Shot Regression Framework

Problem formulation We consider a training
corpus DT , and a given word embedding learning
algorithm (e.g., Word2Vec) that yields a learned
word embedding for each word w, denoted as
Tw ∈ Rd. Our goal is to infer embeddings for
OOV words that are not observed in the training
corpus DT based on a new testing corpus DN .
DN is usually much smaller than DT and the

OOV words might only occur for a few times in
DN , thus it is difficult to directly learn their em-
bedding fromDN . Our solution is to learn an neu-
ral regression function Fθ(·) parameterized with θ
onDT . The function Fθ(·) takes both the few con-
texts and morphological features of an OOV word



4104

as input, and outputs its approximate embedding
vector. The output embedding is expected to be
close to its “oracle” embeddings vector that as-
sumed to be learned with plenty of observations.

To mimic the real scenarios of handling OOV
words, we formalize the training of this model in a
few-shot regression framework, where the model
is asked to predict OOV word embedding with
just a few examples demonstrating its usage. The
neural regression function Fθ(·) is trained on DT ,
where we pick N words {wt}Nt=1 with sufficient
observations as the target words, and use their em-
beddings {Twt}Nt=1 as oracle embeddings. For
each target word wt, we denote St as all the sen-
tences in DT containing wt. It is worth noting
that we exclude words with insufficient observa-
tions from target words due to the potential noisy
estimation for these words in the first place.

In order to train the neural regression func-
tion Fθ(·), we form episodes of few-shot learning
tasks. In each episode, we randomly sample K
sentences from St, and mask out wt in these sen-
tences to construct a masked supporting context
set SKt = {st,k}Kk=1, where st,k denotes the k-th
masked sentence for target word wt. We utilize its
character sequence as features, which are denoted
as Ct. Based on these two types of features, the
model Fθ is learned to predict the oracle embed-
ding. In this paper, we choose cosine similarity
as the proximity metric, due to its popularity as an
indicator for the semantic similarity between word
vectors. The training objective is as follows.

θ̂=arg max
θ

∑
wt

∑
SKt ∼St

cos
(
Fθ(S

K
t , Ct), Twt

)
,

(1)

where SKt ∼ St means that the K sentences con-
taining target word wt are randomly sampled from
all the sentences containing wt. Once the model
Fθ̂ is trained (based on DT ), it can be used to pre-
dict embedding of OOV words inDN by taking all
sentences containing these OOV words and their
character sequences as input.

2.2 Hierarchical Context Encoding (HiCE)
Here we detail the design of the neural regres-

sion function Fθ(·). Based on the previous discus-
sion, Fθ(·) should be able to analyze the complex
semantics of context, to aggregate multiple pieces
of context information for comprehensive embed-
ding prediction, and to incorporate morphological

Figure 1: The proposed hierarchical context encoding
architecture (HiCE) for learning embedding represen-
tation for OOV words.

features. These three requirements cannot be ful-
filled using simple models such as linear aggrega-
tion (Khodak et al., 2018).

Recent progress in contextualized word rep-
resentation learning (Peters et al., 2018; Devlin
et al.) has shown that it is possible to learn a
deep model to capture richer language-specific se-
mantics and syntactic knowledge purely based on
self-supervised objectives. Motivated by their re-
sults, we propose a hierarchical context encoding
(HiCE) architecture to extract and aggregate infor-
mation from contexts, and morphological features
can be easily incorporated. Using HiCE as Fθ(·),
a more sophisticated model to process and aggre-
gate contexts and morphology can be learned to
infer OOV embeddings.

Self-Attention Encoding Block Our proposed
HiCE is mainly based on the self-attention encod-
ing block proposed by Vaswani et al. (2017). Each
encoding block consists of a self-attention layer
and a point-wise, fully connected layer. Such an
encoding block can enrich the interaction of the
sequence input and effectively extract both local
and global information.

Self-attention (SA) is a variant of attention
mechanism that can attend on a sequence by itself.
For each head i of the attention output, we first
transform the sequence input matrix x into query,
key and value matrices, by a set of three different



4105

linear projections WQi ,W
K
i ,W

V
i . Next we cal-

culate matrix product xWQi (xW
K
i )

T , then scale
it by the square root of the dimension of the se-
quence input 1√

dx
to get mutual attention matrix

of the sequence. Finally we aggregate the value
matrices using the calculated attention matrix, and
get aself,i as the self attention vector for head i:

aself,i = softmax

(
xWQi (xW

K
i )

T

√
dx

)
xW Vi .

Combining all these self-attentions {aself,i}hi=1
by a linear projection WO, we have a SA(x) with
totally h heads, which can represent different as-
pects of mutual relationships of the sequence x:

SA(x) = Concat(aself,1, ..., aself,h)W
O.

The self-attention layer is followed by a fully
connected feed-forward network (FFN), which ap-
plies a non-linear transformation to each position
of the sequence input x.

For both SA and FFN, we apply residual con-
nection (He et al., 2016) followed by layer nor-
malization (Ba et al., 2016). Such a design can
help the overall model to achieve faster conver-
gence and better generalization.

In addition, it is necessary to incorporate posi-
tion information for a sequence. Although it is fea-
sible to encode such information using positional
encoding, our experiments have shown that this
will lead to bad performance in our case. There-
fore, we adopt a more straightforward position-
wise attention, by multiplying the representation
at pos by a positional attention digit apos. In this
way, the model can distinguish the importance of
different relative locations in a sequence.

HiCE Architecture As illustrated in Figure 1,
HiCE consists of two major layers: the Context
Encoder and the Multi-Context Aggregator.

For each given word wt and its K masked
supporting context set SKt = {st,1, st,2, ..., st,K},
a lower-level Context Encoder (E) takes each
sentence st,k as input, followed by position-
wise attention and a self-attention encoding
block, and outputs an encoded context embed-
ding E(st,k). On top of it, a Multi-Context
Aggregator combines multiple encoded contexts,
i.e., E(st,1), E(st,2), ..., E(st,K), by another self-
attention encoding block. Note that the order of
contexts can be arbitrary and should not influence

the aggregation, we thus do not apply the position-
wise attention in Multi-Context Aggregator.

Furthermore, the morphological features can
be encoded using character-level CNN following
(Kim et al., 2016), which can be concatenated with
the output of Multi-Context Aggregator. Thus, our
model can leverage both the contexts and morpho-
logical information to infer OOV embeddings.

2.3 Fast and Robust Adaptation with MAML
So far, we directly apply the learned neural re-

gression function Fθ̂ trained onDT to OOV words
in DN . This can be problematic when there ex-
ists some linguistic and semantic gap between DT
and DN . For example, words with the same form
but in different domains (Sarma et al., 2018) or at
different times (Hamilton et al., 2016) can have
different semantic meanings. Therefore, to fur-
ther improve the performance, we aim to adapt
the learned neural regression function Fθ̂ fromDT
to the new corpus DN . A naı̈ve way to do so is
directly fine-tuning the model on DN . However,
in most cases, the new corpus DN does not have
enough data compared to DT , and thus directly
fine-tuning on insufficient data can be sub-optimal
and prone to overfitting.

To address this issue, we adopt Model Agnos-
tic Meta-Learning (MAML) (Finn et al., 2017) to
achieve fast and robust adaption. Instead of simply
fine-tuning Fθ̂ on DN , MAML provides a way of
learning to fine-tune. That is, the model is firstly
trained on DT to get a more promising initializa-
tion, based on which fine-tuning the model onDN
with just a few examples could generalize well.

More specifically, in each training episode, we
first conduct gradient descent using sufficient data
in DT to learn an updated weight θ∗. For simplifi-
cation, we use L to denote the loss function of our
objective function (1). The update process is as:

θ∗ = θ − α∇θLDT (θ).

We then treat θ∗ as an initialized weight to opti-
mize θ on the limited data inDN . The final update
in each training episode can be written as follows.

θ′ = θ − β∇θLDN (θ
∗)

= θ − β∇θLDN (θ − α∇θLDT (θ)), (2)

where both α and β are hyper-parameters of two-
stage learning rate. The above optimization can be
conducted with stochastic gradient descent (SGD).
In this way, the knowledge learned from DT can



4106

provide a good initial representation that can be
effectively fine-tuned by a few examples in DN ,
and thus achieve fast and robust adaptation.

Note that the technique presented here is a sim-
plified variant of the original MAML, which con-
siders more than just two tasks compared to our
case, i.e., a source task (DT ) and a target task
(DN ). If we require to train embeddings for mul-
tiple domains simultaneously, we can also extend
our approach to deal with multiple DT and DN .

3 Experiments

In this section, we present two types of experi-
ments to evaluate the effectiveness of the proposed
HiCE model. One is an intrinsic evaluation on a
benchmark dataset, and the other is an extrinsic
evaluation on two downstream tasks: (1) named
entity recognition and (2) part-of-speech tagging.

3.1 Experimental Settings
As aforementioned, our approach assumes an

initial embedding T trained on an existing cor-
pus DT . As all the baseline models learn embed-
ding from Wikipedia, we train HiCE on WikiText-
103 (Merity et al., 2017) with the initial embed-
ding provided by Herbelot and Baroni (2017)1.

WikiText-103 contains 103 million words ex-
tracted from a selected set of articles. From
WikiText-103, we select words with an occurrence
count larger than 16 as training words. Then, we
collect the masked supporting contexts set St for
each training word wt with its oracle embedding
Twt , and split the collected words into a training
set and a validation set. We then train the HiCE
model2 in the previous introduced episode based
K-shot learning setting, and select the best hyper-
parameters and model using the validation set. Af-
ter we obtain the trained HiCE model, we can ei-
ther directly use it to infer the embedding vec-
tors for OOV words in new corpus DN , or con-
duct adaptation onDN using MAML algorithm as
shown in Eq. (2).

3.2 Baseline Methods
We compare HiCE with the following baseline

models for learning OOV word embeddings.
• Word2Vec: The local updating algorithm of

Word2Vec. The model employs the ‘Skip-
gram’ update to learn a new word embedding

1clic.cimec.unitn.it/˜aurelie.
herbelot/wiki_all.model.tar.gz

2github.com/acbull/HiCE

by predicting its context word vectors. We
implement this baseline model with gensim3.
• FastText: FastText is a morphological em-

bedding algorithm that can handle OOV by
summing n-gram embeddings. To make fair
comparison, we train FastText on WikiText-
103, and directly use it to infer the embed-
dings of OOV words in new datasets. We
again use the implementation in gensim3.
• Additive: Additive model (Lazaridou et al.,

2017) is a purely non-parametric algorithm
that averages the word embeddings of the
masked supporting contexts St. Specifically:

eadditivet =
1

|St|
∑

c∈St

1

|c|
∑

w∈c
ew.

Also, this approach can be augmented by re-
moving the stop words beforehand.
• nonce2vec: This algorithm (Herbelot and

Baroni, 2017) is a modification of origi-
nal gensim Word2Vec implementation, aug-
mented by a better initialization of additive
vector, higher learning rates and large context
window, etc. We directly used their open-
source implementation4.
• à la carte: This algorithm (Khodak et al.,

2018) is based on an additive model, fol-
lowed by a linear transformation A that can
be learned through an auxiliary regression
task. Specifically:

eà la cartet =
A

|St|
∑

c∈St

∑
w∈c

Aeadditivew

We conduct experiments by using their open-
source implementation5.

3.3 Intrinsic Evaluation: Evaluate OOV
Embeddings on the Chimera Benchmark

First, we evaluate HiCE on Chimera (Lazaridou
et al., 2017), a widely used benchmark dataset for
evaluating word embedding for OOV words.

Dataset The Chimera dataset simulates the sit-
uation when an embedding model faces an OOV
word in a real-world application. For each OOV
word (denoted as “chimera”), a few example sen-
tences (2, 4, or 6) are provided. The dataset also
provides a set of probing words and the human-
annotated similarity between the probing words

3radimrehurek.com/gensim/
4github.com/minimalparts/nonce2vec
5github.com/NLPrinceton/ALaCarte

clic.cimec.unitn.it/~aurelie.herbelot/wiki_all.model.tar.gz
clic.cimec.unitn.it/~aurelie.herbelot/wiki_all.model.tar.gz
github.com/acbull/HiCE
radimrehurek.com/gensim/
github.com/minimalparts/nonce2vec
github.com/NLPrinceton/ALaCarte


4107

Methods 2-shot 4-shot 6-shot

Word2vec 0.1459 0.2457 0.2498
FastText 0.1775 0.1738 0.1294
Additive 0.3627 0.3701 0.3595
Additive, no stop words 0.3376 0.3624 0.4080
nonce2vec 0.3320 0.3668 0.3890
à la carte 0.3634 0.3844 0.3941

HiCE w/o Morph 0.3710 0.3872 0.4277
HiCE + Morph 0.3796 0.3916 0.4253
HiCE + Morph + Fine-tune 0.1403 0.1837 0.3145
HiCE + Morph + MAML 0.3781 0.4053 0.4307

Oracle Embedding 0.4160 0.4381 0.4427

Table 1: Performance on the Chimera benchmark
dataset with different numbers of context sentences,
which is measured by Spearman correlation. Baseline
results are from the corresponding papers.

and the OOV words. To evaluate the performance
of a learned embedding, Spearman correlation is
used in (Lazaridou et al., 2017) to measure the
agreement between the human annotations and the
machine-generated results.

Experimental Results Table 1 lists the per-
formance of HiCE and baselines with different
numbers of context sentences. In particular,
our method (HiCE+Morph+MAML)6 achieves
the best performance among all the other base-
line methods under most settings. Compared with
the current state-of-the-art method, à la carte, the
relative improvements (i.e., the performance dif-
ference divided by the baseline performance) of
HiCE are 4.0%, 5.4% and 9.3% in terms of 2,4,6-
shot learning, respectively. We also compare our
results with that of the oracle embedding, which
is the embeddings trained from DT , and used as
ground-truth to train HiCE. This results can be re-
garded as an upper bound. As is shown, when
the number of context sentences (K) is relatively
large (i.e., K = 6), the performance of HiCE is on
a par with the upper bound (Oracle Embedding)
and the relative performance difference is merely
2.7%. This indicates the significance of using an
advanced aggregation model.

Furthermore, we conduct an ablation study to
analyze the effect of morphological features. By
comparing HiCE with and without Morph, we
can see that morphological features are helpful
when the number of context sentences is relatively
small (i.e., 2 and 4 shot). This is because morpho-
logical information does not rely on context sen-

6Unless other stated, HiCE refers to HiCE + Morph +
MAML.

tences, and can give a good estimation when con-
texts are limited. However, in 6-shot setting, their
performance does not differ significantly.

In addition, we analyze the effect of MAML by
comparing HiCE with and without MAML. We
can see that adapting with MAML can improve
the performance when the number of context sen-
tences is relatively large (i.e., 4 and 6 shot), as
it can mitigate the semantic gap between source
corpus DT and target corpus DN , which makes
the model better capture the context semantics in
the target corpus. Also we evaluate the effect of
MAML by comparing it with fine-tuning. The re-
sults show that directly fine-tuning on target cor-
pus can lead to extremely bad performance, due to
the insufficiency of data. On the contrary, adapt-
ing with MAML can leverage the source corpus’s
information as regularization to avoid over-fitting.

3.4 Extrinsic Evaluation: Evaluate OOV
Embeddings on Downstream Tasks

To illustrate the effectiveness of our proposed
method in dealing with OOV words, we evaluate
the resulted embedding on two downstream tasks:
(1) named entity recognition (NER) and (2) part-
of-speech (POS) tagging.

Named Entity Recognition NER is a semantic
task with a goal to extract named entities from a
sentence. Recent approaches for NER take word
embedding as input and leverage its semantic in-
formation to annotate named entities. Therefore,
a high-quality word embedding has a great impact
on the NER system. We consider the following
two corpora, which contain abundant OOV words,
to mimic the real situation of OOV problems.
• Rare-NER: This NER dataset (Derczynski

et al., 2017) focus on unusual, previously-
unseen entities in the context of emerging
discussions, which are mostly OOV words.
• Bio-NER: The JNLPBA 2004 Bio-entity

recognition dataset (Collier and Kim, 2004)
focuses on technical terms in the biology do-
main, which also contain many OOV words.

Both datasets use entity-level F1-score as an eval-
uation metric. We use the WikiText-103 as DT ,
and these datasets as DN . We select all the OOV
words in the dataset and extract their context sen-
tences. Then, we train different versions of OOV
embeddigns based on the proposed approaches
and the baseline models. Finally, the inferred em-
bedding is used in an NER system based on the



4108

Methods
Named Entity Recognition (F1-score) POS Tagging (Acc)
Rare-NER Bio-NER Twitter POS

Word2vec 0.1862 0.7205 0.7649
FastText 0.1981 0.7241 0.8116
Additive 0.2021 0.7034 0.7576
nonce2vec 0.2096 0.7289 0.7734
à la carte 0.2153 0.7423 0.7883

HiCE w/o Morph 0.2394 0.7486 0.8194
HiCE + Morph 0.2375 0.7522 0.8227
HiCE + Morph + MAML 0.2419 0.7636 0.8286

Table 2: Performance on Named Entity Recognition and Part-of-Speech Tagging tasks. All methods are evaluated
on test data containing OOV words. Results demonstrate that the proposed approach, HiCE + Morph + MAML,
improves the downstream model by learning better representations for OOV words.

Bi-LSTM-CRF (Lample et al., 2016) architecture
to predict named entities on the test set. We posit
a higher-quality OOV embedding results in better
downstream task performance.

As we mainly focus on the quality of OOV word
embeddings, we construct the test set by selecting
sentences which have at least one OOV word. In
this way, the test performance will largely depend
on the quality of the OOV word embeddings. Af-
ter the pre-processing, Rare-NER dataset contains
6,445 OOV words and 247 test sentences, while
Bio-NER contains 11,748 OOV words and 2,181
test sentences. Therefore, Rare-NER has a high
ratio of OOV words per sentence.

Part-of-Speech Tagging Besides NER, we
evaluate the syntactic information encoded in
HiCE through a lens of part-of-speech (POS) tag-
ging, which is a standard task with a goal to
identify which grammatical group a word belongs
to. We consider the Twitter social media POS
dataset (Ritter et al., 2011), which contains many
OOV entities. The dataset is comprised of 15,971
English sentences collected from Twitter in 2011.
Each token is tagged manually into 48 grammati-
cal groups, consisting of Penn Tree Bank Tag set
and several Twitter-specific classes. The perfor-
mance of a tagging system is measured by accu-
racy. Similar to the previous setting, we use differ-
ent updating algorithms to learn the embedding of
OOV words in this dataset, and show different test
accuracy results given by learned Bi-LSTM-CRF
tagger. The dataset contains 1,256 OOV words
and 282 test sentences.

Results Table 2 illustrates the results evaluated
on the downstream tasks. HiCE outperforms the
baselines in all the settings. Compared to the best
baseline à la carte, the relative improvements
are 12.4%, 2.9% and 5.1% for Rare-NER, Bio-
NER, and Twitter POS, respectively. As afore-
mentioned, the ratio of OOV words in Rare-NER
is high. As a result, all the systems perform worse
on Rare-NER than Bio-NER, while HiCE reaches
the largest improvement than all the other base-
lines. Besides, our baseline embedding is trained
on Wikipedia corpus (WikiText-103), which is
quite different from the bio-medical texts and so-
cial media domain. The experiment demonstrates
that HiCE trained on DT is already able to lever-
age the general language knowledge which can be
transferred through different domains, and adap-
tation with MAML can further reduce the domain
gap and enhance the performance.

3.5 Qualitative Evaluation of HiCE

To illustrate how does HiCE extract and ag-
gregate information from multiple context sen-
tences, we visualize the attention weights over
words and contexts. We demonstrate an example
in Figure 2, where we choose four sentences in
chimera dataset, with “clarinet” (a woodwind in-
strument) as the OOV word. From the attention
weight over words, we can see that the HiCE puts
high attention on words that are related to instru-
ments, such as “horns”, “instruments”, “flows”,
etc. From the attention weight over contexts, we
can see that HiCE assigns the fourth sentence the
lowest context attention, in which the instrument-
related word “trumpet” is distant from the target



4109

Figure 2: Visualization of attention distribution over words and contexts.

OOV Word Contexts Methods Top-5 similar words (via cosine similarity)

scooter
We all need vehicles like bmw
c1 scooter that allow more social
interaction while using them ...

Additive the, and, to, of, which
FastText cooter, pooter, footer, soter, sharpshooter
HiCE cars, motorhomes, bmw, motorcoaches, microbus

cello
The instruments I am going to
play in the band service are
the euphonium and the cello ...

Additive the, and, to, of, in
FastText celli, cellos, ndegocello, cellini, cella
HiCE piano, orchestral, clarinet, virtuoso, violin

potato
It started with a green salad
followed by a mixed grill with
rice chips potato ...

Additive and, cocoyam, the, lychees, sapota
FastText patatoes, potamon, potash, potw, pozzato
HiCE vegetables, cocoyam, potatoes, calamansi, sweetcorn

Table 3: For each OOV in Chimera benchmark, infer its embedding using different methods, then show top-5
words with similar embedding to the inferred embedding. HiCE can find words with most similar semantics.

placeholder, making it harder to infer the mean-
ing by this context. This shows HiCE indeed dis-
tinguishes important words and contexts from the
uninformative ones.

Furthermore, we conduct a case study to show
how well the inferred embedding for OOV words
capture their semantic meaning. We randomly
pick three OOV words with 6 context sentences
in Chimera benchmark, use additive, fastText and
HiCE to infer the embeddings. Next, we find the
top-5 similar words with the highest cosine sim-
ilarity. As is shown in Table 3, Additive method
can only get embedding near to neutral words
as “the”, “and”, etc, but cannot capture the spe-
cific semantic of different words. FastText can
find words with similar subwords, but represent-
ing totally different meaning. For example, for
OOV “scooter” (a motor vehicle), FastText finds
“cooter” as the most similar word, which looks
similar in character-level, but means a river turtle
actually. Our proposed HiCE however, can cap-
ture the true semantic meaning of the OOV words.
For example, it finds “cars”, “motorhomes” (all
are vehicles) for “scooter”, and finds “piano”, “or-
chestral” (all are instruments) for “cello”, etc. This
case study shows that HiCE can truly infer a high-
quality embedding for OOV words.

4 Related Work

OOV Word Embedding Previous studies of
handling OOV words were mainly based on two
types of information: 1) context information and
2) morphology features.

The first family of approaches follows the dis-
tributional hypothesis (Firth, 1957) to infer the
meaning of a target word based on its con-
text. If sufficient observations are given, sim-
ply applying existing word embedding techniques
(e.g., word2vec) can already learn to embed OOV
words. However, in a real scenario, mostly the
OOV word only occur for a very limited times
in the new corpus, which hinders the quality of
the updated embedding (Lazaridou et al., 2017;
Herbelot and Baroni, 2017). Several alternatives
have been proposed in the literature. Lazaridou
et al. (2017) proposed additive method by using
the average embeddings of context words (Lazari-
dou et al., 2017) as the embedding of the tar-
get word. Herbelot and Baroni (2017) extended
the skip-gram model to nonce2vec by initialized
with additive embedding, higher learning rate and
window size. Khodak et al. (2018) introduced
à la carte, which augments the additive method
by a linear transformation of context embedding.



4110

The second family of approaches utilizes the
morphology of words (e.g., morphemes, charac-
ter n-grams and character) to construct embedding
vectors of unseen words based on sub-word infor-
mation. For example, Luong et al. (2013) pro-
posed a morphology-aware word embedding tech-
nique by processing a sequence of morphemes
with a recurrent neural network. Bojanowski et al.
(2017) extended skip-gram model by assigning
embedding vectors to every character n-grams and
represented each word as the sum of its n-grams.
Pinter et al. (2017) proposed MIMICK to induce
word embedding from character features with a bi-
LSTM model. Although these approaches demon-
strate reasonable performance, they rely mainly
on morphology structure and cannot handle some
special type of words, such as transliteration, en-
tity names, or technical terms.

Our approach utilizes both pieces of informa-
tion for an accurate estimation of OOV embed-
dings. To leverage limited context information,
we apply a complex model in contrast to the lin-
ear transformation used in the past, and learn to
embed in a few-shot setting. We also show that
incorporating morphological features can further
enhance the model when the context is extremely
limited (i.e., only two or four sentences).

Few-shot learning The paradigm of learning
new tasks from a few labelled observations, re-
ferred to as few-shot learning, has received sig-
nificant attention. The early studies attempt to
transfer knowledge learned from tasks with suf-
ficient training data to new tasks. They mainly
follow a pre-train then fine-tune paradigm (Don-
ahue et al., 2014; Bengio, 2012; Zoph et al.,
2016). Recently, meta-learning is proposed and
it achieves great performance on various few-shot
learning tasks. The intuition of meta-learning is
to learn generic knowledge on a variety of learn-
ing tasks, such that the model can be adapted to
learn a new task with only a few training sam-
ples. Approaches for meta-learning can be cate-
gorized by the type of knowledge they learn. (1)
Learn a metric function that embeds data in the
same class closer to each other, including Match-
ing Networks (Vinyals et al., 2016), and Prototyp-
ical Networks (Snell et al., 2017). The nature of
metric learning makes it specified on classification
problems. (2) Learn a learning policy that can fast
adapt to new concepts, including a better weight
initialization as MAML (Finn et al., 2017) and

a better optimizer (Ravi and Larochelle, 2017).
This line of research is more general and can be
applied to different learning paradigms, including
both classification and regression.

There have been emerging research studies
that utilize the above meta-learning algorithms to
NLP tasks, including language modelling (Vinyals
et al., 2016), text classification (Yu et al., 2018),
machine translation (Gu et al., 2018), and relation
learning (Xiong et al., 2018; Gao et al., 2019). In
this paper, we propose to formulate the OOV word
representation learning as a few-shot regression
problem. We first show that pre-training on a given
corpus can somehow solve the problem. To further
mitigate the semantic gap between the given cor-
pus with a new corpus, we adopt model-agnostic
meta-learning (MAML) (Finn et al., 2017) to fast
adapt the pre-trained model to new corpus.

Contextualized Embedding The HiCE archi-
tecture is related to contextualized representation
learning (Peters et al., 2018; Devlin et al.). How-
ever, their goal is to get a contextualized embed-
ding based on a given sentence, with word or
sub-word embeddings as input. In contrast, our
work utilizes multiple contexts to learn OOV em-
beddings. This research direction is orthogonal
to their goal. In addition, the OOV embeddings
learned by ours can be served as inputs to ELMO
and BERT, helping them to deal with OOV words.

5 Conclusion

We studied the problem of learning accurate
embedding for Out-Of-Vocabulary word and aug-
ment them to a per-trained embedding by only a
few observations. We formulated the problem as
a K-shot regression problem and proposed a hier-
archical context encoder (HiCE) architecture that
learns to predict the oracle OOV embedding by ag-
gregating only K contexts and morphological fea-
tures. We further adopt MAML for fast and robust
adaptation to mitigate semantic gap between cor-
pus. Experiments on both benchmark corpus and
downstream tasks demonstrate the superiority of
HiCE over existing approaches.

Acknowledgments

This work is partially supported by NSF
RI-1760523, NSF III-1705169, NSF CAREER
Award 1741634, and Amazon Research Award.



4111

References

Lei Jimmy Ba, Ryan Kiros, and Geoffrey E. Hinton.
2016. Layer normalization. CoRR, abs/1607.06450.

Yoshua Bengio. 2012. Deep learning of representa-
tions for unsupervised and transfer learning. In Un-
supervised and Transfer Learning - Workshop held
at ICML 2011, Bellevue, Washington, USA, July 2,
2011, pages 17–36.

Piotr Bojanowski, Edouard Grave, Armand Joulin, and
Tomas Mikolov. 2017. Enriching word vectors with
subword information. TACL, 5:135–146.

Trevor Cohn, Steven Bird, Graham Neubig, Oliver
Adams, and Adam J. Makarucha. 2017. Cross-
lingual word embeddings for low-resource language
modeling. In Proceedings of the 15th Conference of
the European Chapter of the Association for Com-
putational Linguistics, EACL 2017, Valencia, Spain,
April 3-7, 2017, Volume 1: Long Papers, pages 937–
947. Association for Computational Linguistics.

Nigel Collier and Jin-Dong Kim. 2004. Introduction to
the bio-entity recognition task at JNLPBA. In NLP-
BA/BioNLP.

Leon Derczynski, Eric Nichols, Marieke van Erp,
and Nut Limsopatham. 2017. Results of the
WNUT2017 shared task on novel and emerging en-
tity recognition. In NUT@EMNLP, pages 140–147.
Association for Computational Linguistics.

Jacob Devlin, Ming-Wei Chang, Kenton Lee, and
Kristina Toutanova. Bert: Pre-training of deep bidi-
rectional transformers for language understanding.
preprint arXiv:1810.04805.

Jeff Donahue, Yangqing Jia, Oriol Vinyals, Judy Hoff-
man, Ning Zhang, Eric Tzeng, and Trevor Darrell.
2014. Decaf: A deep convolutional activation fea-
ture for generic visual recognition. In Proceedings
of the 31th International Conference on Machine
Learning, ICML 2014, Beijing, China, 21-26 June
2014, pages 647–655.

Chelsea Finn, Pieter Abbeel, and Sergey Levine. 2017.
Model-agnostic meta-learning for fast adaptation of
deep networks. In Proceedings of the 34th Inter-
national Conference on Machine Learning, ICML
2017, Sydney, NSW, Australia, 6-11 August 2017,
pages 1126–1135.

John R. Firth. 1957. A synopsis of linguistic theory,
1930-1955. Studies in Linguistic Analysis.

Tianyu Gao, Xu Han, Zhiyuan Liu, and Maosong Sun.
2019. Hybrid attention-based prototypical networks
for noisy few-shot relation classification. In Pro-
ceedings of the Thirty-Second AAAI Conference on
Artificial Intelligence, (AAAI-19), New York, USA,
April 15-18, 2019.

Jiatao Gu, Yong Wang, Yun Chen, Victor O. K. Li,
and Kyunghyun Cho. 2018. Meta-learning for low-
resource neural machine translation. In Proceed-
ings of the 2018 Conference on Empirical Methods
in Natural Language Processing, Brussels, Belgium,
October 31 - November 4, 2018, pages 3622–3631.
Association for Computational Linguistics.

William L. Hamilton, Jure Leskovec, and Dan Jurafsky.
2016. Diachronic word embeddings reveal statisti-
cal laws of semantic change. In Proceedings of the
54th Annual Meeting of the Association for Compu-
tational Linguistics, ACL 2016, August 7-12, 2016,
Berlin, Germany, Volume 1: Long Papers.

Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian
Sun. 2016. Deep residual learning for image recog-
nition. In 2016 IEEE Conference on Computer Vi-
sion and Pattern Recognition, CVPR 2016, Las Ve-
gas, NV, USA, June 27-30, 2016, pages 770–778.
IEEE Computer Society.

Aurélie Herbelot and Marco Baroni. 2017. High-risk
learning: acquiring new word vectors from tiny
data. In Proceedings of the 2017 Conference on Em-
pirical Methods in Natural Language Processing,
EMNLP 2017, Copenhagen, Denmark, September
9-11, 2017, pages 304–309. Association for Com-
putational Linguistics.

Mikhail Khodak, Nikunj Saunshi, Yingyu Liang,
Tengyu Ma, Brandon Stewart, and Sanjeev Arora.
2018. A la carte embedding: Cheap but effective in-
duction of semantic feature vectors. In Proceedings
of the 56th Annual Meeting of the Association for
Computational Linguistics, ACL 2018, Melbourne,
Australia, July 15-20, 2018, Volume 1: Long Pa-
pers, pages 12–22. Association for Computational
Linguistics.

Yoon Kim, Yacine Jernite, David Sontag, and Alexan-
der M. Rush. 2016. Character-aware neural lan-
guage models. In Proceedings of the Thirtieth AAAI
Conference on Artificial Intelligence, February 12-
17, 2016, Phoenix, Arizona, USA., pages 2741–
2749.

Guillaume Lample, Miguel Ballesteros, Sandeep Sub-
ramanian, Kazuya Kawakami, and Chris Dyer. 2016.
Neural architectures for named entity recognition.
In HLT-NAACL, pages 260–270. The Association
for Computational Linguistics.

Angeliki Lazaridou, Marco Marelli, and Marco Baroni.
2017. Multimodal word meaning induction from
minimal exposure to natural text. Cognitive Science.

Thang Luong, Richard Socher, and Christopher D.
Manning. 2013. Better word representations with
recursive neural networks for morphology. In Pro-
ceedings of the Seventeenth Conference on Compu-
tational Natural Language Learning, CoNLL 2013,
Sofia, Bulgaria, August 8-9, 2013, pages 104–113.
ACL.

http://arxiv.org/abs/1607.06450
http://jmlr.csail.mit.edu/proceedings/papers/v27/bengio12a.html
http://jmlr.csail.mit.edu/proceedings/papers/v27/bengio12a.html
https://transacl.org/ojs/index.php/tacl/article/view/999
https://transacl.org/ojs/index.php/tacl/article/view/999
https://aclanthology.info/papers/E17-1088/e17-1088
https://aclanthology.info/papers/E17-1088/e17-1088
https://aclanthology.info/papers/E17-1088/e17-1088
https://arxiv.org/pdf/1810.04805.pdf
https://arxiv.org/pdf/1810.04805.pdf
http://jmlr.org/proceedings/papers/v32/donahue14.html
http://jmlr.org/proceedings/papers/v32/donahue14.html
http://proceedings.mlr.press/v70/finn17a.html
http://proceedings.mlr.press/v70/finn17a.html
https://aclanthology.info/papers/D18-1398/d18-1398
https://aclanthology.info/papers/D18-1398/d18-1398
http://aclweb.org/anthology/P/P16/P16-1141.pdf
http://aclweb.org/anthology/P/P16/P16-1141.pdf
https://doi.org/10.1109/CVPR.2016.90
https://doi.org/10.1109/CVPR.2016.90
https://aclanthology.info/papers/D17-1030/d17-1030
https://aclanthology.info/papers/D17-1030/d17-1030
https://aclanthology.info/papers/D17-1030/d17-1030
https://aclanthology.info/papers/P18-1002/p18-1002
https://aclanthology.info/papers/P18-1002/p18-1002
http://www.aaai.org/ocs/index.php/AAAI/AAAI16/paper/view/12489
http://www.aaai.org/ocs/index.php/AAAI/AAAI16/paper/view/12489
http://aclweb.org/anthology/W/W13/W13-3512.pdf
http://aclweb.org/anthology/W/W13/W13-3512.pdf


4112

Stephen Merity, Caiming Xiong, James Bradbury, and
Richard Socher. 2017. Pointer sentinel mixture
models. In ICLR’17.

Tomas Mikolov, Ilya Sutskever, Kai Chen, Gregory S.
Corrado, and Jeffrey Dean. 2013. Distributed repre-
sentations of words and phrases and their composi-
tionality. In NIPS, pages 3111–3119.

Matthew E. Peters, Mark Neumann, Mohit Iyyer, Matt
Gardner, Christopher Clark, Kenton Lee, and Luke
Zettlemoyer. 2018. Deep contextualized word repre-
sentations. In NAACL-HLT, pages 2227–2237. As-
sociation for Computational Linguistics.

Yuval Pinter, Robert Guthrie, and Jacob Eisenstein.
2017. Mimicking word embeddings using subword
rnns. In Proceedings of the 2017 Conference on Em-
pirical Methods in Natural Language Processing,
EMNLP 2017, Copenhagen, Denmark, September
9-11, 2017, pages 102–112. Association for Com-
putational Linguistics.

Sachin Ravi and Hugo Larochelle. 2017. Optimization
as a model for few-shot learning. In ICLR.

Alan Ritter, Sam Clark, Mausam, and Oren Etzioni.
2011. Named entity recognition in tweets: An ex-
perimental study. In Proceedings of the 2011 Con-
ference on Empirical Methods in Natural Language
Processing, pages 1524–1534. Association for Com-
putational Linguistics.

Prathusha K. Sarma, Yingyu Liang, and Bill Sethares.
2018. Domain adapted word embeddings for im-
proved sentiment classification. In Proceedings of
the 56th Annual Meeting of the Association for Com-
putational Linguistics, ACL 2018, Melbourne, Aus-
tralia, July 15-20, 2018, Volume 2: Short Papers,
pages 37–42.

Jake Snell, Kevin Swersky, and Richard S. Zemel.
2017. Prototypical networks for few-shot learning.
In NIPS, pages 4080–4090.

Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob
Uszkoreit, Llion Jones, Aidan N. Gomez, Lukasz
Kaiser, and Illia Polosukhin. 2017. Attention is all
you need. In NIPS, pages 6000–6010.

Oriol Vinyals, Charles Blundell, Tim Lillicrap, Koray
Kavukcuoglu, and Daan Wierstra. 2016. Match-
ing networks for one shot learning. In Advances in
Neural Information Processing Systems 29: Annual
Conference on Neural Information Processing Sys-
tems 2016, December 5-10, 2016, Barcelona, Spain,
pages 3630–3638.

Wenhan Xiong, Mo Yu, Shiyu Chang, Xiaoxiao Guo,
and William Yang Wang. 2018. One-shot relational
learning for knowledge graphs. In Proceedings of
the 2018 Conference on Empirical Methods in Nat-
ural Language Processing, Brussels, Belgium, Oc-
tober 31 - November 4, 2018, pages 1980–1990.

Mo Yu, Xiaoxiao Guo, Jinfeng Yi, Shiyu Chang, Saloni
Potdar, Yu Cheng, Gerald Tesauro, Haoyu Wang,
and Bowen Zhou. 2018. Diverse few-shot text clas-
sification with multiple metrics. In Proceedings of
the 2018 Conference of the North American Chap-
ter of the Association for Computational Linguistics:
Human Language Technologies, NAACL-HLT 2018,
New Orleans, Louisiana, USA, June 1-6, 2018, Vol-
ume 1 (Long Papers), pages 1206–1215.

Barret Zoph, Deniz Yuret, Jonathan May, and Kevin
Knight. 2016. Transfer learning for low-resource
neural machine translation. In Proceedings of the
2016 Conference on Empirical Methods in Natural
Language Processing, EMNLP 2016, Austin, Texas,
USA, November 1-4, 2016, pages 1568–1575.

https://aclanthology.info/papers/D17-1010/d17-1010
https://aclanthology.info/papers/D17-1010/d17-1010
http://aclweb.org/anthology/D11-1141
http://aclweb.org/anthology/D11-1141
https://aclanthology.info/papers/P18-2007/p18-2007
https://aclanthology.info/papers/P18-2007/p18-2007
http://papers.nips.cc/paper/6385-matching-networks-for-one-shot-learning
http://papers.nips.cc/paper/6385-matching-networks-for-one-shot-learning
https://aclanthology.info/papers/D18-1223/d18-1223
https://aclanthology.info/papers/D18-1223/d18-1223
https://aclanthology.info/papers/N18-1109/n18-1109
https://aclanthology.info/papers/N18-1109/n18-1109
http://aclweb.org/anthology/D/D16/D16-1163.pdf
http://aclweb.org/anthology/D/D16/D16-1163.pdf

