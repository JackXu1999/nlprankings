



















































Improving the Similarity Measure of Determinantal Point Processes for Extractive Multi-Document Summarization


Proceedings of the 57th Annual Meeting of the Association for Computational Linguistics, pages 1027–1038
Florence, Italy, July 28 - August 2, 2019. c©2019 Association for Computational Linguistics

1027

Improving the Similarity Measure of Determinantal Point Processes for
Extractive Multi-Document Summarization

Sangwoo Cho, Logan Lebanoff, Hassan Foroosh, Fei Liu
Computer Science Department

University of Central Florida, Orlando, FL 32816, USA
{swcho,loganlebanoff}@knight.ucf.edu, {foroosh,feiliu}@cs.ucf.edu

Abstract

The most important obstacles facing multi-
document summarization include excessive re-
dundancy in source descriptions and the loom-
ing shortage of training data. These obstacles
prevent encoder-decoder models from being
used directly, but optimization-based methods
such as determinantal point processes (DPPs)
are known to handle them well. In this paper
we seek to strengthen a DPP-based method for
extractive multi-document summarization by
presenting a novel similarity measure inspired
by capsule networks. The approach measures
redundancy between a pair of sentences based
on surface form and semantic information. We
show that our DPP system with improved sim-
ilarity measure performs competitively, out-
performing strong summarization baselines on
benchmark datasets. Our findings are particu-
larly meaningful for summarizing documents
created by multiple authors containing redun-
dant yet lexically diverse expressions.1

1 Introduction

Multi-document summarization is arguably one of
the most important tools for information aggrega-
tion. It seeks to produce a succinct summary from
a collection of textual documents created by mul-
tiple authors concerning a single topic (Nenkova
and McKeown, 2011). The summarization tech-
nique has seen growing interest in a broad spec-
trum of domains that include summarizing prod-
uct reviews (Gerani et al., 2014; Yang et al., 2018),
student survey responses (Luo and Litman, 2015;
Luo et al., 2016), forum discussion threads (Ding
and Jiang, 2015; Tarnpradab et al., 2017), and
news articles about a particular event (Hong et al.,
2014). Despite the empirical success, most of the
datasets remain small, and the cost of hiring hu-

1Our code and data are publicly available at https://github.
com/ucfnlp/summarization-dpp-capsnet

man annotators to create ground-truth summaries
for multi-document inputs can be prohibitive.

Impressive progress has been made on neural
abstractive summarization using encoder-decoder
models (Rush et al., 2015; See et al., 2017; Paulus
et al., 2017; Chen and Bansal, 2018). These mod-
els, nonetheless, are data-hungry and learn poorly
from small datasets, as is often the case with multi-
document summarization. To date, studies have
primarily focused on single-document summariza-
tion (See et al., 2017; Celikyilmaz et al., 2018;
Kryscinski et al., 2018) and sentence summariza-
tion (Nallapati et al., 2016; Zhou et al., 2017; Cao
et al., 2018; Song et al., 2018) in part because par-
allel training data are abundant and they can be
conveniently acquired from the Web. Further, a
notable issue with abstractive summarization is the
reliability. These models are equipped with the ca-
pability of generating new words not present in the
source. With greater freedom of lexical choices,
the system summaries can contain inaccurate fac-
tual details and falsified content that prevent them
from staying “true-to-original.”

In this paper we instead focus on an extractive
method exploiting the determinantal point pro-
cess (DPP; Kulesza and Taskar, 2012) for multi-
document summarization. DPP can be trained on
small data, and because extractive summaries are
free from manipulation, they largely remain true
to the original. DPP selects a set of most represen-
tative sentences from the given source documents
to form a summary, while maintaining high diver-
sity among summary sentences. It is one of a fam-
ily of optimization-based summarization methods
that performed strongest in previous summariza-
tion competitions (Gillick and Favre, 2009; Lin
and Bilmes, 2010; Kulesza and Taskar, 2011).

Diversity is an integral part of the DPP model.
It is modelled by pairwise repulsion between sen-
tences. In this paper we exploit the capsule net-

https://github.com/ucfnlp/summarization-dpp-capsnet
https://github.com/ucfnlp/summarization-dpp-capsnet


1028

works (Hinton et al., 2018) to measure pairwise
sentence (dis)similarity, then leverage DPP to ob-
tain a set of diverse summary sentences. Tradition-
ally, the DPP method computes similarity scores
based on the bag-of-words representation of sen-
tences (Kulesza and Taskar, 2011) and with kernel
methods (Gong et al., 2014). These methods, how-
ever, are incapable of capturing lexical and syntac-
tic variations in the sentences (e.g., paraphrases),
which are ubiquitous in multi-document summa-
rization data as the source documents are created
by multiple authors with distinct writing styles.
We hypothesize that the recently proposed capsule
networks, which learn high-level representations
based on the orientational and spatial relationships
of low-level components, can be a suitable supple-
ment to model pairwise sentence similarity.

Importantly, we argue that predicting sentence
similarity within the context of summarization has
its uniqueness. It estimates if two sentences con-
tain redundant information based on both sur-
face word form and their underlying semantics.
E.g., the two sentences “Snowstorm slams east-
ern US on Friday” and “A strong wintry storm was
dumping snow in eastern US after creating traffic
havoc that claimed at least eight lives” are con-
sidered similar because they carry redundant in-
formation and cannot both be included in the sum-
mary. These sentences are by no means seman-
tically equivalent, nor do they exhibit a clear en-
tailment relationship. The task thus should be dis-
tinguished from similar tasks such as predicting
natural language inference (Bowman et al., 2015;
Williams et al., 2018) or semantic textual similar-
ity (Cer et al., 2017). In this work, we describe a
novel method to collect a large amount of sentence
pairs that are deemed similar for summarization
purpose. We contrast this new dataset with those
used for textual entailment for modeling sentence
similarity and demonstrate its effectiveness on dis-
criminating sentences and generating diverse sum-
maries. The contributions of this work can be sum-
marized as follows:

• we present a novel method inspired by the de-
terminantal point process for multi-document
summarization. The method includes a diver-
sity measure assessing the redundancy between
sentences, and a quality measure that indicates
the importance of sentences. DPP extracts a set
of summary sentences that are both representa-
tive of the document set and remain diverse;

• we present the first study exploiting capsule net-
works for determining sentence similarity for
summarization purpose. It is important to rec-
ognize that summarization places particular em-
phasis on measuring redundancy between sen-
tences; and this notion of similarity is differ-
ent from that of entailment and semantic textual
similarity (STS);

• our findings suggest that effectively modeling
pairwise sentence similarity is crucial for in-
creasing summary diversity and boosting sum-
marization performance. Our DPP system with
improved similarity measure performs com-
petitively, outperforming strong summarization
baselines on benchmark datasets.

2 Related Work

Extractive summarization approaches are the most
popular in real-world applications (Carbonell and
Goldstein, 1998; Daumé III and Marcu, 2006;
Galanis and Androutsopoulos, 2010; Hong et al.,
2014; Yogatama et al., 2015). These approaches
focus on identifying representative sentences from
a single document or set of documents to form
a summary. The summary sentences can be op-
tionally compressed to remove unimportant con-
stituents such as prepositional phrases to yield a
succinct summary (Knight and Marcu, 2002; Za-
jic et al., 2007; Martins and Smith, 2009; Berg-
Kirkpatrick et al., 2011; Thadani and McKeown,
2013; Wang et al., 2013; Li et al., 2013, 2014;
Filippova et al., 2015; Durrett et al., 2016). Ex-
tractive summarization methods are mostly unsu-
pervised or lightly-supervised using thousands of
training examples. Given its practical importance,
we explore an extractive method in this work for
multi-document summarization.

It is not uncommon to cast summarization as a
discrete optimization problem (Gillick and Favre,
2009; Takamura and Okumura, 2009; Lin and
Bilmes, 2010; Hirao et al., 2013). In this formu-
lation, a set of binary variables are used to indi-
cate whether their corresponding source sentences
are to be included in the summary. The summary
sentences are selected to maximize the coverage
of important source content, while minimizing the
summary redundancy and subject to a length con-
straint. The optimization can be performed using
an off-the-shelf tool such as Gurobi, IBM CPLEX,
or via a greedy approximation algorithm. Notable
optimization frameworks include integer linear



1029

programming (Gillick and Favre, 2009), determi-
nantal point processes (Kulesza and Taskar, 2012),
submodular functions (Lin and Bilmes, 2010), and
minimum dominating set (Shen and Li, 2010). In
this paper we employ the DPP framework because
of its remarkable performance on various summa-
rization problems (Zhang et al., 2016).

Recent years have also seen considerable in-
terest in neural approaches to summarization. In
particular, neural extractive approaches focus on
learning vector representations of source sen-
tences; then based on these representations they
determine if a source sentence is to be included in
the summary (Cheng and Lapata, 2016; Yasunaga
et al., 2017; Nallapati et al., 2017; Narayan et al.,
2018). Neural abstractive approaches usually in-
clude an encoder used to convert the entire source
document to a continuous vector, and a decoder for
generating an abstract word by word conditioned
on the document vector (Paulus et al., 2017; Tan
et al., 2017; Guo et al., 2018; Kedzie et al., 2018).
These neural models, however, require large train-
ing data containing hundreds of thousands to mil-
lions of examples, which are still unavailable for
the multi-document summarization task. To date,
most neural summarization studies are performed
for single document summarization.

Extracting summary-worthy sentences from the
source documents is important even if the ulti-
mate goal is to generate abstracts. Recent abstrac-
tive studies recognize the importance of separating
“salience estimation” from “text generation” so as
to reduce the amount of training data required by
encoder-decoder models (Gehrmann et al., 2018;
Lebanoff et al., 2018, 2019). An extractive method
is often leveraged to identify salient source sen-
tences, then a neural text generator rewrites the
selected sentences into an abstract. Our pursuit of
the DPP method is especially meaningful in this
context. As described in the next section, DPP has
an extraordinary ability to distinguish redundant
descriptions, thereby avoiding passing redundant
content to the abstractor that can cause an encoder-
decoder model to fail.

3 The DPP Framework

Let Y = {1, 2, · · · ,N} be a ground set contain-
ing N items, corresponding to all sentences of the
source documents. Our goal is to identify a subset
of items Y ⊆ Y that forms an extractive summary
of the document set. A determinantal point pro-

cess (DPP; Kulesza and Taskar, 2012) defines a
probability measure over all subsets of Y s.t.

P(Y ;L) = det(LY )
det(L+ I)

, (1)∑
Y⊆Y

det(LY ) = det(L+ I), (2)

where det(·) is the determinant of a matrix; I is the
identity matrix; L ∈ RN×N is a positive semidef-
inite matrix, known as the L-ensemble; Lij mea-
sures the correlation between sentences i and j;
and LY is a submatrix of L containing only entries
indexed by elements of Y . Finally, the probability
of an extractive summary Y ⊆ Y is proportional
to the determinant of the matrix LY (Eq. (1)).

Kulesza and Taskar (2012) provide a decompo-
sition of the L-ensemble matrix: Lij = qi ·Sij · qj
where qi ∈ R+ is a positive real number indicating
the quality of a sentence; and Sij is a measure of
similarity between sentences i and j. This formu-
lation separately models the sentence quality and
pairwise similarity before combining them into a
unified model. Let Y = {i, j} be a summary con-
taining only two sentences i and j, its probability
P(Y ;L) can be computed as
P(Y = {i, j};L) ∝ det(LY )

=

∣∣∣∣qiSiiqi qiSijqjqjSjiqi qjSjjqj
∣∣∣∣

= q2i · q2j · (1− S2ij). (3)
Eq. (3) indicates that, if sentence i is of high qual-
ity, denoted by qi, then any summary containing
it will have high probability. If two sentences i
and j are similar to each other, denoted by Sij ,
then any summary containing both sentences will
have low probability. The summary Y achieving
the highest probability thus should contain a set
of high-quality sentences while maintaining high
diversity among the selected sentences (via pair-
wise repulsion). det(LY ) also has a particular ge-
ometric interpretation as the squared volume of the
space spanned by sentence vectors i and j, where
the quality measure indicates the length of the vec-
tor and the similarity indicates the angle between
two vectors (Figure 1).

We adopt a feature-based approach to compute
sentence quality: qi = exp(θ>xi). In particu-
lar, xi is a feature vector for sentence i and θ are
the feature weights to be learned during training.
Kulesza and Taskar (2011) define sentence simi-
larity as Si,j = φ>i φj , where ‖φi‖2 = 1 (∀i) is



1030

(quality)

Sij
qi

qj
(similarity)

P(Y ; L) / q2i q2j (1� S2ij)

Figure 1: The DPP model specifies the probability of
a summary P(Y = {i, j};L) to be proportional to the
squared volume of the space spanned by sentence vec-
tors i and j.

a sentence TF-IDF vector. The model parameters
θ are optimized by maximizing the log-likelihood
of training data (Eq. (4)) and this objective can be
optimized efficiently with subgradient descent.2

θ=argmax
θ

M∑
m=1

logP(Ŷ (m);L(Y(m);θ)) (4)

During training, we create the ground-truth ex-
tractive summary (Ŷ ) for a document set based
on human reference summaries (abstracts) using
the following procedure. At each iteration we se-
lect a source sentence sharing the longest com-
mon subsequence with the human reference sum-
maries; the shared words are then removed from
human summaries to avoid duplicates in future se-
lection. Similar methods are exploited by Nal-
lapati et al. (2017) and Narayan et al. (2018) to
create ground-truth extractive summaries. At test
time, we perform inference using the learned DPP
model to obtain a system summary (Y ). We imple-
ment a greedy method (Kulesza and Taskar, 2012)
to iteratively add a sentence to the summary so that
P(Y ;L) yields the highest probability (Eq. (1)),
until a summary length limit is reached.

For the DPP framework to be successful, the
sentence similarity measure (Sij) has to accurately
capture if any two sentences contain redundant in-
formation. This is especially important for multi-
document summarization as redundancy is ubiqui-
tous in source documents. The source descriptions
frequently contain redundant yet lexically diverse
expressions such as sentential paraphrases where
people write about the same event using distinct
styles (Hu et al., 2019). Without accurately mod-
elling sentence similarity, redundant content can
make their way into the summary and further pre-
vent useful information from being included given

2The sentence features include the length and position of
a sentence, the cosine similarity between sentence and docu-
ment TF-IDF vectors (Kulesza and Taskar, 2011). We refrain
from using sophisticated features to avoid model overfitting.

the summary length limit. Existing cosine similar-
ity measure between sentence TF-IDF vectors can
be incompetent in modeling semantic relatedness.
In the following section we exploit the recently in-
troduced capsule networks (Hinton et al., 2018) to
measure pairwise sentence similarity; it considers
if two sentences share any words in common and
more importantly the semantic closeness of sen-
tence descriptions.

4 An Improved Similarity Measure

Our goal is to develop an advanced similarity mea-
sure for pairs of sentences such that semantically
similar sentences can receive high scores despite
that they have very few words in common. E.g.,
“Snowstorm slams eastern US on Friday” and “A
strong wintry storm was dumping snow in east-
ern US after creating traffic havoc that claimed at
least eight lives” have only two words in common.
Nonetheless, they contain redundant information
and cannot both be included in the summary.

Let {xa,xb} ∈ RE×L denote two sentences a
and b. Each consists of a sequence of word em-
beddings, where E is the embedding size and L
is the sentence length with zero-padding to the
right for shorter sentences. A convolutional layer
with multiple filter sizes is first applied to each
sentence to extract local features (Eq. (5)), where
xai:i+k−1 ∈ RkE denotes a flattened embedding for
position i with a filter size k, and uai,k ∈ Rd is the
resulting local feature for position i; f is a non-
linear activation function (e.g., ReLU); {Wu,bu}
are model parameters.

uai,k = f(W
uxai:i+k−1 + b

u) (5)

We use uai ∈ RD to denote the concatenation of
local features generated using various filter sizes.
Following Kim et al. (2014), we employ filter sizes
k ∈ {3, 4, 5, 6, 7} with an equal number of filters
(d) for each size (D = 5d). After applying max-
pooling to local features of all positions, we obtain
a representation ua = max-pooling(uai ) ∈ RD
for sentence a; and similarly we obtain ub ∈ RD
for sentence b. It is not uncommon for state-of-
the-art sentence similarity classifiers (Chen et al.,
2018) to concatenate the two sentence vectors,
their absolute difference and element-wise prod-
uct [ua;ub; |ua − ub|;ua ◦ ub], and feed this rep-
resentation to a fully connected layer to predict if
two sentences are similar.



1031

E
L

E
L

d
5

d3

d4

d
6

d

7

5dL

5d

Capsnet

B
M

5dL

5d

L
1

L

5dL

256
1

1

256
1

1

LSTM-256

50K
1

1

4×
5d

+
2L

+
B

1

100
1

1

1
1

1

Figure 2: The system architecture utilizing CapsNet for predicting sentence similarity. denotes the inputs and
intermediate outputs; the convolutional layer; max-pooling layer; fully-connected layer; and ReLU
activation.

Nevertheless, we conjecture that such represen-
tation may be insufficient to fully characterize the
relationship between components of the sentences
in order to model sentence similarity. For exam-
ple, the term “snowstorm” in sentence a is se-
mantically related to “wintry storm” and “dump-
ing snow” in sentence b; this low-level interaction
indicates that the two sentences contain redundant
information and it cannot be captured by the above
model. Importantly, the capsule networks pro-
posed by Hinton et al. (2018) are designed to char-
acterize the spatial and orientational relationships
between low-level components. We thus seek to
exploit CapsNet to strengthen the capability of our
system for identifying redundant sentences.

Let {uai ,ubi }Li=1 ∈ RD be low-level representa-
tions (i.e., capsules). We seek to transform them
to high-level capsules {vj}Mj=1 ∈ RB that char-
acterize the interaction between low-level compo-
nents. Each low-level capsule ui ∈ RD is multi-
plied by a linear transformation matrix to dedicate
a portion of it, denoted by ûj|i ∈ RB, to the con-
struction of a high-level capsule j (Eq. (6)); where
{Wvij} ∈ RD×B are model parameters. To re-
duce parameters and prevent overfitting, we fur-
ther encourage sharing parameters over all low-
level capsules, yielding Wv1j = W

v
2j = · · · , and

the same parameter sharing is described in (Zhao
et al., 2018). By computing the weighted sum of
ûj|i, whose weights cij indicate the strength of in-
teraction between a low-level capsule i and a high-
level capsule j, we obtain an (unnormalized) cap-
sule (Eq. (7)); we then apply a nonlinear squash
function g(·) to normalize the length the vector to

be less than 1, yielding vj ∈ RB.

ûj|i = W
v
ijui (6)

vj = g
(∑

i

cijûj|i
)

(7)

Routing (Sabour et al., 2017; Zhao et al., 2019)
aims to adjust the interaction weights (cij) using
an iterative, EM-like method. Initially, we set
{bij} to be zero for all i and j. Per Eq. (8), ci
becomes a uniform distribution indicating a low-
level capsule i contributes equally to all its upper
level capsules. After computing ûj|i and vj using
Eq. (6-7), the weights bij are updated according to
the strength of interaction (Eq. (9)). If ûj|i agrees
with a capsule vj , their interaction weight will be
increased, and decreased otherwise. This process
is repeated for r iterations to stabilize cij .

ci ← softmax(bi) (8)
bij ← bij + ûj|ivj (9)

The high-level capsules {vj}Mj=1 effectively en-
code spatial and orientational relationships of low-
level capsules. To identify the most prominent in-
teractions, we apply max-pooling to all high-level
capsules to produce v = max-poolingj(vj) ∈ RB.
This representation v, aimed to encode interac-
tions between sentences a and b, is concatenated
with [ua;ub; |ua−ub|;ua◦ub] and binary vectors
[za; zb] that indicate if any word in sentence a ap-
pears in sentence b and vice versa; they are used as
input to a fully connected layer to predict if a pair
of sentences contain redundant information. Our
loss function contains two components, including
a binary cross-entropy loss indicating whether the



1032

prediction is correct or not, and a reconstruction
loss for reconstructing a sentence a conditioned on
ua by predicting one word at a time using a re-
current neural network, and similarly for sentence
b. A hyperparameter λ is used to balance contri-
butions from both sides. In Figure 2 we present
an overview of the system architecture, and hyper-
parameters are described in the supplementary.

5 Datasets

To our best knowledge, there is no dataset focusing
on determining if two sentences contain redundant
information. It is a nontrivial task in the context of
multi-document summarization. Further, we argue
that the task should be distinguished from other
semantic similarity tasks: semantic textual simi-
larity (STS; Cer et al., 2017) assesses to what de-
gree two sentences are semantically equivalent to
each other; natural language inference (NLI; Bow-
man et al., 2015) determines if one sentence (“hy-
pothesis”) can be semantically inferred from the
other sentence (“premise”). Nonetheless, redun-
dant sentences found in a set of source documents
discussing a particular topic are not necessarily se-
mantically equivalent or express an entailment re-
lationship. We compare different datasets in §6.
Sentence redundancy dataset A novel dataset
containing over 2 million sentence pairs is intro-
duced in this paper for sentence redundancy pre-
diction. We hypothesize that it is likely for a sum-
mary sentence and its most similar source sentence
to contain redundant information. Because hu-
mans create summaries using generalization, para-
phrasing, and other high-level text operations, a
summary sentence and its source sentence can be
semantically similar, yet contain diverse expres-
sions. Fortunately, such source/summary sentence
pairs can be conveniently derived from single-
document summarization data. We analyze the
CNN/Daily Mail dataset (Hermann et al., 2015)
that contains a massive collection of single news
articles and their human-written summaries. For
each summary sentence, we identify its most sim-
ilar source sentence by calculating the averaged
R-1, R-2, and R-L F-scores (Lin, 2004) between
a source and summary sentences. We consider a
summary sentence to have no match if the score
is lower than a threshold. We obtain negative ex-
amples by randomly sampling two sentences from
a news article. In total, our training / dev / test
sets contain 2,084,798 / 105,936 / 86,144 sentence

DUC-04
System R-1 R-2 R-SU4

Opinosis (Ganesan et al., 2010) 27.07 5.03 8.63
Extract+Rewrite (Song et al., 2018) 28.90 5.33 8.76
Pointer-Gen (See et al., 2017) 31.43 6.03 10.01
SumBasic (Vanderwende et al., 2007) 29.48 4.25 8.64
KLSumm (Haghighi et al., 2009) 31.04 6.03 10.23
LexRank (Erkan and Radev, 2004) 34.44 7.11 11.19
Centroid (Hong et al., 2014) 35.49 7.80 12.02
ICSISumm (Gillick and Favre, 2009) 37.31 9.36 13.12
DPP (Kulesza and Taskar, 2011)† 38.10 9.14 13.40
DPP-Capsnet (this work) 38.25 9.22 13.40
DPP-Combined (this work) 39.35 10.14 14.15

Table 1: ROUGE results on DUC-04. † indicates our
reimplementation of Kulesza and Taskar (2011).

pairs and we make the dataset available to advance
research on sentence redundancy.

Summarization datasets We evaluate our DPP-
based system on benchmark multi-document sum-
marization datasets. The task is to create a suc-
cinct summary with up to 100 words from a clus-
ter of 10 news articles discussing a single topic.
The DUC and TAC datasets (Over and Yen, 2004;
Dang and Owczarzak, 2008) have been used in
previous summarization competitions. In this
paper we use DUC-03/04 and TAC-08/09/10/11
datasets that contain 60/50/48/44/46/44 document
clusters respectively. Four human reference sum-
maries have been created for each document clus-
ter by NIST assessors. Any system summaries are
evaluated against human reference summaries us-
ing the ROUGE software (Lin, 2004)3, where R-
1, -2, and -SU4 respectively measure the overlap
of unigrams, bigrams, unigrams and skip bigrams
with a maximum distance of 4 words. We report
results on DUC-04 (trained on DUC-03) and TAC-
11 (trained on TAC-08/09/10) that are often used
as standard test sets (Hong et al., 2014).

6 Experimental Results

In this section we discuss results that we obtained
for multi-document summarization and determin-
ing redundancy between sentences.

6.1 Summarization Results

We compare our system with a number of strong
summarization baselines (Table 1 and 2). In par-
ticular, SumBasic (Vanderwende et al., 2007) is an
extractive approach assuming words occurring fre-

3w/ options -n 2 -m -w 1.2 -c 95 -r 1000 -l 100



1033

TAC-11
System R-1 R-2 R-SU4

Opinosis (Ganesan et al., 2010) 25.15 5.12 8.12
Extract+Rewrite (Song et al., 2018) 29.07 6.11 9.20
Pointer-Gen (See et al., 2017) 31.44 6.40 10.20
SumBasic (Vanderwende et al., 2007) 31.58 6.06 10.06
KLSumm (Haghighi et al., 2009) 31.23 7.07 10.56
LexRank (Erkan and Radev, 2004) 33.10 7.50 11.13
DPP (Kulesza and Taskar, 2011)† 36.95 9.83 13.57
DPP-Capsnet (this work) 36.61 9.30 13.09
DPP-Combined (this work) 37.30 10.13 13.78

Table 2: ROUGE results on the TAC-11 dataset.

quently in a document cluster are more likely to be
included in the summary; KL-Sum (Haghighi and
Vanderwende, 2009) is a greedy approach adding
a sentence to the summary to minimize KL diver-
gence; and LexRank (Erkan and Radev, 2004) is a
graph-based approach computing sentence impor-
tance based on eigenvector centrality.

We additionally consider abstractive baselines
to illustrate how well these systems perform on
multi-document summarization: Opinosis (Gane-
san et al., 2010) focuses on creating a word co-
occurrence graph from the source documents and
searching for salient graph paths to create an ab-
stract; Extract+Rewrite (Song et al., 2018) selects
sentences using LexRank and condenses each sen-
tence to a title-like summary; Pointer-Gen (See
et al., 2017) seeks to generate abstracts by copying
words from the source documents and generating
novel words not present in the source text.

Our DPP-based framework belongs to a strand
of optimization-based methods. In particular, IC-
SISumm (Gillick et al., 2009) formulates extractive
summarization as integer linear programming; it
identifies a globally-optimal set of sentences cov-
ering the most important concepts of the source
documents; DPP (Kulesza and Taskar, 2011) se-
lects an optimal set of sentences that are represen-
tative of the source documents and with maximum
diversity, as determined by the determinantal point
process. Gong et al. (2014) show that the DPP per-
forms well on summarizing both text and video.

We experiment with several variants of the DPP
model: DPP-Capsnet computes the similarity be-
tween sentences (Sij) using the CapsNet described
in Sec. §4 and trained using our newly-constructed
sentence redundancy dataset, whereas the default
DPP framework computes sentence similarity as
the cosine similarity of sentence TF-IDF vectors.
DPP-Combined linearly combines the cosine sim-

ilarity with the CapsNet output using an interpola-
tion coefficient determined on the dev set4.

Table 1 and 2 illustrate the summarization re-
sults we have obtained for the DUC-04 and TAC-
11 datasets. Our DPP methods perform superior to
both extractive and abstractive baselines, indicat-
ing the effectiveness of optimization-based meth-
ods for extractive multi-document summarization.
The DPP optimizes for summary sentence selec-
tion to maximize their content coverage and diver-
sity, expressed as the squared volume of the space
spanned by the selected sentences.

Further, we observe that the DPP system with
combined similarity metrics yields the highest per-
formance, achieving 10.14% and 10.13% F-scores
respectively on DUC-04 and TAC-11. This find-
ing suggests that the cosine similarity of sentence
TF-IDF vectors and the CapsNet semantic similar-
ity successfully complement each other to provide
the best overall estimate of sentence redundancy.
A close examination of the system outputs reveal
that important topical words (e.g., “$3 million”)
that are frequently discussed in the document clus-
ter can be crucial for determining sentence redun-
dancy, because sentences sharing the same topi-
cal words are more likely to be considered redun-
dant. While neural models such as the CapsNet
rarely explicitly model word frequencies, the TF-
IDF sentence representation is highly effective in
capturing topical terms.

In Table 3 we show example system summaries
and a human-written reference summary. We ob-
serve that LexRank tends to extract long and com-
prehensive sentences that yield high graph central-
ity; the abstractive pointer-generator networks, de-
spite the promising results, can sometimes fail to
generate meaningful summaries (e.g., “a third of
all 3-year-olds · · · have been given to a child”).
In contrast, our DPP method is able to select a bal-
anced set of representative and diverse summary
sentences. We next compare several semantic sim-
ilarity datasets to gain a better understanding of
modeling sentence redundancy for summarization.

6.2 Sentence Similarity

We compare three standard datasets used for se-
mantic similarity tasks, including SNLI (Bowman
et al., 2015), used for natural language inference,
STS-Benchmark (Cer et al., 2017) for semantic

4The Capsnet coefficient λc is selected to be 0.2 and 0.1
respectively for the DUC-04 and TAC-11 dataset.



1034

LexRank Summary

• The official, Dr. Charles J. Ganley, director of the office of nonpre-
scription drug products at the Food and Drug Administration, said
in an interview that the agency was “revisiting the risks and benefits
of the use of these drugs in children” and that “we’re particularly
concerned about the use of these drugs in children less than 2 years
of age.”

• The Consumer Healthcare Products Association, an industry trade
group that has consistently defended the safety of pediatric cough
and cold medicines, recommended in its own 156-page safety re-
view, also released Friday, that the FDA consider mandatory warn-
ing labels saying that they should not be used in children younger
than two.

• Major makers of over-the-counter infant cough and cold
medicines announced Thursday that they were voluntarily with-
drawing their products from the market for fear that they could be
misused by parents.

Pointer-Gen Summary

• Dr. Charles Ganley, a top food and drug administration official,
said the agency was “revisiting the risks and benefits of the use of
these drugs in children,” the director of the FDA’s office of nonpre-
scription drug products.

• The FDA will formally consider revising labeling at a meeting
scheduled for Oct. 18-19.

• The withdrawal comes two weeks after reviewing reports of side
effects over the last four decades, a 1994 study found that more than
a third of all 3-year-olds in the United States were estimated to have
been given to a child.

DPP-Combined Summary

• Johnson & Johnson on Thursday voluntarily recalled certain infant
cough and cold products, citing ”rare” instances of misuse leading to
overdoses.

• Federal drug regulators have started a broad review of the safety of
popular cough and cold remedies meant for children, a top official said
Thursday.

• Safety experts for the Food and Drug Administration urged the
agency on Friday to consider an outright ban on over-the-counter,
multi-symptom cough and cold medicines for children under 6.

• Major makers of over-the-counter infant cough and cold medicines
announced Thursday that they were voluntarily withdrawing their
products from the market for fear that they could be misused by
parents.

Human Reference Summary

• On March 1, 2007, the Food/Drug Administration (FDA) started a
broad safety review of children’s cough/cold remedies.

• They are particularly concerned about use of these drugs by infants.

• By September 28th, the 356-page FDA review urged an outright ban
on all such medicines for children under six.

• Dr. Charles Ganley, a top FDA official said “We have no data on these
agents of what’s a safe and effective dose in Children.” The review
also stated that between 1969 and 2006, 123 children died from taking
decongestants and antihistimines.

• On October 11th, all such infant products were pulled from the
markets.

Table 3: Example system summaries and the human reference summary. LexRank extracts long and comprehensive
sentences that yield high graph centrality. Pointer-Gen (abstractive) has difficulty in generating faithful summaries
(see the last bullet “all 3-year-olds ... have been given to a child”). DPP is able to select a balanced set of
representative and diverse sentences.

Dataset Train Dev Test Accu.

STS-Benchmark
(Cer et al., 2017)

5,749 1,500 1,379 64.7%

SNLI
(Bowman et al., 2015)

366,603 6,607 6,605 93.0%

Src-Summ Pairs
(this work) 2,084,798 105,936 86,144 94.8%

Table 4: Sentence similarity datasets and CapsNet’s
performance on them. SNLI discriminates between en-
tailment and contradiction; STS is pretrained using Src-
Summ pairs and fine-tuned on its train split.

equivalence, and our newly-constructed Src-Summ
sentence pairs. Details are presented in Table 4.

We observe that CapsNet achieves the highest
prediction accuracy of 94.8% on the Src-Summ
dataset and it yields similar performance on SNLI,
indicating the effectiveness of CapsNet on char-
acterizing semantic similarity. STS appears to be
a more challenging task, where CapsNet yields
64.7% accuracy. Note that we perform two-way
classification on SNLI to discriminate entailment
and contradiction. The STS dataset is too small to
be used to train CapsNet without overfitting, we
thus pre-train the model on Src-Summ pairs, and
use the train split of STS to fine-tune parameters.

STS-Benchmark (a) Four girls happily walk down a side-
walk. (b) Three young girls walk down a sidewalk. 7

SNLI (a) 3 young man in hoods standing in the middle of
a quiet street facing the camera. (b) Three hood wearing
people pose for a picture. 3

Src-Summ Pairs (a) He ended up killing five girls and
wounding five others before killing himself. (b) Nearly four
months ago, a milk delivery-truck driver lined up 10 girls
in a one-room schoolhouse in this Amish farming commu-
nity and opened fire, killing five of them and wounding five
others before turning the gun on himself. 3

Table 5: Example positive (3) and negative (7) sen-
tence pairs from the semantic similarity datasets.

Table 5 shows example positive and negative
sentence pairs from the STS, SNLI, and Src-Summ
datasets. The STS and SNLI datasets are con-
structed by human annotators to test a system’s ca-
pability of learning sentence representations. The
sentences can share very few words in common
but still express an entailment relationship (posi-
tive); or the sentences can share a lot of words in
common yet they are semantically distinct (neg-
ative). These cases are usually not seen in sum-
marization datasets containing clusters of docu-
ments discussing single topics. The Src-Summ
dataset successfully strike a balance between shar-



1035

Figure 3: Heatmaps for topic D31008 of DUC-04
(cropped to 200 sentences) that shows the cosine sim-
ilarity score of sentence TF-IDF vectors (Cosine, left),
and the CapsNet output trained respectively on SNLI
(right) and Src-Summ (middle) datasets. The short off-
diagonal lines are near-identical sentences found in the
document cluster.

ing common words yet containing diverse expres-
sions. It is thus a good fit for training classifiers to
detect sentence redundancy.

Figure 3 compares heatmaps generated by com-
puting cosine similarity of sentence TF-IDF vec-
tors (Cosine), and training CapsNet on SNLI and
Src-Summ datasets respectively. We find that the
Cosine similarity scores are relatively strict, as a
vast majority of sentence pairs are assigned zero
similarity, because these sentences have no word
overlap. At the other extreme, CapsNet+SNLI la-
bels a large quantity of sentence pairs as false pos-
itives, because its training data frequently contain
sentences that share few words in common but
nonetheless are positive, i.e., expressing an entail-
ment relationship. The similarity scores generated
by CapsNet+SrcSumm are more moderate com-
paring to CapsNet+SNLI and Cosine, suggesting
the appropriateness of using Src-Summ sentence
pairs for estimating sentence redundancy.

7 Conclusion

We strengthen a DPP-based multi-document sum-
marization system with improved similarity mea-
sure inspired by capsule networks for determin-
ing sentence redundancy. We show that redun-
dant sentences not only have common words but
they can be semantically similar with little word
overlap. Both aspects should be modelled in cal-
culating pairwise sentence similarity. Our system
yields competitive results on benchmark datasets
surpassing strong summarization baselines.

Acknowledgments

The authors are grateful to the reviewers for their
insightful feedback. We would also like to extend
our thanks to Boqing Gong, Xiaodan Zhu and Fei
Sha for useful discussions.

References
Taylor Berg-Kirkpatrick, Dan Gillick, and Dan Klein.

2011. Jointly learning to extract and compress. In
Proceedings of the Annual Meeting of the Associa-
tion for Computational Linguistics (ACL).

Samuel R. Bowman, Gabor Angeli, Christopher Potts,
and Christopher D. Manning. 2015. A large an-
notated corpus for learning natural language infer-
ence. In Proceedings of the Conference on Em-
pirical Methods in Natural Language Processing
(EMNLP).

Ziqiang Cao, Furu Wei, Wenjie Li, and Sujian Li. 2018.
Faithful to the original: Fact aware neural abstrac-
tive summarization. In Proceedings of the AAAI
Conference on Artificial Intelligence (AAAI).

Jaime Carbonell and Jade Goldstein. 1998. The use
of MMR, diversity-based reranking for reordering
documents and producing summaries. In Proceed-
ings of the International ACM SIGIR Conference on
Research and Development in Information Retrieval
(SIGIR).

Asli Celikyilmaz, Antoine Bosselut, Xiaodong He, and
Yejin Choi. 2018. Deep communicating agents
for abstractive summarization. In Proceedings of
the North American Chapter of the Association for
Computational Linguistics (NAACL).

Daniel Cer, Mona Diab, Eneko Agirre, Inigo Lopez-
Gazpio, , and Lucia Specia. 2017. SemEval-2017
task 1: Semantic textual similarity multilingual and
cross-lingual focused evaluation. In Proceedings of
the 11th International Workshop on Semantic Eval-
uations (SemEval).

Qian Chen, Xiaodan Zhu, Zhen-Hua Ling, Diana
Inkpen, and Si Wei. 2018. Neural natural language
inference models enhanced with external knowl-
edge. In Proceedings of the Annual Meeting of the
Association for Computational Linguistics (ACL).

Yen-Chun Chen and Mohit Bansal. 2018. Fast ab-
stractive summarization with reinforce-selected sen-
tence rewriting. In Proceedings of the Annual Meet-
ing of the Association for Computational Linguistics
(ACL).

Jianpeng Cheng and Mirella Lapata. 2016. Neural
summarization by extracting sentences and words.
In Proceedings of ACL.

Hoa Trang Dang and Karolina Owczarzak. 2008.
Overview of the TAC 2008 update summarization
task. In Proceedings of Text Analysis Conference
(TAC).

Hal Daumé III and Daniel Marcu. 2006. Bayesian
query-focused summarization. In Proceedings of
the 44th Annual Meeting of the Association for Com-
putational Linguistics (ACL).

https://dl.acm.org/citation.cfm?id=2002534
https://nlp.stanford.edu/pubs/snli_paper.pdf
https://nlp.stanford.edu/pubs/snli_paper.pdf
https://nlp.stanford.edu/pubs/snli_paper.pdf
https://arxiv.org/abs/1711.04434
https://arxiv.org/abs/1711.04434
https://dl.acm.org/citation.cfm?id=291025
https://dl.acm.org/citation.cfm?id=291025
https://dl.acm.org/citation.cfm?id=291025
https://arxiv.org/pdf/1803.10357.pdf
https://arxiv.org/pdf/1803.10357.pdf
https://www.aclweb.org/anthology/S17-2001
https://www.aclweb.org/anthology/S17-2001
https://www.aclweb.org/anthology/S17-2001
https://aclweb.org/anthology/P18-1224
https://aclweb.org/anthology/P18-1224
https://aclweb.org/anthology/P18-1224
https://arxiv.org/abs/1805.11080
https://arxiv.org/abs/1805.11080
https://arxiv.org/abs/1805.11080
https://www.aclweb.org/anthology/P16-1046
https://www.aclweb.org/anthology/P16-1046
https://www.nist.gov/publications/overview-tac-2008-update-summarization-task
https://www.nist.gov/publications/overview-tac-2008-update-summarization-task
https://arxiv.org/abs/0907.1814
https://arxiv.org/abs/0907.1814


1036

Ying Ding and Jing Jiang. 2015. Towards opinion
summarization from online forums. In Proceedings
of the International Conference Recent Advances in
Natural Language Processing (RANLP).

Greg Durrett, Taylor Berg-Kirkpatrick, and Dan Klein.
2016. Learning-based single-document summariza-
tion with compression and anaphoricity constraints.
In Proceedings of the Association for Computational
Linguistics (ACL).

Günes Erkan and Dragomir R. Radev. 2004. LexRank:
Graph-based lexical centrality as salience in text
summarization. Journal of Artificial Intelligence
Research.

Katja Filippova, Enrique Alfonseca, Carlos Col-
menares, Lukasz Kaiser, and Oriol Vinyals. 2015.
Sentence compression by deletion with lstms. In
Proceedings of the Conference on Empirical Meth-
ods in Natural Language Processing (EMNLP).

Dimitrios Galanis and Ion Androutsopoulos. 2010. An
extractive supervised two-stage method for sentence
compression. In Proceedings of NAACL-HLT.

Kavita Ganesan, ChengXiang Zhai, and Jiawei Han.
2010. Opinosis: A graph-based approach to ab-
stractive summarization of highly redundant opin-
ions. In Proceedings of the International Confer-
ence on Computational Linguistics (COLING).

Sebastian Gehrmann, Yuntian Deng, and Alexander M.
Rush. 2018. Bottom-up abstractive summariza-
tion. In Proceedings of the Conference on Em-
pirical Methods in Natural Language Processing
(EMNLP).

Shima Gerani, Yashar Mehdad, Giuseppe Carenini,
Raymond T. Ng, and Bita Nejat. 2014. Abstractive
summarization of product reviews using discourse
structure. In Proceedings of the Conference on Em-
pirical Methods in Natural Language Processing
(EMNLP).

Dan Gillick and Benoit Favre. 2009. A scalable global
model for summarization. In Proceedings of the
NAACL Workshop on Integer Linear Programming
for Natural Langauge Processing.

Boqing Gong, Wei-Lun Chao, Kristen Grauman, and
Fei Sha. 2014. Diverse sequential subset selection
for supervised video summarization. In Proceedings
of Neural Information Processing Systems (NIPS).

Han Guo, Ramakanth Pasunuru, and Mohit Bansal.
2018. Soft, layer-specific multi-task summarization
with entailment and question generation. In Pro-
ceedings of the Annual Meeting of the Association
for Computational Linguistics (ACL).

Aria Haghighi and Lucy Vanderwende. 2009. Explor-
ing content models for multi-document summariza-
tion. In Proceedings of the North American Chap-
ter of the Association for Computational Linguistics
(NAACL).

Karl Moritz Hermann, Tomas Kocisky, Edward
Grefenstette, Lasse Espeholt, Will Kay, Mustafa Su-
leyman, and Phil Blunsom. 2015. Teaching ma-
chines to read and comprehend. In Proceedings of
Neural Information Processing Systems (NIPS).

Geoffrey Hinton, Sara Sabour, and Nicholas Frosst.
2018. Matrix capsules with EM routing. In Pro-
ceedings of the International Conference on Learn-
ing Representations (ICLR).

Tsutomu Hirao, Yasuhisa Yoshida, Masaaki Nishino,
Norihito Yasuda, and Masaaki Nagata. 2013.
Single-document summarization as a tree knapsack
problem. In Proceedings of the Conference on Em-
pirical Methods in Natural Language Processing
(EMNLP).

Kai Hong, John M Conroy, Benoit Favre, Alex
Kulesza, Hui Lin, and Ani Nenkova. 2014. A repos-
itory of state of the art and competitive baseline sum-
maries for generic news summarization. In Proceed-
ings of the Ninth International Conference on Lan-
guage Resources and Evaluation (LREC).

J. Edward Hu, Rachel Rudinger, Matt Post, and Ben-
jamin Van Durme. 2019. ParaBank: Monolingual
bitext generation and sentential paraphrasing via
lexically-constrained neural machine translation. In
Proceedings of the Association for the Advancement
of Artificial Intelligence (AAAI).

Chris Kedzie, Kathleen McKeown, and Hal Daume III.
2018. Content selection in deep learning models of
summarization. In Proceedings of the Conference
on Empirical Methods in Natural Language Pro-
cessing (EMNLP).

Gunhee Kim, Leonid Sigal, and Eric P. Xing. 2014.
Joint summarization of large-scale collections of
web images and videos for storyline reconstruction.
In Proceedings of CVPR.

Kevin Knight and Daniel Marcu. 2002. Summariza-
tion beyond sentence extraction: A probabilistic ap-
proach to sentence compression. Artificial Intelli-
gence.

Wojciech Kryscinski, Romain Paulus, Caiming Xiong,
and Richard Socher. 2018. Improving abstraction
in text summarization. In Proceedings of the Con-
ference on Empirical Methods in Natural Language
Processing (EMNLP).

Alex Kulesza and Ben Taskar. 2011. Learning de-
terminantal point processes. In Proceedings of the
Conference on Uncertainty in Artificial Intelligence
(UAI).

Alex Kulesza and Ben Taskar. 2012. Determinantal
Point Processes for Machine Learning. Now Pub-
lishers Inc.

Logan Lebanoff, Kaiqiang Song, Franck Dernoncourt,
Doo Soon Kim, Seokhwan Kim, Walter Chang, and
Fei Liu. 2019. Scoring sentence singletons and pairs

https://www.aclweb.org/anthology/R15-1020
https://www.aclweb.org/anthology/R15-1020
https://arxiv.org/abs/1603.08887
https://arxiv.org/abs/1603.08887
https://www.aaai.org/Papers/JAIR/Vol22/JAIR-2214.pdf
https://www.aaai.org/Papers/JAIR/Vol22/JAIR-2214.pdf
https://www.aaai.org/Papers/JAIR/Vol22/JAIR-2214.pdf
https://static.googleusercontent.com/media/research.google.com/en//pubs/archive/43852.pdf
https://www.aclweb.org/anthology/N10-1131
https://www.aclweb.org/anthology/N10-1131
https://www.aclweb.org/anthology/N10-1131
https://www.aclweb.org/anthology/C10-1039
https://www.aclweb.org/anthology/C10-1039
https://www.aclweb.org/anthology/C10-1039
https://arxiv.org/abs/1808.10792
https://arxiv.org/abs/1808.10792
https://emnlp2014.org/papers/pdf/EMNLP2014168.pdf
https://emnlp2014.org/papers/pdf/EMNLP2014168.pdf
https://emnlp2014.org/papers/pdf/EMNLP2014168.pdf
https://dl.acm.org/citation.cfm?id=1611640
https://dl.acm.org/citation.cfm?id=1611640
https://papers.nips.cc/paper/5413-diverse-sequential-subset-selection-for-supervised-video-summarization.pdf
https://papers.nips.cc/paper/5413-diverse-sequential-subset-selection-for-supervised-video-summarization.pdf
https://arxiv.org/abs/1805.11004
https://arxiv.org/abs/1805.11004
https://www.aclweb.org/anthology/N09-1041
https://www.aclweb.org/anthology/N09-1041
https://www.aclweb.org/anthology/N09-1041
https://arxiv.org/abs/1506.03340
https://arxiv.org/abs/1506.03340
https://openreview.net/pdf?id=HJWLfGWRb
https://www.aclweb.org/anthology/D13-1158
https://www.aclweb.org/anthology/D13-1158
http://www.lrec-conf.org/proceedings/lrec2014/pdf/1093_Paper.pdf
http://www.lrec-conf.org/proceedings/lrec2014/pdf/1093_Paper.pdf
http://www.lrec-conf.org/proceedings/lrec2014/pdf/1093_Paper.pdf
https://arxiv.org/abs/1901.03644
https://arxiv.org/abs/1901.03644
https://arxiv.org/abs/1901.03644
https://arxiv.org/abs/1810.12343
https://arxiv.org/abs/1810.12343
https://ieeexplore.ieee.org/document/6909934/
https://ieeexplore.ieee.org/document/6909934/
https://dl.acm.org/citation.cfm?id=604207
https://dl.acm.org/citation.cfm?id=604207
https://dl.acm.org/citation.cfm?id=604207
https://arxiv.org/abs/1808.07913
https://arxiv.org/abs/1808.07913
https://dl.acm.org/citation.cfm?id=3020597
https://dl.acm.org/citation.cfm?id=3020597
https://arxiv.org/abs/1207.6083
https://arxiv.org/abs/1207.6083


1037

for abstractive summarization. In Proceedings of
the Annual Meeting of the Association for Compu-
tational Linguistics (ACL).

Logan Lebanoff, Kaiqiang Song, and Fei Liu. 2018.
Adapting the neural encoder-decoder framework
from single to multi-document summarization. In
Proceedings of the Conference on Empirical Meth-
ods in Natural Language Processing (EMNLP).

Chen Li, Fei Liu, Fuliang Weng, and Yang Liu. 2013.
Document summarization via guided sentence com-
pression. In Proceedings of the 2013 Conference on
Empirical Methods in Natural Language Processing
(EMNLP).

Chen Li, Yang Liu, Fei Liu, Lin Zhao, and Fuliang
Weng. 2014. Improving multi-document summa-
rization by sentence compression based on expanded
constituent parse tree. In Proceedings of the Con-
ference on Empirical Methods on Natural Language
Processing (EMNLP).

Chin-Yew Lin. 2004. ROUGE: a package for au-
tomatic evaluation of summaries. In Proceedings
of ACL Workshop on Text Summarization Branches
Out.

Hui Lin and Jeff Bilmes. 2010. Multi-document sum-
marization via budgeted maximization of submodu-
lar functions. In Proceedings of NAACL.

Wencan Luo and Diane Litman. 2015. Summarizing
student responses to reflection prompts. In Proceed-
ings of the Conference on Empirical Methods in Nat-
ural Language Processing (EMNLP).

Wencan Luo, Fei Liu, Zitao Liu, and Diane Litman.
2016. Automatic summarization of student course
feedback. In Proceedings of the North American
Chapter of the Association for Computational Lin-
guistics: Human Language Technologies (NAACL).

Andre F. T. Martins and Noah A. Smith. 2009. Sum-
marization with a joint model for sentence extrac-
tion and compression. In Proceedings of the ACL
Workshop on Integer Linear Programming for Natu-
ral Language Processing.

Ramesh Nallapati, Feifei Zhai, and Bowen Zhou. 2017.
SummaRuNNer: A recurrent neural network based
sequence model for extractive summarization of
documents. In Proceedings of the Thirty-First AAAI
Conference on Artificial Intelligence (AAAI).

Ramesh Nallapati, Bowen Zhou, Cicero dos Santos,
Caglar Gulcehre, and Bing Xiang. 2016. Abstrac-
tive text summarization using sequence-to-sequence
rnns and beyond. In Proceedings of SIGNLL.

Shashi Narayan, Shay B. Cohen, and Mirella Lapata.
2018. Ranking sentences for extractive summariza-
tion with reinforcement learning. In Proceedings of
the 16th Annual Conference of the North American
Chapter of the Association for Computational Lin-
guistics: Human Language Technologies (NAACL-
HLT).

Ani Nenkova and Kathleen McKeown. 2011. Auto-
matic summarization. Foundations and Trends in
Information Retrieval.

Paul Over and James Yen. 2004. An introduction to
DUC-2004. National Institute of Standards and
Technology.

Romain Paulus, Caiming Xiong, and Richard Socher.
2017. A deep reinforced model for abstractive sum-
marization. In Proceedings of the Conference on
Empirical Methods in Natural Language Processing
(EMNLP).

Alexander M. Rush, Sumit Chopra, and Jason Weston.
2015. A neural attention model for sentence sum-
marization. In Proceedings of EMNLP.

Sara Sabour, Nicholas Frosst, and Geoffrey E. Hinton.
2017. Dynamic routing between capsules. In Pro-
ceedings of the 31st Conference on Neural Informa-
tion Processing Systems (NIPS).

Abigail See, Peter J. Liu, and Christopher D. Manning.
2017. Get to the point: Summarization with pointer-
generator networks. In Proceedings of the Annual
Meeting of the Association for Computational Lin-
guistics (ACL).

Chao Shen and Tao Li. 2010. Multi-document summa-
rization via the minimum dominating set. In Pro-
ceedings of the International Conference on Com-
putational Linguistics (COLING).

Kaiqiang Song, Lin Zhao, and Fei Liu. 2018.
Structure-infused copy mechanisms for abstractive
summarization. In Proceedings of the International
Conference on Computational Linguistics (COL-
ING).

Hiroya Takamura and Manabu Okumura. 2009. Text
summarization model based on maximum coverage
problem and its variant. In Proceedings of the Euro-
pean Chapter of the Association for Computational
Linguistics (EACL).

Jiwei Tan, Xiaojun Wan, and Jianguo Xiao. 2017.
Abstractive document summarization with a graph-
based attentional neural model. In Proceedings of
the Annual Meeting of the Association for Computa-
tional Linguistics (ACL).

Sansiri Tarnpradab, Fei Liu, and Kien A. Hua. 2017.
Toward extractive summarization of online forum
discussions via hierarchical attention networks. In
Proceedings of the 30th Florida Artificial Intelli-
gence Research Society Conference (FLAIRS).

Kapil Thadani and Kathleen McKeown. 2013. Sen-
tence compression with joint structural inference. In
Proceedings of CoNLL.

Lucy Vanderwende, Hisami Suzuki, Chris Brockett,
and Ani Nenkova. 2007. Beyond SumBasic: Task-
focused summarization with sentence simplification
and lexical expansion. Information Processing and
Management, 43(6):1606–1618.

https://aclweb.org/anthology/D18-1446
https://aclweb.org/anthology/D18-1446
https://www.aclweb.org/anthology/D13-1047
https://www.aclweb.org/anthology/D13-1047
https://www.aclweb.org/anthology/D14-1076
https://www.aclweb.org/anthology/D14-1076
https://www.aclweb.org/anthology/D14-1076
https://www.aclweb.org/anthology/W04-1013
https://www.aclweb.org/anthology/W04-1013
https://aclweb.org/anthology/N10-1134
https://aclweb.org/anthology/N10-1134
https://aclweb.org/anthology/N10-1134
https://www.aclweb.org/anthology/D15-1227
https://www.aclweb.org/anthology/D15-1227
https://www.aclweb.org/anthology/N16-1010
https://www.aclweb.org/anthology/N16-1010
https://www.aclweb.org/anthology/W09-1801
https://www.aclweb.org/anthology/W09-1801
https://www.aclweb.org/anthology/W09-1801
https://arxiv.org/abs/1611.04230
https://arxiv.org/abs/1611.04230
https://arxiv.org/abs/1611.04230
https://arxiv.org/abs/1602.06023
https://arxiv.org/abs/1602.06023
https://arxiv.org/abs/1602.06023
https://arxiv.org/abs/1802.08636
https://arxiv.org/abs/1802.08636
https://www.nowpublishers.com/article/Details/INR-015
https://www.nowpublishers.com/article/Details/INR-015
https://duc.nist.gov/pubs/2004slides/duc2004.intro.pdf
https://duc.nist.gov/pubs/2004slides/duc2004.intro.pdf
https://arxiv.org/abs/1705.04304
https://arxiv.org/abs/1705.04304
https://www.aclweb.org/anthology/D15-1044
https://www.aclweb.org/anthology/D15-1044
https://papers.nips.cc/paper/6975-dynamic-routing-between-capsules.pdf
https://arxiv.org/abs/1704.04368
https://arxiv.org/abs/1704.04368
https://www.aclweb.org/anthology/C10-1111
https://www.aclweb.org/anthology/C10-1111
https://aclweb.org/anthology/C18-1146
https://aclweb.org/anthology/C18-1146
https://www.aclweb.org/anthology/E09-1089
https://www.aclweb.org/anthology/E09-1089
https://www.aclweb.org/anthology/E09-1089
https://www.aclweb.org/anthology/P17-1108
https://www.aclweb.org/anthology/P17-1108
https://arxiv.org/abs/1805.10390
https://arxiv.org/abs/1805.10390
https://www.aclweb.org/anthology/W13-3508
https://www.aclweb.org/anthology/W13-3508
https://www.cis.upenn.edu/~nenkova/papers/ipm.pdf
https://www.cis.upenn.edu/~nenkova/papers/ipm.pdf
https://www.cis.upenn.edu/~nenkova/papers/ipm.pdf


1038

Lu Wang, Hema Raghavan, Vittorio Castelli, Radu Flo-
rian, and Claire Cardie. 2013. A sentence com-
pression based framework to query-focused multi-
document summarization. In Proceedings of ACL.

Adina Williams, Nikita Nangia, and Samuel R. Bow-
man. 2018. A broad-coverage challenge corpus for
sentence understanding through inference. In Pro-
ceedings of the North American Chapter of the As-
sociation for Computational Linguistics (NAACL).

Min Yang, Qiang Qu, Ying Shen, Qiao Liu, Wei Zhao,
and Jia Zhu. 2018. Aspect and sentiment aware
abstractive review summarization. Proceedings of
the International Conference on Computational Lin-
guistics (COLING).

Michihiro Yasunaga, Rui Zhang, Kshitijh Meelu,
Ayush Pareek, Krishnan Srinivasan, and Dragomir
Radev. 2017. Graph-based neural multi-document
summarization. In Proceedings of the Confer-
ence on Computational Natural Language Learning
(CoNLL).

Dani Yogatama, Fei Liu, and Noah A. Smith. 2015.
Extractive summarization by maximizing semantic
volume. In Proceedings of the Conference on Em-
pirical Methods on Natural Language Processing
(EMNLP).

David Zajic, Bonnie J. Dorr, Jimmy Lin, and Richard
Schwartz. 2007. Multi-candidate reduction: Sen-
tence compression as a tool for document summa-
rization tasks. Information Processing and Manage-
ment.

Ke Zhang, Wei-Lun Chao, Fei Sha, and Kristen Grau-
man. 2016. Video summarization with long short-
term memory. In Proceedings of the European Con-
ference on Computer Vision (ECCV).

Wei Zhao, Haiyun Peng, Steffen Eger, Erik Cambria,
and Min Yang. 2019. Towards scalable and general-
izable capsule network and its NLP applications. In
Proceedings of the Annual Meeting of the Associa-
tion for Computational Linguistics (ACL).

Wei Zhao, Jianbo Ye, Min Yang, Zeyang Lei, Soufei
Zhang, and Zhou Zhao. 2018. Investigating cap-
sule networks with dynamic routing for text clas-
sification. In Proceedings of the Conference on
Empirical Methods in Natural Language Processing
(EMNLP).

Qingyu Zhou, Nan Yang, Furu Wei, and Ming Zhou.
2017. Selective encoding for abstractive sentence
summarization. In Proceedings of the Annual Meet-
ing of the Association for Computational Linguistics
(ACL).

A Supplemental Material

In this section we summarize the hyperparameters
used for the capsule networks. They include: the
embedding size E is set to 300 dimensions; the
maximum sentence length L is 44 words; in the
convolutional layer we use d=100 filters for each
filter size, and there are 5 filter sizes in total: k ∈
{3, 4, 5, 6, 7}. The number of high-level capsules
M is set to 12, and the dimension of capsules B is
set to 30, both are tuned on the development set.
The dynamic routing process is repeated for r=3
iterations, following (Sabour et al., 2017). Further,
the coefficient λ for the reconstruction loss term is
set to 5e-5. We use a vocabulary of 50K words
for reconstructing the sentences; they are the most
frequently appearing words of the dataset.

https://arxiv.org/abs/1606.07548
https://arxiv.org/abs/1606.07548
https://arxiv.org/abs/1606.07548
https://arxiv.org/abs/1704.05426
https://arxiv.org/abs/1704.05426
https://www.aclweb.org/anthology/C18-1095
https://www.aclweb.org/anthology/C18-1095
https://www.aclweb.org/anthology/D15-1228
https://www.aclweb.org/anthology/D15-1228
http://users.umiacs.umd.edu/~jimmylin/publications/Zajic_etal_IPM2007.pdf
http://users.umiacs.umd.edu/~jimmylin/publications/Zajic_etal_IPM2007.pdf
http://users.umiacs.umd.edu/~jimmylin/publications/Zajic_etal_IPM2007.pdf
https://arxiv.org/abs/1605.08110
https://arxiv.org/abs/1605.08110
https://arxiv.org/abs/1804.00538
https://arxiv.org/abs/1804.00538
https://arxiv.org/abs/1804.00538
https://arxiv.org/abs/1704.07073
https://arxiv.org/abs/1704.07073

