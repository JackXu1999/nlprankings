



















































Dependency-Guided LSTM-CRF for Named Entity Recognition


Proceedings of the 2019 Conference on Empirical Methods in Natural Language Processing
and the 9th International Joint Conference on Natural Language Processing, pages 3862–3872,
Hong Kong, China, November 3–7, 2019. c©2019 Association for Computational Linguistics

3862

Dependency-Guided LSTM-CRF for Named Entity Recognition

Zhanming Jie and Wei Lu
StatNLP Research Group

Singapore University of Technology and Design
zhanming jie@mymail.sutd.edu.sg, luwei@sutd.edu.sg

Abstract

Dependency tree structures capture long-
distance and syntactic relationships between
words in a sentence. The syntactic relations
(e.g., nominal subject, object) can potentially
infer the existence of certain named entities.
In addition, the performance of a named en-
tity recognizer could benefit from the long-
distance dependencies between the words in
dependency trees. In this work, we pro-
pose a simple yet effective dependency-guided
LSTM-CRF model to encode the complete de-
pendency trees and capture the above proper-
ties for the task of named entity recognition
(NER). The data statistics show strong cor-
relations between the entity types and depen-
dency relations. We conduct extensive experi-
ments on several standard datasets and demon-
strate the effectiveness of the proposed model
in improving NER and achieving state-of-the-
art performance. Our analysis reveals that the
significant improvements mainly result from
the dependency relations and long-distance in-
teractions provided by dependency trees.

1 Introduction

Named entity recognition (NER) is one of the
most important and fundamental tasks in natural
language processing (NLP). Named entities cap-
ture useful semantic information which was shown
helpful for downstream NLP tasks such as corefer-
ence resolution (Lee et al., 2017), relation extrac-
tion (Miwa and Bansal, 2016) and semantic pars-
ing (Dong and Lapata, 2018). On the other hand,
dependency trees also capture useful semantic in-
formation within natural language sentences. Cur-
rently, research efforts have derived useful discrete
features from dependency structures (Sasano and
Kurohashi, 2008; Cucchiarelli and Velardi, 2001;
Ling and Weld, 2012) or structural constraints (Jie
et al., 2017) to help the NER task. However, how

LOC

EVENT GPE

They suffer from drug dealing and loitering near their premises

nsubj prep prep

pobj

cc

conj

prep

poss
pobj

The seminar on the actual practice of tax reform was held in Hong Kong

det prep
det

amod

pobj

prep nn
pobj

auxpass prep
pobj

nn

nsubjpass

Figure 1: Example sentences annotated with named en-
titeis and dependencies in the OntoNotes 5.0 dataset.

to make good use of the rich relational informa-
tion as well as complex long-distance interactions
among words as conveyed by the complete depen-
dency structures for improved NER remains a re-
search question to be answered.

The first example in Figure 1 illustrates the re-
lationship between a dependency structure and a
named entity. Specifically, the word “premises”,
which is a named entity of type LOC (location),
is characterized by the incoming arc with label
“pobj” (prepositional object). This arc reveals a
certain level of the semantic role that the word
“premises” plays in the sentence. Similarly, the
two words “Hong Kong” in the second example
that form an entity of type GPE are also character-
ized by a similar dependency arc towards them.

The long-distance dependencies capturing non-
local structural information can also be very help-
ful for the NER task (Finkel et al., 2005). In the
second example of Figure 1, the long-distance de-
pendency from “held” to “seminar” indicates a
direct relation “nsubjpass” (passive subject) be-
tween them, which can be used to characterize the
existence of an entity. However, existing NER
models based on linear-chain structures would
have difficulties in capturing such long-distance
relations (i.e., non-local structures).

One interesting property, as highlighted in the
work of Jie et al. (2017), is that most of the en-



3863

tities form subtrees under their corresponding de-
pendency trees. In the example of the EVENT en-
tity in Figure 1, the entity itself forms a subtree
and the words inside have rich complex dependen-
cies among themselves. Exploiting such depen-
dency edges within the subtrees allows a model
to capture non-trivial semantic-level interactions
between words within long entities. For exam-
ple, “practice” is the prepositional object (pobj)
of “on” which is a preposition (prep) of “semi-
nar” in the EVENT entity. Modeling these grand-
child dependencies (GD) (Koo and Collins, 2010)
requires the model to capture some higher-order
long-distance interactions among different words
in a sentence.

Inspired by the above characteristics of de-
pendency structures, in this work, we propose a
simple yet effective dependency-guided model
for NER. Our neural network based model is
able to capture both contextual information and
rich long-distance interactions between words for
the NER task. Through extensive experiments
on several datasets on different languages, we
demonstrate the effectiveness of our model, which
achieves the state-of-the-art performance. To the
best of our knowledge, this is the first work that
leverages the complete dependency graphs for
NER. We make our code publicly available at
http://www.statnlp.org/research/
information-extraction.

2 Related Work

NER has been a long-standing task in the field
of NLP. While many recent works (Peters et al.,
2018a; Akbik et al., 2018; Devlin et al., 2019) fo-
cus on finding good contextualized word represen-
tations for improving NER, our work is mostly re-
lated to the literature that focuses on employing
dependency trees for improving NER.

Sasano and Kurohashi (2008) exploited the syn-
tactic dependency features for Japanese NER and
achieved improved performance with a support
vector machine (SVM) (Cortes and Vapnik, 1995)
classifier. Similarly, Ling and Weld (2012) in-
cluded the head word in a dependency edge as
features for fine-grained entity recognition. Their
approach is a pipeline where they extract the en-
tity mentions with linear-chain conditional ran-
dom fields (CRF) (Lafferty et al., 2001) and used
a classifier to predict the entity type. Liu et al.
(2010) proposed to link the words that are associ-

ated with selected typed dependencies (e.g., “nn”,
“prep”) using a skip-chain CRF (Sutton and Mc-
Callum, 2004) model. They showed that some
specific relations between the words can be ex-
ploited for improved NER. Cucchiarelli and Ve-
lardi (2001) applied a dependency parser to ob-
tain the syntactic relations for the purpose of un-
supervised NER. The resulting relation informa-
tion serves as the features for potential existence
of named entities. Jie et al. (2017) proposed an
efficient dependency-guided model based on the
semi-Markov CRF (Sarawagi and Cohen, 2004)
for NER. The purpose is to reduce time complex-
ity while maintaining the non-Markovian features.
They observed certain relationships between the
dependency edges and the named entities. Such
relationships are able to define a reduced search
space for their model. While these previous ap-
proaches do not make full use of the dependency
tree structures, we focus on exploring neural archi-
tectures to exploit the complete structural informa-
tion conveyed by the dependency trees.

3 Model

Our dependency-guided model is based on the
state-of-the-art BiLSTM-CRF model proposed by
Lample et al. (2016). We first briefly present
their model as background and next present our
dependency-guided model.

3.1 Background: BiLSTM-CRF
In the task of named entity recognition, we aim to
predict the label sequence y = {y1, y2, · · · , yn}
given the input sentence x = {x1, x2, · · · , xn}
where n is the number of words. The labels in
y are defined by a label set with the standard
IOBES1 labeling scheme (Ramshaw and Marcus,
1999; Ratinov and Roth, 2009). The CRF (Laf-
ferty et al., 2001) layer defines the probability of
the label sequence y given x:

P (y|x) = exp(score(x,y))∑
y′ exp(score(x,y

′))
(1)

Following Lample et al. (2016), the score is de-
fined as the sum of transitions and emissions from
the bidirectional LSTM (BiLSTM):

score(x,y) =

n∑
i=0

Ayi,yi+1 +

n∑
i=1

Fx,yi (2)

1“S-” indicates the entity with a single word and “E-” in-
dicates the end of an entity.

http://www.statnlp.org/research/information-extraction
http://www.statnlp.org/research/information-extraction


3864

where A is a transition matrix in which Ayi,yi+1
is the transition parameter from the label yi to the
label yi+12. Fx is an emission matrix where Fx,yi
represents the scores of the label yi at the i-th po-
sition. Such scores are provided by the parameter-
ized LSTM (Hochreiter and Schmidhuber, 1997)
networks. During training, we minimize the nega-
tive log-likelihood to obtain the model parameters
including both LSTM and transition parameters.

3.2 Dependency-Guided LSTM-CRF
Input Representations The word representa-
tion w in the BiLSTM-CRF (Lample et al., 2016;
Ma and Hovy, 2016; Reimers and Gurevych,
2017) model consists of the concatenation of the
word embedding as well as the corresponding
character-based representation. Inspired by the
fact that each word (except the root) in a sentence
has exactly one head (i.e., parent) word in the de-
pendency structure, we can enhance the word rep-
resentations with such dependency information.
Similar to the work by Miwa and Bansal (2016),
we concatenate the word representation together
with the corresponding head word representation
and dependency relation embedding as the input
representation. Specifically, given a dependency
edge (xh, xi, r) with xh as parent, xi as child and
r as dependency relation, the representation at po-
sition i can be denoted as:

ui = [wi;wh;vr] , xh = parent(xi) (3)

where wi and wh are the word representations of
the word xi and its parent xh, respectively. We
take the final hidden state of character-level BiL-
STM as the character-based representation (Lam-
ple et al., 2016). vr is the embedding for the
dependency relation r. These relation embed-
dings are randomly initialized and fine-tuned dur-
ing training. The above representation allows us to
capture the direct long-distance interactions at the
input layer. For the word that is a root of the de-
pendency tree, we treat its parent as itself3 and cre-
ate a root relation embedding. Additionally, con-
textualized word representations (e.g., ELMo) can
also be concatenated into u.

Neural Architecture Given the dependency-
encoded input representation u, we apply the
LSTM to capture the contextual information and

2y0 and yn+1 are start and end labels.
3We also tried using a root word embedding but the per-

formance is similar.

Abramov had an accident in Moscow

nsubj det
dobj

prep

pobj

u1 u2 u3 u4 u5 u6

LSTM LSTM LSTM LSTM LSTM LSTM

g(·) g(·) g(·) g(·) g(·) g(·)

LSTM LSTM LSTM LSTM LSTM LSTM

S-PER O O O O S-GPE

Figure 2: Dependency-guided LSTM-CRF with 2
LSTM Layers. Dashed connections mimic the depen-
dency edges. “g(·)” represents the interaction function.

model the interactions between the words and their
corresponding parents in the dependency trees.
Figure 2 shows the proposed dependency-guided
LSTM-CRF (DGLSTM-CRF) with 2 LSTM lay-
ers for the example sentence “Abramov had an ac-
cident in Moscow” and its dependency structure.
The corresponding label sequence is {S-PER, O,
O, O, O, S-GPE}. Followed by the first BiLSTM,
the hidden states at each position will propagate
to the next BiLSTM layer and its child along the
dependency trees. For example, the hidden state
of the word “had”, h(1)2 , will propagate to its child
“Abramov” at the first position. For the word that
is root, the hidden state at that specific position
will propagate to itself. We use an interaction
function g(hi,hpi) to capture the interaction be-
tween the child and its parent in a dependency.
Such an interaction function can be concatena-
tion, addition or a multilayer perceptron (MLP).
We further apply another BiLSTM layer on top
of the interaction functions to produce the context
representation for the final CRF layer.

The architecture shown in Figure 2 with a 2-
layer BiLSTM can effectively encode the grand-
child dependencies because the input representa-
tions encode the parent information and the inter-
action function further propagate the grandparent
information. Such propagations allow the model
to capture the indirect long-distance interactions
from the grandchild dependencies between the
words in the sentence as mentioned in Section 1.
In general, we can stack more interaction func-
tions and BiLSTMs to enable deeper reasoning
over the dependency trees. Specifically, the hid-



3865

Interaction Function g(hi,hpi)

Self connection hi
Concatenation hi

⊕
hpi

Addition hi + hpi
MLP ReLU

(
W1hi+W2hpi

)
Table 1: List of interaction functions.

den states of the (l + 1)-th layer H(l+1) can be
calculated from the hidden state of the previous
layer H(l):

H(l+1)=BiLSTM
(
f
(
H(l)

))
H(l)=

[
h
(l)
1 ,h

(l)
2 , · · · ,h

(l)
n

]
f
(
H(l)

)
=
[
g(h

(l)
1 ,h

(l)
p1 ), · · · , g(h

(l)
n ,h

(l)
pn)
]

where pi indicates the parent index of the word
xi. g(h

(l)
i ,h

(l)
pi ) represents the interaction func-

tions between the hidden state at the i-th and pi-
th positions under the dependency edges (xpi , xi).
The number of layers L can be chosen according
to the performance on the development set.

Interaction Function The interaction function
between the parent and child representations can
be defined in various ways. Table 1 shows the
list of interaction function considered in our ex-
periments. The first one returns the hidden state
itself, which is equivalent to stacking the LSTM
layers. The concatenation and addition involve
no parameter, which are straightforward ways to
model the interactions. The last one applies an
MLP to model the interaction between parent and
child representations. With the rectified linear unit
(ReLU) as activation function, the g(hi,hpi) func-
tion is analogous to a graph convolutional network
(GCN) (Kipf and Welling, 2017) formulation. In
such a graph, each node has a self connection (i.e.,
hi) and a dependency connection with parent (i.e.,
hpi). Similar to the work by Marcheggiani and
Titov (2017), we adopt different parameters W1
and W2 for self and dependency connections.

4 Experiments

Datasets The main experiments are conducted
on the large-scale OntoNotes 5.0 (Weischedel
et al., 2013) English and Chinese datasets. We
chose these datasets because they contain both
constituency tree and named entity annotations.
There are 18 types of entities defined in the
OntoNotes dataset. We convert the constituency

Dataset
Train Dev Test ST GD

# Sent. # Entity # Sent. # Entity # Sent. # Entity (%) (%)

OntoNotes 5.0 - English 59,924 81,828 8,528 11,066 8,262 11,057 098.5 41.1
OntoNotes 5.0 - Chinese 36,487 62,543 6,083 09,104 4,472 07,494 092.9 49.1
SemEval2010T1 - Catalan 08,709 15,278 1,445 02,431 1,698 02,910 100.0 28.6
SemEval2010T1 - Spanish 09,022 17,297 1,419 02,615 1,705 03,046 100.0 29.8

Table 2: Dataset statistics. “ST” is the ratio of entities
that form subtrees. “GD” is the ratio of entities that
have grandchild dependencies within their subtrees.

trees into the Stanford dependency (De Marn-
effe and Manning, 2008) trees using the rule-
based tool (De Marneffe et al., 2006) by Stanford
CoreNLP (Manning et al., 2014). For English,
Pradhan et al. (2013) provided the train/dev/test
split4 and the split has been used by several pre-
vious works (Chiu and Nichols, 2016; Li et al.,
2017; Ghaddar and Langlais, 2018). For Chinese,
we use the official splits provided by Pradhan et al.
(2012)5.

Besides, we also conduct experiments on the
Catalan and Spanish datasets from the SemEval-
2010 Task 16 (Recasens et al., 2010)7. The
SemEval-2010 task was originally designed for
the task of coreference resolution in multiple lan-
guages. Again, we chose these corpora primarily
because they contain both dependency and named
entity annotations. Following Finkel and Man-
ning (2009) and Jie et al. (2017), we select the
most dominant three entity types and merge the
rest into one general a entity type “misc”. Table
2 shows the statistics of the datasets used in main
experiments. To further evaluate the effectiveness
of the dependency structures, we also conduct ad-
ditional experiments under a low-resource setting
for NER (Cotterell and Duh, 2017).

The last two columns of Table 2 show the
relationships between the dependency trees and
named entities with length larger than 2 for the
complete dataset. Specifically, the penultimate
column shows the percentage of entities that can
form a complete subtree (ST) under their depen-
dency tree structures. Apparently, most of the en-
tities form subtrees, especially for the Catalan and
Spanish datasets where 100% entities form sub-
trees. This observation is consistent with the find-
ings reported in Jie et al. (2017). The last column
in Table 2 shows the percentage of the grandchild

4http://cemantix.org/data/ontonotes.html
5http://conll.cemantix.org/2012/data.html
6http://stel.ub.edu/semeval2010-coref/download
7This dataset also has English portion but it is a subset of

the OntoNotes English.



3866

 #
/&
(#

 &
(# "(

'% #$
) #$

-
#(
!% ''

',
.!
%
'.
&

'.
&!
$+

)(
!%

)(
,,

)+$
)
).
'"
-

*.
 '
-&
(#

-&
(#

�
����
�

�
�

���

�
�

��

�
���
�

�
�

���

����

����

�����
�

���

�����

�����

�������

��
�����

���

��������
��

� � � � � � � � �� � � � � � � �
� �� � � �� � � � �� � �� � � � � �
� � � � �� � �� � � � �	 � � � � �
� � � � �� � �� � � � �� � � � � �
� � � � � � �� � � � �� � � � � �
� �� � � � �� �� � � � �� � � � � �
� � � � �� � �� � � � �� � � � � �
� � � � �� � �� � � � �� � � � � �
� � � � � 	 � � �� �� �� � � � � �
� �� � � � � � � � � � � � � � �
�� �� � � � � � � � � � � � � � �
� � � � 	 � �� 	 � � �� � � � � �
� � � � � 	 � � �� � �� � � � � �
� � � � � � �� �� � � 	 � � � � �
� � � � 	 � �� � � � �� � � �� � �
� � � � � � � � �� � �� � � � � �
� � � � �� � � � �� � �� � � � � �
� � � � �� � �� � � � �� � � 	 � �

�

��

��

��

��

���

Figure 3: Percentage of entity words (y axis) with re-
spect to dependency relations (x axis) in the OntoNotes
English dataset. Columns with percentage less than 5%
are ignored for brevity.

dependencies (Koo and Collins, 2010) (GD) that
exist in these subtrees (i.e., entities). Such grand-
child dependencies could be useful for detecting
certain named entities, especially for long entities.
As we will see later in Section 5, the performance
of long entities can be significantly improved with
our dependency-guide model.

The heatmap table in Figure 3 shows the corre-
lation between the entity types and the dependency
relations in the OntoNotes English dataset. Specif-
ically, each entry denotes the percentage of the en-
tities that have a parent dependency with a specific
dependency relation. For example, at the row with
GPE entity, 37% of the entity words8 have a depen-
dency edge whose label is “pobj”. When looking
at column of “pobj” and “nn”, we can see that most
of the entities relate to the prepositional object
(pobj) and noun compound modifier (nn) depen-
dencies. Especially for the NORP (i.e., nationali-
ties or religious or political groups) and ORDINAL
(e.g., “first”, “second”) entities, more than 60% of
the entity words have the dependency with adjec-
tival modifier (amod) relation. Furthermore, every
entity type (i.e., row) has a most related depen-
dency relation (with more than 17% occurrences).
Such observations present useful information that
can be used to categorize named entities with dif-
ferent types.

Baselines We implemented the state-of-the-art
NER model BiLSTM-CRF (Lample et al., 2016)
as the first baseline with different number of
LSTM layers (L = {0, 1, 2, 3}). L = 0 indi-

8The words that are annotated with entity labels.

cates the model only relies on the input representa-
tion. Following Zhang et al. (2018), the complete
dependency trees are considered bidirectional and
encoded with a contextualized GCN (BiLSTM-
GCN). We further add the relation-specific param-
eters (Marcheggiani and Titov, 2017) and a CRF
layer for the NER task. The resulting baseline is
BiLSTM-GCN-CRF 9. We use the bootstrapping
paired t-test (Berg-Kirkpatrick et al., 2012) for sig-
nificance test when comparing the results of differ-
ent models.

Experimental Setup We choose MLP as the in-
teraction function in our DGLSTM-CRF accord-
ing to performance on the development set. The
hidden size of all models (i.e., LSTM, GCN) is
set to 200. We use the Glove (Pennington et al.,
2014) 100-d word embeddings, which was shown
to be effective in English NER task (Ma and Hovy,
2016; Peters et al., 2018a). We use the publicly
available FastText (Grave et al., 2018) word em-
beddings for Chinese, Catalan and Spanish. The
ELMo (Peters et al., 2018a), deep contextualized
word representations10 are used for all languages
in our experiments since Che et al. (2018) pro-
vides ELMo for many other languages11, includ-
ing Chinese, Catalan and Spanish. We use the
average weights over all layers of the ELMo rep-
resentations and concatenate them with the input
representation u. Our models are optimized by
mini-batch stochastic gradient descent (SGD) with
learning rate 0.01 and batch size 10. The L2 regu-
larization parameter is 1e-8. The hyperparameters
are selected according to the performance on the
OntoNotes English development set.

4.1 Main Results

OntoNotes English Table 3 shows the perfor-
mance comparison between our work and previ-
ous work on the OntoNotes English dataset. With-
out the LSTM layers (i.e., L = 0), the proposed
model with dependency information significantly
improves the NER performance with more than 2
points in F1 compared to the baseline BiLSTM-
CRF (L = 0), which demonstrate the effective-

9Detailed description of this baseline can also be found in
the supplementary material.

10We also tried BERT (Devlin et al., 2019) in preliminary
experiments and obtained similar performance as ELMo. The
NER performance using BERT without fine-tuning reported
in Peters et al. (2019) is consistent with the one reported by
ELMo (Peters et al., 2018a).

11https://github.com/HIT-SCIR/ELMoForManyLangs



3867

Model Prec. Rec. F1
Chiu and Nichols (2016) 86.04 86.53 86.28
Li et al. (2017) 88.00 86.50 87.21
Ghaddar and Langlais (2018) - - 87.95
Strubell et al. (2017) - - 86.84

BiLSTM-CRF (L = 0) 82.03 80.78 81.40
BiLSTM-CRF (L = 1) 87.21 86.93 87.07
BiLSTM-CRF (L = 2) 87.89 87.68 87.78
BiLSTM-CRF (L = 3) 87.81 87.50 87.65
BiLSTM-GCN-CRF 88.30 88.06 88.18

DGLSTM-CRF (L = 0) 85.31 82.19 84.09
DGLSTM-CRF (L = 1) 88.78 87.29 88.03
DGLSTM-CRF (L = 2) 88.53 88.50 88.52
DGLSTM-CRF (L = 3) 87.59 88.93 88.25
Contextualized Word Representation
Akbik et al. (2018) (Flair) - - 89.30

BiLSTM-CRF (L = 0) + ELMo 85.44 84.41 84.92
BiLSTM-CRF (L = 1) + ELMo 89.14 88.59 88.87
BiLSTM-CRF (L = 2) + ELMo 88.25 89.71 88.98
BiLSTM-CRF (L = 3) + ELMo 88.03 89.04 88.53
BiLSTM-GCN-CRF + ELMo 89.40 89.71 89.55

DGLSTM-CRF (L = 0) + ELMo 86.87 85.12 85.99
DGLSTM-CRF (L = 1) + ELMo 89.40 89.96 89.68
DGLSTM-CRF (L = 2) + ELMo 89.59 90.17 89.88
DGLSTM-CRF (L = 3) + ELMo 89.43 90.15 89.79

Table 3: Performance comparison on the OntoNotes
5.0 English dataset.

ness of dependencies for the NER task. Our best
performing BiLSTM-CRF baseline (with Glove)
achieves a F1 score of 87.78 which is better than
or on par with previous works (Chiu and Nichols,
2016; Li et al., 2017; Ghaddar and Langlais, 2018)
with extra features. This baseline also outperforms
the CNN-based models (Strubell et al., 2017; Li
et al., 2017). The BiLSTM-GCN-CRF model out-
performs the BiLSTM-CRF model but achieves
inferior performance compared to the proposed
DGLSTM-CRF model. We believe it is chal-
lenging to preserve the surrounding context in-
formation with stacking GCN layers while con-
textual information is important for NER (Peters
et al., 2018b). Overall, the 2-layer DGLSTM-
CRF model significantly (with p < 0.01) out-
performs the best BiLSTM-CRF baseline and the
BiLSTM-GCN-CRF model. As we can see from
the table, increasing the number of layers (e.g., L
= 3) does not give us further improvements for
both BiLSTM-CRF and DGLSTM-CRF because
such third-order information (e.g., the relationship
among a words parent, its grandparent, and great-
grandparent) does not play an important role in in-
dicating the presence of named entities.

Model Prec. Rec. F1
Pradhan et al. (2013) 78.20 66.45 71.85
Lattice LSTM (Z&Y, 2018) 76.34 77.01 76.67

BiLSTM-CRF (L = 0) 76.67 67.79 71.95
BiLSTM-CRF (L = 1) 78.45 74.59 76.47
BiLSTM-CRF (L = 2) 77.94 75.33 76.61
BiLSTM-CRF (L = 3) 76.17 75.23 75.70
BiLSTM-GCN-CRF 76.35 75.89 76.12

DGLSTM-CRF (L = 0) 76.91 70.65 73.65
DGLSTM-CRF (L = 1) 77.79 75.29 76.52
DGLSTM-CRF (L = 2) 77.40 77.41 77.40
DGLSTM-CRF (L = 3) 77.01 74.90 75.94
Contextualized Word Representation
BiLSTM-CRF (L = 0) + ELMo 75.20 73.39 74.28
BiLSTM-CRF (L = 1) + ELMo 79.20 79.21 79.20
BiLSTM-CRF(L = 2) + ELMo 78.49 79.44 78.96
BiLSTM-CRF (L = 3) + ELMo 78.54 79.76 79.14
BiLSTM-GCN-CRF + ELMo 78.71 79.29 79.00

DGLSTM-CRF (L = 0) + ELMo 76.27 74.61 75.43
DGLSTM-CRF (L = 1) + ELMo 78.91 80.22 79.56
DGLSTM-CRF (L = 2) + ELMo 78.86 81.00 79.92
DGLSTM-CRF (L = 3) + ELMo 79.30 79.86 79.58

Table 4: Performance comparison on the OntoNotes
5.0 Chinese Dataset.

We further compare the performance of all
models with ELMo (Peters et al., 2018a) repre-
sentations to investigate whether the effect of de-
pendency would be diminished by the contextual-
ized word representations. With L = 0, the ELMo
representations largely improve the performance
of BiLSTM-CRF compared to the BiLSTM-CRF
model with word embeddings only but is still 1
point below our DGLSTM-CRF model. The 2-
layer DGLSTM-CRF model outperforms the best
BilSTM-CRF baseline with 0.9 points in F1 (p <
0.001). Empirically, we found that among the enti-
ties that are correctly predicted by DGLSTM-CRF
but wrongly predicted by BiLSTM-CRF, 47% of
them are with length more than 2. Our finding
shows the 2-layer DGLSTM-CRF model is able to
accurately recognize long entities, which can lead
to a higher precision. In addition, 51.9% of the
entities that are correctly retrieved by DGLSTM-
CRF have the dependency relations “pobj”, “nn”
and “nsubj”, which have strong correlations with
certain named entity types (Figure 3). Such a re-
sult demonstrates the effectiveness of dependency
relations in improving the recall of NER.

OntoNotes Chinese Table 4 shows the perfor-
mance comparison on the Chinese datasets. We
compare our models against the state-of-the-art



3868

Model Catalan Spanish
Prec. Rec. F1 Prec. Rec. F1

BiLSTM-CRF (L = 0) 65.91 49.90 56.80 65.97 52.63 58.55
BiLSTM-CRF (L = 1) 76.83 63.47 69.51 78.33 69.89 73.87
BiLSTM-CRF (L = 2) 73.79 67.63 70.58 77.73 70.91 74.16
BiLSTM-CRF (L = 3) 74.75 67.35 70.86 76.41 72.95 74.64
BiLSTM-GCN-CRF 81.25 75.22 78.12 84.10 79.88 81.93

DGLSTM-CRF (L = 0) 73.42 61.79 67.10 74.90 61.21 67.38
DGLSTM-CRF (L = 1) 81.87 79.28 80.55 83.21 81.19 82.19
DGLSTM-CRF (L = 2) 83.35 80.00 81.64 84.05 82.90 83.47
DGLSTM-CRF (L = 3) 81.87 80.21 81.03 84.12 83.45 83.78
Contextualized Word Representation
BiLSTM-CRF (L = 0) + ELMo 67.53 64.47 65.96 73.16 69.01 71.03
BiLSTM-CRF (L = 1) + ELMo 77.85 76.22 77.03 81.72 79.09 80.38
BiLSTM-CRF(L = 2) + ELMo 78.61 78.32 78.46 80.89 80.30 80.59
BiLSTM-CRF(L = 3) + ELMo 79.11 77.32 78.21 80.48 79.45 79.96
BiLSTM-GCN-CRF + ELMo 83.68 83.16 83.42 85.31 85.19 85.25

DGLSTM-CRF (L = 0) + ELMo 70.87 65.81 68.25 75.96 72.52 74.20
DGLSTM-CRF (L = 1) + ELMo 82.29 82.37 82.33 84.05 84.77 84.41
DGLSTM-CRF (L = 2) + ELMo 84.71 83.75 84.22 87.79 87.33 87.56
DGLSTM-CRF (L = 3) + ELMo 84.50 83.92 84.21 86.74 86.57 86.66

Table 5: Results on the SemEval-2010 Task 1 datasets.

NER model on this dataset, Lattice LSTM (Zhang
and Yang, 2018)12. Our implementation of the
strong BiLSTM-CRF baseline achieves compara-
ble performance against the Lattice LSTM. Sim-
ilar to the English dataset, our model with L =
0 significantly improves the performance com-
pared to the BiLSTM-CRF (L = 0) model. Our
DGLSTM-CRF model achieves the best perfor-
mance with L = 2 and is consistently better (p <
0.02) than the strong BiLSTM-CRF baselines. As
we can see from the table, the improvements of
the DGLSTM-CRF model mainly come from re-
call (p < 0.001) compared to the BiLSTM model,
especially in the scenario with word embeddings
only. Empirically, we also found that those cor-
rectly retrieved entities of the DGLSTM-CRF
(compared against the baseline) mostly correlate
with the following dependency relations: “nn”,
“nsubj”, “nummod”. However, DGLSTM-CRF
achieves lower precisions against BiLSTM-CRF,
which indicates that the DGLSTM-CRF model
makes more false-positive predictions. The rea-
son could be the relatively lower ratio of ST(%)13

as shown in Table 2, which means some of the en-
tities do not form subtrees under the complete de-
pendency trees. In such a scenario, the model may
not correctly identify the boundary of the entities,
which results in lower precision.

12We run their code on the OntoNotes 5.0 Chinese dataset.
13Percentage of entities that can form a subtree.

SemEval-2010 Table 5 shows the results of our
models on the SemEval-2010 Task 1 datasets.
Overall, we observe substantial improvements of
the DGLSTM-CRF on the Catalan and Spanish
datasets (with p < 0.001 marked in bold against
the best performing BiLSTM-CRF baseline), es-
pecially for DGLSTM-CRF with ELMo and L
larger than 1. With word embeddings, the best
DGLSTM-CRF model outperforms the best per-
forming BiLSTM-CRF baseline with more than
10 and 9 points in F1 on the Catalan and Span-
ish datasets, respectively. The BiLSTM-GCN-
CRF model also performs much better than the
BiLSTM-CRF baselines but is worse than the
DGLSTM-CRF model with L ≥ 2. Both preci-
sion and recall significantly improve with a large
margin compared to the best performing BiLSTM-
CRF, especially for the recall (with more than
10 points improvement) on these two datasets.
With ELMo, the best performing DGLSTM-CRF
model outperforms the BiLSTM-CRF baseline
with about 6 and 7 points in F1 on these two
datasets, respectively. The substantial improve-
ments show that the structural dependency infor-
mation is extremely helpful for these two datasets.

With ELMo representations, we observe about
2 and 3 points improvements in F1 compared with
the 1-layer DGLSTM-CRF model on these two
datasets, respectively. Empirically, more than 50%
of the entities that are correctly predicted by the



3869

Model Prec. Rec. F1
Peters et al. (2018a) ELMo - - 92.2

BiLSTM-CRF + ELMo (L = 2) 92.1 92.3 92.2
DGLSTM-CRF + ELMo (L = 2) 92.2 92.5 92.4

Table 6: Performance on the CoNLL-2003 English
dataset.

Model Catalan Spanish
Prec. Rec. F1 Prec. Rec. F1

BiLSTM-CRF (L = 1) 47.88 18.59 26.78 40.77 19.01 25.93
DGLSTM-CRF (L = 1) 47.71 31.55 37.98 49.39 31.91 38.77
– with gold dependency 52.13 33.26 40.61 52.14 35.59 42.30

Table 7: Low-resource NER performance on the
SemEval-2010 Task 1 datasets.

2-layer model but not the 1-layer model are with
length larger than 2. Also, most of these entities
contain the grandchild dependencies “(sn, sn)” and
“(spec, sn)” where sn represents noun phrase and
spec represents specifier (e.g., determiner, quanti-
fier) in both datasets. Such a finding shows that
the 2-layer model is able to capture the interac-
tions given by the grandchild dependencies.

4.2 Additional Experiments

CoNLL-2003 English Table 6 shows the perfor-
mance on the CoNLL-2003 English dataset. The
dependencies are predicted from Spacy (Honni-
bal and Montani, 2017). With the contextual-
ized word representations, DGLSTM-CRF outper-
forms BiLSTM-CRF with 0.2 points in F1 (p <
0.09). The improvement is not significant due to
the relatively lower equality of the dependency
trees. To further study the effect of the depen-
dencies, we modified the predicted dependencies
to ensure each entity form a subtree in the com-
plete dataset. Such modification improves the F1
to 92.7, which is significantly better (p < 0.05)
than the BiLSTM-CRF.

Low-Resource NER Following Cotterell and
Duh (2017), we emulate truly low-resource con-
dition with 100 sentences for training. We as-
sume that the contextualized word representa-
tions are not available and dependencies are pre-
dicted. Table 7 shows the NER performance on
the SemEval-2010 Task 1 datasets under the low-
resource setting. With limited amount of training
data, BiLSTM-CRF suffers from low recall and
the DGLSTM-CRF largely improves it on these
two datasets. Using gold dependencies further sig-
nificantly improves the precision and recall.

English Chinese Catalan Spanish

BiLSTM-CRF 88.98 79.20 78.46 80.59

(Dependency LAS)† (94.89) (89.28) (93.25) (93.35)
DGLSTM-CRF (Predicted) 89.64 79.59 82.37 83.92
Improvement ∆ +0.66 +0.39 +3.91 +3.33

DGLSTM-CRF (Gold) 89.88 79.92 84.22 87.56

Table 8: F1 performance of DGLSTM-CRF with
predicted dependencies against the best performing
BiLSTM-CRF. †: LAS is label attachment score which
is the metric for dependency evaluation.

Model Prec. Rec. F1
BiLSTM-CRF + ELMo (L = 2) 89.14 88.59 88.87

DGLSTM-CRF + ELMo (L = 2) 89.59 90.17 89.88
–g(·) = self connection 89.17 90.08 89.62
–g(·) = Concatenation 89.43 90.09 89.76
–g(·) = Addition 89.24 89.78 89.50
–w/o dependency relation 88.92 89.99 89.46

Table 9: Ablation study of the DGLSTM-CRF model
on the OntoNotes English dataset.

Effect of Dependency Quality To evaluate how
the quality of dependency trees affect the per-
formance, we train a state-of-the-art dependency
parser (Dozat and Manning, 2017) using our
training set and make prediction on the devel-
opment/test set. We implemented the depen-
dency parser using the AllenNLP package (Gard-
ner et al., 2017). Table 8 shows the perfor-
mance (LAS) of the dependency parser on four
languages (i.e., OntoNotes English, OntoNotes
Chinese, Catalan and Spanish) and the perfor-
mance of DGLSTM-CRF against the best per-
forming BiLSTM-CRF with ELMo. DGLSTM-
CRF even with predicted dependencies is able
to consistently outperform the BiLSTM-CRF on
four languages. However, the performance is still
worse than the DGLSTM-CRF with gold depen-
dencies, especially on the Catalan and Spanish.
Such results suggest that it is essential to have
high-quality dependency annotations available for
the proposed model.

Ablation Study Table 9 shows the ablation
study of the 2-layer DGLSTM-CRF model on the
OntoNotes English dataset. With self connection
as interaction function, the F1 drops 0.3 points.
The model achieves comparable performance with
concatenation as interaction function but F1 drops
about 0.4 points with the addition interaction func-
tion. We believe that the addition potentially leads
to certain information loss. Without the depen-



3870

Dataset Model Entity Length1 2 3 4 5 ≥6

English BiLSTM-CRF 91.8 88.5 83.4 84.0 75.4 76.0
DGLSTM-CRF 91.8 90.1 85.4 87.0 80.8 78.7

Chinese BiLSTM-CRF 81.2 74.3 73.1 62.8 70.3 57.5
DGLSTM-CRF 82.2 75.5 71.8 64.1 58.5 41.1

Catalan BiLSTM-CRF 80.5 81.0 75.8 56.1 45.0 38.4
DGLSTM-CRF 85.4 85.1 84.1 78.9 60.9 59.3

Spanish BiLSTM-CRF 84.2 81.1 81.0 53.3 53.3 37.1
DGLSTM-CRF 89.3 87.4 90.8 74.1 67.7 64.4

Table 10: Performance of entities with different lengths
on the four datasets: OntoNotes (English), OntoNotes
Chinese, Catalan and Spanish.

dency relation embedding vr in the input repre-
sentation, the F1 drops about 0.4 points.

5 Analysis

5.1 Effectiveness of Dependency Relations
To demonstrate whether the model benefits from
the dependency relations, we first select the en-
tities that are correctly predicted by the 2-layer
DGLSTM-CRF model but not by the best per-
forming baseline 2-layer BiLSTM-CRF on the
OntoNotes English dataset. We draw the heatmap
in Figure 4 based on these entities. Comparing
Figure 3 and 4, we can see that they are similar
in terms of the density. Both of them show con-
sistent relationships between the entity types and
the dependency relations. The comparison shows
that the improvements partially result from the ef-
fect of dependency relations. We also found from
our model’s predictions that some entity types
have strong correlations with the relation pairs on
grandchild dependencies14.

5.2 Entity with Different Lengths
Table 10 shows the performance comparison with
different entity lengths on all datasets. As men-
tioned earlier, the dependencies as well as the
grandchild relations allow our models to capture
the long-distance interactions between the words.
As shown in the table, the performance of entities
with lengths more than 1 consistently improves
with DGLSTM-CRF for all languages except Chi-
nese. As we pointed out in the dataset statistics
(Table 2), the number of entities that form subtrees
in OntoNotes Chinese is relatively smaller com-
pared to other datasets. The performance gain is
more significant for entities with longer length on

14The corresponding heatmap visualization is provided in
supplementary material.

 #
0'
)#
 '
)#
""
)'
*
")
(& #$

* #$
.
#)
!& ((

(-
/!
&

(-
/!
&* 
-- (/

'

(/
'!
$,

*"
)'
*
*)
!&
*)
--

*)
--
$-
-%0
$
*,$
*
*/
("
.

+/
 (
.'
)# ,))

.
.'
)#

�
����
�

�
�

���

�
�

��

�
���
�

�
�

���

����

����

�����
�

���

�����

�����

�������

��
�����

���

��������
��

� � � � � � � � � � �� �� � � � � � � �� � �
� �� � � � �� � � � � � � � �� � � � � � � ��
� �� � � �� �	 � �� � � � � � �	 � � � � � � �
� � � � � �� � �� � � � � � �� � � � � � � �
� � � � � � � �� � � � � � �� � � � � � � �
� � � � � � � �� � � � � � �� � � � � � � �
� � � � � � � �� � � � � � �� � � �� �� � � �
� � � � � �� � �� � � � � � �� � � � � � � �
� � � � � � � � � � �� �� � � � � � � �� � �
� � � � � �� � �� � � � � � � � � � � � � �
�� �� � �� � � � � � � � � �� � � � � � � � �
� � � � � �� � �� 	 � � � � � � � � � � � �
� � � � � �� � � � � �� � � � � � � � �� � �
� � � � � � � �� �� � � � � � �� � � � � � �
� � � � � �� � �� � �� � � � � � � � �� � � �
� � � � � � � �� � � �� � � � � � � � �� � �
� � � � �� 	 � �� � � � � � �� � � � � � � �
� � � � � � � �� � � � � � �� � � � �� � � �

�

��

��

��

��

���

Figure 4: Correlations between the correctly predicted
entities and the dependency relations.

the other three languages. We found that, among
the improvements of entities with length larger
than 2 in English, 85% of them have long-distance
dependencies and 30% of them have grandchild
dependencies within the entity boundary. The
analysis shows that our model that exploits the de-
pendency tree structures is helpful for recognizing
long entities.

6 Conclusions and Future Work

Motivated by the relationships between the de-
pendency trees and named entities, we propose a
dependency-guided LSTM-CRF model to encode
the complete dependency tree and capture such re-
lationships for the NER task. Through extensive
experiments on several datasets, we demonstrate
the effectiveness of the proposed model in improv-
ing the NER performance. Our analysis shows that
NER benefits from the dependency relations and
long-distance dependencies, which are able to cap-
ture the non-local interactions between the words.

As statistics shows that most of the entities form
subtrees under the dependency trees, future work
includes building a model for joint NER and de-
pendency parsing which regards each entity as a
single unit in a dependency tree.

Ackowledgements

We would like to thank the anonymous review-
ers for their constructive comments on this work.
We would also like to thank Zhijiang Guo and
Yan Zhang for the fruitul discussion. This work
is supported by Singapore Ministry of Education
Academic Research Fund (AcRF) Tier 2 Project
MOE2017-T2-1-156.



3871

References
Alan Akbik, Duncan Blythe, and Roland Vollgraf.

2018. Contextual string embeddings for sequence
labeling. In Proceedings of COLING.

Taylor Berg-Kirkpatrick, David Burkett, and Dan
Klein. 2012. An empirical investigation of statis-
tical significance in nlp. In Proceedings of EMNLP-
CoNLL.

Wanxiang Che, Yijia Liu, Yuxuan Wang, Bo Zheng,
and Ting Liu. 2018. Towards better UD parsing:
Deep contextualized word embeddings, ensemble,
and treebank concatenation. In Proceedings of the
CoNLL 2018 Shared Task: Multilingual Parsing
from Raw Text to Universal Dependencies.

Jason P. C. Chiu and Eric Nichols. 2016. Named entity
recognition with bidirectional lstm-cnns. Transac-
tions of the Association of Computational Linguis-
tics, 4:357–370.

Corinna Cortes and Vladimir Vapnik. 1995. Support-
vector networks. Machine learning, 20(3):273–297.

Ryan Cotterell and Kevin Duh. 2017. Low-
resource named entity recognition with cross-
lingual, character-level neural conditional random
fields. In Proceedings of IJCNLP.

Alessandro Cucchiarelli and Paola Velardi. 2001. Un-
supervised named entity recognition using syntactic
and semantic contextual evidence. Computational
Linguistics, 27(1):123–131.

Marie-Catherine De Marneffe, Bill MacCartney,
Christopher D Manning, et al. 2006. Generat-
ing typed dependency parses from phrase structure
parses. In Proceedings of LREC.

Marie-Catherine De Marneffe and Christopher D Man-
ning. 2008. Stanford typed dependencies manual.
Technical report, Stanford University.

Jacob Devlin, Ming-Wei Chang, Kenton Lee, and
Kristina Toutanova. 2019. BERT: Pre-training of
deep bidirectional transformers for language under-
standing. In Proceedings of NAACL.

Li Dong and Mirella Lapata. 2018. Coarse-to-fine de-
coding for neural semantic parsing. In Proceedings
of ACL.

Timothy Dozat and Christopher D Manning. 2017.
Deep biaffine attention for neural dependency pars-
ing. In Proceedings of ICLR.

Jenny Rose Finkel, Trond Grenager, and Christopher
Manning. 2005. Incorporating non-local informa-
tion into information extraction systems by gibbs
sampling. In Proceedings of ACL.

Jenny Rose Finkel and Christopher D Manning. 2009.
Joint parsing and named entity recognition. In Pro-
ceedings of NAACL.

Matt Gardner, Joel Grus, Mark Neumann, Oyvind
Tafjord, Pradeep Dasigi, Nelson F. Liu, Matthew
Peters, Michael Schmitz, and Luke S. Zettlemoyer.
2017. Allennlp: A deep semantic natural language
processing platform. In Proceedings of Workshop
for NLP-OSS.

Abbas Ghaddar and Phillippe Langlais. 2018. Robust
lexical features for improved neural network named-
entity recognition. In Proceedings of COLING.

Edouard Grave, Piotr Bojanowski, Prakhar Gupta, Ar-
mand Joulin, and Tomas Mikolov. 2018. Learning
word vectors for 157 languages. In Proceedings of
LREC.

Sepp Hochreiter and Jürgen Schmidhuber. 1997.
Long short-term memory. Neural computation,
9(8):1735–1780.

Matthew Honnibal and Ines Montani. 2017. spaCy 2:
Natural language understanding with bloom embed-
dings, convolutional neural networks and incremen-
tal parsing. To appear.

Zhanming Jie, Aldrian Obaja Muis, and Wei Lu. 2017.
Efficient dependency-guided named entity recogni-
tion. In Proceedings of AAAI.

Thomas N Kipf and Max Welling. 2017. Semi-
supervised classification with graph convolutional
networks. In Proceedings of ICLR.

Terry Koo and Michael Collins. 2010. Efficient third-
order dependency parsers. In Proceedings of ACL.

John Lafferty, Andrew McCallum, and Fernando
Pereira. 2001. Conditional random fields: Prob-
abilistic models for segmenting and labeling se-
quence data. In Proceedings of ICML.

Guillaume Lample, Miguel Ballesteros, Sandeep Sub-
ramanian, Kazuya Kawakami, and Chris Dyer. 2016.
Neural architectures for named entity recognition.
In Proceedings of NAACL-HLT.

Kenton Lee, Luheng He, Mike Lewis, and Luke Zettle-
moyer. 2017. End-to-end neural coreference resolu-
tion. In Proceedings of EMNLP.

Peng-Hsuan Li, Ruo-Ping Dong, Yu-Siang Wang, Ju-
Chieh Chou, and Wei-Yun Ma. 2017. Leverag-
ing linguistic structures for named entity recognition
with bidirectional recursive neural networks. In Pro-
ceedings of EMNLP.

Xiao Ling and Daniel S Weld. 2012. Fine-grained en-
tity recognition. In Proceedings of AAAI.

Jingchen Liu, Minlie Huang, and Xiaoyan Zhu. 2010.
Recognizing biomedical named entities using skip-
chain conditional random fields. In Proceedings of
the Workshop on BioNLP.

Xuezhe Ma and Eduard Hovy. 2016. End-to-end se-
quence labeling via bi-directional lstm-cnns-crf. In
Proceedings of ACL.

https://aclweb.org/anthology/C18-1139
https://aclweb.org/anthology/C18-1139
https://www.aclweb.org/anthology/D12-1091
https://www.aclweb.org/anthology/D12-1091
http://www.aclweb.org/anthology/K18-2005
http://www.aclweb.org/anthology/K18-2005
http://www.aclweb.org/anthology/K18-2005
https://aclweb.org/anthology/Q16-1026
https://aclweb.org/anthology/Q16-1026
https://link.springer.com/content/pdf/10.1007/BF00994018.pdf
https://link.springer.com/content/pdf/10.1007/BF00994018.pdf
https://www.aclweb.org/anthology/I17-2016
https://www.aclweb.org/anthology/I17-2016
https://www.aclweb.org/anthology/I17-2016
https://www.aclweb.org/anthology/I17-2016
http://dl.acm.org/citation.cfm?id=972778.972784
http://dl.acm.org/citation.cfm?id=972778.972784
http://dl.acm.org/citation.cfm?id=972778.972784
http://www.lrec-conf.org/proceedings/lrec2006/pdf/440_pdf.pdf
http://www.lrec-conf.org/proceedings/lrec2006/pdf/440_pdf.pdf
http://www.lrec-conf.org/proceedings/lrec2006/pdf/440_pdf.pdf
https://nlp.stanford.edu/software/dependencies_manual.pdf
https://arxiv.org/abs/1810.04805
https://arxiv.org/abs/1810.04805
https://arxiv.org/abs/1810.04805
https://www.aclweb.org/anthology/P18-1068
https://www.aclweb.org/anthology/P18-1068
https://openreview.net/pdf?id=Hk95PK9le
https://openreview.net/pdf?id=Hk95PK9le
https://www.aclweb.org/anthology/P05-1045
https://www.aclweb.org/anthology/P05-1045
https://www.aclweb.org/anthology/P05-1045
https://aclweb.org/anthology/N09-1037
https://arxiv.org/pdf/1803.07640.pdf
https://arxiv.org/pdf/1803.07640.pdf
https://aclweb.org/anthology/C18-1161
https://aclweb.org/anthology/C18-1161
https://aclweb.org/anthology/C18-1161
https://www.aclweb.org/anthology/L18-1550
https://www.aclweb.org/anthology/L18-1550
https://www.mitpressjournals.org/doi/pdfplus/10.1162/neco.1997.9.8.1735
http://dl.acm.org/citation.cfm?id=3298023.3298071
http://dl.acm.org/citation.cfm?id=3298023.3298071
https://openreview.net/pdf?id=SJU4ayYgl
https://openreview.net/pdf?id=SJU4ayYgl
https://openreview.net/pdf?id=SJU4ayYgl
https://aclweb.org/anthology/P10-1001
https://aclweb.org/anthology/P10-1001
http://dl.acm.org/citation.cfm?id=645530.655813
http://dl.acm.org/citation.cfm?id=645530.655813
http://dl.acm.org/citation.cfm?id=645530.655813
https://www.aclweb.org/anthology/N16-1030
https://aclweb.org/anthology/D17-1018
https://aclweb.org/anthology/D17-1018
https://aclweb.org/anthology/D17-1282
https://aclweb.org/anthology/D17-1282
https://aclweb.org/anthology/D17-1282
http://dl.acm.org/citation.cfm?id=2900728.2900742
http://dl.acm.org/citation.cfm?id=2900728.2900742
https://www.aclweb.org/anthology/W10-1902
https://www.aclweb.org/anthology/W10-1902
http://www.aclweb.org/anthology/P16-1101
http://www.aclweb.org/anthology/P16-1101


3872

Christopher Manning, Mihai Surdeanu, John Bauer,
Jenny Finkel, Steven Bethard, and David McClosky.
2014. The stanford corenlp natural language pro-
cessing toolkit. In Proceedings of ACL: System
Demonstrations.

Diego Marcheggiani and Ivan Titov. 2017. Encoding
sentences with graph convolutional networks for se-
mantic role labeling. In Proceedings of EMNLP.

Makoto Miwa and Mohit Bansal. 2016. End-to-end re-
lation extraction using lstms on sequences and tree
structures. In Proceedings of ACL.

Jeffrey Pennington, Richard Socher, and Christopher
Manning. 2014. Glove: Global vectors for word
representation. In Proceedings of EMNLP.

Matthew Peters, Mark Neumann, Mohit Iyyer, Matt
Gardner, Christopher Clark, Kenton Lee, and Luke
Zettlemoyer. 2018a. Deep contextualized word rep-
resentations. In Proceedings of NAACL.

Matthew Peters, Mark Neumann, Luke Zettlemoyer,
and Wen-tau Yih. 2018b. Dissecting contextual
word embeddings: Architecture and representation.
In Proceedings of EMNLP.

Matthew Peters, Sebastian Ruder, and Noah A Smith.
2019. To tune or not to tune? adapting pretrained
representations to diverse tasks. arXiv preprint
arXiv:1903.05987.

Sameer Pradhan, Alessandro Moschitti, Nianwen Xue,
Hwee Tou Ng, Anders Björkelund, Olga Uryupina,
Yuchen Zhang, and Zhi Zhong. 2013. Towards ro-
bust linguistic analysis using ontonotes. In Proceed-
ings of CoNLL.

Sameer Pradhan, Alessandro Moschitti, Nianwen Xue,
Olga Uryupina, and Yuchen Zhang. 2012. Conll-
2012 shared task: Modeling multilingual unre-
stricted coreference in ontonotes. In Proceedings of
Joint EMNLP-CoNLL: Shared Task.

Lance A Ramshaw and Mitchell P Marcus. 1999. Text
chunking using transformation-based learning. In
Proceedings of Third Workshop on Very Large Cor-
pora.

Lev Ratinov and Dan Roth. 2009. Design challenges
and misconceptions in named entity recognition. In
Proceedings of CoNLL.

Marta Recasens, Lluı́s Màrquez, Emili Sapena,
M Antònia Martı́, Mariona Taulé, Véronique
Hoste, Massimo Poesio, and Yannick Versley. 2010.
Semeval-2010 task 1: Coreference resolution in
multiple languages. In Proceedings of the 5th In-
ternational Workshop on Semantic Evaluation.

Nils Reimers and Iryna Gurevych. 2017. Reporting
score distributions makes a difference: Performance
study of lstm-networks for sequence tagging. In
Proceedings of EMNLP.

Sunita Sarawagi and William W Cohen. 2004. Semi-
markov conditional random fields for information
extraction. In Proceedings of NeurIPS.

Ryohei Sasano and Sadao Kurohashi. 2008. Japanese
named entity recognition using structural natural
language processing. In Proceedings of IJCNLP.

Emma Strubell, Patrick Verga, David Belanger, and
Andrew McCallum. 2017. Fast and accurate entity
recognition with iterated dilated convolutions. In
Proceedings of EMNLP.

Charles Sutton and Andrew McCallum. 2004. Collec-
tive segmentation and labeling of distant entities in
information extraction. In Proceedings of the ICML
Workshop on Statistical Relational Learning and Its
Connections to Other Fields.

Ralph Weischedel, Martha Palmer, Mitchell Marcus,
Eduard Hovy, Sameer Pradhan, Lance Ramshaw,
Nianwen Xue, Ann Taylor, Jeff Kaufman, Michelle
Franchini, et al. 2013. Ontonotes release 5.0
ldc2013t19. Linguistic Data Consortium.

Yue Zhang and Jie Yang. 2018. Chinese ner using lat-
tice lstm. In Proceedings of ACL.

Yuhao Zhang, Peng Qi, and Christopher D Manning.
2018. Graph convolution over pruned dependency
trees improves relation extraction. In Proceedings
of EMNLP.

https://www.aclweb.org/anthology/P14-5010
https://www.aclweb.org/anthology/P14-5010
https://www.aclweb.org/anthology/D17-1159
https://www.aclweb.org/anthology/D17-1159
https://www.aclweb.org/anthology/D17-1159
https://www.aclweb.org/anthology/P16-1105
https://www.aclweb.org/anthology/P16-1105
https://www.aclweb.org/anthology/P16-1105
https://www.aclweb.org/anthology/D14-1162
https://www.aclweb.org/anthology/D14-1162
https://aclweb.org/anthology/N18-1202
https://aclweb.org/anthology/N18-1202
https://aclweb.org/anthology/D18-1179
https://aclweb.org/anthology/D18-1179
https://arxiv.org/pdf/1903.05987.pdf
https://arxiv.org/pdf/1903.05987.pdf
https://www.aclweb.org/anthology/W13-3516
https://www.aclweb.org/anthology/W13-3516
https://www.aclweb.org/anthology/W12-4501
https://www.aclweb.org/anthology/W12-4501
https://www.aclweb.org/anthology/W12-4501
https://www.aclweb.org/anthology/W95-0107
https://www.aclweb.org/anthology/W95-0107
http://www.aclweb.org/anthology/W09-1119
http://www.aclweb.org/anthology/W09-1119
https://www.aclweb.org/anthology/S10-1001
https://www.aclweb.org/anthology/S10-1001
http://aclweb.org/anthology/D17-1035
http://aclweb.org/anthology/D17-1035
http://aclweb.org/anthology/D17-1035
http://papers.nips.cc/paper/2648-semi-markov-conditional-random-fields-for-information-extraction.pdf
http://papers.nips.cc/paper/2648-semi-markov-conditional-random-fields-for-information-extraction.pdf
http://papers.nips.cc/paper/2648-semi-markov-conditional-random-fields-for-information-extraction.pdf
https://www.aclweb.org/anthology/I08-2080
https://www.aclweb.org/anthology/I08-2080
https://www.aclweb.org/anthology/I08-2080
https://www.aclweb.org/anthology/D17-1283
https://www.aclweb.org/anthology/D17-1283
https://www.research.ed.ac.uk/portal/files/14900035/tr_04_49.pdf
https://www.research.ed.ac.uk/portal/files/14900035/tr_04_49.pdf
https://www.research.ed.ac.uk/portal/files/14900035/tr_04_49.pdf
https://catalog.ldc.upenn.edu/docs/LDC2013T19/OntoNotes-Release-5.0.pdf
https://catalog.ldc.upenn.edu/docs/LDC2013T19/OntoNotes-Release-5.0.pdf
https://www.aclweb.org/anthology/P18-1144
https://www.aclweb.org/anthology/P18-1144
https://aclweb.org/anthology/D18-1244
https://aclweb.org/anthology/D18-1244

