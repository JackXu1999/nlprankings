















































Phrase-Based & Neural Unsupervised Machine Translation


Proceedings of the 2018 Conference on Empirical Methods in Natural Language Processing, pages 5039–5049
Brussels, Belgium, October 31 - November 4, 2018. c©2018 Association for Computational Linguistics

5039

Phrase-Based & Neural Unsupervised Machine Translation

Guillaume Lample†
Facebook AI Research
Sorbonne Universités
glample@fb.com

Myle Ott
Facebook AI Research
myleott@fb.com

Alexis Conneau
Facebook AI Research

Université Le Mans
aconneau@fb.com

Ludovic Denoyer†
Sorbonne Universités

ludovic.denoyer@lip6.fr

Marc’Aurelio Ranzato
Facebook AI Research
ranzato@fb.com

Abstract

Machine translation systems achieve near
human-level performance on some languages,
yet their effectiveness strongly relies on the
availability of large amounts of parallel sen-
tences, which hinders their applicability to the
majority of language pairs. This work inves-
tigates how to learn to translate when having
access to only large monolingual corpora in
each language. We propose two model vari-
ants, a neural and a phrase-based model. Both
versions leverage a careful initialization of the
parameters, the denoising effect of language
models and automatic generation of parallel
data by iterative back-translation. These mod-
els are significantly better than methods from
the literature, while being simpler and hav-
ing fewer hyper-parameters. On the widely
used WMT’14 English-French and WMT’16
German-English benchmarks, our models re-
spectively obtain 28.1 and 25.2 BLEU points
without using a single parallel sentence, out-
performing the state of the art by more than
11 BLEU points. On low-resource languages
like English-Urdu and English-Romanian, our
methods achieve even better results than semi-
supervised and supervised approaches leverag-
ing the paucity of available bitexts. Our code
for NMT and PBSMT is publicly available.1

1 Introduction

Machine Translation (MT) is a flagship of the re-
cent successes and advances in the field of natural
language processing. Its practical applications and
use as a testbed for sequence transduction algo-
rithms have spurred renewed interest in this topic.

While recent advances have reported near
human-level performance on several language

†Sorbonne Universités, UPMC Univ Paris 06, CNRS,
UMR 7606, LIP6, F-75005, Paris, France.

1https://github.com/facebookresearch/
UnsupervisedMT

pairs using neural approaches (Wu et al., 2016;
Hassan et al., 2018), other studies have highlighted
several open challenges (Koehn and Knowles,
2017; Isabelle et al., 2017; Sennrich, 2017). A ma-
jor challenge is the reliance of current learning al-
gorithms on large parallel corpora. Unfortunately,
the vast majority of language pairs have very little,
if any, parallel data: learning algorithms need to
better leverage monolingual data in order to make
MT more widely applicable.

While a large body of literature has studied the
use of monolingual data to boost translation per-
formance when limited supervision is available,
two recent approaches have explored the fully un-
supervised setting (Lample et al., 2018; Artetxe
et al., 2018), relying only on monolingual cor-
pora in each language, as in the pioneering work
by Ravi and Knight (2011). While there are sub-
tle technical differences between these two recent
works, we identify several common principles un-
derlying their success.

First, they carefully initialize the MT system
with an inferred bilingual dictionary. Second,
they leverage strong language models, via train-
ing the sequence-to-sequence system (Sutskever
et al., 2014; Bahdanau et al., 2015) as a denois-
ing autoencoder (Vincent et al., 2008). Third, they
turn the unsupervised problem into a supervised
one by automatic generation of sentence pairs via
back-translation (Sennrich et al., 2015a), i.e., the
source-to-target model is applied to source sen-
tences to generate inputs for training the target-
to-source model, and vice versa. Finally, they
constrain the latent representations produced by
the encoder to be shared across the two lan-
guages. Empirically, these methods achieve re-
markable results considering the fully unsuper-
vised setting; for instance, about 15 BLEU points
on the WMT’14 English-French benchmark.

The first contribution of this paper is a model



5040

A) B) C)

observed source sentence
unobserved translation of a target sentence

system translation of a target sentence

observed target sentence
unobserved  translation of a source sentence

system translation of a source sentence

D)

Figure 1: Toy illustration of the three principles of unsupervised MT. A) There are two monolingual datasets. Markers
correspond to sentences (see legend for details). B) First principle: Initialization. The two distributions are roughly aligned,
e.g. by performing word-by-word translation with an inferred bilingual dictionary. C) Second principle: Language modeling.
A language model is learned independently in each domain to infer the structure in the data (underlying continuous curve); it
acts as a data-driven prior to denoise/correct sentences (illustrated by the spring pulling a sentence outside the manifold back
in). D) Third principle: Back-translation. Starting from an observed source sentence (filled red circle) we use the current
source → target model to translate (dashed arrow), yielding a potentially incorrect translation (blue cross near the empty
circle). Starting from this (back) translation, we use the target→ source model (continuous arrow) to reconstruct the sentence
in the original language. The discrepancy between the reconstruction and the initial sentence provides error signal to train the
target→ source model parameters. The same procedure is applied in the opposite direction to train the source→ target model.

that combines these two previous neural ap-
proaches, simplifying the architecture and loss
function while still following the above men-
tioned principles. The resulting model outper-
forms previous approaches and is both easier to
train and tune. Then, we apply the same ideas and
methodology to a traditional phrase-based statisti-
cal machine translation (PBSMT) system (Koehn
et al., 2003). PBSMT models are well-known
to outperform neural models when labeled data
is scarce because they merely count occurrences,
whereas neural models typically fit hundred of
millions of parameters to learn distributed rep-
resentations, which may generalize better when
data is abundant but is prone to overfit when data
is scarce. Our PBSMT model is simple, easy
to interpret, fast to train and often achieves sim-
ilar or better results than its NMT counterpart.
We report gains of up to +10 BLEU points on
widely used benchmarks when using our NMT
model, and up to +12 points with our PBSMT
model. Furthermore, we apply these methods to
distant and low-resource languages, like English-
Russian, English-Romanian and English-Urdu,
and report competitive performance against both
semi-supervised and supervised baselines.

2 Principles of Unsupervised MT

Learning to translate with only monolingual data
is an ill-posed task, since there are potentially
many ways to associate target with source sen-
tences. Nevertheless, there has been exciting
progress towards this goal in recent years, as dis-
cussed in the related work of Section 5. In this sec-

tion, we abstract away from the specific assump-
tions made by each prior work and instead focus
on identifying the common principles underlying
unsupervised MT.

We claim that unsupervised MT can be accom-
plished by leveraging the three components illus-
trated in Figure 1: (i) suitable initialization of
the translation models, (ii) language modeling and
(iii) iterative back-translation. In the following,
we describe each of these components and later
discuss how they can be better instantiated in both
a neural model and phrase-based model.

Initialization: Given the ill-posed nature of the
task, model initialization expresses a natural prior
over the space of solutions we expect to reach,
jump-starting the process by leveraging approxi-
mate translations of words, short phrases or even
sub-word units (Sennrich et al., 2015b). For in-
stance, Klementiev et al. (2012) used a provided
bilingual dictionary, while Lample et al. (2018)
and Artetxe et al. (2018) used dictionaries inferred
in an unsupervised way (Conneau et al., 2018;
Artetxe et al., 2017). The motivating intuition
is that while such initial “word-by-word” transla-
tion may be poor if languages or corpora are not
closely related, it still preserves some of the origi-
nal semantics.

Language Modeling: Given large amounts of
monolingual data, we can train language mod-
els on both source and target languages. These
models express a data-driven prior about how sen-
tences should read in each language, and they im-
prove the quality of the translation models by per-



5041

Algorithm 1: Unsupervised MT
1 Language models: Learn language models Ps and Pt

over source and target languages;
2 Initial translation models: Leveraging Ps and Pt,

learn two initial translation models, one in each
direction: P (0)s→t and P

(0)
t→s;

3 for k=1 to N do
4 Back-translation: Generate source and target

sentences using the current translation models,
P

(k−1)
t→s and P

(k−1)
s→t , factoring in language

models, Ps and Pt;
5 Train new translation models P (k)s→t and P

(k)
t→s

using the generated sentences and leveraging Ps
and Pt;

6 end

forming local substitutions and word reorderings.

Iterative Back-translation: The third principle
is back-translation (Sennrich et al., 2015a), which
is perhaps the most effective way to leverage
monolingual data in a semi-supervised setting. Its
application in the unsupervised setting is to cou-
ple the source-to-target translation system with
a backward model translating from the target to
source language. The goal of this model is to gen-
erate a source sentence for each target sentence in
the monolingual corpus. This turns the daunting
unsupervised problem into a supervised learning
task, albeit with noisy source sentences. As the
original model gets better at translating, we use
the current model to improve the back-translation
model, resulting in a coupled system trained with
an iterative algorithm (He et al., 2016).

3 Unsupervised MT systems

Equipped with the three principles detailed in Sec-
tion 2, we now discuss how to effectively combine
them in the context of a NMT model (Section 3.1)
and PBSMT model (Section 3.2).

In the reminder of the paper, we denote the
space of source and target sentences by S and T ,
respectively, and the language models trained on
source and target monolingual datasets by Ps and
Pt, respectively. Finally, we denote by Ps→t and
Pt→s the translation models from source to target
and vice versa. An overview of our approach is
given in Algorithm 1.

3.1 Unsupervised NMT
We now introduce a new unsupervised NMT
method, which is derived from earlier work
by Artetxe et al. (2018) and Lample et al. (2018).
We first discuss how the previously mentioned

three key principles are instantiated in our work,
and then introduce an additional property of the
system, the sharing of internal representations
across languages, which is specific and critical
to NMT. From now on, we assume that a NMT
model consists of an encoder and a decoder. Sec-
tion 4 gives the specific details of this architecture.

Initialization: While prior work relied on bilin-
gual dictionaries, here we propose a more effec-
tive and simpler approach which is particularly
suitable for related languages.2 First, instead of
considering words, we consider byte-pair encod-
ings (BPE) (Sennrich et al., 2015b), which have
two major advantages: they reduce the vocabulary
size and they eliminate the presence of unknown
words in the output translation. Second, instead of
learning an explicit mapping between BPEs in the
source and target languages, we define BPE tokens
by jointly processing both monolingual corpora. If
languages are related, they will naturally share a
good fraction of BPE tokens, which eliminates the
need to infer a bilingual dictionary. In practice,
we i) join the monolingual corpora, ii) apply BPE
tokenization on the resulting corpus, and iii) learn
token embeddings (Mikolov et al., 2013) on the
same corpus, which are then used to initialize the
lookup tables in the encoder and decoder.

Language Modeling: In NMT, language mod-
eling is accomplished via denoising autoencoding,
by minimizing:

Llm = Ex∼S [− logPs→s(x|C(x))] +
Ey∼T [− logPt→t(y|C(y))] (1)

where C is a noise model with some words
dropped and swapped as in Lample et al. (2018).
Ps→s andPt→t are the composition of encoder and
decoder both operating on the source and target
sides, respectively.

Back-translation: Let us denote by u∗(y) the
sentence in the source language inferred from
y ∈ T such that u∗(y) = argmaxPt→s(u|y).
Similarly, let us denote by v∗(x) the sen-
tence in the target language inferred from x ∈
S such that v∗(x) = argmaxPs→t(v|x).
The pairs (u∗(y), y) and (x, v∗(x))) constitute
automatically-generated parallel sentences which,
following the back-translation principle, can be

2For unrelated languages, we need to infer a dictionary to
properly initialize the embeddings (Conneau et al., 2018).



5042

used to train the two MT models by minimizing
the following loss:

Lback = Ey∼T [− logPs→t(y|u∗(y))] +
Ex∼S [− logPt→s(x|v∗(x))]. (2)

Note that when minimizing this objective function
we do not back-prop through the reverse model
which generated the data, both for the sake of sim-
plicity and because we did not observe improve-
ments when doing so. The objective function min-
imized at every iteration of stochastic gradient de-
scent, is simply the sum of Llm in Eq. 1 and Lback
in Eq. 2. To prevent the model from cheating by
using different subspaces for the language mod-
eling and translation tasks, we add an additional
constraint which we discuss next.

Sharing Latent Representations: A shared en-
coder representation acts like an interlingua,
which is translated in the decoder target language
regardless of the input source language. This
ensures that the benefits of language modeling,
implemented via the denoising autoencoder ob-
jective, nicely transfer to translation from noisy
sources and eventually help the NMT model to
translate more fluently. In order to share the en-
coder representations, we share all encoder pa-
rameters (including the embedding matrices since
we perform joint tokenization) across the two lan-
guages to ensure that the latent representation of
the source sentence is robust to the source lan-
guage. Similarly, we share the decoder parame-
ters across the two languages. While sharing the
encoder is critical to get the model to work, shar-
ing the decoder simply induces useful regulariza-
tion. Unlike prior work (Johnson et al., 2016), the
first token of the decoder specifies the language the
module is operating with, while the encoder does
not have any language identifier.

3.2 Unsupervised PBSMT
In this section, we discuss how to perform un-
supervised machine translation using a Phrase-
Based Statistical Machine Translation (PBSMT)
system (Koehn et al., 2003) as the underlying
backbone model. Note that PBSMT models are
known to perform well on low-resource language
pairs, and are therefore a potentially good alterna-
tive to neural models in the unsupervised setting.

When translating from x to y, a PBSMT sys-
tem scores y according to: argmaxy P (y|x) =
argmaxy P (x|y)P (y), where P (x|y) is derived

from so called “phrase tables”, and P (y) is the
score assigned by a language model.

Given a dataset of bitexts, PBSMT first infers
an alignment between source and target phrases.
It then populates phrase tables, whose entries
store the probability that a certain n-gram in the
source/target language is mapped to another n-
gram in the target/source language.

In the unsupervised setting, we can easily train a
language model on monolingual data, but it is less
clear how to populate the phrase tables, which are
a necessary component for good translation. For-
tunately, similar to the neural case, the principles
of Section 2 are effective to solve this problem.

Initialization: We populate the initial phrase ta-
bles (from source to target and from target to
source) using an inferred bilingual dictionary built
from monolingual corpora using the method pro-
posed by Conneau et al. (2018). In the following,
we will refer to phrases as single words, but the
very same arguments trivially apply to longer n-
grams. Phrase tables are populated with the scores
of the translation of a source word to:

p(tj |si) =
e

1
T
cos(e(tj),We(si))

∑
k e

1
T
cos(e(tk),We(si))

, (3)

where tj is the j-th word in the target vocabulary
and si is the i-th word in the source vocabulary,
T is a hyper-parameter used to tune the peakiness
of the distribution3, W is the rotation matrix map-
ping the source embeddings into the target embed-
dings (Conneau et al., 2018), and e(x) is the em-
bedding of x.

Language Modeling: Both in the source and
target domains we learn smoothed n-gram lan-
guage models using KenLM (Heafield, 2011), al-
though neural models could also be considered.
These remain fixed throughout training iterations.

Iterative Back-Translation: To jump-start the
iterative process, we use the unsupervised phrase
tables and the language model on the target side to
construct a seed PBSMT. We then use this model
to translate the source monolingual corpus into the
target language (back-translation step). Once the
data has been generated, we train a PBSMT in su-
pervised mode to map the generated data back to
the original source sentences. Next, we perform

3We set T = 30 in all our experiments, following the
setting of Smith et al. (2017).



5043

both generation and training process but in the re-
verse direction. We repeat these steps as many
times as desired (see Algorithm 2 in Section A).

Intuitively, many entries in the phrase tables are
not correct because the input to the PBSMT at any
given point during training is noisy. Despite that,
the language model may be able to fix some of
these mistakes at generation time. As long as that
happens, the translation improves, and with that
also the phrase tables at the next round. There will
be more entries that correspond to correct phrases,
which makes the PBSMT model stronger because
it has bigger tables and it enables phrase swaps
over longer spans.

4 Experiments

We first describe the datasets and experimen-
tal protocol we used. Then, we compare the
two proposed unsupervised approaches to ear-
lier attempts, to semi-supervised methods and to
the very same models but trained with varying
amounts of labeled data. We conclude with an ab-
lation study to understand the relative importance
of the three principles introduced in Section 2.

4.1 Datasets and Methodology

We consider five language pairs: English-French,
English-German, English-Romanian, English-
Russian and English-Urdu. The first two pairs are
used to compare to recent work on unsupervised
MT (Artetxe et al., 2018; Lample et al., 2018).
The last three pairs are instead used to test our PB-
SMT unsupervised method on truly low-resource
pairs (Gu et al., 2018) or unrelated languages that
do not even share the same alphabet.

For English, French, German and Russian, we
use all available sentences from the WMT mono-
lingual News Crawl datasets from years 2007
through 2017. For Romanian, the News Crawl
dataset is only composed of 2.2 million sentences,
so we augment it with the monolingual data from
WMT’16, resulting in 2.9 million sentences. In
Urdu, we use the dataset of Jawaid et al. (2014),
composed of about 5.5 million monolingual sen-
tences. We report results on newstest 2014 for
en− fr, and newstest 2016 for en− de, en− ro
and en− ru. For Urdu, we use the LDC2010T21
and LDC2010T23 corpora each with about 1800
sentences as validation and test sets, respectively.

We use Moses scripts (Koehn et al., 2007) for
tokenization. NMT is trained with 60,000 BPE

Source Target P (s|t) P (t|s)
happy 0.931 0.986
delighted 0.458 0.003

heureux grateful 0.128 0.003
thrilled 0.392 0.002
glad 0.054 0.001

Britain 0.242 0.720
UK 0.816 0.257

Royaume-Uni U.K. 0.697 0.011
United Kingdom 0.770 0.010
British 0.000 0.002

European Union 0.869 0.772
EU 0.335 0.213

Union européenne E.U. 0.539 0.006
member states 0.007 0.006
27-nation bloc 0.410 0.002

Table 1: Unsupervised phrase table. Example of candi-
date French to English phrase translations, along with their
corresponding conditional likelihoods.

codes. PBSMT is trained with true-casing, and by
removing diacritics from Romanian on the source
side to deal with their inconsistent use across the
monolingual dataset (Sennrich et al., 2016).

4.2 Initialization

Both the NMT and PBSMT approaches require ei-
ther cross-lingual BPE embeddings (to initialize
the shared lookup tables) or n-gram embeddings
(to initialize the phrase table). We generate em-
beddings using fastText (Bojanowski et al., 2017)
with an embedding dimension of 512, a context
window of size 5 and 10 negative samples. For
NMT, fastText is applied on the concatenation of
source and target corpora, which results in cross-
lingual BPE embeddings.

For PBSMT, we generate n-gram embeddings
on the source and target corpora independently,
and align them using the MUSE library (Con-
neau et al., 2018). Since learning unique em-
beddings of every possible phrase would be in-
tractable, we consider the most frequent 300,000
source phrases, and align each of them to its 200
nearest neighbors in the target space, resulting in
a phrase table of 60 million phrase pairs which we
score using the formula in Eq. 3.

In practice, we observe a small but significant
difference of about 1 BLEU point using a phrase
table of bigrams compared to a phrase table of un-
igrams, but did not observe any improvement us-
ing longer phrases. Table 1 shows an extract of a
French-English unsupervised phrase table, where
we can see that unigrams are correctly aligned to
bigrams, and vice versa.



5044

104 105 106
number of parallel training sentences

10

20

30
BL

EU

superv. NMT
superv. PBSMT
unsup. NMT
unsup. PBSMT

Figure 2: Comparison between supervised and unsupervised
approaches on WMT’14 En-Fr, as we vary the number of par-
allel sentences for the supervised methods.

4.3 Training

The next subsections provide details about the ar-
chitecture and training procedure of our models.

4.3.1 NMT
In this study, we use NMT models built upon
LSTM (Hochreiter and Schmidhuber, 1997) and
Transformer (Vaswani et al., 2017) cells. For the
LSTM model we use the same architecture as
in Lample et al. (2018). For the Transformer, we
use 4 layers both in the encoder and in the de-
coder. Following Press and Wolf (2016), we share
all lookup tables between the encoder and the de-
coder, and between the source and the target lan-
guages. The dimensionality of the embeddings
and of the hidden layers is set to 512. We used
the Adam optimizer (Kingma and Ba, 2014) with
a learning rate of 10−4, β1 = 0.5, and a batch size
of 32. At decoding time, we generate greedily.

4.3.2 PBSMT
The PBSMT uses Moses’ default smoothed n-
gram language model with phrase reordering dis-
abled during the very first generation. PBSMT is
trained in a iterative manner using Algorithm 2.
At each iteration, we translate 5 million sentences
randomly sampled from the monolingual dataset
in the source language. Except for initialization,
we use phrase tables with phrases up to length 4.

4.4 Model selection

Moses’ implementation of PBSMT has 15 hyper-
parameters, such as relative weighting of each
scoring function, word penalty, etc. In this work,
we consider two methods to set these hyper-
parameters. We either set them to their default
values in the toolbox, or we set them using a small
validation set of parallel sentences. It turns out

Model en-fr fr-en en-de de-en

(Artetxe et al., 2018) 15.1 15.6 - -
(Lample et al., 2018) 15.0 14.3 9.6 13.3
(Yang et al., 2018) 17.0 15.6 10.9 14.6

NMT (LSTM) 24.5 23.7 14.7 19.6
NMT (Transformer) 25.1 24.2 17.2 21.0
PBSMT (Iter. 0) 16.2 17.5 11.0 15.6
PBSMT (Iter. n) 28.1 27.2 17.9 22.9

NMT + PBSMT 27.1 26.3 17.5 22.1
PBSMT + NMT 27.6 27.7 20.2 25.2

Table 2: Comparison with previous approaches. BLEU
score for different models on the en − fr and en − de
language pairs. Just using the unsupervised phrase table,
and without back-translation (PBSMT (Iter. 0)), the PBSMT
outperforms previous approaches. Combining PBSMT with
NMT gives the best results.

that with only 100 labeled sentences in the vali-
dation set, PBSMT would overfit to the validation
set. For instance, on en → fr, PBSMT tuned
on 100 parallel sentences obtains a BLEU score of
26.42 on newstest 2014, compared to 27.09 with
default hyper-parameters, and 28.02 when tuned
on the 3000 parallel sentences of newstest 2013.
Therefore, unless otherwise specified, all PBSMT
models considered in the paper use default hyper-
parameter values, and do not use any parallel re-
source whatsoever.

For the NMT, we also consider two model selec-
tion procedures: an unsupervised criterion based
on the BLEU score of a “round-trip” translation
(source → target → source and target → source
→ target) as in Lample et al. (2018), and cross-
validation using a small validation set with 100
parallel sentences. In our experiments, we found
the unsupervised criterion to be highly correlated
with the test metric when using the Transformer
model, but not always for the LSTM. There-
fore, unless otherwise specified, we select the best
LSTM models using a small validation set of 100
parallel sentences, and the best Transformer mod-
els with the unsupervised criterion.

4.5 Results

The results reported in Table 2 show that our un-
supervised NMT and PBSMT systems largely out-
perform previous unsupervised baselines. We re-
port large gains on all language pairs and direc-
tions. For instance, on the en → fr task, our un-
supervised PBSMT obtains a BLEU score of 28.1,
outperforming the previous best result by more
than 11 BLEU points. Even on a more complex
task like en → de, both PBSMT and NMT sur-
pass the baseline score by more than 10 BLEU



5045

en→ fr fr→ en en→ de de→ en en→ ro ro→ en en→ ru ru→ en
Unsupervised PBSMT

Unsupervised phrase table - 17.50 - 15.63 - 14.10 - 8.08
Back-translation - Iter. 1 24.79 26.16 15.92 22.43 18.21 21.49 11.04 15.16
Back-translation - Iter. 2 27.32 26.80 17.65 22.85 20.61 22.52 12.87 16.42
Back-translation - Iter. 3 27.77 26.93 17.94 22.87 21.18 22.99 13.13 16.52
Back-translation - Iter. 4 27.84 27.20 17.77 22.68 21.33 23.01 13.37 16.62
Back-translation - Iter. 5 28.11 27.16 - - - - - -

Unsupervised NMT

LSTM 24.48 23.74 14.71 19.60 - - - -
Transformer 25.14 24.18 17.16 21.00 21.18 19.44 7.98 9.09

Phrase-based + Neural network

NMT + PBSMT 27.12 26.29 17.52 22.06 21.95 23.73 10.14 12.62
PBSMT + NMT 27.60 27.68 20.23 25.19 25.13 23.90 13.76 16.62

Table 3: Fully unsupervised results. We report the BLEU score for PBSMT, NMT, and their combinations on 8 directed
language pairs. Results are obtained on newstest 2014 for en− fr and newstest 2016 for every other pair.

points. Even before iterative back-translation, the
PBSMT model significantly outperforms previous
approaches, and can be trained in a few minutes.

Table 3 illustrates the quality of the PBSMT
model during the iterative training process. For
instance, the fr → en model obtains a BLEU
score of 17.5 at iteration 0 – i.e. after the unsuper-
vised phrase table construction – while it achieves
a score of 27.2 at iteration 4. This highlights the
importance of multiple back-translation iterations.
The last rows of Table 3 also show that we get ad-
ditional gains by further tuning the NMT model on
the data generated by PBSMT (PBSMT + NMT).
We simply add the data generated by the unsuper-
vised PBSMT system to the back-translated data
produced by the NMT model. By combining PB-
SMT and NMT, we achieve BLEU scores of 20.2
and 25.2 on the challenging en → de and de →
en translation tasks. While we also tried boot-
straping the PBSMT model with back-translated
data generated by a NMT model (NMT + PB-
SMT), this did not improve over PBSMT alone.

Next, we compare to fully supervised models.
Figure 2 shows the performance of the same ar-
chitectures trained in a fully supervised way us-
ing parallel training sets of varying size. The un-
supervised PBSMT model achieves the same per-
formance as its supervised counterpart trained on
more than 100,000 parallel sentences.

This is confirmed on low-resource languages.
In particular, on ro → en, our unsupervised PB-
SMT model obtains a BLEU score of 23.9, outper-
forming Gu et al. (2018)’s method by 1 point, de-
spite its use of 6,000 parallel sentences, a seed dic-
tionary, and a multi-NMT system combining par-

allel resources from 5 different languages.
On Russian, our unsupervised PBSMT model

obtains a BLEU score of 16.6 on ru→ en, show-
ing that this approach works reasonably well on
distant languages. Finally we train on ur → en,
which is both low resource and distant. In a su-
pervised mode, PBSMT using the noisy and out-
of-domain 800,000 parallel sentences from Tiede-
mann (2012) achieves a BLEU score of 9.8. In-
stead, our unsupervised PBSMT system achieves
12.3 BLEU using only a validation set of 1800
sentences to tune Moses hyper-parameters.

4.6 Ablation Study

In Figure 3 we report results from an ablation
study, to better understand the importance of the
three principles when training PBSMT. This study
shows that more iterations only partially com-
pensate for lower quality phrase table initializa-
tion (Left), language models trained over less data
(Middle) or less monolingual data (Right). More-
over, the influence of the quality of the language
model becomes more prominent as we iterate.
These findings suggests that better initialization
methods and more powerful language models may
further improve our results.

We perform a similar ablation study for the
NMT system (see Appendix). We find that back-
translation and auto-encoding are critical compo-
nents, without which the system fails to learn. We
also find that initialization of embeddings is very
important, and we gain 7 BLEU points compared
to prior work (Artetxe et al., 2018; Lample et al.,
2018) by learning BPE embeddings over the con-
catenated monolingual corpora.



5046

iter. 0 iter. 1 iter. 2 iter. 3 iter. 4

10

15

20

25
BL

EU

10.75 P@1
27.86 P@1
45.57 P@1
61.26 P@1

iter. 0 iter. 1 iter. 2 iter. 3
12.5

15.0

17.5

20.0

22.5

BL
EU

50k
500k
5M
50M

iter. 0 iter. 1 iter. 2 iter. 3
16

18

20

22

24

BL
EU

100k
300k
1M
10M

Figure 3: Results with PBSMT on the fr → en pair at different iterations. We vary: Left) the quality of the initial alignment
between the source and target embeddings (measured in P@1 on the word translation task), Middle) the number of sentences
used to train the language models, Right) the number of sentences used for back-translation.

5 Related Work

A large body of literature has studied using mono-
lingual data to boost translation performance when
limited supervision is available. This limited su-
pervision is typically provided as a small set of
parallel sentences (Sennrich et al., 2015a; Gul-
cehre et al., 2015; He et al., 2016; Gu et al., 2018;
Wang et al., 2018); large sets of parallel sentences
in related languages (Firat et al., 2016; Johnson
et al., 2016; Chen et al., 2017; Zheng et al., 2017);
cross-lingual dictionaries (Klementiev et al., 2012;
Irvine and Callison-Burch, 2014, 2016); or com-
parable corpora (Munteanu et al., 2004; Irvine and
Callison-Burch, 2013).

Learning to translate without any form of super-
vision has also attracted interest, but is challeng-
ing. In their seminal work, Ravi and Knight (2011)
leverage linguistic prior knowledge to reframe the
unsupervised MT task as deciphering and demon-
strate the feasibility on short sentences with lim-
ited vocabulary. Earlier work by Carbonell et al.
(2006) also aimed at unsupervised MT, but lever-
aged a bilingual dictionary to seed the translation.
Both works rely on a language model on the target
side to correct for translation fluency.

Subsequent work (Klementiev et al., 2012;
Irvine and Callison-Burch, 2014, 2016) relied on
bilingual dictionaries, small parallel corpora of
several thousand sentences, and linguistically mo-
tivated features to prune the search space. Irvine
and Callison-Burch (2014) use monolingual data
to expand phrase tables learned in a supervised set-
ting. In our work we also expand phrase tables,
but we initialize them with an inferred bilingual
n-gram dictionary, following work from the con-
nectionist community aimed at improving PBSMT
with neural models (Schwenk, 2012; Kalchbren-
ner and Blunsom, 2013; Cho et al., 2014).

In recent years back-translation has become a

popular method of augmenting training sets with
monolingual data on the target side (Sennrich
et al., 2015a), and has been integrated in the “dual
learning” framework of He et al. (2016) and sub-
sequent extensions (Wang et al., 2018). Our ap-
proach is similar to the dual learning framework,
except that in their model gradients are backprop-
agated through the reverse model and they pretrain
using a relatively large amount of labeled data,
whereas our approach is fully unsupervised.

Finally, our work can be seen as an extension of
recent studies (Lample et al., 2018; Artetxe et al.,
2018; Yang et al., 2018) on fully unsupervised MT
with two major contributions. First, we propose
a much simpler and more effective initialization
method for related languages. Second, we abstract
away three principles of unsupervised MT and ap-
ply them to a PBSMT, which even outperforms the
original NMT. Moreover, our results show that the
combination of PBSMT and NMT achieves even
better performance.

6 Conclusions and Future Work

In this work, we identify three principles underly-
ing recent successes in fully unsupervised MT and
show how to apply these principles to PBSMT and
NMT systems. We find that PBSMT systems of-
ten outperform NMT systems in the fully unsuper-
vised setting, and that by combining these systems
we can greatly outperform previous approaches
from the literature. We apply our approach to sev-
eral popular benchmark language pairs, obtaining
state of the art results, and to several low-resource
and under-explored language pairs.

It’s an open question whether there are more ef-
fective instantiations of these principles or other
principles altogether, and under what condi-
tions our iterative process is guaranteed to con-
verge. Future work may also extend to the semi-
supervised setting.



5047

References
Mikel Artetxe, Gorka Labaka, and Eneko Agirre.

2017. Learning bilingual word embeddings with
(almost) no bilingual data. In Proceedings of
the 55th Annual Meeting of the Association for
Computational Linguistics, volume 1, pages 451–
462.

Mikel Artetxe, Gorka Labaka, Eneko Agirre, and
Kyunghyun Cho. 2018. Unsupervised neural ma-
chine translation. In International Conference on
Learning Representations (ICLR).

D. Bahdanau, K. Cho, and Y. Bengio. 2015. Neural
machine translation by jointly learning to align and
translate. In International Conference on Learning
Representations (ICLR).

Piotr Bojanowski, Edouard Grave, Armand Joulin,
and Tomas Mikolov. 2017. Enriching word vec-
tors with subword information. Transactions of the
Association for Computational Linguistics, 5:135–
146.

Jaime Carbonell, Steve Klein, David Miller, Michael
Steinbaum, Tomer Grassiany, and Jochen Frey.
2006. Context-based machine translation. In
The Association for Machine Translation in the
Americas.

Y. Chen, Y. Liu, Y. Cheng, and V.O.K. Li. 2017.
A teacher-student framework for zero-resource
neural machine translation. In Proceedings of
the 55th Annual Meeting of the Association for
Computational Linguistics.

Kyunghyun Cho, Bart van Merriënboer, Çağlar
Gülçehre, Dzmitry Bahdanau, Fethi Bougares, Hol-
ger Schwenk, and Yoshua Bengio. 2014. Learning
phrase representations using rnn encoder—decoder
for statistical machine translation. In Proceedings
of the 2014 Conference on Empirical Methods
in Natural Language Processing (EMNLP), pages
1724–—1734.

A. Conneau, G. Lample, M. Ranzato, L. Denoyer, and
H. Jégou. 2018. Word translation without paral-
lel data. In International Conference on Learning
Representations (ICLR).

O. Firat, B. Sankaran, Y. Al-Onaizan, F.T.Y. Vural, and
K. Cho. 2016. Zero-resource translation with multi-
lingual neural machine translation. In Proceedings
of the 2016 Conference on Empirical Methods in
Natural Language Processing.

Jiatao Gu, Hany Hassan, Jacob Devlin, and Victor O.K.
Li. 2018. Universal neural machine translation for
extremely low resource languages. In Conference
of the North American Chapter of the Association
for Computational Linguistics on Human Language
Technology.

Caglar Gulcehre, Orhan Firat, Kelvin Xu, Kyunghyun
Cho, Loic Barrault, Huei-Chi Lin, Fethi Bougares,

Holger Schwenk, and Yoshua Bengio. 2015. On us-
ing monolingual corpora in neural machine transla-
tion. arXiv preprint arXiv:1503.03535.

Hany Hassan, Anthony Aue, Chang Chen, Vishal
Chowdhary, Jonathan Clark, Christian Feder-
mann, Xuedong Huang, Marcin Junczys-Dowmunt,
William Lewis, Mu Li, Shujie Liu, Tie-Yan Liu,
Renqian Luo, Arul Menezes, Tao Qin, Frank Seide,
Xu Tan, Fei Tian, Lijun Wu, Shuangzhi Wu, Yingce
Xia, Dongdong Zhang, Zhirui Zhang, and Ming
Zhou. 2018. Achieving human parity on auto-
matic chinese to english news translation. In
arXiv:1803.05567.

Di He, Yingce Xia, Tao Qin, Liwei Wang, Nenghai Yu,
Tieyan Liu, and Wei-Ying Ma. 2016. Dual learn-
ing for machine translation. In Advances in Neural
Information Processing Systems, pages 820–828.

Kenneth Heafield. 2011. Kenlm: Faster and smaller
language model queries. In Proceedings of the Sixth
Workshop on Statistical Machine Translation, pages
187–197. Association for Computational Linguis-
tics.

Sepp Hochreiter and Jürgen Schmidhuber. 1997.
Long short-term memory. Neural computation,
9(8):1735–1780.

Ann Irvine and Chris Callison-Burch. 2013. Combin-
ing bilingual and comparable corpora for low re-
source machine translation. In Proceedings of the
eighth workshop on statistical machine translation,
pages 262–270.

Ann Irvine and Chris Callison-Burch. 2014. Hallu-
cinating phrase translations for low resource mt.
In Proceedings of the Eighteenth Conference on
Computational Natural Language Learning, pages
160–170.

Ann Irvine and Chris Callison-Burch. 2016. End-
to-end statistical machine translation with zero or
small parallel texts. In Journal of Natural Language
Engineering, volume 22, pages 517–548.

Pierre Isabelle, Colin Cherry, and George Foster.
2017. A challenge set approach to evaluat-
ing machine translation. In Proceedings of the
2017 Conference on Empirical Methods in Natural
Language Processing, pages 2486–2496.

Bushra Jawaid, Amir Kamran, and Ondrej Bojar. 2014.
A tagged corpus and a tagger for urdu. In LREC.

M. Johnson, M. Schuster, Q.V. Le, M. Krikun,
Y. Wu, Z. Chen, N. Thorat, F. Viégas, M. Wat-
tenberg, G. Corrado, M. Hughes, and J. Dean.
2016. Google’s multilingual neural machine trans-
lation system: Enabling zero-shot translation. In
Transactions of the Association for Computational
Linguistics.



5048

Nal Kalchbrenner and Phil Blunsom. 2013. Two
recurrent continuous translation models. In
Conference on Empirical Methods in Natural
Language Processing.

Diederik Kingma and Jimmy Ba. 2014. Adam: A
method for stochastic optimization. arXiv preprint
arXiv:1412.6980.

Alex Klementiev, Ann Irvine, Chris Callison-Burch,
and David Yarowsky. 2012. Toward statistical
machine translation without parallel corpora. In
Proceedings of the 13th Conference of the European
Chapter of the Association for computational
Linguistics, Avignon, France. Association for Com-
putational Linguistics.

Philipp Koehn, Hieu Hoang, Alexandra Birch, Chris
Callison-Burch, Marcello Federico, Nicola Bertoldi,
Brooke Cowan, Wade Shen, Christine Moran,
Richard Zens, Ondrej Bojar Chris Dyer, Alexan-
dra Constantin, and Evan Herbst. 2007. Moses:
Open source toolkit for statistical machine trans-
lation. In Annual Meeting of the Association for
Computational Linguistics (ACL), demo session.

Philipp Koehn and Rebecca Knowles. 2017. Six
challenges for neural machine translation. In
Proceedings of the First Workshop on Neural
Machine Translation, pages 28–39.

Philipp Koehn, Franz Josef Och, and Daniel Marcu.
2003. Statistical phrase-based translation. In
Conference of the North American Chapter of
the Association for Computational Linguistics on
Human Language Technology (NAACL), volume 1,
pages 48––54.

G. Lample, A. Conneau, L. Denoyer, and M. Ran-
zato. 2018. Unsupervised machine translation us-
ing monolingual corpora only. In International
Conference on Learning Representations (ICLR).

Tomas Mikolov, Ilya Sutskever, Kai Chen, Greg S Cor-
rado, and Jeff Dean. 2013. Distributed representa-
tions of words and phrases and their compositional-
ity. In Advances in neural information processing
systems, pages 3111–3119.

D.S. Munteanu, A. Fraser, and D. Marcu. 2004. Im-
proved machine translation performance via par-
allel sentence extraction from comparable cor-
pora. In Proceedings of the Human Language
Technology Conference of the North American
Chapter of the Association for Computational
Linguistics (NAACL).

Ofir Press and Lior Wolf. 2016. Using the output em-
bedding to improve language models. arXiv preprint
arXiv:1608.05859.

S. Ravi and K. Knight. 2011. Deciphering foreign lan-
guage. In Proceedings of the 49th Annual Meeting
of the Association for Computational Linguistics,
pages 12–21.

Holger Schwenk. 2012. Continuous space translation
models for phrase-based statistical machine transla-
tion. In International Conference on Computational
Linguistics, pages 1071––1080.

Rico Sennrich. 2017. How grammatical is character-
level neural machine translation? assessing mt qual-
ity with contrastive translation pairs. In Proceedings
of the 15th Conference of the European Chapter
of the Association for Computational Linguistics,
pages 376–382.

Rico Sennrich, Barry Haddow, and Alexandra Birch.
2015a. Improving neural machine translation mod-
els with monolingual data. In Proceedings of
the 54th Annual Meeting of the Association for
Computational Linguistics, pages 86–96.

Rico Sennrich, Barry Haddow, and Alexandra Birch.
2015b. Neural machine translation of rare
words with subword units. In Proceedings of
the 54th Annual Meeting of the Association for
Computational Linguistics, pages 1715–1725.

Rico Sennrich, Barry Haddow, and Alexandra Birch.
2016. Edinburgh neural machine translation sys-
tems for wmt 16. In Proceedings of the First
Conference on Machine Translation, pages 371–
376.

Samuel L. Smith, David H. P. Turban, Steven Hamblin,
and Nils Y. Hammerla. 2017. Offline bilingual word
vectors, orthogonal transformations and the inverted
softmax. In Internaltional Conference on Learning
Representations.

Ilya Sutskever, Oriol Vinyals, and Quoc V Le.
2014. Sequence to sequence learning with neu-
ral networks. In Advances in Neural Information
Processing Systems, pages 3104–3112.

Jörg Tiedemann. 2012. Parallel data, tools and
interfaces in opus. In Proceedings of the 8th
International Conference on Language Resources
and Evaluation.

Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob
Uszkoreit, Llion Jones, Aidan N Gomez, Lukasz
Kaiser, and Illia Polosukhin. 2017. Attention is all
you need. arXiv preprint arXiv:1706.03762.

Pascal Vincent, Hugo Larochelle, Yoshua Bengio, and
Pierre-Antoine Manzagol. 2008. Extracting and
composing robust features with denoising autoen-
coders. In Proceedings of the 25th international
conference on Machine learning, pages 1096–1103.

Yijun Wang, Yingce Xia, Li Zhao, Jiang Bian, Tao
Qin, Guiquan Liu, and Tie-Yan Liu. 2018. Dual
transfer learning for neural machine translation with
marginal distribution regularization. In Proceedings
of the Thirty-Second AAAI Conference on Artificial
Intelligence.



5049

Yonghui Wu, Mike Schuster, Zhifeng Chen, Quoc V
Le, Mohammad Norouzi, Wolfgang Macherey,
Maxim Krikun, Yuan Cao, Qin Gao, Klaus
Macherey, et al. 2016. Google’s neural machine
translation system: Bridging the gap between hu-
man and machine translation. Transactions of the
Association for Computational Linguistics, pages
339–351.

Zhen Yang, Wei Chen, Feng Wang, and Bo Xu.
2018. Unsupervised neural machine translation with
weight sharing. In Proceedings of the 56th Annual
Meeting of the Association for Computational
Linguistics.

H. Zheng, Y. Cheng, and Y. Liu. 2017. Maximum
expected likelihood estimation for zero-resource
neural machine translation. In Proceedings of
the Twenty-Sixth International Joint Conference on
Artificial Intelligence (IJCAI), pages 4251–4257.


