



















































Data Augmentation via Dependency Tree Morphing for Low-Resource Languages


Proceedings of the 2018 Conference on Empirical Methods in Natural Language Processing, pages 5004–5009
Brussels, Belgium, October 31 - November 4, 2018. c©2018 Association for Computational Linguistics

5004

Data Augmentation via Dependency Tree Morphing for Low-Resource
Languages

Gözde Gül Şahin
UKP Lab, Department of Computer Science

Technische Universität Darmstadt
Darmstadt, Germany

sahin@ukp.informatik.tu-darmstadt.de

Mark Steedman
School of Informatics

University of Edinburgh
Edinburgh, Scotland

steedman@inf.ed.ac.uk

Abstract

Neural NLP systems achieve high scores in
the presence of sizable training dataset. Lack
of such datasets leads to poor system perfor-
mances in the case low-resource languages.
We present two simple text augmentation
techniques using dependency trees, inspired
from image processing. We “crop” sentences
by removing dependency links, and we “ro-
tate” sentences by moving the tree fragments
around the root. We apply these techniques to
augment the training sets of low-resource lan-
guages in Universal Dependencies project. We
implement a character-level sequence tagging
model and evaluate the augmented datasets on
part-of-speech tagging task. We show that
crop and rotate provides improvements over
the models trained with non-augmented data
for majority of the languages, especially for
languages with rich case marking systems.

1 Introduction

Most recently, various deep learning methods have
been proposed for many natural language under-
standing tasks including sentiment analysis, ques-
tion answering, dependency parsing and semantic
role labeling. Although these methods have re-
ported state-of-the-art results for languages with
rich resources, no significant improvement has
been announced for low-resource languages. In
other words, feature-engineered statistical mod-
els still perform better than these neural models
for low-resource languages.1 Generally accepted
reason for low scores is the size of the training
data, i.e., training labels being too sparse to extract
meaningful statistics.

Label-preserving data augmentation techniques
are known to help methods generalize better by

1For example, in the case of dependency parsing, recent
best results from CoNLL-18 parsing shared task can be com-
pared to the results of traditional language-specific models.

increasing the variance of the training data. It
has been a common practice among researchers
in computer vision field to apply data augmen-
tation, e.g., flip, crop, scale and rotate images,
for tasks like image classification (Ciresan et al.,
2012; Krizhevsky et al., 2012). Similarly, speech
recognition systems made use of augmentation
techniques like changing the tone and speed of the
audio (Ko et al., 2015; Ragni et al., 2014), noise
addition (Hartmann et al., 2016) and synthetic au-
dio generation (Takahashi et al., 2016). Compara-
ble techniques for data augmentation are less ob-
vious for NLP tasks, due to structural differences
among languages. There are only a small num-
ber of studies that tackle data augmentation tech-
niques for NLP, such as Zhang et al. (2015) for text
classification and Fadaee et al. (2017) for machine
translation.

In this work, we focus on languages with small
training datasets, that are made available by the
Universal Dependency (UD) project. These lan-
guages are dominantly from Uralic, Turkic, Slavic
and Baltic language families, which are known to
have extensive morphological case-marking sys-
tems and relatively free word order. With these
languages in mind, we propose an easily adapt-
able, multilingual text augmentation technique
based on dependency trees, inspired from two
common augmentation methods from image pro-
cessing: cropping and rotating. As images are
cropped to focus on a particular item, we crop the
sentences to form other smaller, meaningful and
focused sentences. As images are rotated around
a center, we rotate the portable tree fragments
around the root of the dependency tree to form a
synthetic sentence. We augment the training sets
of these low-resource languages via crop and ro-
tate operations. In order to measure the impact of
augmentation, we implement a unified character-
level sequence tagging model. We systematically



5005

train separate parts-of-speech tagging models with
the original and augmented training sets, and eval-
uate on the original test set. We show that crop
and rotate provide improvements over the non-
augmented data for majority of the languages, es-
pecially for languages with rich case marking sys-
tem.

2 Method

We borrow two fundamental label-preserving aug-
mentation ideas from image processing: cropping
and rotation. Image cropping can be defined as
removal of some of the peripheral areas of an im-
age to focus on the subject/object (e.g., focusing
on the flower in a large green field). Following this
basic idea, we aim to identify the parts of the sen-
tence that we want to focus and remove the other
chunks, i.e., form simpler/smaller meaningful sen-
tences 2. In order to do so, we take advantage of
dependency trees which provide us with links to
focuses, such as subjects and objects. The idea is
demonstrated in Fig. 1b on the Turkish sentence
given in Fig. 1a. Here, given a predicate (wrote)
that governs a subject (her father), an indirect ob-
ject (to her) and a direct object (a letter); we form
three smaller sentences with a focus on the sub-
ject (first row in Fig. 1b: her father wrote) and
the objects (second and third row) by removing
all dependency links other than the focus (with its
subtree). Obviously, cropping may cause seman-
tic shifts on a sentence-level. However it preserves
local syntactic tags and even shallow semantic la-
bels.

Images are rotated around a chosen center with
a certain degree to enhance the training data. Sim-
ilarly, we choose the root as the center of the sen-
tence and rotate the flexible tree fragments around
the root for augmentation. Flexible fragments are
usually defined by the morphological typology of
the language (Futrell et al., 2015). For instance,
languages close to analytical typology such as En-
glish, rarely have inflectional morphemes. They
do not mark the objects/subjects, therefore words
have to follow a strict order. For such languages,
sentence rotation would mostly introduce noise.
On the other hand, large number of languages
such as Latin, Greek, Persian, Romanian, Assyr-
ian, Turkish, Finnish and Basque have no strict
word order (though there is a preferred order) due

2Focus should not be confused with the grammatical cat-
egory FOC.

Babası ona bir mektup yazdı

her father to her a letter wrote

det

nsubj

iobj

dobj root

(a) Dependency analysis

(1) Babası        yazdı     (Her father  he-wrote)
(2) Ona            yazdı     (He-wrote        to her)
(3) Bir mektup  yazdı     (He-wrote      a letter)

(b) Sentence Cropping

(1) Babası yazdı bir mektup ona    (SVOIO)
(2) Yazdı babası ona bir mektup    (VSIOO)
(3) Bir mektup yazdı babası ona    (OVSIO)
(4) Ona bir mektup yazdı babası    (IOOVS)
                       

root

yazdı

ona

Babası mektup

bir

(c) Sentence Rotating

Figure 1: Demonstration of augmentation ideas
on the Turkish sentence “Babası ona bir mektup
yazdı” (Her father wrote her a letter). S: Subject,
V: Verb, O:Object, IO: Indirect Object. Arrows
are drawn from dependent to head. Both methods
are applied to the Labels of Interest (LOI).

to their extensive marking system. Hence, flexible
parts are defined as marked fragments which are
again, subjects and objects. Rotation is illustrated
in Fig. 1c on the same sentence.

In order to investigate the impact of the aug-
mentation, we design a simple sequence tagging
model that operates on the character level. Many
low-resource languages we deal with in the Exper-
iments section are morphologically rich. There-
fore, we use a character-level model to address the
rare word problem and to learn morphological reg-
ularities among words.

For each sentence s, we produce a label se-
quence ~l, where lt refers to POS tag for the t-th
token. Given g as gold labels and θ as model pa-
rameters we find the values that minimize the neg-
ative log likelihood of the sequence:

θ̂ = argmin
θ

(
−

n∑
t=1

log(p(gt|θ, s))

)
(1)

To calculate p(lt|θ, s), we first calculate a word
embedding, ~w, for each word. We consider words
as a sequence of characters c0, c1, .., cn and use a
bi-LSTM unit to compose the character sequence
into ~w, as in Ling et al. (2015):

~hwf , ~hwb = bi-LSTM(c0, c1, .., cn) (2)

~w =Wf · ~hwf +Wb · ~hwb + b (3)



5006

Later, these embeddings are passed onto another
bi-LSTM unit:

~hf , ~hb = bi-LSTM( ~wt) (4)

Hidden states from both directions are concate-
nated and mapped by a linear layer to the label
space. Then label probabilities are calculated by a
softmax function:

p(~lt|s, p) = softmax(Wl · [ ~hf ; ~hb] + ~bl) (5)

Finally the label with the highest probability is as-
signed to the input.

3 Experiments and Results

We use the data provided by Universal Dependen-
cies v2.1 (Nivre et al., 2017) project. Since our
focus is on languages with low resources, we only
consider the ones that have less than 120K tokens.
The languages without standard splits and sizes
less than 5K tokens, are ignored. We use the uni-
versal POS tags defined by UD v2.1.

To keep our approach as language agnostic and
simple as possible, we use the following univer-
sal dependency labels and their subtypes to extract
the focus and the flexible fragment: NSUBJ (nom-
inal subject), IOBJ (indirect object), OBJ (indirect
object) and OBL (oblique nominal). These depen-
dency labels are referred to as Label of Interest
(LOI). The root/predicate may be a phrase rather
than a single token. We use the following relations
to identify such cases: FIXED, FLAT, COP (copula)
and COMPOUND. Other labels such as ADVMOD
can also be considered flexible, however are ig-
nored for the sake of simplicity. We enumerate all
flexible chunks and calculate all reordering per-
mutations. Keeping the LOI limited is necessary
to reduce the number of permutations. We apply
reordering only to the first level in the tree. Our
method overgeneralizes, to include sequences that
are not grammatical in the language in question.
We regard the ungrammatical sentences as noise.

Number of possible cropping operations are
limited to the number of items that are linked via
an LOI to the root. If we call it n, then the num-
ber of possible rotations would be (n+1)! since n
pieces and the root are flexible and can be placed
anywhere in the sentence. To limit the number
of rotations, we calculate all possible permuta-
tions for reordering the sentence and then ran-
domly pick n of them. Each operation is applied

with a certain probability p to each sentence, (e.g.,
if p = 1, n number of crops; if p = 0.5 an average
of n/2 crops will be done).

We use the model in Sec. 2 to systematically
train part-of-speech taggers on original and aug-
mented training data sets. To be able measure the
impact of the augmentation, all models are trained
with the same hyperparameters. All tokens are
lowercased and surrounded with special start-end
symbols. Weight parameters are uniformly ini-
tialized between −0.1 and +0.1. We used one
layer bi-LSTMs both for character composition
and POS tagging with hidden size of 200. Char-
acter embedding size is chosen as 200. We used
dropout, gradient clipping and early stopping to
prevent overfitting for all experiments. Stochastic
gradient descent with an initial learning rate as 1 is
used as the optimizer. Learning rate is reduced by
half if scores on development set do not improve.

Average of multiple runs for 20 languages are
given in Fig. 1. Here, Org column refers to
our baseline with non-augmented, original train-
ing set, where Imp% is the improvement over the
baseline by the best crop/flip model for that lan-
guage. It is evident that, with some minor excep-
tions, all languages have benefited from a type of
augmentation. We see that the biggest improve-
ments are achieved on Irish and Lithuanian, the
ones with the lowest baseline scores and the small-
est training sets 3. Our result on both languages
show that both operations reduced the generaliza-
tion error surprisingly well in the lack of training
data.

Tagging results depend on many factors such
as the training data size, the source of the tree-
bank (e.g., news may have less objects and sub-
jects compared to a story), and the language typol-
ogy (e.g., number/type of case markers it uses). In
Fig. 2, the relation between the data size and the
improvement by the augmentation is shown. Pear-
son correlation coefficient for two variables is cal-
culated as −0.35.

Indo-European (IE) : Baltic and Slavic lan-
guages are known to have around 7 distinct case
markers, which relaxes the word order. As ex-
pectedly, both augmentation techniques improve
the scores for Baltic (Latvian, Lithuanian) and
Slavic (Belarusian, Slovak, Serbian, Ukranian)

3Although the total size of the Irish dataset is larger than
many, the splits are unbalanced. The training set contains 121
trees while the test has 454 trees.



5007

crop rotate
#Tokens Lang Type Org p = 0.3 p = 0.7 p = 1 p = 0.3 p = 0.7 p = 1 Imp%

< 20K

Lithuanian IE, Baltic 61.51 62.17 66.28 67.64 65.28 66.56 68.27 10.98
Belarusian IE, Slavic 83.58 83.87 85.50 85.39 84.33 85.96 86.11 3.03
Tamil Dravidian 81.93 81.35 82.78 84.34 83.74 83.86 83.61 2.94
Telugu Dravidian 90.78 90.85 89.88 90.50 90.36 90.29 89.95 0.07
Coptic Egyptian 95.17 94.60 94.74 94.12 95.03 94.65 94.60 -0.15

< 80K

Irish IE, Celtic 62.75 73.72 75.87 75.42 72.51 76.35 76.19 21.68
North Sami Uralic, Sami 86.78 86.04 87.17 87.35 87.85 88.04 86.65 1.45
Hungarian Uralic, Ugric 85.94 86.24 86.56 86.62 86.49 86.37 86.60 0.80
Vietnamese Austro-Asiatic 75.16 75.59 75.32 74.84 75.22 75.15 75.14 0.57
Turkish Turkic 93.49 93.53 93.56 93.89 93.60 93.82 93.98 0.52
Greek IE, Greek 95.18 95.32 95.46 95.54 95.26 95.22 95.35 0.38
Gothic IE, Germanic 94.38 94.42 94.35 94.44 94.62 94.48 94.43 0.25
Old Slavic IE, Slavic 95.36 95.34 95.33 95.44 95.17 95.35 94.93 0.08
Afrikaans IE, Germanic 94.91 94.52 94.86 94.93 94.73 94.70 94.92 0.0

< 120K

Latvian IE, Baltic 91.22 91.38 91.77 91.78 91.69 91.62 91.76 0.61
Danish IE, Germanic 94.25 94.17 93.96 94.78 94.18 94.10 94.21 0.56
Slovak IE, Slavic 91.23 91.17 91.04 91.35 91.53 91.38 91.58 0.38
Serbian IE, Slavic 96.14 96.26 96.12 96.17 96.35 96.16 96.07 0.22
Ukranian IE, Slavic 94.41 94.33 94.56 94.49 94.57 94.38 94.47 0.17

Table 1: POS tagging accuracies on UDv2.1 test sets. Best scores are shown with bold. Org: Original.
p: operation probability. Imp%: Improvement over original (Org) by the best model trained with the
augmented data.

languages, except for Old Church Slavic (OCS).
OCS is solely compiled from bible text which is
known to contain longer and passive sentences.
We observe that rotation performs slightly better
than cropping for Slavic languages. In the pres-
ence of a rich marking system, rotation can be
considered a better augmenter, since it greatly in-
creases the variance of the training data by shuf-
fling. For Germanic (Gothic, Afrikaans, Danish)
languages, we do not observe a repeating gain, due
to lack of necessary markers.

Uralic and Turkic : Both language types have
an extensive marking system. Hence, similar to
Slavic languages, both techniques improve the
score.

Dravidian : Case system of modern Tamil de-
fines 8 distinct markers, which explains the im-
proved accuracies of the augmented models. We
would expect a similar result for Telugu. However
Telugu treebank is entirely composed of sentences
from a grammar book which may not be expres-
sive and diverse.

4 Related Work

Similar to sentence cropping, Vickrey and Koller
(2008) define transformation rules to simplify sen-
tences (e.g., I was not given a chance to eat - I

ate) and shows that enrichening training set with
simplified sentences improves the results of se-
mantic role labeling. One of the first studies in
text augmentation (Zhang et al., 2015), replaces a
randomly chosen word with its randomly chosen
synonym extracted from a thesaurus. They report
improved test scores when a large neural model
is trained with the augmented set. Jia and Liang
(2016) induce grammar from semantic parsing
training data and generate new data points by sam-
pling to feed a sequence to sequence RNN model.
Fadaee et al. (2017) chooses low-frequency words
instead of a random word, and generate synthetic
sentence pairs that contain those rare words.

5 Discussion

Unlike majority of previous NLP augmentation
techniques, the proposed methods are meaning-
preserving, i.e., they preserve the fundamental
meaning of the sentence for most of the tested lan-
guages. Therefore can be used for variety of prob-
lems such as semantic role labeling, sentiment
analysis, text classification. Instead of those prob-
lems, we evaluate the idea on the simplest possible
task (POS) for the following reasons:

• It gets harder to measure the impact of the
idea as the system/task gets complicated due
to large number of parameters.



5008

zoom

Figure 2: Treebank size versus gain by augmentation

• POS tagging performance is a good indicator
of performances of other structured predic-
tion tasks, since POS tags are crucial features
for higher-level NLP tasks.

Our research interest was to observe which aug-
mentation technique would improve which lan-
guage, rather than finding one good model. There-
fore we have not used development sets to choose
one good augmentation model.

6 Conclusion and Future Work

Neural models have become a standard approach
for many NLP problems due to their ability to
extract high-level features and generalization ca-
pability. Although they have achieved state-of-
the-art results in NLP benchmarks with languages
with large amount of training data, low-resource
languages have not yet benefited from neural mod-
els. In this work, we presented two simple text
augmentation techniques using dependency trees
inspired by image cropping and rotating. We eval-
uated their impact on parts-of-speech tagging in
a number of low-resource languages from various
language families. Our results show that:

• Language families with rich case marking
systems (e.g., Baltic, Slavic, Uralic) bene-
fit both from cropping and rotation. How-
ever, for such languages, rotation increases
the variance of the data relatively more, lead-
ing to slightly better accuracies.

• Both techniques provide substantial improve-
ments over the baseline (non-augmented
data) when only a tiny training dataset is
available.

This work aimed to measure the impact of the
basic techniques, rather than creating the best
text augmentation method. Following these en-
couraging results, method can be improved by
(1) considering the preferred chunk order of the
language during rotation, (2) taking language-
specific flexibilities into account (e.g., Spanish
typically allows free subject inversion (unlike ob-
ject)). Furthermore, we plan to extend this work
by evaluating the augmentation on other NLP
benchmarks such as language modeling, depen-
dency parsing and semantic role labeling. The
code is available at https://github.com/
gozdesahin/crop-rotate-augment.

7 Acknowledgements

Gözde Gül Şahin was a PhD student at Istanbul
Technical University and a visiting research stu-
dent at University of Edinburgh during this study.
She was funded by Tübitak (The Scientific and
Technological Research Council of Turkey) 2214-
A scholarship during her visit to University of Ed-
inburgh. This work was supported by ERC H2020
Advanced Fellowship GA 742137 SEMANTAX
and a Google Faculty award to Mark Steedman.
We would like to thank Adam Lopez for fruitful
discussions, guidance and support during the first
author’s visit. We thank to the anonymous review-
ers for useful comments and to Ilia Kuznetsov for
his valuable feedback.

References

Dan C. Ciresan, Ueli Meier, and Jürgen Schmidhuber.
2012. Multi-column deep neural networks for image
classification. In 2012 IEEE Conference on Com-

https://github.com/gozdesahin/crop-rotate-augment
https://github.com/gozdesahin/crop-rotate-augment


5009

puter Vision and Pattern Recognition, Providence,
RI, USA, June 16-21, 2012, pages 3642–3649.

Marzieh Fadaee, Arianna Bisazza, and Christof Monz.
2017. Data augmentation for low-resource neural
machine translation. In Proceedings of the 55th An-
nual Meeting of the Association for Computational
Linguistics, ACL 2017, Vancouver, Canada, July 30
- August 4, Volume 2: Short Papers, pages 567–573.

Richard Futrell, Kyle Mahowald, and Edward Gibson.
2015. Quantifying word order freedom in depen-
dency corpora. In Proceedings of the Third In-
ternational Conference on Dependency Linguistics
(Depling 2015), pages 91–100. Uppsala University,
Uppsala, Sweden.

William Hartmann, Tim Ng, Roger Hsiao, Stavros
Tsakalidis, and Richard M Schwartz. 2016. Two-
stage data augmentation for low-resourced speech
recognition. In Interspeech, pages 2378–2382.

Robin Jia and Percy Liang. 2016. Data recombination
for neural semantic parsing. In Proceedings of the
54th Annual Meeting of the Association for Compu-
tational Linguistics, ACL 2016, August 7-12, 2016,
Berlin, Germany, Volume 1: Long Papers.

Tom Ko, Vijayaditya Peddinti, Daniel Povey, and
Sanjeev Khudanpur. 2015. Audio augmentation
for speech recognition. In INTERSPEECH 2015,
16th Annual Conference of the International Speech
Communication Association, Dresden, Germany,
September 6-10, 2015, pages 3586–3589.

Alex Krizhevsky, Ilya Sutskever, and Geoffrey E. Hin-
ton. 2012. Imagenet classification with deep convo-
lutional neural networks. In Advances in Neural In-
formation Processing Systems 25: 26th Annual Con-
ference on Neural Information Processing Systems
2012. Proceedings of a meeting held December 3-
6, 2012, Lake Tahoe, Nevada, United States., pages
1106–1114.

Wang Ling, Tiago Luis, Luis Marujo, Ramon F As-
tudillo, Silvio Amir, Chris Dyer, Alan W Black, and
Isabel Trancoso. 2015. Finding function in form:
Compositional character models for open vocabu-
lary word representation. In EMNLP, pages 1520–
1530.

Joakim Nivre et al. 2017. Universal dependencies 2.1.
LINDAT/CLARIN digital library at the Institute of
Formal and Applied Linguistics, Faculty of Mathe-
matics and Physics, Charles University.

Anton Ragni, Kate M. Knill, Shakti P. Rath, and
Mark J. F. Gales. 2014. Data augmentation for
low resource languages. In INTERSPEECH 2014,
15th Annual Conference of the International Speech
Communication Association, Singapore, September
14-18, 2014, pages 810–814.

Naoya Takahashi, Michael Gygli, Beat Pfister, and
Luc Van Gool. 2016. Deep convolutional neural net-
works and data augmentation for acoustic event de-
tection. In Interspeech, pages 2982–2986.

David Vickrey and Daphne Koller. 2008. Sentence
simplification for semantic role labeling. In ACL
2008, Proceedings of the 46th Annual Meeting of the
Association for Computational Linguistics, June 15-
20, 2008, Columbus, Ohio, USA, pages 344–352.

Xiang Zhang, Junbo Zhao, and Yann LeCun. 2015.
Character-level convolutional networks for text clas-
sification. In Advances in Neural Information Pro-
cessing Systems 28, pages 649–657. Curran Asso-
ciates, Inc.


