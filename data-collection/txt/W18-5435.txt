



















































How much should you ask? On the question structure in QA systems.


Proceedings of the 2018 EMNLP Workshop BlackboxNLP: Analyzing and Interpreting Neural Networks for NLP, pages 319–321
Brussels, Belgium, November 1, 2018. c©2018 Association for Computational Linguistics

319

How much should you ask?
On the question structure in QA systems.

Dominika Basaj∗1, Barbara Rychalska∗2, Przemysław Biecek3, and Anna Wróblewska4

d.basaj, b.rychalska, p.biecek, a.wroblewska@mini.pw.edu.pl
1,2,3,4Warsaw University of Technology, Warsaw, Poland

1Tooploox, Wroclaw, Poland

Abstract

Datasets that boosted state-of-the-art solutions
for Question Answering (QA) systems prove
that it is possible to ask questions in natural
language manner. However, users are still used
to query-like systems where they type in key-
words to search for answer. In this study we
validate which parts of questions are essential
for obtaining valid answer. In order to conc-
lude that, we take advantage of LIME - a fra-
mework that explains prediction by local ap-
proximation. We find that grammar and na-
tural language is disregarded by QA. State-
of-the-art model can answer properly even if
’asked’ only with a few words with high co-
efficients calculated with LIME. According to
our knowledge, it is the first time that QA mo-
del is being explained by LIME.

1 Introduction

Release of SQuAD (Rajpurkar et al., 2016) data-
set boosted development of state-of-the-art solu-
tions in Question Answering (QA) systems. Qu-
estions asked in natural way give opportunity for
human-computer interaction. However, in real life
scenario, users are used to ’querying’ rather than
’asking’. This assumption inspired us to investi-
gate whether QA systems trained on SQuAD da-
taset could be used by people who prefer to write
faster and more intuitive queries. Our experiments
indicate that indeed, QA system returns true an-
swer once we type in just selected keywords wi-
thout keeping the sentence structure. We conclude
that QA systems have a very limited understanding
of natural language. They rather learn to distingu-
ish specific words. This indifference to semantics-
altering edits is called overstability (Jia and Liang,
2017). Research on this issue was also recently

*Both authors contributed equally.

conducted by Mudrakarta et al. (2018) who com-
pute importance of words by application of Inte-
grated Gradients.

Inspired by LIME (Ribeiro et al., 2016) we per-
turb questions and score newly created examples
with context held constant. We prove that we can
remove up to over 90% of words in question and
still get the right answer.

The contribution of our study is the following:
1. We use LIME in QA model for determining

which parts of question are substantial for obta-
ining right answer. We obtain valid results al-
though QA systems are not natural candidates for
explanation with LIME, since they do not solve a
regular classification problem.

2. We show that QA models disregard gram-
mar and syntax and thus can give the right an-
swer once queried with most important keywords,
which are the words with high coefficients retur-
ned by LIME. Our findings can serve as a starting
point for development of QA models that are im-
mune to adversarial examples and as a result - ge-
neralize better.

We use QA system developed by Chen et al.
(2017). We pick this model for its good perfor-
mance combined with simplicity and popularity of
the algorithm, which in its basic form builds the
core of many other QA models.

2 Experiments

In order to query QA system with most impor-
tant words indicated by coefficients estimated with
LIME, we design a two-step algorithm. First, we
adjust the logic of LIME to our problem, which
is perturbing questions while holding the context
unchanged. We treat each word in context as a
separate class and words in question serve as fe-
atures. This way, we run LIME in a multiclass set-
ting, with a varied number of ćlasses"for each run.



320

Question Answer
What type of rock is found at
the Grand Canyon?

sedimentary

type of rock Grand Canyon sedimentary
type sedimentary

Table 1: Questions and answers after removing impor-
tant words.

We inspect coefficients estimated for ground truth
class (first word in answer). Second, once we es-
timate the influence of each feature, we iteratively
remove one word starting with lowest coefficients.
After each removal we ask reduced question until
we are left with only one word. We call the shor-
test form of question that still gives the right an-
swer a root question. We treat as a right answer a
returned span of tokens in which we can locate at
least one word from ground truth i.e: question: To
promote accessibility of the works, what did Lu-
ther remove? ground truth: impediments and dif-
ficulties QA answer: impediments and difficulties
so that other people may read it without hindrance.

We inspect 800 examples, analyzing questions
for which the QA system predicted right answers.

Results. Table 1 presents example of algorithm
performance. In this particular case we observe
that by leaving only one word type we still get the
right answer. As shown in figure 1 this word has
the highest LIME coefficient. This is quite surpri-
sing as one-word question does not convey suffi-
cient information about what we want to ask. Fi-
gure 2 shows distribution of percentages of remo-
ved words from question that do not disturb the
answer. It is left-skewed indicating that a large
proportion of question can be removed. We obse-
rve that root questions consist mostly of wh-words
and nouns, as displayed in table 2.

This behavior can be partly traced down to the
characteristics of SQuAD dataset. Due to the
shortness and focus on just single topic in conte-
xts, the network needs just a single keyword to
infer the likely remainder of the question. For
example, if we query "type"in a text about rocks
in Grand Canyon, it is almost guaranteed that con-
text mentions just single "type"which refers to the
rock itself.

Moreover, we observe that there are questions
which start off with wrong answer, but when we
remove one or more words they start to consisten-
tly give valid answers. Based on this, we can hy-
pothesize that although performance of QA sys-
tems does not depend on grammar, there are still

Word/PoS/Phrase % occurences
wh-word + 0 or more words (any) 51 %
1 word (any) 32 %
1 noun 18 %
who 16 %
wh-word + 1 word (any) 13 %
what 12 %
7 and more words 10 %

Table 2: Most common words and phrases found in
root questions.

some underlying dependencies between words.

Figure 1: LIME coefficients estimated per word.

Figure 2: Distribution of percentages of removed qu-
estion words that still give a valid answer.

3 Summary

In this study we show that QA models do not need
grammar to answer questions correctly once they
are left with keywords. It indicates that actually
model does not really encode what we want to ask,
but rather recognizes specific words and associates
them with the answer. It means that words that we
as humans perceive as important part of questions
are disregarded in reality. This might indicate a
problem with the underlying dataset, as root qu-
estions contain too little information to be consi-
dered valid in a real world setting. Our study sets
a direction for decreasing their overstability by hi-
ghlighting drawbacks of QA models.



321

References
Danqi Chen, Adam Fisch, Jason Weston, and Antoine

Bordes. 2017. Reading Wikipedia to answer open-
domain questions. In Association for Computatio-
nal Linguistics (ACL).

Robin Jia and Percy Liang. 2017. Adversarial exam-
ples for evaluating reading comprehension systems.
In Proceedings of the 2017 Conference on Empiri-
cal Methods in Natural Language Processing, pages
2021–2031. Association for Computational Lingu-
istics.

Pramod Kaushik Mudrakarta, Ankur Taly, Mukund
Sundararajan, and Kedar Dhamdhere. 2018. Did
the model understand the question? CoRR,
abs/1805.05492.

Pranav Rajpurkar, Jian Zhang, Konstantin Lopyrev,
and Percy Liang. 2016. Squad: 100, 000+ qu-
estions for machine comprehension of text. CoRR,
abs/1606.05250.

Marco Tulio Ribeiro, Sameer Singh, and Carlos Gu-
estrin. 2016. "why should i trust you?": Explaining
the predictions of any classifier. In Knowledge Di-
scovery and Data Mining (KDD).


