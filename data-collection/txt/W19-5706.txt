














































Some classes of sets of structures definable without quantifiers

James Rogers

Earlham College

jrogers@cs.earlham.edu

Dakotah Lambert

Earlham College

djlambe11@earlham.edu

Abstract

We derive abstract characterizations of the

Strictly Piecewise Local (SPL) and Piecewise

Locally Testable (PLT) stringsets. These gen-

eralize both the Strictly Local/Locally Testable

stringsets (SL and LT) and Strictly Piece-

wise/Piecewise Testable stringsets (SP and

PT) in that SPL constraints can be stated in

terms of both adjacency and precedence.

We do this in a fully abstract setting which ap-

plies to any class of purely relational models

that label the points in their domain with some

finite labeling alphabet. This includes, for ex-

ample, labeled trees and graphs. The actual

structure of the class of intended models only

shows up in interpreting the abstract charac-

terizations of the definable sets in terms of the

structure of the models themselves.

1 Introduction

The ultimate goal of this paper is a characteriza-

tion of the Piecewise Locally Testable and Strictly

Piecewise Local classes of sets of strings. But in

getting there we employ a very general technique

that, with the exception of a single step (the defi-

nition of realizability) applies to any class of rela-

tional structures and yields:

• a quantifier-free logic that is propositional in
the sense of “can be interpreted via truth ta-

bles as a canonical, but uninteresting, class of

models” (but not PC, as in Propositional Cal-

culus),

• an algebraic setting that, modulo the defi-
nition of realizability, provides an abstract

characterization of the sets of structures de-

finable in that logic, which may or may not

be all that useful in itself, but which is strong

enough to support more natural characteriza-

tions.

The reason that definability with respect to these

quantifier-free logics is interesting is that it identi-

fies the sets of structures that are definable purely

in terms of the explicit components of the struc-

tures themselves, without any auxiliary mecha-

nisms such as distinguishing points in terms inde-

pendent of their labels (by assigning variables to

them, for instance, or associating them with states)

or refinements of the label alphabet (by adding

features, for instance). This gives a near minimal

notion of definability and a class of constraints that

can be checked without inferring any information

beyond what is explicitly present in the structure

itself.

1.1 Overview of the paper

In Section 2 we introduce the Piecewise Local Hi-

erarchy and provide some motivation for exploring

its propositional levels. In Section 3 we introduce

relational models and their local factors. These

are ordinary mathematical models over a purely

relational signature which include unary relations

that we can interpret as labeling the points in the

domain. Beyond that, while the actual structural

properties of the models are given by a definition

of what counts as an intended model, those proper-

ties are inconsequential for nearly all of what fol-

lows. As an example we define a class of word

models, models for strings that include relations

for both successor and precedence.

In Section 4 we introduce a propositional logic

based on local factors as atoms and define the class

of Locally Definable sets of structures as those de-

finable in that logic and the class of Strictly Lo-

cally Definable sets of structures as those defin-

able by conjunctions of negative literals of that

logic. This notion of locality extends that of

McNaughton and Papert (1971) to adjacency with

respect to any of the non-unary relations of the sig-

nature.



In Section 5 we consider sets of factors as mod-

els of the logic rather than the relational struc-

tures themselves. The function taking a structure

to the set of its factors maps models of the first sort

(the structures themselves) to models of the sec-

ond (sets of factors). The advantage of this move is

that the space of sets of factors is a finite Boolean

Algebra. In this setting it is easy to prove that a

set of sets of factors is Strictly Local if and only if

(iff) it is a principal ideal in that space. The cost

of this move is that not all sets of factors are the

image of one of the intended relational structures.

Those that are we refer to as being realizable.

We then return, in Section 6, to the properties of

the Locally and Strictly Locally Definable sets of

structures and develop abstract characterizations

of these classes. Up until this point, everything we

have done applies to any class of relational struc-

tures, regardless of the actual structural properties

of the intended models (strings, for example, or

trees). The characterization of the Local sets is

valid for all classes of relational structures, but the

last step of the characterization of the Strictly Lo-

cally Definable sets depends critically on the no-

tion of realizability. The section ends by complet-

ing the characterization for models of strings.

These characterizations can be hard to apply in

their fully abstract form. In Section 7 we fix the

notion of realizability for models of strings over a

signature that includes both successor and prece-

dence, and derive closure properties that are gen-

eralizations of the well-known characterizations

of the Strictly Local (successor only) and Strictly

Piecewise (precedence only) sets of strings.

In Section 8 we consider the learnability of the

definable sets of structures. Following that we

give both an example of a phonotactic constraint

not that is SPL definable and one that separates

SPL from both SF and the Tier-based Strictly Lo-

cal stringset (defined there). We then close with

some concluding remarks.

2 The Piecewise-Local Hierarchy

The Piecewise-Local Hierachy (Figure 1) or-

ganizes the Local and Piecewise classes of

stringsets, introduced in McNaughton and Papert

(1971) and extended by Brzozowski and Simon

(1973), Simon (1975), Straubing (1985),

Thérien and Weiss (1985), Beauquier and Pin

(1991) and others, on the basis of model-theoretic

definability with respect to word models (see

Example 1) along two dimensions: signature

(successor alone, less-than alone, or both) and

strength of the logical machinery, from the

propositional logic discussed below (Section 4) to

Monadic Second-Order.

The characterization of Regular stringsets by

MSO definability is due to Medvedev (1964),

Büchi (1960) and Elgot (1961). This work es-

tablished the relationship between model-theory

of ordered structures and computational structures

that spawned the study of Descriptive and Struc-

tural Complexity, Finite Model-Theory and other

areas of Graph Theory, Abstract Algebra, Theo-

rem Proving and Discrete Math. The character-

ization of the Star-Free stringsets (SF—definable

by regular expressions with complement but not

Kleene-closure) by FO(<), First-Order definabil-
ity with less-than (or both less-than and succes-

sor, since successor is FO definable from less-

than) is due to McNaughton and Papert (1971),

which spawned the work of Brzozowski, Simon,

Beauquier and Pin cited above. Thomas (1978)

established the characterization of the Locally

Threshold Testable (LTT) stringsets by FO defin-

ability with successor alone, FO(+1).
Our exploration of the Piecewise-Local hier-

archy was motivated by Heinz’s exploration of

learnability of phonotactic stress patterns (Heinz,

2007). Our research group at Earlham College,

over the course of several years, constructed com-

putational tools to classify the patterns in the

StressTyp2 (Goedemans et al., 2015) collection of

stress patterns that have automata-theoretic se-

mantics, about two-thirds of the 750 lects in the

collection, covering a broad range of human lan-

guages. These fall into 106 distinct patterns.

Initially, we identified the 82 that are Strictly-

Local. In exploring the remainder, we started

working with constraints expressed in the propo-

sitional logic introduced here in Section 4. Con-

straints definable using just successor are Locally

Testable (LT); Strictly Local (SL) constraints are

those that are definable by conjunctions of neg-

ative literals. Some constraints, the requirement

that every word assigns primary stress to some syl-

lable (obligatoriness) or the requirement that pri-

mary stress either falls on a heavy syllable or on

the final syllable, while not SL, are clearly the

complement of SL constraints (co-SL), disjunc-

tions of positive literals, which share the explicit

nature of SL constraints.



L
T

co
(S

L
+

S
P

)

S
P

S
L

co
S

L
co

S
P

L
T

T

S
P

L
co

S
P

L

S
L

+
S

P

P
ro

p

S
tr

ic
t

F
O

M
S

O

S
F

R
eg

T
S

L
P

L
T

L
T

+
P

T

P
T

<
⊳

,
<

⊳

Figure 1: The Piecewise Local Hierarchy



D
ot

 D
ep

th
Q

ua
nt

 R
an

k
Q

ua
nt

 A
lt

β

β
2
=

B
((

F
in
∪

C
o
F

in
)2
)

S
F

B
0

L
T

D
E

F
R

D
E

F

G
D

E
F

F
in
∪

C
o
F

in
(=

B
(F

in
∪

C
o
F

in
))

F
in

C
o
F

in

L
T

T

β
2i
+
1
=
β
2(
i+

1)
=

B
((

F
in
∪

C
o
F

in
)2

i )

B
(Σ

1
)

d
ef =
(B

((
∃
~x
)[
Π
0
])

B
(Σ

i)
d
ef =
(B

((
∃
~x
)[
Π
i−

1
])

F
O
(<

)

B
(Σ

1
)

B
(Σ

1,
1
)

B
(Σ

1,
i)

⋃ i∈
N

[B
((

F
in
∪

C
o
F

in
)i
)]

B
(M

(G
D

E
F
))

B
1

d
ef =
B
(M

(B
0
)

B
i
=
B
(M

(B
i−

1
)

L
T

O
=

⋃ i∈
N

[B
i]

β
1

S
L

β
3
=
β
4
=

B
((

F
in
∪

C
o
F

in
)3
)

B
(Σ

1,
0
)

Σ
0
=
Π
0

R
eg

Figure 2: Some Other Local Hierarchies



Some constraints, the requirement that if pri-

mary stress falls on a heavy syllable it must be the

first heavy syllable, for example, are not even de-

finable in FO(+1). These are examples of long-
distance phonotactics which are amenable to be-

ing defined in terms of subsequences (sequences

of symbols that occur in order but not necessarily

adjacently). These are definable using less-than

without the aid of successor; they are Piecewise

Testable (PT) constraints. The Piecewise Testable

stringsets were introduced by Simon (1975) and

are the analog of the LT stringsets based on subse-

quences rather than substrings. Some, the require-

ment that primary stress does not fall on more than

one syllable (culmanitivity), for example, can be

expressed as conjunctions of negative piecewise

literals, in SP (Rogers et al., 2010). Obligatori-

ness, since the only factor involved is a single sym-

bol, can be expressed as the complement of an SP

stringset, it is co-SP, as well as co-SL.

Conjunctions of SL, co-SL and SP constraints

(SL + co-SL + SP) cover 98 of the 106 patterns
in the database. Of the remaining eight, two are

properly regular, involving covert alternation. The

rest are all of the form: if stress falls on a final syl-

lable that is heavy, then a syllable of some other

type (an unstressed heavy, for example) does not

occur. While LT they are not expressible as SL or

SP constraints or their complement. They are, on

the other hand expressible as a negative literal that

uses both adjacency (for the identification of the

final syllable) and less-than (for the long-distance

aspect). This, in addition to the obvious theoreti-

cal interest, is what led us to explore the Piecewise

Locally (PLT) Testable and Strictly Piecewise Lo-

cal (SPL) stringsets. Except for those two properly

regular patterns, all of the automata-theoretic pat-

terns in StressTyp2 are definable in SPL + co-SL.

2.1 Some Other Sub-Regular Hierarchies

An alternative way of partitioning the Star-

Free stringsets is via the dot-depth and β hi-
erarchies (Figure 2). The former is due to

Schützenberger (1965) and Brzozowski and Knast

(1978). McNaughton and Papert (1971) had al-

ready established that the Star-Free stringsets

are equal to closure of the Locally Testable

stringsets under mixed concatenation and Boolean

operations (Locally Testable with Order, LTO).

Brzozowski and Knast (1978) establishes an in-

finite hierarchy, building from the class of fi-

nite and co-finite stringsets via concatenation clo-

sure (M in the figure) followed by Boolean
closure (B), alternately, which partitions LTO.
Brzozowski and Simon (1973) refines the dot-

depth 1 level into an infinite hierarchy built on

concatenation of successively more factors, closed

under Boolean operations. The second level (β2)
is equivalent to the class of Generalized Definite

stringsets (GDEF, stringsets determined by their

initial and final substrings); The third, equivalently

fourth, level is equivalent to the LT stringsets.

Thomas (1982), using a somewhat different no-

tion of word model, characterizes these with re-

spect to FO definability. The dot-depth hierar-

chy (albeit starting at GDEF for Σ0/Π0) corre-
sponds to the standard notion of quantifier alterna-

tion. The β hierarchy corresponds to Σ1 stratified
by quantifier rank.

The citations given here are a very sparse (and

idiosyncratic) sample of the incredibly broad and

deep body of work over the last 60 years that has

its foundations in those initial results, a testament

to the fundamental nature of the results. Perhaps

the best route into the theories of word models

is the books by McNaughton and Papert and by

Straubing (1994).

3 Some definitions

3.1 Relational Models

To be precise about terminology, a relational sig-

nature, R, is a ranked alphabet of relation symbols

{Ri | i ∈ N}, where the symbols in Ri represent
i-ary relations. Let R∗ be the union of the symbols
in Ri for all i. We assume that R is finite.

An R-structure is a tuple A = 〈A,RA1 , R
A
2 , . . .〉

where A is the domain and the RAi are interpreta-
tions of the appropriate arity of symbols chosen

from R∗.

Example 1 (Word Models). Let w be a string over
the alphabet Σ. Let |w| be the length of w. A Word
Model for w is a structure:

M⊳,<Σ (w)
def
= 〈Dw,⊳w, <w,⋊w,⋉w, Pwσ 〉σ∈Σ

where:

Dw—is isomorphic to an initial segment
〈0, 1, . . . , |w|+ 1〉 of N (the Natural num-
bers).

⊳
w—is the successor relation on Dw.

<w—is the proper precedence relation on Dw.



⋊w—is the singleton set containing the minimum

position in Dw.

⋉w—is the singleton containing the maximum

position in Dw.

Pwσ —is the set of positions in w at which the sym-
bol σ occurs.

The sets ⋊w, ⋉w and Pwσ , for each σ ∈ Σ parti-
tion Dw (they are pairwise disjoint and their
union is Dw).

Let M⊳,<Σ denote the class of all word models over
Σ.

This definition of a word model differs in cer-

tain respects from definitions that may be famil-

iar from prior work. In particular, the endmarkers

⋊,⋉ are explicit in the structure and mark points
that are adjoined to the ends of the set of positions

in the string. Thus, if w = 〈σ1, σ2, . . . , σ|w|〉, then
card(Dw) = |w|+2 and i ∈ Pwσ iff σi = σ. Also
this type of word model includes both the succes-

sor and precedence relations. When we look at

specific classes in the Piecewise Local sub-regular

hierarchy we have, heretofore, employed reducts

of this signature including one or the other of the

ordering relations, but not both. Here we can ob-

tain the same restrictions by varying parameters

restricting their usefulness.

It is important to note that a structure is not nec-

essarily a word model simply because it shares the

same signature as these word models. In particu-

lar, the interpretations of ‘Dw’, ‘⊳w’, ‘<w’, ‘⋊w’
and ‘⋉w’ are not arbitrary, but required to satisfy

the axioms of finite discrete linear orders under

the usual interpretation of the symbols. We re-

fer to these as the structural relations—they form

the ‘bones’ of the intended class of structures—

and we refer to those structures that satisfy the ax-

ioms as the intended models. These notions gen-

eralize to other classes of labeled relational struc-

tures which exhibit particular structural properties.

Word models corresponding to distinct strings dif-

fer only in the size of the domain and in the inter-

pretations of the Pσ.
1

In the core of this paper we temporarily turn

to sets of factors (defined in Section 3.3) as mod-

1Although in this case, the interpretations of the Pσ is
not entirely free, either, in that we require those interpreta-
tions, along with those of the end markers, to partition the
domain. Relaxing that actually leads to a more flexible notion
of string-like structures that are useful in many applications.

els, which characterize the freely generated struc-

tures over the given signature, and encapsulate the

theory of the intended structures in the notion of

“realizability” (Section 5.3) which picks out the

sets of factors that actually correspond to a par-

ticular well-formed structure. The core results are

valid independent of the definition of realizabil-

ity, which puts the focus squarely on the defin-

ing power of the quantifier-free logic, abstracting

away from properties that distinguish a class of in-

tended models from another with the same signa-

ture.

Henceforth, when we refer R-structures, we

will mean the class of intended structures, how-

ever that definition may be restricted. When we

discuss the freely generated structures over the

signature R, including those that may not be well-

formed, we will explicitly say so.

3.2 Homomorphisms and Embeddings

Suppose A and B are R-structures. The following
definitions are from (Hodges, 1993).

A homomorphism from A to B is a (total) func-
tion h : A → B such that:

R ∈ Ri and ~a ∈ RA ⇒ h(~a) ∈ RB.

Note that this only requires that the images of the

~a that are in the interpretation of R in A are in-
cluded in the interpretation of R in B. It says noth-
ing about other h(~a) that might also be included in
RB.

An embedding (or strong homomorphism) from

A to B is a (total) function h : A → B such that h
is a homomorphism that is is strengthened to

R ∈ Ri and ~a ∈ RA ⇔ h(~a) ∈ RB

We note the difference because “homomor-

phism” is often taken in the stronger sense, but we

necessarily need the weak sense. Otherwise if the

image of A in B includes any tuple h(~a) in the
domain of the interpretation of a relation R in B,
then A must include the pre-image of RB(h(~a)) in
RA as well. In this way the interpretation of R in
B would restrict the structure of A.

3.3 Neighborhoods and factors

The next few definitions are based on those in

Libkin (2004). The first two are ubiquitous in the

Theory of Finite Models.

Definition 1. Let A be a relational structure as
above and a ∈ A. The (domain of the) r-Ball



around a in A (denoted BAr ) is defined inductively
as follows:

BA0 (a) = {a}
BAi+1(a) = B

A
i (a) ∪

{a′ | (∃R ∈ R,
~a ∈ RA, a′′ ∈ BAi (a))

[a′, a′′ both occur in ~a]}

The members of BAi (a) are all the members of
A that are within distance i of a in the Gaifmann
graph of A.

Definition 2 (Connectivity). Let A be an R struc-
ture.

A is k-connected iff for all a ∈ A, BAk−1(a) =
A.

Note that every k-connected domain is also j-
connected for all j > k.

Definition 3 (k-Factor). Let A and B be R struc-
tures.

A is a k-factor of B iff2

1 : card(A) ≤ k
2 : A is card(A)-connected
3 : ∃h : A → B, a homomorphism

N.B. In this definition the set of k-factors of a
structure includes all of its j-factors for j ≤ k.

In general there will be many such h. Each one
picks out an occurrence of the factor A in B.

Let Fk(B) be the set of isomorphism classes of
the set of all k-factors of B. We will ignore the
difference between an isomorphism class and a

canonical representative of that class, so we can

consider this to be a set of structures over an

anonymous domain of cardinality k.

Proposition 1. If card(B) is finite then there are
only finitely many distinct (up to isomorphism) k-
factors of B.

Lemma 1. If R is relational and finite then the

cardinality of

Fk(R)
def
=

⋃

B

[Fk(B)], B an R-structure.

is finite.

2The term “factor” comes from the well known interpre-
tation of strings in a monoid over concatenation, where the
definition is immediate. We adopt this fully general defini-
tion in order to extend it to arbitrary relational structures, in-
dependent of their specific properties.

Proof Sketch. If R is relational and finite then

there are, up to isomorphism, only finitely many

R-structures of cardinality k. This is Exercise 6
(Pg. 10) of Hodges, an easy exercise.

We extend Fk to sets of structures in the stan-

dard way, as the union of the sets of k-factors of
the structures in the set.

3.4 Supposing k < n

Suppose A is an R-structure, card(A) = k and
R ∈ Rn ⊆ R, as above, and k < n. Then, by the
pigeon-hole-principle,

(∀~a ∈ RA)[(∃a ∈ A)[
a occurs in at least two places in ~a]].

Let’s say that an n-ary relation is anti-reflexive if
no individual occurs more than once in any of its

tuples. If all R ∈ R are anti-reflexive then, for all
R ∈ Rn>k, RA = ∅.

This is not deep. It just says that in the anti-

reflexive case (which will be common) k-factors
have nothing to say about relations of arity greater

than k.

3.5 Aspects of partial orders

The following is taken, primarily, from

MacLane and Birkhoff (1967, 1970). A par-

tial order is a set equipped with a partial ordering

relation ⊑ that is reflexive, transitive and antisym-
metric. If ⊑ is not antisymmetric, then it defines a
quasiorder.3

A lattice is a partial order that is closed with

respect to two binary operators: a greatest lower

bound (meet, ∧) and least upper bound (join, ∨).
Meets and joins are idempotent, associative and

commutative and satisfy the absorption law (x ∧
(x∨ y) = x = x∨ (x∧ y)). If they distribute over
each other, then the lattice is distributive.

All finite lattices have a unique minimum ele-

ment (⊥) and a unique maximum element (⊤). If
a lattice has a maximum and minimum element

and every element has a complement with respect

to these (x ∧ x = ⊥) and (x ∨ x = ⊤) then it is a
complemented lattice. If it is complemented and

distributive it is a Boolean lattice, equivalently,

Boolean algebra. If the lattice is Boolean then ev-

ery element x has a unique complement x.

3In our usage, the relationship between quasiorders and
partial orders is analogous to that between preorders and total
orders.



An element a of a Boolean algebra is an atom
iff a > ⊥ and there is no b such that a > b > ⊥.

If a set S is partially ordered by ⊑ and I is a
non-empty subset of S that is downward closed
(x ∈ I and y ⊑ x implies y ∈ I) and each pair
of elements in I has at least one upper bound in I ,
then I is an ideal. If the ideal includes a unique
maximum element a then it is the principal ideal
generated by a, which we will denote I(a). S and
⊑ will always be clear from the context.

(Principal) filters are defined dually: upward

closed and with lower bounds. We will denote the

principal filter generated by a as F(a).

4 Local and Strictly Local Sets of

Structures

Definition 4. Let R be a relational signature and

G be a subset of Fk(R).

Let L(G)
def
= {A | Fk(A) ⊆ G}.

Then L(G) is a strictly local set of R-structures.
A set S of R-structures is a locally definable set

of R-structures iff it is a Boolean combination of

strictly local sets.4

4.1 Local Logics

4.1.1 Well-Formed Formulae

Let wffk(R) be the set of Boolean formulae in
which the atomic formulae are the factors in

Fk(R). Usually we can be ambiguous about k, let-
ting it be determined by the formula itself.

4.1.2 Satisfaction with respect to

R-structures

Each R-structure provides a valuation of the for-

mulae in wffk(R) based on its set of factors: if
f ∈ Fk(R) and A is an R-structure then

A |= f
def
⇐⇒ f ∈ Fk(A).

Let Φ be a set of wff(R) formulae and A a R-
structure. Then

A |= Φ
def
⇐⇒ (∀ϕ ∈ Φ)[A |= ϕ]

4Note that Locally Definable sets of strings form the
classes that are usually referred to as Locally or Piecewise
Testable. In McNaughton and Papert (1971), these are spec-
ified by sets of permitted initial and final strings of length k,
usually k − 1 in later work, along with sets of permitted in-
ternal strings of length k. In this particular model-theoretic
setting the endmarkers obviate the need for three sets of per-
mitted factors, moreover “Testable” is more or less implied
and we have, for the most part, replaced it with “Definable”.
On the other hand, we have not been completely consistent
in doing so. This inconsistency should not prove to be overly
confusing.

and the models of Φ is the set

Mod(Φ)
def
= {A, a R-structure | A |= Φ}.

Φ is consistent iff Mod(Φ) 6= ∅.
Let Φ and Ψ be sets of wff(R) formulae. Φ

entails (logically implies) Ψ (Φ |= Ψ) iff, by
definition, Mod(Φ) ⊆ Mod(Ψ) (i.e., for all R-
structures A, A |= Φ ⇒ A |= Ψ). Φ and Ψ
are logically equivalent (Φ ≡ Ψ) iff, by definition,
Φ |= Ψ and Ψ |= Φ.

4.2 Local and Strictly Local Definitions

Let L = L(G) for some G ⊆ Fk(R) be a k-strictly
local set of R-structures. G is the set of permitted
factors; the structures in L(G) may not include any
factors but these. Let G = Fk(R) − G, the set
of forbidden factors of L. Since Fk(R) is finite,
G is as well. Then L includes all and only those
structures that do not include any of the factors in

G. Formally:

L = Mod(
∧

f∈G

[¬f ]).

Lemma 2. A set of R-structures is strictly k-local
iff it is the set of models of a conjunction of nega-

tive literals of wffk(R).
As usual, we interpret sets of formulae conjunc-

tively, thus a set of R-structures is strictly k-local
iff it is Mod(Φ) where Φ ⊆ {¬f | f ∈ Fk(R)}.

Lemma 3. Since a set of structures is local iff it is

a Boolean combination of Strictly Locally Defin-

able structures, a set of R-structures is k-Locally
Definable if it is Mod(Φ) for any Φ ⊆ wffk(R).

5 Definable sets of subsets of Fk(R)

Consider the space of subsets of Fk(R), partially
ordered by subset (this is the powerset algebra of

Fk(R)). It is a Boolean algebra in which ⊤ is
Fk(R), ⊥ is ∅ and the atoms are the singleton sets
of individual factors in Fk(R). We will refer to this
space of subsets as Bk(R). Since Fk(R) is finite,
Bk(R) is as well.

Note that Fk maps R-structures to elements

of Bk(R); it is many-one and generally not
onto. While we have restricted our attention

to R-structures that are well-formed, those well-

formedness properties show up in Bk(R) only in
the structure of the sets of factors. Bk(R) is the
freely generated powerset of the set of k-factors
that occur in any well-formed R-structure; those

subsets may or may not be in the range of Fk.



Let A ⊑k B
def
⇐⇒ Fk(A) ⊆ Fk(B). This in-

duces a quasiorder on R-structures, in which two

R-structures A and B are equivalent with respect
to ⊑k iff they are logically equivalent with respect
to wffk(R).

N.B. We denote the order relation of the pow-

erset algebra of Bk(R) by ‘⊆’ and from this point
on reserve ‘⊑’ for the quasiorder it induces in the
space of R-structures.

We are ultimately interested in the properties

of the definable sets in that space of R-structures,

but will derive them from the properties of the de-

finable subsets of Bk(R). One of the advantages
of Bk(R) is that it is finite, while the set of R-
structures is infinite. More importantly, it has a

simple and regular structure that is independent

of the details of the properties of well-formed R-

structures.

5.1 Satisfaction with respect to Sets of

k-factors

To that end, extend ‘|=’ to sets of k-factors in the
natural way: S ⊆ Fk(R) satisfies f ∈ Fk(R) iff
f ∈ S, with the semantics of the Boolean con-
nectives being defined in the usual way. In order

to distinguish definable sets of sets of factors from

definable sets of R-structures, we will refer to the

sets of sets of k-factors that satisfy a given ϕ ∈
wffk(R) as Mod

∗(ϕ) = {S ∈ Bk(R) | S |= ϕ}.
The semantics of the logical connectives ‘∧’,

‘∨’ and ‘¬’ correspond directly to the order-
theoretic operations ‘∧’, ‘∨’ and ‘·’. This is, of
course, no coincidence.

5.2 Strictly Local Sets of k-factors

Following Lemma 2, a subset of Bk(R) is strictly
local iff it is Mod∗(

∧

f∈Φ[¬f ]), for some Φ ⊆
Fk(R).

Note that if f ∈ Fk(R) then Mod
∗(f) is the

principal filter F(f) in Bk(R). Thus:

Lemma 4. A subset of Bk(R) is strictly local iff it
is the intersection of the complements of a (finite)

set of principal filters in Bk(R).

Let S be a strictly local subset of Bk(R). Since
filters are upward-closed, their complements are

downward-closed, as is S, the intersection of their

complements. The elements of S are necessarily

subsets of Φ (i.e., Fk(R) − Φ) and Φ ∈ S. Thus
S = I(Φ), the principal ideal generated by Φ.

Lemma 5. If S is a strictly local subset of Bk(R)
then S is a principal ideal in Bk(R).

Let S be any principal ideal in Bk(R). Since
ideals are downward closed, complements of ide-

als are necessarily upward closed. Let Υ(S) be
the set of minimal elements in S. Since Bk(R)
is finite, such minimal elements exist. Since it is

a Boolean algebra, each of those elements gen-

erates a principal filter in Bk(R). Then S =
⋃

υ∈Υ(S)[F(υ)]. Thus, S =
⋂

υ∈Υ(S)[F(υ)].
Since Bk(R) is finite, so is Υ, thus S is strictly
local.

Theorem 1. A subset of Bk(R) is Strictly Locally
Definable iff it is a principal ideal.

5.3 Realizability

So properties of the strictly local subsets of Bk(R)
are, as promised, extremely simple. What we need

now is an abstract characterization of the sets of

strictly local sets of R-structures based on these

properties.

Some caution is required here, since Fk, as a

map between the space of structures and the space

of sets of factors, is not onto. The fact that an

arbitrary set of factors is a subset of the set of

factors of an R-structure A of the intended type
does not necessarily mean that it is the set of fac-

tors of a well-formed R-structure—for the word

models of Example 1 the factors will need to in-

clude both ‘⋊’ and ‘⋉’, at least. That type of re-

quirement is not, in general, Strictly-Locally De-

finable. We have incorporated the properties of the

intended models implicitly by considering only

well-formed structures in our space of structures.

The complexity of defining what it means to be

well-formed is a meta-logical issue.

We do know that if L is a k-strictly local set of
R-structures then Fk(L) is a subset of a principal
ideal in Bk(R). Moreover, every R-structure that
maps into that ideal is in L. But not every ele-
ment of that ideal is the image of a well-formed

R-structure. Those that are, we refer to as realiz-

able.

Definition 5. A subset S of Fk(R) is realizable
iff there is some set of well-formed R-structures A

such that Fk(A) = S.

Every strictly local set of R-structures is the pre-

image, under Fk, of the set of realizable elements

in a principal ideal in Bk(R).



6 Structure of the Definable Sets of

R-structures

Recall that ⊑k is the quasiordering of R-structures
that corresponds to ⊆ in Bk(R).

6.1 A Closure Property of Strictly k-Locally

Definable Sets

Since Fk maps every strictly k-local set of R-
structures into an downward closed set in Bk(R)
if A ∈ L, a strictly k-local set of R-structures, and
B ⊑k A then B ∈ L as well. So k-strictly local
sets are all downward closed under ⊑k.

But we know much more about Fk(L) than it is
downward closed. It is, in fact, a subset of a princi-

pal ideal that is generated by some set of k-factors,
in particular the G of Definition 4, and that every
realizable subset of G is the image of some struc-
ture in L. So, k-strictly local sets will be closed
under any operation that does not increase the set

of k-factors of its operands and which preserves
realizability.

Lemma 6. If ⊕ is an operation on R-structures
such that the set of k-factors of the result is a
subset of the union of the sets of k-factors of the
operands and which preserves realizability, then

every strictly k-local set of R-structures is closed
under ⊕.

We will refer to such operations as being con-

servative.

This is a closure condition on strictly k-local
sets but not a characterization. The other direc-

tion of the characterization depends on the theory

of the well-formed R-structures, i.e., on the notion

of realizability.

6.2 Characterization of the Local and

Strictly Local Sets of Structures

6.2.1 Local Sets

Since ⊑k also corresponds to entailment with re-
spect to wffk(R), two R-structures are equivalent
with respect to ⊑k iff they are logically equiva-
lent with respect to wffk(R). Thus sets of k-local
R-structures cannot break the equivalence classes

with respect to ⊑k.
Even stronger, every such equivalence class is

determined by the set of factors of the structures

in the class.

Lemma 7. Let ≡k denote equivalence with re-

spect to ⊑k and [A]k
def
= {B | A ≡k B}. Then

[A]k = Mod(
∧

f∈Fk(A)
[f ]∧

∧

f∈Fk(R)−Fk(A)
[¬f ])

Theorem 2. A set of R-structures L is k-local iff
whenever B ≡k A then either both A,B ∈ L or
both A,B 6∈ L.

This is a completely general characterization.

Every k-local set of R-structures, regardless of the
theory of the structures, is the union of a set of

equivalence classes with respect to ≡k.

6.2.2 Strictly Local Sets

Note that, in the space of R-models, the inverse

of ⊑k is conservative, that is, if L is k-Strictly
Piecewise Locally Definable (SPLk), w ∈ L and
v ⊑k w then v ∈ L. By definition it does not
increase the set of k-factors, and v is trivially real-
izable. This is very close to a characterization of

SPLk, but not quite fully general.

For f ∈ Fk(R), with mild abuse of notation, let

F⊑k (f)
def
= {A ∈ R | f ∈ Fk(A)}. This is the

set of R-models, upper-closed with respect to ⊑,
that is generated by f . Similarly, let F⊑k (S), for

S ⊆ Fk(R) be the union of F
⊑
k (f) for f ∈ S.

Lemma 8. Each of the following is a consequence

of the preceding statements:

1. L ∈ SPLk.

2. L =
⋂

f∈S

[

F⊑k (f)
]

, S ⊆ Fk(R), finite.

3. w ∈ L and v ⊑k w ⇒ v ∈ L. (L is down-
ward closed with respect to ⊑k.)

4. L = F⊑k (S), for some S ⊆ Fk(R).

Proof. Each step is nearly immediate. By

Lemma 2, L ∈ SPLk ⇔ L = Mod(
∧

f∈G [¬f ]),
where G is finite, and each of the f ∈ G generates
an upper-closed set F⊑k (f). Since these are upper-
closed, their complements are downward closed

with respect to ⊑k, as is their intersection.
To see that 3 implies 4, the complement of

L is upper-closed with respect to ⊑. Then S,
the set of minimal points in L witnesses state-
ment 4. That such a set of minimal points exists

is a consequence of the fact that there are no infi-

nite properly descending sequences with respect to

⊑, which itself is a consequence of the finiteness
of Bk(R).

The only difference between statements 4 and 2

is the requirement that S be finite. This is where
the theory of the well-formed structures comes in.

For word models, it is a consequence of Higman’s

Lemma (Higman, 1952) which says that there are



no infinite sequences of strings that are pairwise

unrelated by ⊑. For certain classes of tree mod-
els, it is a consequence of Kruskal’s Tree Theo-

rem (Kruskal, 1960), which is similar.

Theorem 3 (Characterization of Strictly Local

Sets of Word Models). A set of word models is

SPLk iff it is downward closed with respect to ⊑k.

7 Strictly Piecewise Local Stringsets

SPL is the class of stringsets corresponding to

the class of strictly local word models of Exam-

ple 1. Since these models are linear, factors can

be resolved into blocks of positions connected by

‘⊳’ which are, themselves, connected by ‘<’. In
the terminology of the Piecewise Local hierarchy,

these are subsequences of substrings. Rather than

a single parameter to indicate the size of a factor

we use j to denote the maximum number of sub-
strings and k to denote the maximum size of the
substrings: SPLj,k.

Note that SPL1,k coincides with the well known

class of SLk stringsets, which are all and only

those strictly definable in the reduct of our word

models that eliminates the precedence relation.

And SPLj,1 coincides with the SPj stringsets

which are all and only those strictly definable in

the reduct of our word models that eliminates suc-

cessor and the end markers.5

In what follows we use Fj,k and ⊑j,k rather than
the less precise Fjk+j−1 and ⊑jk+j−1.

We know, already that SPLj,k sets are closed un-

der ⊑j,k, and that M
⊳,<
Σ (v) ⊑j,k M

⊳,<
Σ (w) iff

Fj,k(M
⊳,<
Σ (v)) ⊆ Fj,k(M

⊳,<
Σ (w)) (modulo real-

izability), and that, more generally, they are closed

under every operation that is conservative in the

sense of Lemma 6. What we need is a natural oper-

ation on strings that is conservative. That depends

on realizability.

7.1 Realizability of sets of Fj,k factors

Definition 6 (Minimally Realizable). A set of fac-

tors S ⊆ Fj,k(M
⊳,<
Σ ) is minimally realizable iff

there is a sequence of subsets of S: q0 ( q1 (
· · · ( qn ( qn+1 such that:

6

5Since the contiguous blocks of a (j, 1)-factor are all sin-
gle symbols the presence of ‘⊳’ is inconsequential for the
definable sets. Since ⋊ < x < ⋉ for all positions x in the
string, their presence is inconsequential as well.

6We denote these subsets as qi to suggest the connection
to a finite state automaton, but we have no need to actually
construct such an automaton.

q0 = {⋊}
qi+1 = Fj,k(wi · σi+1),

for some wi ∈ {⋊}Σ
∗, σi+1 ∈ Σ

such that Fj,k(wi) = qi
qn+1 = Fj,k(wn ·⋉),

for some wn ∈ {⋊}Σ
∗

such that Fj,k(wn) = qn
qn+1 = S.

In this case the S is the set of Fj,k-factors of
M⊳,<Σ (w), where w = σ1σ2 · · · σn, and w is
a minimal witness that such a well-formed word

model exists.

Note that every word model that is equivalent

to w with respect to ⊑j,k and also a witness of the
realizability of S but only those that have the same
length as w are minimal witnesses.

Every w ∈ Σ∗ is a witness of the realizability of
Fj,k(M

⊳,<
Σ (w)). If |w| ≤ |v| for every v ∈ [w]j,k

then it is a minimal witness.

Proposition 2. A subset of Fj,k(M
⊳,<
Σ ) is realiz-

able iff it is the union of a finite set of minimally

realizable subsets of Fj,k(M
⊳,<
Σ ).

7.2 Some closure properties of SPLj,k sets

Using the characterization of Theorem 3 to prove

non-definability in SPLj,k can be cumbersome.

The following closure conditions, extensions of

the characterizations in earlier work on SLk and

SPj , may be somewhat easier to apply.

Theorem 4 (Generalized Suffix-Substitution Clo-

sure). Suppose L is SPLj,k.
Then if

• u1 · x · v1 ∈ L and u2 · x · v2 ∈ L, where
|x| = k − 1,

• and either Fj−1,k(u1) ⊆ Fj−1,k(u2) or
Fj−1,k(v2) ⊆ Fj−1,k(v1)

then u1 · x · v2 ∈ L.

Proof. From Lemma 6 we know that if substi-

tution of suffixes under these conditions is con-

servative then SPLj,k is closed with respect to

it. To see that it does not increase the set of

Fj,k(M
⊳,<
Σ ) note, to begin with, that every F1,k

factor in u1 ·x ·v2 is also in either u1 ·x or in x ·v2,
thus in F1,k(u1 ·x · v1)∪F1,k(u2 ·x · v2). Suppose
f1 · f2 is a (j, k)-factor of u1 · x · v2, and that f1
is a (i, k)-factor of u1 and f2 a (j − i, k)-factor of
x ·v2 for some i > 1 (otherwise it is necessarily in
either u1 ·x·v1 or u2 ·x·v2). Since, by Definition 3,



Fj−1,k(w) includes Fj−i,k(w) for all strings w and
i > 1, f1 ∈ Fj−1,k(u1), f2 ∈ Fj−1,k(v1) and
f1 · f2 ∈ Fj,k(u1 · x · v1).

To see that realizability is maintained, note that

u1 · x · v2 is a minimal witness in which the initial
segment (up through x) of the sequence of subsets
of factors is from the minimal witness for u1x ·
v1 and the final segment (from x on) is from the
minimal witness for u2 · xv2.

Theorem 5 (Generalized Subsequence Closure).

Suppose w ∈ L ∈ SPLj,k.
Then if

• w = u1x1vx2u2, where either |x1| = |x2| =
k−1 or u1 = ε and |x1| < k−1 or u2 = ε
and |x2| < k − 1

• and F1,k(x1x2) ⊆ F1,k(x1vx2)

then u1x1x2u2 ∈ L.

Proof. First of all, note that whenever f is in
F1,k(u1x1x2u2) then either f ∈ F1,k(u1x1) or
f ∈ F1,k(x1x2) or f ∈ F1,k(x2u2). In each
case f is also in ∈ F1,k(u1x1vx2u2). Thus the
blocks of k consecutive factors in u1x1x2u2 oc-
cur in the same order in u1x1vx2u2. Consequently
Fj,k(u1x1x2u2) ⊆ Fj,k(u1x1vx2u2).

That this preserves realizability follows from

the same reasoning as for Generalized Suffix Sub-

stitution Closure.

8 Learnability

Strictly Local, Strictly Piecewise and Strictly

Piecewise Local Stringsets were studied in a

somewhat different form in Heinz (2007), where

they were shown to be learnable in the limit from

positive data in the sense of Gold (1967). In Heinz

(2010b) he generalizes the learning algorithm to a

broad class of stringsets on the based on the notion

of string extension.

Let A be a class of objects (factors, for exam-
ple). A string extension function is a total function

f , mapping Σ∗ to finite subsets of A. Each finite
subset of A can be interpreted as a grammar G by
letting L(G) = {w ∈ Σ∗ | f(w) ⊆ G}. Each
string extension function f determines a class of
stringsets Lf , the class of all stringsets licensed
by subsets of A in the range of f .

Clearly Fj,k for word models is a string exten-

sion function, with A being the set of all factors
of word models, and LFj,k is the class of Strictly

Local, Strictly Piecewise or Strictly Piecewise Lo-

cal stringsets, depending on j and k. If we take
A to be the powerset of the set of all factors of

word models then f(w)
def
= {Fj,k(w)} is one, as

well, and Lf is the class of Locally, Piecewise and
Piecewise Locally Definable sets.

A text for a stringset L is an enumeration of
L ∪ {#} in arbitrary order, possibly with repeats.
If t is a text, then t[i] denotes the initial segment
t(0) . . . t(i). The learning function φ for a string
extension function f maps initial segments of a
text to finite subsets of A:

φf (t[i]) =







∅ if i = −1
φf (t[i− 1]) if t(i) = #
φf (t[i− 1]) ∪ f(t(i)) otherwise.

For sets of word models, this provides a practical

learning algorithm.

More generally, Fk for arbitrary R structures is
an extension function for that class of structures.

The issue in those cases is where the the enumer-

ation of members of the set comes from. For non-

phonotactic linguistic applications, it essentially

requires an annotated sample. If the sample is less

than fully characteristic, the learned grammar will

undergenerate. On the other hand, in all cases it is

useful even if the set is non-PLT. It will learn a set

of constraints that define the minimal PLT approx-

imation of that set. For an example of the useful-

ness of these constraints see Rogers and Lambert

(2017, to appear).

9 Some Examples from Phonology

In Section 2 we discussed the automata-theoretic

patterns in the StressTyp2 database. The six that

are Star-Free and require something more than

SL+co-SL+SP can each be shown to include just
one additional LT constraint of the form if stress

falls on a final syllable that is heavy, then a syllable

of some other type (an unstressed heavy, for ex-

ample) does not occur. Formally these constraints

can be expressed as H́⋉→¬X, which is logically
equivalent to ¬(X ∧ H́⋉). Since if this fails the X
must precede the ultimate H́, we can capture this
in SPL2,2 with the constraint¬(X < H́⋉).

Since both SL and SP constraints are express-

ible as SPL constraints all of these stress patterns,

other than the two lects of Arabic, are definable in

SPL + co-SL. This is significant from a cognitive
perspective because in order to check constraints

of these forms a mechanism needs only to attend



to factors that actually are present, in isolation, in

the input string. (See Rogers et al. (2012) for more

on this notion of cognitive complexity.)

9.1 Separating PLT from SF and TSL

In their simplest form (Heinz et al., 2011), Tier-

based Strictly Local (TSL) constraints are based

on a subset of the input alphabet (the tier al-

phabet) along with strictly local constraints in

terms of that alphabet. Operationally, the in-

put string is subjected to an alphabetic homo-

morphism which erases all symbols except for

those in the tier alphabet and the remaining string

is checked against the SL constraint. The TSL

stringsets are all Star-free, properly include the

SL stringsets but are incomparable with the LT,

PT and SP stringsets, although the intersection

of TSL and SP includes long distance phonotac-

tic patterns derived from asymmetric assimilation

processes (Heinz, 2010a).

The canonical separation between TSL and

these classes is long distance phonotactic dissim-

ulation patterns. As an example of the application

of the closure conditions in Section 7.2, we can

show that these patterns are not SPL or even PLT.

Latin liquid dissimulation (LLD): every pair

of ‘l’s is separated by at least one ‘r’ and every

pair of ‘r’s is separated by at least one ‘l’:

(∀x, y)[ (x < y ∧ l(x) ∧ l(y))
→(∃z)[x < z ∧ z < y ∧ r(z)] ]

∧
(∀x, y)[ (x < y ∧ r(x) ∧ r(y))

→(∃z)[x < z ∧ z < y ∧ l(z)] ]

This definition demonstrates that LLD is SF. It is

also TSL based on the tier alphabet {l, r} and the
constraint ¬(rr) ∧ ¬(ll).

We can demonstrate that it is not SPLj,k for any

j and k using either Generalized Suffix Substitu-
tion Closure (GSSC) or Generalized Subsequence

Closure (GSSeqC),

9.1.1 Using GSSC

Let

w1 = ⋊(s
jklsjkr)jk · sjk · lsjkr(sjklsjkr)⋉

and

w2 = ⋊(s
jklsjkr)jksjkl · sjk · r(sjklsjkr)⋉.

Both w1, w2 ∈ L, but

⋊(sjklsjkr)jk · sjk · r(sjklsjkr)⋉ 6∈ L.

Therefore, LLD is not SPLj,k for any j and k.

9.1.2 Using GSSeqC

Let w3 ∈ L be a similar string, divided into
u1x1vx2u2 as follows:

w3 =
⋊(sjklsjkr)jk · sk−1 · sklsk · sk−1 · r(sjklsjkr)⋉

Then |x1| = |x2| = k − 1 and F1,k(x1x2) ⊆
F1,k(x1vx2), but
w4 = u1x1x2u2

= ⋊(sjklsjkr)jk · sk−1 · sk−1 · r(sjklsjkr)⋉
is not in L.

9.1.3 Using ≡(j,k).

It is not hard to see that [W3](j,k) = [W4](j,k)
(equivalently Fj,k(W3) = Fj,k(W4)), where W3
and W4 are word models of w3 and w4 equiva-
lently. But w3 satisfies LLD, while w4 does not.

10 Conclusion

We have explored the model theory of a type of

propositional logic based on factors (connected

fragments) of structures defined as labeled purely

relational models and given characterizations of

the Locally and Strictly Locally Definable sets of

these structures. Using those tools, we have de-

rived a characterization of the SPL and PLT de-

finable stringsets, which completes the character-

ization of the propositional levels of the main se-

quence of the Piecewise Local hierarchy (See Fig-

ure 1).

SPL extends SL and SP by adding, on the one

hand, precedence constraints and, on the other, ad-

jacency constraints. The interplay of constraints

of these types motivated the original definition of

TSL and continues to motivate extensions of the

class. But TSL remains incomparable with the

sub-Star-Free part of the hierarchy. Ultimately, we

hope to find a class of structures that will allow us

to incorporate TSL in a natural way.

More importantly, we expect that these model-

theoretic tools, when applied to trees and other

types of labeled graphs will provide insight into lo-

cal accounts of autosegmental structures (Jardine,

2017) and other multi-tiered structures as well

as model-theoretic accounts of syntactic con-

straints (e.g. Rogers (1998); Graf (2018)).

Acknowledgments

The authors are indebted to Jeff Heinz, Larry Moss

and the anonymous referees for detailed and ex-

tremely helpful comments.



References

D. Beauquier and Jean-Eric Pin. 1991. Languages and
scanners. Theoretical Computer Science, 84:3–21.

J.A. Brzozowski and R. Knast. 1978. The dot-depth
hierarchy of star-free languages is infinite. Journal
of Computer and System Sciences, 16(1):37 – 55.

J.A. Brzozowski and I. Simon. 1973. Characterization
of locally testable events. Discrete Math, 4:243–
271.

J. R. Büchi. 1960. Weak second-order arithmetic and
finite automata. Zeitschrift für mathematische Logik
und Grundlagen der Mathematik, 6:66–92.

Calvin C. Elgot. 1961. Decision problems of finite au-
tomata design and related arithmetics. Transactions
of the American Mathematical Society, 98:21–51.

R. W. Goedemans, Jeffrey Heinz,
and Harry van der Hulst. 2015.
http://st2.ullet.net/files/files/

st2-v1-archive-0415.tar.gz. Retrieved
24 Jun 2015.

E.M. Gold. 1967. Language identification in the limit.
Information and Control, 10:447–474.

Thomas Graf. 2018. Why movement comes for free
once you have adjunction. In Proceedings of CLS
53, pages 117–137.

Jeffrey Heinz. 2007. The Inductive Learning of Phono-
tactic Patterns. Ph.D. thesis, University of Califor-
nia, Los Angeles.

Jeffrey Heinz. 2010a. Learning long-distance phono-
tactics. Linguistic Inquiry, 41(4):623–661.

Jeffrey Heinz. 2010b. String extension learning. In
Proceedings of the 48th Annual Meeting of the As-
sociation for Computational Linguistics, pages 897–
906, Uppsala, Sweden. Association for Computa-
tional Linguistics.

Jeffrey Heinz, Chetan Rawal, and Herbert G. Tan-
ner. 2011. Tier-based strictly local constraints for
phonology. In Proceedings of the 49th Annual Meet-
ing of the Association for Computational Linguis-
tics, pages 58–64, Portland, Oregon, USA. Associa-
tion for Computational Linguistics.

Graham Higman. 1952. Ordering by divisibility in ab-
stract algebras. Proceedings of the London Mathe-
matical Society, s3-2(1):326–336.

Wilfird Hodges. 1993. Model Theory. Cambridge Uni-
versity Press, Cambridge, UK.

Adam Jardine. 2017. The local nature of tone-
association patterns. Phonology, 34:385–405.

J. B. Kruskal. 1960. Well-quasi-ordering, the tree theo-
rem, and Vazsonyi’s conjecture. Transactions of the
American Mathematical Society, 95:210–225.

Leonid Libkin. 2004. Elements of Finite Model
Theory. Texts in Theoretical Computer Science.
Springer, Berlin and New York.

Saunders MacLane and Garrett Birkhoff. 1967, 1970.
Algebra. Macmillan, New York.

Robert McNaughton and Seymour Papert. 1971.
Counter-Free Automata. MIT Press.

Yu. T. Medvedev. 1964. On the class of events repre-
sentable in a finite automaton. In Edward F. Moore,
editor, Sequential Machines; Selected Papers, pages
215–227. Addison-Wesley. Originally published in
Russian in Avtomaty, 1956, 385–401.

James Rogers. 1998. A Descriptive Approach to
Language-Theoretic Complexity. CSLI Publica-
tions, Stanford, CA.

James Rogers, Jeff Heinz, Margaret Fero, Jeremy
Hurst, Dakotah Lambert, and Sean Wibel. 2012.
Cognitive and sub-regular complexity. In Glyn Mor-
rill and Mark-Jan Nederhof, editors, Formal Gram-
mar 2012, volume 8036 of Lecture Notes in Com-
puter Science, pages 90–108. Springer.

James Rogers, Jeffrey Heinz, Gil Bailey, Matt Edlef-
sen, Molly Visscher, David Wellcome, and Sean
Wibel. 2010. On languages piecewise testable in the
strict sense. In Christian Ebert, Gerhard Jäger, and
Jens Michaelis, editors, The Mathematics of Lan-
guage: 10th and 11th Biennial Conference, MOL
10, Los Angeles, CA, USA, July 28-30, 2007, and
MOL 11, Bielefeld, Germany, August 20-21, 2009,
Revised Selected Papers, pages 255–265. Springer
Berlin Heidelberg, Berlin, Heidelberg.

James Rogers and Dakotah Lambert. 2017. Extracting
forbidden factors from regular stringsets. In Pro-
ceedings of the 15th Meeting on the Mathematics of
Language, pages 36–46. Association for Computa-
tional Linguistics.

James Rogers and Dakotah Lambert. to appear.
Extracting subregular constraints from regular
stringsets. In press.

M.P. Schützenberger. 1965. On finite monoids hav-
ing only trivial subgroups. Information and Control,
8(2):190 – 194.

Imre Simon. 1975. Piecewise testable events. In
Automata Theory and Formal Languages: 2nd
Grammatical Inference conference, pages 214–222,
Berlin. Springer-Verlag.

Howard Straubing. 1985. Finite semigroup varieties of
the form v∗d. Journal of Pure and Applied Algebra,
36:53–94.

Howard Straubing. 1994. Finte Automata, Formal
Logic, and Circuit Complexity. "Birkhäuser".

Wolfgang Thomas. 1978. The theory of successor
with and extra predicate. Mathematische Annalen,
237:121–232.

https://www.aclweb.org/anthology/P10-1092


Wolfgang Thomas. 1982. Classifying regular events in
symbolic logic. Journal of Computer and Systems
Sciences, 25:360–376.

Denis Thérien and Alex Weiss. 1985. Graph congru-
ences and wreath products. Journal of Pure and Ap-
plied Algebra, 36:205 – 215.


